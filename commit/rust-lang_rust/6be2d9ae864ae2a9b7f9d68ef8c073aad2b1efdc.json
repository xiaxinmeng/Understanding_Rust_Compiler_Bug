{"sha": "6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZTJkOWFlODY0YWUyYTliN2Y5ZDY4ZWY4YzA3M2FhZDJiMWVmZGM=", "commit": {"author": {"name": "John Levon", "email": "levon@movementarian.org", "date": "2019-08-02T08:16:20Z"}, "committer": {"name": "John Levon", "email": "levon@movementarian.org", "date": "2019-08-02T08:37:23Z"}, "message": "provide thread name to OS for Solarish systems", "tree": {"sha": "3e9ab275dcabf4d275ba9ec9111cfcd7b60ab7cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e9ab275dcabf4d275ba9ec9111cfcd7b60ab7cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc", "html_url": "https://github.com/rust-lang/rust/commit/6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc/comments", "author": {"login": "jlevon", "id": 21101340, "node_id": "MDQ6VXNlcjIxMTAxMzQw", "avatar_url": "https://avatars.githubusercontent.com/u/21101340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlevon", "html_url": "https://github.com/jlevon", "followers_url": "https://api.github.com/users/jlevon/followers", "following_url": "https://api.github.com/users/jlevon/following{/other_user}", "gists_url": "https://api.github.com/users/jlevon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlevon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlevon/subscriptions", "organizations_url": "https://api.github.com/users/jlevon/orgs", "repos_url": "https://api.github.com/users/jlevon/repos", "events_url": "https://api.github.com/users/jlevon/events{/privacy}", "received_events_url": "https://api.github.com/users/jlevon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jlevon", "id": 21101340, "node_id": "MDQ6VXNlcjIxMTAxMzQw", "avatar_url": "https://avatars.githubusercontent.com/u/21101340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlevon", "html_url": "https://github.com/jlevon", "followers_url": "https://api.github.com/users/jlevon/followers", "following_url": "https://api.github.com/users/jlevon/following{/other_user}", "gists_url": "https://api.github.com/users/jlevon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlevon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlevon/subscriptions", "organizations_url": "https://api.github.com/users/jlevon/orgs", "repos_url": "https://api.github.com/users/jlevon/repos", "events_url": "https://api.github.com/users/jlevon/events{/privacy}", "received_events_url": "https://api.github.com/users/jlevon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "435236b8877cdb98c82eaebfb7887782277265c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/435236b8877cdb98c82eaebfb7887782277265c5", "html_url": "https://github.com/rust-lang/rust/commit/435236b8877cdb98c82eaebfb7887782277265c5"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "122fc11ec2725941f990a1325faba346581ad41e", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=6be2d9ae864ae2a9b7f9d68ef8c073aad2b1efdc", "patch": "@@ -122,8 +122,21 @@ impl Thread {\n                                      name.as_ptr() as *mut libc::c_void);\n         }\n     }\n+\n+    #[cfg(target_os = \"solaris\")]\n+    pub fn set_name(name: &CStr) {\n+        weak! {\n+            fn pthread_setname_np(\n+                libc::pthread_t, *const libc::c_char\n+            ) -> libc::c_int\n+        }\n+\n+        if let Some(f) = pthread_setname_np.get() {\n+            unsafe { f(libc::pthread_self(), name.as_ptr()); }\n+        }\n+    }\n+\n     #[cfg(any(target_env = \"newlib\",\n-              target_os = \"solaris\",\n               target_os = \"haiku\",\n               target_os = \"l4re\",\n               target_os = \"emscripten\","}]}