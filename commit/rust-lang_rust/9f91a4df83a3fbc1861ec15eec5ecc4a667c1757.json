{"sha": "9f91a4df83a3fbc1861ec15eec5ecc4a667c1757", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOTFhNGRmODNhM2ZiYzE4NjFlYzE1ZWVjNWVjYzRhNjY3YzE3NTc=", "commit": {"author": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2017-06-20T23:04:38Z"}, "committer": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2017-06-20T23:04:38Z"}, "message": "Redox: Use create() instead of open() when setting env variable", "tree": {"sha": "d7404537d4007d032deeed50b95f47d2b2863f4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7404537d4007d032deeed50b95f47d2b2863f4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f91a4df83a3fbc1861ec15eec5ecc4a667c1757", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEECYv1aaNg4jTOK4YaSSThDhmbWVkFAllJqiQACgkQSSThDhmb\nWVmV+wf9GVOmPh2OEjSzTDpZ6XzwVRsNXVQQQn9kwk6nYeKj6j6UPNmgGRQ1Hglo\nJ249GihVi1tvaiZS6M6q3tT3wFmXUxbT9ZdU5lmvv9Hz04esCGz/I+4755/0bp0B\nIPfrC+3177O5qkC6+nE8fIKKDvN45VJe7ggs9ZEfeIKSbF1UxLmZHEO5qRVRO4JY\nBqHM8vc7qc56NEz1E7D9SqBpfCAq88o6KhETJr20wAevwkV9+tqKRyzz6GqRxRhP\nn6xn53pUUdXeIXd7aBYdDx8lmoMAEx7f0oH0l2vm8kbXlqO5J5aCWC/MmXjk5UUN\n3AtGzObSPDnCwy2twUrwBZlv1h1kgQ==\n=IgfO\n-----END PGP SIGNATURE-----", "payload": "tree d7404537d4007d032deeed50b95f47d2b2863f4b\nparent 247a0184ff972f1205017185f6917a03b15e7be4\nauthor Ian Douglas Scott <ian@iandouglasscott.com> 1497999878 -0700\ncommitter Ian Douglas Scott <ian@iandouglasscott.com> 1497999878 -0700\n\nRedox: Use create() instead of open() when setting env variable\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f91a4df83a3fbc1861ec15eec5ecc4a667c1757", "html_url": "https://github.com/rust-lang/rust/commit/9f91a4df83a3fbc1861ec15eec5ecc4a667c1757", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f91a4df83a3fbc1861ec15eec5ecc4a667c1757/comments", "author": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "247a0184ff972f1205017185f6917a03b15e7be4", "url": "https://api.github.com/repos/rust-lang/rust/commits/247a0184ff972f1205017185f6917a03b15e7be4", "html_url": "https://github.com/rust-lang/rust/commit/247a0184ff972f1205017185f6917a03b15e7be4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e38b7b29f4837e1de389bb51722d245ba78c62c7", "filename": "src/libstd/sys/redox/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f91a4df83a3fbc1861ec15eec5ecc4a667c1757/src%2Flibstd%2Fsys%2Fredox%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f91a4df83a3fbc1861ec15eec5ecc4a667c1757/src%2Flibstd%2Fsys%2Fredox%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fos.rs?ref=9f91a4df83a3fbc1861ec15eec5ecc4a667c1757", "patch": "@@ -179,7 +179,7 @@ pub fn getenv(key: &OsStr) -> io::Result<Option<OsString>> {\n \n pub fn setenv(key: &OsStr, value: &OsStr) -> io::Result<()> {\n     if ! key.is_empty() {\n-        let mut file = ::fs::File::open(&(\"env:\".to_owned() + key.to_str().unwrap()))?;\n+        let mut file = ::fs::File::create(&(\"env:\".to_owned() + key.to_str().unwrap()))?;\n         file.write_all(value.as_bytes())?;\n         file.set_len(value.len() as u64)?;\n     }"}]}