{"sha": "db1923159692818becfc0fe386f19cb0f6151855", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMTkyMzE1OTY5MjgxOGJlY2ZjMGZlMzg2ZjE5Y2IwZjYxNTE4NTU=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-27T01:14:36Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-27T21:43:35Z"}, "message": "Mess around with the casting in trans_bind.", "tree": {"sha": "9ce01c087965a4f1a7c62b4a07e5fadbec6e55bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ce01c087965a4f1a7c62b4a07e5fadbec6e55bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db1923159692818becfc0fe386f19cb0f6151855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db1923159692818becfc0fe386f19cb0f6151855", "html_url": "https://github.com/rust-lang/rust/commit/db1923159692818becfc0fe386f19cb0f6151855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db1923159692818becfc0fe386f19cb0f6151855/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3f96480968a7c91738414158a61e4f44b402797", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f96480968a7c91738414158a61e4f44b402797", "html_url": "https://github.com/rust-lang/rust/commit/e3f96480968a7c91738414158a61e4f44b402797"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "e6e777100929005be69207496e391526f36b2ba1", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/db1923159692818becfc0fe386f19cb0f6151855/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1923159692818becfc0fe386f19cb0f6151855/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=db1923159692818becfc0fe386f19cb0f6151855", "patch": "@@ -4514,8 +4514,10 @@ fn trans_bind_thunk(cx: &@local_ctxt, sp: &span, incoming_fty: &ty::t,\n     let lltargetfn =\n         bcx.build.GEP(lltarget.val, ~[C_int(0), C_int(abi::fn_field_code)]);\n \n-    // Cast the outgoing function to the appropriate type (see the comments in\n-    // trans_bind below for why this is necessary).\n+    // Cast the outgoing function to the appropriate type.\n+    // This is necessary because the type of the function that we have\n+    // in the closure does not know how many type descriptors the function\n+    // needs to take.\n     let lltargetty =\n         type_of_fn_from_ty(bcx_ccx(bcx), sp, outgoing_fty, ty_param_count);\n     lltargetfn = bcx.build.PointerCast(lltargetfn, T_ptr(T_ptr(lltargetty)));\n@@ -4625,21 +4627,12 @@ fn trans_bind_1(cx: &@block_ctxt, f: &@ast::expr, f_res: &lval_result,\n     bcx = bindings_tydesc.bcx;\n     bcx.build.Store(bindings_tydesc.val, bound_tydesc);\n \n-    // Determine the LLVM type for the outgoing function type. This\n-    // may be different from the type returned by trans_malloc_boxed()\n-    // since we have more information than that function does;\n-    // specifically, we know how many type descriptors the outgoing\n-    // function has, which type_of() doesn't, as only we know which\n-    // item the function refers to.\n-    let llfnty = type_of_fn_from_ty(bcx_ccx(bcx), cx.sp,\n-                                    outgoing_fty, ty_param_count);\n-    let llclosurety = T_ptr(T_fn_pair(*bcx_ccx(bcx), llfnty));\n-\n     // Store thunk-target.\n     let bound_target =\n         bcx.build.GEP(closure, ~[C_int(0), C_int(abi::closure_elt_target)]);\n-    let src = bcx.build.Load(f_res.res.val);\n-    bound_target = bcx.build.PointerCast(bound_target, llclosurety);\n+    let llclosurety = T_ptr(type_of(bcx_ccx(cx), cx.sp, outgoing_fty));\n+    let src_loc = bcx.build.PointerCast(f_res.res.val, llclosurety);\n+    let src = bcx.build.Load(src_loc);\n     bcx.build.Store(src, bound_target);\n \n     // Copy expr values into boxed bindings."}]}