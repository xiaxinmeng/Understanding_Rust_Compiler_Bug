{"sha": "9d4e17ae1adb4793071836699ae050c4af5d67f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNGUxN2FlMWFkYjQ3OTMwNzE4MzY2OTlhZTA1MGM0YWY1ZDY3Zjk=", "commit": {"author": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2018-12-04T09:23:30Z"}, "committer": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2018-12-04T09:23:30Z"}, "message": "Remove support for proc macro doc inlining", "tree": {"sha": "f8dd89f811f97b37065e2e1f6954449c64189db7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8dd89f811f97b37065e2e1f6954449c64189db7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d4e17ae1adb4793071836699ae050c4af5d67f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEt/EOFp+yWvA8Dk28qHvO5SBc5IkFAlwGR7EACgkQqHvO5SBc\n5IlXcQgAg1NswYU8mRr02ObGi8KKH6v1Bn4daUDi/xpHn/rIj3wCjDVDvA4bEVh4\n+mG1qF81ShEW9g+rL/ygfZxUm7LPLJzEMXICsViDt8S0zuGB9fCpNLY2FuKyrybn\nH7I1yGyb+6f7RJl9xA9s+Snqh1LsGoBulzlhBQBPCuwH5CYPOWXuB3nSgsQF3tec\n29JcfPo3+MNuGuQnwTs5P9VG8+u1DkHxMQqhkiq8ZaA6LGpCMOMaaO2thLSk0XDs\n3YqnA7Gv5vskVi7zHlnc/2mz7kDlUR1VJcAkb70AK9R8D61XOA3NXFEsj3AA5FjH\nxJE9WDjVOXif0GDAI165Ruw55O5pEA==\n=Rn5G\n-----END PGP SIGNATURE-----", "payload": "tree f8dd89f811f97b37065e2e1f6954449c64189db7\nparent 11fb023d4f8d9ab5c4063b767a26cab87c53653f\nauthor Georg Semmler <georg_semmler_05@web.de> 1543915410 +0100\ncommitter Georg Semmler <georg_semmler_05@web.de> 1543915410 +0100\n\nRemove support for proc macro doc inlining\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d4e17ae1adb4793071836699ae050c4af5d67f9", "html_url": "https://github.com/rust-lang/rust/commit/9d4e17ae1adb4793071836699ae050c4af5d67f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d4e17ae1adb4793071836699ae050c4af5d67f9/comments", "author": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11fb023d4f8d9ab5c4063b767a26cab87c53653f", "url": "https://api.github.com/repos/rust-lang/rust/commits/11fb023d4f8d9ab5c4063b767a26cab87c53653f", "html_url": "https://github.com/rust-lang/rust/commit/11fb023d4f8d9ab5c4063b767a26cab87c53653f"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "49cecd5b04bbcd08ee2f3ef8d305df2129e035ff", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9d4e17ae1adb4793071836699ae050c4af5d67f9/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d4e17ae1adb4793071836699ae050c4af5d67f9/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=9d4e17ae1adb4793071836699ae050c4af5d67f9", "patch": "@@ -106,23 +106,13 @@ pub fn try_inline(cx: &DocContext, def: Def, name: ast::Name, visited: &mut FxHa\n             clean::ConstantItem(build_const(cx, did))\n         }\n         // FIXME: proc-macros don't propagate attributes or spans across crates, so they look empty\n-        Def::Macro(did, MacroKind::Derive) |\n         Def::Macro(did, MacroKind::Bang) => {\n             let mac = build_macro(cx, did, name);\n-            debug!(\"try_inline: {:?}\", mac);\n-\n-            match build_macro(cx, did, name) {\n-                clean::MacroItem(..) => {\n-                    record_extern_fqn(cx, did, clean::TypeKind::Macro);\n-                    mac\n-                }\n-                clean::ProcMacroItem(..) => {\n-                    record_extern_fqn(cx, did, clean::TypeKind::Derive);\n-                    mac\n-                }\n-                _ => {\n-                    return None;\n-                }\n+            if let clean::MacroItem(..) = mac {\n+                record_extern_fqn(cx, did, clean::TypeKind::Macro);\n+                mac\n+            } else {\n+                return None;\n             }\n         }\n         _ => return None,"}]}