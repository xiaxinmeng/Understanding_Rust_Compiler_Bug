{"sha": "0f83753934b84efb6b3263270f625f0f44c208f2", "node_id": "C_kwDOAAsO6NoAKDBmODM3NTM5MzRiODRlZmI2YjMyNjMyNzBmNjI1ZjBmNDRjMjA4ZjI", "commit": {"author": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-20T22:43:17Z"}, "committer": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-20T22:43:17Z"}, "message": "feat: change error message", "tree": {"sha": "c20f965d75152ea8d60f59ff94eb50ff6556ee11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c20f965d75152ea8d60f59ff94eb50ff6556ee11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f83753934b84efb6b3263270f625f0f44c208f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEhJzmO046LuvaNO3WIPoWCbA7HW0FAmI3rgUACgkQIPoWCbA7\nHW2zRBAAiIjtZq+WnzNyzdlgq7gtBmHuYS2sd6grB/Mwy1zz3o1EaPUTQyCR2d9P\n7yx3zi4c5qj5oMKYFjbIuF7WYB1AsK9G81jU0baPlOMJuxJb40xxFnep8+xrCUKG\nsf+4ARHat8ORw2MxjtGmp4LOZo1VYJVM7M/aj3DAq67bPfogzKKm1m9Dh/oro9ED\nyHWN5qOPU/XR9qr221WjZk0s+JrQxyLS+SmLlWdk7NmW9Ja/oKw/AuSm176heNxm\nv4TWx6JfB6FNGCA2fJu7EsV+8fnu+LuSE82xDbjLdEepPmeBXlC2ouDGOjMBU8oB\nixq3HDykb9pglM8ipVVigfJcgZ3BCWs3NURWxqv4k6ze+ag5cB01QVRlKJ7FTgTj\nsQgfKh9/7aJdK+/tCflFATfAuLUwipiCZeWStOwEN7KK7Pl/l26VrJAoTv/DEFjz\ntRCIEpvq4lSTNr2VWW8OIxZFZhw8X6ucAbzFDuK/KsQnAoIHQ6iBicITaZzoApk1\nBKCbBi5Qe6jtnDKToB7gFb54NjWb71J8JSzpYXfElSaE4t/UuRsJE2EpbmmDsvSA\ncGjnTlfEHWW9fWWWwwcfeTwax0+E+/qpZy+9EAK5VNc03q8PZfM0U4TCkkkRA6zm\nlp/oIwAuKbb1KQUpSVx49zzRq51YZAbC/Eizpa81hqclR4aqt44=\n=O72e\n-----END PGP SIGNATURE-----", "payload": "tree c20f965d75152ea8d60f59ff94eb50ff6556ee11\nparent 20c352a4f602d541920fe1745b117fc8b42ca8fc\nauthor Max Baumann <max@bmn.dev> 1647816197 +0100\ncommitter Max Baumann <max@bmn.dev> 1647816197 +0100\n\nfeat: change error message\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f83753934b84efb6b3263270f625f0f44c208f2", "html_url": "https://github.com/rust-lang/rust/commit/0f83753934b84efb6b3263270f625f0f44c208f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f83753934b84efb6b3263270f625f0f44c208f2/comments", "author": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20c352a4f602d541920fe1745b117fc8b42ca8fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/20c352a4f602d541920fe1745b117fc8b42ca8fc", "html_url": "https://github.com/rust-lang/rust/commit/20c352a4f602d541920fe1745b117fc8b42ca8fc"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a0f6d80c19b1d76acc845625d7d992869408d80d", "filename": "clippy_lints/src/methods/or_then_unwrap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f83753934b84efb6b3263270f625f0f44c208f2/clippy_lints%2Fsrc%2Fmethods%2For_then_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f83753934b84efb6b3263270f625f0f44c208f2/clippy_lints%2Fsrc%2Fmethods%2For_then_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2For_then_unwrap.rs?ref=0f83753934b84efb6b3263270f625f0f44c208f2", "patch": "@@ -21,14 +21,14 @@ pub(super) fn check<'tcx>(\n     let or_arg_content: Span;\n \n     if is_type_diagnostic_item(cx, ty, sym::Option) {\n-        title = \".or(Some(\u2026)).unwrap() found\";\n+        title = \"found `.or(Some(\u2026)).unwrap()`\";\n         if let Some(content) = get_content_if_is(or_arg, \"Some\") {\n             or_arg_content = content;\n         } else {\n             return;\n         }\n     } else if is_type_diagnostic_item(cx, ty, sym::Result) {\n-        title = \".or(Ok(\u2026)).unwrap() found\";\n+        title = \"found `.or(Ok(\u2026)).unwrap()`\";\n         if let Some(content) = get_content_if_is(or_arg, \"Ok\") {\n             or_arg_content = content;\n         } else {"}, {"sha": "da88154c59f71f9b714f90416ef3a461954db6fe", "filename": "tests/ui/or_then_unwrap.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f83753934b84efb6b3263270f625f0f44c208f2/tests%2Fui%2For_then_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f83753934b84efb6b3263270f625f0f44c208f2/tests%2Fui%2For_then_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_then_unwrap.stderr?ref=0f83753934b84efb6b3263270f625f0f44c208f2", "patch": "@@ -1,18 +1,18 @@\n-error: .or(Some(\u2026)).unwrap() found\n+error: found `.or(Some(\u2026)).unwrap()`\n   --> $DIR/or_then_unwrap.rs:24:20\n    |\n LL |     let _ = option.or(Some(\"fallback\")).unwrap(); // should trigger lint\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or(\"fallback\")`\n    |\n    = note: `-D clippy::or-then-unwrap` implied by `-D warnings`\n \n-error: .or(Ok(\u2026)).unwrap() found\n+error: found `.or(Ok(\u2026)).unwrap()`\n   --> $DIR/or_then_unwrap.rs:27:20\n    |\n LL |     let _ = result.or::<&str>(Ok(\"fallback\")).unwrap(); // should trigger lint\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or(\"fallback\")`\n \n-error: .or(Some(\u2026)).unwrap() found\n+error: found `.or(Some(\u2026)).unwrap()`\n   --> $DIR/or_then_unwrap.rs:31:31\n    |\n LL |     let _ = option.map(|v| v).or(Some(\"fallback\")).unwrap().to_string().chars(); // should trigger lint"}]}