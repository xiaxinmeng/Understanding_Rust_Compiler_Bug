{"sha": "ea310d9253f02649b450b822e18ed5c22868acce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMzEwZDkyNTNmMDI2NDliNDUwYjgyMmUxOGVkNWMyMjg2OGFjY2U=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-04-30T17:30:30Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-05-01T12:25:56Z"}, "message": "Reserve x18 on AArch64 and un-reserve x16", "tree": {"sha": "4e9d2ea2f1e9edc3ec590fc2b541e6d587a95046", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e9d2ea2f1e9edc3ec590fc2b541e6d587a95046"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea310d9253f02649b450b822e18ed5c22868acce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea310d9253f02649b450b822e18ed5c22868acce", "html_url": "https://github.com/rust-lang/rust/commit/ea310d9253f02649b450b822e18ed5c22868acce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea310d9253f02649b450b822e18ed5c22868acce/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09cfb248e7b1765865bcc0c174c019acfec6681c", "url": "https://api.github.com/repos/rust-lang/rust/commits/09cfb248e7b1765865bcc0c174c019acfec6681c", "html_url": "https://github.com/rust-lang/rust/commit/09cfb248e7b1765865bcc0c174c019acfec6681c"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "f180eea01a3bbe796f060b7c91be3dad3871ac41", "filename": "compiler/rustc_target/src/asm/aarch64.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea310d9253f02649b450b822e18ed5c22868acce/compiler%2Frustc_target%2Fsrc%2Fasm%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea310d9253f02649b450b822e18ed5c22868acce/compiler%2Frustc_target%2Fsrc%2Fasm%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Faarch64.rs?ref=ea310d9253f02649b450b822e18ed5c22868acce", "patch": "@@ -83,8 +83,8 @@ def_regs! {\n         x13: reg = [\"x13\", \"w13\"],\n         x14: reg = [\"x14\", \"w14\"],\n         x15: reg = [\"x15\", \"w15\"],\n+        x16: reg = [\"x16\", \"w16\"],\n         x17: reg = [\"x17\", \"w17\"],\n-        x18: reg = [\"x18\", \"w18\"],\n         x20: reg = [\"x20\", \"w20\"],\n         x21: reg = [\"x21\", \"w21\"],\n         x22: reg = [\"x22\", \"w22\"],\n@@ -127,8 +127,8 @@ def_regs! {\n         v29: vreg = [\"v29\", \"b29\", \"h29\", \"s29\", \"d29\", \"q29\"],\n         v30: vreg = [\"v30\", \"b30\", \"h30\", \"s30\", \"d30\", \"q30\"],\n         v31: vreg = [\"v31\", \"b31\", \"h31\", \"s31\", \"d31\", \"q31\"],\n-        #error = [\"x16\", \"w16\"] =>\n-            \"x16 is used internally by LLVM and cannot be used as an operand for inline asm\",\n+        #error = [\"x18\", \"w18\"] =>\n+            \"x18 is used as a reserved register on some targets and cannot be used as an operand for inline asm\",\n         #error = [\"x19\", \"w19\"] =>\n             \"x19 is used internally by LLVM and cannot be used as an operand for inline asm\",\n         #error = [\"x29\", \"w29\", \"fp\", \"wfp\"] =>"}, {"sha": "b0170e67446db4c5cb659c39bfa5ba9468aed2c7", "filename": "library/std/src/sys/sgx/ext/arch.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea310d9253f02649b450b822e18ed5c22868acce/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fext%2Farch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea310d9253f02649b450b822e18ed5c22868acce/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fext%2Farch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fext%2Farch.rs?ref=ea310d9253f02649b450b822e18ed5c22868acce", "patch": "@@ -33,9 +33,9 @@ pub fn egetkey(request: &Align512<[u8; 512]>) -> Result<Align16<[u8; 16]>, u32>\n \n         asm!(\n             // rbx is reserved by LLVM\n-            \"xchg {}, rbx\",\n+            \"xchg {0}, rbx\",\n             \"enclu\",\n-            \"mov rbx, {}\",\n+            \"mov rbx, {0}\",\n             inout(reg) request => _,\n             inlateout(\"eax\") ENCLU_EGETKEY => error,\n             in(\"rcx\") out.as_mut_ptr(),\n@@ -64,9 +64,9 @@ pub fn ereport(\n \n         asm!(\n             // rbx is reserved by LLVM\n-            \"xchg {}, rbx\",\n+            \"xchg {0}, rbx\",\n             \"enclu\",\n-            \"mov rbx, {}\",\n+            \"mov rbx, {0}\",\n             inout(reg) targetinfo => _,\n             in(\"eax\") ENCLU_EREPORT,\n             in(\"rcx\") reportdata,"}, {"sha": "fa96e47ee037fe26b43ac4b6bd15c6ffeec06e21", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ea310d9253f02649b450b822e18ed5c22868acce/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/ea310d9253f02649b450b822e18ed5c22868acce/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=ea310d9253f02649b450b822e18ed5c22868acce", "patch": "@@ -681,7 +681,6 @@ Some registers cannot be used for input or output operands:\n | x86 | `mm[0-7]` | MMX registers are not currently supported (but may be in the future). |\n | x86 | `st([0-7])` | x87 registers are not currently supported (but may be in the future). |\n | AArch64 | `xzr` | This is a constant zero register which can't be modified. |\n-| AArch64 | `x16` | This is used internally by LLVM for speculative load hardening. |\n | ARM | `pc` | This is the program counter, not a real register. |\n | ARM | `r9` | This is a reserved register on some ARM targets. |\n | MIPS | `$0` or `$zero` | This is a constant zero register which can't be modified. |\n@@ -695,8 +694,8 @@ Some registers cannot be used for input or output operands:\n \n In some cases LLVM will allocate a \"reserved register\" for `reg` operands even though this register cannot be explicitly specified. Assembly code making use of reserved registers should be careful since `reg` operands may alias with those registers. Reserved registers are the frame pointer and base pointer\n - The frame pointer and LLVM base pointer on all architectures.\n-- `x16` on AArch64.\n-- `r6` and `r9` on ARM.\n+- `r9` on ARM.\n+- `x18` on AArch64.\n \n ## Template modifiers\n "}]}