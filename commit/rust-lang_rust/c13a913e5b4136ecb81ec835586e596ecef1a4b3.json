{"sha": "c13a913e5b4136ecb81ec835586e596ecef1a4b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxM2E5MTNlNWI0MTM2ZWNiODFlYzgzNTU4NmU1OTZlY2VmMWE0YjM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-25T02:28:43Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-25T02:28:43Z"}, "message": "Don't naively point to return type on type error", "tree": {"sha": "1de1401a476465f5b081159f99f18a9dfd41de44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1de1401a476465f5b081159f99f18a9dfd41de44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c13a913e5b4136ecb81ec835586e596ecef1a4b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c13a913e5b4136ecb81ec835586e596ecef1a4b3", "html_url": "https://github.com/rust-lang/rust/commit/c13a913e5b4136ecb81ec835586e596ecef1a4b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c13a913e5b4136ecb81ec835586e596ecef1a4b3/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d4b314c5b663a8382a33bd69cb8b27134fb3f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d4b314c5b663a8382a33bd69cb8b27134fb3f8", "html_url": "https://github.com/rust-lang/rust/commit/27d4b314c5b663a8382a33bd69cb8b27134fb3f8"}], "stats": {"total": 70, "additions": 3, "deletions": 67}, "files": [{"sha": "4b5d02f9995519c9f20074285662fd8b0c14213e", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -1174,12 +1174,6 @@ impl<'gcx, 'tcx, 'exprs, E> CoerceMany<'gcx, 'tcx, 'exprs, E>\n                                                              expected, found,\n                                                              cause.span, blk_id);\n                     }\n-                    ObligationCauseCode::ReturnType(ret_id) => {\n-                        db = fcx.report_mismatched_types(cause, expected, found, err);\n-                        if let Some((fn_decl, _)) = fcx.get_fn_decl(ret_id) {\n-                            fcx.point_to_type_requirement(&mut db, &fn_decl, expected);\n-                        }\n-                    }\n                     _ => {\n                         db = fcx.report_mismatched_types(cause, expected, found, err);\n                     }"}, {"sha": "7c4b6a858d957ab832ae5a2966ee627a1a840b49", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -4261,35 +4261,13 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         self.suggest_missing_semicolon(err, expression, expected, cause_span);\n \n         if let Some((fn_decl, is_main)) = self.get_fn_decl(blk_id) {\n-            self.point_to_type_requirement(err, &fn_decl, expected);\n             // `fn main()` must return `()`, do not suggest changing return type\n             if !is_main {\n                 self.suggest_missing_return_type(err, &fn_decl, found);\n             }\n         }\n     }\n \n-    pub fn point_to_type_requirement(&self,\n-                                 err: &mut DiagnosticBuilder<'tcx>,\n-                                 fn_decl: &hir::FnDecl,\n-                                 ty: Ty<'tcx>) {\n-        let msg = if let &hir::FnDecl {\n-            output: hir::FunctionRetTy::DefaultReturn(_), ..\n-        } = fn_decl {\n-            \"default \"\n-        } else {\n-            \"\"\n-        };\n-        let ty = self.resolve_type_vars_if_possible(&ty);\n-        if ty.to_string().len() < 10 {\n-            err.span_label(fn_decl.output.span(),\n-                           format!(\"expected `{}` because of this {}return type\", ty, msg));\n-        } else {\n-            err.span_label(fn_decl.output.span(),\n-                           format!(\"expected because of this {}return type\", msg));\n-        }\n-    }\n-\n     /// A common error is to forget to add a semicolon at the end of a block:\n     ///\n     /// ```"}, {"sha": "72ff859d7e93a0f71bbbafcb25e79b5e804038bb", "filename": "src/test/ui/block-result/issue-13624.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -1,8 +1,6 @@\n error[E0308]: mismatched types\n   --> $DIR/issue-13624.rs:17:5\n    |\n-16 |   pub fn get_enum_struct_variant() -> () {\n-   |                                       -- expected `()` because of this return type\n 17 |     Enum::EnumStructVariant { x: 1, y: 2, z: 3 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `a::Enum`\n    |"}, {"sha": "e4367f170ce1856dbb33c6660800e6aeb2b23171", "filename": "src/test/ui/block-result/issue-20862.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -2,10 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-20862.rs:12:5\n    |\n 11 | fn foo(x: i32) {\n-   |                -\n-   |                |\n-   |                possibly return type missing here?\n-   |                expected `()` because of this default return type\n+   |                - possibly return type missing here?\n 12 |     |y| x + y\n    |     ^^^^^^^^^ expected (), found closure\n    |"}, {"sha": "3921a301c922393d5d7af0fb2230d7398970983b", "filename": "src/test/ui/block-result/issue-22645.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -11,9 +11,6 @@ error[E0277]: the trait bound `{integer}: Scalar` is not satisfied\n error[E0308]: mismatched types\n   --> $DIR/issue-22645.rs:25:3\n    |\n-23 | fn main() {\n-   |           - expected `()` because of this default return type\n-24 |   let b = Bob + 3.5;\n 25 |   b + 3 //~ ERROR E0277\n    |   ^^^^^ expected (), found struct `Bob`\n    |"}, {"sha": "c6ab4cbb2a7c5e0d22175085a222af9123c0366c", "filename": "src/test/ui/block-result/issue-3563.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -8,10 +8,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-3563.rs:13:9\n    |\n 12 |     fn a(&self) {\n-   |                 -\n-   |                 |\n-   |                 possibly return type missing here?\n-   |                 expected `()` because of this default return type\n+   |                 - possibly return type missing here?\n 13 |         || self.b()\n    |         ^^^^^^^^^^^ expected (), found closure\n    |"}, {"sha": "bffe2a82ca8d756961d54f284a0efbc2beff9928", "filename": "src/test/ui/block-result/issue-5500.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -1,8 +1,6 @@\n error[E0308]: mismatched types\n   --> $DIR/issue-5500.rs:12:5\n    |\n-11 | fn main() {\n-   |           - expected `()` because of this default return type\n 12 |     &panic!()\n    |     ^^^^^^^^^ expected (), found reference\n    |"}, {"sha": "18d0cc4814056f94d93958568a4c2a8c28056a1a", "filename": "src/test/ui/block-result/unexpected-return-on-unit.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -1,8 +1,6 @@\n error[E0308]: mismatched types\n   --> $DIR/unexpected-return-on-unit.rs:19:5\n    |\n-18 | fn bar() {\n-   |          - expected `()` because of this default return type\n 19 |     foo()\n    |     ^^^^^ expected (), found usize\n    |"}, {"sha": "2206234b77744ca670a8cbaa52049cd86172c6b3", "filename": "src/test/ui/impl-trait/equality.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -1,9 +1,6 @@\n error[E0308]: mismatched types\n   --> $DIR/equality.rs:25:5\n    |\n-21 | fn two(x: bool) -> impl Foo {\n-   |                    -------- expected `i32` because of this return type\n-...\n 25 |     0_u32\n    |     ^^^^^ expected i32, found u32\n    |"}, {"sha": "78b5dcda1d9d24be75b73276e29c1cdc7a77b8ab", "filename": "src/test/ui/mismatched_types/abridged.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -1,8 +1,6 @@\n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:26:5\n    |\n-25 | fn a() -> Foo {\n-   |           --- expected `Foo` because of this return type\n 26 |     Some(Foo { bar: 1 })\n    |     ^^^^^^^^^^^^^^^^^^^^ expected struct `Foo`, found enum `std::option::Option`\n    |\n@@ -12,8 +10,6 @@ error[E0308]: mismatched types\n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:30:5\n    |\n-29 | fn a2() -> Foo {\n-   |            --- expected `Foo` because of this return type\n 30 |     Ok(Foo { bar: 1})\n    |     ^^^^^^^^^^^^^^^^^ expected struct `Foo`, found enum `std::result::Result`\n    |\n@@ -23,8 +19,6 @@ error[E0308]: mismatched types\n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:34:5\n    |\n-33 | fn b() -> Option<Foo> {\n-   |           ----------- expected because of this return type\n 34 |     Foo { bar: 1 }\n    |     ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `Foo`\n    |\n@@ -34,8 +28,6 @@ error[E0308]: mismatched types\n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:38:5\n    |\n-37 | fn c() -> Result<Foo, Bar> {\n-   |           ---------------- expected because of this return type\n 38 |     Foo { bar: 1 }\n    |     ^^^^^^^^^^^^^^ expected enum `std::result::Result`, found struct `Foo`\n    |\n@@ -45,8 +37,6 @@ error[E0308]: mismatched types\n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:42:5\n    |\n-41 |   fn d() -> X<X<String, String>, String> {\n-   |             ---------------------------- expected because of this return type\n 42 | /     X {\n 43 | |         x: X {\n 44 | |             x: \"\".to_string(),\n@@ -62,8 +52,6 @@ error[E0308]: mismatched types\n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:52:5\n    |\n-51 |   fn e() -> X<X<String, String>, String> {\n-   |             ---------------------------- expected because of this return type\n 52 | /     X {\n 53 | |         x: X {\n 54 | |             x: \"\".to_string(),"}, {"sha": "083c1f953330c0dd4baab3a4dcc4e62dcfb0bd71", "filename": "src/test/ui/mismatched_types/issue-19109.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -2,10 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-19109.rs:14:5\n    |\n 13 | fn function(t: &mut Trait) {\n-   |                            -\n-   |                            |\n-   |                            help: possibly return type missing here? `-> *mut Trait `\n-   |                            expected `()` because of this default return type\n+   |                            - help: possibly return type missing here? `-> *mut Trait `\n 14 |     t as *mut Trait\n    |     ^^^^^^^^^^^^^^^ expected (), found *-ptr\n    |"}, {"sha": "53e9cb2177892eec1f54842fee6091ad2c747b56", "filename": "src/test/ui/resolve/token-error-correct-3.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -34,9 +34,6 @@ error[E0425]: cannot find function `is_directory` in this scope\n error[E0308]: mismatched types\n   --> $DIR/token-error-correct-3.rs:25:13\n    |\n-20 |                                                                -> io::Result<bool> {\n-   |                                                                   ---------------- expected `()` because of this return type\n-...\n 25 |             fs::create_dir_all(path.as_ref()).map(|()| true) //~ ERROR: mismatched types\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- help: did you mean to add a semicolon here? `;`\n    |             |"}]}