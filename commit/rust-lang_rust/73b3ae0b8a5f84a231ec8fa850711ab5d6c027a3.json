{"sha": "73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3", "node_id": "C_kwDOAAsO6NoAKDczYjNhZTBiOGE1Zjg0YTIzMWVjOGZhODUwNzExYWI1ZDZjMDI3YTM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-14T15:16:51Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-19T12:56:31Z"}, "message": "Remove the source archive functionality of ArchiveWriter\n\nWe now build archives through strictly additive means rather than taking\nan existing archive and potentially substracting parts.", "tree": {"sha": "3187215454263ab8cf87b89f1068f740e45adbf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3187215454263ab8cf87b89f1068f740e45adbf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3", "html_url": "https://github.com/rust-lang/rust/commit/73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abb9b60f0965fe1cdc412369219d100022f39273", "url": "https://api.github.com/repos/rust-lang/rust/commits/abb9b60f0965fe1cdc412369219d100022f39273", "html_url": "https://github.com/rust-lang/rust/commit/abb9b60f0965fe1cdc412369219d100022f39273"}], "stats": {"total": 24, "additions": 3, "deletions": 21}, "files": [{"sha": "0812f930b5dea20c06b97e93127c9105174c5dd5", "filename": "src/archive.rs", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=73b3ae0b8a5f84a231ec8fa850711ab5d6c027a3", "patch": "@@ -30,34 +30,16 @@ pub(crate) struct ArArchiveBuilder<'a> {\n }\n \n impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n-    fn new(sess: &'a Session, output: &Path, input: Option<&Path>) -> Self {\n-        let (src_archives, entries) = if let Some(input) = input {\n-            let read_cache = ReadCache::new(File::open(input).unwrap());\n-            let archive = ArchiveFile::parse(&read_cache).unwrap();\n-            let mut entries = Vec::new();\n-\n-            for entry in archive.members() {\n-                let entry = entry.unwrap();\n-                entries.push((\n-                    entry.name().to_vec(),\n-                    ArchiveEntry::FromArchive { archive_index: 0, file_range: entry.file_range() },\n-                ));\n-            }\n-\n-            (vec![read_cache.into_inner()], entries)\n-        } else {\n-            (vec![], Vec::new())\n-        };\n-\n+    fn new(sess: &'a Session, output: &Path) -> Self {\n         ArArchiveBuilder {\n             sess,\n             dst: output.to_path_buf(),\n             use_gnu_style_archive: sess.target.archive_format == \"gnu\",\n             // FIXME fix builtin ranlib on macOS\n             no_builtin_ranlib: sess.target.is_like_osx,\n \n-            src_archives,\n-            entries,\n+            src_archives: vec![],\n+            entries: vec![],\n         }\n     }\n "}]}