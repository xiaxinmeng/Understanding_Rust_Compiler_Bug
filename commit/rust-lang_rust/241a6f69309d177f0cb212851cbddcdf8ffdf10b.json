{"sha": "241a6f69309d177f0cb212851cbddcdf8ffdf10b", "node_id": "C_kwDOAAsO6NoAKDI0MWE2ZjY5MzA5ZDE3N2YwY2IyMTI4NTFjYmRkY2RmOGZmZGYxMGI", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-05-21T01:06:44Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-05-21T04:32:47Z"}, "message": "Remove `crate` visibility modifier in libs, tests", "tree": {"sha": "11577930f1af5dd957c360302c0448c5666f3afe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11577930f1af5dd957c360302c0448c5666f3afe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/241a6f69309d177f0cb212851cbddcdf8ffdf10b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/241a6f69309d177f0cb212851cbddcdf8ffdf10b", "html_url": "https://github.com/rust-lang/rust/commit/241a6f69309d177f0cb212851cbddcdf8ffdf10b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/241a6f69309d177f0cb212851cbddcdf8ffdf10b/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86940d2652acbede150f9fc52111688468c2be62", "url": "https://api.github.com/repos/rust-lang/rust/commits/86940d2652acbede150f9fc52111688468c2be62", "html_url": "https://github.com/rust-lang/rust/commit/86940d2652acbede150f9fc52111688468c2be62"}], "stats": {"total": 30, "additions": 2, "deletions": 28}, "files": [{"sha": "12a50c013a91f3ccca9dc88084191525b6a6dac8", "filename": "tests/source/fn-simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Fsource%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Fsource%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-simple.rs?ref=241a6f69309d177f0cb212851cbddcdf8ffdf10b", "patch": "@@ -63,7 +63,7 @@ mod foo {\n // #2082\n pub(crate) fn init() {}\n \n-crate fn init() {}\n+pub(crate) fn init() {}\n \n // #2630\n fn make_map<T, F: (Fn(&T) -> String)>(records: &Vec<T>, key_fn: F) -> HashMap<String, usize> {}"}, {"sha": "5683acbf3aa936dd622a536906c06a6faf9a9d39", "filename": "tests/source/pub-restricted.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Fsource%2Fpub-restricted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Fsource%2Fpub-restricted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fpub-restricted.rs?ref=241a6f69309d177f0cb212851cbddcdf8ffdf10b", "patch": "@@ -24,19 +24,6 @@ pub(  crate  ) enum WriteState<D> {\n     WriteData(Writer<D>),\n }\n \n-  crate   enum WriteState<D> {\n-    WriteId {\n-        id: U64Writer,\n-        size: U64Writer,\n-        payload: Option<Writer<D>>,\n-    },\n-    WriteSize {\n-        size: U64Writer,\n-        payload: Option<Writer<D>>,\n-    },\n-    WriteData(Writer<D>),\n-}\n-\n pub(in  ::global::  path :: to::some_mod  ) enum WriteState<D> {\n     WriteId {\n         id: U64Writer,"}, {"sha": "e725269360d2cf23b8c4fd6b162e72bf74be7c47", "filename": "tests/target/fn-simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Ftarget%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Ftarget%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-simple.rs?ref=241a6f69309d177f0cb212851cbddcdf8ffdf10b", "patch": "@@ -105,7 +105,7 @@ mod foo {\n // #2082\n pub(crate) fn init() {}\n \n-crate fn init() {}\n+pub(crate) fn init() {}\n \n // #2630\n fn make_map<T, F: (Fn(&T) -> String)>(records: &Vec<T>, key_fn: F) -> HashMap<String, usize> {}"}, {"sha": "0e178ef10136e3965f7185ef1998b329b5982da5", "filename": "tests/target/pub-restricted.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Ftarget%2Fpub-restricted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/241a6f69309d177f0cb212851cbddcdf8ffdf10b/tests%2Ftarget%2Fpub-restricted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpub-restricted.rs?ref=241a6f69309d177f0cb212851cbddcdf8ffdf10b", "patch": "@@ -24,19 +24,6 @@ pub(crate) enum WriteState<D> {\n     WriteData(Writer<D>),\n }\n \n-crate enum WriteState<D> {\n-    WriteId {\n-        id: U64Writer,\n-        size: U64Writer,\n-        payload: Option<Writer<D>>,\n-    },\n-    WriteSize {\n-        size: U64Writer,\n-        payload: Option<Writer<D>>,\n-    },\n-    WriteData(Writer<D>),\n-}\n-\n pub(in global::path::to::some_mod) enum WriteState<D> {\n     WriteId {\n         id: U64Writer,"}]}