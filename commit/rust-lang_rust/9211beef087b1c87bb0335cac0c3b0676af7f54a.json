{"sha": "9211beef087b1c87bb0335cac0c3b0676af7f54a", "node_id": "C_kwDOAAsO6NoAKDkyMTFiZWVmMDg3YjFjODdiYjAzMzVjYWMwYzNiMDY3NmFmN2Y1NGE", "commit": {"author": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2021-10-09T15:23:35Z"}, "committer": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2021-10-09T15:23:35Z"}, "message": "Use E0308 instead of E0495 for checking the error message improvement\n\nbecause previous test does not cause the expected error message when\n`-Z borrowck=mir`.", "tree": {"sha": "25100507274891c7ebc2385c887720a4ad8dbfe4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25100507274891c7ebc2385c887720a4ad8dbfe4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9211beef087b1c87bb0335cac0c3b0676af7f54a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9211beef087b1c87bb0335cac0c3b0676af7f54a", "html_url": "https://github.com/rust-lang/rust/commit/9211beef087b1c87bb0335cac0c3b0676af7f54a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9211beef087b1c87bb0335cac0c3b0676af7f54a/comments", "author": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "html_url": "https://github.com/rust-lang/rust/commit/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2"}], "stats": {"total": 66, "additions": 19, "deletions": 47}, "files": [{"sha": "54141d2214cd9424041189865bf34d264136ff04", "filename": "src/test/ui/issues/issue-65230.rs", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9211beef087b1c87bb0335cac0c3b0676af7f54a/src%2Ftest%2Fui%2Fissues%2Fissue-65230.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9211beef087b1c87bb0335cac0c3b0676af7f54a/src%2Ftest%2Fui%2Fissues%2Fissue-65230.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-65230.rs?ref=9211beef087b1c87bb0335cac0c3b0676af7f54a", "patch": "@@ -1,19 +1,11 @@\n-trait T {\n-    type U;\n-    fn f(&self) -> Self::U;\n-}\n+trait T0 {}\n+trait T1: T0 {}\n \n-struct X<'a>(&'a mut i32);\n+trait T2 {}\n \n-impl<'a> T for X<'a> {\n-    type U = &'a i32;\n-    fn f(&self) -> Self::U {\n-        self.0\n-    }\n-    //~^^^ ERROR cannot infer an appropriate lifetime for lifetime parameter `'a`\n-    //\n-    // Return type of `f` has lifetime `'a` but it tries to return `self.0` which\n-    // has lifetime `'_`.\n-}\n+impl<'a> T0 for &'a (dyn T2 + 'static) {}\n+\n+impl T1 for &dyn T2 {}\n+//~^ ERROR mismatched types\n \n fn main() {}"}, {"sha": "d75428f3d531dd7d1b5acae6fd2e604009c61453", "filename": "src/test/ui/issues/issue-65230.stderr", "status": "modified", "additions": 12, "deletions": 32, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9211beef087b1c87bb0335cac0c3b0676af7f54a/src%2Ftest%2Fui%2Fissues%2Fissue-65230.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9211beef087b1c87bb0335cac0c3b0676af7f54a/src%2Ftest%2Fui%2Fissues%2Fissue-65230.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-65230.stderr?ref=9211beef087b1c87bb0335cac0c3b0676af7f54a", "patch": "@@ -1,38 +1,18 @@\n-error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n-  --> $DIR/issue-65230.rs:10:28\n-   |\n-LL |       fn f(&self) -> Self::U {\n-   |  ____________________________^\n-LL | |         self.0\n-LL | |     }\n-   | |_____^\n-   |\n-note: first, the lifetime cannot outlive the anonymous lifetime defined on the method body at 10:10...\n-  --> $DIR/issue-65230.rs:10:10\n-   |\n-LL |     fn f(&self) -> Self::U {\n-   |          ^^^^^\n-note: ...so that reference does not outlive borrowed content\n-  --> $DIR/issue-65230.rs:11:9\n-   |\n-LL |         self.0\n-   |         ^^^^^^\n-note: but, the lifetime must be valid for the lifetime `'a` as defined on the impl at 8:6...\n+error[E0308]: mismatched types\n   --> $DIR/issue-65230.rs:8:6\n    |\n-LL | impl<'a> T for X<'a> {\n-   |      ^^\n-note: ...so that the types are compatible\n-  --> $DIR/issue-65230.rs:10:28\n+LL | impl T1 for &dyn T2 {}\n+   |      ^^ lifetime mismatch\n+   |\n+   = note: expected trait `<&dyn T2 as T0>`\n+              found trait `<&(dyn T2 + 'static) as T0>`\n+note: the lifetime `'_` as defined on the impl at 8:13...\n+  --> $DIR/issue-65230.rs:8:13\n    |\n-LL |       fn f(&self) -> Self::U {\n-   |  ____________________________^\n-LL | |         self.0\n-LL | |     }\n-   | |_____^\n-   = note: expected `<X<'a> as T>`\n-              found `<X<'_> as T>`\n+LL | impl T1 for &dyn T2 {}\n+   |             ^\n+   = note: ...does not necessarily outlive the static lifetime\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0495`.\n+For more information about this error, try `rustc --explain E0308`."}]}