{"sha": "af0dec279590a44d4542e13913606481084a4e9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMGRlYzI3OTU5MGE0NGQ0NTQyZTEzOTEzNjA2NDgxMDg0YTRlOWY=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-03-19T00:39:20Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-18T07:29:23Z"}, "message": "Rename `NotSupported` to `Unsupported`", "tree": {"sha": "6ade81d2ea6ecd65da6751c6ea23724595102aaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ade81d2ea6ecd65da6751c6ea23724595102aaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af0dec279590a44d4542e13913606481084a4e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af0dec279590a44d4542e13913606481084a4e9f", "html_url": "https://github.com/rust-lang/rust/commit/af0dec279590a44d4542e13913606481084a4e9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af0dec279590a44d4542e13913606481084a4e9f/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b5f117c47dcc1b041c686d4c6016ebf96006f06", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b5f117c47dcc1b041c686d4c6016ebf96006f06", "html_url": "https://github.com/rust-lang/rust/commit/1b5f117c47dcc1b041c686d4c6016ebf96006f06"}], "stats": {"total": 47, "additions": 29, "deletions": 18}, "files": [{"sha": "f9d45b9aafb77ded6c27d754811b13d53f3fda35", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -181,9 +181,11 @@ pub enum ErrorKind {\n     #[stable(feature = \"read_exact\", since = \"1.6.0\")]\n     UnexpectedEof,\n \n-    /// This operation is not supported on this platform.\n-    #[stable(feature = \"not_supported_error\", since = \"1.52.0\")]\n-    NotSupported,\n+    /// This operation is unsupported on this platform.\n+    ///\n+    /// This means that the operation can never succeed.\n+    #[stable(feature = \"unsupported_error\", since = \"1.52.0\")]\n+    Unsupported,\n }\n \n impl ErrorKind {\n@@ -207,7 +209,7 @@ impl ErrorKind {\n             ErrorKind::Interrupted => \"operation interrupted\",\n             ErrorKind::Other => \"other os error\",\n             ErrorKind::UnexpectedEof => \"unexpected end of file\",\n-            ErrorKind::NotSupported => \"not supported\",\n+            ErrorKind::Unsupported => \"unsupported\",\n         }\n     }\n }"}, {"sha": "f8c1612d1ca034a120af847e2b58e21a28c33698", "filename": "library/std/src/sys/hermit/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fmod.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -56,7 +56,7 @@ pub fn unsupported<T>() -> crate::io::Result<T> {\n \n pub fn unsupported_err() -> crate::io::Error {\n     crate::io::Error::new_const(\n-        crate::io::ErrorKind::NotSupported,\n+        crate::io::ErrorKind::Unsupported,\n         &\"operation not supported on HermitCore yet\",\n     )\n }"}, {"sha": "da37d1aeb7e74842917668aea9e95f74a97fbde9", "filename": "library/std/src/sys/sgx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fmod.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -50,7 +50,7 @@ pub fn unsupported<T>() -> crate::io::Result<T> {\n }\n \n pub fn unsupported_err() -> crate::io::Error {\n-    crate::io::Error::new_const(ErrorKind::NotSupported, &\"operation not supported on SGX yet\")\n+    crate::io::Error::new_const(ErrorKind::Unsupported, &\"operation not supported on SGX yet\")\n }\n \n /// This function is used to implement various functions that doesn't exist,"}, {"sha": "16a7f727696ec971b1730f2b08b28906eded469b", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -366,7 +366,7 @@ impl FileAttr {\n         }\n \n         Err(io::Error::new_const(\n-            io::ErrorKind::NotSupported,\n+            io::ErrorKind::Unsupported,\n             &\"creation time is not available on this platform \\\n                             currently\",\n         ))"}, {"sha": "3cf637c82285af801e14643a4875b6f19adcd4c1", "filename": "library/std/src/sys/unix/l4re.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -1,6 +1,9 @@\n macro_rules! unimpl {\n     () => {\n-        return Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"No networking available on L4Re.\"));\n+        return Err(io::Error::new_const(\n+            io::ErrorKind::Unsupported,\n+            &\"No networking available on L4Re.\",\n+        ));\n     };\n }\n "}, {"sha": "6e44ac19c7b2c80c759d7470026ef2b54393edb0", "filename": "library/std/src/sys/unix/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -148,7 +148,7 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n         libc::EINVAL => ErrorKind::InvalidInput,\n         libc::ETIMEDOUT => ErrorKind::TimedOut,\n         libc::EEXIST => ErrorKind::AlreadyExists,\n-        libc::ENOSYS => ErrorKind::NotSupported,\n+        libc::ENOSYS => ErrorKind::Unsupported,\n \n         // These two constants can have the same value on some systems,\n         // but different values on others, so we can't use a match"}, {"sha": "98e578c5255c74df3e3016faf485b0ae2d46c56c", "filename": "library/std/src/sys/unix/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -447,7 +447,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n #[cfg(any(target_os = \"fuchsia\", target_os = \"l4re\"))]\n pub fn current_exe() -> io::Result<PathBuf> {\n     use crate::io::ErrorKind;\n-    Err(io::Error::new_const(ErrorKind::NotSupported, &\"Not yet implemented!\"))\n+    Err(io::Error::new_const(ErrorKind::Unsupported, &\"Not yet implemented!\"))\n }\n \n #[cfg(target_os = \"vxworks\")]"}, {"sha": "64ec50fa9ec0083044ec750f48bee79245525c98", "filename": "library/std/src/sys/unsupported/common.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -18,7 +18,10 @@ pub fn unsupported<T>() -> std_io::Result<T> {\n }\n \n pub fn unsupported_err() -> std_io::Error {\n-    std_io::Error::new_const(std_io::ErrorKind::NotSupported, &\"operation not supported on this platform\")\n+    std_io::Error::new_const(\n+        std_io::ErrorKind::Unsupported,\n+        &\"operation not supported on this platform\",\n+    )\n }\n \n pub fn decode_error_kind(_code: i32) -> crate::io::ErrorKind {"}, {"sha": "3754aebf45581baa5fc70493517e539fa95be2bb", "filename": "library/std/src/sys/unsupported/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fos.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -80,11 +80,11 @@ pub fn getenv(_: &OsStr) -> io::Result<Option<OsString>> {\n }\n \n pub fn setenv(_: &OsStr, _: &OsStr) -> io::Result<()> {\n-    Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"cannot set env vars on this platform\"))\n+    Err(io::Error::new_const(io::ErrorKind::Unsupported, &\"cannot set env vars on this platform\"))\n }\n \n pub fn unsetenv(_: &OsStr) -> io::Result<()> {\n-    Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"cannot unset env vars on this platform\"))\n+    Err(io::Error::new_const(io::ErrorKind::Unsupported, &\"cannot unset env vars on this platform\"))\n }\n \n pub fn temp_dir() -> PathBuf {"}, {"sha": "12d0147a129817eaffa1ad3ddbe91ed38b50ab97", "filename": "library/std/src/sys/vxworks/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fvxworks%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fvxworks%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fvxworks%2Fmod.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -83,7 +83,7 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n         libc::EINVAL => ErrorKind::InvalidInput,\n         libc::ETIMEDOUT => ErrorKind::TimedOut,\n         libc::EEXIST => ErrorKind::AlreadyExists,\n-        libc::ENOSYS => ErrorKind::NotSupported,\n+        libc::ENOSYS => ErrorKind::Unsupported,\n \n         // These two constants can have the same value on some systems,\n         // but different values on others, so we can't use a match"}, {"sha": "b7b640b174fa9470b8451526154daf29abdeba13", "filename": "library/std/src/sys/wasi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -78,7 +78,7 @@ pub fn decode_error_kind(errno: i32) -> std_io::ErrorKind {\n         wasi::ERRNO_TIMEDOUT => TimedOut,\n         wasi::ERRNO_EXIST => AlreadyExists,\n         wasi::ERRNO_AGAIN => WouldBlock,\n-        wasi::ERRNO_NOSYS => NotSupported,\n+        wasi::ERRNO_NOSYS => Unsupported,\n         _ => Other,\n     }\n }"}, {"sha": "8e6bd76f85f0614fc5a6b210fc1db19921708599", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -802,7 +802,10 @@ pub fn link(original: &Path, link: &Path) -> io::Result<()> {\n \n #[cfg(target_vendor = \"uwp\")]\n pub fn link(_original: &Path, _link: &Path) -> io::Result<()> {\n-    return Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"hard link are not supported on UWP\"));\n+    return Err(io::Error::new_const(\n+        io::ErrorKind::Unsupported,\n+        &\"hard link are not supported on UWP\",\n+    ));\n }\n \n pub fn stat(path: &Path) -> io::Result<FileAttr> {"}, {"sha": "973301af2d9922ae68354cc149ca777ef76eac4c", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -78,7 +78,7 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n         | c::ERROR_IPSEC_IKE_TIMED_OUT\n         | c::ERROR_RUNLEVEL_SWITCH_TIMEOUT\n         | c::ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT => return ErrorKind::TimedOut,\n-        c::ERROR_CALL_NOT_IMPLEMENTED => return ErrorKind::NotSupported,\n+        c::ERROR_CALL_NOT_IMPLEMENTED => return ErrorKind::Unsupported,\n         _ => {}\n     }\n "}, {"sha": "ad04afc0b6d8a583133612ea67647cf998fef169", "filename": "library/std/src/sys/windows/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0dec279590a44d4542e13913606481084a4e9f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs?ref=af0dec279590a44d4542e13913606481084a4e9f", "patch": "@@ -370,7 +370,7 @@ impl Socket {\n \n     #[cfg(target_vendor = \"uwp\")]\n     fn set_no_inherit(&self) -> io::Result<()> {\n-        Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"Unavailable on UWP\"))\n+        Err(io::Error::new_const(io::ErrorKind::Unsupported, &\"Unavailable on UWP\"))\n     }\n \n     pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {"}]}