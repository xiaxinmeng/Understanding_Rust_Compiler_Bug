{"sha": "6ce748ac381d8faf83725eb179640e3ab89835ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZTc0OGFjMzgxZDhmYWY4MzcyNWViMTc5NjQwZTNhYjg5ODM1ZWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-24T12:29:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-24T12:29:37Z"}, "message": "Rollup merge of #57085 - glaubitz:sparc64-abi-fix, r=nagisa\n\nlibrustc_codegen_llvm: Don't eliminate empty structs in C ABI on linux-sparc64\n\nThis is in accordance with the SPARC Compliance Definition 2.4.1,\nPage 3P-12. It says that structs of up to 8 bytes (which applies\nto empty structs as well) are to be passed in one register.", "tree": {"sha": "ef2f9e32d0738813c1a64f489ba1b528b14b77c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef2f9e32d0738813c1a64f489ba1b528b14b77c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ce748ac381d8faf83725eb179640e3ab89835ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcINExCRBK7hj4Ov3rIwAAdHIIAHmZ+IC6xjD2Bpta1zvCc19l\nN+UxXltnJGfuXaN9dOHvFgBE2J+42Bx+8zhBXpRo5wOiDB4uScyo3+ovZDuJjh8i\nvyU/IFUwSoov+Q84eA03oyBFccc1czTSJlIRBcNpughLpxYfHHBhsAh0qazqOJbs\nExIy9/R0avP+M4XuGiNiTt6z/Eju48vKOlC8WUMdujrVLzU+FEVpu/HYLzHKkicH\nolzqM9q8hvG03mFT1vueMPgWtHWsIPh52tW+VRYKe7qyTq4XJ0d41E4BzLGeQKLW\n1f02/NNpHBuHvDCljwHhd3fGm/xWdi0ffjUvaY4w4Mkr7pjt1z8YWuSjJklRnOQ=\n=aqmv\n-----END PGP SIGNATURE-----\n", "payload": "tree ef2f9e32d0738813c1a64f489ba1b528b14b77c6\nparent 8b0b70d3273cd6185ec384f6f6ba01ec328b0929\nparent 65dabd6eaf24bbf3b7069a51984411aea2864856\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1545654577 +0100\ncommitter GitHub <noreply@github.com> 1545654577 +0100\n\nRollup merge of #57085 - glaubitz:sparc64-abi-fix, r=nagisa\n\nlibrustc_codegen_llvm: Don't eliminate empty structs in C ABI on linux-sparc64\n\nThis is in accordance with the SPARC Compliance Definition 2.4.1,\nPage 3P-12. It says that structs of up to 8 bytes (which applies\nto empty structs as well) are to be passed in one register.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce748ac381d8faf83725eb179640e3ab89835ed", "html_url": "https://github.com/rust-lang/rust/commit/6ce748ac381d8faf83725eb179640e3ab89835ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ce748ac381d8faf83725eb179640e3ab89835ed/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b0b70d3273cd6185ec384f6f6ba01ec328b0929", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b0b70d3273cd6185ec384f6f6ba01ec328b0929", "html_url": "https://github.com/rust-lang/rust/commit/8b0b70d3273cd6185ec384f6f6ba01ec328b0929"}, {"sha": "65dabd6eaf24bbf3b7069a51984411aea2864856", "url": "https://api.github.com/repos/rust-lang/rust/commits/65dabd6eaf24bbf3b7069a51984411aea2864856", "html_url": "https://github.com/rust-lang/rust/commit/65dabd6eaf24bbf3b7069a51984411aea2864856"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "8c4f7a58dab40a9c480957eb4eec4e425d46f948", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6ce748ac381d8faf83725eb179640e3ab89835ed/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ce748ac381d8faf83725eb179640e3ab89835ed/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=6ce748ac381d8faf83725eb179640e3ab89835ed", "patch": "@@ -456,6 +456,9 @@ impl<'tcx> FnTypeExt<'tcx> for FnType<'tcx, Ty<'tcx>> {\n         let linux_s390x = target.target_os == \"linux\"\n                        && target.arch == \"s390x\"\n                        && target.target_env == \"gnu\";\n+        let linux_sparc64 = target.target_os == \"linux\"\n+                       && target.arch == \"sparc64\"\n+                       && target.target_env == \"gnu\";\n         let rust_abi = match sig.abi {\n             RustIntrinsic | PlatformIntrinsic | Rust | RustCall => true,\n             _ => false\n@@ -520,8 +523,9 @@ impl<'tcx> FnTypeExt<'tcx> for FnType<'tcx, Ty<'tcx>> {\n             if arg.layout.is_zst() {\n                 // For some forsaken reason, x86_64-pc-windows-gnu\n                 // doesn't ignore zero-sized struct arguments.\n-                // The same is true for s390x-unknown-linux-gnu.\n-                if is_return || rust_abi || (!win_x64_gnu && !linux_s390x) {\n+                // The same is true for s390x-unknown-linux-gnu\n+                // and sparc64-unknown-linux-gnu.\n+                if is_return || rust_abi || (!win_x64_gnu && !linux_s390x && !linux_sparc64) {\n                     arg.mode = PassMode::Ignore;\n                 }\n             }"}]}