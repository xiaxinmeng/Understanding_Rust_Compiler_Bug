{"sha": "348110dcd9331d9a8aafbe72d016c214225e4f0f", "node_id": "C_kwDOAAsO6NoAKDM0ODExMGRjZDkzMzFkOWE4YWFmYmU3MmQwMTZjMjE0MjI1ZTRmMGY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-03T22:53:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-03T22:53:32Z"}, "message": "Merge #10919\n\n10919: internal: Define missing semantic token hierarchies in package.json r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/10077\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "fe7e09610a284dc18cf30c24587360cb454e4491", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe7e09610a284dc18cf30c24587360cb454e4491"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/348110dcd9331d9a8aafbe72d016c214225e4f0f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqp/sCRBK7hj4Ov3rIwAATF0IACO+HxPCenm/NZ+eoLx+tcUh\nvgqReMk6sjoIgjj6wg8zdolsUsxCsRXz60Djlf3KlYlvq2wPmH6ki7KxrdFzteBe\n8pEt/o8KzbDP2ViMvNbEdGN6xl+dyyRgwVAYTsN1K6iwkNTbyS7puf6uy+u1gs57\n6o64IuH4NJaJwJ8myBdkQGCIthNEeqGyXCbWeTFTMd6JC/Xbq6aY7Qzcf2JW5Giz\nBLJBDo7z+OOoGenTysC2E2TDI6kwqqNGQ3DYku8RY/o0IyejZqcww2dHxGKFGVE3\ndzPZfwIoDC+8NOWtT6fHjyL5Wf8DcRACbZPJDhB3Zqi4n9dpWQURvJIHFZ2NYuw=\n=VZUP\n-----END PGP SIGNATURE-----\n", "payload": "tree fe7e09610a284dc18cf30c24587360cb454e4491\nparent bf7622614895ec6cbed7ea5a6b6b2616680fe50f\nparent d74894abe2a598eb90e10d21f7bc304a3c816ed9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638572012 +0000\ncommitter GitHub <noreply@github.com> 1638572012 +0000\n\nMerge #10919\n\n10919: internal: Define missing semantic token hierarchies in package.json r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/10077\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/348110dcd9331d9a8aafbe72d016c214225e4f0f", "html_url": "https://github.com/rust-lang/rust/commit/348110dcd9331d9a8aafbe72d016c214225e4f0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/348110dcd9331d9a8aafbe72d016c214225e4f0f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf7622614895ec6cbed7ea5a6b6b2616680fe50f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf7622614895ec6cbed7ea5a6b6b2616680fe50f", "html_url": "https://github.com/rust-lang/rust/commit/bf7622614895ec6cbed7ea5a6b6b2616680fe50f"}, {"sha": "d74894abe2a598eb90e10d21f7bc304a3c816ed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d74894abe2a598eb90e10d21f7bc304a3c816ed9", "html_url": "https://github.com/rust-lang/rust/commit/d74894abe2a598eb90e10d21f7bc304a3c816ed9"}], "stats": {"total": 172, "additions": 117, "deletions": 55}, "files": [{"sha": "5cad1752ccceabac1605b9123bc97340aed68e23", "filename": "editors/code/package.json", "status": "modified", "additions": 117, "deletions": 55, "changes": 172, "blob_url": "https://github.com/rust-lang/rust/blob/348110dcd9331d9a8aafbe72d016c214225e4f0f/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/348110dcd9331d9a8aafbe72d016c214225e4f0f/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=348110dcd9331d9a8aafbe72d016c214225e4f0f", "patch": "@@ -1112,90 +1112,137 @@\n             }\n         ],\n         \"semanticTokenTypes\": [\n+            {\n+                \"id\": \"angle\",\n+                \"description\": \"Style for < or >\",\n+                \"superType\": \"punctuation\"\n+            },\n+            {\n+                \"id\": \"arithmetic\",\n+                \"description\": \"Style for arithmetic operators\",\n+                \"superType\": \"operator\"\n+            },\n             {\n                 \"id\": \"attribute\",\n                 \"description\": \"Style for attributes\"\n             },\n+            {\n+                \"id\": \"bitwise\",\n+                \"description\": \"Style for bitwise operators\",\n+                \"superType\": \"operator\"\n+            },\n             {\n                 \"id\": \"boolean\",\n                 \"description\": \"Style for boolean literals\",\n                 \"superType\": \"keyword\"\n             },\n+            {\n+                \"id\": \"brace\",\n+                \"description\": \"Style for { or }\",\n+                \"superType\": \"punctuation\"\n+            },\n+            {\n+                \"id\": \"bracket\",\n+                \"description\": \"Style for [ or ]\",\n+                \"superType\": \"punctuation\"\n+            },\n+            {\n+                \"id\": \"builtinAttribute\",\n+                \"description\": \"Style for builtin attributes\",\n+                \"superType\": \"attribute\"\n+            },\n             {\n                 \"id\": \"builtinType\",\n                 \"description\": \"Style for builtin types\",\n                 \"superType\": \"type\"\n             },\n             {\n-                \"id\": \"lifetime\",\n-                \"description\": \"Style for lifetimes\"\n+                \"id\": \"char\",\n+                \"description\": \"Style for character literals\",\n+                \"superType\": \"type\"\n             },\n             {\n-                \"id\": \"selfKeyword\",\n-                \"description\": \"Style for the self keyword\",\n-                \"superType\": \"keyword\"\n+                \"id\": \"colon\",\n+                \"description\": \"Style for :\",\n+                \"superType\": \"punctuation\"\n             },\n             {\n-                \"id\": \"typeAlias\",\n-                \"description\": \"Style for type aliases\",\n-                \"superType\": \"type\"\n+                \"id\": \"comma\",\n+                \"description\": \"Style for ,\",\n+                \"superType\": \"punctuation\"\n             },\n             {\n-                \"id\": \"union\",\n-                \"description\": \"Style for C-style untagged unions\",\n-                \"superType\": \"type\"\n+                \"id\": \"comparison\",\n+                \"description\": \"Style for comparison operators\",\n+                \"superType\": \"operator\"\n             },\n             {\n-                \"id\": \"unresolvedReference\",\n-                \"description\": \"Style for names which can not be resolved due to compilation errors\"\n+                \"id\": \"constParameter\",\n+                \"description\": \"Style for const generics\"\n+            },\n+            {\n+                \"id\": \"dot\",\n+                \"description\": \"Style for .\",\n+                \"superType\": \"punctuation\"\n+            },\n+            {\n+                \"id\": \"escapeSequence\",\n+                \"description\": \"Style for char escapes in strings\"\n             },\n             {\n                 \"id\": \"formatSpecifier\",\n                 \"description\": \"Style for {} placeholders in format strings\"\n             },\n             {\n-                \"id\": \"punctuation\",\n-                \"description\": \"generic punctuation\"\n+                \"id\": \"label\",\n+                \"description\": \"Style for labels\"\n             },\n             {\n-                \"id\": \"parenthesis\",\n-                \"description\": \"( or )\",\n-                \"superType\": \"punctuation\"\n+                \"id\": \"lifetime\",\n+                \"description\": \"Style for lifetimes\"\n             },\n             {\n-                \"id\": \"bracket\",\n-                \"description\": \"[ or ]\",\n-                \"superType\": \"punctuation\"\n+                \"id\": \"logical\",\n+                \"description\": \"Style for logic operators\",\n+                \"superType\": \"operator\"\n             },\n             {\n-                \"id\": \"brace\",\n-                \"description\": \"{ or }\",\n+                \"id\": \"operator\",\n+                \"description\": \"Style for operators\",\n                 \"superType\": \"punctuation\"\n             },\n             {\n-                \"id\": \"angle\",\n-                \"description\": \"< or >\",\n+                \"id\": \"parenthesis\",\n+                \"description\": \"Style for ( or )\",\n                 \"superType\": \"punctuation\"\n             },\n             {\n-                \"id\": \"comma\",\n-                \"description\": \",\",\n-                \"superType\": \"punctuation\"\n+                \"id\": \"punctuation\",\n+                \"description\": \"Style for generic punctuation\"\n             },\n             {\n-                \"id\": \"colon\",\n-                \"description\": \":\",\n-                \"superType\": \"punctuation\"\n+                \"id\": \"selfKeyword\",\n+                \"description\": \"Style for the self keyword\",\n+                \"superType\": \"keyword\"\n             },\n             {\n                 \"id\": \"semicolon\",\n-                \"description\": \";\",\n+                \"description\": \"Style for ;\",\n                 \"superType\": \"punctuation\"\n             },\n             {\n-                \"id\": \"dot\",\n-                \"description\": \".\",\n-                \"superType\": \"punctuation\"\n+                \"id\": \"typeAlias\",\n+                \"description\": \"Style for type aliases\",\n+                \"superType\": \"type\"\n+            },\n+            {\n+                \"id\": \"union\",\n+                \"description\": \"Style for C-style untagged unions\",\n+                \"superType\": \"type\"\n+            },\n+            {\n+                \"id\": \"unresolvedReference\",\n+                \"description\": \"Style for names which can not be resolved due to compilation errors\"\n             }\n         ],\n         \"semanticTokenModifiers\": [\n@@ -1207,14 +1254,14 @@\n                 \"id\": \"attribute\",\n                 \"description\": \"Style for elements within attributes\"\n             },\n-            {\n-                \"id\": \"constant\",\n-                \"description\": \"Style for compile-time constants\"\n-            },\n             {\n                 \"id\": \"callable\",\n                 \"description\": \"Style for locals whose types implements one of the `Fn*` traits\"\n             },\n+            {\n+                \"id\": \"constant\",\n+                \"description\": \"Style for compile-time constants\"\n+            },\n             {\n                 \"id\": \"consuming\",\n                 \"description\": \"Style for locals that are being consumed when use in a function call\"\n@@ -1224,8 +1271,8 @@\n                 \"description\": \"Style for control-flow related tokens, this includes the `?` operator\"\n             },\n             {\n-                \"id\": \"definition\",\n-                \"description\": \"Style for mutable bindings\"\n+                \"id\": \"crateRoot\",\n+                \"description\": \"Style for names resolving to a crate root\"\n             },\n             {\n                 \"id\": \"injected\",\n@@ -1267,39 +1314,54 @@\n                     \"attribute\": [\n                         \"meta.attribute.rust\"\n                     ],\n-                    \"function.attribute\": [\n-                        \"entity.name.function.attribute.rust\"\n-                    ],\n                     \"boolean\": [\n                         \"constant.language.boolean.rust\"\n                     ],\n                     \"builtinType\": [\n                         \"support.type.primitive.rust\"\n                     ],\n-                    \"lifetime\": [\n-                        \"storage.modifier.lifetime.rust\"\n+                    \"constParameter\": [\n+                        \"constant.other.caps.rust\"\n                     ],\n-                    \"typeAlias\": [\n-                        \"entity.name.type.typeAlias.rust\"\n+                    \"enum\": [\n+                        \"entity.name.type.enum.rust\"\n                     ],\n-                    \"union\": [\n-                        \"entity.name.type.union.rust\"\n+                    \"formatSpecifier\": [\n+                        \"punctuation.section.embedded.rust\"\n                     ],\n-                    \"struct\": [\n-                        \"entity.name.type.struct.rust\"\n+                    \"function\": [\n+                        \"entity.name.function.rust\"\n+                    ],\n+                    \"interface\": [\n+                        \"entity.name.type.trait.rust\"\n                     ],\n                     \"keyword\": [\n                         \"keyword.other.rust\"\n                     ],\n                     \"keyword.controlFlow\": [\n                         \"keyword.control.rust\"\n                     ],\n+                    \"lifetime\": [\n+                        \"storage.modifier.lifetime.rust\"\n+                    ],\n+                    \"method\": [\n+                        \"entity.name.function.rust\"\n+                    ],\n+                    \"struct\": [\n+                        \"entity.name.type.struct.rust\"\n+                    ],\n+                    \"typeAlias\": [\n+                        \"entity.name.type.declaration.rust\"\n+                    ],\n+                    \"union\": [\n+                        \"entity.name.type.union.rust\"\n+                    ],\n+                    \"variable\": [\n+                        \"variable.other.rust\"\n+                    ],\n                     \"variable.constant\": [\n                         \"variable.other.constant.rust\"\n                     ],\n-                    \"formatSpecifier\": [\n-                        \"punctuation.section.embedded.rust\"\n-                    ],\n                     \"*.mutable\": [\n                         \"markup.underline\"\n                     ]"}]}