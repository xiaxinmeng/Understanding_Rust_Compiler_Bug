{"sha": "a3472f8fe16a359f9ea7a12e7b4920894921421e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNDcyZjhmZTE2YTM1OWY5ZWE3YTEyZTdiNDkyMDg5NDkyMTQyMWU=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2019-01-22T23:20:40Z"}, "committer": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2019-01-22T23:20:40Z"}, "message": "Move label from hir to ide_api", "tree": {"sha": "6365cecd3c8e59246f22f7a10b86d96ae4462d8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6365cecd3c8e59246f22f7a10b86d96ae4462d8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3472f8fe16a359f9ea7a12e7b4920894921421e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3472f8fe16a359f9ea7a12e7b4920894921421e", "html_url": "https://github.com/rust-lang/rust/commit/a3472f8fe16a359f9ea7a12e7b4920894921421e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3472f8fe16a359f9ea7a12e7b4920894921421e/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "070a9802246123c79709271c9ba6fddd6f888813", "url": "https://api.github.com/repos/rust-lang/rust/commits/070a9802246123c79709271c9ba6fddd6f888813", "html_url": "https://github.com/rust-lang/rust/commit/070a9802246123c79709271c9ba6fddd6f888813"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "9ae620efd4c0647cb40ec277b07d34d0cb4de181", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a3472f8fe16a359f9ea7a12e7b4920894921421e/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3472f8fe16a359f9ea7a12e7b4920894921421e/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=a3472f8fe16a359f9ea7a12e7b4920894921421e", "patch": "@@ -366,28 +366,6 @@ impl Function {\n             Some(comments)\n         }\n     }\n-\n-    pub fn label(&self, db: &impl HirDatabase) -> Option<String> {\n-        let def_loc = self.def_id.loc(db);\n-        let syntax = db.file_item(def_loc.source_item_id);\n-        let node = ast::FnDef::cast(&syntax).expect(\"fn def should point to FnDef node\");\n-\n-        let label: String = if let Some(body) = node.body() {\n-            let body_range = body.syntax().range();\n-            let label: String = node\n-                .syntax()\n-                .children()\n-                .filter(|child| !child.range().is_subrange(&body_range)) // Filter out body\n-                .filter(|child| ast::Comment::cast(child).is_none()) // Filter out comments\n-                .map(|node| node.text().to_string())\n-                .collect();\n-            label\n-        } else {\n-            node.syntax().text().to_string()\n-        };\n-\n-        Some(label.trim().to_owned())\n-    }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]"}, {"sha": "680fd8d1b5d3d45bcdafbd0e10950dc34ad63bcf", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a3472f8fe16a359f9ea7a12e7b4920894921421e/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3472f8fe16a359f9ea7a12e7b4920894921421e/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=a3472f8fe16a359f9ea7a12e7b4920894921421e", "patch": "@@ -1,7 +1,10 @@\n use hir::PerNs;\n \n use crate::completion::completion_context::CompletionContext;\n-use ra_syntax::TextRange;\n+use ra_syntax::{\n+    ast::{self, AstNode},\n+    TextRange\n+};\n use ra_text_edit::TextEdit;\n \n /// `CompletionItem` describes a single completion variant in the editor pop-up.\n@@ -263,7 +266,7 @@ impl Builder {\n             self.documentation = Some(docs);\n         }\n \n-        if let Some(label) = function.label(ctx.db) {\n+        if let Some(label) = function_label(ctx, function) {\n             self.detail = Some(label);\n         }\n \n@@ -303,6 +306,26 @@ impl Into<Vec<CompletionItem>> for Completions {\n     }\n }\n \n+fn function_label(ctx: &CompletionContext, function: hir::Function) -> Option<String> {\n+    let node = function.source(ctx.db).1;\n+\n+    let label: String = if let Some(body) = node.body() {\n+        let body_range = body.syntax().range();\n+        let label: String = node\n+            .syntax()\n+            .children()\n+            .filter(|child| !child.range().is_subrange(&body_range)) // Filter out body\n+            .filter(|child| ast::Comment::cast(child).is_none()) // Filter out comments\n+            .map(|node| node.text().to_string())\n+            .collect();\n+        label\n+    } else {\n+        node.syntax().text().to_string()\n+    };\n+\n+    Some(label.trim().to_owned())\n+}\n+\n #[cfg(test)]\n pub(crate) fn check_completion(test_name: &str, code: &str, kind: CompletionKind) {\n     use crate::mock_analysis::{single_file_with_position, analysis_and_position};"}]}