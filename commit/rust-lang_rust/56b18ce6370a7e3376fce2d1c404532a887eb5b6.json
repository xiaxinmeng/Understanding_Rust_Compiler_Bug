{"sha": "56b18ce6370a7e3376fce2d1c404532a887eb5b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YjE4Y2U2MzcwYTdlMzM3NmZjZTJkMWM0MDQ1MzJhODg3ZWI1YjY=", "commit": {"author": {"name": "MaulingMonkey", "email": "git@maulingmonkey.com", "date": "2019-05-20T22:00:36Z"}, "committer": {"name": "MaulingMonkey", "email": "git@maulingmonkey.com", "date": "2019-05-20T22:00:36Z"}, "message": "Address CDB review feedback\n\n- Don't add path_buf_capacity feature.\n- Convert `find_cdb` to early return style, reducing indentation\n- Simplify `compute_stamp_hash` for CDB to just hash it's path, if any.", "tree": {"sha": "f1ed9e1d2f2a7d089d5a695fc0f0d79e4ca85f9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1ed9e1d2f2a7d089d5a695fc0f0d79e4ca85f9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56b18ce6370a7e3376fce2d1c404532a887eb5b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56b18ce6370a7e3376fce2d1c404532a887eb5b6", "html_url": "https://github.com/rust-lang/rust/commit/56b18ce6370a7e3376fce2d1c404532a887eb5b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56b18ce6370a7e3376fce2d1c404532a887eb5b6/comments", "author": {"login": "MaulingMonkey", "id": 75894, "node_id": "MDQ6VXNlcjc1ODk0", "avatar_url": "https://avatars.githubusercontent.com/u/75894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaulingMonkey", "html_url": "https://github.com/MaulingMonkey", "followers_url": "https://api.github.com/users/MaulingMonkey/followers", "following_url": "https://api.github.com/users/MaulingMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/MaulingMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaulingMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaulingMonkey/subscriptions", "organizations_url": "https://api.github.com/users/MaulingMonkey/orgs", "repos_url": "https://api.github.com/users/MaulingMonkey/repos", "events_url": "https://api.github.com/users/MaulingMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/MaulingMonkey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MaulingMonkey", "id": 75894, "node_id": "MDQ6VXNlcjc1ODk0", "avatar_url": "https://avatars.githubusercontent.com/u/75894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaulingMonkey", "html_url": "https://github.com/MaulingMonkey", "followers_url": "https://api.github.com/users/MaulingMonkey/followers", "following_url": "https://api.github.com/users/MaulingMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/MaulingMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaulingMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaulingMonkey/subscriptions", "organizations_url": "https://api.github.com/users/MaulingMonkey/orgs", "repos_url": "https://api.github.com/users/MaulingMonkey/repos", "events_url": "https://api.github.com/users/MaulingMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/MaulingMonkey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a423a70bb303195f09753dfdc5a7c4e149e29ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a423a70bb303195f09753dfdc5a7c4e149e29ff", "html_url": "https://github.com/rust-lang/rust/commit/0a423a70bb303195f09753dfdc5a7c4e149e29ff"}], "stats": {"total": 58, "additions": 26, "deletions": 32}, "files": [{"sha": "d0dc9d11d3963ee1910bbe1f9fe7eafbd71d3e8b", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 25, "deletions": 27, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/56b18ce6370a7e3376fce2d1c404532a887eb5b6/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56b18ce6370a7e3376fce2d1c404532a887eb5b6/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=56b18ce6370a7e3376fce2d1c404532a887eb5b6", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"compiletest\"]\n #![feature(test)]\n-#![feature(path_buf_capacity)]\n #![feature(vec_remove_item)]\n #![deny(warnings, rust_2018_idioms)]\n \n@@ -857,35 +856,34 @@ fn is_pc_windows_msvc_target(target: &String) -> bool {\n }\n \n fn find_cdb(target: &String) -> Option<OsString> {\n-    if cfg!(windows) && is_pc_windows_msvc_target(target) {\n-        let pf86 = env::var_os(\"ProgramFiles(x86)\").or(env::var_os(\"ProgramFiles\"))?;\n-        let cdb_arch = if cfg!(target_arch=\"x86\") {\n-            \"x86\"\n-        } else if cfg!(target_arch=\"x86_64\") {\n-            \"x64\"\n-        } else if cfg!(target_arch=\"aarch64\") {\n-            \"arm64\"\n-        } else if cfg!(target_arch=\"arm\") {\n-            \"arm\"\n-        } else {\n-            return None; // No compatible CDB.exe in the Windows 10 SDK\n-        };\n+    if !(cfg!(windows) && is_pc_windows_msvc_target(target)) {\n+        return None;\n+    }\n+\n+    let pf86 = env::var_os(\"ProgramFiles(x86)\").or(env::var_os(\"ProgramFiles\"))?;\n+    let cdb_arch = if cfg!(target_arch=\"x86\") {\n+        \"x86\"\n+    } else if cfg!(target_arch=\"x86_64\") {\n+        \"x64\"\n+    } else if cfg!(target_arch=\"aarch64\") {\n+        \"arm64\"\n+    } else if cfg!(target_arch=\"arm\") {\n+        \"arm\"\n+    } else {\n+        return None; // No compatible CDB.exe in the Windows 10 SDK\n+    };\n \n-        let mut path = PathBuf::with_capacity(64);\n-        path.push(pf86);\n-        path.push(r\"Windows Kits\\10\\Debuggers\"); // We could check 8.1 etc. too?\n-        path.push(cdb_arch);\n-        path.push(r\"cdb.exe\");\n+    let mut path = PathBuf::new();\n+    path.push(pf86);\n+    path.push(r\"Windows Kits\\10\\Debuggers\"); // We could check 8.1 etc. too?\n+    path.push(cdb_arch);\n+    path.push(r\"cdb.exe\");\n \n-        if path.exists() {\n-            Some(path.into_os_string())\n-        } else {\n-            None\n-        }\n-    }\n-    else {\n-        None\n+    if !path.exists() {\n+        return None;\n     }\n+\n+    Some(path.into_os_string())\n }\n \n /// Returns Path to CDB"}, {"sha": "d87bd66a1ac70ceab4dd9f35cb7b4c0dd4367bb1", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56b18ce6370a7e3376fce2d1c404532a887eb5b6/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56b18ce6370a7e3376fce2d1c404532a887eb5b6/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=56b18ce6370a7e3376fce2d1c404532a887eb5b6", "patch": "@@ -244,11 +244,7 @@ pub fn compute_stamp_hash(config: &Config) -> String {\n     config.stage_id.hash(&mut hash);\n \n     if config.mode == DebugInfoCdb {\n-        match config.cdb {\n-            None => env::var_os(\"ProgramFiles(x86)\").hash(&mut hash),\n-            Some(ref s) if s.is_empty() => env::var_os(\"ProgramFiles(x86)\").hash(&mut hash),\n-            Some(ref s) => s.hash(&mut hash),\n-        }\n+        config.cdb.hash(&mut hash);\n     }\n \n     if config.mode == DebugInfoGdb || config.mode == DebugInfoGdbLldb {"}]}