{"sha": "fdbe206a763516eeb816a5d1c137c87801556479", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYmUyMDZhNzYzNTE2ZWViODE2YTVkMWMxMzdjODc4MDE1NTY0Nzk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-20T03:14:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-20T03:14:29Z"}, "message": "rustdoc: Make doc::retdoc non-optional", "tree": {"sha": "f0eb02a0c53b779a40123dfccf5269e6d90d8b0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0eb02a0c53b779a40123dfccf5269e6d90d8b0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdbe206a763516eeb816a5d1c137c87801556479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdbe206a763516eeb816a5d1c137c87801556479", "html_url": "https://github.com/rust-lang/rust/commit/fdbe206a763516eeb816a5d1c137c87801556479", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdbe206a763516eeb816a5d1c137c87801556479/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6222e98dda4bd3abfe2fdf447535111bfda4d518", "url": "https://api.github.com/repos/rust-lang/rust/commits/6222e98dda4bd3abfe2fdf447535111bfda4d518", "html_url": "https://github.com/rust-lang/rust/commit/6222e98dda4bd3abfe2fdf447535111bfda4d518"}], "stats": {"total": 79, "additions": 31, "deletions": 48}, "files": [{"sha": "4c945a7869f327312e1a34b58f2a74a9cee59476", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=fdbe206a763516eeb816a5d1c137c87801556479", "patch": "@@ -158,20 +158,12 @@ fn fold_fn(\n     }\n \n     fn merge_ret_attrs(\n-        doc: option<doc::retdoc>,\n+        doc: doc::retdoc,\n         attrs: option<str>\n-    ) -> option<doc::retdoc> {\n-        alt doc {\n-          some(doc) {\n-            some({\n-                desc: attrs\n-                with doc\n-            })\n-          }\n-          none {\n-            // FIXME: Warning about documenting nil?\n-            none\n-          }\n+    ) -> doc::retdoc {\n+        {\n+            desc: attrs\n+            with doc\n         }\n     }\n }\n@@ -204,7 +196,7 @@ fn fold_fn_should_extract_return_attributes() {\n     let doc = tystr_pass::mk_pass()(srv, doc);\n     let fold = fold::default_seq_fold(srv);\n     let doc = fold_fn(fold, doc.topmod.fns[0]);\n-    assert option::get(doc.return).desc == some(\"what\");\n+    assert doc.return.desc == some(\"what\");\n }\n \n #[test]"}, {"sha": "7ccd50b9649c04ba5e9f4ca6c3f36c5901351564", "filename": "src/rustdoc/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdoc.rs?ref=fdbe206a763516eeb816a5d1c137c87801556479", "patch": "@@ -22,7 +22,7 @@ type fndoc = ~{\n     brief: option<str>,\n     desc: option<str>,\n     args: [argdoc],\n-    return: option<retdoc>,\n+    return: retdoc,\n     sig: option<str>\n };\n "}, {"sha": "9ce5bfed4fed9b489c9db68291ee35904be0200f", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=fdbe206a763516eeb816a5d1c137c87801556479", "patch": "@@ -80,7 +80,10 @@ fn fndoc_from_fn(\n         brief: none,\n         desc: none,\n         args: argdocs_from_args(decl.inputs),\n-        return: none,\n+        return: {\n+            desc: none,\n+            ty: none\n+        },\n         sig: none\n     }\n }"}, {"sha": "a355bea9934e8f07450f99300bf67fa2ce6e1fbf", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=fdbe206a763516eeb816a5d1c137c87801556479", "patch": "@@ -222,23 +222,18 @@ fn should_write_argument_description() {\n \n fn write_return(\n     ctxt: ctxt,\n-    return: option<doc::retdoc>\n+    doc: doc::retdoc\n ) {\n-    alt return {\n-      some(doc) {\n-        alt doc.ty {\n-          some(ty) {\n-            ctxt.w.write_line(#fmt(\"Returns `%s`\", ty));\n+    alt doc.ty {\n+      some(ty) {\n+        ctxt.w.write_line(#fmt(\"Returns `%s`\", ty));\n+        ctxt.w.write_line(\"\");\n+        alt doc.desc {\n+          some(d) {\n+            ctxt.w.write_line(d);\n             ctxt.w.write_line(\"\");\n-            alt doc.desc {\n-              some(d) {\n-                ctxt.w.write_line(d);\n-                ctxt.w.write_line(\"\");\n-              }\n-              none { }\n-            }\n           }\n-          none { fail \"unimplemented\"; }\n+          none { }\n         }\n       }\n       none { }"}, {"sha": "ba8a5456a27020d443cdf8f24083c4ddf7f7f5c7", "filename": "src/rustdoc/prune_undoc_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fprune_undoc_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Fprune_undoc_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_undoc_pass.rs?ref=fdbe206a763516eeb816a5d1c137c87801556479", "patch": "@@ -32,7 +32,7 @@ fn fold_fn(\n     fold.ctxt.have_docs =\n         doc.brief != none\n         || doc.desc != none\n-        || doc.return != none;\n+        || doc.return.desc != none;\n     ret doc;\n }\n "}, {"sha": "26dcaabe81665cb263b719fb6496f47c43b258af", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbe206a763516eeb816a5d1c137c87801556479/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=fdbe206a763516eeb816a5d1c137c87801556479", "patch": "@@ -62,23 +62,16 @@ fn should_add_fn_sig() {\n fn merge_ret_ty(\n     srv: astsrv::srv,\n     fn_id: doc::ast_id,\n-    doc: option<doc::retdoc>\n-) -> option<doc::retdoc> {\n-    alt doc {\n-      some(doc) {\n-        fail \"unimplemented\";\n-      }\n-      none {\n-        alt get_ret_ty(srv, fn_id) {\n-          some(ty) {\n-            some({\n-                desc: none,\n-                ty: some(ty)\n-            })\n-          }\n-          none { none }\n+    doc: doc::retdoc\n+) -> doc::retdoc {\n+    alt get_ret_ty(srv, fn_id) {\n+      some(ty) {\n+        {\n+            ty: some(ty)\n+            with doc\n         }\n       }\n+      none { doc }\n     }\n }\n \n@@ -105,7 +98,7 @@ fn should_add_fn_ret_types() {\n     let srv = astsrv::mk_srv_from_str(source);\n     let doc = extract::from_srv(srv, \"\");\n     let doc = run(srv, doc);\n-    assert option::get(doc.topmod.fns[0].return).ty == some(\"int\");\n+    assert doc.topmod.fns[0].return.ty == some(\"int\");\n }\n \n #[test]\n@@ -114,7 +107,7 @@ fn should_not_add_nil_ret_type() {\n     let srv = astsrv::mk_srv_from_str(source);\n     let doc = extract::from_srv(srv, \"\");\n     let doc = run(srv, doc);\n-    assert doc.topmod.fns[0].return == none;\n+    assert doc.topmod.fns[0].return.ty == none;\n }\n \n fn merge_arg_tys("}]}