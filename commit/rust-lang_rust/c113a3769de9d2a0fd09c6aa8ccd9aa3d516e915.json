{"sha": "c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMTNhMzc2OWRlOWQyYTBmZDA5YzZhYThjY2Q5YWEzZDUxNmU5MTU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-21T16:23:20Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-23T13:10:26Z"}, "message": "Pass contents and DirEntry to walkers", "tree": {"sha": "b81340417c2be39795c5593f2d7f3ef1077eacf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b81340417c2be39795c5593f2d7f3ef1077eacf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "html_url": "https://github.com/rust-lang/rust/commit/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c33c3e308a4fb6d93352115ec00e99d1920eff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c33c3e308a4fb6d93352115ec00e99d1920eff7", "html_url": "https://github.com/rust-lang/rust/commit/5c33c3e308a4fb6d93352115ec00e99d1920eff7"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "a837d19f3c1336a599280cfa629c2b54ce25fc02", "filename": "src/tools/tidy/src/bins.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fbins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fbins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fbins.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -27,7 +27,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n \n     super::walk(path,\n                 &mut |path| super::filter_dirs(path) || path.ends_with(\"src/etc\"),\n-                &mut |file| {\n+                &mut |entry, _contents| {\n+        let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n         let extensions = [\".py\", \".sh\"];\n         if extensions.iter().any(|e| filename.ends_with(e)) {"}, {"sha": "0d459493938c870af5327732e50969c600b7bbf3", "filename": "src/tools/tidy/src/errors.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferrors.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -13,7 +13,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n     let mut map: HashMap<_, Vec<_>> = HashMap::new();\n     super::walk(path,\n                 &mut |path| super::filter_dirs(path) || path.ends_with(\"src/test\"),\n-                &mut |file| {\n+                &mut |entry, _contents| {\n+        let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n         if filename != \"error_codes.rs\" {\n             return"}, {"sha": "c19e6c6c4e78fabcbfbc26112ab6b4372e4d1679", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -64,7 +64,8 @@ pub fn check(path: &Path, bad: &mut bool, verbose: bool) {\n                        &path.join(\"test/ui-fulldeps\"),\n                        &path.join(\"test/compile-fail\")],\n                      &mut |path| super::filter_dirs(path),\n-                     &mut |file| {\n+                     &mut |entry, _contents| {\n+        let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n         if !filename.ends_with(\".rs\") || filename == \"features.rs\" ||\n            filename == \"diagnostic_list.rs\" {\n@@ -371,7 +372,8 @@ fn map_lib_features(base_src_path: &Path,\n     let mut contents = String::new();\n     super::walk(base_src_path,\n                 &mut |path| super::filter_dirs(path) || path.ends_with(\"src/test\"),\n-                &mut |file| {\n+                &mut |entry, _contents| {\n+        let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n         if !filename.ends_with(\".rs\") || filename == \"features.rs\" ||\n            filename == \"diagnostic_list.rs\" {"}, {"sha": "0f55f297e0e4ef8758e891cd2d93cebaaf6bd679", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -3,7 +3,9 @@\n //! This library contains the tidy lints and exposes it\n //! to be used by tools.\n \n-use walkdir::WalkDir;\n+use walkdir::{DirEntry, WalkDir};\n+use std::fs::File;\n+use std::io::Read;\n \n use std::path::Path;\n \n@@ -65,21 +67,28 @@ fn filter_dirs(path: &Path) -> bool {\n     skip.iter().any(|p| path.ends_with(p))\n }\n \n-fn walk_many(paths: &[&Path], skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn FnMut(&Path)) {\n+fn walk_many(\n+    paths: &[&Path], skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn FnMut(&DirEntry, &str)\n+) {\n     for path in paths {\n         walk(path, skip, f);\n     }\n }\n \n-fn walk(path: &Path, skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn FnMut(&Path)) {\n+fn walk(path: &Path, skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn FnMut(&DirEntry, &str)) {\n     let walker = WalkDir::new(path).into_iter()\n         .filter_entry(|e| !skip(e.path()));\n+    let mut contents = String::new();\n     for entry in walker {\n         if let Ok(entry) = entry {\n             if entry.file_type().is_dir() {\n                 continue;\n             }\n-            f(&entry.path());\n+            contents.clear();\n+            if t!(File::open(entry.path()), entry.path()).read_to_string(&mut contents).is_err() {\n+                contents.clear();\n+            }\n+            f(&entry, &contents);\n         }\n     }\n }"}, {"sha": "b9138517f1e7ead2ace485cbc9e9137ed8327dd3", "filename": "src/tools/tidy/src/libcoretest.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Flibcoretest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Flibcoretest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flibcoretest.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -11,7 +11,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n     super::walk(\n         &libcore_path,\n         &mut |subpath| t!(subpath.strip_prefix(&libcore_path)).starts_with(\"tests\"),\n-        &mut |subpath| {\n+        &mut |entry, _contents| {\n+            let subpath = entry.path();\n             if let Some(\"rs\") = subpath.extension().and_then(|e| e.to_str()) {\n                 match read_to_string(subpath) {\n                     Ok(contents) => {"}, {"sha": "412003c75c3ba67c0aea34fd0428bdaee56828c7", "filename": "src/tools/tidy/src/pal.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -91,7 +91,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n     // Sanity check that the complex parsing here works.\n     let mut saw_target_arch = false;\n     let mut saw_cfg_bang = false;\n-    super::walk(path, &mut super::filter_dirs, &mut |file| {\n+    super::walk(path, &mut super::filter_dirs, &mut |entry, _contents| {\n+        let file = entry.path();\n         let filestr = file.to_string_lossy().replace(\"\\\\\", \"/\");\n         if !filestr.ends_with(\".rs\") { return }\n "}, {"sha": "2db6353358c6b139b37b269c4718af4bfa123685", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -130,7 +130,8 @@ macro_rules! suppressible_tidy_err {\n \n pub fn check(path: &Path, bad: &mut bool) {\n     let mut contents = String::new();\n-    super::walk(path, &mut super::filter_dirs, &mut |file| {\n+    super::walk(path, &mut super::filter_dirs, &mut |entry, _contents| {\n+        let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n         let extensions = [\".rs\", \".py\", \".js\", \".sh\", \".c\", \".cpp\", \".h\"];\n         if extensions.iter().all(|e| !filename.ends_with(e)) ||"}, {"sha": "2d7c1df9c235de5160b861939a15517d6c6ad0c0", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=c113a3769de9d2a0fd09c6aa8ccd9aa3d516e915", "patch": "@@ -7,7 +7,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n     super::walk_many(\n         &[&path.join(\"test/ui\"), &path.join(\"test/ui-fulldeps\")],\n         &mut |_| false,\n-        &mut |file_path| {\n+        &mut |entry, _contents| {\n+            let file_path = entry.path();\n             if let Some(ext) = file_path.extension() {\n                 if ext == \"stderr\" || ext == \"stdout\" {\n                     // Test output filenames have one of the formats:"}]}