{"sha": "360de5ba71a631a118a088dba7c975e9ae592452", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MGRlNWJhNzFhNjMxYTExOGEwODhkYmE3Yzk3NWU5YWU1OTI0NTI=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-20T21:02:31Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-20T21:02:31Z"}, "message": "Recursive collect macros in impl items", "tree": {"sha": "aa270c12c8cebc72908444d9f28722d159b040c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa270c12c8cebc72908444d9f28722d159b040c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/360de5ba71a631a118a088dba7c975e9ae592452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/360de5ba71a631a118a088dba7c975e9ae592452", "html_url": "https://github.com/rust-lang/rust/commit/360de5ba71a631a118a088dba7c975e9ae592452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/360de5ba71a631a118a088dba7c975e9ae592452/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6eab968c601637361e8fbd1ee93ded1b0d967bee", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eab968c601637361e8fbd1ee93ded1b0d967bee", "html_url": "https://github.com/rust-lang/rust/commit/6eab968c601637361e8fbd1ee93ded1b0d967bee"}], "stats": {"total": 61, "additions": 51, "deletions": 10}, "files": [{"sha": "6a65633aefed34a82cfc12d11ceb2cbc60b33c11", "filename": "crates/ra_hir_def/src/data.rs", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/360de5ba71a631a118a088dba7c975e9ae592452/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360de5ba71a631a118a088dba7c975e9ae592452/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdata.rs?ref=360de5ba71a631a118a088dba7c975e9ae592452", "patch": "@@ -226,21 +226,39 @@ fn collect_impl_items_in_macros(\n     let mut res = Vec::new();\n \n     for m in impl_block.value.syntax().children().filter_map(ast::MacroCall::cast) {\n-        if let Some((mark, items)) = expander.enter_expand(db, m) {\n-            let items: InFile<ast::MacroItems> = expander.to_source(items);\n-            expander.exit(db, mark);\n-            res.extend(collect_impl_items(\n-                db,\n-                items.value.items().filter_map(|it| ImplItem::cast(it.syntax().clone())),\n-                items.file_id,\n-                id,\n-            ));\n-        }\n+        res.extend(collect_impl_items_in_macro(db, &mut expander, m, id))\n     }\n \n     res\n }\n \n+fn collect_impl_items_in_macro(\n+    db: &impl DefDatabase,\n+    expander: &mut Expander,\n+    m: ast::MacroCall,\n+    id: ImplId,\n+) -> Vec<AssocItemId> {\n+    if let Some((mark, items)) = expander.enter_expand(db, m) {\n+        let items: InFile<ast::MacroItems> = expander.to_source(items);\n+        let mut res = collect_impl_items(\n+            db,\n+            items.value.items().filter_map(|it| ImplItem::cast(it.syntax().clone())),\n+            items.file_id,\n+            id,\n+        );\n+        // Recursive collect macros\n+        // Note that ast::ModuleItem do not include ast::MacroCall\n+        // We cannot use ModuleItemOwner::items here\n+        for it in items.value.syntax().children().filter_map(ast::MacroCall::cast) {\n+            res.extend(collect_impl_items_in_macro(db, expander, it, id))\n+        }\n+        expander.exit(db, mark);\n+        res\n+    } else {\n+        Vec::new()\n+    }\n+}\n+\n fn collect_impl_items(\n     db: &impl DefDatabase,\n     impl_items: impl Iterator<Item = ImplItem>,"}, {"sha": "69c695cc8f10edf6d8f1051d45e0b345fbcb62df", "filename": "crates/ra_hir_ty/src/tests/macros.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/360de5ba71a631a118a088dba7c975e9ae592452/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360de5ba71a631a118a088dba7c975e9ae592452/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=360de5ba71a631a118a088dba7c975e9ae592452", "patch": "@@ -201,6 +201,29 @@ fn test() { S.foo()<|>; }\n     assert_eq!(t, \"u128\");\n }\n \n+#[test]\n+fn infer_impl_items_generated_by_macros_chain() {\n+    let t = type_at(\n+        r#\"\n+//- /main.rs\n+macro_rules! m_inner {\n+    () => {fn foo(&self) -> u128 {0}}\n+}\n+macro_rules! m {\n+    () => {m_inner!();}\n+}\n+\n+struct S;\n+impl S {\n+    m!();\n+}\n+\n+fn test() { S.foo()<|>; }\n+\"#,\n+    );\n+    assert_eq!(t, \"u128\");\n+}\n+\n #[test]\n fn infer_macro_with_dollar_crate_is_correct_in_expr() {\n     let (db, pos) = TestDB::with_position("}]}