{"sha": "e7c6d348541d19fc93350aef71e5bcbb4bb5ae23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YzZkMzQ4NTQxZDE5ZmM5MzM1MGFlZjcxZTViY2JiNGJiNWFlMjM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-04-07T07:53:49Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-04T05:47:50Z"}, "message": "Use SeperatorTactic::Never for a single argument", "tree": {"sha": "98d617b443dc653250e91129c31cdad6121598a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98d617b443dc653250e91129c31cdad6121598a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23", "html_url": "https://github.com/rust-lang/rust/commit/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8579c1db0e6fef523d5a86d9175fa5f1794fa5a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8579c1db0e6fef523d5a86d9175fa5f1794fa5a7", "html_url": "https://github.com/rust-lang/rust/commit/8579c1db0e6fef523d5a86d9175fa5f1794fa5a7"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "f50b383b943f58e66073f3191f94cf0975ddfdd8", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e7c6d348541d19fc93350aef71e5bcbb4bb5ae23", "patch": "@@ -1752,7 +1752,8 @@ fn rewrite_call_inner<R>(context: &RewriteContext,\n         tactic: tactic,\n         separator: \",\",\n         trailing_separator: if force_no_trailing_comma ||\n-                               context.config.fn_call_style == IndentStyle::Visual {\n+                               context.config.fn_call_style == IndentStyle::Visual ||\n+                               args.len() <= 1 {\n             SeparatorTactic::Never\n         } else {\n             context.config.trailing_comma"}, {"sha": "6e5f4b0802a74ba179514ee9ead681c95dba1cd3", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=e7c6d348541d19fc93350aef71e5bcbb4bb5ae23", "patch": "@@ -1628,7 +1628,8 @@ fn rewrite_fn_base(context: &RewriteContext,\n                                         indent,\n                                         arg_indent,\n                                         args_span,\n-                                        fd.variadic));\n+                                        fd.variadic,\n+                                        generics_str.contains('\\n')));\n \n     let multi_line_arg_str = arg_str.contains('\\n');\n \n@@ -1783,7 +1784,8 @@ fn rewrite_args(context: &RewriteContext,\n                 indent: Indent,\n                 arg_indent: Indent,\n                 span: Span,\n-                variadic: bool)\n+                variadic: bool,\n+                generics_str_contains_newline: bool)\n                 -> Option<String> {\n     let mut arg_item_strs =\n         try_opt!(args.iter()\n@@ -1868,6 +1870,9 @@ fn rewrite_args(context: &RewriteContext,\n     }\n \n     let (indent, trailing_comma, end_with_newline) = match context.config.fn_args_layout {\n+        IndentStyle::Block if !generics_str_contains_newline && arg_items.len() <= 1 => {\n+            (indent.block_indent(context.config), SeparatorTactic::Never, true)\n+        }\n         IndentStyle::Block => {\n             (indent.block_indent(context.config), SeparatorTactic::Vertical, true)\n         }"}, {"sha": "1a134128d2b2b7040aa0d7fecb92b2f2d0695e48", "filename": "tests/target/fn-custom-7.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23/tests%2Ftarget%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7c6d348541d19fc93350aef71e5bcbb4bb5ae23/tests%2Ftarget%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-7.rs?ref=e7c6d348541d19fc93350aef71e5bcbb4bb5ae23", "patch": "@@ -4,7 +4,7 @@\n // rustfmt-fn_brace_style: AlwaysNextLine\n \n // Case with only one variable.\n-fn foo(a: u8,) -> u8\n+fn foo(a: u8) -> u8\n {\n     bar()\n }\n@@ -30,11 +30,11 @@ fn foo(\n }\n \n trait Test {\n-    fn foo(a: u8,)\n+    fn foo(a: u8)\n     {\n     }\n \n-    fn bar(a: u8,) -> String\n+    fn bar(a: u8) -> String\n     {\n     }\n }"}]}