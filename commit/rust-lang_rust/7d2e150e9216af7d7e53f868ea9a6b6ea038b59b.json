{"sha": "7d2e150e9216af7d7e53f868ea9a6b6ea038b59b", "node_id": "C_kwDOAAsO6NoAKDdkMmUxNTBlOTIxNmFmN2Q3ZTUzZjg2OGVhOWE2YjZlYTAzOGI1OWI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-09-06T15:00:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-06T15:00:29Z"}, "message": "Rollup merge of #101471 - compiler-errors:delay-bug-are-count-too, r=oli-obk\n\nReport number of delayed bugs properly with `-Ztreat-err-as-bug`\n\nReport the number of delayed bugs that went into the `-Ztreat-errr-as-bug=N` being triggered, even if we don't count it in the err_count in regular diagnostic output.\n\nSometimes we have a session that creates a few diagnostics, perhaps: Error, Delay bug, Error, then Delay bug.\nIf I ran `-Ztreat-err-as-bug=3`, then I will now see \"aborting after 2 errors and 1 delayed bugs\" instead of just \"after 2 errors\" which is confusing since I passed `3`.", "tree": {"sha": "7929a4bac79012c9e1c4c275854837bf07aa06fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7929a4bac79012c9e1c4c275854837bf07aa06fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d2e150e9216af7d7e53f868ea9a6b6ea038b59b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjF2CNCRBK7hj4Ov3rIwAAFMMIAFc4eGwQU8ZOG1xouwepvrF8\nR6CYjlqT2PdJlJayXywqGl9nOONGgHkXvio4fC2AHR8O9ujy7y41FDZdfbDmHS2D\nANZucrdEqxa170SZYPMXM0XHqm+vXa9f48qTzd3j9EcunT/Vip7hP1wcGhALiBzG\n+B999wx0WUIzWglVXDcZsxt10Br6mTGoO3rOllPm576mBfNoCin7FyFNNUioHJ03\nKft8xC1BQgPvxiZj8gxuEWRm7y+8pxT2Tz8IyJhAZSOzidqv9qo984Zh8FHQcd7C\nB6/AJ6DN5gsQA4YN7QHWuhsipigxne4KTIvmHCHsEU0KlfZ1YOmv+PVTChUN7uA=\n=6Ke0\n-----END PGP SIGNATURE-----\n", "payload": "tree 7929a4bac79012c9e1c4c275854837bf07aa06fa\nparent b59c1aa29891da79df8fbba2ea915ac2275781e2\nparent 38935bbe6a91212e77d535dbad31d369e9a4a453\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1662476429 +0200\ncommitter GitHub <noreply@github.com> 1662476429 +0200\n\nRollup merge of #101471 - compiler-errors:delay-bug-are-count-too, r=oli-obk\n\nReport number of delayed bugs properly with `-Ztreat-err-as-bug`\n\nReport the number of delayed bugs that went into the `-Ztreat-errr-as-bug=N` being triggered, even if we don't count it in the err_count in regular diagnostic output.\n\nSometimes we have a session that creates a few diagnostics, perhaps: Error, Delay bug, Error, then Delay bug.\nIf I ran `-Ztreat-err-as-bug=3`, then I will now see \"aborting after 2 errors and 1 delayed bugs\" instead of just \"after 2 errors\" which is confusing since I passed `3`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d2e150e9216af7d7e53f868ea9a6b6ea038b59b", "html_url": "https://github.com/rust-lang/rust/commit/7d2e150e9216af7d7e53f868ea9a6b6ea038b59b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d2e150e9216af7d7e53f868ea9a6b6ea038b59b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b59c1aa29891da79df8fbba2ea915ac2275781e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b59c1aa29891da79df8fbba2ea915ac2275781e2", "html_url": "https://github.com/rust-lang/rust/commit/b59c1aa29891da79df8fbba2ea915ac2275781e2"}, {"sha": "38935bbe6a91212e77d535dbad31d369e9a4a453", "url": "https://api.github.com/repos/rust-lang/rust/commits/38935bbe6a91212e77d535dbad31d369e9a4a453", "html_url": "https://github.com/rust-lang/rust/commit/38935bbe6a91212e77d535dbad31d369e9a4a453"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "37ff6dcff7d795c26efaef3eadc111c9ad5ed81d", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7d2e150e9216af7d7e53f868ea9a6b6ea038b59b/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2e150e9216af7d7e53f868ea9a6b6ea038b59b/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=7d2e150e9216af7d7e53f868ea9a6b6ea038b59b", "patch": "@@ -1250,14 +1250,14 @@ impl HandlerInner {\n \n     fn treat_err_as_bug(&self) -> bool {\n         self.flags.treat_err_as_bug.map_or(false, |c| {\n-            self.err_count()\n-                + self.lint_err_count\n-                + self.delayed_span_bugs.len()\n-                + self.delayed_good_path_bugs.len()\n-                >= c.get()\n+            self.err_count() + self.lint_err_count + self.delayed_bug_count() >= c.get()\n         })\n     }\n \n+    fn delayed_bug_count(&self) -> usize {\n+        self.delayed_span_bugs.len() + self.delayed_good_path_bugs.len()\n+    }\n+\n     fn print_error_count(&mut self, registry: &Registry) {\n         self.emit_stashed_diagnostics();\n \n@@ -1412,12 +1412,7 @@ impl HandlerInner {\n         // incrementing `err_count` by one, so we need to +1 the comparing.\n         // FIXME: Would be nice to increment err_count in a more coherent way.\n         if self.flags.treat_err_as_bug.map_or(false, |c| {\n-            self.err_count()\n-                + self.lint_err_count\n-                + self.delayed_span_bugs.len()\n-                + self.delayed_good_path_bugs.len()\n-                + 1\n-                >= c.get()\n+            self.err_count() + self.lint_err_count + self.delayed_bug_count() + 1 >= c.get()\n         }) {\n             // FIXME: don't abort here if report_delayed_bugs is off\n             self.span_bug(sp, msg);\n@@ -1518,14 +1513,24 @@ impl HandlerInner {\n         if self.treat_err_as_bug() {\n             match (\n                 self.err_count() + self.lint_err_count,\n+                self.delayed_bug_count(),\n                 self.flags.treat_err_as_bug.map(|c| c.get()).unwrap_or(0),\n             ) {\n-                (1, 1) => panic!(\"aborting due to `-Z treat-err-as-bug=1`\"),\n-                (0 | 1, _) => {}\n-                (count, as_bug) => panic!(\n-                    \"aborting after {} errors due to `-Z treat-err-as-bug={}`\",\n-                    count, as_bug,\n-                ),\n+                (1, 0, 1) => panic!(\"aborting due to `-Z treat-err-as-bug=1`\"),\n+                (0, 1, 1) => panic!(\"aborting due delayed bug with `-Z treat-err-as-bug=1`\"),\n+                (count, delayed_count, as_bug) => {\n+                    if delayed_count > 0 {\n+                        panic!(\n+                            \"aborting after {} errors and {} delayed bugs due to `-Z treat-err-as-bug={}`\",\n+                            count, delayed_count, as_bug,\n+                        )\n+                    } else {\n+                        panic!(\n+                            \"aborting after {} errors due to `-Z treat-err-as-bug={}`\",\n+                            count, as_bug,\n+                        )\n+                    }\n+                }\n             }\n         }\n     }"}]}