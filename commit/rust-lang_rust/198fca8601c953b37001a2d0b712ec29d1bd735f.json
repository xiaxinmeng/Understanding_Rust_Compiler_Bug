{"sha": "198fca8601c953b37001a2d0b712ec29d1bd735f", "node_id": "C_kwDOAAsO6NoAKDE5OGZjYTg2MDFjOTUzYjM3MDAxYTJkMGI3MTJlYzI5ZDFiZDczNWY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-31T22:14:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-31T22:14:44Z"}, "message": "Rollup merge of #91375 - Apteryks:per-target-default-linker, r=Mark-Simulacrum\n\nconfig.rs: Add support for a per-target default_linker option.\n\n* src/bootstrap/config.rs (Target) <default_linker>: New field.\n(TomlTarget): Likewise.\n* src/bootstrap/compile.rs (rustc_cargo_env): Prefer a\ntarget-specified default_linker over a global one if available.\n* config.toml.example: Adjust doc.", "tree": {"sha": "f4977a92333e0f5b3e7eb5354851c6942f1dcd15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4977a92333e0f5b3e7eb5354851c6942f1dcd15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/198fca8601c953b37001a2d0b712ec29d1bd735f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhz4DVCRBK7hj4Ov3rIwAAuegIADSPjqsgtIMzrsTVN9WkeGuu\n+aggJTJkXEXsdHdvEfNBEs6CFX+AcjA/GUNnmVy3WA/Te3emQ2cVtJsvQPKwHfEE\n+5dgm17gj8AZzxXjjhom9PCupfV0ezyYv/PtdXZHdEyQRQo2OLBeKgz67fstyx7A\nKXQlOad1sM4SDoBz0n/vWrVaLwULf27b2Lw21kMkcLlvszZFDpHDrKx5bqBuJIgq\n+lZNxkESU8IdyvKHXhD3j7GjlKKF0ID/1ywowE45/jvSU7BS37eyomIqnHZF2Ga1\n5Gfqc5dgnEraPGArBu8F/uyqhlmqSFHYYo3QVJhu6FjsTVAM3qr2AFsCRKY30Ms=\n=e/dI\n-----END PGP SIGNATURE-----\n", "payload": "tree f4977a92333e0f5b3e7eb5354851c6942f1dcd15\nparent ac1060e188bc30800726609ae65b1f1a4ad7291e\nparent b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1640988884 +0100\ncommitter GitHub <noreply@github.com> 1640988884 +0100\n\nRollup merge of #91375 - Apteryks:per-target-default-linker, r=Mark-Simulacrum\n\nconfig.rs: Add support for a per-target default_linker option.\n\n* src/bootstrap/config.rs (Target) <default_linker>: New field.\n(TomlTarget): Likewise.\n* src/bootstrap/compile.rs (rustc_cargo_env): Prefer a\ntarget-specified default_linker over a global one if available.\n* config.toml.example: Adjust doc.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/198fca8601c953b37001a2d0b712ec29d1bd735f", "html_url": "https://github.com/rust-lang/rust/commit/198fca8601c953b37001a2d0b712ec29d1bd735f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/198fca8601c953b37001a2d0b712ec29d1bd735f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac1060e188bc30800726609ae65b1f1a4ad7291e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac1060e188bc30800726609ae65b1f1a4ad7291e", "html_url": "https://github.com/rust-lang/rust/commit/ac1060e188bc30800726609ae65b1f1a4ad7291e"}, {"sha": "b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "html_url": "https://github.com/rust-lang/rust/commit/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "f24f8e81a7944ef4a49483a93abdfcb50d6ef037", "filename": "config.toml.example", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/198fca8601c953b37001a2d0b712ec29d1bd735f/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/198fca8601c953b37001a2d0b712ec29d1bd735f/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=198fca8601c953b37001a2d0b712ec29d1bd735f", "patch": "@@ -488,9 +488,12 @@ changelog-seen = 2\n # FIXME(#75760): Some UI tests fail when this option is enabled.\n #parallel-compiler = false\n \n-# The default linker that will be hard-coded into the generated compiler for\n-# targets that don't specify linker explicitly in their target specifications.\n-# Note that this is not the linker used to link said compiler.\n+# The default linker that will be hard-coded into the generated\n+# compiler for targets that don't specify a default linker explicitly\n+# in their target specifications.  Note that this is not the linker\n+# used to link said compiler. It can also be set per-target (via the\n+# `[target.<triple>]` block), which may be useful in a cross-compilation\n+# setting.\n #\n # See https://doc.rust-lang.org/rustc/codegen-options/index.html#linker for more information.\n #default-linker = <none> (path)"}, {"sha": "c0ab093f9524ad8c2a443b08a92a7d45350ec103", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/198fca8601c953b37001a2d0b712ec29d1bd735f/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198fca8601c953b37001a2d0b712ec29d1bd735f/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=198fca8601c953b37001a2d0b712ec29d1bd735f", "patch": "@@ -662,6 +662,8 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n         .env(\"CFG_VERSION\", builder.rust_version());\n \n     let libdir_relative = builder.config.libdir_relative().unwrap_or_else(|| Path::new(\"lib\"));\n+    let target_config = builder.config.target_config.get(&target);\n+\n     cargo.env(\"CFG_LIBDIR_RELATIVE\", libdir_relative);\n \n     if let Some(ref ver_date) = builder.rust_info.commit_date() {\n@@ -673,9 +675,15 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n     if !builder.unstable_features() {\n         cargo.env(\"CFG_DISABLE_UNSTABLE_FEATURES\", \"1\");\n     }\n-    if let Some(ref s) = builder.config.rustc_default_linker {\n+\n+    // Prefer the current target's own default_linker, else a globally\n+    // specified one.\n+    if let Some(s) = target_config.and_then(|c| c.default_linker.as_ref()) {\n+        cargo.env(\"CFG_DEFAULT_LINKER\", s);\n+    } else if let Some(ref s) = builder.config.rustc_default_linker {\n         cargo.env(\"CFG_DEFAULT_LINKER\", s);\n     }\n+\n     if builder.config.rustc_parallel {\n         cargo.rustflag(\"--cfg=parallel_compiler\");\n         cargo.rustdocflag(\"--cfg=parallel_compiler\");\n@@ -700,7 +708,6 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n         }\n         let llvm_config = builder.ensure(native::Llvm { target });\n         cargo.env(\"LLVM_CONFIG\", &llvm_config);\n-        let target_config = builder.config.target_config.get(&target);\n         if let Some(s) = target_config.and_then(|c| c.llvm_config.as_ref()) {\n             cargo.env(\"CFG_LLVM_ROOT\", s);\n         }"}, {"sha": "7a4593a75f280b06cd6bf9324a5947dce8d74b2d", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198fca8601c953b37001a2d0b712ec29d1bd735f/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198fca8601c953b37001a2d0b712ec29d1bd735f/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=198fca8601c953b37001a2d0b712ec29d1bd735f", "patch": "@@ -294,6 +294,7 @@ pub struct Target {\n     pub cxx: Option<PathBuf>,\n     pub ar: Option<PathBuf>,\n     pub ranlib: Option<PathBuf>,\n+    pub default_linker: Option<PathBuf>,\n     pub linker: Option<PathBuf>,\n     pub ndk: Option<PathBuf>,\n     pub sanitizers: Option<bool>,\n@@ -531,6 +532,7 @@ struct TomlTarget {\n     cxx: Option<String>,\n     ar: Option<String>,\n     ranlib: Option<String>,\n+    default_linker: Option<PathBuf>,\n     linker: Option<String>,\n     llvm_config: Option<String>,\n     llvm_filecheck: Option<String>,"}]}