{"sha": "a05df2ea19c1a2c074fcf98211d3418ba9af479c", "node_id": "C_kwDOAAsO6NoAKGEwNWRmMmVhMTljMWEyYzA3NGZjZjk4MjExZDM0MThiYTlhZjQ3OWM", "commit": {"author": {"name": "Austin Kiekintveld", "email": "akiekintveld@icloud.com", "date": "2022-05-02T02:02:28Z"}, "committer": {"name": "Austin Kiekintveld", "email": "akiekintveld@icloud.com", "date": "2022-05-02T02:02:28Z"}, "message": "Fix formatting", "tree": {"sha": "4ff9962e0192ae64aae27fa5a3942dd15ce667ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ff9962e0192ae64aae27fa5a3942dd15ce667ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a05df2ea19c1a2c074fcf98211d3418ba9af479c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a05df2ea19c1a2c074fcf98211d3418ba9af479c", "html_url": "https://github.com/rust-lang/rust/commit/a05df2ea19c1a2c074fcf98211d3418ba9af479c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a05df2ea19c1a2c074fcf98211d3418ba9af479c/comments", "author": null, "committer": null, "parents": [{"sha": "df4457e20bb6017de97ff69af58a0a92a3a5b423", "url": "https://api.github.com/repos/rust-lang/rust/commits/df4457e20bb6017de97ff69af58a0a92a3a5b423", "html_url": "https://github.com/rust-lang/rust/commit/df4457e20bb6017de97ff69af58a0a92a3a5b423"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "a3842b3f857ced4cd8a375b9db74ab84393cf56a", "filename": "library/std/src/sys_common/condvar/check.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a05df2ea19c1a2c074fcf98211d3418ba9af479c/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05df2ea19c1a2c074fcf98211d3418ba9af479c/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs?ref=a05df2ea19c1a2c074fcf98211d3418ba9af479c", "patch": "@@ -24,8 +24,12 @@ impl SameMutexCheck {\n     }\n     pub fn verify(&self, mutex: &MovableMutex) {\n         let addr = mutex.raw() as *const imp::Mutex as *const () as *mut _;\n-        match self.addr.compare_exchange(ptr::null_mut(), addr, Ordering::Relaxed, Ordering::Relaxed)\n-        {\n+        match self.addr.compare_exchange(\n+            ptr::null_mut(),\n+            addr,\n+            Ordering::Relaxed,\n+            Ordering::Relaxed,\n+        ) {\n             Ok(_) => {}               // Stored the address\n             Err(n) if n == addr => {} // Lost a race to store the same address\n             _ => panic!(\"attempted to use a condition variable with two mutexes\"),"}]}