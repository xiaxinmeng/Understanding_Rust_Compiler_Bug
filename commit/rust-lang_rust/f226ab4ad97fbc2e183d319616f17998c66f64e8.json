{"sha": "f226ab4ad97fbc2e183d319616f17998c66f64e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMjZhYjRhZDk3ZmJjMmUxODNkMzE5NjE2ZjE3OTk4YzY2ZjY0ZTg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-25T19:40:21Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-27T17:33:50Z"}, "message": "Remove lift_to_global", "tree": {"sha": "ca6f28c77f43e3e039c71cfb5513050538b13ca6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca6f28c77f43e3e039c71cfb5513050538b13ca6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f226ab4ad97fbc2e183d319616f17998c66f64e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f226ab4ad97fbc2e183d319616f17998c66f64e8", "html_url": "https://github.com/rust-lang/rust/commit/f226ab4ad97fbc2e183d319616f17998c66f64e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f226ab4ad97fbc2e183d319616f17998c66f64e8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d540d44c711d0ef9317aa4b8e8b563321e3c35bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d540d44c711d0ef9317aa4b8e8b563321e3c35bb", "html_url": "https://github.com/rust-lang/rust/commit/d540d44c711d0ef9317aa4b8e8b563321e3c35bb"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "cf82184ab032c4b5b40ffd665f9715ca5da548fe", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=f226ab4ad97fbc2e183d319616f17998c66f64e8", "patch": "@@ -1504,7 +1504,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n             Goto { .. } => vec![\"\".into()],\n             SwitchInt { ref values, switch_ty, .. } => ty::tls::with(|tcx| {\n                 let param_env = ty::ParamEnv::empty();\n-                let switch_ty = tcx.lift_to_global(&switch_ty).unwrap();\n+                let switch_ty = tcx.lift(&switch_ty).unwrap();\n                 let size = tcx.layout_of(param_env.and(switch_ty)).unwrap().size;\n                 values\n                     .iter()"}, {"sha": "5986388679fb808ae5add9d0a8a7c2eff1abbb7f", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=f226ab4ad97fbc2e183d319616f17998c66f64e8", "patch": "@@ -1148,11 +1148,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         value.lift_to_tcx(self)\n     }\n \n-    /// Like lift, but only tries in the global tcx.\n-    pub fn lift_to_global<T: ?Sized + Lift<'tcx>>(self, value: &T) -> Option<T::Lifted> {\n-        value.lift_to_tcx(self)\n-    }\n-\n     /// Creates a type context and call the closure with a `TyCtxt` reference\n     /// to the context. The closure enforces that the type context and any interned\n     /// value (types, substs, etc.) can only be used while `ty::tls` has a valid"}, {"sha": "5851a48a8d3773edc3dc816a0506f3760475d408", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=f226ab4ad97fbc2e183d319616f17998c66f64e8", "patch": "@@ -193,7 +193,7 @@ impl<'tcx> ty::TyS<'tcx> {\n             ty::Adt(def, _) => format!(\"{} `{}`\", def.descr(), tcx.def_path_str(def.did)).into(),\n             ty::Foreign(def_id) => format!(\"extern type `{}`\", tcx.def_path_str(def_id)).into(),\n             ty::Array(_, n) => {\n-                let n = tcx.lift_to_global(&n).unwrap();\n+                let n = tcx.lift(&n).unwrap();\n                 match n.try_eval_usize(tcx, ty::ParamEnv::empty()) {\n                     Some(n) => {\n                         format!(\"array of {} element{}\", n, pluralise!(n)).into()"}, {"sha": "e004fa07f2c0fb421ea95d4e8f5586a01fe5215f", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=f226ab4ad97fbc2e183d319616f17998c66f64e8", "patch": "@@ -917,7 +917,7 @@ pub trait PrettyPrinter<'tcx>:\n                     let min = 1u128 << (bit_size - 1);\n                     let max = min - 1;\n \n-                    let ty = self.tcx().lift_to_global(&ct.ty).unwrap();\n+                    let ty = self.tcx().lift(&ct.ty).unwrap();\n                     let size = self.tcx().layout_of(ty::ParamEnv::empty().and(ty))\n                         .unwrap()\n                         .size;"}, {"sha": "d3448b28c14912d206a1d8e6d3f361ec6c05538f", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=f226ab4ad97fbc2e183d319616f17998c66f64e8", "patch": "@@ -632,7 +632,7 @@ impl<'cx, 'tcx> DataflowResultsConsumer<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tcx\n                 // \"Lift\" into the tcx -- once regions are erased, this type should be in the\n                 // global arenas; this \"lift\" operation basically just asserts that is true, but\n                 // that is useful later.\n-                tcx.lift_to_global(&drop_place_ty).unwrap();\n+                tcx.lift(&drop_place_ty).unwrap();\n \n                 debug!(\"visit_terminator_drop \\\n                         loc: {:?} term: {:?} drop_place: {:?} drop_place_ty: {:?} span: {:?}\","}, {"sha": "54d580ec05d71263248e2d107f55f295f5cb062b", "filename": "src/librustc_traits/chalk_context/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f226ab4ad97fbc2e183d319616f17998c66f64e8/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs?ref=f226ab4ad97fbc2e183d319616f17998c66f64e8", "patch": "@@ -474,7 +474,7 @@ impl context::UnificationOps<ChalkArenas<'tcx>, ChalkArenas<'tcx>>\n         &self,\n         value: DelayedLiteral<ChalkArenas<'tcx>>,\n     ) -> DelayedLiteral<ChalkArenas<'tcx>> {\n-        match self.infcx.tcx.lift_to_global(&value) {\n+        match self.infcx.tcx.lift(&value) {\n             Some(literal) => literal,\n             None => bug!(\"cannot lift {:?}\", value),\n         }"}]}