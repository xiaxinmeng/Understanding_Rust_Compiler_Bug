{"sha": "3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlN2EyMmUzYmNjMjY0YWQ1ZDVhNjAxZjEwNmY2ZmI5YWQ1NjRkOGU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-14T05:15:56Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-26T18:23:55Z"}, "message": "Remove outdated comment", "tree": {"sha": "04723ad6fb9c289f9306fc668bcc4a0407c27e6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04723ad6fb9c289f9306fc668bcc4a0407c27e6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e", "html_url": "https://github.com/rust-lang/rust/commit/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b6b506ef4b62d5099833b11cb8a639644933c6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b6b506ef4b62d5099833b11cb8a639644933c6f", "html_url": "https://github.com/rust-lang/rust/commit/4b6b506ef4b62d5099833b11cb8a639644933c6f"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "eacea848d94457d7c5c38ba3220881233a329a5d", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e", "patch": "@@ -1365,9 +1365,6 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n \n     /// Attempts to resolve the module part of an import directive or path\n     /// rooted at the given module.\n-    ///\n-    /// On success, returns the resolved module, and the closest *private*\n-    /// module found to the destination when resolving this path.\n     fn resolve_module_path(&mut self,\n                            module_path: &[Name],\n                            use_lexical_scope: UseLexicalScopeFlag,"}]}