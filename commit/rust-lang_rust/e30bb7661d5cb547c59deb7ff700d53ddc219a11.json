{"sha": "e30bb7661d5cb547c59deb7ff700d53ddc219a11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMGJiNzY2MWQ1Y2I1NDdjNTlkZWI3ZmY3MDBkNTNkZGMyMTlhMTE=", "commit": {"author": {"name": "oliver", "email": "metreo@sent.com", "date": "2020-11-22T04:50:09Z"}, "committer": {"name": "oliver", "email": "metreo@sent.com", "date": "2020-11-22T04:50:09Z"}, "message": "update", "tree": {"sha": "5d1b24eff06a1357268eb0aa43e0764a8a521579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d1b24eff06a1357268eb0aa43e0764a8a521579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e30bb7661d5cb547c59deb7ff700d53ddc219a11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e30bb7661d5cb547c59deb7ff700d53ddc219a11", "html_url": "https://github.com/rust-lang/rust/commit/e30bb7661d5cb547c59deb7ff700d53ddc219a11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e30bb7661d5cb547c59deb7ff700d53ddc219a11/comments", "author": null, "committer": null, "parents": [{"sha": "0402c6ace7aff13bef4791f578ffb623da69fef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0402c6ace7aff13bef4791f578ffb623da69fef2", "html_url": "https://github.com/rust-lang/rust/commit/0402c6ace7aff13bef4791f578ffb623da69fef2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "887a97d7a01734dafb5269bcac6c57b62a2978db", "filename": "tests/ui/manual_ok_or.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e30bb7661d5cb547c59deb7ff700d53ddc219a11/tests%2Fui%2Fmanual_ok_or.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e30bb7661d5cb547c59deb7ff700d53ddc219a11/tests%2Fui%2Fmanual_ok_or.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_ok_or.fixed?ref=e30bb7661d5cb547c59deb7ff700d53ddc219a11", "patch": "@@ -28,7 +28,7 @@ fn main() {\n     // not applicable, or side isn't `Result::Err`\n     foo.map_or(Ok::<i32, &str>(1), |v| Ok(v));\n \n-    // not applicatble, expr is not a `Result` value\n+    // not applicable, expr is not a `Result` value\n     foo.map_or(42, |v| v);\n \n     // TODO patterns not covered yet"}, {"sha": "3c99872f5022a32cb4a35394fe12e8ba46b0e362", "filename": "tests/ui/manual_ok_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e30bb7661d5cb547c59deb7ff700d53ddc219a11/tests%2Fui%2Fmanual_ok_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e30bb7661d5cb547c59deb7ff700d53ddc219a11/tests%2Fui%2Fmanual_ok_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_ok_or.rs?ref=e30bb7661d5cb547c59deb7ff700d53ddc219a11", "patch": "@@ -32,7 +32,7 @@ fn main() {\n     // not applicable, or side isn't `Result::Err`\n     foo.map_or(Ok::<i32, &str>(1), |v| Ok(v));\n \n-    // not applicatble, expr is not a `Result` value\n+    // not applicable, expr is not a `Result` value\n     foo.map_or(42, |v| v);\n \n     // TODO patterns not covered yet"}]}