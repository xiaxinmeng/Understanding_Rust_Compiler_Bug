{"sha": "91a8496b64675a0f3389b1827078a3c0389ebd89", "node_id": "C_kwDOAAsO6NoAKDkxYTg0OTZiNjQ2NzVhMGYzMzg5YjE4MjcwNzhhM2MwMzg5ZWJkODk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-25T10:31:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-25T10:31:33Z"}, "message": "Rollup merge of #108404 - ozkanonur:108004, r=jyn514\n\nsupport `x fmt` for sub and outside of rust directories\n\nThis PR makes `x fmt` to be succesfully work from sub or outside dir of rust.\n\nThe following cases are tested and the results were successful.\n```sh\n# from rust/library directory\n../x fmt compiler --check\n../x fmt compiler/rustc\n\n# from outside of rust directory\n../../rust/x fmt library/std library/core --check\n../../rust/x fmt library/std\n```\n\nResolves #108004\n\nr? ``@albertlarsan68``", "tree": {"sha": "701548b2faaf83c73068e1f5d1672b5b2ed4ec7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/701548b2faaf83c73068e1f5d1672b5b2ed4ec7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91a8496b64675a0f3389b1827078a3c0389ebd89", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj+eOFCRBK7hj4Ov3rIwAAaL4IAEbs3loe/12ETax+pphtJyDR\nSPhb1McfeYVqWlsQWjqL6P/9Nwdk0U74VZBYq7NwSo2BWjc8Zuw/z70z3JqqiGjT\nFlRqigoPR1F1UzQc2LVeamVlNmNn6mFMg6o4OTKZlLYvLdgQqC1ZQZD2+yY3t8n1\nhbE+c+nf7v1tW3CIAib7+WcCYeZiDZBT49lp6fjQv8eSyp2MMuJFR8F+t+s+0Yfu\nIxprDCPAGd237DCfqj4Udl4v62U67WSJk8tVSUh0Zd5Pky7bJF9ZC1NMhqTfmffl\nBWU4PpBfkFE27fmCVjG97/NK6I0xxb/70r/WvPpEP6vSDviEacf8vlP4I84HD54=\n=ttLY\n-----END PGP SIGNATURE-----\n", "payload": "tree 701548b2faaf83c73068e1f5d1672b5b2ed4ec7f\nparent 94a783524c1795c93a66348b4554c80120973962\nparent 49516b3f5705c201a915c1b0c690d0f112da6c6a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677321093 +0100\ncommitter GitHub <noreply@github.com> 1677321093 +0100\n\nRollup merge of #108404 - ozkanonur:108004, r=jyn514\n\nsupport `x fmt` for sub and outside of rust directories\n\nThis PR makes `x fmt` to be succesfully work from sub or outside dir of rust.\n\nThe following cases are tested and the results were successful.\n```sh\n# from rust/library directory\n../x fmt compiler --check\n../x fmt compiler/rustc\n\n# from outside of rust directory\n../../rust/x fmt library/std library/core --check\n../../rust/x fmt library/std\n```\n\nResolves #108004\n\nr? ``@albertlarsan68``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91a8496b64675a0f3389b1827078a3c0389ebd89", "html_url": "https://github.com/rust-lang/rust/commit/91a8496b64675a0f3389b1827078a3c0389ebd89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91a8496b64675a0f3389b1827078a3c0389ebd89/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94a783524c1795c93a66348b4554c80120973962", "url": "https://api.github.com/repos/rust-lang/rust/commits/94a783524c1795c93a66348b4554c80120973962", "html_url": "https://github.com/rust-lang/rust/commit/94a783524c1795c93a66348b4554c80120973962"}, {"sha": "49516b3f5705c201a915c1b0c690d0f112da6c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/49516b3f5705c201a915c1b0c690d0f112da6c6a", "html_url": "https://github.com/rust-lang/rust/commit/49516b3f5705c201a915c1b0c690d0f112da6c6a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ae72a42973cd143af82f0d7158499b00e950bf97", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91a8496b64675a0f3389b1827078a3c0389ebd89/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91a8496b64675a0f3389b1827078a3c0389ebd89/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=91a8496b64675a0f3389b1827078a3c0389ebd89", "patch": "@@ -218,7 +218,7 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n                     WalkBuilder::new(first)\n                 }\n             } else {\n-                WalkBuilder::new(first)\n+                WalkBuilder::new(src.join(first))\n             };\n \n             for path in &paths[1..] {\n@@ -229,7 +229,7 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n                         walker.add(path);\n                     }\n                 } else {\n-                    walker.add(path);\n+                    walker.add(src.join(path));\n                 }\n             }\n "}]}