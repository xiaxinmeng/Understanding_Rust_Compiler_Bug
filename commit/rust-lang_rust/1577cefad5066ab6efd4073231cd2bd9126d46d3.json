{"sha": "1577cefad5066ab6efd4073231cd2bd9126d46d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NzdjZWZhZDUwNjZhYjZlZmQ0MDczMjMxY2QyYmQ5MTI2ZDQ2ZDM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-27T22:31:19Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-08-30T01:54:25Z"}, "message": "Add support for `Yield`", "tree": {"sha": "be051881d8c38b4e316940c09549a0c962b4a6af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be051881d8c38b4e316940c09549a0c962b4a6af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1577cefad5066ab6efd4073231cd2bd9126d46d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1577cefad5066ab6efd4073231cd2bd9126d46d3", "html_url": "https://github.com/rust-lang/rust/commit/1577cefad5066ab6efd4073231cd2bd9126d46d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1577cefad5066ab6efd4073231cd2bd9126d46d3/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "897b224b5415f838c209871d073b7f5b5e436180", "url": "https://api.github.com/repos/rust-lang/rust/commits/897b224b5415f838c209871d073b7f5b5e436180", "html_url": "https://github.com/rust-lang/rust/commit/897b224b5415f838c209871d073b7f5b5e436180"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "953001337759824b16237c64b6305f96cfbfa0f9", "filename": "src/expr.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1577cefad5066ab6efd4073231cd2bd9126d46d3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1577cefad5066ab6efd4073231cd2bd9126d46d3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=1577cefad5066ab6efd4073231cd2bd9126d46d3", "patch": "@@ -181,6 +181,17 @@ pub fn format_expr(\n                 )\n             }\n         }\n+        ast::ExprKind::Yield(ref opt_expr) => {\n+            if let Some(ref expr) = *opt_expr {\n+                rewrite_unary_prefix(context, \"yield \", &**expr, shape)\n+            } else {\n+                wrap_str(\n+                    \"yield\".to_string(),\n+                    context.config.max_width(),\n+                    shape,\n+                )\n+            }\n+        }\n         ast::ExprKind::Closure(capture, ref fn_decl, ref body, _) => {\n             rewrite_closure(capture, fn_decl, body, expr.span, context, shape)\n         }"}]}