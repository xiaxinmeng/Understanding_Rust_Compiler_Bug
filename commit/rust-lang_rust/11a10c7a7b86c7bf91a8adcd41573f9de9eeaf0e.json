{"sha": "11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYTEwYzdhN2I4NmM3YmY5MWE4YWRjZDQxNTczZjlkZTllZWFmMGU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-10T01:29:18Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-10T01:29:18Z"}, "message": "Remove redundant imports in lib (rustc doesn't like 'std' as a synonym for root within std.rc anyway)", "tree": {"sha": "970360db45c72fb662044cab8dab70dd4311e0c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/970360db45c72fb662044cab8dab70dd4311e0c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "html_url": "https://github.com/rust-lang/rust/commit/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec22fe9733b536e50dfd159bd8cbc2cb2ab40beb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec22fe9733b536e50dfd159bd8cbc2cb2ab40beb", "html_url": "https://github.com/rust-lang/rust/commit/ec22fe9733b536e50dfd159bd8cbc2cb2ab40beb"}], "stats": {"total": 31, "additions": 2, "deletions": 29}, "files": [{"sha": "ee660f013b226726c62c9d73c6c85674eefb7a86", "filename": "src/lib/_int.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_int.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -1,4 +1,3 @@\n-import std.sys;\n \n fn add(int x, int y) -> int { ret x + y; }\n fn sub(int x, int y) -> int { ret x - y; }"}, {"sha": "3f45334924d8aee46404028da78d9b1e6b0ef816", "filename": "src/lib/_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_str.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -1,6 +1,6 @@\n import rustrt.sbuf;\n \n-import std._vec.rustrt.vbuf;\n+import _vec.rustrt.vbuf;\n \n native \"rust\" mod rustrt {\n     type sbuf;"}, {"sha": "ceee9c774789b9d63561153278952a9efa4edc3f", "filename": "src/lib/_uint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_uint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_uint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_uint.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -1,4 +1,3 @@\n-import std.sys;\n \n fn add(uint x, uint y) -> uint { ret x + y; }\n fn sub(uint x, uint y) -> uint { ret x - y; }"}, {"sha": "680c8884f6d1987d95b3fe6c22ab2f1e06cca2f6", "filename": "src/lib/_vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2F_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_vec.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -1,5 +1,4 @@\n import vbuf = rustrt.vbuf;\n-import std.option;\n \n type operator2[T,U,V] = fn(&T, &U) -> V;\n "}, {"sha": "2322c693b4d19b0da56ef06bc783a3205ec2348e", "filename": "src/lib/bitv.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fbitv.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -1,7 +1,3 @@\n-import std._uint;\n-import std._int;\n-import std._vec;\n-\n // FIXME: With recursive object types, we could implement binary methods like\n //        union, intersection, and difference. At that point, we could write\n //        an optimizing version of this module that produces a different obj"}, {"sha": "b63f363e702796fa4156cc4f72ce52bbfe4fa085", "filename": "src/lib/dbg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fdbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fdbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fdbg.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -5,8 +5,6 @@\n  * logging.\n  */\n \n-import std._vec;\n-\n // FIXME: handle 64-bit case.\n const uint const_refcount = 0x7bad_face_u;\n "}, {"sha": "776f82e99fe8fe9e4a303cedfc32d592224c65a4", "filename": "src/lib/deque.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fdeque.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -2,10 +2,6 @@\n  * A deque, for fun.  Untested as of yet.  Likely buggy.\n  */\n \n-import std.option;\n-import std._vec;\n-import std._int;\n-\n type t[T] = obj {\n             fn size() -> uint;\n "}, {"sha": "34c4a98d9ac4d7c1e8f065eb3b5aef30372c9ff6", "filename": "src/lib/io.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fio.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -1,7 +1,4 @@\n-import std.os.libc;\n-import std._str;\n-import std._vec;\n-\n+import os.libc;\n \n type stdio_reader = state obj {\n                           fn getc() -> int;"}, {"sha": "58c2cded6e642ea8e3496c9f9c2d04ef92f431e2", "filename": "src/lib/list.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Flist.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -1,5 +1,3 @@\n-\n-import std.option;\n import option.some;\n import option.none;\n "}, {"sha": "29e9ba5d6915f9d9d1aa9fc1c55b8f29e8c4fedf", "filename": "src/lib/map.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmap.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -3,12 +3,6 @@\n  * use, but useful as a stress test for rustboot.\n  */\n \n-import std._int;\n-import std.sys;\n-import std.option;\n-import std._vec;\n-\n-\n type hashfn[K] = fn(&K) -> uint;\n type eqfn[K] = fn(&K, &K) -> bool;\n "}, {"sha": "a57ea894cdfb80f77e7084f7516fb4fdaa1b11f0", "filename": "src/lib/sha1.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e/src%2Flib%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fsha1.rs?ref=11a10c7a7b86c7bf91a8adcd41573f9de9eeaf0e", "patch": "@@ -4,9 +4,6 @@\n  * point this will want to be rewritten.\n  */\n \n-import std._vec;\n-import std._str;\n-\n export sha1;\n export mk_sha1;\n "}]}