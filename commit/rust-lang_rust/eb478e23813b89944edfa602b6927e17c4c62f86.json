{"sha": "eb478e23813b89944edfa602b6927e17c4c62f86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNDc4ZTIzODEzYjg5OTQ0ZWRmYTYwMmI2OTI3ZTE3YzRjNjJmODY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-28T06:16:04Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-06T21:36:48Z"}, "message": "Add extra whitespace for suggestions", "tree": {"sha": "265b712b83ec72723c776fe3d04f9a32188e9214", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/265b712b83ec72723c776fe3d04f9a32188e9214"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb478e23813b89944edfa602b6927e17c4c62f86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb478e23813b89944edfa602b6927e17c4c62f86", "html_url": "https://github.com/rust-lang/rust/commit/eb478e23813b89944edfa602b6927e17c4c62f86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb478e23813b89944edfa602b6927e17c4c62f86/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c849146353322ad72bba6c64580b53164aa9304", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c849146353322ad72bba6c64580b53164aa9304", "html_url": "https://github.com/rust-lang/rust/commit/7c849146353322ad72bba6c64580b53164aa9304"}], "stats": {"total": 96, "additions": 79, "deletions": 17}, "files": [{"sha": "99342351d92c553d7e023b7d2494fbd21547652b", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -1060,11 +1060,11 @@ impl EmitterWriter {\n                                -> io::Result<()> {\n         use std::borrow::Borrow;\n \n-        let primary_span = suggestion.substitution_spans().next().unwrap();\n+        let primary_sub = &suggestion.substitution_parts[0];\n         if let Some(ref cm) = self.cm {\n             let mut buffer = StyledBuffer::new();\n \n-            let lines = cm.span_to_lines(primary_span).unwrap();\n+            let lines = cm.span_to_lines(primary_sub.span).unwrap();\n \n             assert!(!lines.lines.is_empty());\n \n@@ -1077,26 +1077,51 @@ impl EmitterWriter {\n                                Some(Style::HeaderMsg));\n \n             let suggestions = suggestion.splice_lines(cm.borrow());\n-            let line_start = cm.lookup_char_pos(primary_span.lo).line - 1;\n-            let mut row_num = 1;\n+            let span_start_pos = cm.lookup_char_pos(primary_sub.span.lo);\n+            let span_end_pos = cm.lookup_char_pos(primary_sub.span.hi);\n+            let line_start = span_start_pos.line;\n+            draw_col_separator_no_space(&mut buffer, 1, max_line_num_len + 1);\n+            let mut row_num = 2;\n             for complete in suggestions.iter().take(MAX_SUGGESTIONS) {\n+                let mut line_pos = 0;\n+                // Only show underline if there's a single suggestion and it is a single line\n+                let show_underline = complete.lines().count() == 1\n+                    && span_start_pos.line == span_end_pos.line\n+                    && primary_sub.substitutions.len() == 1;\n \n                 let mut lines = complete.lines();\n                 for line in lines.by_ref().take(MAX_HIGHLIGHT_LINES) {\n-                    // print the span column to avoid confusion\n+                    // Print the span column to avoid confusion\n                     buffer.puts(row_num,\n                                 0,\n-                                &((line_start + row_num).to_string()),\n+                                &((line_start + line_pos).to_string()),\n                                 Style::LineNumber);\n                     // print the suggestion\n                     draw_col_separator(&mut buffer, row_num, max_line_num_len + 1);\n                     buffer.append(row_num, line, Style::NoStyle);\n                     row_num += 1;\n+                    if show_underline {\n+                        draw_col_separator(&mut buffer, row_num, max_line_num_len + 1);\n+\n+                        let sub_len = primary_sub.substitutions[0].trim_right().len();\n+                        let underline_start = span_start_pos.col.0;\n+                        let underline_end = span_start_pos.col.0 + sub_len;\n+                        for p in underline_start..underline_end {\n+                            buffer.putc(row_num,\n+                                        max_line_num_len + 3 + p,\n+                                        '^',\n+                                        Style::UnderlinePrimary);\n+                        }\n+                        row_num += 1;\n+                    }\n+                    line_pos += 1;\n                 }\n \n                 // if we elided some lines, add an ellipsis\n                 if let Some(_) = lines.next() {\n                     buffer.append(row_num, \"...\", Style::NoStyle);\n+                } else if !show_underline && suggestions.len() <= MAX_SUGGESTIONS {\n+                    draw_col_separator_no_space(&mut buffer, row_num, max_line_num_len + 1);\n                 }\n             }\n             if suggestions.len() > MAX_SUGGESTIONS {"}, {"sha": "23d8523236977227fd8b97abec2453590e20c7e6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -2920,10 +2920,6 @@ impl<'a> Parser<'a> {\n                         err.cancel();\n                         let codemap = self.sess.codemap();\n                         let suggestion_span = lhs_span.to(self.prev_span);\n-                        let suggestion = match codemap.span_to_snippet(suggestion_span) {\n-                            Ok(lstring) => format!(\"({})\", lstring),\n-                            _ => format!(\"(<expression> as <type>)\")\n-                        };\n                         let warn_message = match codemap.span_to_snippet(self.prev_span) {\n                             Ok(lstring) => format!(\"`{}`\", lstring),\n                             _ => \"a type\".to_string(),\n@@ -2934,6 +2930,10 @@ impl<'a> Parser<'a> {\n                         let mut err = self.sess.span_diagnostic.struct_span_err(sp, &msg);\n                         err.span_label(sp, \"interpreted as generic argument\");\n                         err.span_label(self.span, \"not interpreted as comparison\");\n+                        let suggestion = match codemap.span_to_snippet(suggestion_span) {\n+                            Ok(lstring) => format!(\"({})\", lstring),\n+                            _ => format!(\"(<expression> as <type>)\")\n+                        };\n                         err.span_suggestion(suggestion_span,\n                                             \"if you want to compare the casted value then write:\",\n                                             suggestion);"}, {"sha": "f9702d43ad513890fc9781173175adb2947179a1", "filename": "src/test/ui/issue-22644.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -7,7 +7,9 @@ error: `<` is interpreted as a start of generic arguments for `usize`, not a com\n    |                               not interpreted as comparison\n    |\n help: if you want to compare the casted value then write:\n+   |\n 16 |     println!(\"{}\", (a as usize) < b);\n+   |                    ^^^^^^^^^^^^\n \n error: `<` is interpreted as a start of generic arguments for `usize`, not a comparison\n   --> $DIR/issue-22644.rs:17:33\n@@ -18,7 +20,9 @@ error: `<` is interpreted as a start of generic arguments for `usize`, not a com\n    |                               not interpreted as comparison\n    |\n help: if you want to compare the casted value then write:\n+   |\n 17 |     println!(\"{}\", (a as usize) < 4);\n+   |                    ^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "525dd4fe8f1c69dda6c21cb967e1de3099698c85", "filename": "src/test/ui/resolve/enums-are-namespaced-xc.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0425]: cannot find value `A` in module `namespaced_enums`\n    |                               ^ not found in `namespaced_enums`\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 12 | use namespaced_enums::Foo::A;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0425]: cannot find function `B` in module `namespaced_enums`\n   --> $DIR/enums-are-namespaced-xc.rs:18:31\n@@ -14,7 +16,9 @@ error[E0425]: cannot find function `B` in module `namespaced_enums`\n    |                               ^ not found in `namespaced_enums`\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 12 | use namespaced_enums::Foo::B;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0422]: cannot find struct, variant or union type `C` in module `namespaced_enums`\n   --> $DIR/enums-are-namespaced-xc.rs:21:31\n@@ -23,7 +27,9 @@ error[E0422]: cannot find struct, variant or union type `C` in module `namespace\n    |                               ^ not found in `namespaced_enums`\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 12 | use namespaced_enums::Foo::C;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "7abf6e3d5fde3fe878673da187177d5512eb4b8f", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,9 +5,11 @@ error[E0574]: expected struct, variant or union type, found enum `Result`\n    |         ^^^^^^ not a struct, variant or union type\n    |\n help: possible better candidates are found in other modules, you can import them into scope\n+   |\n 12 | use std::fmt::Result;\n-13 | use std::io::Result;\n-14 | use std::thread::Result;\n+12 | use std::io::Result;\n+12 | use std::thread::Result;\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "d7017f30145260828ba2f6d45c38013a3c173fb2", "filename": "src/test/ui/resolve/issue-17518.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0422]: cannot find struct, variant or union type `E` in this scope\n    |     ^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 11 | use SomeEnum::E;\n+   | ^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "ce5ed7b5e5db4e37cfbf582ba78c6ec661cea880", "filename": "src/test/ui/resolve/issue-21221-1.stderr", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,9 +5,11 @@ error[E0405]: cannot find trait `Mul` in this scope\n    |      ^^^ not found in this scope\n    |\n help: possible candidates are found in other modules, you can import them into scope\n+   |\n 11 | use mul1::Mul;\n-12 | use mul2::Mul;\n-13 | use std::ops::Mul;\n+11 | use mul2::Mul;\n+11 | use std::ops::Mul;\n+   |\n \n error[E0412]: cannot find type `Mul` in this scope\n   --> $DIR/issue-21221-1.rs:72:16\n@@ -16,10 +18,11 @@ error[E0412]: cannot find type `Mul` in this scope\n    |                ^^^ not found in this scope\n    |\n help: possible candidates are found in other modules, you can import them into scope\n+   |\n 11 | use mul1::Mul;\n-12 | use mul2::Mul;\n-13 | use mul3::Mul;\n-14 | use mul4::Mul;\n+11 | use mul2::Mul;\n+11 | use mul3::Mul;\n+11 | use mul4::Mul;\n and 2 other candidates\n \n error[E0405]: cannot find trait `ThisTraitReallyDoesntExistInAnyModuleReally` in this scope\n@@ -35,7 +38,9 @@ error[E0405]: cannot find trait `Div` in this scope\n    |      ^^^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 11 | use std::ops::Div;\n+   | ^^^^^^^^^^^^^^^^^^\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "bca3667d60ba64334d89ecb06e1903ddacb7bde5", "filename": "src/test/ui/resolve/issue-21221-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0405]: cannot find trait `T` in this scope\n    |      ^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 11 | use foo::bar::T;\n+   | ^^^^^^^^^^^^^^^^\n \n error[E0601]: main function not found\n "}, {"sha": "f364fb590abc58daf8ae177b4efe4296354715b0", "filename": "src/test/ui/resolve/issue-21221-3.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0405]: cannot find trait `OuterTrait` in this scope\n    |      ^^^^^^^^^^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 16 | use issue_21221_3::outer::OuterTrait;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "a022ca0749d3186f6543d791ad5290bd337fba08", "filename": "src/test/ui/resolve/issue-21221-4.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0405]: cannot find trait `T` in this scope\n    |      ^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n+   |\n 16 | use issue_21221_4::T;\n+   | ^^^^^^^^^^^^^^^^^^^^^\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "56d3afd77e63ee163e2cea622f63738385bbe9c9", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0404]: expected trait, found type alias `Foo`\n    |      ^^^ type aliases cannot be used for traits\n    |\n help: possible better candidate is found in another module, you can import it into scope\n+   |\n 12 | use issue_3907::Foo;\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "c0b0fc63f22be1f23d322740e129b25ccc5f9488", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -9,7 +9,9 @@ error[E0423]: expected value, found struct `Z`\n    |         constructor is not visible here due to private fields\n    |\n help: possible better candidate is found in another module, you can import it into scope\n+   |\n 15 | use m::n::Z;\n+   | ^^^^^^^^^^^^\n \n error[E0423]: expected value, found struct `S`\n   --> $DIR/privacy-struct-ctor.rs:36:5\n@@ -21,7 +23,9 @@ error[E0423]: expected value, found struct `S`\n    |     constructor is not visible here due to private fields\n    |\n help: possible better candidate is found in another module, you can import it into scope\n+   |\n 13 | use m::S;\n+   | ^^^^^^^^^\n \n error[E0423]: expected value, found struct `xcrate::S`\n   --> $DIR/privacy-struct-ctor.rs:42:5\n@@ -33,7 +37,9 @@ error[E0423]: expected value, found struct `xcrate::S`\n    |     constructor is not visible here due to private fields\n    |\n help: possible better candidate is found in another module, you can import it into scope\n+   |\n 13 | use m::S;\n+   | ^^^^^^^^^\n \n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:25:9"}, {"sha": "b344f00cd88ffeeba9f1be74ea62f58deeeb4fc4", "filename": "src/test/ui/span/issue-35987.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0404]: expected trait, found type parameter `Add`\n    |                     ^^^ not a trait\n    |\n help: possible better candidate is found in another module, you can import it into scope\n+   |\n 11 | use std::ops::Add;\n+   | ^^^^^^^^^^^^^^^^^^\n \n error[E0601]: main function not found\n "}, {"sha": "a0445eaee9162dd519724f16bbc8a098ee465096", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb478e23813b89944edfa602b6927e17c4c62f86/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=eb478e23813b89944edfa602b6927e17c4c62f86", "patch": "@@ -5,7 +5,9 @@ error[E0369]: binary operation `+` cannot be applied to type `&'static str`\n    |             ^^^^^^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n    |\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left.\n+   |\n 12 |     let x = \"Hello \".to_owned() + \"World!\";\n+   |             ^^^^^^^^^^^^^^^^^^^\n \n error[E0369]: binary operation `+` cannot be applied to type `World`\n   --> $DIR/issue-39018.rs:17:13"}]}