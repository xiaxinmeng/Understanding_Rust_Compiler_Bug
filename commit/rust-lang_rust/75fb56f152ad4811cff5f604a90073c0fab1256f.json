{"sha": "75fb56f152ad4811cff5f604a90073c0fab1256f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZmI1NmYxNTJhZDQ4MTFjZmY1ZjYwNGE5MDA3M2MwZmFiMTI1NmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-13T02:24:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-13T02:24:16Z"}, "message": "Auto merge of #40448 - ollie27:rustbuild_docs_compiler, r=alexcrichton\n\nrustbuild: Fix compiler docs\n\n* Make sure std docs are generated before compiler docs so rustdoc uses\nrelative links.\n* Don't document the rustc and rustdoc binary crates as they overwrite\nthe real rustc and rustdoc crates.\n\nFixes #40217\n\nr? @alexcrichton", "tree": {"sha": "6f7d87543a5145c860f79706ce634b53c8b6bb74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f7d87543a5145c860f79706ce634b53c8b6bb74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75fb56f152ad4811cff5f604a90073c0fab1256f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75fb56f152ad4811cff5f604a90073c0fab1256f", "html_url": "https://github.com/rust-lang/rust/commit/75fb56f152ad4811cff5f604a90073c0fab1256f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75fb56f152ad4811cff5f604a90073c0fab1256f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "824c9ebbd5f0611e326648d90ee3e50caf04bb7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/824c9ebbd5f0611e326648d90ee3e50caf04bb7f", "html_url": "https://github.com/rust-lang/rust/commit/824c9ebbd5f0611e326648d90ee3e50caf04bb7f"}, {"sha": "0e0bac914c9324a8ac72769810aaff00d758f0d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e0bac914c9324a8ac72769810aaff00d758f0d7", "html_url": "https://github.com/rust-lang/rust/commit/0e0bac914c9324a8ac72769810aaff00d758f0d7"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "db8ed579cecdb26f028739d30ca2404b0b220771", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/75fb56f152ad4811cff5f604a90073c0fab1256f/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fb56f152ad4811cff5f604a90073c0fab1256f/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=75fb56f152ad4811cff5f604a90073c0fab1256f", "patch": "@@ -168,9 +168,7 @@ pub fn std(build: &Build, stage: u32, target: &str) {\n     // We don't want to build docs for internal std dependencies unless\n     // in compiler-docs mode. When not in that mode, we whitelist the crates\n     // for which docs must be built.\n-    if build.config.compiler_docs {\n-        cargo.arg(\"-p\").arg(\"std\");\n-    } else {\n+    if !build.config.compiler_docs {\n         cargo.arg(\"--no-deps\");\n         for krate in &[\"alloc\", \"collections\", \"core\", \"std\", \"std_unicode\"] {\n             cargo.arg(\"-p\").arg(krate);\n@@ -244,9 +242,15 @@ pub fn rustc(build: &Build, stage: u32, target: &str) {\n          .arg(build.src.join(\"src/rustc/Cargo.toml\"))\n          .arg(\"--features\").arg(build.rustc_features());\n \n-    // Like with libstd above if compiler docs aren't enabled then we're not\n-    // documenting internal dependencies, so we have a whitelist.\n-    if !build.config.compiler_docs {\n+    if build.config.compiler_docs {\n+        // src/rustc/Cargo.toml contains bin crates called rustc and rustdoc\n+        // which would otherwise overwrite the docs for the real rustc and\n+        // rustdoc lib crates.\n+        cargo.arg(\"-p\").arg(\"rustc_driver\")\n+             .arg(\"-p\").arg(\"rustdoc\");\n+    } else {\n+        // Like with libstd above if compiler docs aren't enabled then we're not\n+        // documenting internal dependencies, so we have a whitelist.\n         cargo.arg(\"--no-deps\");\n         for krate in &[\"proc_macro\"] {\n             cargo.arg(\"-p\").arg(krate);"}, {"sha": "6b047c62d99bef2984a8836c7feacb3e918e69a0", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/75fb56f152ad4811cff5f604a90073c0fab1256f/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fb56f152ad4811cff5f604a90073c0fab1256f/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=75fb56f152ad4811cff5f604a90073c0fab1256f", "patch": "@@ -633,12 +633,16 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n     for (krate, path, default) in krates(\"test\") {\n         rules.doc(&krate.doc_step, path)\n              .dep(|s| s.name(\"libtest-link\"))\n+             // Needed so rustdoc generates relative links to std.\n+             .dep(|s| s.name(\"doc-crate-std\"))\n              .default(default && build.config.compiler_docs)\n              .run(move |s| doc::test(build, s.stage, s.target));\n     }\n     for (krate, path, default) in krates(\"rustc-main\") {\n         rules.doc(&krate.doc_step, path)\n              .dep(|s| s.name(\"librustc-link\"))\n+             // Needed so rustdoc generates relative links to std.\n+             .dep(|s| s.name(\"doc-crate-std\"))\n              .host(true)\n              .default(default && build.config.docs)\n              .run(move |s| doc::rustc(build, s.stage, s.target));\n@@ -1213,31 +1217,31 @@ mod tests {\n             name: \"std\".to_string(),\n             deps: Vec::new(),\n             path: cwd.join(\"src/std\"),\n-            doc_step: \"doc-std\".to_string(),\n+            doc_step: \"doc-crate-std\".to_string(),\n             build_step: \"build-crate-std\".to_string(),\n-            test_step: \"test-std\".to_string(),\n-            bench_step: \"bench-std\".to_string(),\n+            test_step: \"test-crate-std\".to_string(),\n+            bench_step: \"bench-crate-std\".to_string(),\n             version: String::new(),\n         });\n         build.crates.insert(\"test\".to_string(), ::Crate {\n             name: \"test\".to_string(),\n             deps: Vec::new(),\n             path: cwd.join(\"src/test\"),\n-            doc_step: \"doc-test\".to_string(),\n+            doc_step: \"doc-crate-test\".to_string(),\n             build_step: \"build-crate-test\".to_string(),\n-            test_step: \"test-test\".to_string(),\n-            bench_step: \"bench-test\".to_string(),\n+            test_step: \"test-crate-test\".to_string(),\n+            bench_step: \"bench-crate-test\".to_string(),\n             version: String::new(),\n         });\n         build.crates.insert(\"rustc-main\".to_string(), ::Crate {\n             name: \"rustc-main\".to_string(),\n             deps: Vec::new(),\n             version: String::new(),\n             path: cwd.join(\"src/rustc-main\"),\n-            doc_step: \"doc-rustc-main\".to_string(),\n+            doc_step: \"doc-crate-rustc-main\".to_string(),\n             build_step: \"build-crate-rustc-main\".to_string(),\n-            test_step: \"test-rustc-main\".to_string(),\n-            bench_step: \"bench-rustc-main\".to_string(),\n+            test_step: \"test-crate-rustc-main\".to_string(),\n+            bench_step: \"bench-crate-rustc-main\".to_string(),\n         });\n         return build\n     }"}]}