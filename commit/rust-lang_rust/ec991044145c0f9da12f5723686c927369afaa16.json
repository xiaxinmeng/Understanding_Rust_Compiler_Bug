{"sha": "ec991044145c0f9da12f5723686c927369afaa16", "node_id": "C_kwDOAAsO6NoAKGVjOTkxMDQ0MTQ1YzBmOWRhMTJmNTcyMzY4NmM5MjczNjlhZmFhMTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-10T18:00:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-10T18:00:09Z"}, "message": "Rollup merge of #94753 - Urgau:rustdoc-book-improvements, r=GuillaumeGomez\n\nImprove rustdoc book\n\nThis pull-request improves the `rustdoc` book by doing some (light) cleanup, by merging some stuff, by adding some missing stuff (like tracking issues links, for those who had one) and also by moving some chapter's into sub-chapter's to improve the flow of the book.\n\n~~Note that I locally tested with `mdbook-lintcheck` that no links became accidentally broken.~~ (Not enough, ;-))\n\nr? `````@GuillaumeGomez`````", "tree": {"sha": "604c9dcad458d10eeb742b88c3e4d1a0f46fd2e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/604c9dcad458d10eeb742b88c3e4d1a0f46fd2e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec991044145c0f9da12f5723686c927369afaa16", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiKjyqCRBK7hj4Ov3rIwAA8dMIAE1+KBrMBj/FlLtBZjQ0teSW\nN8cfHF6c/vUDjzT8z7p7ZChwNoK4ShwFxKNshdgfgv+kFBwvdmvMvut4ICOvRWd5\nzJNklJa9Jz+SOdwQdhXz33Hq78ZG5Z27QgX9zEoOgDSMpiy83t2K437x+YotOTVv\ndS8IYOvRvXKa2EsALiCeRbyUhbwqG+bmgbQKklWXCczZIo35shwZ1/M8JmO2l64s\nEZ+ODw0K7YNZk6Y0bhTVnO7A0Ryut5l7ro0iY9i6ZKGvIuniZmcdgDlfpc9GfAdH\nMqot/nWRjvZUBLK2mRk3spPnpmW54s1sjbPdatqsI8e3+xTjwz9wcQjqwUXNuv0=\n=kpd2\n-----END PGP SIGNATURE-----\n", "payload": "tree 604c9dcad458d10eeb742b88c3e4d1a0f46fd2e5\nparent 82215ce64680a6f0bf55a42eba6e7a8ff756c53f\nparent e346920907d1dec22d2dcc19b0dc483b9a94810b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646935209 +0100\ncommitter GitHub <noreply@github.com> 1646935209 +0100\n\nRollup merge of #94753 - Urgau:rustdoc-book-improvements, r=GuillaumeGomez\n\nImprove rustdoc book\n\nThis pull-request improves the `rustdoc` book by doing some (light) cleanup, by merging some stuff, by adding some missing stuff (like tracking issues links, for those who had one) and also by moving some chapter's into sub-chapter's to improve the flow of the book.\n\n~~Note that I locally tested with `mdbook-lintcheck` that no links became accidentally broken.~~ (Not enough, ;-))\n\nr? `````@GuillaumeGomez`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec991044145c0f9da12f5723686c927369afaa16", "html_url": "https://github.com/rust-lang/rust/commit/ec991044145c0f9da12f5723686c927369afaa16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec991044145c0f9da12f5723686c927369afaa16/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82215ce64680a6f0bf55a42eba6e7a8ff756c53f", "url": "https://api.github.com/repos/rust-lang/rust/commits/82215ce64680a6f0bf55a42eba6e7a8ff756c53f", "html_url": "https://github.com/rust-lang/rust/commit/82215ce64680a6f0bf55a42eba6e7a8ff756c53f"}, {"sha": "e346920907d1dec22d2dcc19b0dc483b9a94810b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e346920907d1dec22d2dcc19b0dc483b9a94810b", "html_url": "https://github.com/rust-lang/rust/commit/e346920907d1dec22d2dcc19b0dc483b9a94810b"}], "stats": {"total": 209, "additions": 119, "deletions": 90}, "files": [{"sha": "45405a11765cc761aab576fee0bb37982a96a612", "filename": "src/doc/rustdoc/book.toml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fbook.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fbook.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fbook.toml?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -4,3 +4,7 @@ title = \"The rustdoc book\"\n \n [output.html]\n git-repository-url = \"https://github.com/rust-lang/rust/tree/master/src/doc/rustdoc\"\n+\n+[output.html.redirect]\n+\"/the-doc-attribute.html\" = \"write-documentation/the-doc-attribute.html\"\n+\"/documentation-tests.html\" = \"write-documentation/documentation-tests.html\""}, {"sha": "d627f5b0389f39594ba815a731e9203edab60344", "filename": "src/doc/rustdoc/src/SUMMARY.md", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -1,16 +1,15 @@\n # The Rustdoc Book\n \n - [What is rustdoc?](what-is-rustdoc.md)\n+- [Command-line arguments](command-line-arguments.md)\n - [How to read rustdoc output](how-to-read-rustdoc.md)\n - [How to write documentation](how-to-write-documentation.md)\n-- [What to include (and exclude)](what-to-include.md)\n-- [Command-line arguments](command-line-arguments.md)\n-- [The `#[doc]` attribute](the-doc-attribute.md)\n-- [Documentation tests](documentation-tests.md)\n-- [Linking to items by name](linking-to-items-by-name.md)\n-- [Lints](lints.md)\n+    - [What to include (and exclude)](write-documentation/what-to-include.md)\n+    - [The `#[doc]` attribute](write-documentation/the-doc-attribute.md)\n+    - [Linking to items by name](write-documentation/linking-to-items-by-name.md)\n+    - [Documentation tests](write-documentation/documentation-tests.md)\n+- [Rustdoc-specific lints](lints.md)\n - [Advanced features](advanced-features.md)\n - [Unstable features](unstable-features.md)\n-- [Website features](website-features.md)\n-- [Passes](passes.md)\n+- [Deprecated features](deprecated-features.md)\n - [References](references.md)"}, {"sha": "dbf0baec04c03193629feca752c201437a875de1", "filename": "src/doc/rustdoc/src/advanced-features.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -88,3 +88,25 @@ You can add multiple aliases at the same time by using a list:\n #[doc(alias(\"x\", \"big\"))]\n pub struct BigX;\n ```\n+\n+## Custom search engines\n+\n+If you find yourself often referencing online Rust docs you might enjoy using a custom search\n+engine. This allows you to use the navigation bar directly to search a `rustdoc` website.\n+Most browsers support this feature by letting you define a URL template containing `%s`\n+which will be substituted for the search term. As an example, for the standard library you could use\n+this template:\n+\n+```text\n+https://doc.rust-lang.org/stable/std/?search=%s\n+```\n+\n+Note that this will take you to a results page listing all matches. If you want to navigate to the first\n+result right away (which is often the best match) use the following instead:\n+\n+```text\n+https://doc.rust-lang.org/stable/std/?search=%s&go_to_first=true\n+```\n+\n+This URL adds the `go_to_first=true` query parameter which can be appended to any `rustdoc` search URL\n+to automatically go to the first result."}, {"sha": "2a2e51b2f6331085224ecb9c661c334cf32e7416", "filename": "src/doc/rustdoc/src/command-line-arguments.md", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -177,7 +177,7 @@ $ rustdoc src/lib.rs --test\n ```\n \n This flag will run your code examples as tests. For more, see [the chapter\n-on documentation tests](documentation-tests.md).\n+on documentation tests](write-documentation/documentation-tests.md).\n \n See also `--test-args`.\n \n@@ -190,7 +190,7 @@ $ rustdoc src/lib.rs --test --test-args ignored\n ```\n \n This flag will pass options to the test runner when running documentation tests.\n-For more, see [the chapter on documentation tests](documentation-tests.md).\n+For more, see [the chapter on documentation tests](write-documentation/documentation-tests.md).\n \n See also `--test`.\n \n@@ -336,7 +336,7 @@ $ rustdoc src/lib.rs --sysroot /path/to/sysroot\n Similar to `rustc --sysroot`, this lets you change the sysroot `rustdoc` uses\n when compiling your code.\n \n-### `--edition`: control the edition of docs and doctests\n+## `--edition`: control the edition of docs and doctests\n \n Using this flag looks like this:\n \n@@ -403,12 +403,12 @@ encoded as UTF-8.\n ## `--passes`: add more rustdoc passes\n \n This flag is **deprecated**.\n-For more details on passes, see [the chapter on them](passes.md).\n+For more details on passes, see [the chapter on them](deprecated-features.md#passes).\n \n ## `--no-defaults`: don't run default passes\n \n This flag is **deprecated**.\n-For more details on passes, see [the chapter on them](passes.md).\n+For more details on passes, see [the chapter on them](deprecated-features.md#passes).\n \n ## `-r`/`--input-format`: input format\n \n@@ -417,23 +417,3 @@ This flag is **deprecated** and **has no effect**.\n Rustdoc only supports Rust source code and Markdown input formats. If the\n file ends in `.md` or `.markdown`, `rustdoc` treats it as a Markdown file.\n Otherwise, it assumes that the input file is Rust.\n-\n-# Unstable command line arguments\n-\n-## `--nocapture`\n-\n-When this flag is used with `--test`, the output (stdout and stderr) of your tests won't be\n-captured by rustdoc. Instead, the output will be directed to your terminal,\n-as if you had run the test executable manually. This is especially useful\n-for debugging your tests!\n-\n-## `--check`\n-\n-When this flag is supplied, rustdoc will type check and lint your code, but will not generate any\n-documentation or run your doctests.\n-\n-Using this flag looks like:\n-\n-```bash\n-rustdoc -Z unstable-options --check src/lib.rs\n-```"}, {"sha": "2bc6e8fc8ae4df6606001b710e7793f585fcc4ba", "filename": "src/doc/rustdoc/src/deprecated-features.md", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -1,4 +1,6 @@\n-# Passes\n+# Deprecated features\n+\n+## Passes\n \n Rustdoc has a concept called \"passes\". These are transformations that\n `rustdoc` runs on your documentation before producing its final output.", "previous_filename": "src/doc/rustdoc/src/passes.md"}, {"sha": "098bc1879b56f6c9a3f3f6006ba6d176e534681d", "filename": "src/doc/rustdoc/src/how-to-read-rustdoc.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-read-rustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-read-rustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-read-rustdoc.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -26,7 +26,7 @@ At the top is some at-a-glance info and controls:\n - a button to collapse or expand the top-level documentation for that item\n   (`[+]` or `[-]`),\n - a link to the source code (`[src]`),\n-  if [configured](the-doc-attribute.html#html_no_source),\n+  if [configured](write-documentation/the-doc-attribute.html#html_no_source),\n   and present (the source may not be available if\n   the documentation was created with `cargo doc --no-deps`),\n - and the version in which the item became stable,\n@@ -52,7 +52,7 @@ For example, when looking at documentation for the crate root,\n it shows all the crates documented in the documentation bundle,\n and quick links to the modules, structs, traits, functions, and macros available\n from the current crate.\n-At the top, it displays a [configurable logo](the-doc-attribute.html#html_logo_url)\n+At the top, it displays a [configurable logo](write-documentation/the-doc-attribute.html#html_logo_url)\n alongside the current crate's name and version,\n or the current item whose documentation is being displayed.\n "}, {"sha": "bff01d7cb7c14ef5a0544ff0089e30de545133a4", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -13,11 +13,11 @@ Note that, except for `missing_docs`, these lints are only available when runnin\n \n Here is the list of the lints provided by `rustdoc`:\n \n-## broken_intra_doc_links\n+## `broken_intra_doc_links`\n \n This lint **warns by default**. This lint detects when an [intra-doc link] fails to be resolved. For example:\n \n-[intra-doc link]: linking-to-items-by-name.md\n+[intra-doc link]: write-documentation/linking-to-items-by-name.md\n \n ```rust\n /// I want to link to [`Nonexistent`] but it doesn't exist!\n@@ -64,7 +64,7 @@ help: to link to the function, add parentheses\n \n ```\n \n-## private_intra_doc_links\n+## `private_intra_doc_links`\n \n This lint **warns by default**. This lint detects when [intra-doc links] from public to private items.\n For example:\n@@ -104,9 +104,9 @@ warning: public documentation for `public` links to private item `private`\n   = note: this link resolves only because you passed `--document-private-items`, but will break without\n ```\n \n-[intra-doc links]: linking-to-items-by-name.html\n+[intra-doc links]: write-documentation/linking-to-items-by-name.md\n \n-## missing_docs\n+## `missing_docs`\n \n This lint is **allowed by default**. It detects items missing documentation.\n For example:\n@@ -130,7 +130,7 @@ warning: missing documentation for a function\n \n Note that unlike other rustdoc lints, this lint is also available from `rustc` directly.\n \n-## missing_crate_level_docs\n+## `missing_crate_level_docs`\n \n This lint is **allowed by default**. It detects if there is no documentation\n at the crate root. For example:\n@@ -154,7 +154,7 @@ warning in the future. This is intended as a means to introduce new users on\n get started, without providing overwhelming warnings like `missing_docs`\n might.\n \n-## missing_doc_code_examples\n+## `missing_doc_code_examples`\n \n This lint is **allowed by default** and is **nightly-only**. It detects when a documentation block\n is missing a code example. For example:\n@@ -190,7 +190,7 @@ To fix the lint, you need to add a code example into the documentation block:\n pub fn no_code_example() {}\n ```\n \n-## private_doc_tests\n+## `private_doc_tests`\n \n This lint is **allowed by default**. It detects documentation tests when they\n are on a private item. For example:\n@@ -223,7 +223,7 @@ warning: Documentation test in private item\n    | |___________^\n ```\n \n-## invalid_codeblock_attributes\n+## `invalid_codeblock_attributes`\n \n This lint **warns by default**. It detects code block attributes in\n documentation examples that have potentially mis-typed values. For example:\n@@ -259,7 +259,7 @@ warning: unknown attribute `should-panic`. Did you mean `should_panic`?\n In the example above, the correct form is `should_panic`. This helps detect\n typo mistakes for some common attributes.\n \n-## invalid_html_tags\n+## `invalid_html_tags`\n \n This lint is **allowed by default** and is **nightly-only**. It detects unclosed\n or invalid HTML tags. For example:\n@@ -298,7 +298,7 @@ warning: unclosed HTML tag `h1`\n warning: 2 warnings emitted\n ```\n \n-## invalid_rust_codeblocks\n+## `invalid_rust_codeblocks`\n \n This lint **warns by default**. It detects Rust code blocks in documentation\n examples that are invalid (e.g. empty, not parsable as Rust). For example:\n@@ -342,7 +342,7 @@ warning: could not parse code block as Rust code\n    = note: error from rustc: unterminated character literal\n ```\n \n-## bare_urls\n+## `bare_urls`\n \n This lint is **warn-by-default**. It detects URLs which are not links.\n For example:"}, {"sha": "537ab48bbfc12a457dc3e49afb879e203cdb6754", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 46, "deletions": 5, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -22,7 +22,7 @@ As detailed in [the chapter on documentation tests][doctest-attributes], you can\n nightly, you can optionally add an error number to state that a doctest should emit a specific error\n number:\n \n-[doctest-attributes]: documentation-tests.html#attributes\n+[doctest-attributes]: write-documentation/documentation-tests.html#attributes\n \n ``````markdown\n ```compile_fail,E0044\n@@ -45,6 +45,8 @@ and enabled with a `#![feature(...)]` attribute in your crate.\n \n ### `#[doc(cfg)]`: Recording what platforms or features are required for code to be present\n \n+ * Tracking issue: [#43781](https://github.com/rust-lang/rust/issues/43781)\n+\n You can use `#[doc(cfg(...))]` to tell Rustdoc exactly which platform items appear on.\n This has two effects:\n \n@@ -86,6 +88,8 @@ Book][unstable-doc-cfg] and [its tracking issue][issue-doc-cfg].\n \n ### `doc_auto_cfg`: Automatically generate `#[doc(cfg)]`\n \n+ * Tracking issue: [#43781](https://github.com/rust-lang/rust/issues/43781)\n+\n `doc_auto_cfg` is an extension to the `#[doc(cfg)]` feature. With it, you don't need to add\n `#[doc(cfg(...)]` anymore unless you want to override the default behaviour. So if we take the\n previous source code:\n@@ -123,6 +127,8 @@ And `doc` won't show up anymore!\n \n ### Adding your trait to the \"Notable traits\" dialog\n \n+ * Tracking issue: [#45040](https://github.com/rust-lang/rust/issues/45040)\n+\n Rustdoc keeps a list of a few traits that are believed to be \"fundamental\" to\n types that implement them. These traits are intended to be the primary interface\n for their implementers, and are often most of the API available to be documented\n@@ -146,6 +152,8 @@ and [its tracking issue][issue-notable_trait].\n \n ### Exclude certain dependencies from documentation\n \n+ * Tracking issue: [#44027](https://github.com/rust-lang/rust/issues/44027)\n+\n The standard library uses several dependencies which, in turn, use several types and traits from the\n standard library. In addition, there are several compiler-internal crates that are not considered to\n be part of the official standard library, and thus would be a distraction to include in\n@@ -164,8 +172,7 @@ Book][unstable-masked] and [its tracking issue][issue-masked].\n [unstable-masked]: ../unstable-book/language-features/doc-masked.html\n [issue-masked]: https://github.com/rust-lang/rust/issues/44027\n \n-\n-## Document primitives\n+### Document primitives\n \n This is for Rust compiler internal use only.\n \n@@ -174,7 +181,7 @@ attributes. The `#[doc(primitive)]` attribute is used by the standard library to\n to generate documentation for primitive types, and requires `#![feature(rustdoc_internals)]` to\n enable.\n \n-## Document keywords\n+### Document keywords\n \n This is for Rust compiler internal use only.\n \n@@ -199,6 +206,8 @@ the flag in question to Rustdoc on the command-line. To do this from Cargo, you\n \n ### `--markdown-before-content`: include rendered Markdown before the content\n \n+ * Tracking issue: [#44027](https://github.com/rust-lang/rust/issues/44027)\n+\n Using this flag looks like this:\n \n ```bash\n@@ -241,7 +250,7 @@ attribute][doc-playground]. Please be aware that the official Rust Playground at\n https://play.rust-lang.org does not have every crate available, so if your examples require your\n crate, make sure the playground you provide has your crate available.\n \n-[doc-playground]: the-doc-attribute.html#html_playground_url\n+[doc-playground]: write-documentation/the-doc-attribute.html#html_playground_url\n \n If both `--playground-url` and `--markdown-playground-url` are present when rendering a standalone\n Markdown file, the URL given to `--markdown-playground-url` will take precedence. If both\n@@ -279,6 +288,8 @@ between compilations.\n \n ### `--resource-suffix`: modifying the name of CSS/JavaScript in crate docs\n \n+ * Tracking issue: [#54765](https://github.com/rust-lang/rust/issues/54765)\n+\n Using this flag looks like this:\n \n ```bash\n@@ -331,6 +342,24 @@ Using `index-page` option enables `enable-index-page` option as well.\n \n This feature allows the generation of a default index-page which lists the generated crates.\n \n+### `--nocapture`: disable output capture for test\n+\n+When this flag is used with `--test`, the output (stdout and stderr) of your tests won't be\n+captured by rustdoc. Instead, the output will be directed to your terminal,\n+as if you had run the test executable manually. This is especially useful\n+for debugging your tests!\n+\n+### `--check`: only checks the documentation\n+\n+When this flag is supplied, rustdoc will type check and lint your code, but will not generate any\n+documentation or run your doctests.\n+\n+Using this flag looks like:\n+\n+```bash\n+rustdoc -Z unstable-options --check src/lib.rs\n+```\n+\n ### `--static-root-path`: control how static files are loaded in HTML output\n \n Using this flag looks like this:\n@@ -348,6 +377,8 @@ renamed with `--resource-suffix` will load from the given path.\n \n ### `--persist-doctests`: persist doctest executables after running\n \n+ * Tracking issue: [#56925](https://github.com/rust-lang/rust/issues/56925)\n+\n Using this flag looks like this:\n \n ```bash\n@@ -360,6 +391,8 @@ with this option, you can keep those binaries around for farther testing.\n \n ### `--show-coverage`: calculate the percentage of items with documentation\n \n+ * Tracking issue: [#58154](https://github.com/rust-lang/rust/issues/58154)\n+\n Using this flag looks like this:\n \n ```bash\n@@ -438,6 +471,8 @@ information.\n \n ### `--enable-per-target-ignores`: allow `ignore-foo` style filters for doctests\n \n+ * Tracking issue: [#64245](https://github.com/rust-lang/rust/issues/64245)\n+\n Using this flag looks like this:\n \n ```bash\n@@ -471,6 +506,8 @@ override `ignore`.\n \n ### `--runtool`, `--runtool-arg`: program to run tests with; args to pass to it\n \n+ * Tracking issue: [#64245](https://github.com/rust-lang/rust/issues/64245)\n+\n Using these options looks like this:\n \n ```bash\n@@ -488,6 +525,8 @@ Another use case would be to run a test inside an emulator, or through a Virtual\n \n ### `--with-examples`: include examples of uses of items as documentation\n \n+ * Tracking issue: [#88791](https://github.com/rust-lang/rust/issues/88791)\n+\n This option, combined with `--scrape-examples-target-crate` and\n `--scrape-examples-output-path`, is used to implement the functionality in [RFC\n #3123](https://github.com/rust-lang/rfcs/pull/3123). Uses of an item (currently\n@@ -515,6 +554,8 @@ add the `--scrape-tests` flag.\n \n ### `--check-cfg`: check configuration flags\n \n+ * Tracking issue: [#82450](https://github.com/rust-lang/rust/issues/82450)\n+\n This flag accepts the same values as `rustc --check-cfg`, and uses it to check configuration flags.\n \n Using this flag looks like this:"}, {"sha": "5fade4e84a992d969796a9b72d6ee49f08e34082", "filename": "src/doc/rustdoc/src/website-features.md", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/82215ce64680a6f0bf55a42eba6e7a8ff756c53f/src%2Fdoc%2Frustdoc%2Fsrc%2Fwebsite-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/82215ce64680a6f0bf55a42eba6e7a8ff756c53f/src%2Fdoc%2Frustdoc%2Fsrc%2Fwebsite-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwebsite-features.md?ref=82215ce64680a6f0bf55a42eba6e7a8ff756c53f", "patch": "@@ -1,25 +0,0 @@\n-# Website features\n-\n-These features are about using the website generated by `rustdoc`.\n-\n-## Custom search engines\n-\n-If you find yourself often referencing online Rust docs you might enjoy using a custom search\n-engine. This allows you to use the navigation bar directly to search a `rustdoc` website.\n-Most browsers support this feature by letting you define a URL template containing `%s`\n-which will be substituted for the search term. As an example, for the standard library you could use\n-this template:\n-\n-```text\n-https://doc.rust-lang.org/stable/std/?search=%s\n-```\n-\n-Note that this will take you to a results page listing all matches. If you want to navigate to the first\n-result right away (which is often the best match) use the following instead:\n-\n-```text\n-https://doc.rust-lang.org/stable/std/?search=%s&go_to_first=true\n-```\n-\n-This URL adds the `go_to_first=true` query parameter which can be appended to any `rustdoc` search URL\n-to automatically go to the first result."}, {"sha": "1cb5b049df4045b96b5aa7b69af88773bca9a0f9", "filename": "src/doc/rustdoc/src/write-documentation/documentation-tests.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fdocumentation-tests.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -269,7 +269,7 @@ By default, this will still hide `unused` warnings, since so many examples use p\n you can add `#![warn(unused)]` to the top of your example if you want to see unused variables or dead code warnings.\n You can also use [`#![doc(test(attr(warn(unused))))]`][test-attr] in the crate root to enable warnings globally.\n \n-[test-attr]: ./the-doc-attribute.md#testattr\n+[test-attr]: the-doc-attribute.md#testattr\n \n ## Documenting macros\n ", "previous_filename": "src/doc/rustdoc/src/documentation-tests.md"}, {"sha": "36bc312b9c99ad6835dddb32b25beda5059e491a", "filename": "src/doc/rustdoc/src/write-documentation/linking-to-items-by-name.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Flinking-to-items-by-name.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Flinking-to-items-by-name.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Flinking-to-items-by-name.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -35,7 +35,7 @@ link to `Option`.\n You can refer to anything in scope, and use paths, including `Self`, `self`, `super`, and\n `crate`. Associated items (functions, types, and constants) are supported, but [not for blanket\n trait implementations][#79682]. Rustdoc also supports linking to all primitives listed in\n-[the standard library documentation](../std/index.html#primitives).\n+[the standard library documentation](../../std/index.html#primitives).\n \n [#79682]: https://github.com/rust-lang/rust/pull/79682\n ", "previous_filename": "src/doc/rustdoc/src/linking-to-items-by-name.md"}, {"sha": "25ef8b5bb9141f71006ef3b0ea60370e3b301039", "filename": "src/doc/rustdoc/src/write-documentation/the-doc-attribute.md", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fthe-doc-attribute.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fthe-doc-attribute.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fthe-doc-attribute.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -38,7 +38,7 @@ but given that docs are rendered via Markdown, it will remove these newlines.\n Another use case is for including external files as documentation:\n \n ```rust,no_run\n-#[doc = include_str!(\"../README.md\")]\n+#[doc = include_str!(\"../../README.md\")]\n # fn f() {}\n ```\n \n@@ -73,7 +73,7 @@ left hand side of the docs.\n #![doc(html_logo_url = \"https://example.com/logo.jpg\")]\n ```\n \n-This will put `<a href='index.html'><img src='{}' alt='logo' width='100'></a>` into\n+This will put `<a href='../index.html'><img src='{}' alt='logo' width='100'></a>` into\n your docs, where the string for the attribute goes into the `{}`.\n \n If you don't use this attribute, there will be no logo.", "previous_filename": "src/doc/rustdoc/src/the-doc-attribute.md"}, {"sha": "35e6ccbc388078cdad1d41e45a18751119f3c6d9", "filename": "src/doc/rustdoc/src/write-documentation/what-to-include.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fwhat-to-include.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fwhat-to-include.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fwhat-to-include.md?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -122,4 +122,4 @@ Here is an example of a new theme, [Ayu].\n [API Guidelines]: https://rust-lang.github.io/api-guidelines/documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden\n [Documentation tests]: documentation-tests.md\n [on this blog]: https://blog.guillaume-gomez.fr/articles/2016-09-16+Generating+doc+with+rustdoc+and+a+custom+theme\n-[rustdoc-lints]: lints.md\n+[rustdoc-lints]: ../lints.md", "previous_filename": "src/doc/rustdoc/src/what-to-include.md"}, {"sha": "c9b1649200d9cb2a8c7a21fd2983f5027f172cf8", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ec991044145c0f9da12f5723686c927369afaa16/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec991044145c0f9da12f5723686c927369afaa16/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=ec991044145c0f9da12f5723686c927369afaa16", "patch": "@@ -489,16 +489,22 @@ fn is_exception(file: &Path, link: &str) -> bool {\n /// If the given HTML file contents is an HTML redirect, this returns the\n /// destination path given in the redirect.\n fn maybe_redirect(source: &str) -> Option<String> {\n-    const REDIRECT: &str = \"<p>Redirecting to <a href=\";\n+    const REDIRECT_RUSTDOC: (usize, &str) = (7, \"<p>Redirecting to <a href=\");\n+    const REDIRECT_MDBOOK: (usize, &str) = (8 - 7, \"<p>Redirecting to... <a href=\");\n \n     let mut lines = source.lines();\n-    let redirect_line = lines.nth(7)?;\n \n-    redirect_line.find(REDIRECT).map(|i| {\n-        let rest = &redirect_line[(i + REDIRECT.len() + 1)..];\n-        let pos_quote = rest.find('\"').unwrap();\n-        rest[..pos_quote].to_owned()\n-    })\n+    let mut find_redirect = |(line_rel, redirect_pattern): (usize, &str)| {\n+        let redirect_line = lines.nth(line_rel)?;\n+\n+        redirect_line.find(redirect_pattern).map(|i| {\n+            let rest = &redirect_line[(i + redirect_pattern.len() + 1)..];\n+            let pos_quote = rest.find('\"').unwrap();\n+            rest[..pos_quote].to_owned()\n+        })\n+    };\n+\n+    find_redirect(REDIRECT_RUSTDOC).or_else(|| find_redirect(REDIRECT_MDBOOK))\n }\n \n fn with_attrs_in_source<F: FnMut(&str, usize, &str)>(source: &str, attr: &str, mut f: F) {"}]}