{"sha": "fa2818551efcfe9f5269b2649a5f269749259509", "node_id": "C_kwDOAAsO6NoAKGZhMjgxODU1MWVmY2ZlOWY1MjY5YjI2NDlhNWYyNjk3NDkyNTk1MDk", "commit": {"author": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-12-05T05:26:07Z"}, "committer": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-12-05T05:42:13Z"}, "message": "Update expected test results", "tree": {"sha": "852e774e5f7761fb16c83b84989dd7d73e35e095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/852e774e5f7761fb16c83b84989dd7d73e35e095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa2818551efcfe9f5269b2649a5f269749259509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa2818551efcfe9f5269b2649a5f269749259509", "html_url": "https://github.com/rust-lang/rust/commit/fa2818551efcfe9f5269b2649a5f269749259509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa2818551efcfe9f5269b2649a5f269749259509/comments", "author": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d1910c6fb5539330b2464778a1db823aae35aa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1910c6fb5539330b2464778a1db823aae35aa0", "html_url": "https://github.com/rust-lang/rust/commit/0d1910c6fb5539330b2464778a1db823aae35aa0"}], "stats": {"total": 592, "additions": 336, "deletions": 256}, "files": [{"sha": "4610984acb989028a79ac126def764ec1de4c81b", "filename": "crates/rust-analyzer/src/diagnostics/test_data/clippy_pass_by_ref.txt", "status": "modified", "additions": 62, "deletions": 48, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -114,7 +114,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -205,7 +205,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -296,55 +296,69 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"consider passing by value instead: `self`\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n+        fix: Some(\n+            Fix {\n+                ranges: [\n+                    Range {\n+                        start: Position {\n+                            line: 41,\n+                            character: 23,\n+                        },\n+                        end: Position {\n+                            line: 41,\n+                            character: 28,\n+                        },\n+                    },\n+                ],\n+                action: CodeAction {\n+                    title: \"consider passing by value instead: `self`\",\n+                    group: None,\n+                    kind: Some(\n+                        CodeActionKind(\n+                            \"quickfix\",\n+                        ),\n                     ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    cannot_be_a_base: false,\n-                                    username: \"\",\n-                                    password: None,\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/compiler/mir/tagset.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 41,\n-                                                character: 23,\n-                                            },\n-                                            end: Position {\n-                                                line: 41,\n-                                                character: 28,\n+                    edit: Some(\n+                        SnippetWorkspaceEdit {\n+                            changes: Some(\n+                                {\n+                                    Url {\n+                                        scheme: \"file\",\n+                                        cannot_be_a_base: false,\n+                                        username: \"\",\n+                                        password: None,\n+                                        host: None,\n+                                        port: None,\n+                                        path: \"/test/compiler/mir/tagset.rs\",\n+                                        query: None,\n+                                        fragment: None,\n+                                    }: [\n+                                        TextEdit {\n+                                            range: Range {\n+                                                start: Position {\n+                                                    line: 41,\n+                                                    character: 23,\n+                                                },\n+                                                end: Position {\n+                                                    line: 41,\n+                                                    character: 28,\n+                                                },\n                                             },\n+                                            new_text: \"self\",\n                                         },\n-                                        new_text: \"self\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                        change_annotations: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n+                                    ],\n+                                },\n+                            ),\n+                            document_changes: None,\n+                            change_annotations: None,\n+                        },\n+                    ),\n+                    is_preferred: Some(\n+                        true,\n+                    ),\n+                    data: None,\n+                },\n             },\n-        ],\n+        ),\n     },\n ]"}, {"sha": "989e5cf66d86af716cbba99bf2166e085e967d7a", "filename": "crates/rust-analyzer/src/diagnostics/test_data/handles_macro_location.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -59,6 +59,6 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n ]"}, {"sha": "fe5cf9b3bea7b1685fa72eaff5b87964f160d5f4", "filename": "crates/rust-analyzer/src/diagnostics/test_data/macro_compiler_error.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -64,7 +64,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -131,7 +131,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -224,6 +224,6 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n ]"}, {"sha": "dc36aa761c0663124f2a2ea93dc655c7211a6b31", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_incompatible_type_for_trait.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -59,6 +59,6 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n ]"}, {"sha": "d557196c2bd2455b890be4363636e8e585f75c64", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_mismatched_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_mismatched_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_mismatched_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_mismatched_type.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -59,6 +59,6 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n ]"}, {"sha": "46d44192c5cd92b05869a5fcdc8e82e105e9e093", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable.txt", "status": "modified", "additions": 61, "deletions": 47, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -72,7 +72,7 @@\n             ),\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -143,55 +143,69 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"consider prefixing with an underscore: `_foo`\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n+        fix: Some(\n+            Fix {\n+                ranges: [\n+                    Range {\n+                        start: Position {\n+                            line: 290,\n+                            character: 8,\n+                        },\n+                        end: Position {\n+                            line: 290,\n+                            character: 11,\n+                        },\n+                    },\n+                ],\n+                action: CodeAction {\n+                    title: \"consider prefixing with an underscore: `_foo`\",\n+                    group: None,\n+                    kind: Some(\n+                        CodeActionKind(\n+                            \"quickfix\",\n+                        ),\n                     ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    cannot_be_a_base: false,\n-                                    username: \"\",\n-                                    password: None,\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/driver/subcommand/repl.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 290,\n-                                                character: 8,\n-                                            },\n-                                            end: Position {\n-                                                line: 290,\n-                                                character: 11,\n+                    edit: Some(\n+                        SnippetWorkspaceEdit {\n+                            changes: Some(\n+                                {\n+                                    Url {\n+                                        scheme: \"file\",\n+                                        cannot_be_a_base: false,\n+                                        username: \"\",\n+                                        password: None,\n+                                        host: None,\n+                                        port: None,\n+                                        path: \"/test/driver/subcommand/repl.rs\",\n+                                        query: None,\n+                                        fragment: None,\n+                                    }: [\n+                                        TextEdit {\n+                                            range: Range {\n+                                                start: Position {\n+                                                    line: 290,\n+                                                    character: 8,\n+                                                },\n+                                                end: Position {\n+                                                    line: 290,\n+                                                    character: 11,\n+                                                },\n                                             },\n+                                            new_text: \"_foo\",\n                                         },\n-                                        new_text: \"_foo\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                        change_annotations: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n+                                    ],\n+                                },\n+                            ),\n+                            document_changes: None,\n+                            change_annotations: None,\n+                        },\n+                    ),\n+                    is_preferred: Some(\n+                        true,\n+                    ),\n+                    data: None,\n+                },\n             },\n-        ],\n+        ),\n     },\n ]"}, {"sha": "b595487e8f3630e5cb9b48b4143c09758824949a", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_hint.txt", "status": "modified", "additions": 61, "deletions": 47, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -72,7 +72,7 @@\n             ),\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -143,55 +143,69 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"consider prefixing with an underscore: `_foo`\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n+        fix: Some(\n+            Fix {\n+                ranges: [\n+                    Range {\n+                        start: Position {\n+                            line: 290,\n+                            character: 8,\n+                        },\n+                        end: Position {\n+                            line: 290,\n+                            character: 11,\n+                        },\n+                    },\n+                ],\n+                action: CodeAction {\n+                    title: \"consider prefixing with an underscore: `_foo`\",\n+                    group: None,\n+                    kind: Some(\n+                        CodeActionKind(\n+                            \"quickfix\",\n+                        ),\n                     ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    cannot_be_a_base: false,\n-                                    username: \"\",\n-                                    password: None,\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/driver/subcommand/repl.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 290,\n-                                                character: 8,\n-                                            },\n-                                            end: Position {\n-                                                line: 290,\n-                                                character: 11,\n+                    edit: Some(\n+                        SnippetWorkspaceEdit {\n+                            changes: Some(\n+                                {\n+                                    Url {\n+                                        scheme: \"file\",\n+                                        cannot_be_a_base: false,\n+                                        username: \"\",\n+                                        password: None,\n+                                        host: None,\n+                                        port: None,\n+                                        path: \"/test/driver/subcommand/repl.rs\",\n+                                        query: None,\n+                                        fragment: None,\n+                                    }: [\n+                                        TextEdit {\n+                                            range: Range {\n+                                                start: Position {\n+                                                    line: 290,\n+                                                    character: 8,\n+                                                },\n+                                                end: Position {\n+                                                    line: 290,\n+                                                    character: 11,\n+                                                },\n                                             },\n+                                            new_text: \"_foo\",\n                                         },\n-                                        new_text: \"_foo\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                        change_annotations: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n+                                    ],\n+                                },\n+                            ),\n+                            document_changes: None,\n+                            change_annotations: None,\n+                        },\n+                    ),\n+                    is_preferred: Some(\n+                        true,\n+                    ),\n+                    data: None,\n+                },\n             },\n-        ],\n+        ),\n     },\n ]"}, {"sha": "3ee50392a7fce99418cf0453947ef08150a2deaf", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_info.txt", "status": "modified", "additions": 61, "deletions": 47, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -72,7 +72,7 @@\n             ),\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -143,55 +143,69 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"consider prefixing with an underscore: `_foo`\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n+        fix: Some(\n+            Fix {\n+                ranges: [\n+                    Range {\n+                        start: Position {\n+                            line: 290,\n+                            character: 8,\n+                        },\n+                        end: Position {\n+                            line: 290,\n+                            character: 11,\n+                        },\n+                    },\n+                ],\n+                action: CodeAction {\n+                    title: \"consider prefixing with an underscore: `_foo`\",\n+                    group: None,\n+                    kind: Some(\n+                        CodeActionKind(\n+                            \"quickfix\",\n+                        ),\n                     ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    cannot_be_a_base: false,\n-                                    username: \"\",\n-                                    password: None,\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/driver/subcommand/repl.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 290,\n-                                                character: 8,\n-                                            },\n-                                            end: Position {\n-                                                line: 290,\n-                                                character: 11,\n+                    edit: Some(\n+                        SnippetWorkspaceEdit {\n+                            changes: Some(\n+                                {\n+                                    Url {\n+                                        scheme: \"file\",\n+                                        cannot_be_a_base: false,\n+                                        username: \"\",\n+                                        password: None,\n+                                        host: None,\n+                                        port: None,\n+                                        path: \"/test/driver/subcommand/repl.rs\",\n+                                        query: None,\n+                                        fragment: None,\n+                                    }: [\n+                                        TextEdit {\n+                                            range: Range {\n+                                                start: Position {\n+                                                    line: 290,\n+                                                    character: 8,\n+                                                },\n+                                                end: Position {\n+                                                    line: 290,\n+                                                    character: 11,\n+                                                },\n                                             },\n+                                            new_text: \"_foo\",\n                                         },\n-                                        new_text: \"_foo\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                        change_annotations: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n+                                    ],\n+                                },\n+                            ),\n+                            document_changes: None,\n+                            change_annotations: None,\n+                        },\n+                    ),\n+                    is_preferred: Some(\n+                        true,\n+                    ),\n+                    data: None,\n+                },\n             },\n-        ],\n+        ),\n     },\n ]"}, {"sha": "8ec92888ce1155c8cd66651e6767c0fd24369acd", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_wrong_number_of_parameters.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_wrong_number_of_parameters.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_wrong_number_of_parameters.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_wrong_number_of_parameters.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -88,7 +88,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -179,6 +179,6 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n ]"}, {"sha": "d7987f65eda6b344d2503e748390fb1ef2dd25ab", "filename": "crates/rust-analyzer/src/diagnostics/test_data/snap_multi_line_fix.txt", "status": "modified", "additions": 83, "deletions": 59, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fa2818551efcfe9f5269b2649a5f269749259509/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt?ref=fa2818551efcfe9f5269b2649a5f269749259509", "patch": "@@ -114,7 +114,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -205,7 +205,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [],\n+        fix: None,\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -296,68 +296,92 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"return the expression directly: `(0..10).collect()`\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n+        fix: Some(\n+            Fix {\n+                ranges: [\n+                    Range {\n+                        start: Position {\n+                            line: 2,\n+                            character: 4,\n+                        },\n+                        end: Position {\n+                            line: 2,\n+                            character: 30,\n+                        },\n+                    },\n+                    Range {\n+                        start: Position {\n+                            line: 3,\n+                            character: 4,\n+                        },\n+                        end: Position {\n+                            line: 3,\n+                            character: 5,\n+                        },\n+                    },\n+                ],\n+                action: CodeAction {\n+                    title: \"return the expression directly: `(0..10).collect()`\",\n+                    group: None,\n+                    kind: Some(\n+                        CodeActionKind(\n+                            \"quickfix\",\n+                        ),\n                     ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    cannot_be_a_base: false,\n-                                    username: \"\",\n-                                    password: None,\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/src/main.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 2,\n-                                                character: 4,\n-                                            },\n-                                            end: Position {\n-                                                line: 2,\n-                                                character: 30,\n+                    edit: Some(\n+                        SnippetWorkspaceEdit {\n+                            changes: Some(\n+                                {\n+                                    Url {\n+                                        scheme: \"file\",\n+                                        cannot_be_a_base: false,\n+                                        username: \"\",\n+                                        password: None,\n+                                        host: None,\n+                                        port: None,\n+                                        path: \"/test/src/main.rs\",\n+                                        query: None,\n+                                        fragment: None,\n+                                    }: [\n+                                        TextEdit {\n+                                            range: Range {\n+                                                start: Position {\n+                                                    line: 2,\n+                                                    character: 4,\n+                                                },\n+                                                end: Position {\n+                                                    line: 2,\n+                                                    character: 30,\n+                                                },\n                                             },\n+                                            new_text: \"\",\n                                         },\n-                                        new_text: \"\",\n-                                    },\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 3,\n-                                                character: 4,\n-                                            },\n-                                            end: Position {\n-                                                line: 3,\n-                                                character: 5,\n+                                        TextEdit {\n+                                            range: Range {\n+                                                start: Position {\n+                                                    line: 3,\n+                                                    character: 4,\n+                                                },\n+                                                end: Position {\n+                                                    line: 3,\n+                                                    character: 5,\n+                                                },\n                                             },\n+                                            new_text: \"(0..10).collect()\",\n                                         },\n-                                        new_text: \"(0..10).collect()\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                        change_annotations: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n+                                    ],\n+                                },\n+                            ),\n+                            document_changes: None,\n+                            change_annotations: None,\n+                        },\n+                    ),\n+                    is_preferred: Some(\n+                        true,\n+                    ),\n+                    data: None,\n+                },\n             },\n-        ],\n+        ),\n     },\n ]"}]}