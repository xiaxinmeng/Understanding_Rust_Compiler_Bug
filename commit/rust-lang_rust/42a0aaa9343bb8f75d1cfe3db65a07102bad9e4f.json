{"sha": "42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f", "node_id": "C_kwDOAAsO6NoAKDQyYTBhYWE5MzQzYmI4Zjc1ZDFjZmUzZGI2NWEwNzEwMmJhZDllNGY", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-03-09T06:38:09Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-03-09T07:00:54Z"}, "message": "Remove `dep_node_index_of_opt` and `dep_node_index_of`", "tree": {"sha": "3b4e9653f93912b8d7fe87b4c30f7de7646f4a16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b4e9653f93912b8d7fe87b4c30f7de7646f4a16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f", "html_url": "https://github.com/rust-lang/rust/commit/42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62e4bcb168b354b5780e2a0abc02b61e6a4efee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/62e4bcb168b354b5780e2a0abc02b61e6a4efee3", "html_url": "https://github.com/rust-lang/rust/commit/62e4bcb168b354b5780e2a0abc02b61e6a4efee3"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "8a9a12386064f41c6c3bf5858ed31d05dc8254e6", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=42a0aaa9343bb8f75d1cfe3db65a07102bad9e4f", "patch": "@@ -531,7 +531,7 @@ impl<K: DepKind> DepGraph<K> {\n             // value to an existing node.\n             //\n             // For sanity, we still check that the loaded stable hash and the new one match.\n-            if let Some(dep_node_index) = self.dep_node_index_of_opt(&node) {\n+            if let Some(dep_node_index) = data.dep_node_index_of_opt(&node) {\n                 let _current_fingerprint =\n                     crate::query::incremental_verify_ich(cx, data, result, &node, hash_result);\n \n@@ -589,16 +589,6 @@ impl<K: DepKind> DepGraph<K> {\n             self.next_virtual_depnode_index()\n         }\n     }\n-\n-    #[inline]\n-    pub fn dep_node_index_of(&self, dep_node: &DepNode<K>) -> DepNodeIndex {\n-        self.dep_node_index_of_opt(dep_node).unwrap()\n-    }\n-\n-    #[inline]\n-    pub fn dep_node_index_of_opt(&self, dep_node: &DepNode<K>) -> Option<DepNodeIndex> {\n-        self.data.as_ref().unwrap().dep_node_index_of_opt(dep_node)\n-    }\n }\n \n impl<K: DepKind> DepGraphData<K> {\n@@ -649,7 +639,7 @@ impl<K: DepKind> DepGraphData<K> {\n impl<K: DepKind> DepGraph<K> {\n     #[inline]\n     pub fn dep_node_exists(&self, dep_node: &DepNode<K>) -> bool {\n-        self.data.is_some() && self.dep_node_index_of_opt(dep_node).is_some()\n+        self.data.as_ref().and_then(|data| data.dep_node_index_of_opt(dep_node)).is_some()\n     }\n \n     /// Checks whether a previous work product exists for `v` and, if"}]}