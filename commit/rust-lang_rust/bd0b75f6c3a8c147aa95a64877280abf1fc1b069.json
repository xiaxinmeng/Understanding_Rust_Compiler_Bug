{"sha": "bd0b75f6c3a8c147aa95a64877280abf1fc1b069", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMGI3NWY2YzNhOGMxNDdhYTk1YTY0ODc3MjgwYWJmMWZjMWIwNjk=", "commit": {"author": {"name": "airt", "email": "airtial@gmail.com", "date": "2019-04-30T17:08:16Z"}, "committer": {"name": "airt", "email": "airtial@gmail.com", "date": "2019-04-30T17:08:16Z"}, "message": "fix suggestion for search_is_some naively", "tree": {"sha": "6effed6111ba1913002e8cfc9214daeb9782d29e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6effed6111ba1913002e8cfc9214daeb9782d29e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd0b75f6c3a8c147aa95a64877280abf1fc1b069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd0b75f6c3a8c147aa95a64877280abf1fc1b069", "html_url": "https://github.com/rust-lang/rust/commit/bd0b75f6c3a8c147aa95a64877280abf1fc1b069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd0b75f6c3a8c147aa95a64877280abf1fc1b069/comments", "author": {"login": "airt", "id": 5058439, "node_id": "MDQ6VXNlcjUwNTg0Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5058439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airt", "html_url": "https://github.com/airt", "followers_url": "https://api.github.com/users/airt/followers", "following_url": "https://api.github.com/users/airt/following{/other_user}", "gists_url": "https://api.github.com/users/airt/gists{/gist_id}", "starred_url": "https://api.github.com/users/airt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airt/subscriptions", "organizations_url": "https://api.github.com/users/airt/orgs", "repos_url": "https://api.github.com/users/airt/repos", "events_url": "https://api.github.com/users/airt/events{/privacy}", "received_events_url": "https://api.github.com/users/airt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "airt", "id": 5058439, "node_id": "MDQ6VXNlcjUwNTg0Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5058439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airt", "html_url": "https://github.com/airt", "followers_url": "https://api.github.com/users/airt/followers", "following_url": "https://api.github.com/users/airt/following{/other_user}", "gists_url": "https://api.github.com/users/airt/gists{/gist_id}", "starred_url": "https://api.github.com/users/airt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airt/subscriptions", "organizations_url": "https://api.github.com/users/airt/orgs", "repos_url": "https://api.github.com/users/airt/repos", "events_url": "https://api.github.com/users/airt/events{/privacy}", "received_events_url": "https://api.github.com/users/airt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4d275519e6dc3d2f5ffca0164988c6876c0386", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4d275519e6dc3d2f5ffca0164988c6876c0386", "html_url": "https://github.com/rust-lang/rust/commit/2d4d275519e6dc3d2f5ffca0164988c6876c0386"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "0b3a406bd760fa410a6ff9907940932c47516ee7", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bd0b75f6c3a8c147aa95a64877280abf1fc1b069/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd0b75f6c3a8c147aa95a64877280abf1fc1b069/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=bd0b75f6c3a8c147aa95a64877280abf1fc1b069", "patch": "@@ -1975,6 +1975,13 @@ fn lint_search_is_some<'a, 'tcx>(\n         );\n         let search_snippet = snippet(cx, search_args[1].span, \"..\");\n         if search_snippet.lines().count() <= 1 {\n+            // suggest `any(|x| ..)` instead of `any(|&x| ..)` for `find(|&x| ..).is_some()`\n+            let any_search_snippet =\n+                if search_method == \"find\" && search_snippet.starts_with(\"|&\") {\n+                    Some(search_snippet.replacen('&', \"\", 1))\n+                } else {\n+                    None\n+                };\n             // add note if not multi-line\n             span_note_and_lint(\n                 cx,\n@@ -1983,8 +1990,9 @@ fn lint_search_is_some<'a, 'tcx>(\n                 &msg,\n                 expr.span,\n                 &format!(\n-                    \"replace `{0}({1}).is_some()` with `any({1})`\",\n-                    search_method, search_snippet\n+                    \"replace `{0}({1}).is_some()` with `any({2})`\",\n+                    search_method, search_snippet,\n+                    any_search_snippet.as_ref().map_or(&*search_snippet, String::as_str)\n                 ),\n             );\n         } else {"}]}