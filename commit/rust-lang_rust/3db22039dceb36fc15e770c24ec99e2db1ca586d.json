{"sha": "3db22039dceb36fc15e770c24ec99e2db1ca586d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYjIyMDM5ZGNlYjM2ZmMxNWU3NzBjMjRlYzk5ZTJkYjFjYTU4NmQ=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2018-10-17T22:54:13Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2018-11-01T22:16:59Z"}, "message": "Remove this check for object-safety during selection of trait object candidates\n\nI don't really understand what it's for, but see the comment here:\nhttps://github.com/rust-lang/rust/pull/50173#discussion_r204222336\n\nwhere arielb1 said\n\n> Does this check do anything these days? I think `$0: Trait` is always considered ambiguous\n\nand nikomatsakis agreed we may be able to get rid of it", "tree": {"sha": "5430589e94a240df77a7bc391d481810041cfcf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5430589e94a240df77a7bc391d481810041cfcf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3db22039dceb36fc15e770c24ec99e2db1ca586d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3db22039dceb36fc15e770c24ec99e2db1ca586d", "html_url": "https://github.com/rust-lang/rust/commit/3db22039dceb36fc15e770c24ec99e2db1ca586d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3db22039dceb36fc15e770c24ec99e2db1ca586d/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb997d76d5a1c0ed933ab76459233e3650d2771d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb997d76d5a1c0ed933ab76459233e3650d2771d", "html_url": "https://github.com/rust-lang/rust/commit/eb997d76d5a1c0ed933ab76459233e3650d2771d"}], "stats": {"total": 11, "additions": 0, "deletions": 11}, "files": [{"sha": "126c158f846bdec13f53559022e0594c1a0d2718", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3db22039dceb36fc15e770c24ec99e2db1ca586d/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3db22039dceb36fc15e770c24ec99e2db1ca586d/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=3db22039dceb36fc15e770c24ec99e2db1ca586d", "patch": "@@ -2111,17 +2111,6 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                     data.principal().with_self_ty(this.tcx(), self_ty)\n                 }\n                 ty::Infer(ty::TyVar(_)) => {\n-                    // Object-safety candidates are only applicable to object-safe\n-                    // traits. Including this check is useful because it helps\n-                    // inference in cases of traits like `BorrowFrom`, which are\n-                    // not object-safe, and which rely on being able to infer the\n-                    // self-type from one of the other inputs. Without this check,\n-                    // these cases wind up being considered ambiguous due to a\n-                    // (spurious) ambiguity introduced here.\n-                    let predicate_trait_ref = obligation.predicate.to_poly_trait_ref();\n-                    if !this.tcx().is_object_safe(predicate_trait_ref.def_id()) {\n-                        return;\n-                    }\n                     debug!(\"assemble_candidates_from_object_ty: ambiguous\");\n                     candidates.ambiguous = true; // could wind up being an object type\n                     return;"}]}