{"sha": "7dbd5bb0bd655abe3f4de232f9ccb50db3843d42", "node_id": "C_kwDOAAsO6NoAKDdkYmQ1YmIwYmQ2NTVhYmUzZjRkZTIzMmY5Y2NiNTBkYjM4NDNkNDI", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-19T05:42:44Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-19T05:43:33Z"}, "message": "Fix issue 90038", "tree": {"sha": "03d43dcb536014a61dcd5bf651edb590230d9237", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03d43dcb536014a61dcd5bf651edb590230d9237"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42", "html_url": "https://github.com/rust-lang/rust/commit/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd8b56f528631b128f36605b28ae06e36377dc68", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8b56f528631b128f36605b28ae06e36377dc68", "html_url": "https://github.com/rust-lang/rust/commit/cd8b56f528631b128f36605b28ae06e36377dc68"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "a57ad8f2bbd1bf1bee765d6e2ad4de4f79d74032", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=7dbd5bb0bd655abe3f4de232f9ccb50db3843d42", "patch": "@@ -1117,7 +1117,7 @@ impl Niche {\n         // In practice this means that enums with `count > 1` are unlikely to claim niche zero, since they have to fit perfectly.\n         // If niche zero is already reserved, the selection of bounds are of little interest.\n         let move_start = |v: WrappingRange| {\n-            let start = v.start.wrapping_sub(1) & max_value;\n+            let start = v.start.wrapping_sub(count) & max_value;\n             Some((start, Scalar { value, valid_range: v.with_start(start) }))\n         };\n         let move_end = |v: WrappingRange| {"}, {"sha": "5e98eccd9b55ce6648b0a651057445085dae627f", "filename": "src/test/ui/enum-discriminant/issue-90038.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42/src%2Ftest%2Fui%2Fenum-discriminant%2Fissue-90038.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dbd5bb0bd655abe3f4de232f9ccb50db3843d42/src%2Ftest%2Fui%2Fenum-discriminant%2Fissue-90038.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum-discriminant%2Fissue-90038.rs?ref=7dbd5bb0bd655abe3f4de232f9ccb50db3843d42", "patch": "@@ -0,0 +1,21 @@\n+// run-pass\n+\n+#[repr(u32)]\n+pub enum Foo {\n+    // Greater than or equal to 2\n+    A = 2,\n+}\n+\n+pub enum Bar {\n+    A(Foo),\n+    // More than two const variants\n+    B,\n+    C,\n+}\n+\n+fn main() {\n+    match Bar::A(Foo::A) {\n+        Bar::A(_) => (),\n+        _ => unreachable!(),\n+    }\n+}"}]}