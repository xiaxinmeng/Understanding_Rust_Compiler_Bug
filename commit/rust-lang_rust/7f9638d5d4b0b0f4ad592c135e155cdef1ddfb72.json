{"sha": "7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmOTYzOGQ1ZDRiMGIwZjRhZDU5MmMxMzVlMTU1Y2RlZjFkZGZiNzI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-01T12:19:08Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-07T04:01:38Z"}, "message": "syntax: unify trait parsing a bit.", "tree": {"sha": "f3dd82223da74e73ef788bffd121ae3b702ce7d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3dd82223da74e73ef788bffd121ae3b702ce7d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72", "html_url": "https://github.com/rust-lang/rust/commit/7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "090f3fd0c958e4ea8e7a6dfe33ae647d339c0544", "url": "https://api.github.com/repos/rust-lang/rust/commits/090f3fd0c958e4ea8e7a6dfe33ae647d339c0544", "html_url": "https://github.com/rust-lang/rust/commit/090f3fd0c958e4ea8e7a6dfe33ae647d339c0544"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "17b23651e807220155d13c3347c06693cdc28939", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=7f9638d5d4b0b0f4ad592c135e155cdef1ddfb72", "patch": "@@ -217,14 +217,7 @@ impl<'a> Parser<'a> {\n         {\n             // UNSAFE TRAIT ITEM\n             self.bump(); // `unsafe`\n-            let is_auto = if self.eat_keyword(kw::Trait) {\n-                IsAuto::No\n-            } else {\n-                self.expect_keyword(kw::Auto)?;\n-                self.expect_keyword(kw::Trait)?;\n-                IsAuto::Yes\n-            };\n-            let info = self.parse_item_trait(is_auto, Unsafety::Unsafe)?;\n+            let info = self.parse_item_trait(Unsafety::Unsafe)?;\n             return self.mk_item_with_info(attrs, lo, vis, info);\n         }\n \n@@ -302,13 +295,7 @@ impl<'a> Parser<'a> {\n                 && self.is_keyword_ahead(1, &[kw::Trait]))\n         {\n             // TRAIT ITEM\n-            let is_auto = if self.eat_keyword(kw::Auto) {\n-                IsAuto::Yes\n-            } else {\n-                IsAuto::No\n-            };\n-            self.expect_keyword(kw::Trait)?;\n-            let info = self.parse_item_trait(is_auto, Unsafety::Normal)?;\n+            let info = self.parse_item_trait(Unsafety::Normal)?;\n             return self.mk_item_with_info(attrs, lo, vis, info);\n         }\n \n@@ -860,8 +847,16 @@ impl<'a> Parser<'a> {\n         Ok(FnHeader { constness, unsafety, asyncness, abi })\n     }\n \n-    /// Parses `trait Foo { ... }` or `trait Foo = Bar;`.\n-    fn parse_item_trait(&mut self, is_auto: IsAuto, unsafety: Unsafety) -> PResult<'a, ItemInfo> {\n+    /// Parses `auto? trait Foo { ... }` or `trait Foo = Bar;`.\n+    fn parse_item_trait(&mut self, unsafety: Unsafety) -> PResult<'a, ItemInfo> {\n+        // Parse optional `auto` prefix.\n+        let is_auto = if self.eat_keyword(kw::Auto) {\n+            IsAuto::Yes\n+        } else {\n+            IsAuto::No\n+        };\n+\n+        self.expect_keyword(kw::Trait)?;\n         let ident = self.parse_ident()?;\n         let mut tps = self.parse_generics()?;\n "}]}