{"sha": "d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "node_id": "C_kwDOAAsO6NoAKGQzNmRiMGQyYTBjNGZhMGFkYWY0OWIyZTc5NTY3MGJmYzIzNWQzOTA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-05T17:52:17Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-01-12T17:14:17Z"}, "message": "Feed the `features_query` instead of grabbing it from the session lazily", "tree": {"sha": "f1cb3f9b0fcfbf133c74b9b7db0f19585a6840ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1cb3f9b0fcfbf133c74b9b7db0f19585a6840ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "html_url": "https://github.com/rust-lang/rust/commit/d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbe2d5aad2912e718541443357784cea4b65a0b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbe2d5aad2912e718541443357784cea4b65a0b8", "html_url": "https://github.com/rust-lang/rust/commit/fbe2d5aad2912e718541443357784cea4b65a0b8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2a6852d44eba7fd92f5ae8b2f496ae080d45f9da", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "patch": "@@ -834,6 +834,7 @@ pub fn create_global_ctxt<'tcx>(\n         );\n         feed.resolutions(tcx.arena.alloc(untracked_resolutions));\n         feed.output_filenames(tcx.arena.alloc(std::sync::Arc::new(outputs)));\n+        feed.features_query(sess.features_untracked());\n         let feed = tcx.feed_local_crate();\n         feed.crate_name(crate_name);\n     });"}, {"sha": "bf00ade5f0bdba4c400ef3307e5caccc18461072", "filename": "compiler/rustc_lint/src/expect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs?ref=d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "patch": "@@ -12,7 +12,7 @@ pub(crate) fn provide(providers: &mut Providers) {\n }\n \n fn check_expectations(tcx: TyCtxt<'_>, tool_filter: Option<Symbol>) {\n-    if !tcx.sess.features_untracked().enabled(sym::lint_reasons) {\n+    if !tcx.features().enabled(sym::lint_reasons) {\n         return;\n     }\n "}, {"sha": "8665591573695657dc3941e61f092529869f3327", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "patch": "@@ -2041,7 +2041,7 @@ rustc_queries! {\n     }\n \n     query features_query(_: ()) -> &'tcx rustc_feature::Features {\n-        eval_always\n+        feedable\n         desc { \"looking up enabled feature gates\" }\n     }\n "}, {"sha": "63f31e5a11f39e96e835a308d2e12653767d22f7", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "patch": "@@ -2402,7 +2402,6 @@ pub fn provide(providers: &mut ty::query::Providers) {\n \n     providers.extern_mod_stmt_cnum =\n         |tcx, id| tcx.resolutions(()).extern_crate_map.get(&id).cloned();\n-    providers.features_query = |tcx, ()| tcx.sess.features_untracked();\n     providers.is_panic_runtime = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n         tcx.sess.contains_name(tcx.hir().krate_attrs(), sym::panic_runtime)"}, {"sha": "d1b6d470e86ce91da866d11d89abbed6dc1622be", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "patch": "@@ -1221,7 +1221,7 @@ impl<'a, 'hir, 'tcx> HirCollector<'a, 'hir, 'tcx> {\n     ) {\n         let ast_attrs = self.tcx.hir().attrs(hir_id);\n         if let Some(ref cfg) = ast_attrs.cfg(self.tcx, &FxHashSet::default()) {\n-            if !cfg.matches(&self.sess.parse_sess, Some(self.sess.features_untracked())) {\n+            if !cfg.matches(&self.sess.parse_sess, Some(self.tcx.features())) {\n                 return;\n             }\n         }"}, {"sha": "751c262673b1ca04bec420a92bddbeea88ffdf10", "filename": "src/tools/clippy/clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36db0d2a0c4fa0adaf49b2e795670bfc235d390/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fattrs.rs?ref=d36db0d2a0c4fa0adaf49b2e795670bfc235d390", "patch": "@@ -472,7 +472,7 @@ fn check_clippy_lint_names(cx: &LateContext<'_>, name: Symbol, items: &[NestedMe\n \n fn check_lint_reason(cx: &LateContext<'_>, name: Symbol, items: &[NestedMetaItem], attr: &'_ Attribute) {\n     // Check for the feature\n-    if !cx.tcx.sess.features_untracked().lint_reasons {\n+    if !cx.tcx.features().lint_reasons {\n         return;\n     }\n "}]}