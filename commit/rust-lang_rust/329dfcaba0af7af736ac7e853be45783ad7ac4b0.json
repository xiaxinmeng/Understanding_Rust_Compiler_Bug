{"sha": "329dfcaba0af7af736ac7e853be45783ad7ac4b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOWRmY2FiYTBhZjdhZjczNmFjN2U4NTNiZTQ1NzgzYWQ3YWM0YjA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-07T22:54:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-14T21:52:07Z"}, "message": "core: Move unstable::exchange_alloc to rt::global_heap", "tree": {"sha": "1cfdbcf76ce8c05ea6c4198811985a976dfc233b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cfdbcf76ce8c05ea6c4198811985a976dfc233b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/329dfcaba0af7af736ac7e853be45783ad7ac4b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/329dfcaba0af7af736ac7e853be45783ad7ac4b0", "html_url": "https://github.com/rust-lang/rust/commit/329dfcaba0af7af736ac7e853be45783ad7ac4b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/329dfcaba0af7af736ac7e853be45783ad7ac4b0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52f015acebd7b1fa4fb040aa40d94416f053de24", "url": "https://api.github.com/repos/rust-lang/rust/commits/52f015acebd7b1fa4fb040aa40d94416f053de24", "html_url": "https://github.com/rust-lang/rust/commit/52f015acebd7b1fa4fb040aa40d94416f053de24"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "022204fa69b623a0531f55efc8c36796756835b5", "filename": "src/libcore/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=329dfcaba0af7af736ac7e853be45783ad7ac4b0", "patch": "@@ -724,7 +724,7 @@ pub fn list_dir(p: &Path) -> ~[~str] {\n             use os::win32::{\n                 as_utf16_p\n             };\n-            use unstable::exchange_alloc::{malloc_raw, free_raw};\n+            use rt::global_heap::{malloc_raw, free_raw};\n             #[nolink]\n             extern {\n                 unsafe fn rust_list_dir_wfd_size() -> libc::size_t;"}, {"sha": "57ed579e88ddab785234de6f82dc3785c5b14a3f", "filename": "src/libcore/rt/global_heap.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fglobal_heap.rs?ref=329dfcaba0af7af736ac7e853be45783ad7ac4b0", "previous_filename": "src/libcore/unstable/exchange_alloc.rs"}, {"sha": "55f777ebf9ac75c5ad0f3de8668410b827cee715", "filename": "src/libcore/rt/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fmod.rs?ref=329dfcaba0af7af736ac7e853be45783ad7ac4b0", "patch": "@@ -14,7 +14,10 @@\n \n use libc::c_char;\n \n-/// The Scheduler and Task types\n+/// The global (exchange) heap.\n+pub mod global_heap;\n+\n+/// The Scheduler and Task types.\n mod sched;\n \n /// Thread-local access to the current Scheduler"}, {"sha": "9530d7ab50d64442c448d3bd63614014593232d2", "filename": "src/libcore/unstable.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Funstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Funstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funstable.rs?ref=329dfcaba0af7af736ac7e853be45783ad7ac4b0", "patch": "@@ -26,8 +26,6 @@ pub mod global;\n pub mod finally;\n #[path = \"unstable/weak_task.rs\"]\n pub mod weak_task;\n-#[path = \"unstable/exchange_alloc.rs\"]\n-pub mod exchange_alloc;\n #[path = \"unstable/intrinsics.rs\"]\n pub mod intrinsics;\n #[path = \"unstable/simd.rs\"]"}, {"sha": "e521fb59fbe5f7ed7cfd9898df1577b0d93c819a", "filename": "src/libcore/unstable/lang.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Funstable%2Flang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/329dfcaba0af7af736ac7e853be45783ad7ac4b0/src%2Flibcore%2Funstable%2Flang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funstable%2Flang.rs?ref=329dfcaba0af7af736ac7e853be45783ad7ac4b0", "patch": "@@ -16,12 +16,12 @@ use libc::{c_char, c_uchar, c_void, size_t, uintptr_t, c_int, STDERR_FILENO};\n use managed::raw::BoxRepr;\n use str;\n use sys;\n-use unstable::exchange_alloc;\n use cast::transmute;\n use rt::{context, OldTaskContext};\n use rt::local_services::borrow_local_services;\n use option::{Option, Some, None};\n use io;\n+use rt::global_heap;\n \n #[allow(non_camel_case_types)]\n pub type rust_task = c_void;\n@@ -153,7 +153,7 @@ unsafe fn fail_borrowed(box: *mut BoxRepr, file: *c_char, line: size_t) {\n #[lang=\"exchange_malloc\"]\n #[inline(always)]\n pub unsafe fn exchange_malloc(td: *c_char, size: uintptr_t) -> *c_char {\n-    transmute(exchange_alloc::malloc(transmute(td), transmute(size)))\n+    transmute(global_heap::malloc(transmute(td), transmute(size)))\n }\n \n /// Because this code is so perf. sensitive, use a static constant so that\n@@ -233,7 +233,7 @@ impl DebugPrints for io::fd_t {\n #[lang=\"exchange_free\"]\n #[inline(always)]\n pub unsafe fn exchange_free(ptr: *c_char) {\n-    exchange_alloc::free(transmute(ptr))\n+    global_heap::free(transmute(ptr))\n }\n \n #[lang=\"malloc\"]"}]}