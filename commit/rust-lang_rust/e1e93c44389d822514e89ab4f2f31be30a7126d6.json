{"sha": "e1e93c44389d822514e89ab4f2f31be30a7126d6", "node_id": "C_kwDOAAsO6NoAKGUxZTkzYzQ0Mzg5ZDgyMjUxNGU4OWFiNGYyZjMxYmUzMGE3MTI2ZDY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-09T07:03:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-09T07:03:35Z"}, "message": "Auto merge of #12981 - kadiwa4:remove_some_imports, r=Veykril\n\nRemove imports that are also in edition 2021's prelude\n\nsmall cleanup", "tree": {"sha": "c09d8d71b5e9c439560fa358c0b861f314cb0ae3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c09d8d71b5e9c439560fa358c0b861f314cb0ae3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1e93c44389d822514e89ab4f2f31be30a7126d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1e93c44389d822514e89ab4f2f31be30a7126d6", "html_url": "https://github.com/rust-lang/rust/commit/e1e93c44389d822514e89ab4f2f31be30a7126d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1e93c44389d822514e89ab4f2f31be30a7126d6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "554f7f889e9feecf7d851ae3aaa03d5273563b1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/554f7f889e9feecf7d851ae3aaa03d5273563b1f", "html_url": "https://github.com/rust-lang/rust/commit/554f7f889e9feecf7d851ae3aaa03d5273563b1f"}, {"sha": "232176b46af3955e20997eb4ffb5e77fefde0ed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/232176b46af3955e20997eb4ffb5e77fefde0ed5", "html_url": "https://github.com/rust-lang/rust/commit/232176b46af3955e20997eb4ffb5e77fefde0ed5"}], "stats": {"total": 42, "additions": 15, "deletions": 27}, "files": [{"sha": "9580ce8007c76a2224f5f2ba90a2acfbc6680d11", "filename": "crates/base-db/src/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fbase-db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fbase-db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Finput.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -6,7 +6,7 @@\n //! actual IO. See `vfs` and `project_model` in the `rust-analyzer` crate for how\n //! actual IO is done and lowered to input.\n \n-use std::{fmt, iter::FromIterator, ops, panic::RefUnwindSafe, str::FromStr, sync::Arc};\n+use std::{fmt, ops, panic::RefUnwindSafe, str::FromStr, sync::Arc};\n \n use cfg::CfgOptions;\n use rustc_hash::{FxHashMap, FxHashSet};"}, {"sha": "6ecb6e6fd173e30e9273d82c792485b3bb7d506f", "filename": "crates/hir-ty/src/consteval.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -2,7 +2,6 @@\n \n use std::{\n     collections::HashMap,\n-    convert::TryInto,\n     fmt::{Display, Write},\n };\n "}, {"sha": "9eaabeec7a4e7e2669e6a0d5540a3896baede122", "filename": "crates/ide-db/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fide-db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fide-db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsearch.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -4,7 +4,7 @@\n //! get a super-set of matches. Then, we we confirm each match using precise\n //! name resolution.\n \n-use std::{convert::TryInto, mem, sync::Arc};\n+use std::{mem, sync::Arc};\n \n use base_db::{FileId, FileRange, SourceDatabase, SourceDatabaseExt};\n use hir::{DefWithBody, HasAttrs, HasSource, InFile, ModuleSource, Semantics, Visibility};"}, {"sha": "d6cd5783f05ef0cf2a90f449c65f07a5c2dba6f0", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -1,4 +1,4 @@\n-use std::{convert::TryInto, mem::discriminant};\n+use std::mem::discriminant;\n \n use crate::{doc_links::token_as_doc_comment, FilePosition, NavigationTarget, RangeInfo, TryToNav};\n use hir::{AsAssocItem, AssocItem, Semantics};"}, {"sha": "f4d0387440d475e23e4e7ef466cc608f3f9565de", "filename": "crates/ide/src/status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatus.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -1,4 +1,4 @@\n-use std::{fmt, iter::FromIterator, sync::Arc};\n+use std::{fmt, sync::Arc};\n \n use hir::{ExpandResult, MacroFile};\n use ide_db::base_db::{"}, {"sha": "268a03bb5359b607343d9cecd8daaa60291f8db1", "filename": "crates/proc-macro-api/src/msg/flat.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-api%2Fsrc%2Fmsg%2Fflat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-api%2Fsrc%2Fmsg%2Fflat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-api%2Fsrc%2Fmsg%2Fflat.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -35,10 +35,7 @@\n //! as we don't have bincode in Cargo.toml yet, lets stick with serde_json for\n //! the time being.\n \n-use std::{\n-    collections::{HashMap, VecDeque},\n-    convert::TryInto,\n-};\n+use std::collections::{HashMap, VecDeque};\n \n use serde::{Deserialize, Serialize};\n use tt::TokenId;"}, {"sha": "a405497f3c9b7858da927d1b5d1be5eedff0c261", "filename": "crates/proc-macro-srv/src/abis/abi_1_58/proc_macro/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_58%2Fproc_macro%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_58%2Fproc_macro%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_58%2Fproc_macro%2Fmod.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -157,15 +157,15 @@ impl From<TokenTree> for TokenStream {\n }\n \n /// Collects a number of token trees into a single stream.\n-impl iter::FromIterator<TokenTree> for TokenStream {\n+impl FromIterator<TokenTree> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = TokenTree>>(trees: I) -> Self {\n         trees.into_iter().map(TokenStream::from).collect()\n     }\n }\n \n /// A \"flattening\" operation on token streams, collects token trees\n /// from multiple token streams into a single stream.\n-impl iter::FromIterator<TokenStream> for TokenStream {\n+impl FromIterator<TokenStream> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = TokenStream>>(streams: I) -> Self {\n         let mut builder = bridge::client::TokenStreamBuilder::new();\n         streams.into_iter().for_each(|stream| builder.push(stream.0));"}, {"sha": "b1e982f4779f7fde6567f3b9e5d64532e4f2ac87", "filename": "crates/proc-macro-srv/src/abis/abi_1_58/ra_server.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_58%2Fra_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_58%2Fra_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_58%2Fra_server.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -12,7 +12,6 @@ use super::proc_macro::bridge::{self, server};\n \n use std::collections::HashMap;\n use std::hash::Hash;\n-use std::iter::FromIterator;\n use std::ops::Bound;\n use std::{ascii, vec::IntoIter};\n "}, {"sha": "7ab1f421daf897a9408c45b4334f37b1c89038f1", "filename": "crates/proc-macro-srv/src/abis/abi_1_63/proc_macro/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_63%2Fproc_macro%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_63%2Fproc_macro%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_63%2Fproc_macro%2Fmod.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -207,15 +207,15 @@ impl ConcatStreamsHelper {\n }\n \n /// Collects a number of token trees into a single stream.\n-impl iter::FromIterator<TokenTree> for TokenStream {\n+impl FromIterator<TokenTree> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = TokenTree>>(trees: I) -> Self {\n         trees.into_iter().map(TokenStream::from).collect()\n     }\n }\n \n /// A \"flattening\" operation on token streams, collects token trees\n /// from multiple token streams into a single stream.\n-impl iter::FromIterator<TokenStream> for TokenStream {\n+impl FromIterator<TokenStream> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = TokenStream>>(streams: I) -> Self {\n         let iter = streams.into_iter();\n         let mut builder = ConcatStreamsHelper::new(iter.size_hint().0);"}, {"sha": "ed49cc7596608edf9f4475270ca13cb98f04ad4b", "filename": "crates/proc-macro-srv/src/abis/abi_1_63/ra_server.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_63%2Fra_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_63%2Fra_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_63%2Fra_server.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -12,7 +12,6 @@ use super::proc_macro::bridge::{self, server};\n \n use std::collections::HashMap;\n use std::hash::Hash;\n-use std::iter::FromIterator;\n use std::ops::Bound;\n use std::{ascii, vec::IntoIter};\n "}, {"sha": "86a59b64559037119c2f853ec53531afa7efa5eb", "filename": "crates/proc-macro-srv/src/abis/abi_1_64/proc_macro/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_64%2Fproc_macro%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_64%2Fproc_macro%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_64%2Fproc_macro%2Fmod.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -207,15 +207,15 @@ impl ConcatStreamsHelper {\n }\n \n /// Collects a number of token trees into a single stream.\n-impl iter::FromIterator<TokenTree> for TokenStream {\n+impl FromIterator<TokenTree> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = TokenTree>>(trees: I) -> Self {\n         trees.into_iter().map(TokenStream::from).collect()\n     }\n }\n \n /// A \"flattening\" operation on token streams, collects token trees\n /// from multiple token streams into a single stream.\n-impl iter::FromIterator<TokenStream> for TokenStream {\n+impl FromIterator<TokenStream> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = TokenStream>>(streams: I) -> Self {\n         let iter = streams.into_iter();\n         let mut builder = ConcatStreamsHelper::new(iter.size_hint().0);"}, {"sha": "d8aa1ec429a7dc7ae37f3ae30431f5b1b2534407", "filename": "crates/proc-macro-srv/src/abis/abi_1_64/ra_server.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_64%2Fra_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_64%2Fra_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_1_64%2Fra_server.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -12,7 +12,6 @@ use super::proc_macro::bridge::{self, server};\n \n use std::collections::HashMap;\n use std::hash::Hash;\n-use std::iter::FromIterator;\n use std::ops::Bound;\n use std::{ascii, vec::IntoIter};\n "}, {"sha": "52eb7ce17d6aeb482d41846a7781b0601ff8131a", "filename": "crates/proc-macro-srv/src/abis/abi_sysroot/ra_server.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -20,7 +20,7 @@ use token_stream::TokenStreamBuilder;\n mod symbol;\n pub use symbol::*;\n \n-use std::{iter::FromIterator, ops::Bound};\n+use std::ops::Bound;\n \n type Group = tt::Subtree;\n type TokenTree = tt::TokenTree;"}, {"sha": "7aba74e5396dee1778f272321144017e0140bf35", "filename": "crates/proc-macro-srv/src/dylib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -1,7 +1,6 @@\n //! Handles dynamic library loading for proc macro\n \n use std::{\n-    convert::TryInto,\n     fmt,\n     fs::File,\n     io,"}, {"sha": "74689fd8757f82942c13842fd1305a48c41606e4", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -512,7 +512,7 @@ fn clippy_code_description(code: Option<&str>) -> Option<lsp_types::CodeDescript\n #[cfg(test)]\n #[cfg(not(windows))]\n mod tests {\n-    use std::{convert::TryInto, path::Path};\n+    use std::path::Path;\n \n     use crate::{config::Config, global_state::GlobalState};\n "}, {"sha": "e7115b0732e20c6922627cd3675172cae612c686", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -1386,7 +1386,7 @@ fn main() {\n     #[test]\n     #[cfg(target_os = \"windows\")]\n     fn test_lowercase_drive_letter() {\n-        use std::{convert::TryInto, path::Path};\n+        use std::path::Path;\n \n         let url = url_from_abs_path(Path::new(\"C:\\\\Test\").try_into().unwrap());\n         assert_eq!(url.to_string(), \"file:///c:/Test\");"}, {"sha": "7c7a60d62994eeca97712716beef99b45146a6e2", "filename": "crates/syntax/src/fuzz.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fsyntax%2Fsrc%2Ffuzz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/crates%2Fsyntax%2Fsrc%2Ffuzz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ffuzz.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -2,10 +2,7 @@\n //!\n //! We don't normally run fuzzying, so this is hopelessly bitrotten :(\n \n-use std::{\n-    convert::TryInto,\n-    str::{self, FromStr},\n-};\n+use std::str::{self, FromStr};\n \n use text_edit::Indel;\n "}, {"sha": "50e8d06b66049795bedc69b320bad4be62d7a811", "filename": "lib/la-arena/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1e93c44389d822514e89ab4f2f31be30a7126d6/lib%2Fla-arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e93c44389d822514e89ab4f2f31be30a7126d6/lib%2Fla-arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fla-arena%2Fsrc%2Flib.rs?ref=e1e93c44389d822514e89ab4f2f31be30a7126d6", "patch": "@@ -6,7 +6,6 @@\n use std::{\n     fmt,\n     hash::{Hash, Hasher},\n-    iter::FromIterator,\n     marker::PhantomData,\n     ops::{Index, IndexMut, Range, RangeInclusive},\n };"}]}