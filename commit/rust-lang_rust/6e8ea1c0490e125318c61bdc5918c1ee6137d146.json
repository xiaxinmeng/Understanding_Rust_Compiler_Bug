{"sha": "6e8ea1c0490e125318c61bdc5918c1ee6137d146", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlOGVhMWMwNDkwZTEyNTMxOGM2MWJkYzU5MThjMWVlNjEzN2QxNDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-11T09:31:36Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-11T09:31:36Z"}, "message": "Abort earlier when an error happens in jit mode", "tree": {"sha": "032501a02c4a9528dd0a3853d89302ebdb01f2e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/032501a02c4a9528dd0a3853d89302ebdb01f2e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e8ea1c0490e125318c61bdc5918c1ee6137d146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e8ea1c0490e125318c61bdc5918c1ee6137d146", "html_url": "https://github.com/rust-lang/rust/commit/6e8ea1c0490e125318c61bdc5918c1ee6137d146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e8ea1c0490e125318c61bdc5918c1ee6137d146/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96d76eb8e478c4a9f82fa6bfc358294cd6942910", "url": "https://api.github.com/repos/rust-lang/rust/commits/96d76eb8e478c4a9f82fa6bfc358294cd6942910", "html_url": "https://github.com/rust-lang/rust/commit/96d76eb8e478c4a9f82fa6bfc358294cd6942910"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b5bab3d9e1ed10114636d2b7f754222b90b9b160", "filename": "src/driver/jit.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6e8ea1c0490e125318c61bdc5918c1ee6137d146/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e8ea1c0490e125318c61bdc5918c1ee6137d146/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=6e8ea1c0490e125318c61bdc5918c1ee6137d146", "patch": "@@ -6,10 +6,14 @@ use std::os::raw::{c_char, c_int};\n \n use rustc_codegen_ssa::CrateInfo;\n \n+use cranelift_simplejit::{SimpleJITBuilder, SimpleJITModule};\n+\n use crate::prelude::*;\n \n pub(super) fn run_jit(tcx: TyCtxt<'_>) -> ! {\n-    use cranelift_simplejit::{SimpleJITBuilder, SimpleJITModule};\n+    if !tcx.sess.opts.output_types.should_codegen() {\n+        tcx.sess.fatal(\"JIT mode doesn't work with `cargo check`.\");\n+    }\n \n     #[cfg(unix)]\n     unsafe {\n@@ -53,10 +57,6 @@ pub(super) fn run_jit(tcx: TyCtxt<'_>) -> ! {\n         .declare_function(\"main\", Linkage::Import, &sig)\n         .unwrap();\n \n-    if !tcx.sess.opts.output_types.should_codegen() {\n-        tcx.sess.fatal(\"JIT mode doesn't work with `cargo check`.\");\n-    }\n-\n     let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n     let mono_items = cgus\n         .iter()\n@@ -79,12 +79,12 @@ pub(super) fn run_jit(tcx: TyCtxt<'_>) -> ! {\n     crate::main_shim::maybe_create_entry_wrapper(tcx, &mut jit_module, &mut unwind_context, true);\n     crate::allocator::codegen(tcx, &mut jit_module, &mut unwind_context);\n \n+    tcx.sess.abort_if_errors();\n+\n     let jit_product = jit_module.finish();\n \n     let _unwind_register_guard = unsafe { unwind_context.register_jit(&jit_product) };\n \n-    tcx.sess.abort_if_errors();\n-\n     let finalized_main: *const u8 = jit_product.lookup_func(main_func_id);\n \n     println!(\"Rustc codegen cranelift will JIT run the executable, because --jit was passed\");"}]}