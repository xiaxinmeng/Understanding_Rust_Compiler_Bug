{"sha": "604bc876e03a4169a1fb42408d778c65ab39cec2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNGJjODc2ZTAzYTQxNjlhMWZiNDI0MDhkNzc4YzY1YWIzOWNlYzI=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-05T00:01:32Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-07T08:19:04Z"}, "message": "implement nits", "tree": {"sha": "7b40a8a99f4860d7a5582996b7b14b88272c2f37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b40a8a99f4860d7a5582996b7b14b88272c2f37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/604bc876e03a4169a1fb42408d778c65ab39cec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/604bc876e03a4169a1fb42408d778c65ab39cec2", "html_url": "https://github.com/rust-lang/rust/commit/604bc876e03a4169a1fb42408d778c65ab39cec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/604bc876e03a4169a1fb42408d778c65ab39cec2/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "236689d6eb241e92bea7449c07ba55783926391f", "url": "https://api.github.com/repos/rust-lang/rust/commits/236689d6eb241e92bea7449c07ba55783926391f", "html_url": "https://github.com/rust-lang/rust/commit/236689d6eb241e92bea7449c07ba55783926391f"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "a70309b64c1e920fde25f71ed69bbf4482af7d80", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=604bc876e03a4169a1fb42408d778c65ab39cec2", "patch": "@@ -2210,7 +2210,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                         .attrs\n                         .iter()\n                         .filter(|attr| self.sess.check_name(attr, sym::rustc_synthetic))\n-                        .map(|_| hir::SyntheticTyParamKind::Rustc)\n+                        .map(|_| hir::SyntheticTyParamKind::FromAttr)\n                         .next(),\n                 };\n "}, {"sha": "befdfdbd7cf9cf8c74143fd7a484b80651a9d811", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=604bc876e03a4169a1fb42408d778c65ab39cec2", "patch": "@@ -509,7 +509,7 @@ impl Generics<'hir> {\n pub enum SyntheticTyParamKind {\n     ImplTrait,\n     // Created by the `#[rustc_synthetic]` attribute.\n-    Rustc,\n+    FromAttr,\n }\n \n /// A where-clause in a definition."}, {"sha": "6d1a5fcc10b0ff14ff9c10e316e0358d3bef0370", "filename": "compiler/rustc_passes/src/hir_id_validator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_passes%2Fsrc%2Fhir_id_validator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_passes%2Fsrc%2Fhir_id_validator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fhir_id_validator.rs?ref=604bc876e03a4169a1fb42408d778c65ab39cec2", "patch": "@@ -170,7 +170,8 @@ impl<'a, 'hir> intravisit::Visitor<'hir> for HirIdValidator<'a, 'hir> {\n             ..\n         } = param.kind\n         {\n-            // Do nothing because bodging is fun.\n+            // Synthetic impl trait parameters are owned by the node of the desugared type.\n+            // This means it is correct for them to have a different owner.\n         } else {\n             intravisit::walk_generic_param(self, param);\n         }"}, {"sha": "3bfb2d3f1b0f958173bed32d9d9bd3914d1e48c2", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/604bc876e03a4169a1fb42408d778c65ab39cec2/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=604bc876e03a4169a1fb42408d778c65ab39cec2", "patch": "@@ -548,14 +548,18 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         generics: &ty::Generics,\n     ) -> bool {\n         let explicit = !seg.infer_args;\n-        let impl_trait = generics.params.iter().any(|param| match param.kind {\n-            ty::GenericParamDefKind::Type {\n-                synthetic:\n-                    Some(hir::SyntheticTyParamKind::ImplTrait | hir::SyntheticTyParamKind::Rustc),\n-                ..\n-            } => true,\n-            _ => false,\n-        });\n+        let impl_trait =\n+            generics.params.iter().any(|param| match param.kind {\n+                ty::GenericParamDefKind::Type {\n+                    synthetic:\n+                        Some(\n+                            hir::SyntheticTyParamKind::ImplTrait\n+                            | hir::SyntheticTyParamKind::FromAttr,\n+                        ),\n+                    ..\n+                } => true,\n+                _ => false,\n+            });\n \n         if explicit && impl_trait {\n             let spans = seg"}]}