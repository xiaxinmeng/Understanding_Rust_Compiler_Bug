{"sha": "1070cc0109661d9f47a6e2c39ad853041ddf30e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNzBjYzAxMDk2NjFkOWY0N2E2ZTJjMzlhZDg1MzA0MWRkZjMwZTI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-06T02:41:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-06T02:41:22Z"}, "message": "librustc: Fix unconditional ty_to_str call in ty.rs. Was heaviest path in allocation. Negligible perf win. rs=perf-fix", "tree": {"sha": "da674717b765cca6b6b485dc8f806eda274feb96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da674717b765cca6b6b485dc8f806eda274feb96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1070cc0109661d9f47a6e2c39ad853041ddf30e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1070cc0109661d9f47a6e2c39ad853041ddf30e2", "html_url": "https://github.com/rust-lang/rust/commit/1070cc0109661d9f47a6e2c39ad853041ddf30e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1070cc0109661d9f47a6e2c39ad853041ddf30e2/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c18c75f2d1d9c491f288724d355c11d3788d123", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c18c75f2d1d9c491f288724d355c11d3788d123", "html_url": "https://github.com/rust-lang/rust/commit/6c18c75f2d1d9c491f288724d355c11d3788d123"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "2ee0f9a3c2d6dea65bec93d0b31d603024f3814e", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1070cc0109661d9f47a6e2c39ad853041ddf30e2/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1070cc0109661d9f47a6e2c39ad853041ddf30e2/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=1070cc0109661d9f47a6e2c39ad853041ddf30e2", "patch": "@@ -1606,11 +1606,18 @@ fn subst(cx: ctxt,\n             fold_regions_and_ty(\n                 cx, typ,\n                 |r| match r {\n-                    re_bound(br_self) => substs.self_r.expect(\n-                        fmt!(\"ty::subst: \\\n-                      Reference to self region when given substs with no \\\n-                      self region, ty = %s\",\n-                      ::util::ppaux::ty_to_str(cx, typ))),\n+                    re_bound(br_self) => {\n+                        match substs.self_r {\n+                            None => {\n+                                cx.sess.bug(\n+                                    fmt!(\"ty::subst: \\\n+                                  Reference to self region when given substs \\\n+                                  with no self region, ty = %s\",\n+                                  ::util::ppaux::ty_to_str(cx, typ)))\n+                            }\n+                            Some(self_r) => self_r\n+                        }\n+                    }\n                     _ => r\n                 },\n                 |t| do_subst(cx, substs, t),"}]}