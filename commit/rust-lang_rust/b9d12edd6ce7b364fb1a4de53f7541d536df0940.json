{"sha": "b9d12edd6ce7b364fb1a4de53f7541d536df0940", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZDEyZWRkNmNlN2IzNjRmYjFhNGRlNTNmNzU0MWQ1MzZkZjA5NDA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-11T22:07:07Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-11T22:07:07Z"}, "message": "Be more discerning on when to attempt suggesting a comma in a macro invocation", "tree": {"sha": "b213b5ee33bb4688394a47ddb12b4835eac861cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b213b5ee33bb4688394a47ddb12b4835eac861cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9d12edd6ce7b364fb1a4de53f7541d536df0940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d12edd6ce7b364fb1a4de53f7541d536df0940", "html_url": "https://github.com/rust-lang/rust/commit/b9d12edd6ce7b364fb1a4de53f7541d536df0940", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9d12edd6ce7b364fb1a4de53f7541d536df0940/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "913ad6d1f092c70049934ba538d342d295d35997", "url": "https://api.github.com/repos/rust-lang/rust/commits/913ad6d1f092c70049934ba538d342d295d35997", "html_url": "https://github.com/rust-lang/rust/commit/913ad6d1f092c70049934ba538d342d295d35997"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "5caa59a53f92b547ac9cece65b142df04c24617d", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b9d12edd6ce7b364fb1a4de53f7541d536df0940/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9d12edd6ce7b364fb1a4de53f7541d536df0940/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=b9d12edd6ce7b364fb1a4de53f7541d536df0940", "patch": "@@ -178,9 +178,11 @@ impl TokenStream {\n             while let Some((pos, ts)) = iter.next() {\n                 if let Some((_, next)) = iter.peek() {\n                     let sp = match (&ts, &next) {\n-                        ((TokenTree::Token(_, token::Token::Comma), NonJoint), _) |\n-                        (_, (TokenTree::Token(_, token::Token::Comma), NonJoint)) => continue,\n-                        ((TokenTree::Token(sp, _), NonJoint), _) => *sp,\n+                        (_, (TokenTree::Token(_, token::Token::Comma), _)) => continue,\n+                        ((TokenTree::Token(sp, token_left), NonJoint),\n+                         (TokenTree::Token(_, token_right), _))\n+                        if token_left.is_ident() || token_left.is_lit() &&\n+                            token_right.is_ident() || token_right.is_lit() => *sp,\n                         ((TokenTree::Delimited(sp, ..), NonJoint), _) => sp.entire(),\n                         _ => continue,\n                     };"}, {"sha": "2b411aba8a2eec557600f12c66343cb4c56da8e7", "filename": "src/test/ui/macros/missing-comma.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b9d12edd6ce7b364fb1a4de53f7541d536df0940/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9d12edd6ce7b364fb1a4de53f7541d536df0940/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.rs?ref=b9d12edd6ce7b364fb1a4de53f7541d536df0940", "patch": "@@ -6,6 +6,11 @@ macro_rules! foo {\n     ($a:ident, $b:ident, $c:ident, $d:ident, $e:ident) => ();\n }\n \n+macro_rules! bar {\n+    ($lvl:expr, $($arg:tt)+) => {}\n+}\n+\n+\n fn main() {\n     println!(\"{}\" a);\n     //~^ ERROR expected token: `,`\n@@ -17,4 +22,6 @@ fn main() {\n     //~^ ERROR no rules expected the token `d`\n     foo!(a, b, c d e);\n     //~^ ERROR no rules expected the token `d`\n+    bar!(Level::Error, );\n+    //~^ ERROR unexpected end of macro invocation\n }"}, {"sha": "424fefd00f87381e7fa0944fa8838a4de51801b4", "filename": "src/test/ui/macros/missing-comma.stderr", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b9d12edd6ce7b364fb1a4de53f7541d536df0940/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9d12edd6ce7b364fb1a4de53f7541d536df0940/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr?ref=b9d12edd6ce7b364fb1a4de53f7541d536df0940", "patch": "@@ -1,11 +1,11 @@\n error: expected token: `,`\n-  --> $DIR/missing-comma.rs:10:19\n+  --> $DIR/missing-comma.rs:15:19\n    |\n LL |     println!(\"{}\" a);\n    |                   ^\n \n error: no rules expected the token `b`\n-  --> $DIR/missing-comma.rs:12:12\n+  --> $DIR/missing-comma.rs:17:12\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -16,7 +16,7 @@ LL |     foo!(a b);\n    |           help: missing comma here\n \n error: no rules expected the token `e`\n-  --> $DIR/missing-comma.rs:14:21\n+  --> $DIR/missing-comma.rs:19:21\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -27,7 +27,7 @@ LL |     foo!(a, b, c, d e);\n    |                    help: missing comma here\n \n error: no rules expected the token `d`\n-  --> $DIR/missing-comma.rs:16:18\n+  --> $DIR/missing-comma.rs:21:18\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -38,13 +38,22 @@ LL |     foo!(a, b, c d, e);\n    |                 help: missing comma here\n \n error: no rules expected the token `d`\n-  --> $DIR/missing-comma.rs:18:18\n+  --> $DIR/missing-comma.rs:23:18\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n ...\n LL |     foo!(a, b, c d e);\n    |                  ^ no rules expected this token in macro call\n \n-error: aborting due to 5 previous errors\n+error: unexpected end of macro invocation\n+  --> $DIR/missing-comma.rs:25:23\n+   |\n+LL | macro_rules! bar {\n+   | ---------------- when calling this macro\n+...\n+LL |     bar!(Level::Error, );\n+   |                       ^ missing tokens in macro arguments\n+\n+error: aborting due to 6 previous errors\n "}]}