{"sha": "5d8d67f746a2955635de8c2168c972b4d6e7eb58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkOGQ2N2Y3NDZhMjk1NTYzNWRlOGMyMTY4Yzk3MmI0ZDZlN2ViNTg=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-04-19T19:30:55Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-04-19T19:30:55Z"}, "message": "compute fn_sig span from body call_site, and use body ctxt, not root", "tree": {"sha": "5049af3ae5382232c4108148ad8f487b2b62d773", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5049af3ae5382232c4108148ad8f487b2b62d773"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d8d67f746a2955635de8c2168c972b4d6e7eb58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d8d67f746a2955635de8c2168c972b4d6e7eb58", "html_url": "https://github.com/rust-lang/rust/commit/5d8d67f746a2955635de8c2168c972b4d6e7eb58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d8d67f746a2955635de8c2168c972b4d6e7eb58/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1893721ec4412b4f039426b013c4b298371e6e5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1893721ec4412b4f039426b013c4b298371e6e5a", "html_url": "https://github.com/rust-lang/rust/commit/1893721ec4412b4f039426b013c4b298371e6e5a"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "067e1001def883740e13f4759ffe51aa327ad10a", "filename": "compiler/rustc_mir/src/transform/coverage/spans.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5d8d67f746a2955635de8c2168c972b4d6e7eb58/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d8d67f746a2955635de8c2168c972b4d6e7eb58/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs?ref=5d8d67f746a2955635de8c2168c972b4d6e7eb58", "patch": "@@ -11,7 +11,7 @@ use rustc_middle::mir::{\n use rustc_middle::ty::TyCtxt;\n \n use rustc_span::source_map::original_sp;\n-use rustc_span::{BytePos, Span, SyntaxContext};\n+use rustc_span::{BytePos, Span};\n \n use std::cmp::Ordering;\n \n@@ -246,8 +246,8 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n     ) -> Vec<CoverageSpan> {\n         let mut coverage_spans = CoverageSpans {\n             mir_body,\n-            fn_sig_span: fn_sig_span.with_ctxt(SyntaxContext::root()),\n-            body_span: body_span.with_ctxt(SyntaxContext::root()),\n+            fn_sig_span: fn_sig_source_span(fn_sig_span, body_span),\n+            body_span,\n             basic_coverage_blocks,\n             sorted_spans_iter: None,\n             refined_spans: Vec::with_capacity(basic_coverage_blocks.num_nodes() * 2),\n@@ -731,8 +731,13 @@ pub(super) fn filtered_terminator_span(\n     }\n }\n \n+#[inline]\n+fn fn_sig_source_span(fn_sig_span: Span, body_span: Span) -> Span {\n+    original_sp(fn_sig_span, body_span).with_ctxt(body_span.ctxt())\n+}\n+\n #[inline]\n fn function_source_span(span: Span, body_span: Span) -> Span {\n-    let span = original_sp(span, body_span).with_ctxt(SyntaxContext::root());\n+    let span = original_sp(span, body_span).with_ctxt(body_span.ctxt());\n     if body_span.contains(span) { span } else { body_span }\n }"}, {"sha": "4e4dde46b344b8cef40a5b8d5b3bde2f594052b7", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.partial_eq.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d8d67f746a2955635de8c2168c972b4d6e7eb58/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5d8d67f746a2955635de8c2168c972b4d6e7eb58/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.partial_eq.txt?ref=5d8d67f746a2955635de8c2168c972b4d6e7eb58", "patch": "@@ -2,7 +2,7 @@\n     2|       |// structure of this test.\n     3|       |\n     4|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-                       ^0            ^0         ^0  ^1          ^0\n+                       ^0            ^0      ^0 ^0  ^1       ^1 ^0^0\n   ------------------\n   | Unexecuted instantiation: <partial_eq::Version as core::cmp::PartialEq>::ne\n   ------------------"}]}