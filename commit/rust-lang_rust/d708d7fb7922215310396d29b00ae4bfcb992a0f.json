{"sha": "d708d7fb7922215310396d29b00ae4bfcb992a0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MDhkN2ZiNzkyMjIxNTMxMDM5NmQyOWIwMGFlNGJmY2I5OTJhMGY=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-16T10:49:25Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-18T09:01:08Z"}, "message": "No need to map the max_distance", "tree": {"sha": "0d4ba4205e8c74234ea6990acb9a0bf6c679b6b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d4ba4205e8c74234ea6990acb9a0bf6c679b6b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d708d7fb7922215310396d29b00ae4bfcb992a0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d708d7fb7922215310396d29b00ae4bfcb992a0f", "html_url": "https://github.com/rust-lang/rust/commit/d708d7fb7922215310396d29b00ae4bfcb992a0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d708d7fb7922215310396d29b00ae4bfcb992a0f/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed7c6819e48d93636d0c0526a0f01a7b21ed2fe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed7c6819e48d93636d0c0526a0f01a7b21ed2fe1", "html_url": "https://github.com/rust-lang/rust/commit/ed7c6819e48d93636d0c0526a0f01a7b21ed2fe1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "21c2c925bc479de340b8081cde5cccdd477643b5", "filename": "compiler/rustc_ast/src/util/lev_distance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d708d7fb7922215310396d29b00ae4bfcb992a0f/compiler%2Frustc_ast%2Fsrc%2Futil%2Flev_distance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708d7fb7922215310396d29b00ae4bfcb992a0f/compiler%2Frustc_ast%2Fsrc%2Futil%2Flev_distance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Flev_distance.rs?ref=d708d7fb7922215310396d29b00ae4bfcb992a0f", "patch": "@@ -54,7 +54,7 @@ where\n     T: Iterator<Item = &'a Symbol>,\n {\n     let lookup = &lookup.as_str();\n-    let max_dist = dist.map_or_else(|| cmp::max(lookup.len(), 3) / 3, |d| d);\n+    let max_dist = dist.unwrap_or_else(|| cmp::max(lookup.len(), 3) / 3);\n     let name_vec: Vec<&Symbol> = iter_names.collect();\n \n     let (case_insensitive_match, levenshtein_match) = name_vec"}]}