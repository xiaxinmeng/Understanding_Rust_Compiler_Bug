{"sha": "062f2fc50fa6c4d9acd652766123b7f766fab2ff", "node_id": "C_kwDOAAsO6NoAKDA2MmYyZmM1MGZhNmM0ZDlhY2Q2NTI3NjYxMjNiN2Y3NjZmYWIyZmY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-09T13:51:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-09T13:51:25Z"}, "message": "Rollup merge of #104125 - ink-feather-org:const_cmp_tuples, r=fee1-dead\n\nConst Compare for Tuples\n\nMakes the impls for Tuples of ~const `PartialEq` types also `PartialEq`, impls for Tuples of ~const `PartialOrd` types also `PartialOrd`, for Tuples of ~const `Ord` types also `Ord`.\n\nbehind the `#![feature(const_cmp)]` gate.\n\n~~Do not merge before #104113 is merged because I want to use this feature to clean up the new test that I added there.~~\n\nr? ``@fee1-dead``", "tree": {"sha": "fe420a97e9617ba5a05d793346d5ad96487679e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe420a97e9617ba5a05d793346d5ad96487679e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/062f2fc50fa6c4d9acd652766123b7f766fab2ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJja7BdCRBK7hj4Ov3rIwAAfNwIACjKDGBdIKF6IrcKu0gqgCua\nvnqZCzQ//K6Zh0ZxGqzxXS0Z19IJhStyHkDh4Qf9ZYnqxOGHuPJIOnTCKKaIxQve\nLleCQ5j5tn/8huCOdREcZrKu1ZMKALpD7BxqOwQw09uI9XwYN5ckaxrwgoaeKf0Z\nBqH3zQeSOY4fqFiE+KM67jUpO7SAnbE3Cyv59vHr8JqLrbIk55FIY0e24oxnJK1r\nNqn1k6yEDjOTDAynl7n1sos6UXqLMoNFOKvwrlEUNbxxaq2iivJsnSsyOE7XkMpP\n5T5OWb7WNG55igpnwd5hGahZIHiBZS3d3ka2jfNcjVFz5zQuf4zdl1ZrR6qZCtc=\n=oI07\n-----END PGP SIGNATURE-----\n", "payload": "tree fe420a97e9617ba5a05d793346d5ad96487679e7\nparent 64e737c07c7dd10f8904265c82396a156a78ef12\nparent b6c05eb7d3f59b43b2e9ada520167f87bb4084aa\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1668001885 +0530\ncommitter GitHub <noreply@github.com> 1668001885 +0530\n\nRollup merge of #104125 - ink-feather-org:const_cmp_tuples, r=fee1-dead\n\nConst Compare for Tuples\n\nMakes the impls for Tuples of ~const `PartialEq` types also `PartialEq`, impls for Tuples of ~const `PartialOrd` types also `PartialOrd`, for Tuples of ~const `Ord` types also `Ord`.\n\nbehind the `#![feature(const_cmp)]` gate.\n\n~~Do not merge before #104113 is merged because I want to use this feature to clean up the new test that I added there.~~\n\nr? ``@fee1-dead``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/062f2fc50fa6c4d9acd652766123b7f766fab2ff", "html_url": "https://github.com/rust-lang/rust/commit/062f2fc50fa6c4d9acd652766123b7f766fab2ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/062f2fc50fa6c4d9acd652766123b7f766fab2ff/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64e737c07c7dd10f8904265c82396a156a78ef12", "url": "https://api.github.com/repos/rust-lang/rust/commits/64e737c07c7dd10f8904265c82396a156a78ef12", "html_url": "https://github.com/rust-lang/rust/commit/64e737c07c7dd10f8904265c82396a156a78ef12"}, {"sha": "b6c05eb7d3f59b43b2e9ada520167f87bb4084aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6c05eb7d3f59b43b2e9ada520167f87bb4084aa", "html_url": "https://github.com/rust-lang/rust/commit/b6c05eb7d3f59b43b2e9ada520167f87bb4084aa"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "28275798f751ed16d151649d491985b0de83c7ac", "filename": "library/core/src/tuple.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/062f2fc50fa6c4d9acd652766123b7f766fab2ff/library%2Fcore%2Fsrc%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/062f2fc50fa6c4d9acd652766123b7f766fab2ff/library%2Fcore%2Fsrc%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftuple.rs?ref=062f2fc50fa6c4d9acd652766123b7f766fab2ff", "patch": "@@ -22,7 +22,8 @@ macro_rules! tuple_impls {\n         maybe_tuple_doc! {\n             $($T)+ @\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            impl<$($T:PartialEq),+> PartialEq for ($($T,)+)\n+            #[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+            impl<$($T: ~const PartialEq),+> const PartialEq for ($($T,)+)\n             where\n                 last_type!($($T,)+): ?Sized\n             {\n@@ -40,7 +41,7 @@ macro_rules! tuple_impls {\n         maybe_tuple_doc! {\n             $($T)+ @\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            impl<$($T:Eq),+> Eq for ($($T,)+)\n+            impl<$($T: Eq),+> Eq for ($($T,)+)\n             where\n                 last_type!($($T,)+): ?Sized\n             {}\n@@ -49,7 +50,8 @@ macro_rules! tuple_impls {\n         maybe_tuple_doc! {\n             $($T)+ @\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            impl<$($T:PartialOrd + PartialEq),+> PartialOrd for ($($T,)+)\n+            #[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+            impl<$($T: ~const PartialOrd + ~const PartialEq),+> const PartialOrd for ($($T,)+)\n             where\n                 last_type!($($T,)+): ?Sized\n             {\n@@ -79,7 +81,8 @@ macro_rules! tuple_impls {\n         maybe_tuple_doc! {\n             $($T)+ @\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            impl<$($T:Ord),+> Ord for ($($T,)+)\n+            #[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+            impl<$($T: ~const Ord),+> const Ord for ($($T,)+)\n             where\n                 last_type!($($T,)+): ?Sized\n             {"}, {"sha": "b507492970ab3a27286feac128e290f3a8e2efa0", "filename": "src/test/ui/consts/fn_trait_refs.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/062f2fc50fa6c4d9acd652766123b7f766fab2ff/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/062f2fc50fa6c4d9acd652766123b7f766fab2ff/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs?ref=062f2fc50fa6c4d9acd652766123b7f766fab2ff", "patch": "@@ -1,4 +1,4 @@\n-// build-pass\n+// check-pass\n \n #![feature(const_fn_trait_ref_impls)]\n #![feature(fn_traits)]\n@@ -60,21 +60,18 @@ const fn test(i: i32) -> i32 {\n     i + 1\n }\n \n-const fn main() {\n+fn main() {\n     const fn one() -> i32 {\n         1\n     };\n     const fn two() -> i32 {\n         2\n     };\n+    const _: () = {\n+        let test_one = test_fn(one);\n+        assert!(test_one == (1, 1, 1));\n \n-    // FIXME(const_cmp_tuple)\n-    let test_one = test_fn(one);\n-    assert!(test_one.0 == 1);\n-    assert!(test_one.1 == 1);\n-    assert!(test_one.2 == 1);\n-\n-    let test_two = test_fn_mut(two);\n-    assert!(test_two.0 == 1);\n-    assert!(test_two.1 == 1);\n+        let test_two = test_fn_mut(two);\n+        assert!(test_two == (2, 2));\n+    };\n }"}]}