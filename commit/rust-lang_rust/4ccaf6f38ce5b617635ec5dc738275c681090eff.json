{"sha": "4ccaf6f38ce5b617635ec5dc738275c681090eff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjY2FmNmYzOGNlNWI2MTc2MzVlYzVkYzczODI3NWM2ODEwOTBlZmY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-07T16:51:40Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-07T17:41:43Z"}, "message": "instance: avoid unnecessary `mk_` calls\n\nThis commit avoids unnecessary calls to `mk_closure` and `mk_generator`\nby checking if the polymorphized substs match the original substs.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "1ec0d255decac72e31311093100ea0e54b752ff1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ec0d255decac72e31311093100ea0e54b752ff1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ccaf6f38ce5b617635ec5dc738275c681090eff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl8tklcACgkQJZLnbIc4\nH9nEvQ//bKyjn01PomY1EN0f2cn7mM23tWZIqPzHNb6x8F+cf21Shn8CAykCL8f5\n12J+DctduCLB83THZTRTFpvCjXsGqmCfKvHe3lYtAyGNMAuQ9N0YHr6vI/1yKu4C\nvDbj+FaEbn6Xk45M4l18avrHG1vFTHnp3rTSAkb2hTPIQwJQ0lV81GTqvz1sQFby\nUPNmPFLsFg/I3QdwMMcnLmUS+eIohqAUnc7/cOx30+EHnPa+oV2wnmD+vHXlkOAa\ngjFVZtNtLiiFhZLZLm8iyfNLhl6whvi05Q0HTj4fE2oYSTrWVnhjGdbhGMybNX+W\n3Dj/oqXFcZgA+FPWRnbsSOsdNc+2TXW1lS37n70Rm+RYLL8oQtRNqTdZ7+VJQh4n\nwoUL901w/DUEOimtVV3ryUqD3/ewhVYypjSlaeo7+iQgvWSNPJJZ9mtOYDRekUgs\n7es97zg21nWd0fu1YPf9FPc4RaWM1zRdb2igwxawOOyNe8AphERlifuYNQSYADug\n6N7uL7wZjofl2PLKz+TPP18hvLPf8TNbo2PJtQH0mAIjjHnPbB4Q2bXTITBXHgie\n+N6GBZP1CH3iq0BNbT3j0g+QxK/zaxBUZmPGyc3FVtpi4bHvtfJhPL4QnkVVB26w\n4mP7qEO96a3W33UeLD/cvUAP8IB94v5z3QSy+GEbMmHXo3Jh7A4=\n=tT7U\n-----END PGP SIGNATURE-----", "payload": "tree 1ec0d255decac72e31311093100ea0e54b752ff1\nparent 5827b5a4bd0bb35251da12fc972aa1d5a210116f\nauthor David Wood <david@davidtw.co> 1596819100 +0100\ncommitter David Wood <david@davidtw.co> 1596822103 +0100\n\ninstance: avoid unnecessary `mk_` calls\n\nThis commit avoids unnecessary calls to `mk_closure` and `mk_generator`\nby checking if the polymorphized substs match the original substs.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ccaf6f38ce5b617635ec5dc738275c681090eff", "html_url": "https://github.com/rust-lang/rust/commit/4ccaf6f38ce5b617635ec5dc738275c681090eff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ccaf6f38ce5b617635ec5dc738275c681090eff/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5827b5a4bd0bb35251da12fc972aa1d5a210116f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5827b5a4bd0bb35251da12fc972aa1d5a210116f", "html_url": "https://github.com/rust-lang/rust/commit/5827b5a4bd0bb35251da12fc972aa1d5a210116f"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "0eea10513d1fadf1dbbe3acc88798be2944a78a0", "filename": "src/librustc_middle/ty/instance.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4ccaf6f38ce5b617635ec5dc738275c681090eff/src%2Flibrustc_middle%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ccaf6f38ce5b617635ec5dc738275c681090eff/src%2Flibrustc_middle%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Finstance.rs?ref=4ccaf6f38ce5b617635ec5dc738275c681090eff", "patch": "@@ -506,11 +506,19 @@ fn polymorphize<'tcx>(\n             match ty.kind {\n                 ty::Closure(def_id, substs) => {\n                     let polymorphized_substs = polymorphize(self.tcx, def_id, substs);\n-                    self.tcx.mk_closure(def_id, polymorphized_substs)\n+                    if substs == polymorphized_substs {\n+                        ty\n+                    } else {\n+                        self.tcx.mk_closure(def_id, polymorphized_substs)\n+                    }\n                 }\n                 ty::Generator(def_id, substs, movability) => {\n                     let polymorphized_substs = polymorphize(self.tcx, def_id, substs);\n-                    self.tcx.mk_generator(def_id, polymorphized_substs, movability)\n+                    if substs == polymorphized_substs {\n+                        ty\n+                    } else {\n+                        self.tcx.mk_generator(def_id, polymorphized_substs, movability)\n+                    }\n                 }\n                 _ => ty.super_fold_with(self),\n             }"}]}