{"sha": "4972cb759eae87a03617ac7f9aae7f3893c4746d", "node_id": "C_kwDOAAsO6NoAKDQ5NzJjYjc1OWVhZTg3YTAzNjE3YWM3ZjlhYWU3ZjM4OTNjNDc0NmQ", "commit": {"author": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-22T12:05:35Z"}, "committer": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-22T12:08:32Z"}, "message": "Support standalone comments", "tree": {"sha": "67fb19ab7240d1992776c1b339fed0b254128cd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67fb19ab7240d1992776c1b339fed0b254128cd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4972cb759eae87a03617ac7f9aae7f3893c4746d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4972cb759eae87a03617ac7f9aae7f3893c4746d", "html_url": "https://github.com/rust-lang/rust/commit/4972cb759eae87a03617ac7f9aae7f3893c4746d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4972cb759eae87a03617ac7f9aae7f3893c4746d/comments", "author": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d6121695787eb5d9d90cf469cd093247e5595e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d6121695787eb5d9d90cf469cd093247e5595e1", "html_url": "https://github.com/rust-lang/rust/commit/8d6121695787eb5d9d90cf469cd093247e5595e1"}], "stats": {"total": 81, "additions": 65, "deletions": 16}, "files": [{"sha": "d3b239bd73f68453cd594554f84555dea11d812f", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 65, "deletions": 16, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/4972cb759eae87a03617ac7f9aae7f3893c4746d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4972cb759eae87a03617ac7f9aae7f3893c4746d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=4972cb759eae87a03617ac7f9aae7f3893c4746d", "patch": "@@ -22,9 +22,8 @@ use syntax::{\n         edit::{AstNodeEdit, IndentLevel},\n         AstNode,\n     },\n-    match_ast, ted, SyntaxElement,\n-    SyntaxKind::{self, COMMENT},\n-    SyntaxNode, SyntaxToken, TextRange, TextSize, TokenAtOffset, WalkEvent, T,\n+    match_ast, ted, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize,\n+    TokenAtOffset, WalkEvent, T,\n };\n \n use crate::{\n@@ -63,13 +62,7 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext) -> Option\n         return None;\n     }\n \n-    let node = ctx.covering_element();\n-    if node.kind() == COMMENT {\n-        cov_mark::hit!(extract_function_in_comment_is_not_applicable);\n-        return None;\n-    }\n-\n-    let node = match node {\n+    let node = match ctx.covering_element() {\n         syntax::NodeOrToken::Node(n) => n,\n         syntax::NodeOrToken::Token(t) => t.parent()?,\n     };\n@@ -2207,12 +2200,6 @@ fn $0fun_name(n: u32) -> u32 {\n         )\n     }\n \n-    #[test]\n-    fn in_comment_is_not_applicable() {\n-        cov_mark::check!(extract_function_in_comment_is_not_applicable);\n-        check_assist_not_applicable(extract_function, r\"fn main() { 1 + /* $0comment$0 */ 1; }\");\n-    }\n-\n     #[test]\n     fn part_of_expr_stmt() {\n         check_assist(\n@@ -4572,6 +4559,68 @@ fn $0fun_name() {\n     /* a comment */\n     let x = 0;\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn extract_function_long_form_comment_multiline() {\n+        check_assist(\n+            extract_function,\n+            r#\"\n+fn func() {\n+    let i = 0;\n+    $0/* \n+    a \n+    comment \n+    */\n+    let x = 0;$0\n+}\n+\"#,\n+            r#\"\n+fn func() {\n+    let i = 0;\n+    fun_name();\n+}\n+\n+fn $0fun_name() {\n+    /* \n+    a \n+    comment \n+    */\n+    let x = 0;\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn extract_function_long_form_comment_multiline_alone() {\n+        check_assist(\n+            extract_function,\n+            r#\"\n+fn func() {\n+    let i = 0;\n+    $0/* \n+    a \n+    comment \n+    */\n+    $0let x = 0;\n+}\n+\"#,\n+            r#\"\n+fn func() {\n+    let i = 0;\n+    fun_name();\n+    let x = 0;\n+}\n+\n+fn $0fun_name() {\n+    /* \n+    a \n+    comment \n+    */\n+}\n \"#,\n         );\n     }"}]}