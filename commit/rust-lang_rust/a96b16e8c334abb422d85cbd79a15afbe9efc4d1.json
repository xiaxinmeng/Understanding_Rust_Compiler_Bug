{"sha": "a96b16e8c334abb422d85cbd79a15afbe9efc4d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NmIxNmU4YzMzNGFiYjQyMmQ4NWNiZDc5YTE1YWZiZTllZmM0ZDE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-28T05:40:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-28T06:20:27Z"}, "message": "Make it again possible to initialize resource locals via assignment\n\nSome special cases allow both 'let a <- my_resource(x)' and\n'let a = my_resource(x)' to work as expected despite ostensibly being\ncopies and moves.", "tree": {"sha": "c384f746762a8a7f17cf38107f3f19d9a7d68d9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c384f746762a8a7f17cf38107f3f19d9a7d68d9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a96b16e8c334abb422d85cbd79a15afbe9efc4d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a96b16e8c334abb422d85cbd79a15afbe9efc4d1", "html_url": "https://github.com/rust-lang/rust/commit/a96b16e8c334abb422d85cbd79a15afbe9efc4d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a96b16e8c334abb422d85cbd79a15afbe9efc4d1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "459353e1078ad50c9088980104b4e940840a26ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/459353e1078ad50c9088980104b4e940840a26ae", "html_url": "https://github.com/rust-lang/rust/commit/459353e1078ad50c9088980104b4e940840a26ae"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "f4c23d3d4d7249cf36e699e7ac3fb58093189ea8", "filename": "src/comp/middle/kind.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a96b16e8c334abb422d85cbd79a15afbe9efc4d1/src%2Fcomp%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96b16e8c334abb422d85cbd79a15afbe9efc4d1/src%2Fcomp%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fkind.rs?ref=a96b16e8c334abb422d85cbd79a15afbe9efc4d1", "patch": "@@ -183,6 +183,12 @@ fn need_shared_or_pinned_ctor(tcx: ty::ctxt, a: @ast::expr, descr: str) {\n           ast::expr_rec(_, _) {\n             true\n           }\n+          ast::expr_unary(ast::uniq(_), _) {\n+            true\n+          }\n+          ast::expr_tup(_) {\n+            true\n+          }\n           _ { false }\n         }\n     }\n@@ -266,14 +272,12 @@ fn check_stmt(tcx: ty::ctxt, stmt: @ast::stmt) {\n         for (let_style, local) in locals {\n             alt local.node.init {\n               option::some({op: ast::init_assign., expr}) {\n-                need_expr_kind(tcx, expr,\n-                               ast::kind_shared,\n-                               \"local initializer\");\n+                need_shared_or_pinned_ctor(tcx, expr,\n+                                           \"local initializer\");\n               }\n               option::some({op: ast::init_move., expr}) {\n-                // FIXME: Should be as above but moving may be the\n-                // only way available currently to assign a resource\n-                // to a local.\n+                need_shared_or_pinned_ctor(tcx, expr,\n+                                           \"local initializer\");\n               }\n               option::none. { /* fall through */ }\n             }"}, {"sha": "a20aa639c1592809eab46769fd677edd679917a4", "filename": "src/test/compile-fail/resource-let.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/459353e1078ad50c9088980104b4e940840a26ae/src%2Ftest%2Fcompile-fail%2Fresource-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459353e1078ad50c9088980104b4e940840a26ae/src%2Ftest%2Fcompile-fail%2Fresource-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresource-let.rs?ref=459353e1078ad50c9088980104b4e940840a26ae", "patch": "@@ -1,12 +0,0 @@\n-// error-pattern: mismatched kind\n-\n-resource r(b: bool) {\n-}\n-\n-fn main() {\n-    // Kind analysis considers this a copy, which isn't strictly true,\n-    // but for many assignment initializers could be.  To actually\n-    // assign a resource to a local we can still use a move\n-    // initializer.\n-    let i = r(true);\n-}\n\\ No newline at end of file"}, {"sha": "71de1196238e2fd04edfc23fbf7de6180c0acbb4", "filename": "src/test/compile-fail/unique-pinned-nocopy-2.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/459353e1078ad50c9088980104b4e940840a26ae/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459353e1078ad50c9088980104b4e940840a26ae/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy-2.rs?ref=459353e1078ad50c9088980104b4e940840a26ae", "patch": "@@ -1,8 +0,0 @@\n-// error-pattern: mismatched kind\n-\n-resource r(b: bool) {\n-}\n-\n-fn main() {\n-    let i = ~r(true);\n-}\n\\ No newline at end of file"}, {"sha": "bf77ab2bceffbddf1a15e14d77c6f6355dec8ec8", "filename": "src/test/run-pass/resource-assign-is-not-copy.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a96b16e8c334abb422d85cbd79a15afbe9efc4d1/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96b16e8c334abb422d85cbd79a15afbe9efc4d1/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs?ref=a96b16e8c334abb422d85cbd79a15afbe9efc4d1", "patch": "@@ -0,0 +1,7 @@\n+resource r(i: int) {\n+}\n+\n+fn main() {\n+    // Even though this looks like a copy, it's guaranteed not to be\n+    let a = r(0);\n+}\n\\ No newline at end of file"}, {"sha": "92b86ad0d34d9f3c9ebe940c0eaa34b86e6c238b", "filename": "src/test/run-pass/unique-pinned-nocopy-2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a96b16e8c334abb422d85cbd79a15afbe9efc4d1/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96b16e8c334abb422d85cbd79a15afbe9efc4d1/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs?ref=a96b16e8c334abb422d85cbd79a15afbe9efc4d1", "patch": "@@ -0,0 +1,11 @@\n+resource r(i: @mutable int) {\n+    *i = *i + 1;\n+}\n+\n+fn main() {\n+    let i = @mutable 0;\n+    {\n+        let j = ~r(i);\n+    }\n+    assert *i == 1;\n+}\n\\ No newline at end of file"}]}