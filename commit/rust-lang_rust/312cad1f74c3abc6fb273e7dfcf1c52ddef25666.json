{"sha": "312cad1f74c3abc6fb273e7dfcf1c52ddef25666", "node_id": "C_kwDOAAsO6NoAKDMxMmNhZDFmNzRjM2FiYzZmYjI3M2U3ZGZjZjFjNTJkZGVmMjU2NjY", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2023-04-16T06:24:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-16T06:24:33Z"}, "message": "Rollup merge of #110387 - nnethercote:rm-use-rustc_hir-as-ast, r=fee1-dead\n\nDon't `use rustc_hir as ast`(!)\n\nIt makes for confusing code.\n\nThis was introduced in a large commit in #67886 that rearranged a lot of `use` statements. I suspect it was an accident.", "tree": {"sha": "160c2d714b88f79ecaf3af7a7f6721379101ec97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/160c2d714b88f79ecaf3af7a7f6721379101ec97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/312cad1f74c3abc6fb273e7dfcf1c52ddef25666", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkO5ShCRBK7hj4Ov3rIwAAUhMIAJ54xwDzJ6Nlhp/6QMBlf2xo\nzvvIeGDUfAatmJmpUsw1PTbr9udZfY0B0NrVpQyuuzqVBCcY1l6Dr1dmYtLziCkD\nNnkmuM9xqYmfw6tV+Ke9J+SKngawNgq7FnzL0bn/w5NToeI3VDb8V0ObEx211TS+\n1qcNE045RCTonPv+W9F7GExsfBscd+xMGkNTEe6NdiF3wt2Rimx9fnHjWyPKjMqN\nobz4LOsyIP3dpltDCF9iYjbTy79ZzRwHNrK6ilUpa4wm3oFxHnXbttH8ZEtYceHA\nSP8HTKuwqXREvFq4wmgDFbjlOX8ZLlKowvBLe+jxq4HAxD+Fpm2wb9MMQsJWbHE=\n=TmWk\n-----END PGP SIGNATURE-----\n", "payload": "tree 160c2d714b88f79ecaf3af7a7f6721379101ec97\nparent 4d868c9508cd69b5f9622b6775b2ab670e33998c\nparent 1ffa331c728d1e850922588499111232c56d86c7\nauthor fee1-dead <ent3rm4n@gmail.com> 1681626273 +0800\ncommitter GitHub <noreply@github.com> 1681626273 +0800\n\nRollup merge of #110387 - nnethercote:rm-use-rustc_hir-as-ast, r=fee1-dead\n\nDon't `use rustc_hir as ast`(!)\n\nIt makes for confusing code.\n\nThis was introduced in a large commit in #67886 that rearranged a lot of `use` statements. I suspect it was an accident.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/312cad1f74c3abc6fb273e7dfcf1c52ddef25666", "html_url": "https://github.com/rust-lang/rust/commit/312cad1f74c3abc6fb273e7dfcf1c52ddef25666", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/312cad1f74c3abc6fb273e7dfcf1c52ddef25666/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d868c9508cd69b5f9622b6775b2ab670e33998c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d868c9508cd69b5f9622b6775b2ab670e33998c", "html_url": "https://github.com/rust-lang/rust/commit/4d868c9508cd69b5f9622b6775b2ab670e33998c"}, {"sha": "1ffa331c728d1e850922588499111232c56d86c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ffa331c728d1e850922588499111232c56d86c7", "html_url": "https://github.com/rust-lang/rust/commit/1ffa331c728d1e850922588499111232c56d86c7"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c6d10f4741affc03174b94c960c800f6f6894017", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/312cad1f74c3abc6fb273e7dfcf1c52ddef25666/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/312cad1f74c3abc6fb273e7dfcf1c52ddef25666/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=312cad1f74c3abc6fb273e7dfcf1c52ddef25666", "patch": "@@ -7,7 +7,7 @@\n use crate::ty::error::{ExpectedFound, TypeError};\n use crate::ty::{self, Expr, ImplSubject, Term, TermKind, Ty, TyCtxt, TypeFoldable};\n use crate::ty::{GenericArg, GenericArgKind, SubstsRef};\n-use rustc_hir as ast;\n+use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_target::spec::abi;\n use std::iter;\n@@ -123,8 +123,8 @@ pub fn relate_type_and_mut<'tcx, R: TypeRelation<'tcx>>(\n     } else {\n         let mutbl = a.mutbl;\n         let (variance, info) = match mutbl {\n-            ast::Mutability::Not => (ty::Covariant, ty::VarianceDiagInfo::None),\n-            ast::Mutability::Mut => {\n+            hir::Mutability::Not => (ty::Covariant, ty::VarianceDiagInfo::None),\n+            hir::Mutability::Mut => {\n                 (ty::Invariant, ty::VarianceDiagInfo::Invariant { ty: base_ty, param_index: 0 })\n             }\n         };\n@@ -239,12 +239,12 @@ impl<'tcx> Relate<'tcx> for ty::BoundConstness {\n     }\n }\n \n-impl<'tcx> Relate<'tcx> for ast::Unsafety {\n+impl<'tcx> Relate<'tcx> for hir::Unsafety {\n     fn relate<R: TypeRelation<'tcx>>(\n         relation: &mut R,\n-        a: ast::Unsafety,\n-        b: ast::Unsafety,\n-    ) -> RelateResult<'tcx, ast::Unsafety> {\n+        a: hir::Unsafety,\n+        b: hir::Unsafety,\n+    ) -> RelateResult<'tcx, hir::Unsafety> {\n         if a != b {\n             Err(TypeError::UnsafetyMismatch(expected_found(relation, a, b)))\n         } else {"}]}