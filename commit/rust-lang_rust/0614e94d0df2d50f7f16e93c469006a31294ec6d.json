{"sha": "0614e94d0df2d50f7f16e93c469006a31294ec6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MTRlOTRkMGRmMmQ1MGY3ZjE2ZTkzYzQ2OTAwNmEzMTI5NGVjNmQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-04-15T09:42:45Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-04-15T09:42:45Z"}, "message": "Format source codes", "tree": {"sha": "26c9ebe6b4759315379bfbc12154b3260c7de818", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26c9ebe6b4759315379bfbc12154b3260c7de818"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0614e94d0df2d50f7f16e93c469006a31294ec6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0614e94d0df2d50f7f16e93c469006a31294ec6d", "html_url": "https://github.com/rust-lang/rust/commit/0614e94d0df2d50f7f16e93c469006a31294ec6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0614e94d0df2d50f7f16e93c469006a31294ec6d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a91fd699a012ae99bf36d12d88f98154e363979e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a91fd699a012ae99bf36d12d88f98154e363979e", "html_url": "https://github.com/rust-lang/rust/commit/a91fd699a012ae99bf36d12d88f98154e363979e"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "7b4153083cb87f90df659d99d16a27ae12014d03", "filename": "src/expr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0614e94d0df2d50f7f16e93c469006a31294ec6d/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0614e94d0df2d50f7f16e93c469006a31294ec6d/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=0614e94d0df2d50f7f16e93c469006a31294ec6d", "patch": "@@ -1230,10 +1230,10 @@ fn rewrite_match(context: &RewriteContext,\n \n fn arm_start_pos(arm: &ast::Arm) -> BytePos {\n     let &ast::Arm {\n-             ref attrs,\n-             ref pats,\n-             ..\n-         } = arm;\n+        ref attrs,\n+        ref pats,\n+        ..\n+    } = arm;\n     if !attrs.is_empty() {\n         return attrs[0].span.lo;\n     }\n@@ -1264,11 +1264,11 @@ impl Rewrite for ast::Arm {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         debug!(\"Arm::rewrite {:?} {:?}\", self, shape);\n         let &ast::Arm {\n-                 ref attrs,\n-                 ref pats,\n-                 ref guard,\n-                 ref body,\n-             } = self;\n+            ref attrs,\n+            ref pats,\n+            ref guard,\n+            ref body,\n+        } = self;\n \n         // FIXME this is all a bit grotty, would be nice to abstract out the\n         // treatment of attributes."}, {"sha": "99651159b2ad6ecd2c8c7551e557c753cbde50dd", "filename": "src/imports.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0614e94d0df2d50f7f16e93c469006a31294ec6d/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0614e94d0df2d50f7f16e93c469006a31294ec6d/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=0614e94d0df2d50f7f16e93c469006a31294ec6d", "patch": "@@ -133,9 +133,9 @@ fn rewrite_view_path_prefix(path: &ast::Path,\n     let path_str = if path.segments.last().unwrap().identifier.to_string() == \"self\" &&\n                       path.segments.len() > 1 {\n         let path = &ast::Path {\n-                        span: path.span.clone(),\n-                        segments: path.segments[..path.segments.len() - 1].to_owned(),\n-                    };\n+            span: path.span.clone(),\n+            segments: path.segments[..path.segments.len() - 1].to_owned(),\n+        };\n         try_opt!(rewrite_path(context, PathContext::Import, None, path, shape))\n     } else {\n         try_opt!(rewrite_path(context, PathContext::Import, None, path, shape))"}, {"sha": "c9edec799e2fa5971a94f6682eac2cf0fa010ca4", "filename": "tests/target/closure.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0614e94d0df2d50f7f16e93c469006a31294ec6d/tests%2Ftarget%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0614e94d0df2d50f7f16e93c469006a31294ec6d/tests%2Ftarget%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure.rs?ref=0614e94d0df2d50f7f16e93c469006a31294ec6d", "patch": "@@ -74,16 +74,16 @@ fn issue863() {\n \n fn issue934() {\n     let hash: &Fn(&&Block) -> u64 = &|block| -> u64 {\n-                                         let mut h = SpanlessHash::new(cx);\n-                                         h.hash_block(block);\n-                                         h.finish()\n-                                     };\n+        let mut h = SpanlessHash::new(cx);\n+        h.hash_block(block);\n+        h.finish()\n+    };\n \n     let hash: &Fn(&&Block) -> u64 = &|block| -> u64 {\n-                                         let mut h = SpanlessHash::new(cx);\n-                                         h.hash_block(block);\n-                                         h.finish();\n-                                     };\n+        let mut h = SpanlessHash::new(cx);\n+        h.hash_block(block);\n+        h.finish();\n+    };\n }\n \n impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {"}]}