{"sha": "1db7f690b19408b4ae86a13f74a8181a1c74721d", "node_id": "C_kwDOAAsO6NoAKDFkYjdmNjkwYjE5NDA4YjRhZTg2YTEzZjc0YTgxODFhMWM3NDcyMWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-09T13:51:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-09T13:51:21Z"}, "message": "Rollup merge of #103570 - lukas-code:stabilize-ilog, r=scottmcm\n\nStabilize integer logarithms\n\nStabilizes feature `int_log`.\n\nI've also made the functions const stable, because they don't depend on any unstable const features. `rustc_allow_const_fn_unstable` is just there for `Option::expect`, which could be replaced with a `match` and `panic!`. cc ``@rust-lang/wg-const-eval``\n\ncloses https://github.com/rust-lang/rust/issues/70887 (tracking issue)\n\n~~blocked on FCP finishing: https://github.com/rust-lang/rust/issues/70887#issuecomment-1289028216~~\nFCP finished: https://github.com/rust-lang/rust/issues/70887#issuecomment-1302121266", "tree": {"sha": "d8904190ce96ee74c6e67febaf07b51bc17bd80d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8904190ce96ee74c6e67febaf07b51bc17bd80d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db7f690b19408b4ae86a13f74a8181a1c74721d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJja7BZCRBK7hj4Ov3rIwAANdAIAKLWWQaENdaZGMK0WOB3BzOW\nHyMWqmi17m3WtKQG1L7I5rPZNAqqvJJQ6R+s2zH9W020T3YOBDQ7Vd7+ttC/n9t/\n/BOtkiUpsFfpq1PYvgsaOdhOyBwfCl0f+pITJLCjt/7tAkMu8263+QkQwZTk9QxR\nH8SMEZYCzS1zzlz1pimUA1lkry7PqqdbNgVHdampP/uYm+7il9NL0zMOkHictCF4\n0Q8/M5QXHKc6YGOcA4h1wf1OY22Nxzpn5lkgKuTnI+sFxumPes6Ly6vs6o0atWVy\nGE8V6YBH5p29aM8jdr9k1OLQDFqGZehXnV48sFHRKF1GY3o1ua92ya7nwhYH/aU=\n=JMJT\n-----END PGP SIGNATURE-----\n", "payload": "tree d8904190ce96ee74c6e67febaf07b51bc17bd80d\nparent 0aaad9e757207657064d70bf9e6c1e6eb327bf15\nparent 9e36fd926c80dc096d580b762658f07cb976da86\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1668001881 +0530\ncommitter GitHub <noreply@github.com> 1668001881 +0530\n\nRollup merge of #103570 - lukas-code:stabilize-ilog, r=scottmcm\n\nStabilize integer logarithms\n\nStabilizes feature `int_log`.\n\nI've also made the functions const stable, because they don't depend on any unstable const features. `rustc_allow_const_fn_unstable` is just there for `Option::expect`, which could be replaced with a `match` and `panic!`. cc ``@rust-lang/wg-const-eval``\n\ncloses https://github.com/rust-lang/rust/issues/70887 (tracking issue)\n\n~~blocked on FCP finishing: https://github.com/rust-lang/rust/issues/70887#issuecomment-1289028216~~\nFCP finished: https://github.com/rust-lang/rust/issues/70887#issuecomment-1302121266\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db7f690b19408b4ae86a13f74a8181a1c74721d", "html_url": "https://github.com/rust-lang/rust/commit/1db7f690b19408b4ae86a13f74a8181a1c74721d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db7f690b19408b4ae86a13f74a8181a1c74721d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aaad9e757207657064d70bf9e6c1e6eb327bf15", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aaad9e757207657064d70bf9e6c1e6eb327bf15", "html_url": "https://github.com/rust-lang/rust/commit/0aaad9e757207657064d70bf9e6c1e6eb327bf15"}, {"sha": "9e36fd926c80dc096d580b762658f07cb976da86", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e36fd926c80dc096d580b762658f07cb976da86", "html_url": "https://github.com/rust-lang/rust/commit/9e36fd926c80dc096d580b762658f07cb976da86"}], "stats": {"total": 70, "additions": 36, "deletions": 34}, "files": [{"sha": "f1244d93285e30ba8777f0de2719eead94a960d2", "filename": "library/core/benches/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Flib.rs?ref=1db7f690b19408b4ae86a13f74a8181a1c74721d", "patch": "@@ -1,7 +1,6 @@\n // wasm32 does not support benches (no time).\n #![cfg(not(target_arch = \"wasm32\"))]\n #![feature(flt2dec)]\n-#![feature(int_log)]\n #![feature(test)]\n #![feature(trusted_random_access)]\n #![feature(iter_array_chunks)]"}, {"sha": "404ddff4f9dab44cde4497c18671480afce09bd4", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=1db7f690b19408b4ae86a13f74a8181a1c74721d", "patch": "@@ -2271,15 +2271,16 @@ macro_rules! int_impl {\n         /// # Panics\n         ///\n         /// This function will panic if `self` is less than or equal to zero,\n-        /// or if `base` is less then 2.\n+        /// or if `base` is less than 2.\n         ///\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".ilog(5), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2298,10 +2299,11 @@ macro_rules! int_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".ilog2(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2319,10 +2321,11 @@ macro_rules! int_impl {\n         /// # Example\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".ilog10(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2343,10 +2346,10 @@ macro_rules! int_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".checked_ilog(5), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2379,10 +2382,10 @@ macro_rules! int_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".checked_ilog2(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2403,10 +2406,10 @@ macro_rules! int_impl {\n         /// # Example\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".checked_ilog10(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "5b7521220acdb2d99ac15aeac715d45c7d4cde1b", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=1db7f690b19408b4ae86a13f74a8181a1c74721d", "patch": "@@ -460,14 +460,14 @@ macro_rules! nonzero_unsigned_operations {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(int_log)]\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(7).unwrap().ilog2(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(8).unwrap().ilog2(), 3);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(9).unwrap().ilog2(), 3);\")]\n                 /// ```\n-                #[unstable(feature = \"int_log\", issue = \"70887\")]\n+                #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+                #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n                 #[must_use = \"this returns the result of the operation, \\\n                               without modifying the original\"]\n                 #[inline]\n@@ -485,14 +485,14 @@ macro_rules! nonzero_unsigned_operations {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(int_log)]\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(99).unwrap().ilog10(), 1);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(100).unwrap().ilog10(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(101).unwrap().ilog10(), 2);\")]\n                 /// ```\n-                #[unstable(feature = \"int_log\", issue = \"70887\")]\n+                #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+                #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n                 #[must_use = \"this returns the result of the operation, \\\n                               without modifying the original\"]\n                 #[inline]"}, {"sha": "0563f28278d36e8da710808b0cf6ac7246632be2", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=1db7f690b19408b4ae86a13f74a8181a1c74721d", "patch": "@@ -692,15 +692,16 @@ macro_rules! uint_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `self` is zero, or if `base` is less then 2.\n+        /// This function will panic if `self` is zero, or if `base` is less than 2.\n         ///\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".ilog(5), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -719,10 +720,11 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".ilog2(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -740,10 +742,11 @@ macro_rules! uint_impl {\n         /// # Example\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".ilog10(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -764,10 +767,10 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".checked_ilog(5), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -800,10 +803,10 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".checked_ilog2(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -822,10 +825,10 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".checked_ilog10(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "a7db2a02bd74383ad2e8cfa4fb800d52f7e8307a", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7f690b19408b4ae86a13f74a8181a1c74721d/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=1db7f690b19408b4ae86a13f74a8181a1c74721d", "patch": "@@ -64,7 +64,6 @@\n #![feature(try_trait_v2)]\n #![feature(slice_internals)]\n #![feature(slice_partition_dedup)]\n-#![feature(int_log)]\n #![feature(iter_advance_by)]\n #![feature(iter_array_chunks)]\n #![feature(iter_collect_into)]"}, {"sha": "8028ce753548888ca1aef048e896e0af0e134f33", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1db7f690b19408b4ae86a13f74a8181a1c74721d/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7f690b19408b4ae86a13f74a8181a1c74721d/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=1db7f690b19408b4ae86a13f74a8181a1c74721d", "patch": "@@ -3,7 +3,6 @@\n #![feature(never_type)]\n #![feature(try_blocks)]\n #![feature(io_error_more)]\n-#![feature(int_log)]\n #![feature(variant_count)]\n #![feature(yeet_expr)]\n #![feature(is_some_and)]"}, {"sha": "0ec1f8e9c693581300e8d0659eba6b63be59a2d5", "filename": "src/tools/miri/tests/pass/integer-ops.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1db7f690b19408b4ae86a13f74a8181a1c74721d/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7f690b19408b4ae86a13f74a8181a1c74721d/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Finteger-ops.rs?ref=1db7f690b19408b4ae86a13f74a8181a1c74721d", "patch": "@@ -1,5 +1,4 @@\n //@compile-flags: -Coverflow-checks=off\n-#![feature(int_log)]\n #![allow(arithmetic_overflow)]\n \n pub fn main() {"}]}