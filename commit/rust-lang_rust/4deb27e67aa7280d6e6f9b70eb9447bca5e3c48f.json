{"sha": "4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZWIyN2U2N2FhNzI4MGQ2ZTZmOWI3MGViOTQ0N2JjYTVlM2M0OGY=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-09T17:03:45Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-14T01:04:40Z"}, "message": "libcollections: use tuple indexing", "tree": {"sha": "4dd749796efdb55b1c7c5cc55c0a236cd7763da9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dd749796efdb55b1c7c5cc55c0a236cd7763da9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f", "html_url": "https://github.com/rust-lang/rust/commit/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f/comments", "author": null, "committer": null, "parents": [{"sha": "2e8963debc514da0f6ef3f728b1b608f70e3d550", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8963debc514da0f6ef3f728b1b608f70e3d550", "html_url": "https://github.com/rust-lang/rust/commit/2e8963debc514da0f6ef3f728b1b608f70e3d550"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "7664fb9c426ae653649335ff5c840394c42b6a63", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f", "patch": "@@ -62,7 +62,7 @@ use core::iter::AdditiveIterator;\n use core::kinds::Sized;\n use core::prelude::{Char, Clone, Eq, Equiv};\n use core::prelude::{Iterator, IteratorExt, SlicePrelude, None, Option, Ord, Ordering};\n-use core::prelude::{PartialEq, PartialOrd, Result, AsSlice, Some, Tuple2};\n+use core::prelude::{PartialEq, PartialOrd, Result, AsSlice, Some};\n use core::prelude::{range};\n \n use hash;\n@@ -185,8 +185,8 @@ fn canonical_sort(comb: &mut [(char, u8)]) {\n     for i in range(0, len) {\n         let mut swapped = false;\n         for j in range(1, len-i) {\n-            let class_a = *comb[j-1].ref1();\n-            let class_b = *comb[j].ref1();\n+            let class_a = comb[j-1].1;\n+            let class_b = comb[j].1;\n             if class_a != 0 && class_b != 0 && class_a > class_b {\n                 comb.swap(j-1, j);\n                 swapped = true;"}]}