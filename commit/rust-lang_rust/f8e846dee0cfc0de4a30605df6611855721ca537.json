{"sha": "f8e846dee0cfc0de4a30605df6611855721ca537", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZTg0NmRlZTBjZmMwZGU0YTMwNjA1ZGY2NjExODU1NzIxY2E1Mzc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-23T15:48:19Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-25T13:38:37Z"}, "message": "Add load_vector function", "tree": {"sha": "4734afdba8f58785ae8e595e3bcaef8b2a523116", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4734afdba8f58785ae8e595e3bcaef8b2a523116"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8e846dee0cfc0de4a30605df6611855721ca537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e846dee0cfc0de4a30605df6611855721ca537", "html_url": "https://github.com/rust-lang/rust/commit/f8e846dee0cfc0de4a30605df6611855721ca537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8e846dee0cfc0de4a30605df6611855721ca537/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dadfbeab6c9d09d44f97181e32bec765ecd9b5bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/dadfbeab6c9d09d44f97181e32bec765ecd9b5bb", "html_url": "https://github.com/rust-lang/rust/commit/dadfbeab6c9d09d44f97181e32bec765ecd9b5bb"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "b14e8af79a8d8cba5f0889f429fefb558c510c3e", "filename": "src/common.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f8e846dee0cfc0de4a30605df6611855721ca537/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e846dee0cfc0de4a30605df6611855721ca537/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=f8e846dee0cfc0de4a30605df6611855721ca537", "patch": "@@ -66,14 +66,6 @@ pub fn clif_type_from_ty<'tcx>(tcx: TyCtxt<'tcx>, ty: Ty<'tcx>) -> Option<types:\n             }\n         }\n         ty::Param(_) => bug!(\"ty param {:?}\", ty),\n-        _ if ty.is_simd() => {\n-            let (lane_type, lane_count) = crate::intrinsics::lane_type_and_count(\n-                tcx,\n-                tcx.layout_of(ParamEnv::reveal_all().and(ty)).unwrap(),\n-            );\n-            let lane_type = clif_type_from_ty(tcx, lane_type.ty)?;\n-            return lane_type.by(u16::try_from(lane_count).unwrap());\n-        }\n         _ => return None,\n     })\n }"}, {"sha": "1d6e55b9137714fc1f2d0ea9ce4c402405ca1178", "filename": "src/value_and_place.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f8e846dee0cfc0de4a30605df6611855721ca537/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e846dee0cfc0de4a30605df6611855721ca537/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=f8e846dee0cfc0de4a30605df6611855721ca537", "patch": "@@ -161,6 +161,24 @@ impl<'tcx> CValue<'tcx> {\n         }\n     }\n \n+    /// Load a value with layout.abi of vector\n+    pub fn load_vector<'a>(self, fx: &mut FunctionCx<'_, 'tcx, impl Backend>) -> Value {\n+        let layout = self.1;\n+        match self.0 {\n+            CValueInner::ByRef(ptr) => {\n+                let clif_ty = match layout.abi {\n+                    layout::Abi::Vector { ref element, count } => {\n+                        scalar_to_clif_type(fx.tcx, element.clone()).by(u16::try_from(count).unwrap()).unwrap()\n+                    }\n+                    _ => unreachable!(),\n+                };\n+                ptr.load(fx, clif_ty, MemFlags::new())\n+            }\n+            CValueInner::ByVal(value) => value,\n+            CValueInner::ByValPair(_, _) => bug!(\"Please use load_scalar_pair for ByValPair\"),\n+        }\n+    }\n+\n     pub fn value_field<'a>(\n         self,\n         fx: &mut FunctionCx<'_, 'tcx, impl Backend>,"}]}