{"sha": "b4580d5f348c9a5d28a4e77502788e507b8c0268", "node_id": "C_kwDOAAsO6NoAKGI0NTgwZDVmMzQ4YzlhNWQyOGE0ZTc3NTAyNzg4ZTUwN2I4YzAyNjg", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-11-13T14:49:50Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-11-13T20:23:12Z"}, "message": "Simplify settings UI by merging system theme with the theme choices", "tree": {"sha": "3a1e05584ca13cfc24417d4e54518ab93912ea15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a1e05584ca13cfc24417d4e54518ab93912ea15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4580d5f348c9a5d28a4e77502788e507b8c0268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4580d5f348c9a5d28a4e77502788e507b8c0268", "html_url": "https://github.com/rust-lang/rust/commit/b4580d5f348c9a5d28a4e77502788e507b8c0268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4580d5f348c9a5d28a4e77502788e507b8c0268/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "928d14bcd1976ffd33e743aa09c7c22a063bf87c", "url": "https://api.github.com/repos/rust-lang/rust/commits/928d14bcd1976ffd33e743aa09c7c22a063bf87c", "html_url": "https://github.com/rust-lang/rust/commit/928d14bcd1976ffd33e743aa09c7c22a063bf87c"}], "stats": {"total": 60, "additions": 36, "deletions": 24}, "files": [{"sha": "5256ae916a771a6121c888c527bd80db8160fe01", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 36, "deletions": 24, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/b4580d5f348c9a5d28a4e77502788e507b8c0268/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/b4580d5f348c9a5d28a4e77502788e507b8c0268/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=b4580d5f348c9a5d28a4e77502788e507b8c0268", "patch": "@@ -9,13 +9,16 @@\n     const isSettingsPage = window.location.pathname.endsWith(\"/settings.html\");\n \n     function changeSetting(settingName, value) {\n+        if (settingName === \"theme\") {\n+            const useSystem = value === \"system preference\" ? \"true\" : \"false\";\n+            updateLocalStorage(\"use-system-theme\", useSystem);\n+        }\n         updateLocalStorage(settingName, value);\n \n         switch (settingName) {\n             case \"theme\":\n             case \"preferred-dark-theme\":\n             case \"preferred-light-theme\":\n-            case \"use-system-theme\":\n                 updateSystemTheme();\n                 updateLightAndDark();\n                 break;\n@@ -45,19 +48,18 @@\n     }\n \n     function showLightAndDark() {\n-        addClass(document.getElementById(\"theme\").parentElement, \"hidden\");\n         removeClass(document.getElementById(\"preferred-light-theme\").parentElement, \"hidden\");\n         removeClass(document.getElementById(\"preferred-dark-theme\").parentElement, \"hidden\");\n     }\n \n     function hideLightAndDark() {\n         addClass(document.getElementById(\"preferred-light-theme\").parentElement, \"hidden\");\n         addClass(document.getElementById(\"preferred-dark-theme\").parentElement, \"hidden\");\n-        removeClass(document.getElementById(\"theme\").parentElement, \"hidden\");\n     }\n \n     function updateLightAndDark() {\n-        if (getSettingValue(\"use-system-theme\") !== \"false\") {\n+        const useSystem = getSettingValue(\"use-system-theme\");\n+        if (useSystem === \"true\" || (useSystem === null && getSettingValue(\"theme\") === null)) {\n             showLightAndDark();\n         } else {\n             hideLightAndDark();\n@@ -91,7 +93,18 @@\n         });\n         onEachLazy(settingsElement.querySelectorAll(\"input[type=\\\"radio\\\"]\"), elem => {\n             const settingId = elem.name;\n-            const settingValue = getSettingValue(settingId);\n+            let settingValue = getSettingValue(settingId);\n+            if (settingId === \"theme\") {\n+                const useSystem = getSettingValue(\"use-system-theme\");\n+                if (useSystem === \"true\" || settingValue === null) {\n+                    if (useSystem !== \"false\") {\n+                        settingValue = \"system preference\";\n+                    } else {\n+                        // This is the default theme.\n+                        settingValue = \"light\";\n+                    }\n+                }\n+            }\n             if (settingValue !== null && settingValue !== \"null\") {\n                 elem.checked = settingValue === elem.value;\n             }\n@@ -120,26 +133,30 @@\n \n             if (setting[\"options\"] !== undefined) {\n                 // This is a select setting.\n-                output += `<div class=\"radio-line\" id=\"${js_data_name}\">\\\n-                        <span class=\"setting-name\">${setting_name}</span>\\\n-                        <div class=\"choices\">`;\n+                output += `\\\n+<div class=\"radio-line\" id=\"${js_data_name}\">\n+    <span class=\"setting-name\">${setting_name}</span>\n+<div class=\"choices\">`;\n                 onEach(setting[\"options\"], option => {\n                     const checked = option === setting[\"default\"] ? \" checked\" : \"\";\n+                    const full = `${js_data_name}-${option.replace(/ /g,\"-\")}`;\n \n-                    output += `<label for=\"${js_data_name}-${option}\" class=\"choice\">\\\n-                           <input type=\"radio\" name=\"${js_data_name}\" \\\n-                                id=\"${js_data_name}-${option}\" value=\"${option}\"${checked}>\\\n-                           <span>${option}</span>\\\n-                         </label>`;\n+                    output += `\\\n+<label for=\"${full}\" class=\"choice\">\n+    <input type=\"radio\" name=\"${js_data_name}\"\n+        id=\"${full}\" value=\"${option}\"${checked}>\n+    <span>${option}</span>\n+</label>`;\n                 });\n                 output += \"</div></div>\";\n             } else {\n                 // This is a toggle.\n                 const checked = setting[\"default\"] === true ? \" checked\" : \"\";\n-                output += `<label class=\"toggle\">\\\n-                        <input type=\"checkbox\" id=\"${js_data_name}\"${checked}>\\\n-                        <span class=\"label\">${setting_name}</span>\\\n-                    </label>`;\n+                output += `\\\n+<label class=\"toggle\">\\\n+    <input type=\"checkbox\" id=\"${js_data_name}\"${checked}>\\\n+    <span class=\"label\">${setting_name}</span>\\\n+</label>`;\n             }\n             output += \"</div>\";\n         }\n@@ -156,16 +173,11 @@\n         theme_names.push(\"light\", \"dark\", \"ayu\");\n \n         const settings = [\n-            {\n-                \"name\": \"Use system theme\",\n-                \"js_name\": \"use-system-theme\",\n-                \"default\": true,\n-            },\n             {\n                 \"name\": \"Theme\",\n                 \"js_name\": \"theme\",\n-                \"default\": \"light\",\n-                \"options\": theme_names,\n+                \"default\": \"system preference\",\n+                \"options\": theme_names.concat(\"system preference\"),\n             },\n             {\n                 \"name\": \"Preferred light theme\","}]}