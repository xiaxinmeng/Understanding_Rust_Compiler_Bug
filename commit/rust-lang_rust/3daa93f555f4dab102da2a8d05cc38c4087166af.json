{"sha": "3daa93f555f4dab102da2a8d05cc38c4087166af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYWE5M2Y1NTVmNGRhYjEwMmRhMmE4ZDA1Y2MzOGM0MDg3MTY2YWY=", "commit": {"author": {"name": "DevJPM", "email": "jean-pierre.muench@web.de", "date": "2020-10-26T07:15:23Z"}, "committer": {"name": "DevJPM", "email": "jean-pierre.muench@web.de", "date": "2020-10-26T07:36:14Z"}, "message": "Updated documentation, x86 feature detection testing, and removed LLVM 9 exclusive features\n\nUpdated the added documentation in llvm_util.rs to note which copies of LLVM need to be inspected.\nRemoved avx512bf16 and avx512vp2intersect because they are unsupported before LLVM 9 with the build with external LLVM 8 being supported\nRe-introduced detection testing previously removed for un-requestable features tsc and mmx", "tree": {"sha": "890729ebc92c6e8e6085156c67914b1bd23209db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890729ebc92c6e8e6085156c67914b1bd23209db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3daa93f555f4dab102da2a8d05cc38c4087166af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3daa93f555f4dab102da2a8d05cc38c4087166af", "html_url": "https://github.com/rust-lang/rust/commit/3daa93f555f4dab102da2a8d05cc38c4087166af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3daa93f555f4dab102da2a8d05cc38c4087166af/comments", "author": {"login": "DevJPM", "id": 10398997, "node_id": "MDQ6VXNlcjEwMzk4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/10398997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevJPM", "html_url": "https://github.com/DevJPM", "followers_url": "https://api.github.com/users/DevJPM/followers", "following_url": "https://api.github.com/users/DevJPM/following{/other_user}", "gists_url": "https://api.github.com/users/DevJPM/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevJPM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevJPM/subscriptions", "organizations_url": "https://api.github.com/users/DevJPM/orgs", "repos_url": "https://api.github.com/users/DevJPM/repos", "events_url": "https://api.github.com/users/DevJPM/events{/privacy}", "received_events_url": "https://api.github.com/users/DevJPM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevJPM", "id": 10398997, "node_id": "MDQ6VXNlcjEwMzk4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/10398997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevJPM", "html_url": "https://github.com/DevJPM", "followers_url": "https://api.github.com/users/DevJPM/followers", "following_url": "https://api.github.com/users/DevJPM/following{/other_user}", "gists_url": "https://api.github.com/users/DevJPM/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevJPM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevJPM/subscriptions", "organizations_url": "https://api.github.com/users/DevJPM/orgs", "repos_url": "https://api.github.com/users/DevJPM/repos", "events_url": "https://api.github.com/users/DevJPM/events{/privacy}", "received_events_url": "https://api.github.com/users/DevJPM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd95e939bb9bef598be54067e93ac712d43fba71", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd95e939bb9bef598be54067e93ac712d43fba71", "html_url": "https://github.com/rust-lang/rust/commit/cd95e939bb9bef598be54067e93ac712d43fba71"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "91686d27442c04122215e1329a3f851fd06cf07a", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3daa93f555f4dab102da2a8d05cc38c4087166af/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3daa93f555f4dab102da2a8d05cc38c4087166af/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=3daa93f555f4dab102da2a8d05cc38c4087166af", "patch": "@@ -139,6 +139,11 @@ pub fn time_trace_profiler_finish(file_name: &str) {\n // array, leading to crashes.\n // To find a list of LLVM's names, check llvm-project/llvm/include/llvm/Support/*TargetParser.def\n // where the * matches the architecture's name\n+// Beware to not use the llvm github project for this, but check the git submodule\n+// found in src/llvm-project\n+// Though note that Rust can also be build with an external precompiled version of LLVM\n+// which might lead to failures if the oldest tested / supported LLVM version\n+// doesn't yet support the relevant intrinsics\n pub fn to_llvm_feature<'a>(sess: &Session, s: &'a str) -> &'a str {\n     let arch = if sess.target.arch == \"x86_64\" { \"x86\" } else { &*sess.target.arch };\n     match (arch, s) {"}, {"sha": "e624768824bcbbec801e22f1e9994ad420b0e4b2", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3daa93f555f4dab102da2a8d05cc38c4087166af/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3daa93f555f4dab102da2a8d05cc38c4087166af/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=3daa93f555f4dab102da2a8d05cc38c4087166af", "patch": "@@ -55,7 +55,7 @@ const X86_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"aes\", None),\n     (\"avx\", None),\n     (\"avx2\", None),\n-    (\"avx512bf16\", Some(sym::avx512_target_feature)),\n+    //(\"avx512bf16\", Some(sym::avx512_target_feature)), // this seems to be unsupported by the supported build with external LLVM 8, LLVM 9 should be sufficient though\n     (\"avx512bitalg\", Some(sym::avx512_target_feature)),\n     (\"avx512bw\", Some(sym::avx512_target_feature)),\n     (\"avx512cd\", Some(sym::avx512_target_feature)),\n@@ -70,7 +70,7 @@ const X86_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"avx512vbmi2\", Some(sym::avx512_target_feature)),\n     (\"avx512vl\", Some(sym::avx512_target_feature)),\n     (\"avx512vnni\", Some(sym::avx512_target_feature)),\n-    (\"avx512vp2intersect\", Some(sym::avx512_target_feature)),\n+    //(\"avx512vp2intersect\", Some(sym::avx512_target_feature)), // this seems to be unsupported by the supported build with external LLVM 8, LLVM 9 should be sufficient though\n     (\"avx512vpclmulqdq\", Some(sym::avx512_target_feature)),\n     (\"avx512vpopcntdq\", Some(sym::avx512_target_feature)),\n     (\"bmi1\", None),"}, {"sha": "61a04c467224b620baf44cda66dc6363bb494326", "filename": "library/std/tests/run-time-detect.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3daa93f555f4dab102da2a8d05cc38c4087166af/library%2Fstd%2Ftests%2Frun-time-detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3daa93f555f4dab102da2a8d05cc38c4087166af/library%2Fstd%2Ftests%2Frun-time-detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Ftests%2Frun-time-detect.rs?ref=3daa93f555f4dab102da2a8d05cc38c4087166af", "patch": "@@ -54,6 +54,13 @@ fn powerpc64_linux() {\n #[test]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n fn x86_all() {\n+    // the below is the set of features we can test at runtime, but don't actually\n+    // use to gate anything and are thus not part of the X86_ALLOWED_FEATURES list\n+\n+    println!(\"abm: {:?}\", is_x86_feature_detected!(\"abm\")); // this is a synonym for lzcnt but we test it anyways\n+    println!(\"mmx: {:?}\", is_x86_feature_detected!(\"mmx\"));\n+    println!(\"tsc: {:?}\", is_x86_feature_detected!(\"tsc\"));\n+\n     // the below is in alphabetical order and matches\n     // the order of X86_ALLOWED_FEATURES in rustc_codegen_ssa's target_features.rs\n "}]}