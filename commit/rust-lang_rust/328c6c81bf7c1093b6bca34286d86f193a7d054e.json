{"sha": "328c6c81bf7c1093b6bca34286d86f193a7d054e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOGM2YzgxYmY3YzEwOTNiNmJjYTM0Mjg2ZDg2ZjE5M2E3ZDA1NGU=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2017-06-12T05:40:14Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2017-06-14T07:13:33Z"}, "message": "on-demand dylib dependency formats", "tree": {"sha": "d10d785c96b6980a7d0bb56a6e617bde1cbf293f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d10d785c96b6980a7d0bb56a6e617bde1cbf293f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/328c6c81bf7c1093b6bca34286d86f193a7d054e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/328c6c81bf7c1093b6bca34286d86f193a7d054e", "html_url": "https://github.com/rust-lang/rust/commit/328c6c81bf7c1093b6bca34286d86f193a7d054e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/328c6c81bf7c1093b6bca34286d86f193a7d054e/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "532a08b94726a399a4203b54536e63f7b634d36d", "url": "https://api.github.com/repos/rust-lang/rust/commits/532a08b94726a399a4203b54536e63f7b634d36d", "html_url": "https://github.com/rust-lang/rust/commit/532a08b94726a399a4203b54536e63f7b634d36d"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "2c4634f52e9f8ed40bcddab9ffe0dbf23923c65c", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=328c6c81bf7c1093b6bca34286d86f193a7d054e", "patch": "@@ -247,8 +247,6 @@ pub trait CrateStore {\n     fn is_statically_included_foreign_item(&self, def_id: DefId) -> bool;\n \n     // crate metadata\n-    fn dylib_dependency_formats(&self, cnum: CrateNum)\n-                                    -> Vec<(CrateNum, LinkagePreference)>;\n     fn dep_kind(&self, cnum: CrateNum) -> DepKind;\n     fn export_macros(&self, cnum: CrateNum);\n     fn lang_items(&self, cnum: CrateNum) -> Vec<(DefIndex, usize)>;\n@@ -367,9 +365,6 @@ impl CrateStore for DummyCrateStore {\n     fn is_statically_included_foreign_item(&self, def_id: DefId) -> bool { false }\n \n     // crate metadata\n-    fn dylib_dependency_formats(&self, cnum: CrateNum)\n-                                    -> Vec<(CrateNum, LinkagePreference)>\n-        { bug!(\"dylib_dependency_formats\") }\n     fn lang_items(&self, cnum: CrateNum) -> Vec<(DefIndex, usize)>\n         { bug!(\"lang_items\") }\n     fn missing_lang_items(&self, cnum: CrateNum) -> Vec<lang_items::LangItem>"}, {"sha": "be9c5cfafe02b9ce91459906a5f833064b8b751b", "filename": "src/librustc/middle/dependency_format.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs?ref=328c6c81bf7c1093b6bca34286d86f193a7d054e", "patch": "@@ -65,6 +65,7 @@ use hir::def_id::CrateNum;\n \n use session;\n use session::config;\n+use ty::TyCtxt;\n use middle::cstore::DepKind;\n use middle::cstore::LinkagePreference::{self, RequireStatic, RequireDynamic};\n use util::nodemap::FxHashMap;\n@@ -91,18 +92,22 @@ pub enum Linkage {\n     Dynamic,\n }\n \n-pub fn calculate(sess: &session::Session) {\n+pub fn calculate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n+    let sess = &tcx.sess;\n     let mut fmts = sess.dependency_formats.borrow_mut();\n     for &ty in sess.crate_types.borrow().iter() {\n-        let linkage = calculate_type(sess, ty);\n+        let linkage = calculate_type(tcx, ty);\n         verify_ok(sess, &linkage);\n         fmts.insert(ty, linkage);\n     }\n     sess.abort_if_errors();\n }\n \n-fn calculate_type(sess: &session::Session,\n-                  ty: config::CrateType) -> DependencyList {\n+fn calculate_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                            ty: config::CrateType) -> DependencyList {\n+\n+    let sess = &tcx.sess;\n+\n     if !sess.opts.output_types.should_trans() {\n         return Vec::new();\n     }\n@@ -167,8 +172,8 @@ fn calculate_type(sess: &session::Session,\n         if src.dylib.is_some() {\n             info!(\"adding dylib: {}\", name);\n             add_library(sess, cnum, RequireDynamic, &mut formats);\n-            let deps = sess.cstore.dylib_dependency_formats(cnum);\n-            for &(depnum, style) in &deps {\n+            let deps = tcx.dylib_dependency_formats(cnum);\n+            for &(depnum, style) in deps.iter() {\n                 info!(\"adding {:?}: {}\", style,\n                       sess.cstore.crate_name(depnum));\n                 add_library(sess, depnum, style, &mut formats);"}, {"sha": "981a0b9f4034634f02a4103e26ff1d5f4777b16e", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=328c6c81bf7c1093b6bca34286d86f193a7d054e", "patch": "@@ -13,6 +13,7 @@ use hir::def_id::{CrateNum, CRATE_DEF_INDEX, DefId, LOCAL_CRATE};\n use hir::def::Def;\n use hir;\n use middle::const_val;\n+use middle::cstore::LinkagePreference;\n use middle::privacy::AccessLevels;\n use middle::region::RegionMaps;\n use mir;\n@@ -482,6 +483,12 @@ impl<'tcx> QueryDescription for queries::is_const_fn<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::dylib_dependency_formats<'tcx> {\n+    fn describe(_: TyCtxt, _: CrateNum) -> String {\n+        \"dylib dependency formats of crate\".to_string()\n+    }\n+}\n+\n macro_rules! define_maps {\n     (<$tcx:tt>\n      $($(#[$attr:meta])*\n@@ -938,6 +945,9 @@ define_maps! { <'tcx>\n     [] needs_drop_raw: needs_drop_dep_node(ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> bool,\n     [] layout_raw: layout_dep_node(ty::ParamEnvAnd<'tcx, Ty<'tcx>>)\n                                   -> Result<&'tcx Layout, LayoutError<'tcx>>,\n+\n+    [] dylib_dependency_formats: MetaDataByCrateNum(CrateNum)\n+                                    -> Rc<Vec<(CrateNum, LinkagePreference)>>,\n }\n \n fn type_param_predicates((item_id, param_id): (DefId, DefId)) -> DepConstructor {"}, {"sha": "527fc04fe922089d0304945d2e843ce3e5730f25", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=328c6c81bf7c1093b6bca34286d86f193a7d054e", "patch": "@@ -1049,7 +1049,7 @@ pub fn phase_4_translate_to_llvm<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     time(time_passes,\n          \"resolving dependency formats\",\n-         || dependency_format::calculate(&tcx.sess));\n+         || dependency_format::calculate(tcx));\n \n     let translation =\n         time(time_passes,"}, {"sha": "e289c4d92075f9a0c3bf22aa975b0599ab91cc4e", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328c6c81bf7c1093b6bca34286d86f193a7d054e/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=328c6c81bf7c1093b6bca34286d86f193a7d054e", "patch": "@@ -153,6 +153,7 @@ provide! { <'tcx> tcx, def_id, cdata, cnum,\n     }\n \n     ByCrateNum {\n+        dylib_dependency_formats => { Rc::new(cdata.get_dylib_dependency_formats(&tcx.dep_graph)) }\n     }\n }\n \n@@ -229,12 +230,6 @@ impl CrateStore for cstore::CStore {\n         }\n     }\n \n-    fn dylib_dependency_formats(&self, cnum: CrateNum)\n-                                -> Vec<(CrateNum, LinkagePreference)>\n-    {\n-        self.get_crate_data(cnum).get_dylib_dependency_formats(&self.dep_graph)\n-    }\n-\n     fn dep_kind(&self, cnum: CrateNum) -> DepKind\n     {\n         let data = self.get_crate_data(cnum);"}]}