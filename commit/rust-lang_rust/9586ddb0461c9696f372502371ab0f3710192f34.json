{"sha": "9586ddb0461c9696f372502371ab0f3710192f34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ODZkZGIwNDYxYzk2OTZmMzcyNTAyMzcxYWIwZjM3MTAxOTJmMzQ=", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-05-18T09:08:19Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-05-18T09:08:19Z"}, "message": "Fix fallout from not ignoring warnings anymore", "tree": {"sha": "74464921113da8510297ee0539c8802d4e579d84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74464921113da8510297ee0539c8802d4e579d84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9586ddb0461c9696f372502371ab0f3710192f34", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmCjhAMACgkQHKDfKvWd\naKV8eA/+NOUb+aNooZdgEJHcox3ogAHqMHw7bqGo+TCWHCXXvxvDI/mRz+UN7iVq\n8X1SNBB1uUqlNrva5crayV/vJeOWVL52HTawNcv4k919s/QNT5n9QodeZEkFpjZZ\nHDk7q3AmqbUVfLkL4uzWZKYCIKX/zYbTYIRnWX7j9P0M7IYdTx81WLzH+MO/WIlo\nkyZGa8TIW56m2DpYVL6munh6oosyW7zv08y7eFj2TdQkIpxS5FSJIxna/Vxa2nXW\nOJwflrVsWM3PmwLIYOntti3qiEBh3kUP0YJuDxKykrGcaiEFc3lkZtRnmSpWcYuy\nC/ImcXsDcwmIhQOoT7NzOzZZJdCsycABTjwVMr+JK/+MaBO2yR2M9Yw+MPFz6P0s\nd3upJbW1H7fwN4/zeC8EyLnyKmrVFZRptHUR43fhvwu3qMTy51nTN2CEYq1ty8N4\nMkCCjSxJte2xP150ZCKUqGB8ndhA8dbPGpRwjfd4Cvp1q9KeHserWNV8Kjtf7B6m\nXRSNuJ9Y+S2R6lfr/cvdYwKwIyQ8qtbyRRZawsZ6f0LB1gf/ZNZmKUbqletrMmZa\nAIlXY7bk8AaDiyJ/dvKlibGnCyepoO25D82dh7IggWKlrmhKzq+xNVQdrF29XTCV\nJb9C9YHadwVm5jnyNvHg0x7YsJERmH+wJsqeKIpiPkElFaTk7tw=\n=7lwJ\n-----END PGP SIGNATURE-----", "payload": "tree 74464921113da8510297ee0539c8802d4e579d84\nparent ff452d5ba68e4d8b8d8c3b2977f0c8635c6380e9\nauthor flip1995 <philipp.krones@embecosm.com> 1621328899 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1621328899 +0200\n\nFix fallout from not ignoring warnings anymore\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9586ddb0461c9696f372502371ab0f3710192f34", "html_url": "https://github.com/rust-lang/rust/commit/9586ddb0461c9696f372502371ab0f3710192f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9586ddb0461c9696f372502371ab0f3710192f34/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff452d5ba68e4d8b8d8c3b2977f0c8635c6380e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff452d5ba68e4d8b8d8c3b2977f0c8635c6380e9", "html_url": "https://github.com/rust-lang/rust/commit/ff452d5ba68e4d8b8d8c3b2977f0c8635c6380e9"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "0ae0450cbe030bf574e2865aaba914499d4dc960", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9586ddb0461c9696f372502371ab0f3710192f34/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9586ddb0461c9696f372502371ab0f3710192f34/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=9586ddb0461c9696f372502371ab0f3710192f34", "patch": "@@ -20,7 +20,6 @@ extern crate rustc_attr;\n extern crate rustc_data_structures;\n extern crate rustc_errors;\n extern crate rustc_hir;\n-extern crate rustc_hir_pretty;\n extern crate rustc_infer;\n extern crate rustc_lexer;\n extern crate rustc_lint;\n@@ -1333,7 +1332,7 @@ pub fn if_sequence<'tcx>(mut expr: &'tcx Expr<'tcx>) -> (Vec<&'tcx Expr<'tcx>>,\n }\n \n /// Checks if the given function kind is an async function.\n-pub fn is_async_fn(kind: FnKind) -> bool {\n+pub fn is_async_fn(kind: FnKind<'_>) -> bool {\n     matches!(kind, FnKind::ItemFn(_, _, header, _) if header.asyncness == IsAsync::Async)\n }\n "}, {"sha": "c36e215f184adc2eac06e3962f1b8efa3a771df1", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9586ddb0461c9696f372502371ab0f3710192f34/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9586ddb0461c9696f372502371ab0f3710192f34/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=9586ddb0461c9696f372502371ab0f3710192f34", "patch": "@@ -2,9 +2,8 @@\n \n #![allow(clippy::module_name_repetitions)]\n \n-use std::collections::HashMap;\n-\n use rustc_ast::ast::Mutability;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{TyKind, Unsafety};\n@@ -184,14 +183,14 @@ pub fn is_must_use_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n /// Checks if `Ty` is normalizable. This function is useful\n /// to avoid crashes on `layout_of`.\n pub fn is_normalizable<'tcx>(cx: &LateContext<'tcx>, param_env: ty::ParamEnv<'tcx>, ty: Ty<'tcx>) -> bool {\n-    is_normalizable_helper(cx, param_env, ty, &mut HashMap::new())\n+    is_normalizable_helper(cx, param_env, ty, &mut FxHashMap::default())\n }\n \n fn is_normalizable_helper<'tcx>(\n     cx: &LateContext<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     ty: Ty<'tcx>,\n-    cache: &mut HashMap<Ty<'tcx>, bool>,\n+    cache: &mut FxHashMap<Ty<'tcx>, bool>,\n ) -> bool {\n     if let Some(&cached_result) = cache.get(ty) {\n         return cached_result;"}]}