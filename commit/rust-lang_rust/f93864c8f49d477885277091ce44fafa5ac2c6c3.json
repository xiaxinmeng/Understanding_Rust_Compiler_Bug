{"sha": "f93864c8f49d477885277091ce44fafa5ac2c6c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5Mzg2NGM4ZjQ5ZDQ3Nzg4NTI3NzA5MWNlNDRmYWZhNWFjMmM2YzM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-08-14T22:09:50Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-08-15T02:10:21Z"}, "message": "Port check_loans.rs from oldvisit to <V:Visitor> trait API.", "tree": {"sha": "f8b5948eab451638751da42c83812d4fcad80ce7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8b5948eab451638751da42c83812d4fcad80ce7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f93864c8f49d477885277091ce44fafa5ac2c6c3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f93864c8f49d477885277091ce44fafa5ac2c6c3", "html_url": "https://github.com/rust-lang/rust/commit/f93864c8f49d477885277091ce44fafa5ac2c6c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f93864c8f49d477885277091ce44fafa5ac2c6c3/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "863aac04cd2d70155e82fecfe764b258dab11490", "url": "https://api.github.com/repos/rust-lang/rust/commits/863aac04cd2d70155e82fecfe764b258dab11490", "html_url": "https://github.com/rust-lang/rust/commit/863aac04cd2d70155e82fecfe764b258dab11490"}], "stats": {"total": 83, "additions": 49, "deletions": 34}, "files": [{"sha": "0fa7750afa7aadc2367740dc6f6fa2190ef687ee", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 49, "deletions": 34, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/f93864c8f49d477885277091ce44fafa5ac2c6c3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f93864c8f49d477885277091ce44fafa5ac2c6c3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=f93864c8f49d477885277091ce44fafa5ac2c6c3", "patch": "@@ -27,7 +27,8 @@ use syntax::ast::{m_mutbl, m_imm, m_const};\n use syntax::ast;\n use syntax::ast_util;\n use syntax::codemap::span;\n-use syntax::oldvisit;\n+use syntax::visit;\n+use syntax::visit::Visitor;\n use util::ppaux::Repr;\n \n #[deriving(Clone)]\n@@ -39,6 +40,27 @@ struct CheckLoanCtxt<'self> {\n     reported: @mut HashSet<ast::NodeId>,\n }\n \n+struct CheckLoanVisitor;\n+\n+impl<'self> Visitor<CheckLoanCtxt<'self>> for CheckLoanVisitor {\n+    fn visit_expr<'a>(&mut self, ex:@ast::expr, e:CheckLoanCtxt<'a>) {\n+        check_loans_in_expr(self, ex, e);\n+    }\n+    fn visit_local(&mut self, l:@ast::Local, e:CheckLoanCtxt) {\n+        check_loans_in_local(self, l, e);\n+    }\n+    fn visit_block(&mut self, b:&ast::Block, e:CheckLoanCtxt) {\n+        check_loans_in_block(self, b, e);\n+    }\n+    fn visit_pat(&mut self, p:@ast::pat, e:CheckLoanCtxt) {\n+        check_loans_in_pat(self, p, e);\n+    }\n+    fn visit_fn(&mut self, fk:&visit::fn_kind, fd:&ast::fn_decl,\n+                b:&ast::Block, s:span, n:ast::NodeId, e:CheckLoanCtxt) {\n+        check_loans_in_fn(self, fk, fd, b, s, n, e);\n+    }\n+}\n+\n pub fn check_loans(bccx: @BorrowckCtxt,\n                    dfcx_loans: &LoanDataFlow,\n                    move_data: move_data::FlowedMoveData,\n@@ -54,15 +76,8 @@ pub fn check_loans(bccx: @BorrowckCtxt,\n         reported: @mut HashSet::new(),\n     };\n \n-    let vt = oldvisit::mk_vt(@oldvisit::Visitor {\n-        visit_expr: check_loans_in_expr,\n-        visit_local: check_loans_in_local,\n-        visit_block: check_loans_in_block,\n-        visit_pat: check_loans_in_pat,\n-        visit_fn: check_loans_in_fn,\n-        .. *oldvisit::default_visitor()\n-    });\n-    (vt.visit_block)(body, (clcx, vt));\n+    let mut vt = CheckLoanVisitor;\n+    vt.visit_block(body, clcx);\n }\n \n enum MoveError {\n@@ -626,27 +641,27 @@ impl<'self> CheckLoanCtxt<'self> {\n     }\n }\n \n-fn check_loans_in_fn<'a>(fk: &oldvisit::fn_kind,\n+fn check_loans_in_fn<'a>(visitor: &mut CheckLoanVisitor,\n+                         fk: &visit::fn_kind,\n                          decl: &ast::fn_decl,\n                          body: &ast::Block,\n                          sp: span,\n                          id: ast::NodeId,\n-                         (this, visitor): (CheckLoanCtxt<'a>,\n-                                           oldvisit::vt<CheckLoanCtxt<'a>>)) {\n+                         this: CheckLoanCtxt<'a>) {\n     match *fk {\n-        oldvisit::fk_item_fn(*) |\n-        oldvisit::fk_method(*) => {\n+        visit::fk_item_fn(*) |\n+        visit::fk_method(*) => {\n             // Don't process nested items.\n             return;\n         }\n \n-        oldvisit::fk_anon(*) |\n-        oldvisit::fk_fn_block(*) => {\n+        visit::fk_anon(*) |\n+        visit::fk_fn_block(*) => {\n             check_captured_variables(this, id, sp);\n         }\n     }\n \n-    oldvisit::visit_fn(fk, decl, body, sp, id, (this, visitor));\n+    visit::walk_fn(visitor, fk, decl, body, sp, id, this);\n \n     fn check_captured_variables(this: CheckLoanCtxt,\n                                 closure_id: ast::NodeId,\n@@ -689,16 +704,16 @@ fn check_loans_in_fn<'a>(fk: &oldvisit::fn_kind,\n     }\n }\n \n-fn check_loans_in_local<'a>(local: @ast::Local,\n-                            (this, vt): (CheckLoanCtxt<'a>,\n-                                         oldvisit::vt<CheckLoanCtxt<'a>>)) {\n-    oldvisit::visit_local(local, (this, vt));\n+fn check_loans_in_local<'a>(vt: &mut CheckLoanVisitor,\n+                            local: @ast::Local,\n+                            this: CheckLoanCtxt<'a>) {\n+    visit::walk_local(vt, local, this);\n }\n \n-fn check_loans_in_expr<'a>(expr: @ast::expr,\n-                           (this, vt): (CheckLoanCtxt<'a>,\n-                                        oldvisit::vt<CheckLoanCtxt<'a>>)) {\n-    oldvisit::visit_expr(expr, (this, vt));\n+fn check_loans_in_expr<'a>(vt: &mut CheckLoanVisitor,\n+                           expr: @ast::expr,\n+                           this: CheckLoanCtxt<'a>) {\n+    visit::walk_expr(vt, expr, this);\n \n     debug!(\"check_loans_in_expr(expr=%s)\",\n            expr.repr(this.tcx()));\n@@ -749,19 +764,19 @@ fn check_loans_in_expr<'a>(expr: @ast::expr,\n     }\n }\n \n-fn check_loans_in_pat<'a>(pat: @ast::pat,\n-                          (this, vt): (CheckLoanCtxt<'a>,\n-                                       oldvisit::vt<CheckLoanCtxt<'a>>))\n+fn check_loans_in_pat<'a>(vt: &mut CheckLoanVisitor,\n+                          pat: @ast::pat,\n+                          this: CheckLoanCtxt<'a>)\n {\n     this.check_for_conflicting_loans(pat.id);\n     this.check_move_out_from_id(pat.id, pat.span);\n-    oldvisit::visit_pat(pat, (this, vt));\n+    visit::walk_pat(vt, pat, this);\n }\n \n-fn check_loans_in_block<'a>(blk: &ast::Block,\n-                            (this, vt): (CheckLoanCtxt<'a>,\n-                                         oldvisit::vt<CheckLoanCtxt<'a>>))\n+fn check_loans_in_block<'a>(vt: &mut CheckLoanVisitor,\n+                            blk: &ast::Block,\n+                            this: CheckLoanCtxt<'a>)\n {\n-    oldvisit::visit_block(blk, (this, vt));\n+    visit::walk_block(vt, blk, this);\n     this.check_for_conflicting_loans(blk.id);\n }"}]}