{"sha": "a85ec7c2c005c1c2f85050151706c6301720760a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NWVjN2MyYzAwNWMxYzJmODUwNTAxNTE3MDZjNjMwMTcyMDc2MGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-22T04:52:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-22T04:52:10Z"}, "message": "Auto merge of #59031 - estebank:recover-from-comaless, r=petrochenkov\n\nRecover from missing comma between enum variants and from bad `pub` kw\n\nFix #56579. Fix #56473.", "tree": {"sha": "41f2c043693b15238fadb7336cbcc97b8898ce1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41f2c043693b15238fadb7336cbcc97b8898ce1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a85ec7c2c005c1c2f85050151706c6301720760a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a85ec7c2c005c1c2f85050151706c6301720760a", "html_url": "https://github.com/rust-lang/rust/commit/a85ec7c2c005c1c2f85050151706c6301720760a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a85ec7c2c005c1c2f85050151706c6301720760a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86466a397a4e43115231b66cf7935c7390f1aed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/86466a397a4e43115231b66cf7935c7390f1aed2", "html_url": "https://github.com/rust-lang/rust/commit/86466a397a4e43115231b66cf7935c7390f1aed2"}, {"sha": "0a09e76c967cfe0eb43ccdf1bddc715cd3b81f41", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a09e76c967cfe0eb43ccdf1bddc715cd3b81f41", "html_url": "https://github.com/rust-lang/rust/commit/0a09e76c967cfe0eb43ccdf1bddc715cd3b81f41"}], "stats": {"total": 121, "additions": 78, "deletions": 43}, "files": [{"sha": "7a4a687f90e73301eda0b2bfc4d5d4332e308ce4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1524,7 +1524,7 @@ impl<'a> Parser<'a> {\n                          at_end: &mut bool,\n                          mut attrs: Vec<Attribute>) -> PResult<'a, TraitItem> {\n         let lo = self.span;\n-\n+        self.eat_bad_pub();\n         let (name, node, generics) = if self.eat_keyword(keywords::Type) {\n             self.parse_trait_item_assoc_ty()?\n         } else if self.is_const_item() {\n@@ -7688,6 +7688,7 @@ impl<'a> Parser<'a> {\n \n             let struct_def;\n             let mut disr_expr = None;\n+            self.eat_bad_pub();\n             let ident = self.parse_ident()?;\n             if self.check(&token::OpenDelim(token::Brace)) {\n                 // Parse a struct variant.\n@@ -7719,11 +7720,25 @@ impl<'a> Parser<'a> {\n             };\n             variants.push(respan(vlo.to(self.prev_span), vr));\n \n-            if !self.eat(&token::Comma) { break; }\n+            if !self.eat(&token::Comma) {\n+                if self.token.is_ident() && !self.token.is_reserved_ident() {\n+                    let sp = self.sess.source_map().next_point(self.prev_span);\n+                    let mut err = self.struct_span_err(sp, \"missing comma\");\n+                    err.span_suggestion_short(\n+                        sp,\n+                        \"missing comma\",\n+                        \",\".to_owned(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                    err.emit();\n+                } else {\n+                    break;\n+                }\n+            }\n         }\n         self.expect(&token::CloseDelim(token::Brace))?;\n         if !any_disr.is_empty() && !all_nullary {\n-            let mut err =self.struct_span_err(\n+            let mut err = self.struct_span_err(\n                 any_disr.clone(),\n                 \"discriminator values can only be used with a field-less enum\",\n             );\n@@ -8608,6 +8623,21 @@ impl<'a> Parser<'a> {\n             Applicability::MaybeIncorrect,\n         ).emit();\n     }\n+\n+    /// Recover from `pub` keyword in places where it seems _reasonable_ but isn't valid.\n+    fn eat_bad_pub(&mut self) {\n+        if self.token.is_keyword(keywords::Pub) {\n+            match self.parse_visibility(false) {\n+                Ok(vis) => {\n+                    let mut err = self.diagnostic()\n+                        .struct_span_err(vis.span, \"unnecessary visibility qualifier\");\n+                    err.span_label(vis.span, \"`pub` not permitted here\");\n+                    err.emit();\n+                }\n+                Err(mut err) => err.emit(),\n+            }\n+        }\n+    }\n }\n \n pub fn emit_unclosed_delims(unclosed_delims: &mut Vec<UnmatchedBrace>, handler: &errors::Handler) {"}, {"sha": "2bbb32bf2b3725855ec0d86156a8b5c3bc668ab5", "filename": "src/test/ui/issues/issue-28433.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fissues%2Fissue-28433.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fissues%2Fissue-28433.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28433.rs?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,13 +1,14 @@\n // compile-flags: -Z continue-parse-after-error\n \n-enum bird {\n-    pub duck,\n-    //~^ ERROR: expected identifier, found keyword `pub`\n-    //~| ERROR: expected\n-    goose\n+enum Bird {\n+    pub Duck,\n+    //~^ ERROR unnecessary visibility qualifier\n+    Goose,\n+    pub(crate) Dove\n+    //~^ ERROR unnecessary visibility qualifier\n }\n \n \n fn main() {\n-    let y = bird::goose;\n+    let y = Bird::Goose;\n }"}, {"sha": "cfdbf6c7287263daaf590339307b1157dd510d36", "filename": "src/test/ui/issues/issue-28433.stderr", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fissues%2Fissue-28433.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fissues%2Fissue-28433.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28433.stderr?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,18 +1,14 @@\n-error: expected identifier, found keyword `pub`\n+error: unnecessary visibility qualifier\n   --> $DIR/issue-28433.rs:4:5\n    |\n-LL |     pub duck,\n-   |     ^^^ expected identifier, found keyword\n-help: you can escape reserved keywords to use them as identifiers\n-   |\n-LL |     r#pub duck,\n-   |     ^^^^^\n+LL |     pub Duck,\n+   |     ^^^ `pub` not permitted here\n \n-error: expected one of `(`, `,`, `=`, `{`, or `}`, found `duck`\n-  --> $DIR/issue-28433.rs:4:9\n+error: unnecessary visibility qualifier\n+  --> $DIR/issue-28433.rs:7:5\n    |\n-LL |     pub duck,\n-   |         ^^^^ expected one of `(`, `,`, `=`, `{`, or `}` here\n+LL |     pub(crate) Dove\n+   |     ^^^^^^^^^^ `pub` not permitted here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "da42da84acf2ef26a57003e60a2d0d3b37ba6c40", "filename": "src/test/ui/parser/recover-enum.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Frecover-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Frecover-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-enum.rs?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -3,7 +3,11 @@\n fn main() {\n     enum Test {\n         Very\n-        Bad //~ ERROR found `Bad`\n-        Stuff\n+        //~^ ERROR missing comma\n+        Bad(usize)\n+        //~^ ERROR missing comma\n+        Stuff { a: usize }\n+        //~^ ERROR missing comma\n+        Here\n     }\n }"}, {"sha": "10b4aba4053bdd60d5dd27a06f5d12e235fcb8f2", "filename": "src/test/ui/parser/recover-enum.stderr", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Frecover-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Frecover-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-enum.stderr?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,10 +1,20 @@\n-error: expected one of `(`, `,`, `=`, `{`, or `}`, found `Bad`\n-  --> $DIR/recover-enum.rs:6:9\n+error: missing comma\n+  --> $DIR/recover-enum.rs:5:13\n    |\n LL |         Very\n-   |             - expected one of `(`, `,`, `=`, `{`, or `}` here\n-LL |         Bad\n-   |         ^^^ unexpected token\n+   |             ^ help: missing comma\n \n-error: aborting due to previous error\n+error: missing comma\n+  --> $DIR/recover-enum.rs:7:19\n+   |\n+LL |         Bad(usize)\n+   |                   ^ help: missing comma\n+\n+error: missing comma\n+  --> $DIR/recover-enum.rs:9:27\n+   |\n+LL |         Stuff { a: usize }\n+   |                           ^ help: missing comma\n+\n+error: aborting due to 3 previous errors\n "}, {"sha": "219ffa309c25401f434a93cb6f1660ccc58c20a9", "filename": "src/test/ui/parser/trait-pub-assoc-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-const.rs?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,6 +1,6 @@\n trait Foo {\n     pub const Foo: u32;\n-    //~^ ERROR expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found\n+    //~^ ERROR unnecessary visibility qualifier\n }\n \n fn main() {}"}, {"sha": "817692cc82c861893ab3e40e012b4fdaa35dba29", "filename": "src/test/ui/parser/trait-pub-assoc-const.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-const.stderr?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,10 +1,8 @@\n-error: expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found `pub`\n+error: unnecessary visibility qualifier\n   --> $DIR/trait-pub-assoc-const.rs:2:5\n    |\n-LL | trait Foo {\n-   |            - expected one of 7 possible tokens here\n LL |     pub const Foo: u32;\n-   |     ^^^ unexpected token\n+   |     ^^^ `pub` not permitted here\n \n error: aborting due to previous error\n "}, {"sha": "a78dfbdcddaadde7c918c0592420885a7c975a08", "filename": "src/test/ui/parser/trait-pub-assoc-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-ty.rs?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,6 +1,6 @@\n trait Foo {\n     pub type Foo;\n-    //~^ ERROR expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found\n+    //~^ ERROR unnecessary visibility qualifier\n }\n \n fn main() {}"}, {"sha": "400be6af22a82cdb7072a49fc1dda9121280ae8e", "filename": "src/test/ui/parser/trait-pub-assoc-ty.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-assoc-ty.stderr?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,10 +1,8 @@\n-error: expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found `pub`\n+error: unnecessary visibility qualifier\n   --> $DIR/trait-pub-assoc-ty.rs:2:5\n    |\n-LL | trait Foo {\n-   |            - expected one of 7 possible tokens here\n LL |     pub type Foo;\n-   |     ^^^ unexpected token\n+   |     ^^^ `pub` not permitted here\n \n error: aborting due to previous error\n "}, {"sha": "1f6ee028a174bb8729b5bc05ca508072a5b60ba5", "filename": "src/test/ui/parser/trait-pub-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-method.rs?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,6 +1,6 @@\n trait Foo {\n     pub fn foo();\n-    //~^ ERROR expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found\n+    //~^ ERROR unnecessary visibility qualifier\n }\n \n fn main() {}"}, {"sha": "b3617a4aa9b0143daafcf1cb9105c1fe18977670", "filename": "src/test/ui/parser/trait-pub-method.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a85ec7c2c005c1c2f85050151706c6301720760a/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-pub-method.stderr?ref=a85ec7c2c005c1c2f85050151706c6301720760a", "patch": "@@ -1,10 +1,8 @@\n-error: expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found `pub`\n+error: unnecessary visibility qualifier\n   --> $DIR/trait-pub-method.rs:2:5\n    |\n-LL | trait Foo {\n-   |            - expected one of 7 possible tokens here\n LL |     pub fn foo();\n-   |     ^^^ unexpected token\n+   |     ^^^ `pub` not permitted here\n \n error: aborting due to previous error\n "}]}