{"sha": "8b8331ad09790a2500b315acc436281c78f3c719", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiODMzMWFkMDk3OTBhMjUwMGIzMTVhY2M0MzYyODFjNzhmM2M3MTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-11T22:02:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-11T22:02:00Z"}, "message": "rollup merge of #21881: richo/lint-no-mangle-const\n\nThis renames the PrivateNoMangleFns lint to allow both to happen in a\nsingle pass, since they do roughly the same work.\n\nCloses #21856\n\nOpen questions:\n\n[ ]: Do the tests actually pass (I'm running make check and running out the door now)\n[ ]: Is the name of this lint ok. it seems to mostly be fine with [convention](https://github.com/rust-lang/rfcs/blob/cc53afbe5dea41e1f7d1c3dce71e013abe025211/text/0344-conventions-galore.md#lints)\n[ ]: I'm not super thrilled about the warning text\n\nr? @kmcallister (Shamelessly nominating because you were looking at my other ticket)", "tree": {"sha": "762dcdbb35a6dd28065cb993ff5e5a76e6ac7765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/762dcdbb35a6dd28065cb993ff5e5a76e6ac7765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b8331ad09790a2500b315acc436281c78f3c719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8331ad09790a2500b315acc436281c78f3c719", "html_url": "https://github.com/rust-lang/rust/commit/8b8331ad09790a2500b315acc436281c78f3c719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b8331ad09790a2500b315acc436281c78f3c719/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e29f42025513374f1a88404491d1b40386acf994", "url": "https://api.github.com/repos/rust-lang/rust/commits/e29f42025513374f1a88404491d1b40386acf994", "html_url": "https://github.com/rust-lang/rust/commit/e29f42025513374f1a88404491d1b40386acf994"}, {"sha": "b6f55efd5b21b2132dafa85c112b339ba498bc7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f55efd5b21b2132dafa85c112b339ba498bc7c", "html_url": "https://github.com/rust-lang/rust/commit/b6f55efd5b21b2132dafa85c112b339ba498bc7c"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "ef9bed45814b1793e4d59b11f54e39d486109d0e", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/8b8331ad09790a2500b315acc436281c78f3c719/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8331ad09790a2500b315acc436281c78f3c719/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=8b8331ad09790a2500b315acc436281c78f3c719", "patch": "@@ -2080,12 +2080,26 @@ declare_lint! {\n     \"functions marked #[no_mangle] should be exported\"\n }\n \n+declare_lint! {\n+    PRIVATE_NO_MANGLE_STATICS,\n+    Warn,\n+    \"statics marked #[no_mangle] should be exported\"\n+}\n+\n+declare_lint! {\n+    NO_MANGLE_CONST_ITEMS,\n+    Deny,\n+    \"const items will not have their symbols exported\"\n+}\n+\n #[derive(Copy)]\n-pub struct PrivateNoMangleFns;\n+pub struct InvalidNoMangleItems;\n \n-impl LintPass for PrivateNoMangleFns {\n+impl LintPass for InvalidNoMangleItems {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(PRIVATE_NO_MANGLE_FNS)\n+        lint_array!(PRIVATE_NO_MANGLE_FNS,\n+                    PRIVATE_NO_MANGLE_STATICS,\n+                    NO_MANGLE_CONST_ITEMS)\n     }\n \n     fn check_item(&mut self, cx: &Context, it: &ast::Item) {\n@@ -2098,6 +2112,23 @@ impl LintPass for PrivateNoMangleFns {\n                     cx.span_lint(PRIVATE_NO_MANGLE_FNS, it.span, &msg);\n                 }\n             },\n+            ast::ItemStatic(..) => {\n+                if attr::contains_name(it.attrs.as_slice(), \"no_mangle\") &&\n+                       !cx.exported_items.contains(&it.id) {\n+                    let msg = format!(\"static {} is marked #[no_mangle], but not exported\",\n+                                      it.ident);\n+                    cx.span_lint(PRIVATE_NO_MANGLE_STATICS, it.span, msg.as_slice());\n+                }\n+            },\n+            ast::ItemConst(..) => {\n+                if attr::contains_name(it.attrs.as_slice(), \"no_mangle\") {\n+                    // Const items do not refer to a particular location in memory, and therefore\n+                    // don't have anything to attach a symbol to\n+                    let msg = \"const items should never be #[no_mangle], consider instead using \\\n+                        `pub static`\";\n+                    cx.span_lint(NO_MANGLE_CONST_ITEMS, it.span, msg);\n+                }\n+            }\n             _ => {},\n         }\n     }"}, {"sha": "616af79326d9a5445633ee4d9372c7f564c4ff20", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b8331ad09790a2500b315acc436281c78f3c719/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8331ad09790a2500b315acc436281c78f3c719/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=8b8331ad09790a2500b315acc436281c78f3c719", "patch": "@@ -213,7 +213,7 @@ impl LintStore {\n                      UnstableFeatures,\n                      Stability,\n                      UnconditionalRecursion,\n-                     PrivateNoMangleFns,\n+                     InvalidNoMangleItems,\n         );\n \n         add_builtin_with_new!(sess,"}, {"sha": "216fcf9353578a594c00febb75c97bca216daee9", "filename": "src/test/compile-fail/lint-unexported-no-mangle.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8b8331ad09790a2500b315acc436281c78f3c719/src%2Ftest%2Fcompile-fail%2Flint-unexported-no-mangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8331ad09790a2500b315acc436281c78f3c719/src%2Ftest%2Fcompile-fail%2Flint-unexported-no-mangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unexported-no-mangle.rs?ref=8b8331ad09790a2500b315acc436281c78f3c719", "patch": "@@ -8,17 +8,32 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:-F private_no_mangle_fns\n+// compile-flags:-F private_no_mangle_fns -F no_mangle_const_items -F private_no_mangle_statics\n \n // FIXME(#19495) no_mangle'ing main ICE's.\n #[no_mangle]\n fn foo() { //~ ERROR function foo is marked #[no_mangle], but not exported\n }\n \n+#[allow(dead_code)]\n+#[no_mangle]\n+const FOO: u64 = 1; //~ ERROR const items should never be #[no_mangle]\n+\n+#[no_mangle]\n+pub const PUB_FOO: u64 = 1; //~ ERROR const items should never be #[no_mangle]\n+\n #[no_mangle]\n pub fn bar()  {\n }\n \n+#[no_mangle]\n+pub static BAR: u64 = 1;\n+\n+#[allow(dead_code)]\n+#[no_mangle]\n+static PRIVATE_BAR: u64 = 1; //~ ERROR static PRIVATE_BAR is marked #[no_mangle], but not exported\n+\n+\n fn main() {\n     foo();\n     bar();"}]}