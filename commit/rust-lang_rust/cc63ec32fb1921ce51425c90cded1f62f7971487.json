{"sha": "cc63ec32fb1921ce51425c90cded1f62f7971487", "node_id": "C_kwDOAAsO6NoAKGNjNjNlYzMyZmIxOTIxY2U1MTQyNWM5MGNkZWQxZjYyZjc5NzE0ODc", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-05-09T22:59:52Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-12-06T20:05:22Z"}, "message": "Use variables rather than lengths directly", "tree": {"sha": "de0be850597b7597781b1831745046301cb308eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de0be850597b7597781b1831745046301cb308eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc63ec32fb1921ce51425c90cded1f62f7971487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc63ec32fb1921ce51425c90cded1f62f7971487", "html_url": "https://github.com/rust-lang/rust/commit/cc63ec32fb1921ce51425c90cded1f62f7971487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc63ec32fb1921ce51425c90cded1f62f7971487/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "345ada0e1b17d21157b3963121c8238d39c763c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/345ada0e1b17d21157b3963121c8238d39c763c0", "html_url": "https://github.com/rust-lang/rust/commit/345ada0e1b17d21157b3963121c8238d39c763c0"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "e67986ae85c7a387921df818155eed664c985e11", "filename": "compiler/rustc_data_structures/src/graph/dominators/mod.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cc63ec32fb1921ce51425c90cded1f62f7971487/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc63ec32fb1921ce51425c90cded1f62f7971487/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs?ref=cc63ec32fb1921ce51425c90cded1f62f7971487", "patch": "@@ -27,18 +27,19 @@ pub fn dominators<G: ControlFlowGraph>(graph: G) -> Dominators<G::Node> {\n         IndexVec::from_elem_n(None, graph.num_nodes());\n     pre_order_to_real.push(graph.start_node());\n     real_to_pre_order[graph.start_node()] = Some(0);\n-    let mut idx = 1;\n     let mut post_order_idx = 0;\n \n     'recurse: while let Some(frame) = stack.last_mut() {\n         while let Some(successor) = frame.iter.next() {\n             if real_to_pre_order[successor].is_none() {\n-                real_to_pre_order[successor] = Some(idx);\n-                parent[idx] = Some(frame.node);\n+                let pre_order_idx = pre_order_to_real.len();\n+\n+                real_to_pre_order[successor] = Some(pre_order_idx);\n+                parent[pre_order_idx] = Some(frame.node);\n                 pre_order_to_real.push(successor);\n+                stack\n+                    .push(PreOrderFrame { node: pre_order_idx, iter: graph.successors(successor) });\n \n-                stack.push(PreOrderFrame { node: idx, iter: graph.successors(successor) });\n-                idx += 1;\n                 continue 'recurse;\n             }\n         }\n@@ -48,13 +49,15 @@ pub fn dominators<G: ControlFlowGraph>(graph: G) -> Dominators<G::Node> {\n         stack.pop();\n     }\n \n-    let mut idom = IndexVec::from_elem_n(0, pre_order_to_real.len());\n-    let mut semi = IndexVec::from_fn_n(std::convert::identity, pre_order_to_real.len());\n+    let reachable_vertices = pre_order_to_real.len();\n+\n+    let mut idom = IndexVec::from_elem_n(0, reachable_vertices);\n+    let mut semi = IndexVec::from_fn_n(std::convert::identity, reachable_vertices);\n     let mut label = semi.clone();\n-    let mut bucket = IndexVec::from_elem_n(vec![], pre_order_to_real.len());\n+    let mut bucket = IndexVec::from_elem_n(vec![], reachable_vertices);\n     let mut lastlinked = None;\n \n-    for w in (1..pre_order_to_real.len()).rev() {\n+    for w in (1..reachable_vertices).rev() {\n         // Optimization: process buckets just once, at the start of the\n         // iteration. Do not explicitly empty the bucket (even though it will\n         // not be used again), to save some instructions.\n@@ -84,7 +87,7 @@ pub fn dominators<G: ControlFlowGraph>(graph: G) -> Dominators<G::Node> {\n         // processed elements; lastlinked represents the divider.\n         lastlinked = Some(w);\n     }\n-    for w in 1..pre_order_to_real.len() {\n+    for w in 1..reachable_vertices {\n         if idom[w] != semi[w] {\n             idom[w] = idom[idom[w]];\n         }"}]}