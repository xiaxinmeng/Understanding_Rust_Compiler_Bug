{"sha": "f5f67e78bb3bfbc391699021c89b07f1aff3aa26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZjY3ZTc4YmIzYmZiYzM5MTY5OTAyMWM4OWIwN2YxYWZmM2FhMjY=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-05T21:24:07Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-10T03:19:09Z"}, "message": "Add Instance::resolve_for_fn_ptr", "tree": {"sha": "c26fc98aa5b8d1700fe5e76398b7134476b89fa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c26fc98aa5b8d1700fe5e76398b7134476b89fa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5f67e78bb3bfbc391699021c89b07f1aff3aa26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5f67e78bb3bfbc391699021c89b07f1aff3aa26", "html_url": "https://github.com/rust-lang/rust/commit/f5f67e78bb3bfbc391699021c89b07f1aff3aa26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5f67e78bb3bfbc391699021c89b07f1aff3aa26/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "012116f860eb5b859218640e963ba32545311a24", "url": "https://api.github.com/repos/rust-lang/rust/commits/012116f860eb5b859218640e963ba32545311a24", "html_url": "https://github.com/rust-lang/rust/commit/012116f860eb5b859218640e963ba32545311a24"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "f547da00b1ad9e1277a3b4076906266c8a43393e", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f5f67e78bb3bfbc391699021c89b07f1aff3aa26/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5f67e78bb3bfbc391699021c89b07f1aff3aa26/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=f5f67e78bb3bfbc391699021c89b07f1aff3aa26", "patch": "@@ -25,7 +25,7 @@ pub enum InstanceDef<'tcx> {\n     /// `<T as Trait>::method` where `method` receives unsizeable `self: Self`.\n     VtableShim(DefId),\n \n-    /// `fn()` where the function is annotated with `#[track_caller]`.\n+    /// `fn()` pointer where the function is annotated with `#[track_caller]`.\n     ReifyShim(DefId),\n \n     /// `<fn() as FnTrait>::call_*`\n@@ -297,6 +297,28 @@ impl<'tcx> Instance<'tcx> {\n         result\n     }\n \n+    pub fn resolve_for_fn_ptr(\n+        tcx: TyCtxt<'tcx>,\n+        param_env: ty::ParamEnv<'tcx>,\n+        def_id: DefId,\n+        substs: SubstsRef<'tcx>,\n+    ) -> Option<Instance<'tcx>> {\n+        debug!(\"resolve(def_id={:?}, substs={:?})\", def_id, substs);\n+        let fn_sig = tcx.fn_sig(def_id);\n+        // let is_reify_shim = fn_sig.inputs().skip_binder().len() > 0\n+        //     && fn_sig.input(0).skip_binder().is_param(0)\n+        //     && tcx.generics_of(def_id).has_self;\n+        if is_reify_shim {\n+            debug!(\" => fn ptr with implicit caller location\");\n+            Some(Instance {\n+                def: InstanceDef::ReifyShim(def_id),\n+                substs,\n+            })\n+        } else {\n+            Instance::resolve(tcx, param_env, def_id, substs)\n+        }\n+    }\n+\n     pub fn resolve_for_vtable(\n         tcx: TyCtxt<'tcx>,\n         param_env: ty::ParamEnv<'tcx>,"}]}