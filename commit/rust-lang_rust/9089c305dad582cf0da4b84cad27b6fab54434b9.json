{"sha": "9089c305dad582cf0da4b84cad27b6fab54434b9", "node_id": "C_kwDOAAsO6NoAKDkwODljMzA1ZGFkNTgyY2YwZGE0Yjg0Y2FkMjdiNmZhYjU0NDM0Yjk", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-27T16:54:06Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-27T16:54:06Z"}, "message": "Remove TyCtxt dependency from UnwindContext", "tree": {"sha": "a6f5ca3b570397fb4d226ee81f299da3b99e573a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6f5ca3b570397fb4d226ee81f299da3b99e573a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9089c305dad582cf0da4b84cad27b6fab54434b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9089c305dad582cf0da4b84cad27b6fab54434b9", "html_url": "https://github.com/rust-lang/rust/commit/9089c305dad582cf0da4b84cad27b6fab54434b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9089c305dad582cf0da4b84cad27b6fab54434b9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad5966ed4c2625270092f5b7ac93bf61c9f59f06", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5966ed4c2625270092f5b7ac93bf61c9f59f06", "html_url": "https://github.com/rust-lang/rust/commit/ad5966ed4c2625270092f5b7ac93bf61c9f59f06"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "638b025be229d57170e607b15fc0508def83986b", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=9089c305dad582cf0da4b84cad27b6fab54434b9", "patch": "@@ -10,7 +10,7 @@ use crate::prelude::*;\n use rustc_index::vec::IndexVec;\n \n use cranelift_codegen::entity::EntityRef;\n-use cranelift_codegen::ir::{LabelValueLoc, ValueLabel};\n+use cranelift_codegen::ir::{Endianness, LabelValueLoc, ValueLabel};\n use cranelift_codegen::isa::TargetIsa;\n use cranelift_codegen::ValueLocRange;\n \n@@ -23,15 +23,6 @@ use gimli::{Encoding, Format, LineEncoding, RunTimeEndian, X86_64};\n pub(crate) use emit::{DebugReloc, DebugRelocName};\n pub(crate) use unwind::UnwindContext;\n \n-fn target_endian(tcx: TyCtxt<'_>) -> RunTimeEndian {\n-    use rustc_target::abi::Endian;\n-\n-    match tcx.data_layout.endian {\n-        Endian::Big => RunTimeEndian::Big,\n-        Endian::Little => RunTimeEndian::Little,\n-    }\n-}\n-\n pub(crate) struct DebugContext<'tcx> {\n     tcx: TyCtxt<'tcx>,\n \n@@ -60,6 +51,11 @@ impl<'tcx> DebugContext<'tcx> {\n             address_size: isa.frontend_config().pointer_bytes(),\n         };\n \n+        let endian = match isa.endianness() {\n+            Endianness::Little => RunTimeEndian::Little,\n+            Endianness::Big => RunTimeEndian::Big,\n+        };\n+\n         let mut dwarf = DwarfUnit::new(encoding);\n \n         let producer = format!(\n@@ -108,7 +104,7 @@ impl<'tcx> DebugContext<'tcx> {\n         DebugContext {\n             tcx,\n \n-            endian: target_endian(tcx),\n+            endian,\n \n             dwarf,\n             unit_range_list: RangeList(Vec::new()),"}, {"sha": "e4f28338096e1cec0175fd0c78a0d2ae567829ff", "filename": "src/debuginfo/unwind.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Fdebuginfo%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Fdebuginfo%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Funwind.rs?ref=9089c305dad582cf0da4b84cad27b6fab54434b9", "patch": "@@ -2,6 +2,7 @@\n \n use crate::prelude::*;\n \n+use cranelift_codegen::ir::Endianness;\n use cranelift_codegen::isa::{unwind::UnwindInfo, TargetIsa};\n \n use cranelift_object::ObjectProduct;\n@@ -17,8 +18,11 @@ pub(crate) struct UnwindContext {\n }\n \n impl UnwindContext {\n-    pub(crate) fn new(tcx: TyCtxt<'_>, isa: &dyn TargetIsa, pic_eh_frame: bool) -> Self {\n-        let endian = super::target_endian(tcx);\n+    pub(crate) fn new(isa: &dyn TargetIsa, pic_eh_frame: bool) -> Self {\n+        let endian = match isa.endianness() {\n+            Endianness::Little => RunTimeEndian::Little,\n+            Endianness::Big => RunTimeEndian::Big,\n+        };\n         let mut frame_table = FrameTable::default();\n \n         let cie_id = if let Some(mut cie) = isa.create_systemv_cie() {"}, {"sha": "046e4393a68d6c4306cae8642b10500f8b438eec", "filename": "src/driver/aot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=9089c305dad582cf0da4b84cad27b6fab54434b9", "patch": "@@ -243,7 +243,7 @@ pub(crate) fn run_aot(\n     let isa = crate::build_isa(tcx.sess, &backend_config);\n     let mut allocator_module = make_module(tcx.sess, isa, \"allocator_shim\".to_string());\n     assert_eq!(pointer_ty(tcx), allocator_module.target_config().pointer_type());\n-    let mut allocator_unwind_context = UnwindContext::new(tcx, allocator_module.isa(), true);\n+    let mut allocator_unwind_context = UnwindContext::new(allocator_module.isa(), true);\n     let created_alloc_shim =\n         crate::allocator::codegen(tcx, &mut allocator_module, &mut allocator_unwind_context);\n "}, {"sha": "cb18f42f741d80b208b92bcfbf9a2143b68dbede", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9089c305dad582cf0da4b84cad27b6fab54434b9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=9089c305dad582cf0da4b84cad27b6fab54434b9", "patch": "@@ -141,7 +141,7 @@ impl<'tcx> CodegenCx<'tcx> {\n         assert_eq!(pointer_ty(tcx), isa.pointer_type());\n \n         let unwind_context =\n-            UnwindContext::new(tcx, isa, matches!(backend_config.codegen_mode, CodegenMode::Aot));\n+            UnwindContext::new(isa, matches!(backend_config.codegen_mode, CodegenMode::Aot));\n         let debug_context = if debug_info { Some(DebugContext::new(tcx, isa)) } else { None };\n         CodegenCx {\n             tcx,"}]}