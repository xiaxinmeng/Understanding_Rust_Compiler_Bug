{"sha": "cb958cf5fec8b051d16833ac0890cace379ad765", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiOTU4Y2Y1ZmVjOGIwNTFkMTY4MzNhYzA4OTBjYWNlMzc5YWQ3NjU=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-22T18:50:37Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-22T18:50:37Z"}, "message": "Store macro invocation parameters as text instead of tt", "tree": {"sha": "84894ca069bd28527e0eba9ceea8a28cc8c31aba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84894ca069bd28527e0eba9ceea8a28cc8c31aba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb958cf5fec8b051d16833ac0890cace379ad765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb958cf5fec8b051d16833ac0890cace379ad765", "html_url": "https://github.com/rust-lang/rust/commit/cb958cf5fec8b051d16833ac0890cace379ad765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb958cf5fec8b051d16833ac0890cace379ad765/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dba534a103dc9fb374bc313ac96d54d331cbd54a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dba534a103dc9fb374bc313ac96d54d331cbd54a", "html_url": "https://github.com/rust-lang/rust/commit/dba534a103dc9fb374bc313ac96d54d331cbd54a"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "a2b9f3e35c035db49bf0210f8cd8ea253478ea2a", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=cb958cf5fec8b051d16833ac0890cace379ad765", "patch": "@@ -11,7 +11,7 @@ pub use hir_def::db::{\n };\n pub use hir_expand::db::{\n     AstDatabase, AstDatabaseStorage, AstIdMapQuery, InternEagerExpansionQuery, InternMacroQuery,\n-    MacroArgQuery, MacroDefQuery, MacroExpandQuery, ParseMacroQuery,\n+    MacroArgTextQuery, MacroDefQuery, MacroExpandQuery, ParseMacroQuery,\n };\n pub use hir_ty::db::{\n     AssociatedTyDataQuery, AssociatedTyValueQuery, CallableItemSignatureQuery, FieldTypesQuery,"}, {"sha": "e0ad1567f648792a61de591ab47467a96a3f2727", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=cb958cf5fec8b051d16833ac0890cace379ad765", "patch": "@@ -6,7 +6,7 @@ use mbe::{ExpandResult, MacroRules};\n use ra_db::{salsa, SourceDatabase};\n use ra_parser::FragmentKind;\n use ra_prof::profile;\n-use ra_syntax::{algo::diff, AstNode, Parse, SyntaxKind::*, SyntaxNode};\n+use ra_syntax::{algo::diff, AstNode, GreenNode, Parse, SyntaxKind::*, SyntaxNode};\n \n use crate::{\n     ast_id_map::AstIdMap, BuiltinDeriveExpander, BuiltinFnLikeExpander, EagerCallLoc, EagerMacroId,\n@@ -72,6 +72,8 @@ pub trait AstDatabase: SourceDatabase {\n \n     #[salsa::interned]\n     fn intern_macro(&self, macro_call: MacroCallLoc) -> LazyMacroId;\n+    fn macro_arg_text(&self, id: MacroCallId) -> Option<GreenNode>;\n+    #[salsa::transparent]\n     fn macro_arg(&self, id: MacroCallId) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>>;\n     fn macro_def(&self, id: MacroDefId) -> Option<Arc<(TokenExpander, mbe::TokenMap)>>;\n     fn parse_macro(&self, macro_file: MacroFile)\n@@ -148,10 +150,7 @@ pub(crate) fn macro_def(\n     }\n }\n \n-pub(crate) fn macro_arg(\n-    db: &dyn AstDatabase,\n-    id: MacroCallId,\n-) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>> {\n+pub(crate) fn macro_arg_text(db: &dyn AstDatabase, id: MacroCallId) -> Option<GreenNode> {\n     let id = match id {\n         MacroCallId::LazyMacro(id) => id,\n         MacroCallId::EagerMacro(_id) => {\n@@ -161,7 +160,15 @@ pub(crate) fn macro_arg(\n     };\n     let loc = db.lookup_intern_macro(id);\n     let arg = loc.kind.arg(db)?;\n-    let (tt, tmap) = mbe::syntax_node_to_token_tree(&arg)?;\n+    Some(arg.green().clone())\n+}\n+\n+pub(crate) fn macro_arg(\n+    db: &dyn AstDatabase,\n+    id: MacroCallId,\n+) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>> {\n+    let arg = db.macro_arg_text(id)?;\n+    let (tt, tmap) = mbe::syntax_node_to_token_tree(&SyntaxNode::new_root(arg))?;\n     Some(Arc::new((tt, tmap)))\n }\n "}, {"sha": "32d9a8d1ffc5bb0f53dc6403aea55c55e64b0f67", "filename": "crates/ra_ide_db/src/change.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fchange.rs?ref=cb958cf5fec8b051d16833ac0890cace379ad765", "patch": "@@ -151,7 +151,7 @@ impl RootDatabase {\n \n         // Macros do take significant space, but less then the syntax trees\n         // self.query(hir::db::MacroDefQuery).sweep(sweep);\n-        // self.query(hir::db::MacroArgQuery).sweep(sweep);\n+        // self.query(hir::db::MacroArgTextQuery).sweep(sweep);\n         // self.query(hir::db::MacroExpandQuery).sweep(sweep);\n \n         hir::db::AstIdMapQuery.in_db(self).sweep(sweep);\n@@ -199,7 +199,7 @@ impl RootDatabase {\n \n             // AstDatabase\n             hir::db::AstIdMapQuery\n-            hir::db::MacroArgQuery\n+            hir::db::MacroArgTextQuery\n             hir::db::MacroDefQuery\n             hir::db::ParseMacroQuery\n             hir::db::MacroExpandQuery"}, {"sha": "ac59455e74912c5548e6125e3bc48a660439163b", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=cb958cf5fec8b051d16833ac0890cace379ad765", "patch": "@@ -42,16 +42,14 @@ use std::{marker::PhantomData, sync::Arc};\n use ra_text_edit::Indel;\n use stdx::format_to;\n \n-use crate::syntax_node::GreenNode;\n-\n pub use crate::{\n     algo::InsertPosition,\n     ast::{AstNode, AstToken},\n     parsing::{lex_single_syntax_kind, lex_single_valid_syntax_kind, tokenize, Token},\n     ptr::{AstPtr, SyntaxNodePtr},\n     syntax_error::SyntaxError,\n     syntax_node::{\n-        Direction, NodeOrToken, SyntaxElement, SyntaxElementChildren, SyntaxNode,\n+        Direction, GreenNode, NodeOrToken, SyntaxElement, SyntaxElementChildren, SyntaxNode,\n         SyntaxNodeChildren, SyntaxToken, SyntaxTreeBuilder,\n     },\n };"}, {"sha": "a7dbdba7b115cae079246635aaa6c5483142734d", "filename": "crates/ra_syntax/src/syntax_node.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb958cf5fec8b051d16833ac0890cace379ad765/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs?ref=cb958cf5fec8b051d16833ac0890cace379ad765", "patch": "@@ -10,7 +10,9 @@ use rowan::{GreenNodeBuilder, Language};\n \n use crate::{Parse, SmolStr, SyntaxError, SyntaxKind, TextSize};\n \n-pub(crate) use rowan::{GreenNode, GreenToken};\n+pub use rowan::GreenNode;\n+\n+pub(crate) use rowan::GreenToken;\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub enum RustLanguage {}"}]}