{"sha": "7892cc3c5f6532a18338ce989ea1639af5e417b4", "node_id": "C_kwDOAAsO6NoAKDc4OTJjYzNjNWY2NTMyYTE4MzM4Y2U5ODllYTE2MzlhZjVlNDE3YjQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-31T02:59:36Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-31T02:59:36Z"}, "message": "Do not depend on Generator trait when deducing closure signature", "tree": {"sha": "a60c4781482c0b52e86a29e8edf2fbda64abdb50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a60c4781482c0b52e86a29e8edf2fbda64abdb50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7892cc3c5f6532a18338ce989ea1639af5e417b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7892cc3c5f6532a18338ce989ea1639af5e417b4", "html_url": "https://github.com/rust-lang/rust/commit/7892cc3c5f6532a18338ce989ea1639af5e417b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7892cc3c5f6532a18338ce989ea1639af5e417b4/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "001a77fac33f6560ff361ff38f661ff5f1c6bf85", "url": "https://api.github.com/repos/rust-lang/rust/commits/001a77fac33f6560ff361ff38f661ff5f1c6bf85", "html_url": "https://github.com/rust-lang/rust/commit/001a77fac33f6560ff361ff38f661ff5f1c6bf85"}], "stats": {"total": 56, "additions": 10, "deletions": 46}, "files": [{"sha": "90c4e5b6540b0ed511edacc08a34ec8b8628f11b", "filename": "compiler/rustc_hir_typeck/src/closure.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7892cc3c5f6532a18338ce989ea1639af5e417b4/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7892cc3c5f6532a18338ce989ea1639af5e417b4/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs?ref=7892cc3c5f6532a18338ce989ea1639af5e417b4", "patch": "@@ -15,6 +15,7 @@ use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Ty, TypeSuperVisitable, TypeVisitor};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::source_map::Span;\n+use rustc_span::sym;\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits;\n use rustc_trait_selection::traits::error_reporting::ArgKind;\n@@ -288,21 +289,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let trait_def_id = projection.trait_def_id(tcx);\n \n         let is_fn = tcx.is_fn_trait(trait_def_id);\n-        let gen_trait = tcx.require_lang_item(LangItem::Generator, cause_span);\n-        let is_gen = gen_trait == trait_def_id;\n+\n+        let gen_trait = tcx.lang_items().gen_trait();\n+        let is_gen = gen_trait == Some(trait_def_id);\n+\n         if !is_fn && !is_gen {\n             debug!(\"not fn or generator\");\n             return None;\n         }\n \n-        if is_gen {\n-            // Check that we deduce the signature from the `<_ as std::ops::Generator>::Return`\n-            // associated item and not yield.\n-            let return_assoc_item = self.tcx.associated_item_def_ids(gen_trait)[1];\n-            if return_assoc_item != projection.projection_def_id() {\n-                debug!(\"not return assoc item of generator\");\n-                return None;\n-            }\n+        // Check that we deduce the signature from the `<_ as std::ops::Generator>::Return`\n+        // associated item and not yield.\n+        if is_gen && self.tcx.associated_item(projection.projection_def_id()).name != sym::Return {\n+            debug!(\"not `Return` assoc item of `Generator`\");\n+            return None;\n         }\n \n         let input_tys = if is_fn {"}, {"sha": "9b9aff38e524ee3ba6ac99920b2bd04dd10105fa", "filename": "tests/ui/lang-items/lang-item-missing-generator.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/001a77fac33f6560ff361ff38f661ff5f1c6bf85/tests%2Fui%2Flang-items%2Flang-item-missing-generator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/001a77fac33f6560ff361ff38f661ff5f1c6bf85/tests%2Fui%2Flang-items%2Flang-item-missing-generator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Flang-item-missing-generator.rs?ref=001a77fac33f6560ff361ff38f661ff5f1c6bf85", "patch": "@@ -1,21 +0,0 @@\n-// error-pattern: requires `generator` lang_item\n-#![feature(no_core, lang_items, unboxed_closures, tuple_trait)]\n-#![no_core]\n-\n-#[lang = \"sized\"] pub trait Sized { }\n-\n-#[lang = \"tuple_trait\"] pub trait Tuple { }\n-\n-#[lang = \"fn_once\"]\n-#[rustc_paren_sugar]\n-pub trait FnOnce<Args: Tuple> {\n-    type Output;\n-\n-    extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n-}\n-\n-pub fn abc() -> impl FnOnce(f32) {\n-    |_| {}\n-}\n-\n-fn main() {}"}, {"sha": "a24fdb5fb6506402239d1a2feaad67d0f70ccf70", "filename": "tests/ui/lang-items/lang-item-missing-generator.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/001a77fac33f6560ff361ff38f661ff5f1c6bf85/tests%2Fui%2Flang-items%2Flang-item-missing-generator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/001a77fac33f6560ff361ff38f661ff5f1c6bf85/tests%2Fui%2Flang-items%2Flang-item-missing-generator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Flang-item-missing-generator.stderr?ref=001a77fac33f6560ff361ff38f661ff5f1c6bf85", "patch": "@@ -1,15 +0,0 @@\n-error[E0635]: unknown feature `tuple_trait`\n-  --> $DIR/lang-item-missing-generator.rs:2:51\n-   |\n-LL | #![feature(no_core, lang_items, unboxed_closures, tuple_trait)]\n-   |                                                   ^^^^^^^^^^^\n-\n-error: requires `generator` lang_item\n-  --> $DIR/lang-item-missing-generator.rs:17:17\n-   |\n-LL | pub fn abc() -> impl FnOnce(f32) {\n-   |                 ^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0635`."}]}