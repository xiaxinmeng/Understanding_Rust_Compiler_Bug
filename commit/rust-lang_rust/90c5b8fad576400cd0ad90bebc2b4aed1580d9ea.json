{"sha": "90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYzViOGZhZDU3NjQwMGNkMGFkOTBiZWJjMmI0YWVkMTU4MGQ5ZWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-12T08:43:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-12T08:43:22Z"}, "message": "Rollup merge of #76599 - hameerabbasi:const-generics-revs, r=lcnr\n\nFinish off revisions for const generics UI tests.\n\nThis time it really does fix it. \ud83d\ude05 The only ones left are `min-and-full-same-time.rs`, which doesn't need it, and `array-impls/` which check the feature indirectly.\n\nFixes #75279.\n\nr? @lcnr", "tree": {"sha": "f5a51f4aacf05723475fe0f042f2ad902b94ce5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5a51f4aacf05723475fe0f042f2ad902b94ce5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfXIoqCRBK7hj4Ov3rIwAAdHIIAJgTEuquHUmCx5HzXc75t40K\nP5Ajbj2T2k0edzH1QkV9XBwsNOm/CWJ8w1NYFv+VzRQtfn5ZTXlS2kAqmTiMgUIZ\n+FdeQHW7jK53mjVCRKQIoFnDm9P1sSqGb/s4BMf/8RGk8dHVA2TUGvnGzkacNaF9\nOC7aIKwwaeYb9bZHJ3ChvvFzWJm55NjSfSTnhJeb/dXVTfOfFZbx+wR7GDGqM8Ec\nxn5YRBEJFnGT6rM53L7qtoJ/2N7GzyhFZfZ10mKhCq+B2CO1y2JTufFxLVn6l5zm\nLrTAh4GfvNbIaT1raEc3uHGiSxCQcbFi9K00HAQX0FKIw97t0BMHBgCK4SF9ZQU=\n=Mm1U\n-----END PGP SIGNATURE-----\n", "payload": "tree f5a51f4aacf05723475fe0f042f2ad902b94ce5d\nparent 2477f070fca2cd75bb91d758d0016715ef140ec4\nparent 5e188f5803bdbfdf3ff000e8b7e266405531c8d7\nauthor Ralf Jung <post@ralfj.de> 1599900202 +0200\ncommitter GitHub <noreply@github.com> 1599900202 +0200\n\nRollup merge of #76599 - hameerabbasi:const-generics-revs, r=lcnr\n\nFinish off revisions for const generics UI tests.\n\nThis time it really does fix it. \ud83d\ude05 The only ones left are `min-and-full-same-time.rs`, which doesn't need it, and `array-impls/` which check the feature indirectly.\n\nFixes #75279.\n\nr? @lcnr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "html_url": "https://github.com/rust-lang/rust/commit/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2477f070fca2cd75bb91d758d0016715ef140ec4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2477f070fca2cd75bb91d758d0016715ef140ec4", "html_url": "https://github.com/rust-lang/rust/commit/2477f070fca2cd75bb91d758d0016715ef140ec4"}, {"sha": "5e188f5803bdbfdf3ff000e8b7e266405531c8d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e188f5803bdbfdf3ff000e8b7e266405531c8d7", "html_url": "https://github.com/rust-lang/rust/commit/5e188f5803bdbfdf3ff000e8b7e266405531c8d7"}], "stats": {"total": 64, "additions": 53, "deletions": 11}, "files": [{"sha": "b2816367ea107c7b48c598c47c9a3b4aada99d10", "filename": "src/test/ui/const-generics/const_evaluatable_checked/feature-gate-const_evaluatable_checked.full.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.full.stderr?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -1,5 +1,5 @@\n error: constant expression depends on a generic parameter\n-  --> $DIR/feature-gate-const_evaluatable_checked.rs:6:30\n+  --> $DIR/feature-gate-const_evaluatable_checked.rs:9:30\n    |\n LL | fn test<const N: usize>() -> Arr<N> where Arr<N>: Default {\n    |                              ^^^^^^", "previous_filename": "src/test/ui/const-generics/const_evaluatable_checked/feature-gate-const_evaluatable_checked.stderr"}, {"sha": "269710db164b1225b1c0e61abfc4d240db43b140", "filename": "src/test/ui/const-generics/const_evaluatable_checked/feature-gate-const_evaluatable_checked.min.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.min.stderr?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -0,0 +1,10 @@\n+error: generic parameters must not be used inside of non trivial constant values\n+  --> $DIR/feature-gate-const_evaluatable_checked.rs:6:33\n+   |\n+LL | type Arr<const N: usize> = [u8; N - 1];\n+   |                                 ^ non-trivial anonymous constants must not depend on the parameter `N`\n+   |\n+   = help: it is currently only allowed to use either `N` or `{ N }` as generic constants\n+\n+error: aborting due to previous error\n+"}, {"sha": "af3090115f24a8cc2c717164aae16c55017cb6eb", "filename": "src/test/ui/const-generics/const_evaluatable_checked/feature-gate-const_evaluatable_checked.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.rs?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -1,10 +1,13 @@\n-#![feature(const_generics)]\n-#![allow(incomplete_features)]\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(min, feature(min_const_generics))]\n \n type Arr<const N: usize> = [u8; N - 1];\n+//[min]~^ ERROR generic parameters must not be used inside of non trivial constant values\n \n fn test<const N: usize>() -> Arr<N> where Arr<N>: Default {\n-    //~^ ERROR constant expression depends\n+    //[full]~^ ERROR constant expression depends\n     Default::default()\n }\n "}, {"sha": "da8ccdaee414661f554d939f2b7b8f895476a35b", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple.min.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.min.stderr?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -0,0 +1,10 @@\n+error: generic parameters must not be used inside of non trivial constant values\n+  --> $DIR/simple.rs:8:33\n+   |\n+LL | type Arr<const N: usize> = [u8; N - 1];\n+   |                                 ^ non-trivial anonymous constants must not depend on the parameter `N`\n+   |\n+   = help: it is currently only allowed to use either `N` or `{ N }` as generic constants\n+\n+error: aborting due to previous error\n+"}, {"sha": "27dc6b103200dc696517156b828103735d1bca33", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.rs?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -1,8 +1,12 @@\n-// run-pass\n-#![feature(const_generics, const_evaluatable_checked)]\n+// [full] run-pass\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+#![feature(const_evaluatable_checked)]\n #![allow(incomplete_features)]\n \n type Arr<const N: usize> = [u8; N - 1];\n+//[min]~^ ERROR generic parameters must not be used inside of non trivial constant values\n \n fn test<const N: usize>() -> Arr<N> where Arr<N>: Default {\n     Default::default()"}, {"sha": "104cab8667c70623d34e10a1cabb1559669186ea", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.full.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.full.stderr?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -1,5 +1,5 @@\n error[E0080]: evaluation of constant value failed\n-  --> $DIR/simple_fail.rs:4:33\n+  --> $DIR/simple_fail.rs:7:33\n    |\n LL | type Arr<const N: usize> = [u8; N - 1];\n    |                                 ^^^^^ attempt to compute `0_usize - 1_usize` which would overflow", "previous_filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.stderr"}, {"sha": "042710f13273e191108965e7e858dacc1509f988", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.min.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -0,0 +1,10 @@\n+error: generic parameters must not be used inside of non trivial constant values\n+  --> $DIR/simple_fail.rs:7:33\n+   |\n+LL | type Arr<const N: usize> = [u8; N - 1];\n+   |                                 ^ non-trivial anonymous constants must not depend on the parameter `N`\n+   |\n+   = help: it is currently only allowed to use either `N` or `{ N }` as generic constants\n+\n+error: aborting due to previous error\n+"}, {"sha": "b15e0ff183954f7d5470eb491b9c7b4dc2c3a7f8", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.rs?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -1,7 +1,11 @@\n-#![feature(const_generics, const_evaluatable_checked)]\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+#![feature(const_evaluatable_checked)]\n #![allow(incomplete_features)]\n \n-type Arr<const N: usize> = [u8; N - 1]; //~ ERROR evaluation of constant\n+type Arr<const N: usize> = [u8; N - 1]; //[full]~ ERROR evaluation of constant\n+//[min]~^ ERROR generic parameters must not be used inside of non trivial constant values\n \n fn test<const N: usize>() -> Arr<N> where Arr<N>: Sized {\n     todo!()"}, {"sha": "aa85376bf0d75268a0a898bca3423d317acc705c", "filename": "src/test/ui/const-generics/type-dependent/auxiliary/type_dependent_lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fauxiliary%2Ftype_dependent_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5b8fad576400cd0ad90bebc2b4aed1580d9ea/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fauxiliary%2Ftype_dependent_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fauxiliary%2Ftype_dependent_lib.rs?ref=90c5b8fad576400cd0ad90bebc2b4aed1580d9ea", "patch": "@@ -1,5 +1,6 @@\n-#![feature(const_generics)]\n-#![allow(incomplete_features)]\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(min, feature(min_const_generics))]\n \n pub struct Struct<const N: usize>(());\n "}]}