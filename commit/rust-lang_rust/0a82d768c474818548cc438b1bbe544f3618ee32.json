{"sha": "0a82d768c474818548cc438b1bbe544f3618ee32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhODJkNzY4YzQ3NDgxODU0OGNjNDM4YjFiYmU1NDRmMzYxOGVlMzI=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-05T21:43:40Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-05T21:43:40Z"}, "message": "Improve/add the use_item documentation", "tree": {"sha": "493a2907b3410e10dad81a61d96cc13b364e2ee7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493a2907b3410e10dad81a61d96cc13b364e2ee7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a82d768c474818548cc438b1bbe544f3618ee32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a82d768c474818548cc438b1bbe544f3618ee32", "html_url": "https://github.com/rust-lang/rust/commit/0a82d768c474818548cc438b1bbe544f3618ee32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a82d768c474818548cc438b1bbe544f3618ee32/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1c0ee225a075d25d700fcd1c007615556e2afb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1c0ee225a075d25d700fcd1c007615556e2afb", "html_url": "https://github.com/rust-lang/rust/commit/0b1c0ee225a075d25d700fcd1c007615556e2afb"}], "stats": {"total": 540, "additions": 539, "deletions": 1}, "files": [{"sha": "b3c78f35135ce80a42edf40e8cdf13b1539e2189", "filename": "crates/ra_syntax/src/grammar/items/use_item.rs", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -7,25 +7,75 @@ pub(super) fn use_item(p: &mut Parser) {\n     p.expect(SEMI);\n }\n \n+/// Parse a use 'tree', such as `some::path` in `use some::path;`\n+/// Note that this is called both by `use_item` and `use_tree_list`,\n+/// so handles both `some::path::{inner::path}` and `inner::path` in\n+/// `use some::path::{inner::path};`\n fn use_tree(p: &mut Parser) {\n     let la = p.nth(1);\n     let m = p.start();\n     match (p.current(), la) {\n+        // Finish the use_tree for cases of e.g.\n+        // `use some::path::{self, *};` or `use *;`\n+        // This does not handle cases such as `use some::path::*`\n+        // N.B. in Rust 2015 `use *;` imports all from crate root\n+        // however in Rust 2018 `use *;` errors: ('cannot glob-import all possible crates')\n+        // TODO: Add this error (if not out of scope)\n+\n+        // test use_star\n+        // use *;\n+        // use ::*;\n+        // use some::path::{*};\n+        // use some::path::{::*};\n         (STAR, _) => p.bump(),\n         (COLONCOLON, STAR) => {\n+            // Parse `use ::*;`, which imports all from the crate root in Rust 2015\n+            // This is invalid inside a use_tree_list, (e.g. `use some::path::{::*}`)\n+            // but still parses and errors later: ('crate root in paths can only be used in start position')\n+            // TODO: Add this error (if not out of scope)\n+            // In Rust 2018, it is always invalid (see above)\n             p.bump();\n             p.bump();\n         }\n+        // Open a use tree list\n+        // Handles cases such as `use {some::path};` or `{inner::path}` in\n+        // `use some::path::{{inner::path}, other::path}`\n+\n+        // test use_tree_list\n+        // use {crate::path::from::root, or::path::from::crate_name}; // Rust 2018 (with a crate named `or`)\n+        // use {path::from::root}; // Rust 2015\n+        // use ::{some::arbritrary::path}; // Rust 2015\n+        // use ::{{{crate::export}}}; // Nonsensical but perfectly legal nestnig\n         (L_CURLY, _) | (COLONCOLON, L_CURLY) => {\n             if p.at(COLONCOLON) {\n                 p.bump();\n             }\n             use_tree_list(p);\n         }\n+        // Parse a 'standard' path.\n+        // Also handles aliases (e.g. `use something as something_else`)\n+\n+        // test use_path\n+        // use ::crate_name; // Rust 2018 - All flavours\n+        // use crate_name; // Rust 2018 - Anchored paths\n+        // use item_in_scope_or_crate_name; // Rust 2018 - Uniform Paths\n+        //\n+        // use self::module::Item;\n+        // use crate::Item;\n+        // use self::some::Struct;\n+        // use crate_name::some_item;\n         _ if paths::is_path_start(p) => {\n             paths::use_path(p);\n             match p.current() {\n                 AS_KW => {\n+                    // test use_alias\n+                    // use some::path as some_name;\n+                    // use some::{\n+                    //  other::path as some_other_name,\n+                    //  different::path as different_name,\n+                    //  yet::another::path,\n+                    //  running::out::of::synonyms::for::different::*\n+                    // };\n                     opt_alias(p);\n                 }\n                 COLONCOLON => {\n@@ -34,6 +84,9 @@ fn use_tree(p: &mut Parser) {\n                         STAR => {\n                             p.bump();\n                         }\n+                        // test use_tree_list_after_path\n+                        // use crate::{Item};\n+                        // use self::{Item};\n                         L_CURLY => use_tree_list(p),\n                         _ => {\n                             // is this unreachable?\n@@ -46,7 +99,7 @@ fn use_tree(p: &mut Parser) {\n         }\n         _ => {\n             m.abandon(p);\n-            p.err_and_bump(\"expected one of `*`, `::`, `{`, `self`, `super`, `indent`\");\n+            p.err_and_bump(\"expected one of `*`, `::`, `{`, `self`, `super` or an indentifier\");\n             return;\n         }\n     }"}, {"sha": "1e436a6bc2b4e2441aa4f41b834e201d33386d2b", "filename": "crates/ra_syntax/tests/data/parser/inline/0114_use_path.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0114_use_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0114_use_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0114_use_path.rs?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,8 @@\n+use ::crate_name; // Rust 2018 - All flavours\n+use crate_name; // Rust 2018 - Anchored paths\n+use item_in_scope_or_crate_name; // Rust 2018 - Uniform Paths\n+\n+use self::module::Item;\n+use crate::Item;\n+use self::some::Struct;\n+use crate_name::some_item;"}, {"sha": "4dc68c3b1de7087a452686d94747a68be4ccf77d", "filename": "crates/ra_syntax/tests/data/parser/inline/0114_use_path.txt", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0114_use_path.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0114_use_path.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0114_use_path.txt?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,105 @@\n+SOURCE_FILE@[0; 247)\n+  USE_ITEM@[0; 17)\n+    USE_KW@[0; 3)\n+    WHITESPACE@[3; 4)\n+    USE_TREE@[4; 16)\n+      PATH@[4; 16)\n+        PATH_SEGMENT@[4; 16)\n+          COLONCOLON@[4; 6)\n+          NAME_REF@[6; 16)\n+            IDENT@[6; 16) \"crate_name\"\n+    SEMI@[16; 17)\n+  WHITESPACE@[17; 18)\n+  COMMENT@[18; 45)\n+  WHITESPACE@[45; 46)\n+  USE_ITEM@[46; 61)\n+    USE_KW@[46; 49)\n+    WHITESPACE@[49; 50)\n+    USE_TREE@[50; 60)\n+      PATH@[50; 60)\n+        PATH_SEGMENT@[50; 60)\n+          NAME_REF@[50; 60)\n+            IDENT@[50; 60) \"crate_name\"\n+    SEMI@[60; 61)\n+  WHITESPACE@[61; 62)\n+  COMMENT@[62; 91)\n+  WHITESPACE@[91; 92)\n+  USE_ITEM@[92; 124)\n+    USE_KW@[92; 95)\n+    WHITESPACE@[95; 96)\n+    USE_TREE@[96; 123)\n+      PATH@[96; 123)\n+        PATH_SEGMENT@[96; 123)\n+          NAME_REF@[96; 123)\n+            IDENT@[96; 123) \"item_in_scope_or_crate_name\"\n+    SEMI@[123; 124)\n+  WHITESPACE@[124; 125)\n+  COMMENT@[125; 153)\n+  WHITESPACE@[153; 155)\n+  USE_ITEM@[155; 178)\n+    USE_KW@[155; 158)\n+    WHITESPACE@[158; 159)\n+    USE_TREE@[159; 177)\n+      PATH@[159; 177)\n+        PATH@[159; 171)\n+          PATH@[159; 163)\n+            PATH_SEGMENT@[159; 163)\n+              SELF_KW@[159; 163)\n+          COLONCOLON@[163; 165)\n+          PATH_SEGMENT@[165; 171)\n+            NAME_REF@[165; 171)\n+              IDENT@[165; 171) \"module\"\n+        COLONCOLON@[171; 173)\n+        PATH_SEGMENT@[173; 177)\n+          NAME_REF@[173; 177)\n+            IDENT@[173; 177) \"Item\"\n+    SEMI@[177; 178)\n+  WHITESPACE@[178; 179)\n+  USE_ITEM@[179; 195)\n+    USE_KW@[179; 182)\n+    WHITESPACE@[182; 183)\n+    USE_TREE@[183; 194)\n+      PATH@[183; 194)\n+        PATH@[183; 188)\n+          PATH_SEGMENT@[183; 188)\n+            CRATE_KW@[183; 188)\n+        COLONCOLON@[188; 190)\n+        PATH_SEGMENT@[190; 194)\n+          NAME_REF@[190; 194)\n+            IDENT@[190; 194) \"Item\"\n+    SEMI@[194; 195)\n+  WHITESPACE@[195; 196)\n+  USE_ITEM@[196; 219)\n+    USE_KW@[196; 199)\n+    WHITESPACE@[199; 200)\n+    USE_TREE@[200; 218)\n+      PATH@[200; 218)\n+        PATH@[200; 210)\n+          PATH@[200; 204)\n+            PATH_SEGMENT@[200; 204)\n+              SELF_KW@[200; 204)\n+          COLONCOLON@[204; 206)\n+          PATH_SEGMENT@[206; 210)\n+            NAME_REF@[206; 210)\n+              IDENT@[206; 210) \"some\"\n+        COLONCOLON@[210; 212)\n+        PATH_SEGMENT@[212; 218)\n+          NAME_REF@[212; 218)\n+            IDENT@[212; 218) \"Struct\"\n+    SEMI@[218; 219)\n+  WHITESPACE@[219; 220)\n+  USE_ITEM@[220; 246)\n+    USE_KW@[220; 223)\n+    WHITESPACE@[223; 224)\n+    USE_TREE@[224; 245)\n+      PATH@[224; 245)\n+        PATH@[224; 234)\n+          PATH_SEGMENT@[224; 234)\n+            NAME_REF@[224; 234)\n+              IDENT@[224; 234) \"crate_name\"\n+        COLONCOLON@[234; 236)\n+        PATH_SEGMENT@[236; 245)\n+          NAME_REF@[236; 245)\n+            IDENT@[236; 245) \"some_item\"\n+    SEMI@[245; 246)\n+  WHITESPACE@[246; 247)"}, {"sha": "c7a141bbd30d057736ec3aee1c6a3e37af2cfdfc", "filename": "crates/ra_syntax/tests/data/parser/inline/0115_use_alias.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0115_use_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0115_use_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0115_use_alias.rs?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,7 @@\n+use some::path as some_name;\n+use some::{\n+ other::path as some_other_name,\n+ different::path as different_name,\n+ yet::another::path,\n+ running::out::of::synonyms::for::different::*\n+};"}, {"sha": "f7b599476f0bdb477bd19f0f6021029bb370f343", "filename": "crates/ra_syntax/tests/data/parser/inline/0115_use_alias.txt", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0115_use_alias.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0115_use_alias.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0115_use_alias.txt?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,124 @@\n+SOURCE_FILE@[0; 181)\n+  USE_ITEM@[0; 28)\n+    USE_KW@[0; 3)\n+    WHITESPACE@[3; 4)\n+    USE_TREE@[4; 27)\n+      PATH@[4; 14)\n+        PATH@[4; 8)\n+          PATH_SEGMENT@[4; 8)\n+            NAME_REF@[4; 8)\n+              IDENT@[4; 8) \"some\"\n+        COLONCOLON@[8; 10)\n+        PATH_SEGMENT@[10; 14)\n+          NAME_REF@[10; 14)\n+            IDENT@[10; 14) \"path\"\n+      WHITESPACE@[14; 15)\n+      ALIAS@[15; 27)\n+        AS_KW@[15; 17)\n+        WHITESPACE@[17; 18)\n+        NAME@[18; 27)\n+          IDENT@[18; 27) \"some_name\"\n+    SEMI@[27; 28)\n+  WHITESPACE@[28; 29)\n+  USE_ITEM@[29; 180)\n+    USE_KW@[29; 32)\n+    WHITESPACE@[32; 33)\n+    USE_TREE@[33; 179)\n+      PATH@[33; 37)\n+        PATH_SEGMENT@[33; 37)\n+          NAME_REF@[33; 37)\n+            IDENT@[33; 37) \"some\"\n+      COLONCOLON@[37; 39)\n+      USE_TREE_LIST@[39; 179)\n+        L_CURLY@[39; 40)\n+        WHITESPACE@[40; 42)\n+        USE_TREE@[42; 72)\n+          PATH@[42; 53)\n+            PATH@[42; 47)\n+              PATH_SEGMENT@[42; 47)\n+                NAME_REF@[42; 47)\n+                  IDENT@[42; 47) \"other\"\n+            COLONCOLON@[47; 49)\n+            PATH_SEGMENT@[49; 53)\n+              NAME_REF@[49; 53)\n+                IDENT@[49; 53) \"path\"\n+          WHITESPACE@[53; 54)\n+          ALIAS@[54; 72)\n+            AS_KW@[54; 56)\n+            WHITESPACE@[56; 57)\n+            NAME@[57; 72)\n+              IDENT@[57; 72) \"some_other_name\"\n+        COMMA@[72; 73)\n+        WHITESPACE@[73; 75)\n+        USE_TREE@[75; 108)\n+          PATH@[75; 90)\n+            PATH@[75; 84)\n+              PATH_SEGMENT@[75; 84)\n+                NAME_REF@[75; 84)\n+                  IDENT@[75; 84) \"different\"\n+            COLONCOLON@[84; 86)\n+            PATH_SEGMENT@[86; 90)\n+              NAME_REF@[86; 90)\n+                IDENT@[86; 90) \"path\"\n+          WHITESPACE@[90; 91)\n+          ALIAS@[91; 108)\n+            AS_KW@[91; 93)\n+            WHITESPACE@[93; 94)\n+            NAME@[94; 108)\n+              IDENT@[94; 108) \"different_name\"\n+        COMMA@[108; 109)\n+        WHITESPACE@[109; 111)\n+        USE_TREE@[111; 129)\n+          PATH@[111; 129)\n+            PATH@[111; 123)\n+              PATH@[111; 114)\n+                PATH_SEGMENT@[111; 114)\n+                  NAME_REF@[111; 114)\n+                    IDENT@[111; 114) \"yet\"\n+              COLONCOLON@[114; 116)\n+              PATH_SEGMENT@[116; 123)\n+                NAME_REF@[116; 123)\n+                  IDENT@[116; 123) \"another\"\n+            COLONCOLON@[123; 125)\n+            PATH_SEGMENT@[125; 129)\n+              NAME_REF@[125; 129)\n+                IDENT@[125; 129) \"path\"\n+        COMMA@[129; 130)\n+        WHITESPACE@[130; 132)\n+        USE_TREE@[132; 177)\n+          PATH@[132; 174)\n+            PATH@[132; 163)\n+              PATH@[132; 158)\n+                PATH@[132; 148)\n+                  PATH@[132; 144)\n+                    PATH@[132; 139)\n+                      PATH_SEGMENT@[132; 139)\n+                        NAME_REF@[132; 139)\n+                          IDENT@[132; 139) \"running\"\n+                    COLONCOLON@[139; 141)\n+                    PATH_SEGMENT@[141; 144)\n+                      NAME_REF@[141; 144)\n+                        IDENT@[141; 144) \"out\"\n+                  COLONCOLON@[144; 146)\n+                  PATH_SEGMENT@[146; 148)\n+                    NAME_REF@[146; 148)\n+                      IDENT@[146; 148) \"of\"\n+                COLONCOLON@[148; 150)\n+                PATH_SEGMENT@[150; 158)\n+                  NAME_REF@[150; 158)\n+                    IDENT@[150; 158) \"synonyms\"\n+              COLONCOLON@[158; 160)\n+              err: `expected identifier`\n+              PATH_SEGMENT@[160; 163)\n+                ERROR@[160; 163)\n+                  FOR_KW@[160; 163)\n+            COLONCOLON@[163; 165)\n+            PATH_SEGMENT@[165; 174)\n+              NAME_REF@[165; 174)\n+                IDENT@[165; 174) \"different\"\n+          COLONCOLON@[174; 176)\n+          STAR@[176; 177)\n+        WHITESPACE@[177; 178)\n+        R_CURLY@[178; 179)\n+    SEMI@[179; 180)\n+  WHITESPACE@[180; 181)"}, {"sha": "6f15769a8c78553470e5363ceba0e3dd92f0be36", "filename": "crates/ra_syntax/tests/data/parser/inline/0116_use_star.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0116_use_star.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0116_use_star.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0116_use_star.rs?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,4 @@\n+use *;\n+use ::*;\n+use some::path::{*};\n+use some::path::{::*};"}, {"sha": "2db3cbf9e3d4813b91febe3f7c52d9f9d7a12f0a", "filename": "crates/ra_syntax/tests/data/parser/inline/0116_use_star.txt", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0116_use_star.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0116_use_star.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0116_use_star.txt?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,59 @@\n+SOURCE_FILE@[0; 60)\n+  USE_ITEM@[0; 6)\n+    USE_KW@[0; 3)\n+    WHITESPACE@[3; 4)\n+    USE_TREE@[4; 5)\n+      STAR@[4; 5)\n+    SEMI@[5; 6)\n+  WHITESPACE@[6; 7)\n+  USE_ITEM@[7; 15)\n+    USE_KW@[7; 10)\n+    WHITESPACE@[10; 11)\n+    USE_TREE@[11; 14)\n+      COLONCOLON@[11; 13)\n+      STAR@[13; 14)\n+    SEMI@[14; 15)\n+  WHITESPACE@[15; 16)\n+  USE_ITEM@[16; 36)\n+    USE_KW@[16; 19)\n+    WHITESPACE@[19; 20)\n+    USE_TREE@[20; 35)\n+      PATH@[20; 30)\n+        PATH@[20; 24)\n+          PATH_SEGMENT@[20; 24)\n+            NAME_REF@[20; 24)\n+              IDENT@[20; 24) \"some\"\n+        COLONCOLON@[24; 26)\n+        PATH_SEGMENT@[26; 30)\n+          NAME_REF@[26; 30)\n+            IDENT@[26; 30) \"path\"\n+      COLONCOLON@[30; 32)\n+      USE_TREE_LIST@[32; 35)\n+        L_CURLY@[32; 33)\n+        USE_TREE@[33; 34)\n+          STAR@[33; 34)\n+        R_CURLY@[34; 35)\n+    SEMI@[35; 36)\n+  WHITESPACE@[36; 37)\n+  USE_ITEM@[37; 59)\n+    USE_KW@[37; 40)\n+    WHITESPACE@[40; 41)\n+    USE_TREE@[41; 58)\n+      PATH@[41; 51)\n+        PATH@[41; 45)\n+          PATH_SEGMENT@[41; 45)\n+            NAME_REF@[41; 45)\n+              IDENT@[41; 45) \"some\"\n+        COLONCOLON@[45; 47)\n+        PATH_SEGMENT@[47; 51)\n+          NAME_REF@[47; 51)\n+            IDENT@[47; 51) \"path\"\n+      COLONCOLON@[51; 53)\n+      USE_TREE_LIST@[53; 58)\n+        L_CURLY@[53; 54)\n+        USE_TREE@[54; 57)\n+          COLONCOLON@[54; 56)\n+          STAR@[56; 57)\n+        R_CURLY@[57; 58)\n+    SEMI@[58; 59)\n+  WHITESPACE@[59; 60)"}, {"sha": "c0a3d634e5717a46908f3f0e06cda4a2016b1b55", "filename": "crates/ra_syntax/tests/data/parser/inline/0117_use_tree_list_after_path.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0117_use_tree_list_after_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0117_use_tree_list_after_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0117_use_tree_list_after_path.rs?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,2 @@\n+use crate::{Item};\n+use self::{Item};"}, {"sha": "cac746e5bce06715cc66621523e53074ef6ca8f4", "filename": "crates/ra_syntax/tests/data/parser/inline/0117_use_tree_list_after_path.txt", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0117_use_tree_list_after_path.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0117_use_tree_list_after_path.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0117_use_tree_list_after_path.txt?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,37 @@\n+SOURCE_FILE@[0; 37)\n+  USE_ITEM@[0; 18)\n+    USE_KW@[0; 3)\n+    WHITESPACE@[3; 4)\n+    USE_TREE@[4; 17)\n+      PATH@[4; 9)\n+        PATH_SEGMENT@[4; 9)\n+          CRATE_KW@[4; 9)\n+      COLONCOLON@[9; 11)\n+      USE_TREE_LIST@[11; 17)\n+        L_CURLY@[11; 12)\n+        USE_TREE@[12; 16)\n+          PATH@[12; 16)\n+            PATH_SEGMENT@[12; 16)\n+              NAME_REF@[12; 16)\n+                IDENT@[12; 16) \"Item\"\n+        R_CURLY@[16; 17)\n+    SEMI@[17; 18)\n+  WHITESPACE@[18; 19)\n+  USE_ITEM@[19; 36)\n+    USE_KW@[19; 22)\n+    WHITESPACE@[22; 23)\n+    USE_TREE@[23; 35)\n+      PATH@[23; 27)\n+        PATH_SEGMENT@[23; 27)\n+          SELF_KW@[23; 27)\n+      COLONCOLON@[27; 29)\n+      USE_TREE_LIST@[29; 35)\n+        L_CURLY@[29; 30)\n+        USE_TREE@[30; 34)\n+          PATH@[30; 34)\n+            PATH_SEGMENT@[30; 34)\n+              NAME_REF@[30; 34)\n+                IDENT@[30; 34) \"Item\"\n+        R_CURLY@[34; 35)\n+    SEMI@[35; 36)\n+  WHITESPACE@[36; 37)"}, {"sha": "06c387cee39d2d0fef7f39b097c199dd318c9b8c", "filename": "crates/ra_syntax/tests/data/parser/inline/0118_use_tree_list.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0118_use_tree_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0118_use_tree_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0118_use_tree_list.rs?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,4 @@\n+use {crate::path::from::root, or::path::from::crate_name}; // Rust 2018 (with a crate named `or`)\n+use {path::from::root}; // Rust 2015\n+use ::{some::arbritrary::path}; // Rust 2015\n+use ::{{{crate::export}}}; // Nonsensical but perfectly legal nestnig"}, {"sha": "89a0b9f2a5ffee4536761714f261f5c8d12e8600", "filename": "crates/ra_syntax/tests/data/parser/inline/0118_use_tree_list.txt", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0118_use_tree_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0a82d768c474818548cc438b1bbe544f3618ee32/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0118_use_tree_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0118_use_tree_list.txt?ref=0a82d768c474818548cc438b1bbe544f3618ee32", "patch": "@@ -0,0 +1,135 @@\n+SOURCE_FILE@[0; 250)\n+  USE_ITEM@[0; 58)\n+    USE_KW@[0; 3)\n+    WHITESPACE@[3; 4)\n+    USE_TREE@[4; 57)\n+      USE_TREE_LIST@[4; 57)\n+        L_CURLY@[4; 5)\n+        USE_TREE@[5; 28)\n+          PATH@[5; 28)\n+            PATH@[5; 22)\n+              PATH@[5; 16)\n+                PATH@[5; 10)\n+                  PATH_SEGMENT@[5; 10)\n+                    CRATE_KW@[5; 10)\n+                COLONCOLON@[10; 12)\n+                PATH_SEGMENT@[12; 16)\n+                  NAME_REF@[12; 16)\n+                    IDENT@[12; 16) \"path\"\n+              COLONCOLON@[16; 18)\n+              PATH_SEGMENT@[18; 22)\n+                NAME_REF@[18; 22)\n+                  IDENT@[18; 22) \"from\"\n+            COLONCOLON@[22; 24)\n+            PATH_SEGMENT@[24; 28)\n+              NAME_REF@[24; 28)\n+                IDENT@[24; 28) \"root\"\n+        COMMA@[28; 29)\n+        WHITESPACE@[29; 30)\n+        USE_TREE@[30; 56)\n+          PATH@[30; 56)\n+            PATH@[30; 44)\n+              PATH@[30; 38)\n+                PATH@[30; 32)\n+                  PATH_SEGMENT@[30; 32)\n+                    NAME_REF@[30; 32)\n+                      IDENT@[30; 32) \"or\"\n+                COLONCOLON@[32; 34)\n+                PATH_SEGMENT@[34; 38)\n+                  NAME_REF@[34; 38)\n+                    IDENT@[34; 38) \"path\"\n+              COLONCOLON@[38; 40)\n+              PATH_SEGMENT@[40; 44)\n+                NAME_REF@[40; 44)\n+                  IDENT@[40; 44) \"from\"\n+            COLONCOLON@[44; 46)\n+            PATH_SEGMENT@[46; 56)\n+              NAME_REF@[46; 56)\n+                IDENT@[46; 56) \"crate_name\"\n+        R_CURLY@[56; 57)\n+    SEMI@[57; 58)\n+  WHITESPACE@[58; 59)\n+  COMMENT@[59; 97)\n+  WHITESPACE@[97; 98)\n+  USE_ITEM@[98; 121)\n+    USE_KW@[98; 101)\n+    WHITESPACE@[101; 102)\n+    USE_TREE@[102; 120)\n+      USE_TREE_LIST@[102; 120)\n+        L_CURLY@[102; 103)\n+        USE_TREE@[103; 119)\n+          PATH@[103; 119)\n+            PATH@[103; 113)\n+              PATH@[103; 107)\n+                PATH_SEGMENT@[103; 107)\n+                  NAME_REF@[103; 107)\n+                    IDENT@[103; 107) \"path\"\n+              COLONCOLON@[107; 109)\n+              PATH_SEGMENT@[109; 113)\n+                NAME_REF@[109; 113)\n+                  IDENT@[109; 113) \"from\"\n+            COLONCOLON@[113; 115)\n+            PATH_SEGMENT@[115; 119)\n+              NAME_REF@[115; 119)\n+                IDENT@[115; 119) \"root\"\n+        R_CURLY@[119; 120)\n+    SEMI@[120; 121)\n+  WHITESPACE@[121; 122)\n+  COMMENT@[122; 134)\n+  WHITESPACE@[134; 135)\n+  USE_ITEM@[135; 166)\n+    USE_KW@[135; 138)\n+    WHITESPACE@[138; 139)\n+    USE_TREE@[139; 165)\n+      COLONCOLON@[139; 141)\n+      USE_TREE_LIST@[141; 165)\n+        L_CURLY@[141; 142)\n+        USE_TREE@[142; 164)\n+          PATH@[142; 164)\n+            PATH@[142; 158)\n+              PATH@[142; 146)\n+                PATH_SEGMENT@[142; 146)\n+                  NAME_REF@[142; 146)\n+                    IDENT@[142; 146) \"some\"\n+              COLONCOLON@[146; 148)\n+              PATH_SEGMENT@[148; 158)\n+                NAME_REF@[148; 158)\n+                  IDENT@[148; 158) \"arbritrary\"\n+            COLONCOLON@[158; 160)\n+            PATH_SEGMENT@[160; 164)\n+              NAME_REF@[160; 164)\n+                IDENT@[160; 164) \"path\"\n+        R_CURLY@[164; 165)\n+    SEMI@[165; 166)\n+  WHITESPACE@[166; 167)\n+  COMMENT@[167; 179)\n+  WHITESPACE@[179; 180)\n+  USE_ITEM@[180; 206)\n+    USE_KW@[180; 183)\n+    WHITESPACE@[183; 184)\n+    USE_TREE@[184; 205)\n+      COLONCOLON@[184; 186)\n+      USE_TREE_LIST@[186; 205)\n+        L_CURLY@[186; 187)\n+        USE_TREE@[187; 204)\n+          USE_TREE_LIST@[187; 204)\n+            L_CURLY@[187; 188)\n+            USE_TREE@[188; 203)\n+              USE_TREE_LIST@[188; 203)\n+                L_CURLY@[188; 189)\n+                USE_TREE@[189; 202)\n+                  PATH@[189; 202)\n+                    PATH@[189; 194)\n+                      PATH_SEGMENT@[189; 194)\n+                        CRATE_KW@[189; 194)\n+                    COLONCOLON@[194; 196)\n+                    PATH_SEGMENT@[196; 202)\n+                      NAME_REF@[196; 202)\n+                        IDENT@[196; 202) \"export\"\n+                R_CURLY@[202; 203)\n+            R_CURLY@[203; 204)\n+        R_CURLY@[204; 205)\n+    SEMI@[205; 206)\n+  WHITESPACE@[206; 207)\n+  COMMENT@[207; 249)\n+  WHITESPACE@[249; 250)"}]}