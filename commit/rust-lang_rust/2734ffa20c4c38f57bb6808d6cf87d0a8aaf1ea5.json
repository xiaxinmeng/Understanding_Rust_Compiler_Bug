{"sha": "2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MzRmZmEyMGM0YzM4ZjU3YmI2ODA4ZDZjZjg3ZDBhOGFhZjFlYTU=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-07T12:34:09Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-07T12:34:09Z"}, "message": "vscode: remove logging from inlays, run fix lint issues", "tree": {"sha": "75d0f6d9053dcdabeba6dcd2e714f21b80203dc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75d0f6d9053dcdabeba6dcd2e714f21b80203dc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5", "html_url": "https://github.com/rust-lang/rust/commit/2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5/comments", "author": null, "committer": null, "parents": [{"sha": "ef52fd543f4048d36e2c37281de4bc343871a62d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef52fd543f4048d36e2c37281de4bc343871a62d", "html_url": "https://github.com/rust-lang/rust/commit/ef52fd543f4048d36e2c37281de4bc343871a62d"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "d7fabe795a1bf7822907e8ba1075d5e2cd5563e4", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=2734ffa20c4c38f57bb6808d6cf87d0a8aaf1ea5", "patch": "@@ -3,7 +3,7 @@ import * as vscode from 'vscode';\n import * as ra from './rust-analyzer-api';\n \n import { Ctx, Disposable } from './ctx';\n-import { sendRequestWithRetry, isRustDocument, RustDocument, RustEditor, log } from './util';\n+import { sendRequestWithRetry, isRustDocument, RustDocument, RustEditor } from './util';\n \n \n export function activateInlayHints(ctx: Ctx) {\n@@ -86,7 +86,8 @@ class HintsUpdater implements Disposable {\n \n         // Set up initial cache shape\n         ctx.visibleRustEditors.forEach(editor => self.sourceFiles.set(\n-            editor.document.uri.toString(), {\n+            editor.document.uri.toString(),\n+            {\n                 document: editor.document,\n                 inlaysRequest: null,\n                 cachedDecorations: null\n@@ -104,9 +105,8 @@ class HintsUpdater implements Disposable {\n         this.disposables.forEach(d => d.dispose());\n     }\n \n-    onDidChangeTextDocument({contentChanges, document}: vscode.TextDocumentChangeEvent) {\n+    onDidChangeTextDocument({ contentChanges, document }: vscode.TextDocumentChangeEvent) {\n         if (contentChanges.length === 0 || !isRustDocument(document)) return;\n-        log.debug(`[inlays]: changed text doc!`);\n         this.syncCacheAndRenderHints();\n     }\n \n@@ -126,7 +126,6 @@ class HintsUpdater implements Disposable {\n     }\n \n     onDidChangeVisibleTextEditors() {\n-        log.debug(`[inlays]: changed visible text editors`);\n         const newSourceFiles = new Map<string, RustSourceFile>();\n \n         // Rerendering all, even up-to-date editors for simplicity\n@@ -184,11 +183,7 @@ class HintsUpdater implements Disposable {\n         return decorations;\n     }\n \n-    lastReqId = 0;\n     private async fetchHints(file: RustSourceFile): Promise<null | ra.InlayHint[]> {\n-        const reqId = ++this.lastReqId;\n-\n-        log.debug(`[inlays]: ${reqId} requesting`);\n         file.inlaysRequest?.cancel();\n \n         const tokenSource = new vscode.CancellationTokenSource();\n@@ -197,18 +192,12 @@ class HintsUpdater implements Disposable {\n         const request = { textDocument: { uri: file.document.uri.toString() } };\n \n         return sendRequestWithRetry(this.ctx.client, ra.inlayHints, request, tokenSource.token)\n-            .catch(_ => {\n-                log.debug(`[inlays]: ${reqId} err`);\n-                return null;\n-            })\n+            .catch(_ => null)\n             .finally(() => {\n                 if (file.inlaysRequest === tokenSource) {\n                     file.inlaysRequest = null;\n-                    log.debug(`[inlays]: ${reqId} got response!`);\n-                } else {\n-                    log.debug(`[inlays]: ${reqId} cancelled!`);\n                 }\n-            })\n+            });\n     }\n }\n \n@@ -227,5 +216,5 @@ interface RustSourceFile {\n     */\n     cachedDecorations: null | InlaysDecorations;\n \n-    document: RustDocument\n+    document: RustDocument;\n }"}]}