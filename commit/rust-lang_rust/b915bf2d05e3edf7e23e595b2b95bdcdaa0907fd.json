{"sha": "b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MTViZjJkMDVlM2VkZjdlMjNlNTk1YjJiOTViZGNkYWEwOTA3ZmQ=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-29T13:46:55Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-29T13:46:55Z"}, "message": "SigKind -> CallableKind", "tree": {"sha": "a85b724809666a2cde3866225c04193cec567e2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a85b724809666a2cde3866225c04193cec567e2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd", "html_url": "https://github.com/rust-lang/rust/commit/b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01238a6fd7d89f97ea05d90b95d3244f1596dc93", "url": "https://api.github.com/repos/rust-lang/rust/commits/01238a6fd7d89f97ea05d90b95d3244f1596dc93", "html_url": "https://github.com/rust-lang/rust/commit/01238a6fd7d89f97ea05d90b95d3244f1596dc93"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "e21f8378d868fd43b7f476c35d15c3bce8be4db2", "filename": "crates/ra_ide_api/src/display/function_signature.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Ffunction_signature.rs?ref=b915bf2d05e3edf7e23e595b2b95bdcdaa0907fd", "patch": "@@ -13,16 +13,16 @@ use crate::{\n };\n \n #[derive(Debug)]\n-pub enum SigKind {\n+pub enum CallableKind {\n     Function,\n-    Struct,\n-    EnumVariant,\n+    StructConstructor,\n+    VariantConstructor,\n }\n \n /// Contains information about a function signature\n #[derive(Debug)]\n pub struct FunctionSignature {\n-    pub kind: SigKind,\n+    pub kind: CallableKind,\n     /// Optional visibility\n     pub visibility: Option<String>,\n     /// Name of the function\n@@ -69,7 +69,7 @@ impl FunctionSignature {\n \n         Some(\n             FunctionSignature {\n-                kind: SigKind::Struct,\n+                kind: CallableKind::StructConstructor,\n                 visibility: node.visibility().map(|n| n.syntax().text().to_string()),\n                 name: node.name().map(|n| n.text().to_string()),\n                 ret_type: node.name().map(|n| n.text().to_string()),\n@@ -111,7 +111,7 @@ impl FunctionSignature {\n \n         Some(\n             FunctionSignature {\n-                kind: SigKind::EnumVariant,\n+                kind: CallableKind::VariantConstructor,\n                 visibility: None,\n                 name: Some(name),\n                 ret_type: None,\n@@ -140,7 +140,7 @@ impl From<&'_ ast::FnDef> for FunctionSignature {\n         }\n \n         FunctionSignature {\n-            kind: SigKind::Function,\n+            kind: CallableKind::Function,\n             visibility: node.visibility().map(|n| n.syntax().text().to_string()),\n             name: node.name().map(|n| n.text().to_string()),\n             ret_type: node\n@@ -164,9 +164,9 @@ impl Display for FunctionSignature {\n \n         if let Some(name) = &self.name {\n             match self.kind {\n-                SigKind::Function => write!(f, \"fn {}\", name)?,\n-                SigKind::Struct => write!(f, \"struct {}\", name)?,\n-                SigKind::EnumVariant => write!(f, \"{}\", name)?,\n+                CallableKind::Function => write!(f, \"fn {}\", name)?,\n+                CallableKind::StructConstructor => write!(f, \"struct {}\", name)?,\n+                CallableKind::VariantConstructor => write!(f, \"{}\", name)?,\n             }\n         }\n "}]}