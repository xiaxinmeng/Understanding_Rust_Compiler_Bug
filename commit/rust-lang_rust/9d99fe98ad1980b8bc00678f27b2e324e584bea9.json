{"sha": "9d99fe98ad1980b8bc00678f27b2e324e584bea9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkOTlmZTk4YWQxOTgwYjhiYzAwNjc4ZjI3YjJlMzI0ZTU4NGJlYTk=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-12T23:09:41Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-21T22:59:40Z"}, "message": "Fix fallout in `rustdoc`.", "tree": {"sha": "1a064f562daea6ce97159dd9a11efaa8215c80f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a064f562daea6ce97159dd9a11efaa8215c80f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d99fe98ad1980b8bc00678f27b2e324e584bea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d99fe98ad1980b8bc00678f27b2e324e584bea9", "html_url": "https://github.com/rust-lang/rust/commit/9d99fe98ad1980b8bc00678f27b2e324e584bea9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d99fe98ad1980b8bc00678f27b2e324e584bea9/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "html_url": "https://github.com/rust-lang/rust/commit/c4d577be1acf333ff9c51c85fd1dd19adc46cb59"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "ad2452de33cfe8462b2a7875a1fa1bfdd346e04c", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9d99fe98ad1980b8bc00678f27b2e324e584bea9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d99fe98ad1980b8bc00678f27b2e324e584bea9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=9d99fe98ad1980b8bc00678f27b2e324e584bea9", "patch": "@@ -2513,7 +2513,7 @@ impl Clean<Vec<Item>> for doctree::Import {\n                 let remaining = if !denied {\n                     let mut remaining = vec![];\n                     for path in list {\n-                        match inline::try_inline(cx, path.node.id(), path.node.rename()) {\n+                        match inline::try_inline(cx, path.node.id, path.node.rename) {\n                             Some(items) => {\n                                 ret.extend(items);\n                             }\n@@ -2581,17 +2581,10 @@ pub struct ViewListIdent {\n \n impl Clean<ViewListIdent> for hir::PathListItem {\n     fn clean(&self, cx: &DocContext) -> ViewListIdent {\n-        match self.node {\n-            hir::PathListIdent { id, name, rename } => ViewListIdent {\n-                name: name.clean(cx),\n-                rename: rename.map(|r| r.clean(cx)),\n-                source: resolve_def(cx, id)\n-            },\n-            hir::PathListMod { id, rename } => ViewListIdent {\n-                name: \"self\".to_string(),\n-                rename: rename.map(|r| r.clean(cx)),\n-                source: resolve_def(cx, id)\n-            }\n+        ViewListIdent {\n+            name: self.node.name.clean(cx),\n+            rename: self.node.rename.map(|r| r.clean(cx)),\n+            source: resolve_def(cx, self.node.id)\n         }\n     }\n }"}, {"sha": "d2da97666af07be8b49d78b057e1ebf39d0b0f69", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d99fe98ad1980b8bc00678f27b2e324e584bea9/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d99fe98ad1980b8bc00678f27b2e324e584bea9/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=9d99fe98ad1980b8bc00678f27b2e324e584bea9", "patch": "@@ -189,7 +189,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             }\n             hir::ViewPathList(p, paths) => {\n                 let mine = paths.into_iter().filter(|path| {\n-                    !self.maybe_inline_local(path.node.id(), path.node.rename(),\n+                    !self.maybe_inline_local(path.node.id, path.node.rename,\n                                              false, om, please_inline)\n                 }).collect::<hir::HirVec<hir::PathListItem>>();\n "}]}