{"sha": "4165051073675814f09f4ef2ab5dbbb901cc10f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNjUwNTEwNzM2NzU4MTRmMDlmNGVmMmFiNWRiYmI5MDFjYzEwZjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-05T17:26:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-05T17:26:15Z"}, "message": "refine comment explaining the order of checks on deallocate", "tree": {"sha": "02d660dcb49c88dc9be5d3360702710c15511bad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02d660dcb49c88dc9be5d3360702710c15511bad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4165051073675814f09f4ef2ab5dbbb901cc10f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4165051073675814f09f4ef2ab5dbbb901cc10f4", "html_url": "https://github.com/rust-lang/rust/commit/4165051073675814f09f4ef2ab5dbbb901cc10f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4165051073675814f09f4ef2ab5dbbb901cc10f4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "440c4778fa81779bd39dd99edbc7bd42a02c7335", "url": "https://api.github.com/repos/rust-lang/rust/commits/440c4778fa81779bd39dd99edbc7bd42a02c7335", "html_url": "https://github.com/rust-lang/rust/commit/440c4778fa81779bd39dd99edbc7bd42a02c7335"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0a032891f06ff0bd27cc66bd8a19e0240f18700d", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4165051073675814f09f4ef2ab5dbbb901cc10f4/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4165051073675814f09f4ef2ab5dbbb901cc10f4/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=4165051073675814f09f4ef2ab5dbbb901cc10f4", "patch": "@@ -276,7 +276,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         }\n \n         {\n-            // Some code somewhere seems to rely on us *not* removing the allocation when we yield this kind of error.\n+            // deallocate_local in eval_context.rs relies on nothing actually having changed when this error occurs.\n             // So we do this test in advance.\n             let alloc = self.get(ptr.alloc_id)?;\n             if alloc.static_kind != StaticKind::NotStatic {"}]}