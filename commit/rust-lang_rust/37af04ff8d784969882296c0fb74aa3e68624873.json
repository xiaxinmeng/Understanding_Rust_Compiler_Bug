{"sha": "37af04ff8d784969882296c0fb74aa3e68624873", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YWYwNGZmOGQ3ODQ5Njk4ODIyOTZjMGZiNzRhYTNlNjg2MjQ4NzM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-20T23:58:55Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-27T12:51:37Z"}, "message": "Address review comments and CI failures", "tree": {"sha": "2753bf72046708e04bdba11b8ff04c7fe9083739", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2753bf72046708e04bdba11b8ff04c7fe9083739"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37af04ff8d784969882296c0fb74aa3e68624873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37af04ff8d784969882296c0fb74aa3e68624873", "html_url": "https://github.com/rust-lang/rust/commit/37af04ff8d784969882296c0fb74aa3e68624873", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37af04ff8d784969882296c0fb74aa3e68624873/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "html_url": "https://github.com/rust-lang/rust/commit/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1"}], "stats": {"total": 37, "additions": 7, "deletions": 30}, "files": [{"sha": "182dcfe4098bb439cde17334e5661b6669d5936c", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -186,7 +186,7 @@ impl<'a> base::Resolver for Resolver<'a> {\n             Ok((def, ext)) => (def, ext),\n             Err(Determinacy::Determined) if kind == MacroKind::Attr => {\n                 // Replace unresolved attributes with used inert attributes for better recovery.\n-                return Ok(Some(self.get_macro(Def::NonMacroAttr(NonMacroAttrKind::Tool))));\n+                return Ok(Some(Lrc::new(SyntaxExtension::NonMacroAttr { mark_used: true })));\n             }\n             Err(determinacy) => return Err(determinacy),\n         };"}, {"sha": "52da8a072c7511f3959ae895be5cc7d97740edc1", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -2871,6 +2871,7 @@ impl<'a> Parser<'a> {\n                 let mut err = self.fatal(&format!(\"unknown macro variable `{}`\", name));\n                 err.span_label(self.span, \"unknown macro variable\");\n                 err.emit();\n+                self.bump();\n                 return\n             }\n             token::Interpolated(ref nt) => {"}, {"sha": "e9bc2f4893e3d2fda882be8afeec3bd4b4a39f6c", "filename": "src/test/compile-fail/auxiliary/depends.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fdepends.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fdepends.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fdepends.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "previous_filename": "src/test/ui/panic-runtime/auxiliary/depends.rs"}, {"sha": "3f030c169f6410ddfa4413756170ffb09a6cc3c2", "filename": "src/test/compile-fail/auxiliary/needs-panic-runtime.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fneeds-panic-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fneeds-panic-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fneeds-panic-runtime.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "previous_filename": "src/test/ui/panic-runtime/auxiliary/needs-panic-runtime.rs"}, {"sha": "866c5b2e34bbd01071509b4eb14bbcc8a0d31ff6", "filename": "src/test/compile-fail/runtime-depend-on-needs-runtime.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fruntime-depend-on-needs-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fruntime-depend-on-needs-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fruntime-depend-on-needs-runtime.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "previous_filename": "src/test/ui/panic-runtime/runtime-depend-on-needs-runtime.rs"}, {"sha": "27e27dda5effe256ea9513fe3f5ac8c22c2a870a", "filename": "src/test/compile-fail/runtime-depend-on-needs-runtime.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fruntime-depend-on-needs-runtime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fcompile-fail%2Fruntime-depend-on-needs-runtime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fruntime-depend-on-needs-runtime.stderr?ref=37af04ff8d784969882296c0fb74aa3e68624873", "previous_filename": "src/test/ui/panic-runtime/runtime-depend-on-needs-runtime.stderr"}, {"sha": "5da54451346a54acebdc8c7c001160c81e176206", "filename": "src/test/ui/issues/issue-6596-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -2,7 +2,6 @@ macro_rules! e {\n     ($inp:ident) => (\n         $nonexistent\n         //~^ ERROR unknown macro variable `nonexistent`\n-        //~| ERROR cannot find value `nonexistent` in this scope\n     );\n }\n "}, {"sha": "2a4ece2f2425f9f272fe2c5ef7a7ae6686f0d9bc", "filename": "src/test/ui/issues/issue-6596-1.stderr", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.stderr?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -7,15 +7,5 @@ LL |         $nonexistent\n LL |     e!(foo);\n    |     -------- in this macro invocation\n \n-error[E0425]: cannot find value `nonexistent` in this scope\n-  --> $DIR/issue-6596-1.rs:14:9\n-   |\n-LL |         $nonexistent\n-   |         ^^^^^^^^^^^^ not found in this scope\n-...\n-LL |     e!(foo);\n-   |     -------- in this macro invocation\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0425`."}, {"sha": "b19700efe5ad3e988813be09da5bbf24a16198ec", "filename": "src/test/ui/issues/issue-6596-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -4,7 +4,6 @@ macro_rules! g {\n     ($inp:ident) => (\n         { $inp $nonexistent }\n         //~^ ERROR unknown macro variable `nonexistent`\n-        //~| ERROR expected one of\n     );\n }\n "}, {"sha": "3e707ba6fffeeb669e1686033b35bb1a859d2a72", "filename": "src/test/ui/issues/issue-6596-2.stderr", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -7,14 +7,4 @@ LL |         { $inp $nonexistent }\n LL |     g!(foo);\n    |     -------- in this macro invocation\n \n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `nonexistent`\n-  --> $DIR/issue-6596-2.rs:5:16\n-   |\n-LL |         { $inp $nonexistent }\n-   |                ^^^^^^^^^^^^ expected one of 8 possible tokens here\n-...\n-LL |     g!(foo);\n-   |     -------- in this macro invocation\n-\n-error: aborting due to 2 previous errors\n-\n+error: aborting due to previous error"}, {"sha": "cd752352aefcb3d978aa2503a2dc2e8257ac40b1", "filename": "src/test/ui/macros/macro-comma-behavior.core.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.core.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.core.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.core.stderr?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -44,7 +44,4 @@ error: `#[panic_handler]` function required, but not found\n \n error: language item required, but not found: `eh_personality`\n \n-error: language item required, but not found: `eh_unwind_resume`\n-\n-error: aborting due to 10 previous errors\n-\n+error: aborting due to 9 previous errors"}, {"sha": "46b93edca3ab88a0c7d2bb9e316a9545401f3ac5", "filename": "src/test/ui/macros/macro-comma-behavior.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.rs?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -3,10 +3,12 @@\n // compile-flags: -C debug_assertions=yes\n // revisions: std core\n \n+#![feature(lang_items)]\n #![cfg_attr(core, no_std)]\n \n #[cfg(std)] use std::fmt;\n #[cfg(core)] use core::fmt;\n+#[cfg(core)] #[lang = \"eh_unwind_resume\"] fn eh_unwind_resume() {}\n \n // (see documentation of the similarly-named test in run-pass)\n fn to_format_or_not_to_format() {"}, {"sha": "e56ed40e024bfd3c36a95ddb6c317b4d0ab4f05b", "filename": "src/test/ui/macros/macro-comma-behavior.std.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37af04ff8d784969882296c0fb74aa3e68624873/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.std.stderr?ref=37af04ff8d784969882296c0fb74aa3e68624873", "patch": "@@ -59,4 +59,3 @@ LL |             write!(f, \"{}\",)?;\n    |                        ^^\n \n error: aborting due to 10 previous errors\n-"}]}