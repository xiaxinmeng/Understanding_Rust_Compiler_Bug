{"sha": "bad3e080bdaa03af627abaec9dbd07d33ad272d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZDNlMDgwYmRhYTAzYWY2MjdhYmFlYzlkYmQwN2QzM2FkMjcyZDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-11T05:09:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-11T05:09:18Z"}, "message": "Auto merge of #3930 - sunjay:patch-1, r=flip1995\n\nMention that -D warnings will deny ALL warnings, not just clippy warnings\n\nIf we pass `-D warnings` to clippy, it causes the build to fail if there are *any* warnings, even the ones not generated by clippy. This isn't immediately obvious when you're looking at this as someone just setting up clippy, so people might not expect this nor know how to fix it. I've added a few sentences in the README to help anyone who runs into this.\n\nThese docs are useful for anyone setting up clippy warnings to be denied during CI, but still otherwise want rustc warnings to be allowed.\n\nI could have also changed `-D warnings` to `-D clippy::all` in the Travis configurations themselves, but I wasn't sure what you would prefer to have people use as the default.", "tree": {"sha": "a4fd14a710123b93ccbaa618b58dd88475fb2938", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4fd14a710123b93ccbaa618b58dd88475fb2938"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bad3e080bdaa03af627abaec9dbd07d33ad272d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bad3e080bdaa03af627abaec9dbd07d33ad272d7", "html_url": "https://github.com/rust-lang/rust/commit/bad3e080bdaa03af627abaec9dbd07d33ad272d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bad3e080bdaa03af627abaec9dbd07d33ad272d7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2278814c8e33573b1c870c65f5fcbe69ea20601d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2278814c8e33573b1c870c65f5fcbe69ea20601d", "html_url": "https://github.com/rust-lang/rust/commit/2278814c8e33573b1c870c65f5fcbe69ea20601d"}, {"sha": "a7bfac735390d8c78c9f08e2ba8d87ac997f9dc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7bfac735390d8c78c9f08e2ba8d87ac997f9dc9", "html_url": "https://github.com/rust-lang/rust/commit/a7bfac735390d8c78c9f08e2ba8d87ac997f9dc9"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "149520639331be729e68af4bb553c6a76b5a1d9d", "filename": "README.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bad3e080bdaa03af627abaec9dbd07d33ad272d7/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/bad3e080bdaa03af627abaec9dbd07d33ad272d7/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=bad3e080bdaa03af627abaec9dbd07d33ad272d7", "patch": "@@ -125,6 +125,11 @@ before_script:\n    # etc\n ```\n \n+Note that adding `-D warnings` will cause your build to fail if **any** warnings are found in your code.\n+That includes warnings found by rustc (e.g. `dead_code`, etc.). If you want to avoid this and only cause\n+an error for clippy warnings, use `#![deny(clippy::all)]` in your code or `-D clippy::all` on the command\n+line. (You can swap `clippy::all` with the specific lint category you are targeting.)\n+\n ## Configuration\n \n Some lints can be configured in a TOML file named `clippy.toml` or `.clippy.toml`. It contains a basic `variable = value` mapping eg."}]}