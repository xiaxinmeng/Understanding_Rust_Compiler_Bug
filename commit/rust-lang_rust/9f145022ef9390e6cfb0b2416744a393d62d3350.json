{"sha": "9f145022ef9390e6cfb0b2416744a393d62d3350", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMTQ1MDIyZWY5MzkwZTZjZmIwYjI0MTY3NDRhMzkzZDYyZDMzNTA=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-04-18T04:09:27Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-04-18T23:17:40Z"}, "message": "Avoid allocating when parsing \\u{...} literals.\n\n`char_lit` uses an allocation in order to ignore '_' chars in \\u{...}\nliterals. This patch changes it to not do that by processing the chars\nmore directly.\n\nThis improves various rustc-perf benchmark measurements by up to 6%,\nparticularly regex, futures, clap, coercions, hyper, and encoding.", "tree": {"sha": "a3cbbcba4696d6ce2a22665e2b833f6ca043cdb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3cbbcba4696d6ce2a22665e2b833f6ca043cdb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f145022ef9390e6cfb0b2416744a393d62d3350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f145022ef9390e6cfb0b2416744a393d62d3350", "html_url": "https://github.com/rust-lang/rust/commit/9f145022ef9390e6cfb0b2416744a393d62d3350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f145022ef9390e6cfb0b2416744a393d62d3350/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23561c6747b0916e852aaa2a5d04c0b0eeddc6de", "url": "https://api.github.com/repos/rust-lang/rust/commits/23561c6747b0916e852aaa2a5d04c0b0eeddc6de", "html_url": "https://github.com/rust-lang/rust/commit/23561c6747b0916e852aaa2a5d04c0b0eeddc6de"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "0397c3297db0a2e832295b1369432791c9bf123f", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9f145022ef9390e6cfb0b2416744a393d62d3350/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f145022ef9390e6cfb0b2416744a393d62d3350/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=9f145022ef9390e6cfb0b2416744a393d62d3350", "patch": "@@ -271,8 +271,16 @@ pub fn char_lit(lit: &str, diag: Option<(Span, &Handler)>) -> (char, isize) {\n         'u' => {\n             assert_eq!(lit.as_bytes()[2], b'{');\n             let idx = lit.find('}').unwrap();\n-            let s = &lit[3..idx].chars().filter(|&c| c != '_').collect::<String>();\n-            let v = u32::from_str_radix(&s, 16).unwrap();\n+\n+            // All digits and '_' are ascii, so treat each byte as a char.\n+            let mut v: u32 = 0;\n+            for c in lit[3..idx].bytes() {\n+                let c = char::from(c);\n+                if c != '_' {\n+                    let x = c.to_digit(16).unwrap();\n+                    v = v.checked_mul(16).unwrap().checked_add(x).unwrap();\n+                }\n+            }\n             let c = char::from_u32(v).unwrap_or_else(|| {\n                 if let Some((span, diag)) = diag {\n                     let mut diag = diag.struct_span_err(span, \"invalid unicode character escape\");"}]}