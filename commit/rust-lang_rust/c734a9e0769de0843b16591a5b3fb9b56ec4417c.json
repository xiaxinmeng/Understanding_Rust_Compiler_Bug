{"sha": "c734a9e0769de0843b16591a5b3fb9b56ec4417c", "node_id": "C_kwDOAAsO6NoAKGM3MzRhOWUwNzY5ZGUwODQzYjE2NTkxYTViM2ZiOWI1NmVjNDQxN2M", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-25T05:54:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-25T05:54:13Z"}, "message": "Rollup merge of #90127 - JohnTitor:fix-90113, r=estebank\n\nDo not mention a reexported item if it's private\n\nFixes #90113\nThe _actual_ regression was introduced in #73652, then #88838 made it worse. This fixes the issue by not counting such an import as a candidate.", "tree": {"sha": "6552a41736d2b15580796eba011a19dcb7f5e0a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6552a41736d2b15580796eba011a19dcb7f5e0a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c734a9e0769de0843b16591a5b3fb9b56ec4417c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhdkaFCRBK7hj4Ov3rIwAAaUEIAJnw9t2ZYgp0vniCde/lRAVX\nTjYI4IQY0jppsyLctdn0GtDBWqH029NpGJxC7Osm/FwHTl9gx1t7Exq1qaHjafAR\nSbLaA048jp0vDOnz1JykqcPZieetooowen6o2QtQmyX+/eaB6tXimywJWztNHb/f\n3tE0bu5+HkorLuNFRSiH5XR4jdFv5uBVe/ol6pwG5hYKjXMLl0ga9u1Aq9r7K9u5\n88GWy2Om33NnaZIhwVloH+QtaaprTZeOFvTDMVeC/bfe5yPGDREShQJtBMCG2t5S\nhlMtuj0xn1CtrhhKlxB2183JSiPkvbGylycXRCuNWqcRERDdcw37nyFnrMJVwJQ=\n=35UR\n-----END PGP SIGNATURE-----\n", "payload": "tree 6552a41736d2b15580796eba011a19dcb7f5e0a1\nparent b25172b5048dce325e44b2e1c381acfe3815f957\nparent 3b2dd702fcdd70b81f2e6d217da3c715afc31012\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635141253 +0200\ncommitter GitHub <noreply@github.com> 1635141253 +0200\n\nRollup merge of #90127 - JohnTitor:fix-90113, r=estebank\n\nDo not mention a reexported item if it's private\n\nFixes #90113\nThe _actual_ regression was introduced in #73652, then #88838 made it worse. This fixes the issue by not counting such an import as a candidate.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c734a9e0769de0843b16591a5b3fb9b56ec4417c", "html_url": "https://github.com/rust-lang/rust/commit/c734a9e0769de0843b16591a5b3fb9b56ec4417c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c734a9e0769de0843b16591a5b3fb9b56ec4417c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b25172b5048dce325e44b2e1c381acfe3815f957", "url": "https://api.github.com/repos/rust-lang/rust/commits/b25172b5048dce325e44b2e1c381acfe3815f957", "html_url": "https://github.com/rust-lang/rust/commit/b25172b5048dce325e44b2e1c381acfe3815f957"}, {"sha": "3b2dd702fcdd70b81f2e6d217da3c715afc31012", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b2dd702fcdd70b81f2e6d217da3c715afc31012", "html_url": "https://github.com/rust-lang/rust/commit/3b2dd702fcdd70b81f2e6d217da3c715afc31012"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "e599bf4cab0093226c7fe65d33468ef68d214135", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c734a9e0769de0843b16591a5b3fb9b56ec4417c/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c734a9e0769de0843b16591a5b3fb9b56ec4417c/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=c734a9e0769de0843b16591a5b3fb9b56ec4417c", "patch": "@@ -829,6 +829,15 @@ impl<'a> Resolver<'a> {\n                     return;\n                 }\n \n+                // #90113: Do not count an inaccessible reexported item as a candidate.\n+                if let NameBindingKind::Import { binding, .. } = name_binding.kind {\n+                    if this.is_accessible_from(binding.vis, parent_scope.module)\n+                        && !this.is_accessible_from(name_binding.vis, parent_scope.module)\n+                    {\n+                        return;\n+                    }\n+                }\n+\n                 // collect results based on the filter function\n                 // avoid suggesting anything from the same module in which we are resolving\n                 if ident.name == lookup_ident.name"}, {"sha": "f6658b45ed1a62629fb8d293100c63cc5a645a67", "filename": "src/test/ui/resolve/issue-90113.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c734a9e0769de0843b16591a5b3fb9b56ec4417c/src%2Ftest%2Fui%2Fresolve%2Fissue-90113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c734a9e0769de0843b16591a5b3fb9b56ec4417c/src%2Ftest%2Fui%2Fresolve%2Fissue-90113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-90113.rs?ref=c734a9e0769de0843b16591a5b3fb9b56ec4417c", "patch": "@@ -0,0 +1,21 @@\n+mod list {\n+    pub use self::List::Cons;\n+\n+    pub enum List<T> {\n+        Cons(T, Box<List<T>>),\n+    }\n+}\n+\n+mod alias {\n+    use crate::list::List;\n+\n+    pub type Foo = List<String>;\n+}\n+\n+fn foo(l: crate::alias::Foo) {\n+    match l {\n+        Cons(..) => {} //~ ERROR: cannot find tuple struct or tuple variant `Cons` in this scope\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "1b78720571c652e4821cd0c3820e53da42225953", "filename": "src/test/ui/resolve/issue-90113.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c734a9e0769de0843b16591a5b3fb9b56ec4417c/src%2Ftest%2Fui%2Fresolve%2Fissue-90113.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c734a9e0769de0843b16591a5b3fb9b56ec4417c/src%2Ftest%2Fui%2Fresolve%2Fissue-90113.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-90113.stderr?ref=c734a9e0769de0843b16591a5b3fb9b56ec4417c", "patch": "@@ -0,0 +1,14 @@\n+error[E0531]: cannot find tuple struct or tuple variant `Cons` in this scope\n+  --> $DIR/issue-90113.rs:17:9\n+   |\n+LL |         Cons(..) => {}\n+   |         ^^^^ not found in this scope\n+   |\n+help: consider importing this tuple variant\n+   |\n+LL | use list::List::Cons;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0531`."}]}