{"sha": "b2777aba757dd92042932d79309132bd953e130d", "node_id": "C_kwDOAAsO6NoAKGIyNzc3YWJhNzU3ZGQ5MjA0MjkzMmQ3OTMwOTEzMmJkOTUzZTEzMGQ", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-06-06T16:39:58Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-07-06T14:53:28Z"}, "message": "End-to-end regression test for 97463.\n\nincorporated review feedback, with comment explaining why this is calling CC\ninstead of COMPILE_OBJ or NATIVE_STATICLIB. As drive-by, removed some other\nunnecessary commands from the recipe.", "tree": {"sha": "4a9eb993b54ad85f193063777c6818986ca648ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a9eb993b54ad85f193063777c6818986ca648ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2777aba757dd92042932d79309132bd953e130d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2777aba757dd92042932d79309132bd953e130d", "html_url": "https://github.com/rust-lang/rust/commit/b2777aba757dd92042932d79309132bd953e130d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2777aba757dd92042932d79309132bd953e130d/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7913b8543e90602e98092f23be31259841671ff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7913b8543e90602e98092f23be31259841671ff1", "html_url": "https://github.com/rust-lang/rust/commit/7913b8543e90602e98092f23be31259841671ff1"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "b3db6bcb3f636a73a206b8039f7c70c6950bbc52", "filename": "src/test/run-make-fulldeps/issue-97463-abi-param-passing/Makefile", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b2777aba757dd92042932d79309132bd953e130d/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b2777aba757dd92042932d79309132bd953e130d/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2FMakefile?ref=b2777aba757dd92042932d79309132bd953e130d", "patch": "@@ -0,0 +1,12 @@\n+-include ../tools.mk\n+\n+# The issue exercised by this test, rust-lang/rust#97463, explicitly needs `-O`\n+# flags (like `-O3`) to reproduce. Thus, we call $(CC) instead of nicer\n+# alternatives provided by tools.mk like using `COMPILE_OBJ` or using a\n+# `NATIVE_STATICLIB` dependency.\n+\n+all:\n+\t$(CC) -c -O3 -o $(TMPDIR)/bad.o bad.c\n+\t$(AR) rcs $(TMPDIR)/libbad.a $(TMPDIR)/bad.o\n+\t$(RUSTC) param_passing.rs -L$(TMPDIR) -lbad -C opt-level=3\n+\t$(call RUN,param_passing)"}, {"sha": "013314ab20dc40409762e5c983e24cbf5712107b", "filename": "src/test/run-make-fulldeps/issue-97463-abi-param-passing/bad.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b2777aba757dd92042932d79309132bd953e130d/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2Fbad.c", "raw_url": "https://github.com/rust-lang/rust/raw/b2777aba757dd92042932d79309132bd953e130d/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2Fbad.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2Fbad.c?ref=b2777aba757dd92042932d79309132bd953e130d", "patch": "@@ -0,0 +1,24 @@\n+#include <stdlib.h>\n+#include <stdint.h>\n+#include <stdio.h>\n+\n+\n+struct bloc {\n+    uint16_t a;\n+    uint16_t b;\n+    uint16_t c;\n+};\n+\n+uint16_t c_read_value(uint32_t a, uint32_t b, uint32_t c) {\n+    struct bloc *data = malloc(sizeof(struct bloc));\n+\n+    data->a = a & 0xFFFF;\n+    data->b = b & 0xFFFF;\n+    data->c = c & 0xFFFF;\n+\n+    printf(\"C struct: a = %u, b = %u, c = %u\\n\",\n+        (unsigned) data->a, (unsigned) data->b, (unsigned) data->c);\n+    printf(\"C function returns %u\\n\", (unsigned) data->b);\n+\n+    return data->b; /* leak data */\n+}"}, {"sha": "b4744a3b96e77f3a5466a3a48f2c900bff7d08f6", "filename": "src/test/run-make-fulldeps/issue-97463-abi-param-passing/param_passing.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b2777aba757dd92042932d79309132bd953e130d/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2Fparam_passing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2777aba757dd92042932d79309132bd953e130d/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2Fparam_passing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-97463-abi-param-passing%2Fparam_passing.rs?ref=b2777aba757dd92042932d79309132bd953e130d", "patch": "@@ -0,0 +1,38 @@\n+// NOTE: Exposing the bug encoded in this test is sensitive to\n+// LLVM optimization choices. See additional note below for an\n+// example.\n+\n+#[link(name = \"bad\")]\n+extern \"C\" {\n+    pub fn c_read_value(a: u32, b: u32, c: u32) -> u16;\n+}\n+\n+fn main() {\n+    const C1: usize = 0x327b23c6;\n+    const C2: usize = C1 & 0xFFFF;\n+\n+    let r1: usize = 0x0;\n+    let r2: usize = C1;\n+    let r3: usize = 0x0;\n+    let value: u16 = unsafe { c_read_value(r1 as u32, r2 as u32, r3 as u32) };\n+\n+    // NOTE: as an example of the sensitivity of this test to optimization choices,\n+    // uncommenting this block of code makes the bug go away on pnkfeix's machine.\n+    // (But observing via `dbg!` doesn't hide the bug. At least sometimes.)\n+    /*\n+    println!(\"{}\", value);\n+    println!(\"{}\", value as usize);\n+    println!(\"{}\", usize::from(value));\n+    println!(\"{}\", (value as usize) & 0xFFFF);\n+     */\n+\n+    let d1 = value;\n+    let d2 = value as usize;\n+    let d3 = usize::from(value);\n+    let d4 = (value as usize) & 0xFFFF;\n+\n+    let d = (&d1, &d2, &d3, &d4);\n+    let d_ = (d1, d2, d3, d4);\n+\n+    assert_eq!(((&(C2 as u16), &C2, &C2, &C2), (C2 as u16, C2, C2, C2)), (d, d_));\n+}"}]}