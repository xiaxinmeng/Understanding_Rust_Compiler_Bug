{"sha": "edf1cc3582a842837d64fa6ec08df00c028521f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZjFjYzM1ODJhODQyODM3ZDY0ZmE2ZWMwOGRmMDBjMDI4NTIxZjk=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-09-25T14:00:43Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-09-25T14:21:16Z"}, "message": "parse impl type", "tree": {"sha": "822401b43f30102651165ce1057d31ac06604a00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/822401b43f30102651165ce1057d31ac06604a00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edf1cc3582a842837d64fa6ec08df00c028521f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edf1cc3582a842837d64fa6ec08df00c028521f9", "html_url": "https://github.com/rust-lang/rust/commit/edf1cc3582a842837d64fa6ec08df00c028521f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edf1cc3582a842837d64fa6ec08df00c028521f9/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cacb32d88aa27b8e671173571325756890941b06", "url": "https://api.github.com/repos/rust-lang/rust/commits/cacb32d88aa27b8e671173571325756890941b06", "html_url": "https://github.com/rust-lang/rust/commit/cacb32d88aa27b8e671173571325756890941b06"}], "stats": {"total": 101, "additions": 44, "deletions": 57}, "files": [{"sha": "62ab877fce1f3c604b9dda22ff47e8fcdde56373", "filename": "crates/ra_syntax/src/grammar/items/traits.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/edf1cc3582a842837d64fa6ec08df00c028521f9/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf1cc3582a842837d64fa6ec08df00c028521f9/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=edf1cc3582a842837d64fa6ec08df00c028521f9", "patch": "@@ -54,16 +54,8 @@ pub(super) fn impl_item(p: &mut Parser) {\n \n     // test impl_item_neg\n     // impl !Send for X {}\n-    if p.at(IMPL_KW) {\n-        p.error(\"expected type\");\n-    } else {\n-        p.eat(EXCL);\n-        if p.at(IMPL_KW) {\n-            p.error(\"expected type\");\n-        } else {\n-            types::type_(p);\n-        }\n-    }\n+    p.eat(EXCL);\n+    impl_type(p);\n     if p.eat(FOR_KW) {\n         types::type_(p);\n     }\n@@ -123,3 +115,17 @@ fn choose_type_params_over_qpath(p: &Parser) -> bool {\n     (p.nth(1) == LIFETIME || p.nth(1) == IDENT)\n         && (p.nth(2) == R_ANGLE || p.nth(2) == COMMA || p.nth(2) == COLON || p.nth(2) == EQ)\n }\n+\n+// impl Type {}\n+//      ^^^^\n+// impl Trait for T {}\n+//      ^^^^^\n+pub(crate) fn impl_type(p: &mut Parser) {\n+    if p.at(IMPL_KW) {\n+        p.error(\"expected trait or type\");\n+        return;\n+    }\n+    types::type_(p);\n+}\n+\n+"}, {"sha": "eac922109b8091a97a64a4a374234bf93b0f134f", "filename": "crates/ra_syntax/tests/data/parser/err/0026_imp_recovery.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/edf1cc3582a842837d64fa6ec08df00c028521f9/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf1cc3582a842837d64fa6ec08df00c028521f9/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs?ref=edf1cc3582a842837d64fa6ec08df00c028521f9", "patch": "@@ -1,4 +1,3 @@\n impl<T: Clone>\n-impl<T:Clone>\n-!impl<T> OnceCell<T> {\n+impl<T> OnceCell<T> {\n }"}, {"sha": "60337d6de17f948d516eb3a701c4da2ffe5021f2", "filename": "crates/ra_syntax/tests/data/parser/err/0026_imp_recovery.txt", "status": "modified", "additions": 27, "deletions": 45, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/edf1cc3582a842837d64fa6ec08df00c028521f9/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/edf1cc3582a842837d64fa6ec08df00c028521f9/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt?ref=edf1cc3582a842837d64fa6ec08df00c028521f9", "patch": "@@ -1,4 +1,4 @@\n-ROOT@[0; 54)\n+ROOT@[0; 39)\n   IMPL_ITEM@[0; 14)\n     IMPL_KW@[0; 4)\n     TYPE_PARAM_LIST@[4; 14)\n@@ -14,53 +14,35 @@ ROOT@[0; 54)\n               NAME_REF@[8; 13)\n                 IDENT@[8; 13) \"Clone\"\n       R_ANGLE@[13; 14)\n-      err: `expected type`\n+      err: `expected trait or type`\n       err: `expected `{``\n   WHITESPACE@[14; 15)\n-  IMPL_ITEM@[15; 30)\n+  IMPL_ITEM@[15; 38)\n     IMPL_KW@[15; 19)\n-    TYPE_PARAM_LIST@[19; 28)\n+    TYPE_PARAM_LIST@[19; 22)\n       L_ANGLE@[19; 20)\n-      TYPE_PARAM@[20; 27)\n+      TYPE_PARAM@[20; 21)\n         NAME@[20; 21)\n           IDENT@[20; 21) \"T\"\n-        COLON@[21; 22)\n-        PATH_TYPE@[22; 27)\n-          PATH@[22; 27)\n-            PATH_SEGMENT@[22; 27)\n-              NAME_REF@[22; 27)\n-                IDENT@[22; 27) \"Clone\"\n-      R_ANGLE@[27; 28)\n-    WHITESPACE@[28; 29)\n-    EXCL@[29; 30)\n-    err: `expected type`\n-    err: `expected `{``\n-  IMPL_ITEM@[30; 53)\n-    IMPL_KW@[30; 34)\n-    TYPE_PARAM_LIST@[34; 37)\n-      L_ANGLE@[34; 35)\n-      TYPE_PARAM@[35; 36)\n-        NAME@[35; 36)\n-          IDENT@[35; 36) \"T\"\n-      R_ANGLE@[36; 37)\n-    WHITESPACE@[37; 38)\n-    PATH_TYPE@[38; 49)\n-      PATH@[38; 49)\n-        PATH_SEGMENT@[38; 49)\n-          NAME_REF@[38; 46)\n-            IDENT@[38; 46) \"OnceCell\"\n-          TYPE_ARG_LIST@[46; 49)\n-            L_ANGLE@[46; 47)\n-            TYPE_ARG@[47; 48)\n-              PATH_TYPE@[47; 48)\n-                PATH@[47; 48)\n-                  PATH_SEGMENT@[47; 48)\n-                    NAME_REF@[47; 48)\n-                      IDENT@[47; 48) \"T\"\n-            R_ANGLE@[48; 49)\n-    WHITESPACE@[49; 50)\n-    ITEM_LIST@[50; 53)\n-      L_CURLY@[50; 51)\n-      WHITESPACE@[51; 52)\n-      R_CURLY@[52; 53)\n-  WHITESPACE@[53; 54)\n+      R_ANGLE@[21; 22)\n+    WHITESPACE@[22; 23)\n+    PATH_TYPE@[23; 34)\n+      PATH@[23; 34)\n+        PATH_SEGMENT@[23; 34)\n+          NAME_REF@[23; 31)\n+            IDENT@[23; 31) \"OnceCell\"\n+          TYPE_ARG_LIST@[31; 34)\n+            L_ANGLE@[31; 32)\n+            TYPE_ARG@[32; 33)\n+              PATH_TYPE@[32; 33)\n+                PATH@[32; 33)\n+                  PATH_SEGMENT@[32; 33)\n+                    NAME_REF@[32; 33)\n+                      IDENT@[32; 33) \"T\"\n+            R_ANGLE@[33; 34)\n+    WHITESPACE@[34; 35)\n+    ITEM_LIST@[35; 38)\n+      L_CURLY@[35; 36)\n+      WHITESPACE@[36; 37)\n+      R_CURLY@[37; 38)\n+  WHITESPACE@[38; 39)"}]}