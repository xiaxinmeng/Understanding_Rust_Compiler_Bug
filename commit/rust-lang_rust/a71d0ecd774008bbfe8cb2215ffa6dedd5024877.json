{"sha": "a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MWQwZWNkNzc0MDA4YmJmZThjYjIyMTVmZmE2ZGVkZDUwMjQ4Nzc=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-04-23T21:16:50Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-04-23T21:16:50Z"}, "message": "Merge #1201\n\n1201: Goto Type Definition for ADTs r=matklad a=kjeremy\n\nVery basic go to type definition\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "a14b7ac27dad547fd5832d29a785f01cbba2da91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a14b7ac27dad547fd5832d29a785f01cbba2da91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "html_url": "https://github.com/rust-lang/rust/commit/a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "a094d5c621e44ff78dce953c0cae7cfba4b2840e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a094d5c621e44ff78dce953c0cae7cfba4b2840e", "html_url": "https://github.com/rust-lang/rust/commit/a094d5c621e44ff78dce953c0cae7cfba4b2840e"}, {"sha": "9d25e5dea4a24272bd891c68e02309cc69792a07", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d25e5dea4a24272bd891c68e02309cc69792a07", "html_url": "https://github.com/rust-lang/rust/commit/9d25e5dea4a24272bd891c68e02309cc69792a07"}], "stats": {"total": 113, "additions": 110, "deletions": 3}, "files": [{"sha": "de2b9d3c3764e0ea01a04d048097c7992aa9a0a6", "filename": "crates/ra_ide_api/src/goto_type_definition.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_ide_api%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_ide_api%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_type_definition.rs?ref=a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "patch": "@@ -0,0 +1,66 @@\n+use ra_db::SourceDatabase;\n+use ra_syntax::{\n+    AstNode, ast,\n+    algo::find_token_at_offset\n+};\n+\n+use crate::{FilePosition, NavigationTarget, db::RootDatabase, RangeInfo};\n+\n+pub(crate) fn goto_type_definition(\n+    db: &RootDatabase,\n+    position: FilePosition,\n+) -> Option<RangeInfo<Vec<NavigationTarget>>> {\n+    let file = db.parse(position.file_id);\n+\n+    let node = find_token_at_offset(file.syntax(), position.offset).find_map(|token| {\n+        token\n+            .parent()\n+            .ancestors()\n+            .find(|n| ast::Expr::cast(*n).is_some() || ast::Pat::cast(*n).is_some())\n+    })?;\n+\n+    let analyzer = hir::SourceAnalyzer::new(db, position.file_id, node, None);\n+\n+    let ty: hir::Ty = if let Some(ty) = ast::Expr::cast(node).and_then(|e| analyzer.type_of(db, e))\n+    {\n+        ty\n+    } else if let Some(ty) = ast::Pat::cast(node).and_then(|p| analyzer.type_of_pat(db, p)) {\n+        ty\n+    } else {\n+        return None;\n+    };\n+\n+    let (adt_def, _) = ty.as_adt()?;\n+    let nav = NavigationTarget::from_adt_def(db, adt_def);\n+\n+    Some(RangeInfo::new(node.range(), vec![nav]))\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::mock_analysis::analysis_and_position;\n+\n+    fn check_goto(fixture: &str, expected: &str) {\n+        let (analysis, pos) = analysis_and_position(fixture);\n+\n+        let mut navs = analysis.goto_type_definition(pos).unwrap().unwrap().info;\n+        assert_eq!(navs.len(), 1);\n+        let nav = navs.pop().unwrap();\n+        nav.assert_match(expected);\n+    }\n+\n+    #[test]\n+    fn goto_type_definition_works_simple() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            struct Foo;\n+            fn foo() {\n+                let f: Foo;\n+                f<|>\n+            }\n+            \",\n+            \"Foo STRUCT_DEF FileId(1) [0; 11) [7; 10)\",\n+        );\n+    }\n+}"}, {"sha": "d4be8bd6c1d78c51cc4fa8f86a6ddd5e16fc8a1c", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "patch": "@@ -19,6 +19,7 @@ mod status;\n mod completion;\n mod runnables;\n mod goto_definition;\n+mod goto_type_definition;\n mod extend_selection;\n mod hover;\n mod call_info;\n@@ -416,6 +417,13 @@ impl Analysis {\n         self.with_db(|db| impls::goto_implementation(db, position))\n     }\n \n+    pub fn goto_type_definition(\n+        &self,\n+        position: FilePosition,\n+    ) -> Cancelable<Option<RangeInfo<Vec<NavigationTarget>>>> {\n+        self.with_db(|db| goto_type_definition::goto_type_definition(db, position))\n+    }\n+\n     /// Finds all usages of the reference at point.\n     pub fn find_all_refs(\n         &self,"}, {"sha": "9095bee894eea8bcad114e8b5a4097c65ab4be0e", "filename": "crates/ra_lsp_server/src/caps.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_lsp_server%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_lsp_server%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcaps.rs?ref=a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "patch": "@@ -2,7 +2,7 @@ use lsp_types::{\n     CodeActionProviderCapability, CodeLensOptions, CompletionOptions, DocumentOnTypeFormattingOptions,\n     ExecuteCommandOptions, FoldingRangeProviderCapability, RenameOptions, RenameProviderCapability,\n     ServerCapabilities, SignatureHelpOptions, TextDocumentSyncCapability, TextDocumentSyncKind,\n-    TextDocumentSyncOptions, ImplementationProviderCapability, GenericCapability,\n+    TextDocumentSyncOptions, ImplementationProviderCapability, GenericCapability, TypeDefinitionProviderCapability\n };\n \n pub fn server_capabilities() -> ServerCapabilities {\n@@ -23,7 +23,7 @@ pub fn server_capabilities() -> ServerCapabilities {\n             trigger_characters: Some(vec![\"(\".to_string(), \",\".to_string(), \")\".to_string()]),\n         }),\n         definition_provider: Some(true),\n-        type_definition_provider: None,\n+        type_definition_provider: Some(TypeDefinitionProviderCapability::Simple(true)),\n         implementation_provider: Some(ImplementationProviderCapability::Simple(true)),\n         references_provider: Some(true),\n         document_highlight_provider: Some(true),"}, {"sha": "87b4e3ac2473778db87f58ed5bf0ef88b9cd7400", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "patch": "@@ -306,6 +306,7 @@ fn on_request(\n         .on::<req::WorkspaceSymbol>(handlers::handle_workspace_symbol)?\n         .on::<req::GotoDefinition>(handlers::handle_goto_definition)?\n         .on::<req::GotoImplementation>(handlers::handle_goto_implementation)?\n+        .on::<req::GotoTypeDefinition>(handlers::handle_goto_type_definition)?\n         .on::<req::ParentModule>(handlers::handle_parent_module)?\n         .on::<req::Runnables>(handlers::handle_runnables)?\n         .on::<req::DecorationsRequest>(handlers::handle_decorations)?"}, {"sha": "23802e5e170a05c87baf394dbaab9ec28da69531", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "patch": "@@ -288,6 +288,26 @@ pub fn handle_goto_implementation(\n     Ok(Some(req::GotoDefinitionResponse::Link(res)))\n }\n \n+pub fn handle_goto_type_definition(\n+    world: ServerWorld,\n+    params: req::TextDocumentPositionParams,\n+) -> Result<Option<req::GotoTypeDefinitionResponse>> {\n+    let position = params.try_conv_with(&world)?;\n+    let line_index = world.analysis().file_line_index(position.file_id);\n+    let nav_info = match world.analysis().goto_type_definition(position)? {\n+        None => return Ok(None),\n+        Some(it) => it,\n+    };\n+    let nav_range = nav_info.range;\n+    let res = nav_info\n+        .info\n+        .into_iter()\n+        .map(|nav| RangeInfo::new(nav_range, nav))\n+        .map(|nav| to_location_link(&nav, &world, &line_index))\n+        .collect::<Result<Vec<_>>>()?;\n+    Ok(Some(req::GotoDefinitionResponse::Link(res)))\n+}\n+\n pub fn handle_parent_module(\n     world: ServerWorld,\n     params: req::TextDocumentPositionParams,"}, {"sha": "28bae59bb10c46aaf59dbc62bf8090ff788596e1", "filename": "docs/dev/lsp-features.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/docs%2Fdev%2Flsp-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/docs%2Fdev%2Flsp-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-features.md?ref=a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "patch": "@@ -46,7 +46,7 @@ This list documents LSP features, supported by rust-analyzer.\n  - trigger characters: `(`,  `,`,  `)`\n - [ ] [textDocument/declaration](https://microsoft.github.io/language-server-protocol/specification#textDocument_declaration)\n - [x] [textDocument/definition](https://microsoft.github.io/language-server-protocol/specification#textDocument_definition)\n-- [ ] [textDocument/typeDefinition](https://microsoft.github.io/language-server-protocol/specification#textDocument_typeDefinition)\n+- [x] [textDocument/typeDefinition](https://microsoft.github.io/language-server-protocol/specification#textDocument_typeDefinition)\n - [x] [textDocument/implementation](https://microsoft.github.io/language-server-protocol/specification#textDocument_implementation)\n - [x] [textDocument/references](https://microsoft.github.io/language-server-protocol/specification#textDocument_references)\n - [x] [textDocument/documentHighlight](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentHighlight)"}, {"sha": "cbfc491b24585d02612a0bac7ad4abecffa5c083", "filename": "docs/user/features.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/docs%2Fuser%2Ffeatures.md", "raw_url": "https://github.com/rust-lang/rust/raw/a71d0ecd774008bbfe8cb2215ffa6dedd5024877/docs%2Fuser%2Ffeatures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Ffeatures.md?ref=a71d0ecd774008bbfe8cb2215ffa6dedd5024877", "patch": "@@ -42,6 +42,18 @@ is a relatively new feature of LSP:\n https://github.com/Microsoft/language-server-protocol/issues/613, check your\n editor's LSP library to see if this feature is supported.\n \n+### Go to Definition\n+\n+Navigates to the definition of an identifier.\n+\n+### Go to Implementation\n+\n+Navigates to the impl block of structs, enums or traits. Also implemented as a code lens.\n+\n+### Go to Type Defintion\n+\n+Navigates to the type of an identifier.\n+\n ### Commands <kbd>ctrl+shift+p</kbd>\n \n #### Run"}]}