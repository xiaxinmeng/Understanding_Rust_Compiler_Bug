{"sha": "8bea3627cb6f4c9378908599a146e8896034d793", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZWEzNjI3Y2I2ZjRjOTM3ODkwODU5OWExNDZlODg5NjAzNGQ3OTM=", "commit": {"author": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-05-26T02:25:42Z"}, "committer": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-05-26T02:25:42Z"}, "message": "replace sum() with horizontal_sum()", "tree": {"sha": "5a2e812ea237a54e476925a3c1fd752076b7cc3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a2e812ea237a54e476925a3c1fd752076b7cc3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bea3627cb6f4c9378908599a146e8896034d793", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bea3627cb6f4c9378908599a146e8896034d793", "html_url": "https://github.com/rust-lang/rust/commit/8bea3627cb6f4c9378908599a146e8896034d793", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bea3627cb6f4c9378908599a146e8896034d793/comments", "author": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab6af37f8f9ba27df1cf24789a7c3f50bf3005cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab6af37f8f9ba27df1cf24789a7c3f50bf3005cf", "html_url": "https://github.com/rust-lang/rust/commit/ab6af37f8f9ba27df1cf24789a7c3f50bf3005cf"}], "stats": {"total": 56, "additions": 27, "deletions": 29}, "files": [{"sha": "93d4c902a4d0162a983d62ebea51e140137a66da", "filename": "crates/core_simd/examples/nbody.rs", "status": "modified", "additions": 27, "deletions": 29, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/8bea3627cb6f4c9378908599a146e8896034d793/crates%2Fcore_simd%2Fexamples%2Fnbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bea3627cb6f4c9378908599a146e8896034d793/crates%2Fcore_simd%2Fexamples%2Fnbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fexamples%2Fnbody.rs?ref=8bea3627cb6f4c9378908599a146e8896034d793", "patch": "@@ -5,87 +5,85 @@ use std::f64::consts::PI;\n const SOLAR_MASS: f64 = 4.0 * PI * PI;\n const DAYS_PER_YEAR: f64 = 365.24;\n \n-#[derive(Debug)]\n-#[repr(simd)]\n+#[derive(Debug, Clone, Copy)]\n pub struct Body {\n-    pub x: Simdf64([f64, 4]),\n-    pub v: Simdf64([f64, 4]),\n+    pub x: f64x4,\n+    pub v: f64x4,\n     pub mass: f64,\n }\n \n-// Translation attempt is this ^^^ far\n-//\n+// translation up to here\n const N_BODIES: usize = 5;\n #[allow(clippy::unreadable_literal)]\n const BODIES: [Body; N_BODIES] = [\n     // sun:\n     Body {\n-        x: f64x4::new(0., 0., 0., 0.),\n-        v: f64x4::new(0., 0., 0., 0.),\n+        x: f64x4::from_array([0., 0., 0., 0.]),\n+        v: f64x4::from_array([0., 0., 0., 0.]),\n         mass: SOLAR_MASS,\n     },\n     // jupiter:\n     Body {\n-        x: f64x4::new(\n+        x: f64x4::from_array([\n             4.84143144246472090e+00,\n             -1.16032004402742839e+00,\n             -1.03622044471123109e-01,\n             0.,\n-        ),\n-        v: f64x4::new(\n+        ]),\n+        v: f64x4::from_array([\n             1.66007664274403694e-03 * DAYS_PER_YEAR,\n             7.69901118419740425e-03 * DAYS_PER_YEAR,\n             -6.90460016972063023e-05 * DAYS_PER_YEAR,\n             0.,\n-        ),\n+        ]),\n         mass: 9.54791938424326609e-04 * SOLAR_MASS,\n     },\n     // saturn:\n     Body {\n-        x: f64x4::new(\n+        x: f64x4::from_array([\n             8.34336671824457987e+00,\n             4.12479856412430479e+00,\n             -4.03523417114321381e-01,\n             0.,\n-        ),\n-        v: f64x4::new(\n+        ]),\n+        v: f64x4::from_array([\n             -2.76742510726862411e-03 * DAYS_PER_YEAR,\n             4.99852801234917238e-03 * DAYS_PER_YEAR,\n             2.30417297573763929e-05 * DAYS_PER_YEAR,\n             0.,\n-        ),\n+        ]),\n         mass: 2.85885980666130812e-04 * SOLAR_MASS,\n     },\n     // uranus:\n     Body {\n-        x: f64x4::new(\n+        x: f64x4::from_array([\n             1.28943695621391310e+01,\n             -1.51111514016986312e+01,\n             -2.23307578892655734e-01,\n             0.,\n-        ),\n-        v: f64x4::new(\n+        ]),\n+        v: f64x4::from_array([\n             2.96460137564761618e-03 * DAYS_PER_YEAR,\n             2.37847173959480950e-03 * DAYS_PER_YEAR,\n             -2.96589568540237556e-05 * DAYS_PER_YEAR,\n             0.,\n-        ),\n+        ]),\n         mass: 4.36624404335156298e-05 * SOLAR_MASS,\n     },\n     // neptune:\n     Body {\n-        x: f64x4::new(\n+        x: f64x4::from_array([\n             1.53796971148509165e+01,\n             -2.59193146099879641e+01,\n             1.79258772950371181e-01,\n             0.,\n-        ),\n-        v: f64x4::new(\n+        ]),\n+        v: f64x4::from_array([\n             2.68067772490389322e-03 * DAYS_PER_YEAR,\n             1.62824170038242295e-03 * DAYS_PER_YEAR,\n             -9.51592254519715870e-05 * DAYS_PER_YEAR,\n             0.,\n-        ),\n+        ]),\n         mass: 5.15138902046611451e-05 * SOLAR_MASS,\n     },\n ];\n@@ -103,10 +101,10 @@ pub fn energy(bodies: &[Body; N_BODIES]) -> f64 {\n     let mut e = 0.;\n     for i in 0..N_BODIES {\n         let bi = &bodies[i];\n-        e += bi.mass * (bi.v * bi.v).sum() * 0.5;\n+        e += bi.mass * (bi.v * bi.v).horizontal_sum() * 0.5;\n         for bj in bodies.iter().take(N_BODIES).skip(i + 1) {\n             let dx = bi.x - bj.x;\n-            e -= bi.mass * bj.mass / (dx * dx).sum().sqrt()\n+            e -= bi.mass * bj.mass / (dx * dx).horizontal_sum().sqrt()\n         }\n     }\n     e\n@@ -130,8 +128,8 @@ pub fn advance(bodies: &mut [Body; N_BODIES], dt: f64) {\n     let mut mag = [0.0; N];\n     let mut i = 0;\n     while i < N {\n-        let d2s = f64x2::new((r[i] * r[i]).sum(), (r[i + 1] * r[i + 1]).sum());\n-        let dmags = f64x2::splat(dt) / (d2s * d2s.sqrte());\n+        let d2s = f64x2::from_array([(r[i] * r[i]).horizontal_sum(), (r[i + 1] * r[i + 1]).horizontal_sum()]);\n+        let dmags = f64x2::splat(dt) / (d2s * d2s.sqrt());\n         dmags.write_to_slice_unaligned(&mut mag[i..]);\n         i += 2;\n     }\n@@ -190,5 +188,5 @@ fn main() {\n     //.parse()\n     //.expect(\"argument should be a usize\");\n     //run(&mut std::io::stdout(), n, alg);\n-    println!(\"{:?}\", run_k<10>(10, 10));\n+    println!(\"{:?}\", run_k::<10>(10, 10));\n }"}]}