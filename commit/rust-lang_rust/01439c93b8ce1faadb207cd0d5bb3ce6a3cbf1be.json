{"sha": "01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be", "node_id": "C_kwDOAAsO6NoAKDAxNDM5YzkzYjhjZTFmYWFkYjIwN2NkMGQ1YmIzY2U2YTNjYmYxYmU", "commit": {"author": {"name": "Ellis Hoag", "email": "ellis.sparky.hoag@gmail.com", "date": "2022-09-29T02:02:38Z"}, "committer": {"name": "Ellis Hoag", "email": "ellis.sparky.hoag@gmail.com", "date": "2022-09-29T02:02:38Z"}, "message": "print <signal> when ranlib failed without an exit code", "tree": {"sha": "7d2d06fc94eb051e723f81a8ecf9efe223033b50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d2d06fc94eb051e723f81a8ecf9efe223033b50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be", "html_url": "https://github.com/rust-lang/rust/commit/01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be/comments", "author": {"login": "ellishg", "id": 8961915, "node_id": "MDQ6VXNlcjg5NjE5MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8961915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellishg", "html_url": "https://github.com/ellishg", "followers_url": "https://api.github.com/users/ellishg/followers", "following_url": "https://api.github.com/users/ellishg/following{/other_user}", "gists_url": "https://api.github.com/users/ellishg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellishg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellishg/subscriptions", "organizations_url": "https://api.github.com/users/ellishg/orgs", "repos_url": "https://api.github.com/users/ellishg/repos", "events_url": "https://api.github.com/users/ellishg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellishg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ellishg", "id": 8961915, "node_id": "MDQ6VXNlcjg5NjE5MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8961915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellishg", "html_url": "https://github.com/ellishg", "followers_url": "https://api.github.com/users/ellishg/followers", "following_url": "https://api.github.com/users/ellishg/following{/other_user}", "gists_url": "https://api.github.com/users/ellishg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellishg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellishg/subscriptions", "organizations_url": "https://api.github.com/users/ellishg/orgs", "repos_url": "https://api.github.com/users/ellishg/repos", "events_url": "https://api.github.com/users/ellishg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellishg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d01c6d9c8851ddfa8d520c03e9ac93ef7f82ce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d01c6d9c8851ddfa8d520c03e9ac93ef7f82ce3", "html_url": "https://github.com/rust-lang/rust/commit/6d01c6d9c8851ddfa8d520c03e9ac93ef7f82ce3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d7816e395c8ebd7e5c225505782fa374621261f0", "filename": "compiler/rustc_codegen_gcc/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be/compiler%2Frustc_codegen_gcc%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be/compiler%2Frustc_codegen_gcc%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Ferrors.rs?ref=01439c93b8ce1faadb207cd0d5bb3ce6a3cbf1be", "patch": "@@ -11,7 +11,7 @@ impl IntoDiagnosticArg for ExitCode {\n         let ExitCode(exit_code) = self;\n         match exit_code {\n             Some(t) => t.into_diagnostic_arg(),\n-            None => DiagnosticArgValue::Str(Cow::Borrowed(\"None\")),\n+            None => DiagnosticArgValue::Str(Cow::Borrowed(\"<signal>\")),\n         }\n     }\n }"}]}