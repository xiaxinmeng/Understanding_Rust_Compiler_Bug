{"sha": "cecc13a704c3250e50b085c1433014a9bdf916df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlY2MxM2E3MDRjMzI1MGU1MGIwODVjMTQzMzAxNGE5YmRmOTE2ZGY=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-12-13T07:13:18Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-12-13T07:13:18Z"}, "message": "librustdoc: use pkgid instead of link meta", "tree": {"sha": "ad8da09b75a03a7dceede9b987ba46f7a060ac73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad8da09b75a03a7dceede9b987ba46f7a060ac73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cecc13a704c3250e50b085c1433014a9bdf916df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cecc13a704c3250e50b085c1433014a9bdf916df", "html_url": "https://github.com/rust-lang/rust/commit/cecc13a704c3250e50b085c1433014a9bdf916df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cecc13a704c3250e50b085c1433014a9bdf916df/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b12dca7f97a51c6cbb4f47ea6e095d841a97c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b12dca7f97a51c6cbb4f47ea6e095d841a97c1a", "html_url": "https://github.com/rust-lang/rust/commit/1b12dca7f97a51c6cbb4f47ea6e095d841a97c1a"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "8aab405517895ceda8d248b7c9ea949483df824d", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cecc13a704c3250e50b085c1433014a9bdf916df/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecc13a704c3250e50b085c1433014a9bdf916df/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=cecc13a704c3250e50b085c1433014a9bdf916df", "patch": "@@ -73,9 +73,7 @@ pub struct Crate {\n \n impl Clean<Crate> for visit_ast::RustdocVisitor {\n     fn clean(&self) -> Crate {\n-        use syntax::attr::{find_linkage_metas, last_meta_item_value_str_by_name};\n-        let maybe_meta = last_meta_item_value_str_by_name(\n-                                find_linkage_metas(self.attrs), \"name\");\n+        use syntax::attr::find_pkgid;\n         let cx = local_data::get(super::ctxtkey, |x| *x.unwrap());\n \n         let mut externs = HashMap::new();\n@@ -84,10 +82,9 @@ impl Clean<Crate> for visit_ast::RustdocVisitor {\n         });\n \n         Crate {\n-            name: match maybe_meta {\n-                Some(x) => x.to_owned(),\n-                None => fail!(\"rustdoc requires a \\\\#[link(name=\\\"foo\\\")] \\\n-                                crate attribute\"),\n+            name: match find_pkgid(self.attrs) {\n+                Some(n) => n,\n+                None => fail!(\"rustdoc requires a `pkgid` crate attribute\"),\n             },\n             module: Some(self.module.clean()),\n             externs: externs,"}]}