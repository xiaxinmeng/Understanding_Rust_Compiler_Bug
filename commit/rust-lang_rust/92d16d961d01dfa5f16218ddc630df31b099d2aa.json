{"sha": "92d16d961d01dfa5f16218ddc630df31b099d2aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyZDE2ZDk2MWQwMWRmYTVmMTYyMThkZGM2MzBkZjMxYjA5OWQyYWE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-07T14:59:28Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-12T21:58:56Z"}, "message": "Fallout in tests -- break the object safety part into a separate file because error\nwill be in future reported by wfcheck, which runs in a later stage than\ncoherence", "tree": {"sha": "38bda22024c7861e93b70763501edd0d066f6246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38bda22024c7861e93b70763501edd0d066f6246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92d16d961d01dfa5f16218ddc630df31b099d2aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92d16d961d01dfa5f16218ddc630df31b099d2aa", "html_url": "https://github.com/rust-lang/rust/commit/92d16d961d01dfa5f16218ddc630df31b099d2aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92d16d961d01dfa5f16218ddc630df31b099d2aa/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09bf2fef2249602bdd3d4d58ae0dcb9e7968cacc", "url": "https://api.github.com/repos/rust-lang/rust/commits/09bf2fef2249602bdd3d4d58ae0dcb9e7968cacc", "html_url": "https://github.com/rust-lang/rust/commit/09bf2fef2249602bdd3d4d58ae0dcb9e7968cacc"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "ce6baeb204c93b67c8203bf61e4c3759ceda90b9", "filename": "src/test/compile-fail/coherence-impl-trait-for-trait-object-safe.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/92d16d961d01dfa5f16218ddc630df31b099d2aa/src%2Ftest%2Fcompile-fail%2Fcoherence-impl-trait-for-trait-object-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d16d961d01dfa5f16218ddc630df31b099d2aa/src%2Ftest%2Fcompile-fail%2Fcoherence-impl-trait-for-trait-object-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-impl-trait-for-trait-object-safe.rs?ref=92d16d961d01dfa5f16218ddc630df31b099d2aa", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we give suitable error messages when the user attempts to\n+// impl a trait `Trait` for its own object type.\n+\n+// If the trait is not object-safe, we give a more tailored message\n+// because we're such schnuckels:\n+trait NotObjectSafe { fn eq(&self, other: Self); }\n+impl NotObjectSafe for NotObjectSafe { } //~ ERROR E0372\n+\n+fn main() { }"}, {"sha": "cd75b0e34f24b5a791f1f0e767b4ab5344abddf8", "filename": "src/test/compile-fail/coherence-impl-trait-for-trait.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/92d16d961d01dfa5f16218ddc630df31b099d2aa/src%2Ftest%2Fcompile-fail%2Fcoherence-impl-trait-for-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d16d961d01dfa5f16218ddc630df31b099d2aa/src%2Ftest%2Fcompile-fail%2Fcoherence-impl-trait-for-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-impl-trait-for-trait.rs?ref=92d16d961d01dfa5f16218ddc630df31b099d2aa", "patch": "@@ -24,9 +24,4 @@ impl Baz for Baz { }   //~ ERROR E0371\n trait Other { }\n impl Other for Baz { } // OK, Other not a supertrait of Baz\n \n-// If the trait is not object-safe, we give a more tailored message\n-// because we're such schnuckels:\n-trait NotObjectSafe { fn eq(&self, other: Self); }\n-impl NotObjectSafe for NotObjectSafe { } //~ ERROR E0372\n-\n fn main() { }"}]}