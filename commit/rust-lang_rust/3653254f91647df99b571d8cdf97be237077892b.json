{"sha": "3653254f91647df99b571d8cdf97be237077892b", "node_id": "C_kwDOAAsO6NoAKDM2NTMyNTRmOTE2NDdkZjk5YjU3MWQ4Y2RmOTdiZTIzNzA3Nzg5MmI", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2023-01-24T13:40:09Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2023-01-25T14:44:29Z"}, "message": "Set version placeholders to 1.68", "tree": {"sha": "e572fe8a9cc6f88749467bd967cbef3fc908faae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e572fe8a9cc6f88749467bd967cbef3fc908faae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3653254f91647df99b571d8cdf97be237077892b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3653254f91647df99b571d8cdf97be237077892b", "html_url": "https://github.com/rust-lang/rust/commit/3653254f91647df99b571d8cdf97be237077892b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3653254f91647df99b571d8cdf97be237077892b/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9467f9553197e1dab950bdc842fd407b0ac2d59b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9467f9553197e1dab950bdc842fd407b0ac2d59b", "html_url": "https://github.com/rust-lang/rust/commit/9467f9553197e1dab950bdc842fd407b0ac2d59b"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "e064e87a59a4ea1b100bb67e82766b3984d35c7c", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -49,7 +49,7 @@ declare_features! (\n     /// Allows `#[target_feature(...)]` on aarch64 platforms\n     (accepted, aarch64_target_feature, \"1.61.0\", Some(44839), None),\n     /// Allows using the `efiapi` ABI.\n-    (accepted, abi_efiapi, \"CURRENT_RUSTC_VERSION\", Some(65815), None),\n+    (accepted, abi_efiapi, \"1.68.0\", Some(65815), None),\n     /// Allows the sysV64 ABI to be specified on all platforms\n     /// instead of just the platforms on which it is the C ABI.\n     (accepted, abi_sysv64, \"1.24.0\", Some(36167), None),\n@@ -129,7 +129,7 @@ declare_features! (\n     /// Allows `crate` in paths.\n     (accepted, crate_in_paths, \"1.30.0\", Some(45477), None),\n     /// Allows rustc to inject a default alloc_error_handler\n-    (accepted, default_alloc_error_handler, \"CURRENT_RUSTC_VERSION\", Some(66741), None),\n+    (accepted, default_alloc_error_handler, \"1.68.0\", Some(66741), None),\n     /// Allows using assigning a default type to type parameters in algebraic data type definitions.\n     (accepted, default_type_params, \"1.0.0\", None, None),\n     /// Allows `#[deprecated]` attribute.\n@@ -164,7 +164,7 @@ declare_features! (\n     /// Allows access to crate names passed via `--extern` through prelude.\n     (accepted, extern_prelude, \"1.30.0\", Some(44660), None),\n     /// Allows using F16C intrinsics from `core::arch::{x86, x86_64}`.\n-    (accepted, f16c_target_feature, \"CURRENT_RUSTC_VERSION\", Some(44839), None),\n+    (accepted, f16c_target_feature, \"1.68.0\", Some(44839), None),\n     /// Allows field shorthands (`x` meaning `x: x`) in struct literal expressions.\n     (accepted, field_init_shorthand, \"1.17.0\", Some(37340), None),\n     /// Allows `#[must_use]` on functions, and introduces must-use operators (RFC 1940)."}, {"sha": "b5256043e2df600d049a54135747aa907735d703", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -340,7 +340,7 @@ declare_features! (\n     /// Allows `async {}` expressions in const contexts.\n     (active, const_async_blocks, \"1.53.0\", Some(85368), None),\n     /// Allows `const || {}` closures in const contexts.\n-    (incomplete, const_closures, \"CURRENT_RUSTC_VERSION\", Some(106003), None),\n+    (incomplete, const_closures, \"1.68.0\", Some(106003), None),\n     /// Allows limiting the evaluation steps of const expressions\n     (active, const_eval_limit, \"1.43.0\", Some(67217), None),\n     /// Allows the definition of `const extern fn` and `const unsafe extern fn`."}, {"sha": "1573b3d77dc164ea9a9ea2904192d94bdf32d5a1", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -537,7 +537,7 @@ impl<T> VecDeque<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_vec_deque_new\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_vec_deque_new\", since = \"1.68.0\")]\n     #[must_use]\n     pub const fn new() -> VecDeque<T> {\n         // FIXME: This should just be `VecDeque::new_in(Global)` once that hits stable."}, {"sha": "ca182c8109ec97d3f1ad5dc01353a342e656d0f2", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -2549,7 +2549,7 @@ impl ToString for char {\n }\n \n #[cfg(not(no_global_oom_handling))]\n-#[stable(feature = \"bool_to_string_specialization\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"bool_to_string_specialization\", since = \"1.68.0\")]\n impl ToString for bool {\n     #[inline]\n     fn to_string(&self) -> String {"}, {"sha": "4da7c323492a12e90dd5b1c8d996041733bf2a4c", "filename": "library/core/src/convert/num.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -169,7 +169,7 @@ impl_from! { u32, f64, #[stable(feature = \"lossless_float_conv\", since = \"1.6.0\"\n impl_from! { f32, f64, #[stable(feature = \"lossless_float_conv\", since = \"1.6.0\")] }\n \n // bool -> Float\n-#[stable(feature = \"float_from_bool\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"float_from_bool\", since = \"1.68.0\")]\n #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n impl const From<bool> for f32 {\n     /// Converts `bool` to `f32` losslessly.\n@@ -178,7 +178,7 @@ impl const From<bool> for f32 {\n         small as u8 as Self\n     }\n }\n-#[stable(feature = \"float_from_bool\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"float_from_bool\", since = \"1.68.0\")]\n #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n impl const From<bool> for f64 {\n     /// Converts `bool` to `f64` losslessly."}, {"sha": "9309a06c8cf224ca675c931ac6cf20dd0bd885bf", "filename": "library/core/src/iter/sources/once_with.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -73,7 +73,7 @@ pub struct OnceWith<F> {\n     gen: Option<F>,\n }\n \n-#[stable(feature = \"iter_once_with_debug\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"iter_once_with_debug\", since = \"1.68.0\")]\n impl<F> fmt::Debug for OnceWith<F> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         if self.gen.is_some() {"}, {"sha": "3f34105a3e0719469a7650497e6c0502d0810a28", "filename": "library/core/src/iter/sources/repeat_with.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -78,7 +78,7 @@ pub struct RepeatWith<F> {\n     repeater: F,\n }\n \n-#[stable(feature = \"iterator_repeat_with_debug\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"iterator_repeat_with_debug\", since = \"1.68.0\")]\n impl<F> fmt::Debug for RepeatWith<F> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_struct(\"RepeatWith\").finish_non_exhaustive()"}, {"sha": "febe57dc90bc77012547612c94976221b872abf9", "filename": "library/core/src/pin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/library%2Fcore%2Fsrc%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpin.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -1164,7 +1164,7 @@ impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P> where P: DispatchFromDyn<U> {}\n /// constructor.\n ///\n /// [`Box::pin`]: ../../std/boxed/struct.Box.html#method.pin\n-#[stable(feature = \"pin_macro\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"pin_macro\", since = \"1.68.0\")]\n #[rustc_macro_transparency = \"semitransparent\"]\n #[allow_internal_unstable(unsafe_pin_internals)]\n pub macro pin($value:expr $(,)?) {"}, {"sha": "15308ac0e0d8c7b80e51d20a51467af66eff9b92", "filename": "library/std/src/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3653254f91647df99b571d8cdf97be237077892b/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3653254f91647df99b571d8cdf97be237077892b/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=3653254f91647df99b571d8cdf97be237077892b", "patch": "@@ -271,7 +271,7 @@ pub const MAIN_SEPARATOR: char = crate::sys::path::MAIN_SEP;\n /// The primary separator of path components for the current platform.\n ///\n /// For example, `/` on Unix and `\\` on Windows.\n-#[stable(feature = \"main_separator_str\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"main_separator_str\", since = \"1.68.0\")]\n pub const MAIN_SEPARATOR_STR: &str = crate::sys::path::MAIN_SEP_STR;\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -1778,7 +1778,7 @@ impl ops::Deref for PathBuf {\n     }\n }\n \n-#[stable(feature = \"path_buf_deref_mut\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"path_buf_deref_mut\", since = \"1.68.0\")]\n impl ops::DerefMut for PathBuf {\n     #[inline]\n     fn deref_mut(&mut self) -> &mut Path {"}]}