{"sha": "a11994e4230c777a5fbcc3bb1cc080903e7c1664", "node_id": "C_kwDOAAsO6NoAKGExMTk5NGU0MjMwYzc3N2E1ZmJjYzNiYjFjYzA4MDkwM2U3YzE2NjQ", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-12-02T19:30:35Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-12-02T22:27:08Z"}, "message": "use try_normalize_erasing_regions in needs_drop", "tree": {"sha": "8a100b3e4f9fc6880714b9dc585e221e51bd35e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a100b3e4f9fc6880714b9dc585e221e51bd35e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a11994e4230c777a5fbcc3bb1cc080903e7c1664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a11994e4230c777a5fbcc3bb1cc080903e7c1664", "html_url": "https://github.com/rust-lang/rust/commit/a11994e4230c777a5fbcc3bb1cc080903e7c1664", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a11994e4230c777a5fbcc3bb1cc080903e7c1664/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9baa361902b172be716f96619b909f340802dea", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9baa361902b172be716f96619b909f340802dea", "html_url": "https://github.com/rust-lang/rust/commit/d9baa361902b172be716f96619b909f340802dea"}], "stats": {"total": 64, "additions": 60, "deletions": 4}, "files": [{"sha": "bc89f44541afdd2f0ca66df37fde091e67ffdc31", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a11994e4230c777a5fbcc3bb1cc080903e7c1664/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11994e4230c777a5fbcc3bb1cc080903e7c1664/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=a11994e4230c777a5fbcc3bb1cc080903e7c1664", "patch": "@@ -788,10 +788,14 @@ impl<'tcx> ty::TyS<'tcx> {\n                     [component_ty] => component_ty,\n                     _ => self,\n                 };\n+\n                 // This doesn't depend on regions, so try to minimize distinct\n                 // query keys used.\n-                let erased = tcx.normalize_erasing_regions(param_env, query_ty);\n-                tcx.needs_drop_raw(param_env.and(erased))\n+                // If normalization fails, we just use `query_ty`.\n+                let query_ty =\n+                    tcx.try_normalize_erasing_regions(param_env, query_ty).unwrap_or(query_ty);\n+\n+                tcx.needs_drop_raw(param_env.and(query_ty))\n             }\n         }\n     }"}, {"sha": "fc309aa848ca195d39c755f0ffb8f196b3ca2fc0", "filename": "compiler/rustc_ty_utils/src/needs_drop.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a11994e4230c777a5fbcc3bb1cc080903e7c1664/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11994e4230c777a5fbcc3bb1cc080903e7c1664/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs?ref=a11994e4230c777a5fbcc3bb1cc080903e7c1664", "patch": "@@ -147,8 +147,10 @@ where\n                             Ok(tys) => tys,\n                         };\n                         for required_ty in tys {\n-                            let required =\n-                                tcx.normalize_erasing_regions(self.param_env, required_ty);\n+                            let required = tcx\n+                                .try_normalize_erasing_regions(self.param_env, required_ty)\n+                                .unwrap_or(required_ty);\n+\n                             queue_type(self, required);\n                         }\n                     }"}, {"sha": "628e7c6ed5da816cf6a89fbc6966310cd935ab2e", "filename": "src/test/ui/union/issue-81199.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a11994e4230c777a5fbcc3bb1cc080903e7c1664/src%2Ftest%2Fui%2Funion%2Fissue-81199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11994e4230c777a5fbcc3bb1cc080903e7c1664/src%2Ftest%2Fui%2Funion%2Fissue-81199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Fissue-81199.rs?ref=a11994e4230c777a5fbcc3bb1cc080903e7c1664", "patch": "@@ -0,0 +1,21 @@\n+#[repr(C)]\n+union PtrRepr<T: ?Sized> {\n+    const_ptr: *const T,\n+    mut_ptr: *mut T,\n+    components: PtrComponents<T>,\n+    //~^ ERROR the trait bound\n+}\n+\n+#[repr(C)]\n+struct PtrComponents<T: Pointee + ?Sized> {\n+    data_address: *const (),\n+    metadata: <T as Pointee>::Metadata,\n+}\n+\n+\n+\n+pub trait Pointee {\n+   type Metadata;\n+}\n+\n+fn main() {}"}, {"sha": "f26bfe3a0b060804fc58eee0fce98f77e61f9ecf", "filename": "src/test/ui/union/issue-81199.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a11994e4230c777a5fbcc3bb1cc080903e7c1664/src%2Ftest%2Fui%2Funion%2Fissue-81199.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11994e4230c777a5fbcc3bb1cc080903e7c1664/src%2Ftest%2Fui%2Funion%2Fissue-81199.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Fissue-81199.stderr?ref=a11994e4230c777a5fbcc3bb1cc080903e7c1664", "patch": "@@ -0,0 +1,29 @@\n+error[E0277]: the trait bound `T: Pointee` is not satisfied in `PtrComponents<T>`\n+  --> $DIR/issue-81199.rs:5:17\n+   |\n+LL |     components: PtrComponents<T>,\n+   |                 ^^^^^^^^^^^^^^^^ within `PtrComponents<T>`, the trait `Pointee` is not implemented for `T`\n+   |\n+note: required because it appears within the type `PtrComponents<T>`\n+  --> $DIR/issue-81199.rs:10:8\n+   |\n+LL | struct PtrComponents<T: Pointee + ?Sized> {\n+   |        ^^^^^^^^^^^^^\n+   = note: no field of a union may have a dynamically sized type\n+   = help: change the field's type to have a statically known size\n+help: consider further restricting this bound\n+   |\n+LL | union PtrRepr<T: ?Sized + Pointee> {\n+   |                         +++++++++\n+help: borrowed types always have a statically known size\n+   |\n+LL |     components: &PtrComponents<T>,\n+   |                 +\n+help: the `Box` type always has a statically known size and allocates its contents in the heap\n+   |\n+LL |     components: Box<PtrComponents<T>>,\n+   |                 ++++                +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}