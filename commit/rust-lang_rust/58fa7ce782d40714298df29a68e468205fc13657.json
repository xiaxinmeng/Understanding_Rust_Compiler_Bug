{"sha": "58fa7ce782d40714298df29a68e468205fc13657", "node_id": "C_kwDOAAsO6NoAKDU4ZmE3Y2U3ODJkNDA3MTQyOThkZjI5YTY4ZTQ2ODIwNWZjMTM2NTc", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-30T11:26:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-01T15:58:30Z"}, "message": "tests for ty", "tree": {"sha": "c9e4fc3a6a073b5da2ed85905eeb3d89ed45737a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9e4fc3a6a073b5da2ed85905eeb3d89ed45737a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fa7ce782d40714298df29a68e468205fc13657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fa7ce782d40714298df29a68e468205fc13657", "html_url": "https://github.com/rust-lang/rust/commit/58fa7ce782d40714298df29a68e468205fc13657", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fa7ce782d40714298df29a68e468205fc13657/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ca83a5fb3a2f092a63e452e1bf808f1ad445b05", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05", "html_url": "https://github.com/rust-lang/rust/commit/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "a8abe6daf536ab973a3dd25527811dafec147afc", "filename": "crates/parser/src/tests/entries.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/58fa7ce782d40714298df29a68e468205fc13657/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fa7ce782d40714298df29a68e468205fc13657/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs?ref=58fa7ce782d40714298df29a68e468205fc13657", "patch": "@@ -37,6 +37,13 @@ fn pat() {\n     check_prefix(PrefixEntryPoint::Pat, \".. ..\", \".. ..\");\n }\n \n+#[test]\n+fn ty() {\n+    check_prefix(PrefixEntryPoint::Ty, \"fn() foo\", \"fn()\");\n+    check_prefix(PrefixEntryPoint::Ty, \"Clone + Copy + fn\", \"Clone + Copy +\");\n+    check_prefix(PrefixEntryPoint::Ty, \"struct f\", \"struct\");\n+}\n+\n fn check_prefix(entry: PrefixEntryPoint, input: &str, prefix: &str) {\n     let lexed = LexedStr::new(input);\n     let input = lexed.to_input();"}]}