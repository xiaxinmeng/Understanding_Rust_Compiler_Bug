{"sha": "a6924177e4953eee1fa0ebcff59eede1684781eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2OTI0MTc3ZTQ5NTNlZWUxZmEwZWJjZmY1OWVlZGUxNjg0NzgxZWI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-25T12:13:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-25T12:13:18Z"}, "message": "Rollup merge of #39903 - binarycrusader:issue-39901, r=alexcrichton\n\nadd solaris sparcv9 support\n\nFixes #39901", "tree": {"sha": "08567e32fdd84490c318315aa66ff527d730594d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08567e32fdd84490c318315aa66ff527d730594d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6924177e4953eee1fa0ebcff59eede1684781eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6924177e4953eee1fa0ebcff59eede1684781eb", "html_url": "https://github.com/rust-lang/rust/commit/a6924177e4953eee1fa0ebcff59eede1684781eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6924177e4953eee1fa0ebcff59eede1684781eb/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e31d46402d1804ba4989665ffb8d9ce2c7686ad0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e31d46402d1804ba4989665ffb8d9ce2c7686ad0", "html_url": "https://github.com/rust-lang/rust/commit/e31d46402d1804ba4989665ffb8d9ce2c7686ad0"}, {"sha": "2e756e22b3d5ffcb9cf8b199796ecb35cfc7b415", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e756e22b3d5ffcb9cf8b199796ecb35cfc7b415", "html_url": "https://github.com/rust-lang/rust/commit/2e756e22b3d5ffcb9cf8b199796ecb35cfc7b415"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "3f8286f9e9e55de531e1c885590f7a16edffae04", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=a6924177e4953eee1fa0ebcff59eede1684781eb", "patch": "@@ -485,6 +485,8 @@ def build_triple(self):\n             ostype += 'abi64'\n         elif cputype in {'powerpc', 'ppc', 'ppc64'}:\n             cputype = 'powerpc'\n+        elif cputype == 'sparcv9':\n+            pass\n         elif cputype in {'amd64', 'x86_64', 'x86-64', 'x64'}:\n             cputype = 'x86_64'\n         else:"}, {"sha": "16ecf88256670233c9f1f543ebe05f46f11abd61", "filename": "src/libcompiler_builtins/build.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Flibcompiler_builtins%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Flibcompiler_builtins%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Fbuild.rs?ref=a6924177e4953eee1fa0ebcff59eede1684781eb", "patch": "@@ -92,7 +92,15 @@ fn main() {\n         // compiler-rt's build system already\n         cfg.flag(\"-fno-builtin\");\n         cfg.flag(\"-fvisibility=hidden\");\n-        cfg.flag(\"-fomit-frame-pointer\");\n+        // Accepted practice on Solaris is to never omit frame pointer so that\n+        // system observability tools work as expected.  In addition, at least\n+        // on Solaris, -fomit-frame-pointer on sparcv9 appears to generate\n+        // references to data outside of the current stack frame.  A search of\n+        // the gcc bug database provides a variety of issues surrounding\n+        // -fomit-frame-pointer on non-x86 platforms.\n+        if !target.contains(\"solaris\") && !target.contains(\"sparc\") {\n+            cfg.flag(\"-fomit-frame-pointer\");\n+        }\n         cfg.flag(\"-ffreestanding\");\n         cfg.define(\"VISIBILITY_HIDDEN\", None);\n     }"}, {"sha": "0c179469448fef7a917db711b8a5f4c01c49e944", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=a6924177e4953eee1fa0ebcff59eede1684781eb", "patch": "@@ -200,6 +200,7 @@ supported_targets! {\n     (\"armv7s-apple-ios\", armv7s_apple_ios),\n \n     (\"x86_64-sun-solaris\", x86_64_sun_solaris),\n+    (\"sparcv9-sun-solaris\", sparcv9_sun_solaris),\n \n     (\"x86_64-pc-windows-gnu\", x86_64_pc_windows_gnu),\n     (\"i686-pc-windows-gnu\", i686_pc_windows_gnu),"}, {"sha": "c88e5a402f2f545e0719b0178848d9314730368d", "filename": "src/librustc_back/target/sparcv9_sun_solaris.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Flibrustc_back%2Ftarget%2Fsparcv9_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6924177e4953eee1fa0ebcff59eede1684781eb/src%2Flibrustc_back%2Ftarget%2Fsparcv9_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fsparcv9_sun_solaris.rs?ref=a6924177e4953eee1fa0ebcff59eede1684781eb", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::solaris_base::opts();\n+    base.pre_link_args.push(\"-m64\".to_string());\n+    // llvm calls this \"v9\"\n+    base.cpu = \"v9\".to_string();\n+    base.max_atomic_width = Some(64);\n+\n+    Ok(Target {\n+        llvm_target: \"sparcv9-sun-solaris\".to_string(),\n+        target_endian: \"big\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        data_layout: \"E-m:e-i64:64-n32:64-S128\".to_string(),\n+        // Use \"sparc64\" instead of \"sparcv9\" here, since the former is already\n+        // used widely in the source base.  If we ever needed ABI\n+        // differentiation from the sparc64, we could, but that would probably\n+        // just be confusing.\n+        arch: \"sparc64\".to_string(),\n+        target_os: \"solaris\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"sun\".to_string(),\n+        options: base,\n+    })\n+}"}]}