{"sha": "d75cd5c05111256a3c0d82d0df727cb2b52680b7", "node_id": "C_kwDOAAsO6NoAKGQ3NWNkNWMwNTExMTI1NmEzYzBkODJkMGRmNzI3Y2IyYjUyNjgwYjc", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2022-11-15T20:45:57Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-11-25T09:28:43Z"}, "message": "fmt", "tree": {"sha": "c1fdb42da9ff4855d7347bb6088c49a41b14f3aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1fdb42da9ff4855d7347bb6088c49a41b14f3aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d75cd5c05111256a3c0d82d0df727cb2b52680b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d75cd5c05111256a3c0d82d0df727cb2b52680b7", "html_url": "https://github.com/rust-lang/rust/commit/d75cd5c05111256a3c0d82d0df727cb2b52680b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d75cd5c05111256a3c0d82d0df727cb2b52680b7/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c729bd0f3bc8726e50e05c0337d960ab4791a18", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c729bd0f3bc8726e50e05c0337d960ab4791a18", "html_url": "https://github.com/rust-lang/rust/commit/8c729bd0f3bc8726e50e05c0337d960ab4791a18"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "6bf46bb9a1c8ab1e19005ff8c9287a736526e0d1", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d75cd5c05111256a3c0d82d0df727cb2b52680b7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75cd5c05111256a3c0d82d0df727cb2b52680b7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=d75cd5c05111256a3c0d82d0df727cb2b52680b7", "patch": "@@ -671,22 +671,24 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     if let (ty::ConstKind::Unevaluated(_), ty::ConstKind::Unevaluated(_)) =\n                         (c1.kind(), c2.kind())\n                     {\n-                        if let (Ok(Some(a)), Ok(Some(b))) = (\n-                          tcx.expand_abstract_consts(c1),\n-                          tcx.expand_abstract_consts(c2),\n-                        ) && a.ty() == b.ty() && let Ok(new_obligations) =\n-                                    self.infcx.at(&obligation.cause, obligation.param_env).eq(a, b)\n-                                {\n-                                    let mut obligations = new_obligations.obligations;\n-                                    self.add_depth(\n-                                        obligations.iter_mut(),\n-                                        obligation.recursion_depth,\n-                                    );\n-                                    return self.evaluate_predicates_recursively(\n-                                        previous_stack,\n-                                        obligations.into_iter(),\n-                                    );\n-                                }\n+                        if let Ok(Some(a)) = tcx.expand_abstract_consts(c1)\n+                            && let Ok(Some(b)) = tcx.expand_abstract_consts(c2)\n+                            && a.ty() == b.ty() \n+                            && let Ok(new_obligations) = self\n+                                .infcx\n+                                .at(&obligation.cause, obligation.param_env)\n+                                .eq(a, b)\n+                        {\n+                            let mut obligations = new_obligations.obligations;\n+                            self.add_depth(\n+                                obligations.iter_mut(),\n+                                obligation.recursion_depth,\n+                            );\n+                            return self.evaluate_predicates_recursively(\n+                                previous_stack,\n+                                obligations.into_iter(),\n+                            );\n+                        }\n                     }\n \n                     let evaluate = |c: ty::Const<'tcx>| {"}]}