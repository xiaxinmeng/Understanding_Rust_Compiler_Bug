{"sha": "778f84524b5e99b39748f89f87e1a5e90d13e6a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OGY4NDUyNGI1ZTk5YjM5NzQ4Zjg5Zjg3ZTFhNWU5MGQxM2U2YTY=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-27T22:37:28Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-27T22:41:58Z"}, "message": "librustc: add default per arch clobbers for asm.", "tree": {"sha": "0f054a28d082431b1384ded052da0e80e399f479", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f054a28d082431b1384ded052da0e80e399f479"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/778f84524b5e99b39748f89f87e1a5e90d13e6a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/778f84524b5e99b39748f89f87e1a5e90d13e6a6", "html_url": "https://github.com/rust-lang/rust/commit/778f84524b5e99b39748f89f87e1a5e90d13e6a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/778f84524b5e99b39748f89f87e1a5e90d13e6a6/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b867fe41defd95d839c96e2b746d1c7560fd338f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b867fe41defd95d839c96e2b746d1c7560fd338f", "html_url": "https://github.com/rust-lang/rust/commit/b867fe41defd95d839c96e2b746d1c7560fd338f"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "798d684e0bd983eaa67d1761189f5174bca616cd", "filename": "src/librustc/middle/trans/asm.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/778f84524b5e99b39748f89f87e1a5e90d13e6a6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778f84524b5e99b39748f89f87e1a5e90d13e6a6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs?ref=778f84524b5e99b39748f89f87e1a5e90d13e6a6", "patch": "@@ -84,11 +84,18 @@ pub fn trans_inline_asm(bcx: block, ia: &ast::inline_asm) -> block {\n \n     let mut constraints = str::connect(constraints, \",\");\n \n+    let mut clobbers = getClobbers();\n+    if *ia.clobbers != ~\"\" && clobbers != ~\"\" {\n+        clobbers = *ia.clobbers + ~\",\" + clobbers;\n+    } else {\n+        clobbers += *ia.clobbers;\n+    };\n+\n     // Add the clobbers to our constraints list\n-    if *ia.clobbers != ~\"\" && constraints != ~\"\" {\n-        constraints += ~\",\" + *ia.clobbers;\n+    if clobbers != ~\"\" && constraints != ~\"\" {\n+        constraints += ~\",\" + clobbers;\n     } else {\n-        constraints += *ia.clobbers;\n+        constraints += clobbers;\n     }\n \n     debug!(\"Asm Constraints: %?\", constraints);\n@@ -131,3 +138,18 @@ pub fn trans_inline_asm(bcx: block, ia: &ast::inline_asm) -> block {\n     return bcx;\n \n }\n+\n+// Default per-arch clobbers\n+// Basically what clang does\n+\n+#[cfg(target_arch = \"arm\")]\n+#[cfg(target_arch = \"mips\")]\n+fn getClobbers() -> ~str {\n+    ~\"\"\n+}\n+\n+#[cfg(target_arch = \"x86\")]\n+#[cfg(target_arch = \"x86_64\")]\n+fn getClobbers() -> ~str {\n+    ~\"~{dirflag},~{fpsr},~{flags}\"\n+}"}]}