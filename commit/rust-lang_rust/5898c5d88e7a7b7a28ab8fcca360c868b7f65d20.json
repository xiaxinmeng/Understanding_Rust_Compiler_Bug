{"sha": "5898c5d88e7a7b7a28ab8fcca360c868b7f65d20", "node_id": "C_kwDOAAsO6NoAKDU4OThjNWQ4OGU3YTdiN2EyOGFiOGZjY2EzNjBjODY4YjdmNjVkMjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-18T06:13:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-18T06:13:27Z"}, "message": "Rollup merge of #89974 - est31:let_else_if_error, r=nagisa\n\nNicer error message if the user attempts to do let...else if\n\nGives a nice \"conditional `else if` is not supported for `let...else`\" error when encountering a `let...else if` pattern, as suggested in the [let...else tracking issue](https://github.com/rust-lang/rust/issues/87335#issuecomment-944846205).", "tree": {"sha": "41894374e45385f96163367ef721d7aea3711bcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41894374e45385f96163367ef721d7aea3711bcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhbRCHCRBK7hj4Ov3rIwAAcZcIABgXiJJVYZNeNr41aMcO1Hnb\ncEU9vy9ntqUmMTxXO1UBPDvOnvydirKfNFyOU9wahyABBcskzLTUAeASlP20DXcZ\nxFxbzVCGFlKzEpFSm8W4FvRv1qVn9QluOJDtikitlGP4VyMwiLeUMy1omIQjja+e\nLRfEB8VtFcGAbYK7hFgyFoh5+1aCpmQfzUrgn33MyLGQVUZVypV5HEGpBLbp452J\nMAdO0UKjnXj1uq7m35iBsAO9Ntf+kxZYQMpBrFB/JYazlCF3YJ71FYcplnK4Vtkl\nuajbeIpyZyF75rTxI/yXvJ9sorPFjrN0lkqcVYrS7QeBYEiy/LLOdf1gci66F9g=\n=WKM1\n-----END PGP SIGNATURE-----\n", "payload": "tree 41894374e45385f96163367ef721d7aea3711bcd\nparent b356a04c9a158f4f16301afa4300f2c18a8d99d6\nparent 856541963ce95ef4f7d4a81784bb5002ccf63c93\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634537607 +0200\ncommitter GitHub <noreply@github.com> 1634537607 +0200\n\nRollup merge of #89974 - est31:let_else_if_error, r=nagisa\n\nNicer error message if the user attempts to do let...else if\n\nGives a nice \"conditional `else if` is not supported for `let...else`\" error when encountering a `let...else if` pattern, as suggested in the [let...else tracking issue](https://github.com/rust-lang/rust/issues/87335#issuecomment-944846205).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20", "html_url": "https://github.com/rust-lang/rust/commit/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b356a04c9a158f4f16301afa4300f2c18a8d99d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b356a04c9a158f4f16301afa4300f2c18a8d99d6", "html_url": "https://github.com/rust-lang/rust/commit/b356a04c9a158f4f16301afa4300f2c18a8d99d6"}, {"sha": "856541963ce95ef4f7d4a81784bb5002ccf63c93", "url": "https://api.github.com/repos/rust-lang/rust/commits/856541963ce95ef4f7d4a81784bb5002ccf63c93", "html_url": "https://github.com/rust-lang/rust/commit/856541963ce95ef4f7d4a81784bb5002ccf63c93"}], "stats": {"total": 49, "additions": 44, "deletions": 5}, "files": [{"sha": "01e751ea8b5bff53bff164fd6a936c49e61f371e", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=5898c5d88e7a7b7a28ab8fcca360c868b7f65d20", "patch": "@@ -16,7 +16,7 @@ use rustc_ast::{\n };\n use rustc_ast::{Block, BlockCheckMode, Expr, ExprKind, Local, Stmt};\n use rustc_ast::{StmtKind, DUMMY_NODE_ID};\n-use rustc_errors::{Applicability, PResult};\n+use rustc_errors::{Applicability, DiagnosticBuilder, PResult};\n use rustc_span::source_map::{BytePos, Span};\n use rustc_span::symbol::{kw, sym};\n \n@@ -300,6 +300,12 @@ impl<'a> Parser<'a> {\n             None => LocalKind::Decl,\n             Some(init) => {\n                 if self.eat_keyword(kw::Else) {\n+                    if self.token.is_keyword(kw::If) {\n+                        // `let...else if`. Emit the same error that `parse_block()` would,\n+                        // but explicitly point out that this pattern is not allowed.\n+                        let msg = \"conditional `else if` is not supported for `let...else`\";\n+                        return Err(self.error_block_no_opening_brace_msg(msg));\n+                    }\n                     let els = self.parse_block()?;\n                     self.check_let_else_init_bool_expr(&init);\n                     self.check_let_else_init_trailing_brace(&init);\n@@ -392,10 +398,9 @@ impl<'a> Parser<'a> {\n         Ok(block)\n     }\n \n-    fn error_block_no_opening_brace<T>(&mut self) -> PResult<'a, T> {\n+    fn error_block_no_opening_brace_msg(&mut self, msg: &str) -> DiagnosticBuilder<'a> {\n         let sp = self.token.span;\n-        let tok = super::token_descr(&self.token);\n-        let mut e = self.struct_span_err(sp, &format!(\"expected `{{`, found {}\", tok));\n+        let mut e = self.struct_span_err(sp, msg);\n         let do_not_suggest_help = self.token.is_keyword(kw::In) || self.token == token::Colon;\n \n         // Check to see if the user has written something like\n@@ -435,7 +440,13 @@ impl<'a> Parser<'a> {\n             _ => {}\n         }\n         e.span_label(sp, \"expected `{`\");\n-        Err(e)\n+        e\n+    }\n+\n+    fn error_block_no_opening_brace<T>(&mut self) -> PResult<'a, T> {\n+        let tok = super::token_descr(&self.token);\n+        let msg = format!(\"expected `{{`, found {}\", tok);\n+        Err(self.error_block_no_opening_brace_msg(&msg))\n     }\n \n     /// Parses a block. Inner attributes are allowed."}, {"sha": "c3a17330d6e2fe117c8a81264c746f88b799ebb7", "filename": "src/test/ui/let-else/let-else-if.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20/src%2Ftest%2Fui%2Flet-else%2Flet-else-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20/src%2Ftest%2Fui%2Flet-else%2Flet-else-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-if.rs?ref=5898c5d88e7a7b7a28ab8fcca360c868b7f65d20", "patch": "@@ -0,0 +1,10 @@\n+#![feature(let_else)]\n+\n+fn main() {\n+    let Some(_) = Some(()) else if true {\n+        //~^ ERROR conditional `else if` is not supported for `let...else`\n+        return;\n+    } else {\n+        return;\n+    };\n+}"}, {"sha": "38c739fd85072d8530897ca9614695fa49a2cbcb", "filename": "src/test/ui/let-else/let-else-if.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20/src%2Ftest%2Fui%2Flet-else%2Flet-else-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5898c5d88e7a7b7a28ab8fcca360c868b7f65d20/src%2Ftest%2Fui%2Flet-else%2Flet-else-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-if.stderr?ref=5898c5d88e7a7b7a28ab8fcca360c868b7f65d20", "patch": "@@ -0,0 +1,18 @@\n+error: conditional `else if` is not supported for `let...else`\n+  --> $DIR/let-else-if.rs:4:33\n+   |\n+LL |     let Some(_) = Some(()) else if true {\n+   |                                 ^^ expected `{`\n+   |\n+help: try placing this code inside a block\n+   |\n+LL ~     let Some(_) = Some(()) else { if true {\n+LL +\n+LL +         return;\n+LL +     } else {\n+LL +         return;\n+LL ~     } };\n+   |\n+\n+error: aborting due to previous error\n+"}]}