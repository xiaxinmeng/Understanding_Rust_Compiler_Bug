{"sha": "d6ceef95bae928dbaf6050c95939d39ac33e1725", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2Y2VlZjk1YmFlOTI4ZGJhZjYwNTBjOTU5MzlkMzlhYzMzZTE3MjU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-10T22:09:37Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-10T22:10:28Z"}, "message": "rustc: Move trans_compare into alt.rs", "tree": {"sha": "d26adab8d89ffe7d7b5f8cafa54254bb36e5360f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d26adab8d89ffe7d7b5f8cafa54254bb36e5360f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6ceef95bae928dbaf6050c95939d39ac33e1725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6ceef95bae928dbaf6050c95939d39ac33e1725", "html_url": "https://github.com/rust-lang/rust/commit/d6ceef95bae928dbaf6050c95939d39ac33e1725", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6ceef95bae928dbaf6050c95939d39ac33e1725/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a93de20148f215c6d542ea57a37825d7fa4d950d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a93de20148f215c6d542ea57a37825d7fa4d950d", "html_url": "https://github.com/rust-lang/rust/commit/a93de20148f215c6d542ea57a37825d7fa4d950d"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "835d836512492ee30f7da50a500c87a0658f4160", "filename": "src/rustc/middle/trans/alt.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d6ceef95bae928dbaf6050c95939d39ac33e1725/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6ceef95bae928dbaf6050c95939d39ac33e1725/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs?ref=d6ceef95bae928dbaf6050c95939d39ac33e1725", "patch": "@@ -427,6 +427,35 @@ impl branch_kind : cmp::Eq {\n     pure fn ne(&&other: branch_kind) -> bool { !self.eq(other) }\n }\n \n+// Compiles a comparison between two things.\n+fn trans_compare(cx: block, op: ast::binop, lhs: ValueRef,\n+                 _lhs_t: ty::t, rhs: ValueRef, rhs_t: ty::t) -> Result {\n+    let _icx = cx.insn_ctxt(\"trans_compare\");\n+    if ty::type_is_scalar(rhs_t) {\n+      let rs = compare_scalar_types(cx, lhs, rhs, rhs_t, op);\n+      return rslt(rs.bcx, rs.val);\n+    }\n+\n+    // Determine the operation we need.\n+    let llop = {\n+        match op {\n+          ast::eq | ast::ne => C_u8(abi::cmp_glue_op_eq),\n+          ast::lt | ast::ge => C_u8(abi::cmp_glue_op_lt),\n+          ast::le | ast::gt => C_u8(abi::cmp_glue_op_le),\n+          _ => cx.tcx().sess.bug(~\"trans_compare got non-comparison-op\")\n+        }\n+    };\n+\n+    let cmpval = glue::call_cmp_glue(cx, lhs, rhs, rhs_t, llop);\n+\n+    // Invert the result if necessary.\n+    match op {\n+      ast::eq | ast::lt | ast::le => rslt(cx, cmpval),\n+      ast::ne | ast::ge | ast::gt => rslt(cx, Not(cx, cmpval)),\n+      _ => cx.tcx().sess.bug(~\"trans_compare got non-comparison-op\")\n+    }\n+}\n+\n fn compile_submatch(bcx: block, m: match_, vals: ~[ValueRef],\n                     chk: Option<mk_fail>, &exits: ~[exit_node]) {\n     /*"}]}