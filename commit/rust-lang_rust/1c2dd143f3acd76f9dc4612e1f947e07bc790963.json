{"sha": "1c2dd143f3acd76f9dc4612e1f947e07bc790963", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMmRkMTQzZjNhY2Q3NmY5ZGM0NjEyZTFmOTQ3ZTA3YmM3OTA5NjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-28T20:12:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-28T20:12:10Z"}, "message": "Rollup merge of #64876 - vertexclique:vcq/fix-fn-name-intrinsic-op-unsafety, r=varkor\n\nFix typo in intrinsics op safety\n\nTitle pretty much sums up.", "tree": {"sha": "35a25b896c72ce5844859d13663b4450a4903a8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35a25b896c72ce5844859d13663b4450a4903a8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c2dd143f3acd76f9dc4612e1f947e07bc790963", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdj76aCRBK7hj4Ov3rIwAAdHIIAF7IIb7D9wKqifDJLSqwKO4G\nJy/HnDvDp3cyNeLdTKrjmS0pwgM8+sgWNqZvNU/52Ub7mvoVrPOJBB3h3IVEEZ7a\na4UzY8y4kqZm9VskW2G/1oPmJI3rklPu/jfjr3QrdBlRVGuWJdiDVPuqjMyL0zn5\nWEyNWgN41BE4qQEBUripqW9gdBL7qAGs/JvO7wa3KSVht6tyrMh5dzhsNXQ3GO4G\nRV070xrFZQpP+EXK0ByGXkerQc9vBqYiEeknhLgFOuAZ3mGCKXjIcmboYUKQ4tkM\nbyAzMZpXpNQfNloaNxGJz287wdQz+Q0M6joDNAeANkDPqaTC1F/vXlIs0N3KD/s=\n=01AI\n-----END PGP SIGNATURE-----\n", "payload": "tree 35a25b896c72ce5844859d13663b4450a4903a8e\nparent 787829d54a8e6e09c81e3c3b734a86ff69768ae7\nparent c666bd5570e62666b40d0a4c3eca7080667a92ef\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569701530 +0200\ncommitter GitHub <noreply@github.com> 1569701530 +0200\n\nRollup merge of #64876 - vertexclique:vcq/fix-fn-name-intrinsic-op-unsafety, r=varkor\n\nFix typo in intrinsics op safety\n\nTitle pretty much sums up.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2dd143f3acd76f9dc4612e1f947e07bc790963", "html_url": "https://github.com/rust-lang/rust/commit/1c2dd143f3acd76f9dc4612e1f947e07bc790963", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c2dd143f3acd76f9dc4612e1f947e07bc790963/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "787829d54a8e6e09c81e3c3b734a86ff69768ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/787829d54a8e6e09c81e3c3b734a86ff69768ae7", "html_url": "https://github.com/rust-lang/rust/commit/787829d54a8e6e09c81e3c3b734a86ff69768ae7"}, {"sha": "c666bd5570e62666b40d0a4c3eca7080667a92ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/c666bd5570e62666b40d0a4c3eca7080667a92ef", "html_url": "https://github.com/rust-lang/rust/commit/c666bd5570e62666b40d0a4c3eca7080667a92ef"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "aeb2c40e2ef832f7ac4cb377e210cbbabedf388e", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c2dd143f3acd76f9dc4612e1f947e07bc790963/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2dd143f3acd76f9dc4612e1f947e07bc790963/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=1c2dd143f3acd76f9dc4612e1f947e07bc790963", "patch": "@@ -63,7 +63,7 @@ fn equate_intrinsic_type<'tcx>(\n }\n \n /// Returns `true` if the given intrinsic is unsafe to call or not.\n-pub fn intrisic_operation_unsafety(intrinsic: &str) -> hir::Unsafety {\n+pub fn intrinsic_operation_unsafety(intrinsic: &str) -> hir::Unsafety {\n     match intrinsic {\n         \"size_of\" | \"min_align_of\" | \"needs_drop\" |\n         \"add_with_overflow\" | \"sub_with_overflow\" | \"mul_with_overflow\" |\n@@ -130,7 +130,7 @@ pub fn check_intrinsic_type(tcx: TyCtxt<'_>, it: &hir::ForeignItem) {\n     } else if &name[..] == \"abort\" || &name[..] == \"unreachable\" {\n         (0, Vec::new(), tcx.types.never, hir::Unsafety::Unsafe)\n     } else {\n-        let unsafety = intrisic_operation_unsafety(&name[..]);\n+        let unsafety = intrinsic_operation_unsafety(&name[..]);\n         let (n_tps, inputs, output) = match &name[..] {\n             \"breakpoint\" => (0, Vec::new(), tcx.mk_unit()),\n             \"size_of\" |"}, {"sha": "8c3d6357f0bbf32ed17ef1a39bb87c06ae066bb6", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c2dd143f3acd76f9dc4612e1f947e07bc790963/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2dd143f3acd76f9dc4612e1f947e07bc790963/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=1c2dd143f3acd76f9dc4612e1f947e07bc790963", "patch": "@@ -16,7 +16,7 @@\n \n use crate::astconv::{AstConv, Bounds, SizedByDefault};\n use crate::constrained_generic_params as cgp;\n-use crate::check::intrinsic::intrisic_operation_unsafety;\n+use crate::check::intrinsic::intrinsic_operation_unsafety;\n use crate::lint;\n use crate::middle::resolve_lifetime as rl;\n use crate::middle::weak_lang_items;\n@@ -2366,7 +2366,7 @@ fn compute_sig_of_foreign_fn_decl<'tcx>(\n     abi: abi::Abi,\n ) -> ty::PolyFnSig<'tcx> {\n     let unsafety = if abi == abi::Abi::RustIntrinsic {\n-        intrisic_operation_unsafety(&*tcx.item_name(def_id).as_str())\n+        intrinsic_operation_unsafety(&*tcx.item_name(def_id).as_str())\n     } else {\n         hir::Unsafety::Unsafe\n     };"}]}