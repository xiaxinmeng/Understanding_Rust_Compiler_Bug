{"sha": "9ac1e6d9787094d7028b14359f44f48c28b73ef7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYzFlNmQ5Nzg3MDk0ZDcwMjhiMTQzNTlmNDRmNDhjMjhiNzNlZjc=", "commit": {"author": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2017-12-03T01:52:48Z"}, "committer": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2017-12-17T02:03:51Z"}, "message": "Add configuration stability information", "tree": {"sha": "ab544f2f6827606228bd1e5481bd35be39089510", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab544f2f6827606228bd1e5481bd35be39089510"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ac1e6d9787094d7028b14359f44f48c28b73ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ac1e6d9787094d7028b14359f44f48c28b73ef7", "html_url": "https://github.com/rust-lang/rust/commit/9ac1e6d9787094d7028b14359f44f48c28b73ef7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ac1e6d9787094d7028b14359f44f48c28b73ef7/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a4daf0d415cf5760c8133d6d643b235de7583f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a4daf0d415cf5760c8133d6d643b235de7583f1", "html_url": "https://github.com/rust-lang/rust/commit/7a4daf0d415cf5760c8133d6d643b235de7583f1"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "16ff6161577de71bc8c0631093a5fe816db3fd1e", "filename": "Configurations.md", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/9ac1e6d9787094d7028b14359f44f48c28b73ef7/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ac1e6d9787094d7028b14359f44f48c28b73ef7/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=9ac1e6d9787094d7028b14359f44f48c28b73ef7", "patch": "@@ -9,6 +9,12 @@ indent_style = \"Block\"\n reorder_imported_names = true\n ```\n \n+Each configuration option is either stable or unstable.\n+Stable options can be used directly, while unstable options are opt-in.\n+\n+To enable unstable options, set `unstable_features = true` in `rustfmt.toml` or pass `--unstable-options` to rustfmt,\n+and ensure that the environment variable `CFG_RELEASE_CHANNEL` is set to `nightly`.\n+\n # Configuration Options\n \n Below you find a detailed visual guide on all the supported configuration options of rustfmt:\n@@ -20,6 +26,7 @@ Indent on expressions or items.\n \n - **Default value**: `\"Block\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n+- **Stable**: No\n \n ### Array\n \n@@ -218,7 +225,7 @@ See also: [`struct_lit_single_line`](#struct_lit_single_line), [`indent_style`](\n \n ```rust\n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-where \n+where\n     Ipsum: Eq,\n     Dolor: Eq,\n     Sit: Eq,\n@@ -248,6 +255,7 @@ Try to put attributes on the same line as fields and variants\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -293,6 +301,7 @@ Whether to use different formatting for items and expressions if they satisfy a\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -354,6 +363,7 @@ Where to put a binary operator when a binary expression goes multiline.\n \n - **Default value**: `\"Front\"`\n - **Possible values**: `\"Front\"`, `\"Back\"`\n+- **Stable**: No\n \n #### `\"Front\"` (default):\n \n@@ -391,6 +401,7 @@ Indentation of chain\n \n - **Default value**: `\"Block\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n+- **Stable**: ?\n \n #### `\"Block\"` (default):\n \n@@ -423,6 +434,7 @@ Combine control expressions with function calls.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -530,6 +542,7 @@ Maximum length of comments. No effect unless`wrap_comments = true`.\n \n - **Default value**: `80`\n - **Possible values**: any positive integer\n+- **Stable**: No\n \n **Note:** A value of `0` results in [`wrap_comments`](#wrap_comments) being applied regardless of a line's width.\n \n@@ -552,6 +565,7 @@ Replace strings of _ wildcards by a single .. in tuple patterns\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -571,6 +585,7 @@ Brace style for control flow constructs\n \n - **Default value**: `\"AlwaysSameLine\"`\n - **Possible values**: `\"AlwaysNextLine\"`, `\"AlwaysSameLine\"`, `\"ClosingNextLine\"`\n+- **Stable**: No\n \n #### `\"AlwaysSameLine\"` (default):\n \n@@ -612,13 +627,15 @@ Don't reformat anything\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n ## `error_on_line_overflow`\n \n Error if unable to get all lines within `max_width`\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n See also [`max_width`](#max_width).\n \n@@ -628,6 +645,7 @@ Error if unable to get all comment lines within `comment_width`.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n See also [`comment_width`](#comment_width).\n \n@@ -637,6 +655,7 @@ Argument density in functions\n \n - **Default value**: `\"Tall\"`\n - **Possible values**: `\"Compressed\"`, `\"Tall\"`, `\"Vertical\"`\n+- **Stable**: No\n \n #### `\"Tall\"` (default):\n \n@@ -739,6 +758,7 @@ Brace style for items\n \n - **Default value**: `\"SameLineWhere\"`\n - **Possible values**: `\"AlwaysNextLine\"`, `\"PreferSameLine\"`, `\"SameLineWhere\"`\n+- **Stable**: No\n \n ### Functions\n \n@@ -851,6 +871,7 @@ Put empty-body functions and impls on a single line\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -879,6 +900,7 @@ Put single-expression functions on a single line\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -913,6 +935,7 @@ To force single line where layout\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -943,6 +966,7 @@ Always print the abi for extern items\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n **Note:** Non-\"C\" ABIs are always printed. If `false` then \"C\" is removed.\n \n@@ -968,6 +992,7 @@ Format string literals where necessary\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -991,6 +1016,7 @@ Use tab characters for indentation, spaces for alignment\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1017,6 +1043,7 @@ Indent style of imports\n \n - **Default Value**: `\"Visual\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n+- **Stable**: No\n \n #### `\"Visual\"` (default):\n \n@@ -1044,6 +1071,7 @@ Item layout inside a imports block\n \n - **Default value**: \"Mixed\"\n - **Possible values**: \"Horizontal\", \"HorizontalVertical\", \"Mixed\", \"Vertical\"\n+- **Stable**: No\n \n #### `\"Mixed\"` (default):\n \n@@ -1099,6 +1127,7 @@ Put a trailing comma after a block based match arm (non-block arms are not affec\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1130,6 +1159,7 @@ Maximum width of each line\n \n - **Default value**: `100`\n - **Possible values**: any positive integer\n+- **Stable**: Yes\n \n See also [`error_on_line_overflow`](#error_on_line_overflow).\n \n@@ -1139,6 +1169,7 @@ Merge multiple derives into a single one.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `true` (default):\n \n@@ -1162,6 +1193,7 @@ Force multiline closure and match arm bodies to be wrapped in a block\n \n - **Default value**: `false`\n - **Possible values**: `false`, `true`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1207,13 +1239,15 @@ Unix or Windows line endings\n \n - **Default value**: `\"Unix\"`\n - **Possible values**: `\"Native\"`, `\"Unix\"`, `\"Windows\"`\n+- **Stable**: Yes\n \n ## `normalize_comments`\n \n Convert /* */ comments to // comments where possible\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1241,6 +1275,7 @@ Reorder lists of names in import statements alphabetically\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1262,6 +1297,7 @@ Reorder import statements alphabetically\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1289,6 +1325,7 @@ Reorder import statements in group\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n **Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n \n@@ -1324,6 +1361,7 @@ Reorder `extern crate` statements alphabetically\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1351,6 +1389,7 @@ Reorder `extern crate` statements in group\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n **Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n \n@@ -1386,6 +1425,7 @@ Report `TODO` items in comments.\n \n - **Default value**: `\"Never\"`\n - **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n+- **Stable**: No\n \n Warns about any comments containing `TODO` in them when set to `\"Always\"`. If\n it contains a `#X` (with `X` being a number) in parentheses following the\n@@ -1399,6 +1439,7 @@ Report `FIXME` items in comments.\n \n - **Default value**: `\"Never\"`\n - **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n+- **Stable**: No\n \n Warns about any comments containing `FIXME` in them when set to `\"Always\"`. If\n it contains a `#X` (with `X` being a number) in parentheses following the\n@@ -1413,13 +1454,15 @@ Don't reformat out of line modules\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n ## `space_after_colon`\n \n Leave a space after the colon.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1451,6 +1494,7 @@ Leave a space before the colon.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1482,6 +1526,7 @@ The maximum diff of width between struct fields to be aligned with each other.\n \n - **Default value** : 0\n - **Possible values**: any positive integer\n+- **Stable**: No\n \n #### `0` (default):\n \n@@ -1509,6 +1554,7 @@ Put spaces around the .. and ... range operators\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1528,6 +1574,7 @@ Put spaces within non-empty generic arguments, parentheses, and square brackets\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1569,6 +1616,7 @@ Put small struct literals on a single line\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1594,6 +1642,7 @@ Number of spaces per tab\n \n - **Default value**: `4`\n - **Possible values**: any positive integer\n+- **Stable**: Yes\n \n #### `4` (default):\n \n@@ -1626,6 +1675,7 @@ How to handle trailing commas for lists\n \n - **Default value**: `\"Vertical\"`\n - **Possible values**: `\"Always\"`, `\"Never\"`, `\"Vertical\"`\n+- **Stable**: No\n \n #### `\"Vertical\"` (default):\n \n@@ -1677,6 +1727,7 @@ Add trailing semicolon after break, continue and return\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n ```rust\n@@ -1698,6 +1749,7 @@ Determines if `+` or `=` are wrapped in spaces in the punctuation of types\n \n - **Default value**: `\"Wide\"`\n - **Possible values**: `\"Compressed\"`, `\"Wide\"`\n+- **Stable**: No\n \n #### `\"Wide\"` (default):\n \n@@ -1721,6 +1773,7 @@ Replace uses of the try! macro by the ? shorthand\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1741,6 +1794,7 @@ Break comments to fit on the line\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1764,6 +1818,7 @@ Wrap the body of arms in blocks when it does not fit on the same line with the p\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1794,3 +1849,4 @@ What Write Mode to use when none is supplied: Replace, Overwrite, Display, Diff,\n \n - **Default value**: `\"Overwrite\"`\n - **Possible values**: `\"Checkstyle\"`, `\"Coverage\"`, `\"Diff\"`, `\"Display\"`, `\"Overwrite\"`, `\"Plain\"`, `\"Replace\"`\n+- **Stable**: No"}]}