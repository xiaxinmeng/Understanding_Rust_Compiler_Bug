{"sha": "c938007f90711d6acc8b55e15a5e3cf7cc147e91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MzgwMDdmOTA3MTFkNmFjYzhiNTVlMTVhNWUzY2Y3Y2MxNDdlOTE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-17T20:12:43Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-17T20:12:43Z"}, "message": "add test for hashing trait impls", "tree": {"sha": "5de6c5acb31d5cca80755c8c2a834f385152d3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5de6c5acb31d5cca80755c8c2a834f385152d3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c938007f90711d6acc8b55e15a5e3cf7cc147e91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c938007f90711d6acc8b55e15a5e3cf7cc147e91", "html_url": "https://github.com/rust-lang/rust/commit/c938007f90711d6acc8b55e15a5e3cf7cc147e91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c938007f90711d6acc8b55e15a5e3cf7cc147e91/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab79438d68dbc79da41fd97b2ffc3238d039b02d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab79438d68dbc79da41fd97b2ffc3238d039b02d", "html_url": "https://github.com/rust-lang/rust/commit/ab79438d68dbc79da41fd97b2ffc3238d039b02d"}], "stats": {"total": 404, "additions": 404, "deletions": 0}, "files": [{"sha": "500aaf52324b028c5447b9e32ac77f947df92477", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "added", "additions": 404, "deletions": 0, "changes": 404, "blob_url": "https://github.com/rust-lang/rust/blob/c938007f90711d6acc8b55e15a5e3cf7cc147e91/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c938007f90711d6acc8b55e15a5e3cf7cc147e91/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=c938007f90711d6acc8b55e15a5e3cf7cc147e91", "patch": "@@ -0,0 +1,404 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test case tests the incremental compilation hash (ICH) implementation\n+// for let expressions.\n+\n+// The general pattern followed here is: Change one thing between rev1 and rev2\n+// and make sure that the hash has changed, then change nothing between rev2 and\n+// rev3 and make sure that the hash has not changed.\n+\n+// must-compile-successfully\n+// revisions: cfail1 cfail2 cfail3\n+// compile-flags: -Z query-dep-graph\n+\n+\n+#![allow(warnings)]\n+#![feature(rustc_attrs)]\n+#![feature(specialization)]\n+#![crate_type=\"rlib\"]\n+\n+struct Foo;\n+\n+// Change Method Name -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait ChangeMethodNameTrait {\n+    fn method_name();\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeMethodNameTrait for Foo {\n+    fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub trait ChangeMethodNameTrait {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name2();\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeMethodNameTrait for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name2() { }\n+}\n+\n+// Change Method Body -----------------------------------------------------------\n+//\n+// This should affect the method itself, but not the trait.\n+\n+pub trait ChangeMethodBodyTrait {\n+    fn method_name();\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeMethodBodyTrait for Foo {\n+    fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeMethodBodyTrait for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name() {\n+        ()\n+    }\n+}\n+\n+// Change Method Selfness -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait ChangeMethodSelfnessTrait {\n+    fn method_name();\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeMethodSelfnessTrait for Foo {\n+    fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait ChangeMethodSelfnessTrait {\n+    fn method_name(&self);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeMethodSelfnessTrait for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name(&self) {\n+        ()\n+    }\n+}\n+\n+// Change Method Selfness -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait RemoveMethodSelfnessTrait {\n+    fn method_name(&self);\n+}\n+\n+#[cfg(cfail1)]\n+impl RemoveMethodSelfnessTrait for Foo {\n+    fn method_name(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait RemoveMethodSelfnessTrait {\n+    fn method_name();\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl RemoveMethodSelfnessTrait for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name() {\n+        ()\n+    }\n+}\n+\n+// Change Method Selfmutness -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait ChangeMethodSelfmutnessTrait {\n+    fn method_name(&self);\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeMethodSelfmutnessTrait for Foo {\n+    fn method_name(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait ChangeMethodSelfmutnessTrait {\n+    fn method_name(&mut self);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeMethodSelfmutnessTrait for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name(&mut self) {\n+        ()\n+    }\n+}\n+\n+// Change item kind -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait ChangeItemKindTrait {\n+    fn name();\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeItemKindTrait for Foo {\n+    fn name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait ChangeItemKindTrait {\n+    type name;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeItemKindTrait for Foo {\n+    type name = ();\n+}\n+\n+// Remove item -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait RemoveItemTrait {\n+    type TypeName;\n+    fn method_name();\n+}\n+\n+#[cfg(cfail1)]\n+impl RemoveItemTrait for Foo {\n+    type TypeName = ();\n+    fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait RemoveItemTrait {\n+    type TypeName;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl RemoveItemTrait for Foo {\n+    type TypeName = ();\n+}\n+\n+// Add item -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait AddItemTrait {\n+    type TypeName;\n+}\n+\n+#[cfg(cfail1)]\n+impl AddItemTrait for Foo {\n+    type TypeName = ();\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait AddItemTrait {\n+    type TypeName;\n+    fn method_name();\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl AddItemTrait for Foo {\n+    type TypeName = ();\n+    fn method_name() { }\n+}\n+\n+// Change has-value -----------------------------------------------------------\n+\n+#[cfg(cfail1)]\n+pub trait ChangeHasValueTrait {\n+    fn method_name();\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeHasValueTrait for Foo {\n+    fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub trait ChangeHasValueTrait {\n+    fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeHasValueTrait for Foo {\n+    fn method_name() { }\n+}\n+\n+// Add default\n+\n+pub trait AddDefaultTrait {\n+    fn method_name();\n+}\n+\n+#[cfg(cfail1)]\n+impl AddDefaultTrait for Foo {\n+    fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl AddDefaultTrait for Foo {\n+    default fn method_name() { }\n+}\n+\n+// Remove default\n+\n+pub trait RemoveDefaultTrait {\n+    fn method_name();\n+}\n+\n+#[cfg(cfail1)]\n+impl RemoveDefaultTrait for Foo {\n+    default fn method_name() { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl RemoveDefaultTrait for Foo {\n+    fn method_name() { }\n+}\n+\n+// Add arguments\n+\n+#[cfg(cfail1)]\n+pub trait AddArgumentTrait {\n+    fn method_name(&self);\n+}\n+\n+#[cfg(cfail1)]\n+impl AddArgumentTrait for Foo {\n+    fn method_name(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait AddArgumentTrait {\n+    fn method_name(&self, x: u32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl AddArgumentTrait for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name(&self, _x: u32) { }\n+}\n+\n+// Change argument type\n+\n+#[cfg(cfail1)]\n+pub trait ChangeArgumentTypeTrait {\n+    fn method_name(&self, x: u32);\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeArgumentTypeTrait for Foo {\n+    fn method_name(&self, _x: u32) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+pub trait ChangeArgumentTypeTrait {\n+    fn method_name(&self, x: char);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeArgumentTypeTrait for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn method_name(&self, _x: char) { }\n+}\n+"}]}