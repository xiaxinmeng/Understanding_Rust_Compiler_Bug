{"sha": "aa35ab81ea4bd427a86e0c781c342835a020e6fe", "node_id": "C_kwDOAAsO6NoAKGFhMzVhYjgxZWE0YmQ0MjdhODZlMGM3ODFjMzQyODM1YTAyMGU2ZmU", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-09-23T16:03:44Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-09-23T18:55:37Z"}, "message": "Stabilize const `BTree{Map,Set}::new`\n\nSince `len` and `is_empty` are not const stable yet, this also\ncreates a new feature for them since they previously used the same\n`const_btree_new` feature.", "tree": {"sha": "d973b07b292a33e254f246fd0fe26f1610b715a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d973b07b292a33e254f246fd0fe26f1610b715a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa35ab81ea4bd427a86e0c781c342835a020e6fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa35ab81ea4bd427a86e0c781c342835a020e6fe", "html_url": "https://github.com/rust-lang/rust/commit/aa35ab81ea4bd427a86e0c781c342835a020e6fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa35ab81ea4bd427a86e0c781c342835a020e6fe/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d44e09cb1db2788f59159c4b9055e339ed2181d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d44e09cb1db2788f59159c4b9055e339ed2181d", "html_url": "https://github.com/rust-lang/rust/commit/4d44e09cb1db2788f59159c4b9055e339ed2181d"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "556ff1cc48e4d3e29345a4429db9dc39e928815f", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa35ab81ea4bd427a86e0c781c342835a020e6fe/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa35ab81ea4bd427a86e0c781c342835a020e6fe/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=aa35ab81ea4bd427a86e0c781c342835a020e6fe", "patch": "@@ -4,7 +4,7 @@\n \n #![feature(associated_type_defaults)]\n #![feature(closure_track_caller)]\n-#![feature(const_btree_new)]\n+#![feature(const_btree_len)]\n #![cfg_attr(bootstrap, feature(let_else))]\n #![feature(once_cell)]\n #![feature(min_specialization)]"}, {"sha": "3018d1c9125bff747dc7c330c09c1cdbbcc2e7a8", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=aa35ab81ea4bd427a86e0c781c342835a020e6fe", "patch": "@@ -580,7 +580,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// map.insert(1, \"a\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    #[rustc_const_stable(feature = \"const_btree_new\", since = \"CURRENT_RUSTC_VERSION\")]\n     #[must_use]\n     pub const fn new() -> BTreeMap<K, V> {\n         BTreeMap { root: None, length: 0, alloc: ManuallyDrop::new(Global), _marker: PhantomData }\n@@ -2392,7 +2392,7 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n     pub const fn len(&self) -> usize {\n         self.length\n     }\n@@ -2413,7 +2413,7 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n     pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }"}, {"sha": "3caaf521240d2102575902780112932852b4eee9", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=aa35ab81ea4bd427a86e0c781c342835a020e6fe", "patch": "@@ -343,7 +343,7 @@ impl<T> BTreeSet<T> {\n     /// let mut set: BTreeSet<i32> = BTreeSet::new();\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    #[rustc_const_stable(feature = \"const_btree_new\", since = \"CURRENT_RUSTC_VERSION\")]\n     #[must_use]\n     pub const fn new() -> BTreeSet<T> {\n         BTreeSet { map: BTreeMap::new() }\n@@ -1174,7 +1174,7 @@ impl<T, A: Allocator + Clone> BTreeSet<T, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n     pub const fn len(&self) -> usize {\n         self.map.len()\n     }\n@@ -1193,7 +1193,7 @@ impl<T, A: Allocator + Clone> BTreeSet<T, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n     pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }"}, {"sha": "fe89394dda9285e26e9c932a3964c41da307e81f", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=aa35ab81ea4bd427a86e0c781c342835a020e6fe", "patch": "@@ -99,7 +99,7 @@\n #![feature(coerce_unsized)]\n #![cfg_attr(not(no_global_oom_handling), feature(const_alloc_error))]\n #![feature(const_box)]\n-#![cfg_attr(not(no_global_oom_handling), feature(const_btree_new))]\n+#![cfg_attr(not(no_global_oom_handling), feature(const_btree_len))]\n #![feature(const_cow_is_borrowed)]\n #![feature(const_convert)]\n #![feature(const_size_of_val)]"}, {"sha": "55aced5106c94ae13e5dca717d711a0cbb24a196", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa35ab81ea4bd427a86e0c781c342835a020e6fe/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=aa35ab81ea4bd427a86e0c781c342835a020e6fe", "patch": "@@ -32,7 +32,7 @@\n #![feature(slice_group_by)]\n #![feature(slice_partition_dedup)]\n #![feature(string_remove_matches)]\n-#![feature(const_btree_new)]\n+#![feature(const_btree_len)]\n #![feature(const_default_impls)]\n #![feature(const_trait_impl)]\n #![feature(const_str_from_utf8)]"}, {"sha": "f58cdb5945e53e18ee3cb65894da7ba7954fb99b", "filename": "src/test/ui/consts/issue-88071.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa35ab81ea4bd427a86e0c781c342835a020e6fe/src%2Ftest%2Fui%2Fconsts%2Fissue-88071.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa35ab81ea4bd427a86e0c781c342835a020e6fe/src%2Ftest%2Fui%2Fconsts%2Fissue-88071.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-88071.rs?ref=aa35ab81ea4bd427a86e0c781c342835a020e6fe", "patch": "@@ -2,8 +2,6 @@\n //\n // regression test for #88071\n \n-#![feature(const_btree_new)]\n-\n use std::collections::BTreeMap;\n \n pub struct CustomMap<K, V>(BTreeMap<K, V>);"}, {"sha": "b2dc2248b55626c2c0cd5461f2519a987af396a3", "filename": "src/tools/clippy/tests/ui/crashes/ice-7126.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa35ab81ea4bd427a86e0c781c342835a020e6fe/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7126.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa35ab81ea4bd427a86e0c781c342835a020e6fe/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7126.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7126.rs?ref=aa35ab81ea4bd427a86e0c781c342835a020e6fe", "patch": "@@ -1,13 +1,13 @@\n // This test requires a feature gated const fn and will stop working in the future.\n \n-#![feature(const_btree_new)]\n+#![feature(const_btree_len)]\n \n use std::collections::BTreeMap;\n \n-struct Foo(BTreeMap<i32, i32>);\n+struct Foo(usize);\n impl Foo {\n     fn new() -> Self {\n-        Self(BTreeMap::new())\n+        Self(BTreeMap::len(&BTreeMap::<u8, u8>::new()))\n     }\n }\n "}]}