{"sha": "eda626cfc9659658a89cc28680066f69aef11b0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYTYyNmNmYzk2NTk2NThhODljYzI4NjgwMDY2ZjY5YWVmMTFiMGU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-15T09:55:52Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-15T09:55:52Z"}, "message": "Call syntax::with_globals before using a parser", "tree": {"sha": "571ea989f2678774e0ee5a153f385b65c7ce8f39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/571ea989f2678774e0ee5a153f385b65c7ce8f39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eda626cfc9659658a89cc28680066f69aef11b0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eda626cfc9659658a89cc28680066f69aef11b0e", "html_url": "https://github.com/rust-lang/rust/commit/eda626cfc9659658a89cc28680066f69aef11b0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eda626cfc9659658a89cc28680066f69aef11b0e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a353294fe461438fd7f1f622e66aea10b7f63e76", "url": "https://api.github.com/repos/rust-lang/rust/commits/a353294fe461438fd7f1f622e66aea10b7f63e76", "html_url": "https://github.com/rust-lang/rust/commit/a353294fe461438fd7f1f622e66aea10b7f63e76"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "37cf29196ace9ce07bd8795546c3cb5361841ec1", "filename": "src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eda626cfc9659658a89cc28680066f69aef11b0e/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eda626cfc9659658a89cc28680066f69aef11b0e/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=eda626cfc9659658a89cc28680066f69aef11b0e", "patch": "@@ -657,6 +657,14 @@ pub fn format_code_block(code_snippet: &str, config: &Config) -> Option<String>\n }\n \n pub fn format_input<T: Write>(\n+    input: Input,\n+    config: &Config,\n+    out: Option<&mut T>,\n+) -> Result<(Summary, FileMap, FormatReport), (io::Error, Summary)> {\n+    syntax::with_globals(|| format_input_inner(input, config, out))\n+}\n+\n+fn format_input_inner<T: Write>(\n     input: Input,\n     config: &Config,\n     mut out: Option<&mut T>,"}, {"sha": "b260e15501fcfb39cec97c9a9fb1fcf4b20784f1", "filename": "src/macros.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/eda626cfc9659658a89cc28680066f69aef11b0e/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eda626cfc9659658a89cc28680066f69aef11b0e/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=eda626cfc9659658a89cc28680066f69aef11b0e", "patch": "@@ -962,22 +962,27 @@ fn format_lazy_static(context: &RewriteContext, shape: Shape, ts: &TokenStream)\n #[cfg(test)]\n mod test {\n     use super::*;\n+    use syntax;\n     use syntax::parse::{parse_stream_from_source_str, ParseSess};\n     use syntax::codemap::{FileName, FilePathMapping};\n \n     fn format_macro_args_str(s: &str) -> String {\n-        let input = parse_stream_from_source_str(\n-            FileName::Custom(\"stdin\".to_owned()),\n-            s.to_owned(),\n-            &ParseSess::new(FilePathMapping::empty()),\n-            None,\n-        );\n-        let shape = Shape {\n-            width: 100,\n-            indent: Indent::empty(),\n-            offset: 0,\n-        };\n-        format_macro_args(input.into(), shape).unwrap()\n+        let mut result = String::new();\n+        syntax::with_globals(|| {\n+            let input = parse_stream_from_source_str(\n+                FileName::Custom(\"stdin\".to_owned()),\n+                s.to_owned(),\n+                &ParseSess::new(FilePathMapping::empty()),\n+                None,\n+            );\n+            let shape = Shape {\n+                width: 100,\n+                indent: Indent::empty(),\n+                offset: 0,\n+            };\n+            result = format_macro_args(input.into(), shape).unwrap();\n+        });\n+        result\n     }\n \n     #[test]"}]}