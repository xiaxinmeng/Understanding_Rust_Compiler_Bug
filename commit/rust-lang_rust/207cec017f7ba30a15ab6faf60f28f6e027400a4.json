{"sha": "207cec017f7ba30a15ab6faf60f28f6e027400a4", "node_id": "C_kwDOAAsO6NoAKDIwN2NlYzAxN2Y3YmEzMGExNWFiNmZhZjYwZjI4ZjZlMDI3NDAwYTQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-27T05:04:18Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-27T07:48:15Z"}, "message": "Clean up `with_task`.\n\nCurrently it creates an `Option` and then does `map`/`unwrap_or` and\n`map_or_else` on it, which is hard to read.\n\nThis commit simplifies things by moving more code into the two arms of\nthe if/else.", "tree": {"sha": "1dd06701f31ac7c1f9f4654354480e68b65978c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dd06701f31ac7c1f9f4654354480e68b65978c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/207cec017f7ba30a15ab6faf60f28f6e027400a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/207cec017f7ba30a15ab6faf60f28f6e027400a4", "html_url": "https://github.com/rust-lang/rust/commit/207cec017f7ba30a15ab6faf60f28f6e027400a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/207cec017f7ba30a15ab6faf60f28f6e027400a4/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "458d4dae845ec155b285681a5b88305641abb868", "url": "https://api.github.com/repos/rust-lang/rust/commits/458d4dae845ec155b285681a5b88305641abb868", "html_url": "https://github.com/rust-lang/rust/commit/458d4dae845ec155b285681a5b88305641abb868"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "aada94ab26647194a02bedf09579eb19708dad3b", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/207cec017f7ba30a15ab6faf60f28f6e027400a4/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/207cec017f7ba30a15ab6faf60f28f6e027400a4/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=207cec017f7ba30a15ab6faf60f28f6e027400a4", "patch": "@@ -354,24 +354,20 @@ impl<K: DepKind> DepGraphData<K> {\n                  - dep-node: {key:?}\"\n         );\n \n-        let task_deps = if cx.dep_context().is_eval_always(key.kind) {\n-            None\n+        let with_deps = |task_deps| K::with_deps(task_deps, || task(cx, arg));\n+        let (result, edges) = if cx.dep_context().is_eval_always(key.kind) {\n+            (with_deps(TaskDepsRef::EvalAlways), smallvec![])\n         } else {\n-            Some(Lock::new(TaskDeps {\n+            let task_deps = Lock::new(TaskDeps {\n                 #[cfg(debug_assertions)]\n                 node: Some(key),\n                 reads: SmallVec::new(),\n                 read_set: Default::default(),\n                 phantom_data: PhantomData,\n-            }))\n+            });\n+            (with_deps(TaskDepsRef::Allow(&task_deps)), task_deps.into_inner().reads)\n         };\n \n-        let task_deps_ref =\n-            task_deps.as_ref().map(TaskDepsRef::Allow).unwrap_or(TaskDepsRef::EvalAlways);\n-\n-        let result = K::with_deps(task_deps_ref, || task(cx, arg));\n-        let edges = task_deps.map_or_else(|| smallvec![], |lock| lock.into_inner().reads);\n-\n         let dcx = cx.dep_context();\n         let hashing_timer = dcx.profiler().incr_result_hashing();\n         let current_fingerprint ="}]}