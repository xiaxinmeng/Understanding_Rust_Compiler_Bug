{"sha": "12e23bd60b9c3dde24bb9fa597ad88705abd2b76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZTIzYmQ2MGI5YzNkZGUyNGJiOWZhNTk3YWQ4ODcwNWFiZDJiNzY=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-04-11T12:23:07Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-04-11T12:40:49Z"}, "message": "vscode: fix typing bug in config", "tree": {"sha": "80196efd964aaaf7d3da56c5d46b441df9ccbf07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80196efd964aaaf7d3da56c5d46b441df9ccbf07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12e23bd60b9c3dde24bb9fa597ad88705abd2b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12e23bd60b9c3dde24bb9fa597ad88705abd2b76", "html_url": "https://github.com/rust-lang/rust/commit/12e23bd60b9c3dde24bb9fa597ad88705abd2b76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12e23bd60b9c3dde24bb9fa597ad88705abd2b76/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ecdba20df41a800222d0fd864843843feb6e875", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ecdba20df41a800222d0fd864843843feb6e875", "html_url": "https://github.com/rust-lang/rust/commit/0ecdba20df41a800222d0fd864843843feb6e875"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "35a05131c88773050f97bf91f1f4d75ffcf8492c", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 30, "deletions": 9, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/12e23bd60b9c3dde24bb9fa597ad88705abd2b76/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/12e23bd60b9c3dde24bb9fa597ad88705abd2b76/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=12e23bd60b9c3dde24bb9fa597ad88705abd2b76", "patch": "@@ -66,23 +66,44 @@ export class Config {\n         return vscode.workspace.getConfiguration(this.rootSection);\n     }\n \n-    get serverPath() { return this.cfg.get<null | string>(\"serverPath\")!; }\n-    get channel() { return this.cfg.get<UpdatesChannel>(\"updates.channel\")!; }\n-    get askBeforeDownload() { return this.cfg.get<boolean>(\"updates.askBeforeDownload\")!; }\n-    get traceExtension() { return this.cfg.get<boolean>(\"trace.extension\")!; }\n+    /**\n+     * Beware that postfix `!` operator erases both `null` and `undefined`.\n+     * This is why the following doesn't work as expected:\n+     *\n+     * ```ts\n+     * const nullableNum = vscode\n+     *  .workspace\n+     *  .getConfiguration\n+     *  .getConfiguration(\"rust-analyer\")\n+     *  .get<number | null>(path)!;\n+     *\n+     * // What happens is that type of `nullableNum` is `number` but not `null | number`:\n+     * const fullFledgedNum: number = nullableNum;\n+     * ```\n+     * So this getter handles this quirk by not requiring the caller to use postfix `!`\n+     */\n+    private get<T>(path: string): T {\n+        return this.cfg.get<T>(path)!;\n+    }\n+\n+    get serverPath() { return this.get<null | string>(\"serverPath\"); }\n+    get channel() { return this.get<UpdatesChannel>(\"updates.channel\"); }\n+    get askBeforeDownload() { return this.get<boolean>(\"updates.askBeforeDownload\"); }\n+    get traceExtension() { return this.get<boolean>(\"trace.extension\"); }\n+\n \n     get inlayHints() {\n         return {\n-            typeHints: this.cfg.get<boolean>(\"inlayHints.typeHints\")!,\n-            parameterHints: this.cfg.get<boolean>(\"inlayHints.parameterHints\")!,\n-            chainingHints: this.cfg.get<boolean>(\"inlayHints.chainingHints\")!,\n-            maxLength: this.cfg.get<null | number>(\"inlayHints.maxLength\")!,\n+            typeHints: this.get<boolean>(\"inlayHints.typeHints\"),\n+            parameterHints: this.get<boolean>(\"inlayHints.parameterHints\"),\n+            chainingHints: this.get<boolean>(\"inlayHints.chainingHints\"),\n+            maxLength: this.get<null | number>(\"inlayHints.maxLength\"),\n         };\n     }\n \n     get checkOnSave() {\n         return {\n-            command: this.cfg.get<string>(\"checkOnSave.command\")!,\n+            command: this.get<string>(\"checkOnSave.command\"),\n         };\n     }\n }"}]}