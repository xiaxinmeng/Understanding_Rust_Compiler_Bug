{"sha": "63bdb3ac0948683fe7548680d3b78bb5d8b32076", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzYmRiM2FjMDk0ODY4M2ZlNzU0ODY4MGQzYjc4YmI1ZDhiMzIwNzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-26T18:35:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-11-20T09:58:31Z"}, "message": "improve formatting", "tree": {"sha": "a142c5b871db3baa9e76f9f991eb5478d994d7a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a142c5b871db3baa9e76f9f991eb5478d994d7a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63bdb3ac0948683fe7548680d3b78bb5d8b32076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63bdb3ac0948683fe7548680d3b78bb5d8b32076", "html_url": "https://github.com/rust-lang/rust/commit/63bdb3ac0948683fe7548680d3b78bb5d8b32076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63bdb3ac0948683fe7548680d3b78bb5d8b32076/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64856e29c1c780117348c196e05902476251bc92", "url": "https://api.github.com/repos/rust-lang/rust/commits/64856e29c1c780117348c196e05902476251bc92", "html_url": "https://github.com/rust-lang/rust/commit/64856e29c1c780117348c196e05902476251bc92"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "e90d5149c2f1ee89c74134fd982fe86abc40421b", "filename": "compiler/rustc_mir/src/transform/check_unsafety.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/63bdb3ac0948683fe7548680d3b78bb5d8b32076/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63bdb3ac0948683fe7548680d3b78bb5d8b32076/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs?ref=63bdb3ac0948683fe7548680d3b78bb5d8b32076", "patch": "@@ -236,10 +236,14 @@ impl<'a, 'tcx> Visitor<'tcx> for UnsafetyChecker<'a, 'tcx> {\n                     UnsafetyViolationDetails::DerefOfRawPointer,\n                 ),\n                 ty::Adt(adt, _) if adt.is_union() => {\n-                    let assign_to_field = context\n-                        == PlaceContext::MutatingUse(MutatingUseContext::Store)\n-                        || context == PlaceContext::MutatingUse(MutatingUseContext::Drop)\n-                        || context == PlaceContext::MutatingUse(MutatingUseContext::AsmOutput);\n+                    let assign_to_field = matches!(\n+                        context,\n+                        PlaceContext::MutatingUse(\n+                            MutatingUseContext::Store\n+                                | MutatingUseContext::Drop\n+                                | MutatingUseContext::AsmOutput\n+                        )\n+                    );\n                     // If there is a `Deref` further along the projection chain, this is *not* an\n                     // assignment to a union field. In that case the union field is just read to\n                     // obtain the pointer/reference."}]}