{"sha": "3e7a18e5e5efb870b9c4c7c4bd7a310270187213", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlN2ExOGU1ZTVlZmI4NzBiOWM0YzdjNGJkN2EzMTAyNzAxODcyMTM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-24T19:10:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-24T19:10:13Z"}, "message": "Rollup merge of #69391 - memoryruins:memalias, r=Mark-Simulacrum\n\nAdd rustdoc aliases to `ptr::copy` and `ptr::copy_nonoverlapping`\n\nThis PR adds a [rustdoc alias](https://doc.rust-lang.org/nightly/rustdoc/unstable-features.html#add-aliases-for-an-item-in-documentation-search) to `ptr::copy` and `ptr::copy_nonoverlapping` using the commonly used terms `memcpy` and `memmove`. The motivation for this PR is to improve discoverability for these functions, since I've noticed users overlook these functions on multiple occasions (and they have thus reached for [libc](https://crates.io/crates/libc) without need). Currently std docs state:\n\nhttps://doc.rust-lang.org/nightly/std/ptr/fn.copy_nonoverlapping.html\n> `copy_nonoverlapping` is semantically equivalent to C's `memcpy`, but with the argument order swapped.\n\nhttps://doc.rust-lang.org/nightly/std/ptr/fn.copy.html\n> `copy` is semantically equivalent to C's `memmove`, but with the argument order swapped.\n\n#### search results before adding a rustdoc alias:\n![screenshot 6517](https://user-images.githubusercontent.com/6868531/75102985-78fbb680-55c2-11ea-8e41-04979e6fa6f6.png)\n![screenshot 6518](https://user-images.githubusercontent.com/6868531/75102984-78632000-55c2-11ea-9673-8822aae636d1.png)\n\n#### after adding `#[doc(alias = \"memcpy\")]` and `#[doc(alias = \"memmove\")]`:\n![screenshot 6516](https://user-images.githubusercontent.com/6868531/75102986-78fbb680-55c2-11ea-93b9-1929be940043.png)\n![screenshot 6515](https://user-images.githubusercontent.com/6868531/75102987-78fbb680-55c2-11ea-9861-ce8a77a0c3b9.png)", "tree": {"sha": "3f5326b21e469c2c24a6471752b92d2b834ac79b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f5326b21e469c2c24a6471752b92d2b834ac79b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e7a18e5e5efb870b9c4c7c4bd7a310270187213", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeVB+VCRBK7hj4Ov3rIwAAdHIIAET8fC8XEXfgXgiCglsyuBs3\nUdYfjIyIugfq3ep94zpKO7mC2R7CLiqC5Gyv+lG46vbrBtS4BYkWpsV5S3jcXkn6\nxkJ3wA+XEWYZmdZgSQ8eXHJ2ESzuWKiQiiDB4My0tHknvg4s+pijBpEKHpASs8yX\ndR/vfq49fEAGpa7hidGiobVQoUYqa9QYka8xpqYhjEkE7+f7P7j9cPpyLf6SSrx2\noIH0ZucbS29ghdcaL7/3LNKJu/0uIfvns18W+gPOY7lhpclwNDw6/skMoKXqs3ug\nn2eo4l8wCf6SW49XfrBilBartOT06SMLC2Nt6EZA8vde7xO2RSBopKnG/Ued6dU=\n=88Ea\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f5326b21e469c2c24a6471752b92d2b834ac79b\nparent d91657877a44ecc9450b6d996bef577a1d1ec647\nparent ad47bf50f6ff9d7a73e54bed6ab518c01ae2fdc5\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582571413 +0100\ncommitter GitHub <noreply@github.com> 1582571413 +0100\n\nRollup merge of #69391 - memoryruins:memalias, r=Mark-Simulacrum\n\nAdd rustdoc aliases to `ptr::copy` and `ptr::copy_nonoverlapping`\n\nThis PR adds a [rustdoc alias](https://doc.rust-lang.org/nightly/rustdoc/unstable-features.html#add-aliases-for-an-item-in-documentation-search) to `ptr::copy` and `ptr::copy_nonoverlapping` using the commonly used terms `memcpy` and `memmove`. The motivation for this PR is to improve discoverability for these functions, since I've noticed users overlook these functions on multiple occasions (and they have thus reached for [libc](https://crates.io/crates/libc) without need). Currently std docs state:\n\nhttps://doc.rust-lang.org/nightly/std/ptr/fn.copy_nonoverlapping.html\n> `copy_nonoverlapping` is semantically equivalent to C's `memcpy`, but with the argument order swapped.\n\nhttps://doc.rust-lang.org/nightly/std/ptr/fn.copy.html\n> `copy` is semantically equivalent to C's `memmove`, but with the argument order swapped.\n\n#### search results before adding a rustdoc alias:\n![screenshot 6517](https://user-images.githubusercontent.com/6868531/75102985-78fbb680-55c2-11ea-8e41-04979e6fa6f6.png)\n![screenshot 6518](https://user-images.githubusercontent.com/6868531/75102984-78632000-55c2-11ea-9673-8822aae636d1.png)\n\n#### after adding `#[doc(alias = \"memcpy\")]` and `#[doc(alias = \"memmove\")]`:\n![screenshot 6516](https://user-images.githubusercontent.com/6868531/75102986-78fbb680-55c2-11ea-93b9-1929be940043.png)\n![screenshot 6515](https://user-images.githubusercontent.com/6868531/75102987-78fbb680-55c2-11ea-9861-ce8a77a0c3b9.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7a18e5e5efb870b9c4c7c4bd7a310270187213", "html_url": "https://github.com/rust-lang/rust/commit/3e7a18e5e5efb870b9c4c7c4bd7a310270187213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e7a18e5e5efb870b9c4c7c4bd7a310270187213/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d91657877a44ecc9450b6d996bef577a1d1ec647", "url": "https://api.github.com/repos/rust-lang/rust/commits/d91657877a44ecc9450b6d996bef577a1d1ec647", "html_url": "https://github.com/rust-lang/rust/commit/d91657877a44ecc9450b6d996bef577a1d1ec647"}, {"sha": "ad47bf50f6ff9d7a73e54bed6ab518c01ae2fdc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad47bf50f6ff9d7a73e54bed6ab518c01ae2fdc5", "html_url": "https://github.com/rust-lang/rust/commit/ad47bf50f6ff9d7a73e54bed6ab518c01ae2fdc5"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "43f8cfc0c473fcadad0e4b9585ec9b47a60cee80", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e7a18e5e5efb870b9c4c7c4bd7a310270187213/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7a18e5e5efb870b9c4c7c4bd7a310270187213/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=3e7a18e5e5efb870b9c4c7c4bd7a310270187213", "patch": "@@ -1515,6 +1515,7 @@ fn overlaps<T>(src: *const T, dst: *const T, count: usize) -> bool {\n /// ```\n ///\n /// [`Vec::append`]: ../../std/vec/struct.Vec.html#method.append\n+#[doc(alias = \"memcpy\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n@@ -1579,6 +1580,7 @@ pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n ///     dst\n /// }\n /// ```\n+#[doc(alias = \"memmove\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {"}]}