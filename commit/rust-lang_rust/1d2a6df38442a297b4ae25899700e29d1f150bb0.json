{"sha": "1d2a6df38442a297b4ae25899700e29d1f150bb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMmE2ZGYzODQ0MmEyOTdiNGFlMjU4OTk3MDBlMjlkMWYxNTBiYjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-03T19:40:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-03T19:40:27Z"}, "message": "Auto merge of #43619 - frewsxcv:frewsxcv-thread, r=QuietMisdreavus\n\nThread docs fix and improvements.\n\nNone", "tree": {"sha": "c1645692884760fd2459ca6ddd3e7c63b82550fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1645692884760fd2459ca6ddd3e7c63b82550fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d2a6df38442a297b4ae25899700e29d1f150bb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d2a6df38442a297b4ae25899700e29d1f150bb0", "html_url": "https://github.com/rust-lang/rust/commit/1d2a6df38442a297b4ae25899700e29d1f150bb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d2a6df38442a297b4ae25899700e29d1f150bb0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c701ba6efb7ea2ca023cca39371294facfb00739", "url": "https://api.github.com/repos/rust-lang/rust/commits/c701ba6efb7ea2ca023cca39371294facfb00739", "html_url": "https://github.com/rust-lang/rust/commit/c701ba6efb7ea2ca023cca39371294facfb00739"}, {"sha": "4c08c131fa6ef63809f6a4eb25ae1289dd381259", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c08c131fa6ef63809f6a4eb25ae1289dd381259", "html_url": "https://github.com/rust-lang/rust/commit/4c08c131fa6ef63809f6a4eb25ae1289dd381259"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "cbd019c2c0e64acb5665ab6ab090d079b9781d3c", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1d2a6df38442a297b4ae25899700e29d1f150bb0/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2a6df38442a297b4ae25899700e29d1f150bb0/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=1d2a6df38442a297b4ae25899700e29d1f150bb0", "patch": "@@ -820,7 +820,8 @@ pub fn park_timeout(dur: Duration) {\n ///\n /// A `ThreadId` is an opaque object that has a unique value for each thread\n /// that creates one. `ThreadId`s are not guaranteed to correspond to a thread's\n-/// system-designated identifier.\n+/// system-designated identifier. A `ThreadId` can be retrieved from the [`id`]\n+/// method on a [`Thread`].\n ///\n /// # Examples\n ///\n@@ -834,6 +835,9 @@ pub fn park_timeout(dur: Duration) {\n /// let other_thread_id = other_thread.join().unwrap();\n /// assert!(thread::current().id() != other_thread_id);\n /// ```\n+///\n+/// [`id`]: ../../std/thread/struct.Thread.html#method.id\n+/// [`Thread`]: ../../std/thread/struct.Thread.html\n #[stable(feature = \"thread_id\", since = \"1.19.0\")]\n #[derive(Eq, PartialEq, Clone, Copy, Hash, Debug)]\n pub struct ThreadId(u64);\n@@ -896,6 +900,9 @@ struct Inner {\n /// docs of [`Builder`] and [`spawn`] for more details.\n ///\n /// [`Builder`]: ../../std/thread/struct.Builder.html\n+/// [`JoinHandle::thread`]: ../../std/thread/struct.JoinHandle.html#method.thread\n+/// [`JoinHandle`]: ../../std/thread/struct.JoinHandle.html\n+/// [`thread::current`]: ../../std/thread/fn.current.html\n /// [`spawn`]: ../../std/thread/fn.spawn.html\n \n pub struct Thread {"}]}