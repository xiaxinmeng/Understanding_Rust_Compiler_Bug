{"sha": "5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNGRkMWQxOWE2ODUxMzg5YzdlMjc5MDJjZDFmYjZlYmJiNDZkY2M=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-24T00:30:37Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T04:53:39Z"}, "message": "Address comments re. off-topic errors.", "tree": {"sha": "81fcba879afe9f9ed802d0af73793a7371f74e39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81fcba879afe9f9ed802d0af73793a7371f74e39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "html_url": "https://github.com/rust-lang/rust/commit/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "becdba80ea777afb8ebcd482fc657728b1661dbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/becdba80ea777afb8ebcd482fc657728b1661dbf", "html_url": "https://github.com/rust-lang/rust/commit/becdba80ea777afb8ebcd482fc657728b1661dbf"}], "stats": {"total": 92, "additions": 48, "deletions": 44}, "files": [{"sha": "00f4374b256d20a115f312bb480cdc6ea5a773d7", "filename": "src/test/ui/parser/match-vec-invalid.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fmatch-vec-invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fmatch-vec-invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmatch-vec-invalid.rs?ref=5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "patch": "@@ -1,12 +1,13 @@\n fn main() {\n-    let a = Vec::new();\n+    let a: &[u8] = &[];\n     match a {\n         [1, tail @ .., tail @ ..] => {},\n         //~^ ERROR identifier `tail` is bound more than once in the same pattern\n         //~| ERROR subslice patterns are unstable\n         //~| ERROR subslice patterns are unstable\n         //~| ERROR `..` can only be used once per slice pattern\n-        //~| ERROR expected an array or slice, found `std::vec::Vec<_>`\n         _ => ()\n     }\n }\n+\n+const RECOVERY_WITNESS: () = 0; //~ ERROR mismatched types"}, {"sha": "0956ac21b7f1e4abecf968a5a21b62a681f5c7dd", "filename": "src/test/ui/parser/match-vec-invalid.stderr", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fmatch-vec-invalid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fmatch-vec-invalid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmatch-vec-invalid.stderr?ref=5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "patch": "@@ -30,13 +30,16 @@ LL |         [1, tail @ .., tail @ ..] => {},\n    |                    |\n    |                    previously used here\n \n-error[E0529]: expected an array or slice, found `std::vec::Vec<_>`\n-  --> $DIR/match-vec-invalid.rs:4:9\n+error[E0308]: mismatched types\n+  --> $DIR/match-vec-invalid.rs:13:30\n    |\n-LL |         [1, tail @ .., tail @ ..] => {},\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ pattern cannot match with input type `std::vec::Vec<_>`\n+LL | const RECOVERY_WITNESS: () = 0;\n+   |                              ^ expected (), found integer\n+   |\n+   = note: expected type `()`\n+              found type `{integer}`\n \n error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0416, E0529, E0658.\n-For more information about an error, try `rustc --explain E0416`.\n+Some errors have detailed explanations: E0308, E0416, E0658.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "7b9721830993efc2fc1a70f9b299ea86c39bc2cc", "filename": "src/test/ui/parser/pat-lt-bracket-6.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-6.rs?ref=5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "patch": "@@ -1,6 +1,9 @@\n fn main() {\n+    struct Test(&'static u8, [u8; 0]);\n+    let x = Test(&0, []);\n+\n     let Test(&desc[..]) = x; //~ ERROR: expected one of `)`, `,`, or `@`, found `[`\n-    //~^ ERROR cannot find value `x` in this scope\n-    //~| ERROR cannot find tuple struct/variant `Test` in this scope\n-    //~| ERROR subslice patterns are unstable\n+    //~^ ERROR subslice patterns are unstable\n }\n+\n+const RECOVERY_WITNESS: () = 0; //~ ERROR mismatched types"}, {"sha": "201465b2c850c87f13720db143d85e6419b78dc4", "filename": "src/test/ui/parser/pat-lt-bracket-6.stderr", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-6.stderr?ref=5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "patch": "@@ -1,31 +1,28 @@\n error: expected one of `)`, `,`, or `@`, found `[`\n-  --> $DIR/pat-lt-bracket-6.rs:2:19\n+  --> $DIR/pat-lt-bracket-6.rs:5:19\n    |\n LL |     let Test(&desc[..]) = x;\n    |                   ^ expected one of `)`, `,`, or `@` here\n \n-error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/pat-lt-bracket-6.rs:2:27\n-   |\n-LL |     let Test(&desc[..]) = x;\n-   |                           ^ not found in this scope\n-\n-error[E0531]: cannot find tuple struct/variant `Test` in this scope\n-  --> $DIR/pat-lt-bracket-6.rs:2:9\n-   |\n-LL |     let Test(&desc[..]) = x;\n-   |         ^^^^ not found in this scope\n-\n error[E0658]: subslice patterns are unstable\n-  --> $DIR/pat-lt-bracket-6.rs:2:20\n+  --> $DIR/pat-lt-bracket-6.rs:5:20\n    |\n LL |     let Test(&desc[..]) = x;\n    |                    ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62254\n    = help: add `#![feature(slice_patterns)]` to the crate attributes to enable\n \n-error: aborting due to 4 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/pat-lt-bracket-6.rs:9:30\n+   |\n+LL | const RECOVERY_WITNESS: () = 0;\n+   |                              ^ expected (), found integer\n+   |\n+   = note: expected type `()`\n+              found type `{integer}`\n+\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0425, E0658.\n-For more information about an error, try `rustc --explain E0425`.\n+Some errors have detailed explanations: E0308, E0658.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "020fdb845e8b5fd4ca73f041532fb0d6cb4dbe3d", "filename": "src/test/ui/parser/pat-lt-bracket-7.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-7.rs?ref=5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "patch": "@@ -1,5 +1,8 @@\n fn main() {\n-    for thing(x[]) in foo {} //~ ERROR: expected one of `)`, `,`, or `@`, found `[`\n-    //~^ ERROR cannot find value `foo` in this scope\n-    //~| ERROR cannot find tuple struct/variant `thing` in this scope\n+    struct Thing(u8, [u8; 0]);\n+    let foo = core::iter::empty();\n+\n+    for Thing(x[]) in foo {} //~ ERROR: expected one of `)`, `,`, or `@`, found `[`\n }\n+\n+const RECOVERY_WITNESS: () = 0; //~ ERROR mismatched types"}, {"sha": "17557efa49e803e70c1369448fc0a183d3c3aaf6", "filename": "src/test/ui/parser/pat-lt-bracket-7.stderr", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpat-lt-bracket-7.stderr?ref=5f4dd1d19a6851389c7e27902cd1fb6ebbb46dcc", "patch": "@@ -1,21 +1,18 @@\n error: expected one of `)`, `,`, or `@`, found `[`\n-  --> $DIR/pat-lt-bracket-7.rs:2:16\n+  --> $DIR/pat-lt-bracket-7.rs:5:16\n    |\n-LL |     for thing(x[]) in foo {}\n+LL |     for Thing(x[]) in foo {}\n    |                ^ expected one of `)`, `,`, or `@` here\n \n-error[E0425]: cannot find value `foo` in this scope\n-  --> $DIR/pat-lt-bracket-7.rs:2:23\n+error[E0308]: mismatched types\n+  --> $DIR/pat-lt-bracket-7.rs:8:30\n    |\n-LL |     for thing(x[]) in foo {}\n-   |                       ^^^ not found in this scope\n-\n-error[E0531]: cannot find tuple struct/variant `thing` in this scope\n-  --> $DIR/pat-lt-bracket-7.rs:2:9\n+LL | const RECOVERY_WITNESS: () = 0;\n+   |                              ^ expected (), found integer\n    |\n-LL |     for thing(x[]) in foo {}\n-   |         ^^^^^ not found in this scope\n+   = note: expected type `()`\n+              found type `{integer}`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0425`.\n+For more information about this error, try `rustc --explain E0308`."}]}