{"sha": "dba9337a48e9cb50f4323a605960c3b31df1706b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYTkzMzdhNDhlOWNiNTBmNDMyM2E2MDU5NjBjM2IzMWRmMTcwNmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-10T12:52:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-10T12:52:48Z"}, "message": "auto merge of #6366 : catamorphism/rust/issue-3920, r=catamorphism\n\nr? @nikomatsakis as per #3920", "tree": {"sha": "4472a54dcf4e2423dd5bfaa73275e3a1d27d8a4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4472a54dcf4e2423dd5bfaa73275e3a1d27d8a4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dba9337a48e9cb50f4323a605960c3b31df1706b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dba9337a48e9cb50f4323a605960c3b31df1706b", "html_url": "https://github.com/rust-lang/rust/commit/dba9337a48e9cb50f4323a605960c3b31df1706b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dba9337a48e9cb50f4323a605960c3b31df1706b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdf601eaf3f6fcc727819f8c0ae2b44b30770a8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf601eaf3f6fcc727819f8c0ae2b44b30770a8a", "html_url": "https://github.com/rust-lang/rust/commit/fdf601eaf3f6fcc727819f8c0ae2b44b30770a8a"}, {"sha": "ca18ed8f64daa12138352541f7d8ccfc593b2970", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca18ed8f64daa12138352541f7d8ccfc593b2970", "html_url": "https://github.com/rust-lang/rust/commit/ca18ed8f64daa12138352541f7d8ccfc593b2970"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "a820c5d15a8db37a76c74b92ce111ead7cb165a1", "filename": "src/libcore/unstable/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dba9337a48e9cb50f4323a605960c3b31df1706b/src%2Flibcore%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dba9337a48e9cb50f4323a605960c3b31df1706b/src%2Flibcore%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funstable%2Fintrinsics.rs?ref=dba9337a48e9cb50f4323a605960c3b31df1706b", "patch": "@@ -42,12 +42,17 @@ pub extern \"rust-intrinsic\" {\n \n     pub fn get_tydesc<T>() -> *();\n \n-    pub fn init<T>() -> T;\n+    /// init is unsafe because it returns a zeroed-out datum,\n+    /// which is unsafe unless T is POD. We don't have a POD\n+    /// kind yet. (See #4074)\n+    pub unsafe fn init<T>() -> T;\n \n     #[cfg(not(stage0))]\n     pub unsafe fn uninit<T>() -> T;\n \n-    pub fn forget<T>(_: T) -> ();\n+    /// forget is unsafe because the caller is responsible for\n+    /// ensuring the argument is deallocated already\n+    pub unsafe fn forget<T>(_: T) -> ();\n \n     pub fn needs_drop<T>() -> bool;\n "}, {"sha": "2361b5ad6a9cf3cf319c9656d7589df7c6fe3b49", "filename": "src/test/compile-fail/forget-init-unsafe.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dba9337a48e9cb50f4323a605960c3b31df1706b/src%2Ftest%2Fcompile-fail%2Fforget-init-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dba9337a48e9cb50f4323a605960c3b31df1706b/src%2Ftest%2Fcompile-fail%2Fforget-init-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fforget-init-unsafe.rs?ref=dba9337a48e9cb50f4323a605960c3b31df1706b", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use core::unstable::intrinsics::{init, forget};\n+\n+// Test that the `forget` and `init` intrinsics are really unsafe\n+pub fn main() {\n+    let stuff = init::<int>(); //~ ERROR access to unsafe function requires unsafe\n+    forget(stuff);             //~ ERROR access to unsafe function requires unsafe\n+}\n\\ No newline at end of file"}]}