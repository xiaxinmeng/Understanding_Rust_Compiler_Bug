{"sha": "1fa48cf181f1fe7e1aba133be199804c652fe55c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYTQ4Y2YxODFmMWZlN2UxYWJhMTMzYmUxOTk4MDRjNjUyZmU1NWM=", "commit": {"author": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2021-03-16T18:22:21Z"}, "committer": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2021-03-28T15:50:56Z"}, "message": "test: run-make: skip tests on unsupported platforms\n\nThe tests issue-36710 and incr-prev-body-beyond-eof were changed in a\nprevious commit so that the correct target was passed to rustc\n(previously rustc was building for the host not for the specific\ntarget).\n\nSince that change it turns out that these platforms never worked (they\nonly appeared to work because rustc was actually building for the host\narchitecture).\n\nThe wasm architectures fall over trying to build the C++ file in\nissue-36710. They look for clang (which isn't installed in the\ntest-various docker container). If clang is installed, they can't find\na wasm c++ standard library to link to.\n\nnvtptx64-nvidia-cuda fails in rustc saying it can't find std. The rust\nplatforms support page says that std is supported on cuda so this is\nsurprising.\n\ndist-i586-gnu-i586-i686-musl can't find the C++ compiler. There is only\na musl-gcc and no musl-g++ in /musl-i586/bin/. The Docker image probably\nneeds tweaking.", "tree": {"sha": "ce3648a77e53e544630e85366733d644d9286cc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce3648a77e53e544630e85366733d644d9286cc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fa48cf181f1fe7e1aba133be199804c652fe55c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa48cf181f1fe7e1aba133be199804c652fe55c", "html_url": "https://github.com/rust-lang/rust/commit/1fa48cf181f1fe7e1aba133be199804c652fe55c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fa48cf181f1fe7e1aba133be199804c652fe55c/comments", "author": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7505fb7454d946fd307b57e4cb0d45f8e50fdba", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7505fb7454d946fd307b57e4cb0d45f8e50fdba", "html_url": "https://github.com/rust-lang/rust/commit/e7505fb7454d946fd307b57e4cb0d45f8e50fdba"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "24eea3acaeacd4a1f4ec798f95c9fff3dc19dc20", "filename": "src/test/run-make/incr-prev-body-beyond-eof/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fa48cf181f1fe7e1aba133be199804c652fe55c/src%2Ftest%2Frun-make%2Fincr-prev-body-beyond-eof%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/1fa48cf181f1fe7e1aba133be199804c652fe55c/src%2Ftest%2Frun-make%2Fincr-prev-body-beyond-eof%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fincr-prev-body-beyond-eof%2FMakefile?ref=1fa48cf181f1fe7e1aba133be199804c652fe55c", "patch": "@@ -1,4 +1,5 @@\n # ignore-none no-std is not supported\n+# ignore-nvptx64-nvidia-cuda FIXME: can't find crate for `std`\n \n include ../../run-make-fulldeps/tools.mk\n "}, {"sha": "b5270ad2ba9d43fe5492b65219ca99dd74739f59", "filename": "src/test/run-make/issue-36710/Makefile", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1fa48cf181f1fe7e1aba133be199804c652fe55c/src%2Ftest%2Frun-make%2Fissue-36710%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/1fa48cf181f1fe7e1aba133be199804c652fe55c/src%2Ftest%2Frun-make%2Fissue-36710%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-36710%2FMakefile?ref=1fa48cf181f1fe7e1aba133be199804c652fe55c", "patch": "@@ -2,6 +2,11 @@\n #                              so it won't work with remote-test-server\n # ignore-arm Another build using remote-test-server\n # ignore-none no-std is not supported\n+# ignore-wasm32 FIXME: don't attempt to compile C++ to WASM\n+# ignore-wasm64 FIXME: don't attempt to compile C++ to WASM\n+# ignore-nvptx64-nvidia-cuda FIXME: can't find crate for `std`\n+# ignore-musl FIXME: this makefile needs teaching how to use a musl toolchain\n+#                    (see dist-i586-gnu-i586-i686-musl Dockerfile)\n \n include ../../run-make-fulldeps/tools.mk\n "}, {"sha": "2f796e5b2fc0754e1552584c220ff4dfc76704df", "filename": "src/test/run-make/issue-83112-incr-test-moved-file/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fa48cf181f1fe7e1aba133be199804c652fe55c/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/1fa48cf181f1fe7e1aba133be199804c652fe55c/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile?ref=1fa48cf181f1fe7e1aba133be199804c652fe55c", "patch": "@@ -1,6 +1,7 @@\n include ../../run-make-fulldeps/tools.mk\n \n # ignore-none no-std is not supported\n+# ignore-nvptx64-nvidia-cuda FIXME: can't find crate for 'std'\n \n # Regression test for issue #83112\n # The generated test harness code contains spans with a dummy location,"}]}