{"sha": "d3411d3ee8a350e2b8ec202a4a493e69c827245c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNDExZDNlZThhMzUwZTJiOGVjMjAyYTRhNDkzZTY5YzgyNzI0NWM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-01-12T16:00:42Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-01-13T12:02:18Z"}, "message": "Address review comments", "tree": {"sha": "a9f78e1c94cf19c582d02a2dd8983f37d9d01925", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9f78e1c94cf19c582d02a2dd8983f37d9d01925"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3411d3ee8a350e2b8ec202a4a493e69c827245c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3411d3ee8a350e2b8ec202a4a493e69c827245c", "html_url": "https://github.com/rust-lang/rust/commit/d3411d3ee8a350e2b8ec202a4a493e69c827245c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3411d3ee8a350e2b8ec202a4a493e69c827245c/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41c65992c52113699451a6236148d408894f89ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/41c65992c52113699451a6236148d408894f89ef", "html_url": "https://github.com/rust-lang/rust/commit/41c65992c52113699451a6236148d408894f89ef"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "b644cafe4ecdd7d00f30a623cf4db9755f87832c", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=d3411d3ee8a350e2b8ec202a4a493e69c827245c", "patch": "@@ -338,7 +338,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n         },\n         FutureIncompatibleInfo {\n             id: LintId::of(ILL_FORMED_ATTRIBUTE_INPUT),\n-            reference: \"issue #57321 <https://github.com/rust-lang/rust/issues/57321>\",\n+            reference: \"issue #57571 <https://github.com/rust-lang/rust/issues/57571>\",\n             edition: None,\n         },\n         ]);"}, {"sha": "09fdf2d661838d1c6764d010bacad524c6efa727", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=d3411d3ee8a350e2b8ec202a4a493e69c827245c", "patch": "@@ -717,6 +717,8 @@ pub enum AttributeGate {\n     Ungated,\n }\n \n+/// A template that the attribute input must match.\n+/// Only top-level shape (`#[attr]` vs `#[attr(...)]` vs `#[attr = ...]`) is considered now.\n #[derive(Clone, Copy)]\n pub struct AttributeTemplate {\n     word: bool,\n@@ -725,6 +727,7 @@ pub struct AttributeTemplate {\n }\n \n impl AttributeTemplate {\n+    /// Check that the given meta-item is compatible with this template.\n     fn compatible(&self, meta_item_kind: &ast::MetaItemKind) -> bool {\n         match meta_item_kind {\n             ast::MetaItemKind::Word => self.word,\n@@ -735,10 +738,10 @@ impl AttributeTemplate {\n     }\n }\n \n+/// A convenience macro for constructing attribute templates.\n+/// E.g. `template!(Word, List: \"description\")` means that the attribute\n+/// supports forms `#[attr]` and `#[attr(description)]`.\n macro_rules! template {\n-    (@ $word: expr, $list: expr, $name_value_str: expr) => { AttributeTemplate {\n-        word: $word, list: $list, name_value_str: $name_value_str\n-    } };\n     (Word) => { template!(@ true, None, None) };\n     (List: $descr: expr) => { template!(@ false, Some($descr), None) };\n     (NameValueStr: $descr: expr) => { template!(@ false, None, Some($descr)) };\n@@ -750,6 +753,9 @@ macro_rules! template {\n     (Word, List: $descr1: expr, NameValueStr: $descr2: expr) => {\n         template!(@ true, Some($descr1), Some($descr2))\n     };\n+    (@ $word: expr, $list: expr, $name_value_str: expr) => { AttributeTemplate {\n+        word: $word, list: $list, name_value_str: $name_value_str\n+    } };\n }\n \n impl AttributeGate {\n@@ -1084,7 +1090,8 @@ pub const BUILTIN_ATTRIBUTES: &[(&str, AttributeType, AttributeTemplate, Attribu\n                                         is an experimental feature\",\n                                        cfg_fn!(fundamental))),\n \n-    (\"proc_macro_derive\", Normal, template!(List: \"TraitName, attributes(name1, name2, ...)\"),\n+    (\"proc_macro_derive\", Normal, template!(List: \"TraitName, \\\n+                                                   /*opt*/ attributes(name1, name2, ...)\"),\n                                        Ungated),\n \n     (\"rustc_copy_clone_marker\", Whitelisted, template!(Word), Gated(Stability::Unstable,"}, {"sha": "71e8f11ff078df7f744a81b614cd6bab6cf3b71e", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-inline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.stderr?ref=d3411d3ee8a350e2b8ec202a4a493e69c827245c", "patch": "@@ -6,7 +6,7 @@ LL |     #[inline = \"2100\"] fn f() { }\n    |\n    = note: #[warn(ill_formed_attribute_input)] on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57321 <https://github.com/rust-lang/rust/issues/57321>\n+   = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n error[E0518]: attribute should be applied to function or closure\n   --> $DIR/issue-43106-gating-of-inline.rs:11:1"}, {"sha": "a3b2bda07f6259941387db4987d90a76476aa010", "filename": "src/test/ui/malformed/malformed-regressions.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.stderr?ref=d3411d3ee8a350e2b8ec202a4a493e69c827245c", "patch": "@@ -6,7 +6,7 @@ LL | #[doc] //~ WARN attribute must be of the form\n    |\n    = note: #[warn(ill_formed_attribute_input)] on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57321 <https://github.com/rust-lang/rust/issues/57321>\n+   = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[ignore]` or `#[ignore = \"reason\"]`\n   --> $DIR/malformed-regressions.rs:4:1\n@@ -15,7 +15,7 @@ LL | #[ignore()] //~ WARN attribute must be of the form\n    | ^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57321 <https://github.com/rust-lang/rust/issues/57321>\n+   = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[inline]` or `#[inline(always|never)]`\n   --> $DIR/malformed-regressions.rs:5:1\n@@ -24,7 +24,7 @@ LL | #[inline = \"\"] //~ WARN attribute must be of the form\n    | ^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57321 <https://github.com/rust-lang/rust/issues/57321>\n+   = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[link(name = \"...\", /*opt*/ kind = \"dylib|static|...\",\n                                              /*opt*/ cfg = \"...\")]`\n@@ -34,7 +34,7 @@ LL | #[link] //~ WARN attribute must be of the form\n    | ^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57321 <https://github.com/rust-lang/rust/issues/57321>\n+   = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[link(name = \"...\", /*opt*/ kind = \"dylib|static|...\",\n                                              /*opt*/ cfg = \"...\")]`\n@@ -44,5 +44,5 @@ LL | #[link = \"\"] //~ WARN attribute must be of the form\n    | ^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57321 <https://github.com/rust-lang/rust/issues/57321>\n+   = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n "}, {"sha": "231eb1f10689842c97c5c5a785caab94ea175cef", "filename": "src/test/ui/proc-macro/attribute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3411d3ee8a350e2b8ec202a4a493e69c827245c/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr?ref=d3411d3ee8a350e2b8ec202a4a493e69c827245c", "patch": "@@ -34,13 +34,13 @@ error: attribute must have either one or two arguments\n LL | #[proc_macro_derive(l, attributes(m), n)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: attribute must be of the form `#[proc_macro_derive(TraitName, attributes(name1, name2, ...))]`\n+error: attribute must be of the form `#[proc_macro_derive(TraitName, /*opt*/ attributes(name1, name2, ...))]`\n   --> $DIR/attribute.rs:8:1\n    |\n LL | #[proc_macro_derive]\n    | ^^^^^^^^^^^^^^^^^^^^\n \n-error: attribute must be of the form `#[proc_macro_derive(TraitName, attributes(name1, name2, ...))]`\n+error: attribute must be of the form `#[proc_macro_derive(TraitName, /*opt*/ attributes(name1, name2, ...))]`\n   --> $DIR/attribute.rs:14:1\n    |\n LL | #[proc_macro_derive = \"foo\"]"}]}