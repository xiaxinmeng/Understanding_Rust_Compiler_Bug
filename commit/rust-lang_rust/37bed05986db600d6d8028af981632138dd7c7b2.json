{"sha": "37bed05986db600d6d8028af981632138dd7c7b2", "node_id": "C_kwDOAAsO6NoAKDM3YmVkMDU5ODZkYjYwMGQ2ZDgwMjhhZjk4MTYzMjEzOGRkN2M3YjI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-25T19:08:37Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-25T19:11:13Z"}, "message": "delay the bug once again, generalize turbofish suggestion", "tree": {"sha": "884589127f35f6411688969d29cf25d0ce1e22a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/884589127f35f6411688969d29cf25d0ce1e22a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37bed05986db600d6d8028af981632138dd7c7b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37bed05986db600d6d8028af981632138dd7c7b2", "html_url": "https://github.com/rust-lang/rust/commit/37bed05986db600d6d8028af981632138dd7c7b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37bed05986db600d6d8028af981632138dd7c7b2/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a090bb1dea18af72dce2195fa4de396bcb51061b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a090bb1dea18af72dce2195fa4de396bcb51061b", "html_url": "https://github.com/rust-lang/rust/commit/a090bb1dea18af72dce2195fa4de396bcb51061b"}], "stats": {"total": 66, "additions": 19, "deletions": 47}, "files": [{"sha": "17bac362ec81ff75bc7c51346bd3def318897a63", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/37bed05986db600d6d8028af981632138dd7c7b2/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37bed05986db600d6d8028af981632138dd7c7b2/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=37bed05986db600d6d8028af981632138dd7c7b2", "patch": "@@ -731,28 +731,22 @@ impl<'a> Parser<'a> {\n                     match x {\n                         Ok((_, _, false)) => {\n                             if self.eat(&token::Gt) {\n-                                let turbo_err = e.span_suggestion_verbose(\n+                                e.span_suggestion_verbose(\n                                     binop.span.shrink_to_lo(),\n                                     TURBOFISH_SUGGESTION_STR,\n                                     \"::\".to_string(),\n                                     Applicability::MaybeIncorrect,\n-                                );\n-                                if matches!(self.token.kind, token::Semi | token::CloseDelim(_)) {\n-                                    turbo_err.emit();\n-                                    *expr = self.mk_expr_err(expr.span);\n-                                    return Ok(());\n-                                } else {\n-                                    match self.parse_expr() {\n-                                        Ok(_) => {\n-                                            turbo_err.emit();\n-                                            *expr = self\n-                                                .mk_expr_err(expr.span.to(self.prev_token.span));\n-                                            return Ok(());\n-                                        }\n-                                        Err(mut err) => {\n-                                            turbo_err.cancel();\n-                                            err.cancel();\n-                                        }\n+                                )\n+                                .emit();\n+                                match self.parse_expr() {\n+                                    Ok(_) => {\n+                                        *expr =\n+                                            self.mk_expr_err(expr.span.to(self.prev_token.span));\n+                                        return Ok(());\n+                                    }\n+                                    Err(mut err) => {\n+                                        *expr = self.mk_expr_err(expr.span);\n+                                        err.cancel();\n                                     }\n                                 }\n                             }"}, {"sha": "693dd0051dad1f0a2feca51c91bed786dfb53bfe", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37bed05986db600d6d8028af981632138dd7c7b2/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37bed05986db600d6d8028af981632138dd7c7b2/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=37bed05986db600d6d8028af981632138dd7c7b2", "patch": "@@ -1448,8 +1448,6 @@ impl<'a> Parser<'a> {\n         let lo = label.ident.span;\n         let label = Some(label);\n         let ate_colon = self.eat(&token::Colon);\n-        let msg = \"expected `while`, `for`, `loop` or `{` after a label\";\n-\n         let expr = if self.eat_keyword(kw::While) {\n             self.parse_while_expr(label, lo, attrs)\n         } else if self.eat_keyword(kw::For) {\n@@ -1459,12 +1457,13 @@ impl<'a> Parser<'a> {\n         } else if self.check(&token::OpenDelim(token::Brace)) || self.token.is_whole_block() {\n             self.parse_block_expr(label, lo, BlockCheckMode::Default, attrs)\n         } else if !ate_colon && (self.check(&TokenKind::Comma) || self.check(&TokenKind::Gt)) {\n-            self.struct_span_err(self.token.span, msg).span_label(self.token.span, msg).emit();\n             // We're probably inside of a `Path<'a>` that needs a turbofish, so suppress the\n-            // \"must be followed by a colon\" error.\n+            // \"must be followed by a colon\" error, and the \"expected one of\" error.\n+            self.diagnostic().delay_span_bug(lo, \"this label wasn't parsed correctly\");\n             consume_colon = false;\n             Ok(self.mk_expr_err(lo))\n         } else {\n+            let msg = \"expected `while`, `for`, `loop` or `{` after a label\";\n             self.struct_span_err(self.token.span, msg).span_label(self.token.span, msg).emit();\n             // Continue as an expression in an effort to recover on `'label: non_block_expr`.\n             self.parse_expr()"}, {"sha": "7be8b25363e09e750e294c98fe61bc5b40e0c364", "filename": "src/test/ui/parser/issues/issue-93282.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs?ref=37bed05986db600d6d8028af981632138dd7c7b2", "patch": "@@ -1,5 +1,4 @@\n fn main() {\n     f<'a,>\n     //~^ ERROR expected\n-    //~| ERROR expected\n }"}, {"sha": "20e6c3ed8a8d5d7a45e053c8717a1d46040ff76a", "filename": "src/test/ui/parser/issues/issue-93282.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr?ref=37bed05986db600d6d8028af981632138dd7c7b2", "patch": "@@ -1,9 +1,3 @@\n-error: expected `while`, `for`, `loop` or `{` after a label\n-  --> $DIR/issue-93282.rs:2:9\n-   |\n-LL |     f<'a,>\n-   |         ^ expected `while`, `for`, `loop` or `{` after a label\n-\n error: expected one of `.`, `:`, `;`, `?`, `for`, `loop`, `while`, `{`, `}`, or an operator, found `,`\n   --> $DIR/issue-93282.rs:2:9\n    |\n@@ -15,5 +9,5 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     f::<'a,>\n    |      ++\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "68636f6b907ef7448d2dc922408ff2f544a424d8", "filename": "src/test/ui/parser/require-parens-for-chained-comparison.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs?ref=37bed05986db600d6d8028af981632138dd7c7b2", "patch": "@@ -21,12 +21,10 @@ fn main() {\n \n     let _ = f<'_, i8>();\n     //~^ ERROR expected one of\n-    //~| ERROR expected\n     //~| HELP use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n \n     f<'_>();\n     //~^ comparison operators cannot be chained\n-    //~| ERROR expected\n     //~| HELP use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n \n     let _ = f<u8>;"}, {"sha": "cde6f8c674f4b5c53c61a5e43c70f046456a7f83", "filename": "src/test/ui/parser/require-parens-for-chained-comparison.stderr", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37bed05986db600d6d8028af981632138dd7c7b2/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr?ref=37bed05986db600d6d8028af981632138dd7c7b2", "patch": "@@ -53,12 +53,6 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     let _ = f::<u8, i8>();\n    |              ++\n \n-error: expected `while`, `for`, `loop` or `{` after a label\n-  --> $DIR/require-parens-for-chained-comparison.rs:22:17\n-   |\n-LL |     let _ = f<'_, i8>();\n-   |                 ^ expected `while`, `for`, `loop` or `{` after a label\n-\n error: expected one of `.`, `:`, `;`, `?`, `else`, `for`, `loop`, `while`, `{`, or an operator, found `,`\n   --> $DIR/require-parens-for-chained-comparison.rs:22:17\n    |\n@@ -70,14 +64,8 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     let _ = f::<'_, i8>();\n    |              ++\n \n-error: expected `while`, `for`, `loop` or `{` after a label\n-  --> $DIR/require-parens-for-chained-comparison.rs:27:9\n-   |\n-LL |     f<'_>();\n-   |         ^ expected `while`, `for`, `loop` or `{` after a label\n-\n error: comparison operators cannot be chained\n-  --> $DIR/require-parens-for-chained-comparison.rs:27:6\n+  --> $DIR/require-parens-for-chained-comparison.rs:26:6\n    |\n LL |     f<'_>();\n    |      ^  ^\n@@ -88,13 +76,13 @@ LL |     f::<'_>();\n    |      ++\n \n error: comparison operators cannot be chained\n-  --> $DIR/require-parens-for-chained-comparison.rs:32:14\n+  --> $DIR/require-parens-for-chained-comparison.rs:30:14\n    |\n LL |     let _ = f<u8>;\n    |              ^  ^\n    |\n    = help: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n    = help: or use `(...)` if you meant to specify fn arguments\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 8 previous errors\n "}]}