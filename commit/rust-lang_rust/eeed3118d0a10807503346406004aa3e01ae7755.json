{"sha": "eeed3118d0a10807503346406004aa3e01ae7755", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZWQzMTE4ZDBhMTA4MDc1MDMzNDY0MDYwMDRhYTNlMDFhZTc3NTU=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-12-26T23:16:44Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-12-26T23:37:07Z"}, "message": "Use raw version of align_of in rc data_offset\n\nThis was missed in #73845 when switching to use the raw operators.\nFixes #80365", "tree": {"sha": "53e018bdbd7fa0a45ba5bd566b7c79142d062161", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53e018bdbd7fa0a45ba5bd566b7c79142d062161"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeed3118d0a10807503346406004aa3e01ae7755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeed3118d0a10807503346406004aa3e01ae7755", "html_url": "https://github.com/rust-lang/rust/commit/eeed3118d0a10807503346406004aa3e01ae7755", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeed3118d0a10807503346406004aa3e01ae7755/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b644e419681835bd0f5871c3bfbd648aa04f157", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b644e419681835bd0f5871c3bfbd648aa04f157", "html_url": "https://github.com/rust-lang/rust/commit/0b644e419681835bd0f5871c3bfbd648aa04f157"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "38db47cdafbf17f295712f4c15294d85bfa75aa3", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eeed3118d0a10807503346406004aa3e01ae7755/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeed3118d0a10807503346406004aa3e01ae7755/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=eeed3118d0a10807503346406004aa3e01ae7755", "patch": "@@ -14,7 +14,7 @@ use core::hint;\n use core::intrinsics::abort;\n use core::iter;\n use core::marker::{PhantomData, Unpin, Unsize};\n-use core::mem::{self, align_of_val, size_of_val};\n+use core::mem::{self, align_of_val_raw, size_of_val};\n use core::ops::{CoerceUnsized, Deref, DispatchFromDyn, Receiver};\n use core::pin::Pin;\n use core::ptr::{self, NonNull};\n@@ -2364,7 +2364,7 @@ unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> isize {\n     // Because it is `?Sized`, it will always be the last field in memory.\n     // Note: This is a detail of the current implementation of the compiler,\n     // and is not a guaranteed language detail. Do not rely on it outside of std.\n-    unsafe { data_offset_align(align_of_val(&*ptr)) }\n+    unsafe { data_offset_align(align_of_val_raw(ptr)) }\n }\n \n #[inline]"}]}