{"sha": "2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmN2M5YTI4OTY0ZjhkZGIxZmNhNjc1YmJjNTY3MTQ0Yzg5M2Q2ZTY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-20T00:11:56Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-20T00:40:24Z"}, "message": "Improve error message for APIT with explicit generic parameters\n\nThis is disallowed with type or const generics.", "tree": {"sha": "f3f72c252d8d9cea6a6c1abf939c1657d2cfa74f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3f72c252d8d9cea6a6c1abf939c1657d2cfa74f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "html_url": "https://github.com/rust-lang/rust/commit/2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5b8c118a38e8f3319813de56386bf43751582d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b8c118a38e8f3319813de56386bf43751582d7", "html_url": "https://github.com/rust-lang/rust/commit/e5b8c118a38e8f3319813de56386bf43751582d7"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "8eab9c4e67e3313ea4a17f3c90792ba88aaf01da", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -232,8 +232,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 tcx.sess,\n                 span,\n                 E0632,\n-                \"cannot provide explicit type parameters when `impl Trait` is \\\n-                 used in argument position.\"\n+                \"cannot provide explicit generic arguments when `impl Trait` is \\\n+                 used in argument position\"\n             };\n \n             err.emit();"}, {"sha": "8321fdd400fec0e27ce1b8f31deb2958a62f7e39", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -5048,8 +5048,8 @@ the future, [RFC 2091] prohibits their implementation without a follow-up RFC.\n //  E0612, // merged into E0609\n //  E0613, // Removed (merged with E0609)\n     E0627, // yield statement outside of generator literal\n-    E0632, // cannot provide explicit type parameters when `impl Trait` is used\n-           // in argument position.\n+    E0632, // cannot provide explicit generic arguments when `impl Trait` is\n+           // used in argument position\n     E0634, // type has conflicting packed representaton hints\n     E0640, // infer outlives requirements\n     E0641, // cannot cast to/from a pointer with an unknown kind"}, {"sha": "f661c62c9e4408db0c3a69d9226a06366f0cf80d", "filename": "src/test/ui/impl-trait/issues/universal-issue-48703.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.rs?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -5,5 +5,5 @@ use std::fmt::Debug;\n fn foo<T>(x: impl Debug) { }\n \n fn main() {\n-    foo::<String>('a'); //~ ERROR cannot provide explicit type parameters\n+    foo::<String>('a'); //~ ERROR cannot provide explicit generic arguments\n }"}, {"sha": "a51302dce29660972888582ccd194c7a58c3644a", "filename": "src/test/ui/impl-trait/issues/universal-issue-48703.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.stderr?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -1,4 +1,4 @@\n-error[E0632]: cannot provide explicit type parameters when `impl Trait` is used in argument position.\n+error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n   --> $DIR/universal-issue-48703.rs:8:5\n    |\n LL |     foo::<String>('a');"}, {"sha": "4ac0a694cb148f785679ea9021004bfc989eaa82", "filename": "src/test/ui/impl-trait/issues/universal-turbofish-in-method-issue-50950.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.rs?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -12,6 +12,6 @@ struct TestEvent(i32);\n fn main() {\n     let mut evt = EventHandler {};\n     evt.handle_event::<TestEvent, fn(TestEvent)>(|_evt| {\n-        //~^ ERROR cannot provide explicit type parameters\n+        //~^ ERROR cannot provide explicit generic arguments\n     });\n }"}, {"sha": "f09aa166ef508c5b388d70d4c95ae4cd88ab2264", "filename": "src/test/ui/impl-trait/issues/universal-turbofish-in-method-issue-50950.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.stderr?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -1,4 +1,4 @@\n-error[E0632]: cannot provide explicit type parameters when `impl Trait` is used in argument position.\n+error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n   --> $DIR/universal-turbofish-in-method-issue-50950.rs:14:9\n    |\n LL |     evt.handle_event::<TestEvent, fn(TestEvent)>(|_evt| {"}, {"sha": "e14697f5c3e97d01a0e7fc16c952c5031d15c4f0", "filename": "src/test/ui/synthetic-param.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fsynthetic-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fsynthetic-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsynthetic-param.rs?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -17,12 +17,12 @@ impl<S> Bar<S> {\n }\n \n fn main() {\n-    func::<u8>(42); //~ ERROR cannot provide explicit type parameters\n+    func::<u8>(42); //~ ERROR cannot provide explicit generic arguments\n     func(42); // Ok\n \n-    Foo::func::<u8>(42); //~ ERROR cannot provide explicit type parameters\n+    Foo::func::<u8>(42); //~ ERROR cannot provide explicit generic arguments\n     Foo::func(42); // Ok\n \n-    Bar::<i8>::func::<u8>(42); //~ ERROR cannot provide explicit type parameters\n+    Bar::<i8>::func::<u8>(42); //~ ERROR cannot provide explicit generic arguments\n     Bar::<i8>::func(42); // Ok\n }"}, {"sha": "f8d14f26f32de05e92519de00c6e4e36814a1e37", "filename": "src/test/ui/synthetic-param.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fsynthetic-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f7c9a28964f8ddb1fca675bbc567144c893d6e6/src%2Ftest%2Fui%2Fsynthetic-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsynthetic-param.stderr?ref=2f7c9a28964f8ddb1fca675bbc567144c893d6e6", "patch": "@@ -1,16 +1,16 @@\n-error[E0632]: cannot provide explicit type parameters when `impl Trait` is used in argument position.\n+error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n   --> $DIR/synthetic-param.rs:20:5\n    |\n LL |     func::<u8>(42);\n    |     ^^^^^^^^^^\n \n-error[E0632]: cannot provide explicit type parameters when `impl Trait` is used in argument position.\n+error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n   --> $DIR/synthetic-param.rs:23:5\n    |\n LL |     Foo::func::<u8>(42);\n    |     ^^^^^^^^^^^^^^^\n \n-error[E0632]: cannot provide explicit type parameters when `impl Trait` is used in argument position.\n+error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n   --> $DIR/synthetic-param.rs:26:5\n    |\n LL |     Bar::<i8>::func::<u8>(42);"}]}