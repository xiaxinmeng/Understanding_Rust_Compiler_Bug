{"sha": "ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMDBiNjJjZWI3ZWFmMWYwMmY1Mjg5YWIyMzNiZjdlMGU4MDYwZDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-07T10:59:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-07T10:59:41Z"}, "message": "Auto merge of #81502 - CraftSpider:method-abi, r=jyn514\n\nAdd abi field to `Method`\n\nAlso bumps version and adds a test (Will conflict with #81500, whichever is merged first)\n\nRationale: It's possible for methods to have an ABI. This should be exposed in the JSON.", "tree": {"sha": "ffbfb1a2f1519c9e1a9eab943889f1fa294f3d0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffbfb1a2f1519c9e1a9eab943889f1fa294f3d0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5", "html_url": "https://github.com/rust-lang/rust/commit/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e1ea29c4e92dfa2ba716fc878984605897fb13", "url": "https://api.github.com/repos/rust-lang/rust/commits/43e1ea29c4e92dfa2ba716fc878984605897fb13", "html_url": "https://github.com/rust-lang/rust/commit/43e1ea29c4e92dfa2ba716fc878984605897fb13"}, {"sha": "ac75fafd1c254dd96a22a289fcad18287875f061", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac75fafd1c254dd96a22a289fcad18287875f061", "html_url": "https://github.com/rust-lang/rust/commit/ac75fafd1c254dd96a22a289fcad18287875f061"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "e021faa50412e6eb43f0cc85be8a25f9d88a22ed", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5", "patch": "@@ -440,6 +440,7 @@ crate fn from_function_method(function: clean::Function, has_body: bool) -> Meth\n         decl: decl.into(),\n         generics: generics.into(),\n         header: stringify_header(&header),\n+        abi: header.abi.to_string(),\n         has_body,\n     }\n }"}, {"sha": "f4b8dc9a3ad2b11ee41e568659614c64eee1ca2f", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5", "patch": "@@ -294,6 +294,7 @@ pub struct Method {\n     pub decl: FnDecl,\n     pub generics: Generics,\n     pub header: String,\n+    pub abi: String,\n     pub has_body: bool,\n }\n "}, {"sha": "6fabbc836117ba7232baa87cad103a3e0fec977a", "filename": "src/test/rustdoc-json/method_abi.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5/src%2Ftest%2Frustdoc-json%2Fmethod_abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5/src%2Ftest%2Frustdoc-json%2Fmethod_abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fmethod_abi.rs?ref=ae00b62ceb7eaf1f02f5289ab233bf7e0e8060d5", "patch": "@@ -0,0 +1,25 @@\n+// @has method_abi.json \"$.index[*][?(@.name=='Foo')]\"\n+pub struct Foo;\n+\n+impl Foo {\n+    // @has - \"$.index[*][?(@.name=='abi_rust')].inner.abi\" '\"\\\"Rust\\\"\"'\n+    pub fn abi_rust() {}\n+\n+    // @has - \"$.index[*][?(@.name=='abi_c')].inner.abi\" '\"\\\"C\\\"\"'\n+    pub extern \"C\" fn abi_c() {}\n+\n+    // @has - \"$.index[*][?(@.name=='abi_system')].inner.abi\" '\"\\\"system\\\"\"'\n+    pub extern \"system\" fn abi_system() {}\n+}\n+\n+// @has method_abi.json \"$.index[*][?(@.name=='Bar')]\"\n+pub trait Bar {\n+    // @has - \"$.index[*][?(@.name=='trait_abi_rust')].inner.abi\" '\"\\\"Rust\\\"\"'\n+    fn trait_abi_rust();\n+\n+    // @has - \"$.index[*][?(@.name=='trait_abi_c')].inner.abi\" '\"\\\"C\\\"\"'\n+    extern \"C\" fn trait_abi_c();\n+\n+    // @has - \"$.index[*][?(@.name=='trait_abi_system')].inner.abi\" '\"\\\"system\\\"\"'\n+    extern \"system\" fn trait_abi_system();\n+}"}]}