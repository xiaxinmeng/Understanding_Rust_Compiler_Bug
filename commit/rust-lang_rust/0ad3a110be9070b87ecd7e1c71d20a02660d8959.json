{"sha": "0ad3a110be9070b87ecd7e1c71d20a02660d8959", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZDNhMTEwYmU5MDcwYjg3ZWNkN2UxYzcxZDIwYTAyNjYwZDg5NTk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-13T03:06:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-13T04:01:40Z"}, "message": "Work around linkage bug cross-compiling from x86_64-apple-darwin to i686-apple-darwin\n\nThe correct opendir/readdir to use appear to be the 64-bit versions called\nopendir$INODE64, etc. but for some reason I can't get them to link properly\non i686. Putting them in librustrt and making gcc figure it out works.\nThis mystery will have to wait for another day.", "tree": {"sha": "bf0e2f92683d046f8473a65d86ad846becd913d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf0e2f92683d046f8473a65d86ad846becd913d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ad3a110be9070b87ecd7e1c71d20a02660d8959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad3a110be9070b87ecd7e1c71d20a02660d8959", "html_url": "https://github.com/rust-lang/rust/commit/0ad3a110be9070b87ecd7e1c71d20a02660d8959", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ad3a110be9070b87ecd7e1c71d20a02660d8959/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b60c3bfa4a95fecae2f28929f22f38865d7e5f79", "url": "https://api.github.com/repos/rust-lang/rust/commits/b60c3bfa4a95fecae2f28929f22f38865d7e5f79", "html_url": "https://github.com/rust-lang/rust/commit/b60c3bfa4a95fecae2f28929f22f38865d7e5f79"}], "stats": {"total": 85, "additions": 48, "deletions": 37}, "files": [{"sha": "e3646ef60f5666cdcfa666a6274d2b05b8e04ebb", "filename": "src/libcore/libc.rs", "status": "modified", "additions": 18, "deletions": 36, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/0ad3a110be9070b87ecd7e1c71d20a02660d8959/src%2Flibcore%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad3a110be9070b87ecd7e1c71d20a02660d8959/src%2Flibcore%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flibc.rs?ref=0ad3a110be9070b87ecd7e1c71d20a02660d8959", "patch": "@@ -1385,48 +1385,30 @@ pub mod funcs {\n             use libc::types::common::posix88::{DIR, dirent_t};\n             use libc::types::os::arch::c95::{c_char, c_int, c_long};\n \n-            pub extern {\n-                // default bindings for opendir and readdir in\n-                // non-macos unix\n-                #[cfg(target_os = \"linux\")]\n-                #[cfg(target_os = \"android\")]\n-                #[cfg(target_os = \"freebsd\")]\n-                unsafe fn opendir(dirname: *c_char) -> *DIR;\n-                #[cfg(target_os = \"linux\")]\n-                #[cfg(target_os = \"android\")]\n-                #[cfg(target_os = \"freebsd\")]\n-                unsafe fn readdir(dirp: *DIR) -> *dirent_t;\n+            // NOTE: On OS X opendir and readdir have two versions,\n+            // one for 32-bit kernelspace and one for 64.\n+            // We should be linking to the 64-bit ones, called\n+            // opendir$INODE64, etc. but for some reason rustc\n+            // doesn't link it correctly on i686, so we're going\n+            // through a C function that mysteriously does work.\n+            pub unsafe fn opendir(dirname: *c_char) -> *DIR {\n+                rust_opendir(dirname)\n+            }\n+            pub unsafe fn readdir(dirp: *DIR) -> *dirent_t {\n+                rust_readdir(dirp)\n+            }\n+\n+            extern {\n+                unsafe fn rust_opendir(dirname: *c_char) -> *DIR;\n+                unsafe fn rust_readdir(dirp: *DIR) -> *dirent_t;\n+            }\n \n+            pub extern {\n                 unsafe fn closedir(dirp: *DIR) -> c_int;\n                 unsafe fn rewinddir(dirp: *DIR);\n                 unsafe fn seekdir(dirp: *DIR, loc: c_long);\n                 unsafe fn telldir(dirp: *DIR) -> c_long;\n             }\n-\n-            #[cfg(target_word_size = \"64\")]\n-            pub extern {\n-                // on OSX (particularly when running with a\n-                // 64bit kernel), we have an issue where there\n-                // are separate bindings for opendir and readdir,\n-                // which we have to explicitly link, as below.\n-                #[cfg(target_os = \"macos\")]\n-                #[link_name = \"opendir$INODE64\"]\n-                unsafe fn opendir(dirname: *c_char) -> *DIR;\n-                #[cfg(target_os = \"macos\")]\n-                #[link_name = \"readdir$INODE64\"]\n-                unsafe fn readdir(dirp: *DIR) -> *dirent_t;\n-            }\n-            #[cfg(target_word_size = \"32\")]\n-            pub extern {\n-                // on OSX (particularly when running with a\n-                // 64bit kernel), we have an issue where there\n-                // are separate bindings for opendir and readdir,\n-                // which we have to explicitly link, as below.\n-                #[cfg(target_os = \"macos\")]\n-                unsafe fn opendir(dirname: *c_char) -> *DIR;\n-                #[cfg(target_os = \"macos\")]\n-                unsafe fn readdir(dirp: *DIR) -> *dirent_t;\n-            }\n         }\n \n         #[nolink]"}, {"sha": "576ab1db8ea03889eb7b2274654afe7c5c867230", "filename": "src/libuv", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuv?ref=0ad3a110be9070b87ecd7e1c71d20a02660d8959", "patch": "@@ -1 +1 @@\n-Subproject commit 218ab86721eefd7b7e97fa6d9f95a80a1fa8686c\n+Subproject commit 576ab1db8ea03889eb7b2274654afe7c5c867230"}, {"sha": "8d83e2036b9be576436856d77678adca45be1d0f", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0ad3a110be9070b87ecd7e1c71d20a02660d8959/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0ad3a110be9070b87ecd7e1c71d20a02660d8959/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=0ad3a110be9070b87ecd7e1c71d20a02660d8959", "patch": "@@ -818,6 +818,33 @@ rust_dec_kernel_live_count() {\n     task->kernel->dec_live_count();\n }\n \n+#ifndef _WIN32\n+#include <sys/types.h>\n+#include <dirent.h>\n+\n+extern \"C\" DIR*\n+rust_opendir(char *dirname) {\n+    return opendir(dirname);\n+}\n+\n+extern \"C\" dirent*\n+rust_readdir(DIR *dirp) {\n+    return readdir(dirp);\n+}\n+\n+#else\n+\n+extern \"C\" void\n+rust_opendir() {\n+}\n+\n+extern \"C\" void\n+rust_readdir() {\n+}\n+\n+#endif\n+\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "886d945b144e27c81a704fd5da0d0e24224116e3", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad3a110be9070b87ecd7e1c71d20a02660d8959/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/0ad3a110be9070b87ecd7e1c71d20a02660d8959/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=0ad3a110be9070b87ecd7e1c71d20a02660d8959", "patch": "@@ -194,3 +194,5 @@ rust_dec_kernel_live_count\n rust_get_exchange_count_ptr\n rust_get_sched_tls_key\n swap_registers\n+rust_readdir\n+rust_opendir\n\\ No newline at end of file"}]}