{"sha": "8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNWIyYzgwZDNmMzBjOWQ4M2E4ZTkyMWU3OGU2YzEwZTU0YzgzMTk=", "commit": {"author": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-12-09T15:05:45Z"}, "committer": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-12-23T10:57:09Z"}, "message": "Add more detailed suggestion", "tree": {"sha": "52ac119579dae6e4d708a123194ed14cfeeae892", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52ac119579dae6e4d708a123194ed14cfeeae892"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "html_url": "https://github.com/rust-lang/rust/commit/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/comments", "author": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "committer": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d189ed2f1db856adc9745099d078d46fe54a087", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d189ed2f1db856adc9745099d078d46fe54a087", "html_url": "https://github.com/rust-lang/rust/commit/8d189ed2f1db856adc9745099d078d46fe54a087"}], "stats": {"total": 47, "additions": 28, "deletions": 19}, "files": [{"sha": "7c56708aab7986ca390221e8e8902f7de7f9b076", "filename": "src/doc/rustc-guide", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-guide?ref=8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "patch": "@@ -1 +1 @@\n-Subproject commit 934380b7cfceaaa4e1b9bb0de4a372f32725520b\n+Subproject commit 7c56708aab7986ca390221e8e8902f7de7f9b076"}, {"sha": "fed4202d96103d614230489688bd81a67a9e0ef2", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "patch": "@@ -759,8 +759,8 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n             // These items live in both the type and value namespaces.\n             ItemKind::Struct(ref vdata, _) => {\n                 // Define a name in the type namespace.\n-                let item_def_id = self.r.definitions.local_def_id(item.id);\n-                let res = Res::Def(DefKind::Struct, item_def_id);\n+                let def_id = self.r.definitions.local_def_id(item.id);\n+                let res = Res::Def(DefKind::Struct, def_id);\n                 self.r.define(parent, ident, TypeNS, (res, vis, sp, expansion));\n \n                 // Record field names for error reporting.\n@@ -798,12 +798,12 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n             }\n \n             ItemKind::Union(ref vdata, _) => {\n-                let item_def_id = self.r.definitions.local_def_id(item.id);\n-                let res = Res::Def(DefKind::Union, item_def_id);\n+                let def_id = self.r.definitions.local_def_id(item.id);\n+                let res = Res::Def(DefKind::Union, def_id);\n                 self.r.define(parent, ident, TypeNS, (res, vis, sp, expansion));\n \n                 // Record field names for error reporting.\n-                self.insert_field_names_local(item_def_id, vdata);\n+                self.insert_field_names_local(def_id, vdata);\n             }\n \n             ItemKind::Trait(..) => {"}, {"sha": "cc6fbf840a454accda8d96824750a3918bf39783", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "patch": "@@ -265,14 +265,14 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n             if let PathSource::Expr(parent) = source {\n                 match &parent.map(|p| &p.kind) {\n                     Some(ExprKind::Call(_, args)) if args.len() > 0 => {\n-                        let mut expr_kind = &args.first().unwrap().kind;\n+                        let mut expr_kind = &args[0].kind;\n                         loop {\n                             match expr_kind {\n                                 ExprKind::Path(_, arg_name) if arg_name.segments.len() == 1 => {\n                                     has_self_arg = arg_name.segments[0].ident.name == kw::SelfLower;\n                                     break;\n                                 },\n-                                ExprKind::AddrOf(_, _, expr) => { expr_kind = &expr.kind; }\n+                                ExprKind::AddrOf(_, _, expr) => expr_kind = &expr.kind,\n                                 _ => break,\n                             }\n                         }\n@@ -284,7 +284,7 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n             if has_self_arg {\n                 err.span_suggestion(\n                     span,\n-                    &\"try calling method instead of passing `self` as parameter\",\n+                    &format!(\"try calling `{}` as a method\", ident),\n                     format!(\"self.{}\", path_str),\n                     Applicability::MachineApplicable,\n                 );"}, {"sha": "d6bf543352701befc89fd10daca01e6bf4eb9281", "filename": "src/test/ui/self/suggest-self-2.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs?ref=8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "patch": "@@ -4,12 +4,15 @@ impl Foo {\n     fn foo(&self) {\n         bar(self);\n         //~^ ERROR cannot find function `bar` in this scope\n-        //~| HELP try calling method instead of passing `self` as parameter\n+        //~| HELP try calling `bar` as a method\n \n+        bar(&&self, 102);\n+        //~^ ERROR cannot find function `bar` in this scope\n+        //~| HELP try calling `bar` as a method\n \n-        bar(&self);\n+        bar(&mut self, 102, &\"str\");\n         //~^ ERROR cannot find function `bar` in this scope\n-        //~| HELP try calling method instead of passing `self` as parameter\n+        //~| HELP try calling `bar` as a method\n \n         bar();\n         //~^ ERROR cannot find function `bar` in this scope"}, {"sha": "ba71498fae656f2c7e33c71839b06f802c7b1ca8", "filename": "src/test/ui/self/suggest-self-2.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr?ref=8e5b2c80d3f30c9d83a8e921e78e6c10e54c8319", "patch": "@@ -2,27 +2,33 @@ error[E0425]: cannot find function `bar` in this scope\n   --> $DIR/suggest-self-2.rs:5:9\n    |\n LL |         bar(self);\n-   |         ^^^ help: try calling method instead of passing `self` as parameter: `self.bar`\n+   |         ^^^ help: try calling `bar` as a method: `self.bar`\n \n error[E0425]: cannot find function `bar` in this scope\n-  --> $DIR/suggest-self-2.rs:10:9\n+  --> $DIR/suggest-self-2.rs:9:9\n    |\n-LL |         bar(&self);\n-   |         ^^^ help: try calling method instead of passing `self` as parameter: `self.bar`\n+LL |         bar(&&self, 102);\n+   |         ^^^ help: try calling `bar` as a method: `self.bar`\n \n error[E0425]: cannot find function `bar` in this scope\n-  --> $DIR/suggest-self-2.rs:14:9\n+  --> $DIR/suggest-self-2.rs:13:9\n+   |\n+LL |         bar(&mut self, 102, &\"str\");\n+   |         ^^^ help: try calling `bar` as a method: `self.bar`\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:17:9\n    |\n LL |         bar();\n    |         ^^^ not found in this scope\n \n error[E0599]: no method named `bar` found for type `&Foo` in the current scope\n-  --> $DIR/suggest-self-2.rs:17:14\n+  --> $DIR/suggest-self-2.rs:20:14\n    |\n LL |         self.bar();\n    |              ^^^ method not found in `&Foo`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 5 previous errors\n \n Some errors have detailed explanations: E0425, E0599.\n For more information about an error, try `rustc --explain E0425`."}]}