{"sha": "ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZDdjMDRmYWEyNzU2NGNhM2YwM2VlZDZkNGEzNjM2YjdkM2ZjNGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-03T17:45:29Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-03T18:29:05Z"}, "message": "construct index from symbols directly", "tree": {"sha": "016854c3312d4090bb9209523423ccf85ba3c888", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/016854c3312d4090bb9209523423ccf85ba3c888"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c", "html_url": "https://github.com/rust-lang/rust/commit/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c0bca5984a6b66d306f9a413b0433c15d450500", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c0bca5984a6b66d306f9a413b0433c15d450500", "html_url": "https://github.com/rust-lang/rust/commit/6c0bca5984a6b66d306f9a413b0433c15d450500"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "5f35f2872dee09dee7a2b8628b92b33bc25bae8a", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c", "patch": "@@ -680,6 +680,7 @@ dependencies = [\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"salsa 0.9.0 (git+https://github.com/matklad/salsa.git?branch=transitive-untracked)\",\n  \"test_utils 0.1.0\",\n+ \"unicase 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1353,6 +1354,14 @@ dependencies = [\n  \"unic-common 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"unicase\"\n+version = \"2.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"unicode-bidi\"\n version = \"0.3.4\"\n@@ -1616,6 +1625,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum unic-segment 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c9ca47cbb09fb5fcd066b5867d11dc528302fa465277882797d6a836e1ee6f9e\"\n \"checksum unic-ucd-segment 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"48f1a08ce0409a9e391b88d1930118eec48af12742fc538bcec55f775865776e\"\n \"checksum unic-ucd-version 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf1f5e6c6c53c2d0ece4a5964bc55fcff8602153063cb4fab20958ff32998ff6\"\n+\"checksum unicase 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9d3218ea14b4edcaccfa0df0a64a3792a2c32cc706f1b336e48867f9d3147f90\"\n \"checksum unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5\"\n \"checksum unicode-normalization 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a0180bc61fc5a987082bfa111f4cc95c4caff7f9799f3e46df09163a937aa25\"\n \"checksum unicode-segmentation 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aa6024fc12ddfd1c6dbc14a80fa2324d4568849869b779f6bd37e5e4c03344d1\""}, {"sha": "7a4fdaed97453cbc655f51786ef4ec6d1c120dc9", "filename": "crates/ra_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c/crates%2Fra_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c/crates%2Fra_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2FCargo.toml?ref=ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c", "patch": "@@ -13,6 +13,7 @@ fst = \"0.3.1\"\n salsa = \"0.9.0\"\n rustc-hash = \"1.0\"\n parking_lot = \"0.7.0\"\n+unicase = \"2.2.0\"\n \n ra_syntax = { path = \"../ra_syntax\" }\n ra_editor = { path = \"../ra_editor\" }"}, {"sha": "55caae5c24936ac0191d025c3973b1c33e3788da", "filename": "crates/ra_analysis/src/symbol_index.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs?ref=ebd7c04faa27564ca3f03eed6d4a3636b7d3fc4c", "patch": "@@ -20,6 +20,7 @@\n //! file in the current workspace, and run a query aginst the union of all\n //! thouse fsts.\n use std::{\n+    cmp::Ordering,\n     hash::{Hash, Hasher},\n     sync::Arc,\n };\n@@ -111,35 +112,37 @@ impl Hash for SymbolIndex {\n }\n \n impl SymbolIndex {\n+    fn new(mut symbols: Vec<FileSymbol>) -> SymbolIndex {\n+        fn cmp(s1: &FileSymbol, s2: &FileSymbol) -> Ordering {\n+            unicase::Ascii::new(s1.name.as_str()).cmp(&unicase::Ascii::new(s2.name.as_str()))\n+        }\n+        symbols.par_sort_by(cmp);\n+        symbols.dedup_by(|s1, s2| cmp(s1, s2) == Ordering::Equal);\n+        let names = symbols.iter().map(|it| it.name.as_str().to_lowercase());\n+        let map = fst::Map::from_iter(names.into_iter().zip(0u64..)).unwrap();\n+        SymbolIndex { symbols, map }\n+    }\n+\n     pub(crate) fn len(&self) -> usize {\n         self.symbols.len()\n     }\n \n     pub(crate) fn for_files(\n         files: impl ParallelIterator<Item = (FileId, SourceFileNode)>,\n     ) -> SymbolIndex {\n-        let mut symbols = files\n+        let symbols = files\n             .flat_map(|(file_id, file)| {\n                 file.syntax()\n                     .descendants()\n                     .filter_map(to_symbol)\n-                    .map(move |(name, ptr)| {\n-                        (\n-                            name.as_str().to_lowercase(),\n-                            FileSymbol { name, ptr, file_id },\n-                        )\n-                    })\n+                    .map(move |(name, ptr)| FileSymbol { name, ptr, file_id })\n                     .collect::<Vec<_>>()\n             })\n             .collect::<Vec<_>>();\n-        symbols.par_sort_by(|s1, s2| s1.0.cmp(&s2.0));\n-        symbols.dedup_by(|s1, s2| s1.0 == s2.0);\n-        let (names, symbols): (Vec<String>, Vec<FileSymbol>) = symbols.into_iter().unzip();\n-        let map = fst::Map::from_iter(names.into_iter().zip(0u64..)).unwrap();\n-        SymbolIndex { symbols, map }\n+        SymbolIndex::new(symbols)\n     }\n \n-    pub(crate) fn for_file(file_id: FileId, file: SourceFileNode) -> SymbolIndex {\n+    fn for_file(file_id: FileId, file: SourceFileNode) -> SymbolIndex {\n         SymbolIndex::for_files(rayon::iter::once((file_id, file)))\n     }\n }"}]}