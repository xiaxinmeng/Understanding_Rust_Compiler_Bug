{"sha": "fc3fc571d29ccec4a4f80da35d5f77e94c6663c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjM2ZjNTcxZDI5Y2NlYzRhNGY4MGRhMzVkNWY3N2U5NGM2NjYzYzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-10T11:36:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-10T11:36:15Z"}, "message": "Cleaner API", "tree": {"sha": "a7d61c74a2ea0f77bf6de84b11fc3fca72d4fb82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7d61c74a2ea0f77bf6de84b11fc3fca72d4fb82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3", "html_url": "https://github.com/rust-lang/rust/commit/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a6ae42eacabeef0332273db216bc287d4fff613", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a6ae42eacabeef0332273db216bc287d4fff613", "html_url": "https://github.com/rust-lang/rust/commit/3a6ae42eacabeef0332273db216bc287d4fff613"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "c6f0417ecbfa80f507472809a87179d36d737a16", "filename": "crates/ide/src/syntax_highlighting/highlights.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlights.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlights.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlights.rs?ref=fc3fc571d29ccec4a4f80da35d5f77e94c6663c3", "patch": "@@ -51,18 +51,20 @@ impl Node {\n             }\n         }\n \n-        let (start, len) =\n+        let overlapping =\n             equal_range_by(&self.nested, |n| ordering(n.hl_range.range, hl_range.range));\n \n-        if len == 1 && self.nested[start].hl_range.range.contains_range(hl_range.range) {\n-            return self.nested[start].add(hl_range);\n+        if overlapping.len() == 1\n+            && self.nested[overlapping.start].hl_range.range.contains_range(hl_range.range)\n+        {\n+            return self.nested[overlapping.start].add(hl_range);\n         }\n \n         let nested = self\n             .nested\n-            .splice(start..start + len, iter::once(Node::new(hl_range)))\n+            .splice(overlapping.clone(), iter::once(Node::new(hl_range)))\n             .collect::<Vec<_>>();\n-        self.nested[start].nested = nested;\n+        self.nested[overlapping.start].nested = nested;\n     }\n \n     fn flatten(&self, acc: &mut Vec<HlRange>) {"}, {"sha": "fd402569423a95c113250bb9036407135cf9411b", "filename": "crates/ide/src/syntax_highlighting/injector.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finjector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finjector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finjector.rs?ref=fc3fc571d29ccec4a4f80da35d5f77e94c6663c3", "patch": "@@ -33,8 +33,7 @@ impl Injector {\n         &self.buf\n     }\n     pub(super) fn map_range_up(&self, range: TextRange) -> impl Iterator<Item = TextRange> + '_ {\n-        let (start, len) = equal_range_by(&self.ranges, |&(r, _)| ordering(r, range));\n-        (start..start + len).filter_map(move |i| {\n+        equal_range_by(&self.ranges, |&(r, _)| ordering(r, range)).filter_map(move |i| {\n             let (target_range, delta) = self.ranges[i];\n             let intersection = target_range.intersect(range).unwrap();\n             Some(intersection + delta?)"}, {"sha": "13aab1451ec0b22d332e12082c7b69ef2bf4acbb", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3fc571d29ccec4a4f80da35d5f77e94c6663c3/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=fc3fc571d29ccec4a4f80da35d5f77e94c6663c3", "patch": "@@ -152,13 +152,13 @@ where\n     left\n }\n \n-pub fn equal_range_by<T, F>(slice: &[T], mut key: F) -> (usize, usize)\n+pub fn equal_range_by<T, F>(slice: &[T], mut key: F) -> ops::Range<usize>\n where\n     F: FnMut(&T) -> Ordering,\n {\n     let start = partition_point(slice, |it| key(it) == Ordering::Less);\n     let len = partition_point(&slice[start..], |it| key(it) == Ordering::Equal);\n-    (start, len)\n+    start..start + len\n }\n \n pub struct JodChild(pub process::Child);"}]}