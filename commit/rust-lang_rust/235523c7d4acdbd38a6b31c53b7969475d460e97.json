{"sha": "235523c7d4acdbd38a6b31c53b7969475d460e97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNTUyM2M3ZDRhY2RiZDM4YTZiMzFjNTNiNzk2OTQ3NWQ0NjBlOTc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-02-09T11:39:08Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-02-11T18:01:40Z"}, "message": "Add way to completely hide suggestion from cli output", "tree": {"sha": "54fcf53733dfd37887858b66667d4c586be0ac39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54fcf53733dfd37887858b66667d4c586be0ac39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/235523c7d4acdbd38a6b31c53b7969475d460e97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/235523c7d4acdbd38a6b31c53b7969475d460e97", "html_url": "https://github.com/rust-lang/rust/commit/235523c7d4acdbd38a6b31c53b7969475d460e97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/235523c7d4acdbd38a6b31c53b7969475d460e97/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cfba1c5e807821095c7b874c92bf4a11674be36", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cfba1c5e807821095c7b874c92bf4a11674be36", "html_url": "https://github.com/rust-lang/rust/commit/7cfba1c5e807821095c7b874c92bf4a11674be36"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "588cdfcb1afff606b0a084f57d2276054137fa23", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=235523c7d4acdbd38a6b31c53b7969475d460e97", "patch": "@@ -346,6 +346,27 @@ impl Diagnostic {\n         self\n     }\n \n+    /// Adds a suggestion to the json output, but otherwise remains silent/undisplayed in the cli.\n+    ///\n+    /// This is intended to be used for suggestions that are *very* obvious in what the changes\n+    /// need to be from the message, but we still want other tools to be able to apply them.\n+    pub fn tool_only_span_suggestion(\n+        &mut self, sp: Span, msg: &str, suggestion: String, applicability: Applicability\n+    ) -> &mut Self {\n+        self.suggestions.push(CodeSuggestion {\n+            substitutions: vec![Substitution {\n+                parts: vec![SubstitutionPart {\n+                    snippet: suggestion,\n+                    span: sp,\n+                }],\n+            }],\n+            msg: msg.to_owned(),\n+            style: SuggestionStyle::CompletelyHidden,\n+            applicability: applicability,\n+        });\n+        self\n+    }\n+\n     pub fn set_span<S: Into<MultiSpan>>(&mut self, sp: S) -> &mut Self {\n         self.span = sp.into();\n         self"}, {"sha": "9f838987f0c19937961a82c4cd176dd4c906dcd9", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=235523c7d4acdbd38a6b31c53b7969475d460e97", "patch": "@@ -281,6 +281,25 @@ impl<'a> DiagnosticBuilder<'a> {\n         self\n     }\n \n+    pub fn tool_only_span_suggestion(\n+        &mut self,\n+        sp: Span,\n+        msg: &str,\n+        suggestion: String,\n+        applicability: Applicability,\n+    ) -> &mut Self {\n+        if !self.allow_suggestions {\n+            return self\n+        }\n+        self.diagnostic.tool_only_span_suggestion(\n+            sp,\n+            msg,\n+            suggestion,\n+            applicability,\n+        );\n+        self\n+    }\n+\n     forward!(pub fn set_span<S: Into<MultiSpan>>(&mut self, sp: S) -> &mut Self);\n     forward!(pub fn code(&mut self, s: DiagnosticId) -> &mut Self);\n "}, {"sha": "5e7c5315d6876cf9220b94bb7cd4fc80f3b55374", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=235523c7d4acdbd38a6b31c53b7969475d460e97", "patch": "@@ -1363,7 +1363,9 @@ impl EmitterWriter {\n                         }\n                     }\n                     for sugg in suggestions {\n-                        if sugg.style == SuggestionStyle::HideCodeAlways {\n+                        if sugg.style == SuggestionStyle::CompletelyHidden {\n+                            // do not display this suggestion, it is meant only for tools\n+                        } else if sugg.style == SuggestionStyle::HideCodeAlways {\n                             match self.emit_message_default(\n                                 &MultiSpan::new(),\n                                 &[(sugg.msg.to_owned(), Style::HeaderMsg)],"}, {"sha": "7805bf697c64a7b9b0fd818874873c64d7bd1232", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235523c7d4acdbd38a6b31c53b7969475d460e97/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=235523c7d4acdbd38a6b31c53b7969475d460e97", "patch": "@@ -72,8 +72,10 @@ pub enum Applicability {\n pub enum SuggestionStyle {\n     /// Hide the suggested code when displaying this suggestion inline.\n     HideCodeInline,\n-    /// Always hide the suggested code.\n+    /// Always hide the suggested code but display the message.\n     HideCodeAlways,\n+    /// Do not display this suggestion in the cli output, it is only meant for tools.\n+    CompletelyHidden,\n     /// Always show the suggested code.\n     /// This will *not* show the code if the suggestion is inline *and* the suggested code is\n     /// empty.\n@@ -83,8 +85,8 @@ pub enum SuggestionStyle {\n impl SuggestionStyle {\n     fn hide_inline(&self) -> bool {\n         match *self {\n-            SuggestionStyle::HideCodeAlways | SuggestionStyle::HideCodeInline => true,\n             SuggestionStyle::ShowCode => false,\n+            _ => true,\n         }\n     }\n }"}]}