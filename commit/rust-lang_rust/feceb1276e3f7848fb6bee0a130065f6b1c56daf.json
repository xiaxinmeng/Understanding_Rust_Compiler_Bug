{"sha": "feceb1276e3f7848fb6bee0a130065f6b1c56daf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlY2ViMTI3NmUzZjc4NDhmYjZiZWUwYTEzMDA2NWY2YjFjNTZkYWY=", "commit": {"author": {"name": "Nathan Typanski", "email": "ntypanski@gmail.com", "date": "2014-06-18T01:55:42Z"}, "committer": {"name": "Nathan Typanski", "email": "ntypanski@gmail.com", "date": "2014-06-18T03:45:34Z"}, "message": "change ~[] -> Vec for collect()\n\nThis updates the documentation for result::collect() and\noption::collect() to use the new-style syntax for vectors, instead of\nthe old ~[].\n\nAlso updates the code blocks for these docs so they will be tested\nautomatically.\n\ncloses #14991", "tree": {"sha": "8249589045694091dcb58ac49c595ca6fdef588c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8249589045694091dcb58ac49c595ca6fdef588c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feceb1276e3f7848fb6bee0a130065f6b1c56daf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feceb1276e3f7848fb6bee0a130065f6b1c56daf", "html_url": "https://github.com/rust-lang/rust/commit/feceb1276e3f7848fb6bee0a130065f6b1c56daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feceb1276e3f7848fb6bee0a130065f6b1c56daf/comments", "author": {"login": "nathantypanski", "id": 1385140, "node_id": "MDQ6VXNlcjEzODUxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1385140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathantypanski", "html_url": "https://github.com/nathantypanski", "followers_url": "https://api.github.com/users/nathantypanski/followers", "following_url": "https://api.github.com/users/nathantypanski/following{/other_user}", "gists_url": "https://api.github.com/users/nathantypanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathantypanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathantypanski/subscriptions", "organizations_url": "https://api.github.com/users/nathantypanski/orgs", "repos_url": "https://api.github.com/users/nathantypanski/repos", "events_url": "https://api.github.com/users/nathantypanski/events{/privacy}", "received_events_url": "https://api.github.com/users/nathantypanski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathantypanski", "id": 1385140, "node_id": "MDQ6VXNlcjEzODUxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1385140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathantypanski", "html_url": "https://github.com/nathantypanski", "followers_url": "https://api.github.com/users/nathantypanski/followers", "following_url": "https://api.github.com/users/nathantypanski/following{/other_user}", "gists_url": "https://api.github.com/users/nathantypanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathantypanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathantypanski/subscriptions", "organizations_url": "https://api.github.com/users/nathantypanski/orgs", "repos_url": "https://api.github.com/users/nathantypanski/repos", "events_url": "https://api.github.com/users/nathantypanski/events{/privacy}", "received_events_url": "https://api.github.com/users/nathantypanski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bb42e557c9ce41a8ccd3e6992dfcd81d5aef66f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bb42e557c9ce41a8ccd3e6992dfcd81d5aef66f", "html_url": "https://github.com/rust-lang/rust/commit/1bb42e557c9ce41a8ccd3e6992dfcd81d5aef66f"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "a4d33ae802851d1d9dced4d807b974d0a4c605a0", "filename": "src/libcore/option.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/feceb1276e3f7848fb6bee0a130065f6b1c56daf/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feceb1276e3f7848fb6bee0a130065f6b1c56daf/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=feceb1276e3f7848fb6bee0a130065f6b1c56daf", "patch": "@@ -574,13 +574,17 @@ impl<A> ExactSize<A> for Item<A> {}\n /// Here is an example which increments every integer in a vector,\n /// checking for overflow:\n ///\n-///     fn inc_conditionally(x: uint) -> Option<uint> {\n-///         if x == uint::MAX { return None; }\n-///         else { return Some(x+1u); }\n-///     }\n-///     let v = [1u, 2, 3];\n-///     let res = collect(v.iter().map(|&x| inc_conditionally(x)));\n-///     assert!(res == Some(~[2u, 3, 4]));\n+/// ```rust\n+/// use std::option;\n+/// use std::uint;\n+///\n+/// let v = vec!(1u, 2u);\n+/// let res: Option<Vec<uint>> = option::collect(v.iter().map(|x: &uint|\n+///     if *x == uint::MAX { None }\n+///     else { Some(x + 1) }\n+/// ));\n+/// assert!(res == Some(vec!(2u, 3u)));\n+/// ```\n #[inline]\n pub fn collect<T, Iter: Iterator<Option<T>>, V: FromIterator<T>>(iter: Iter) -> Option<V> {\n     // FIXME(#11084): This should be twice as fast once this bug is closed."}, {"sha": "3f82190e6b792783e82705cf237955f5711e36de", "filename": "src/libcore/result.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/feceb1276e3f7848fb6bee0a130065f6b1c56daf/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feceb1276e3f7848fb6bee0a130065f6b1c56daf/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=feceb1276e3f7848fb6bee0a130065f6b1c56daf", "patch": "@@ -572,13 +572,17 @@ impl<T: Show, E> Result<T, E> {\n /// Here is an example which increments every integer in a vector,\n /// checking for overflow:\n ///\n-///     fn inc_conditionally(x: uint) -> Result<uint, &'static str> {\n-///         if x == uint::MAX { return Err(\"overflow\"); }\n-///         else { return Ok(x+1u); }\n-///     }\n-///     let v = [1u, 2, 3];\n-///     let res = collect(v.iter().map(|&x| inc_conditionally(x)));\n-///     assert!(res == Ok(~[2u, 3, 4]));\n+/// ```rust\n+/// use std::result;\n+/// use std::uint;\n+///\n+/// let v = vec!(1u, 2u);\n+/// let res: Result<Vec<uint>, &'static str> = result::collect(v.iter().map(|x: &uint|\n+///     if *x == uint::MAX { Err(\"Overflow!\") }\n+///     else { Ok(x + 1) }\n+/// ));\n+/// assert!(res == Ok(vec!(2u, 3u)));\n+/// ```\n #[inline]\n pub fn collect<T, E, Iter: Iterator<Result<T, E>>, V: FromIterator<T>>(iter: Iter) -> Result<V, E> {\n     // FIXME(#11084): This should be twice as fast once this bug is closed."}]}