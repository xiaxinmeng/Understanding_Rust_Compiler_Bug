{"sha": "998df0d70b0c837d52a1c8100773409390df840c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5OGRmMGQ3MGIwYzgzN2Q1MmExYzgxMDA3NzM0MDkzOTBkZjg0MGM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-07T14:38:02Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-17T13:30:44Z"}, "message": "Remove Handler::cancel", "tree": {"sha": "7264feb94b3683ee483a3131db1a8f45c63a2758", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7264feb94b3683ee483a3131db1a8f45c63a2758"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/998df0d70b0c837d52a1c8100773409390df840c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/998df0d70b0c837d52a1c8100773409390df840c", "html_url": "https://github.com/rust-lang/rust/commit/998df0d70b0c837d52a1c8100773409390df840c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/998df0d70b0c837d52a1c8100773409390df840c/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a3930d43ced5204f53a6e1eebd741a81c4c1e9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a3930d43ced5204f53a6e1eebd741a81c4c1e9a", "html_url": "https://github.com/rust-lang/rust/commit/2a3930d43ced5204f53a6e1eebd741a81c4c1e9a"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "0b6740d7bbbc88ee3234d0e756c3b278f0f9a968", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=998df0d70b0c837d52a1c8100773409390df840c", "patch": "@@ -1119,7 +1119,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     Some((expected, found)) => Some((expected, found)),\n                     None => {\n                         // Derived error. Cancel the emitter.\n-                        self.tcx.sess.diagnostic().cancel(diag);\n+                        diag.cancel();\n                         return;\n                     }\n                 };"}, {"sha": "47ac2e5a667d57594b9b48ac970537af34cea6a7", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=998df0d70b0c837d52a1c8100773409390df840c", "patch": "@@ -520,10 +520,6 @@ impl Handler {\n         DiagnosticBuilder::new(self, Level::Fatal, msg)\n     }\n \n-    pub fn cancel(&self, err: &mut DiagnosticBuilder<'_>) {\n-        err.cancel();\n-    }\n-\n     fn panic_if_treat_err_as_bug(&self) {\n         if self.treat_err_as_bug() {\n             let s = match (self.err_count(), self.flags.treat_err_as_bug.unwrap_or(0)) {"}, {"sha": "9fbed66854c64e5a5fb023ad39ec8fd53bd54778", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=998df0d70b0c837d52a1c8100773409390df840c", "patch": "@@ -309,14 +309,14 @@ impl<'a> Parser<'a> {\n             Ok(lit) => {\n                 return Ok(ast::NestedMetaItem::Literal(lit))\n             }\n-            Err(ref mut err) => self.diagnostic().cancel(err)\n+            Err(ref mut err) => err.cancel(),\n         }\n \n         match self.parse_meta_item() {\n             Ok(mi) => {\n                 return Ok(ast::NestedMetaItem::MetaItem(mi))\n             }\n-            Err(ref mut err) => self.diagnostic().cancel(err)\n+            Err(ref mut err) => err.cancel(),\n         }\n \n         let found = self.this_token_to_string();"}, {"sha": "1e7058ff7156377dbad0a38dc8e8a31275276858", "filename": "src/libsyntax/parse/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs?ref=998df0d70b0c837d52a1c8100773409390df840c", "patch": "@@ -197,10 +197,6 @@ impl<'a> Parser<'a> {\n         self.sess.span_diagnostic.span_bug(sp, m)\n     }\n \n-    crate fn cancel(&self, err: &mut DiagnosticBuilder<'_>) {\n-        self.sess.span_diagnostic.cancel(err)\n-    }\n-\n     crate fn diagnostic(&self) -> &'a errors::Handler {\n         &self.sess.span_diagnostic\n     }\n@@ -426,15 +422,13 @@ impl<'a> Parser<'a> {\n     /// Eats and discards tokens until one of `kets` is encountered. Respects token trees,\n     /// passes through any errors encountered. Used for error recovery.\n     crate fn eat_to_tokens(&mut self, kets: &[&TokenKind]) {\n-        let handler = self.diagnostic();\n-\n         if let Err(ref mut err) = self.parse_seq_to_before_tokens(\n             kets,\n             SeqSep::none(),\n             TokenExpectType::Expect,\n             |p| Ok(p.parse_token_tree()),\n         ) {\n-            handler.cancel(err);\n+            err.cancel();\n         }\n     }\n "}, {"sha": "5764934b3cd16df20ca69594a0486c2901d552b5", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=998df0d70b0c837d52a1c8100773409390df840c", "patch": "@@ -770,7 +770,7 @@ impl<'a> Parser<'a> {\n                         ex = ExprKind::Lit(literal);\n                     }\n                     Err(mut err) => {\n-                        self.cancel(&mut err);\n+                        err.cancel();\n                         return Err(self.expected_expression_found());\n                     }\n                 }"}, {"sha": "3c624959eadb100eff7e5891d7a8a2bcc8af30e8", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=998df0d70b0c837d52a1c8100773409390df840c", "patch": "@@ -537,7 +537,7 @@ impl<'a> Parser<'a> {\n         mut err: DiagnosticBuilder<'a>,\n         expected: Expected,\n     ) -> PResult<'a, P<Pat>> {\n-        self.cancel(&mut err);\n+        err.cancel();\n \n         let expected = expected.unwrap_or(\"pattern\");\n         let msg = format!(\"expected {}, found {}\", expected, self.this_token_descr());"}, {"sha": "02da56f6e35a7b36b0b9689ed7e4a655dddd7de1", "filename": "src/libsyntax/parse/parser/stmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998df0d70b0c837d52a1c8100773409390df840c/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs?ref=998df0d70b0c837d52a1c8100773409390df840c", "patch": "@@ -361,7 +361,7 @@ impl<'a> Parser<'a> {\n                 }\n                 Err(mut e) => {\n                     self.recover_stmt_(SemiColonMode::Break, BlockMode::Ignore);\n-                    self.cancel(&mut e);\n+                    e.cancel();\n                 }\n                 _ => ()\n             }"}]}