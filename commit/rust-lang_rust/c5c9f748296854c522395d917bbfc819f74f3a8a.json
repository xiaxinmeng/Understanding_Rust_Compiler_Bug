{"sha": "c5c9f748296854c522395d917bbfc819f74f3a8a", "node_id": "C_kwDOAAsO6NoAKGM1YzlmNzQ4Mjk2ODU0YzUyMjM5NWQ5MTdiYmZjODE5Zjc0ZjNhOGE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T23:35:47Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T23:36:28Z"}, "message": "Erase regions before checking for default in uninitialized binding error", "tree": {"sha": "a994e551a6846848be6bf3286dd5c498cf2f66ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a994e551a6846848be6bf3286dd5c498cf2f66ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5c9f748296854c522395d917bbfc819f74f3a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c9f748296854c522395d917bbfc819f74f3a8a", "html_url": "https://github.com/rust-lang/rust/commit/c5c9f748296854c522395d917bbfc819f74f3a8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5c9f748296854c522395d917bbfc819f74f3a8a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b8f4319954ff2642690b9e5cbe4af352d095bf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8f4319954ff2642690b9e5cbe4af352d095bf6", "html_url": "https://github.com/rust-lang/rust/commit/4b8f4319954ff2642690b9e5cbe4af352d095bf6"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "583bc2e281da4a507f1e06231c08da6bf3cb0ada", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c5c9f748296854c522395d917bbfc819f74f3a8a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c9f748296854c522395d917bbfc819f74f3a8a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=c5c9f748296854c522395d917bbfc819f74f3a8a", "patch": "@@ -492,10 +492,17 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             let Some(default_trait) = tcx.get_diagnostic_item(sym::Default) else {\n                 return false;\n             };\n+            // Regions are already solved, so we must use a fresh InferCtxt,\n+            // but the type has region variables, so erase those.\n             tcx.infer_ctxt()\n                 .build()\n-                .type_implements_trait(default_trait, ty, ty::List::empty(), param_env)\n-                .may_apply()\n+                .type_implements_trait(\n+                    default_trait,\n+                    tcx.erase_regions(ty),\n+                    ty::List::empty(),\n+                    param_env,\n+                )\n+                .must_apply_modulo_regions()\n         };\n \n         let assign_value = match ty.kind() {"}, {"sha": "46565f61ca9a4b01de90b15c719af21dedbe22a8", "filename": "src/test/ui/borrowck/issue-103250.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c5c9f748296854c522395d917bbfc819f74f3a8a/src%2Ftest%2Fui%2Fborrowck%2Fissue-103250.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c9f748296854c522395d917bbfc819f74f3a8a/src%2Ftest%2Fui%2Fborrowck%2Fissue-103250.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-103250.rs?ref=c5c9f748296854c522395d917bbfc819f74f3a8a", "patch": "@@ -0,0 +1,37 @@\n+// edition:2021\n+\n+type TranslateFn = Box<dyn Fn(String, String) -> String>;\n+\n+pub struct DeviceCluster {\n+    devices: Vec<Device>,\n+}\n+\n+impl DeviceCluster {\n+    pub async fn do_something(&mut self) -> Result<String, Box<dyn std::error::Error>> {\n+        let mut last_error: Box<dyn std::error::Error>;\n+\n+        for device in &mut self.devices {\n+            match device.do_something().await {\n+                Ok(info) => {\n+                    return Ok(info);\n+                }\n+                Err(e) => {}\n+            }\n+        }\n+\n+        Err(last_error)\n+        //~^ ERROR used binding `last_error` isn't initialized\n+    }\n+}\n+\n+pub struct Device {\n+    translate_fn: Option<TranslateFn>,\n+}\n+\n+impl Device {\n+    pub async fn do_something(&mut self) -> Result<String, Box<dyn std::error::Error>> {\n+        Ok(String::from(\"\"))\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4a237835222f55bf9cbc63a1a217cc67131cc0a3", "filename": "src/test/ui/borrowck/issue-103250.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c5c9f748296854c522395d917bbfc819f74f3a8a/src%2Ftest%2Fui%2Fborrowck%2Fissue-103250.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5c9f748296854c522395d917bbfc819f74f3a8a/src%2Ftest%2Fui%2Fborrowck%2Fissue-103250.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-103250.stderr?ref=c5c9f748296854c522395d917bbfc819f74f3a8a", "patch": "@@ -0,0 +1,17 @@\n+error[E0381]: used binding `last_error` isn't initialized\n+  --> $DIR/issue-103250.rs:22:13\n+   |\n+LL |         let mut last_error: Box<dyn std::error::Error>;\n+   |             -------------- binding declared here but left uninitialized\n+...\n+LL |         Err(last_error)\n+   |             ^^^^^^^^^^ `last_error` used here but it isn't initialized\n+   |\n+help: consider assigning a value\n+   |\n+LL |         let mut last_error: Box<dyn std::error::Error> = todo!();\n+   |                                                        +++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0381`."}]}