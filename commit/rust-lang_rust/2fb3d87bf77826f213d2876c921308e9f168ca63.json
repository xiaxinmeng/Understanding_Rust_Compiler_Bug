{"sha": "2fb3d87bf77826f213d2876c921308e9f168ca63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYjNkODdiZjc3ODI2ZjIxM2QyODc2YzkyMTMwOGU5ZjE2OGNhNjM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-05T11:36:19Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-05T11:36:19Z"}, "message": "impl Debug for ImportMap", "tree": {"sha": "334e8fd8b65b90158df15a1bc265aaf596fcab39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/334e8fd8b65b90158df15a1bc265aaf596fcab39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fb3d87bf77826f213d2876c921308e9f168ca63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb3d87bf77826f213d2876c921308e9f168ca63", "html_url": "https://github.com/rust-lang/rust/commit/2fb3d87bf77826f213d2876c921308e9f168ca63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fb3d87bf77826f213d2876c921308e9f168ca63/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8395396782e343c6fe6bd318c74e8c9884b22323", "url": "https://api.github.com/repos/rust-lang/rust/commits/8395396782e343c6fe6bd318c74e8c9884b22323", "html_url": "https://github.com/rust-lang/rust/commit/8395396782e343c6fe6bd318c74e8c9884b22323"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "70749f3800ca6b1f51a0194e06b9ac154d88725c", "filename": "crates/ra_hir_def/src/import_map.rs", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2fb3d87bf77826f213d2876c921308e9f168ca63/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb3d87bf77826f213d2876c921308e9f168ca63/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs?ref=2fb3d87bf77826f213d2876c921308e9f168ca63", "patch": "@@ -1,6 +1,6 @@\n //! A map of all publicly exported items in a crate.\n \n-use std::{collections::hash_map::Entry, sync::Arc};\n+use std::{collections::hash_map::Entry, fmt, sync::Arc};\n \n use ra_db::CrateId;\n use rustc_hash::FxHashMap;\n@@ -21,7 +21,7 @@ use crate::{\n ///\n /// Note that all paths are relative to the containing crate's root, so the crate name still needs\n /// to be prepended to the `ModPath` before the path is valid.\n-#[derive(Debug, Eq, PartialEq)]\n+#[derive(Eq, PartialEq)]\n pub struct ImportMap {\n     map: FxHashMap<ItemInNs, ModPath>,\n }\n@@ -95,6 +95,26 @@ impl ImportMap {\n     }\n }\n \n+impl fmt::Debug for ImportMap {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let mut importable_paths: Vec<_> = self\n+            .map\n+            .iter()\n+            .map(|(item, modpath)| {\n+                let ns = match item {\n+                    ItemInNs::Types(_) => \"t\",\n+                    ItemInNs::Values(_) => \"v\",\n+                    ItemInNs::Macros(_) => \"m\",\n+                };\n+                format!(\"- {} ({})\", modpath, ns)\n+            })\n+            .collect();\n+\n+        importable_paths.sort();\n+        f.write_str(&importable_paths.join(\"\\n\"))\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::*;\n@@ -115,23 +135,7 @@ mod tests {\n \n                 let map = db.import_map(krate);\n \n-                let mut importable_paths: Vec<_> = map\n-                    .map\n-                    .iter()\n-                    .map(|(item, modpath)| {\n-                        let ns = match item {\n-                            ItemInNs::Types(_) => \"t\",\n-                            ItemInNs::Values(_) => \"v\",\n-                            ItemInNs::Macros(_) => \"m\",\n-                        };\n-                        format!(\"- {} ({})\", modpath, ns)\n-                    })\n-                    .collect();\n-\n-                importable_paths.sort();\n-                let importable_paths = importable_paths.join(\"\\n\");\n-\n-                Some(format!(\"{}:\\n{}\", name, importable_paths))\n+                Some(format!(\"{}:\\n{:?}\", name, map))\n             })\n             .collect();\n "}]}