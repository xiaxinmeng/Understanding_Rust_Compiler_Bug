{"sha": "381d2ed70d3f3c2913e19a950dee0da0149dae1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MWQyZWQ3MGQzZjNjMjkxM2UxOWE5NTBkZWUwZGEwMTQ5ZGFlMWQ=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-07-25T09:52:58Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-07-25T10:26:17Z"}, "message": "siphash: Add more benchmarks", "tree": {"sha": "c2104fe9afa537f8a2ff2733e4bccbbebed65249", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2104fe9afa537f8a2ff2733e4bccbbebed65249"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/381d2ed70d3f3c2913e19a950dee0da0149dae1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/381d2ed70d3f3c2913e19a950dee0da0149dae1d", "html_url": "https://github.com/rust-lang/rust/commit/381d2ed70d3f3c2913e19a950dee0da0149dae1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/381d2ed70d3f3c2913e19a950dee0da0149dae1d/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86d954ba2b97d971e866a70b588d73b53f3c29a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/86d954ba2b97d971e866a70b588d73b53f3c29a0", "html_url": "https://github.com/rust-lang/rust/commit/86d954ba2b97d971e866a70b588d73b53f3c29a0"}], "stats": {"total": 90, "additions": 87, "deletions": 3}, "files": [{"sha": "9b6cedd25b741a43071d70c2d71f59bf47388dcb", "filename": "src/libcoretest/hash/sip.rs", "status": "modified", "additions": 87, "deletions": 3, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/381d2ed70d3f3c2913e19a950dee0da0149dae1d/src%2Flibcoretest%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381d2ed70d3f3c2913e19a950dee0da0149dae1d/src%2Flibcoretest%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fhash%2Fsip.rs?ref=381d2ed70d3f3c2913e19a950dee0da0149dae1d", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-use test::Bencher;\n+use test::{Bencher, black_box};\n \n use core::hash::{Hash, Hasher};\n use core::hash::SipHasher;\n@@ -57,6 +57,12 @@ fn hash_with_keys<T: Hash>(k1: u64, k2: u64, x: &T) -> u64 {\n     st.finish()\n }\n \n+fn hash_bytes(x: &[u8]) -> u64 {\n+    let mut s = SipHasher::default();\n+    Hasher::write(&mut s, x);\n+    s.finish()\n+}\n+\n #[test]\n #[allow(unused_must_use)]\n fn test_siphash() {\n@@ -266,10 +272,88 @@ officia deserunt mollit anim id est laborum.\";\n     })\n }\n \n+#[bench]\n+fn bench_u32(b: &mut Bencher) {\n+    let u = 162629500u32;\n+    let u = black_box(u);\n+    b.iter(|| {\n+        hash(&u)\n+    });\n+    b.bytes = 8;\n+}\n+\n+#[bench]\n+fn bench_u32_keyed(b: &mut Bencher) {\n+    let u = 162629500u32;\n+    let u = black_box(u);\n+    let k1 = black_box(0x1);\n+    let k2 = black_box(0x2);\n+    b.iter(|| {\n+        hash_with_keys(k1, k2, &u)\n+    });\n+    b.bytes = 8;\n+}\n+\n #[bench]\n fn bench_u64(b: &mut Bencher) {\n     let u = 16262950014981195938u64;\n+    let u = black_box(u);\n     b.iter(|| {\n-        assert_eq!(hash(&u), 5254097107239593357);\n-    })\n+        hash(&u)\n+    });\n+    b.bytes = 8;\n+}\n+\n+#[bench]\n+fn bench_bytes_4(b: &mut Bencher) {\n+    let data = black_box([b' '; 4]);\n+    b.iter(|| {\n+        hash_bytes(&data)\n+    });\n+    b.bytes = 4;\n+}\n+\n+#[bench]\n+fn bench_bytes_7(b: &mut Bencher) {\n+    let data = black_box([b' '; 7]);\n+    b.iter(|| {\n+        hash_bytes(&data)\n+    });\n+    b.bytes = 7;\n+}\n+\n+#[bench]\n+fn bench_bytes_8(b: &mut Bencher) {\n+    let data = black_box([b' '; 8]);\n+    b.iter(|| {\n+        hash_bytes(&data)\n+    });\n+    b.bytes = 8;\n+}\n+\n+#[bench]\n+fn bench_bytes_a_16(b: &mut Bencher) {\n+    let data = black_box([b' '; 16]);\n+    b.iter(|| {\n+        hash_bytes(&data)\n+    });\n+    b.bytes = 16;\n+}\n+\n+#[bench]\n+fn bench_bytes_b_32(b: &mut Bencher) {\n+    let data = black_box([b' '; 32]);\n+    b.iter(|| {\n+        hash_bytes(&data)\n+    });\n+    b.bytes = 32;\n+}\n+\n+#[bench]\n+fn bench_bytes_c_128(b: &mut Bencher) {\n+    let data = black_box([b' '; 128]);\n+    b.iter(|| {\n+        hash_bytes(&data)\n+    });\n+    b.bytes = 128;\n }"}]}