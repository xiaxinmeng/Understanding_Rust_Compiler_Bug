{"sha": "79723a3e304bb74e3c5280b504603c764dc574e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NzIzYTNlMzA0YmI3NGUzYzUyODBiNTA0NjAzYzc2NGRjNTc0ZTE=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-29T00:09:24Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-29T00:14:00Z"}, "message": "Revert \"enable parallel codegen by default\"\n\nThis reverts commit c245c5bbad10923b47c9f66d5f0da2913ef11a38.\n\nParallel code generation generates invalid code for librand, which is\ncaught by recent versions of binutils.", "tree": {"sha": "9ae90ba812a1bd693ae37e335498e4ef66bf7c89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ae90ba812a1bd693ae37e335498e4ef66bf7c89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79723a3e304bb74e3c5280b504603c764dc574e1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79723a3e304bb74e3c5280b504603c764dc574e1", "html_url": "https://github.com/rust-lang/rust/commit/79723a3e304bb74e3c5280b504603c764dc574e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79723a3e304bb74e3c5280b504603c764dc574e1/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98bbccf2c7ea06e22ea8654a796121b9969a1760", "url": "https://api.github.com/repos/rust-lang/rust/commits/98bbccf2c7ea06e22ea8654a796121b9969a1760", "html_url": "https://github.com/rust-lang/rust/commit/98bbccf2c7ea06e22ea8654a796121b9969a1760"}], "stats": {"total": 26, "additions": 1, "deletions": 25}, "files": [{"sha": "cd08228978e15daf0f4db59268f5a4dd12ed7520", "filename": "mk/main.mk", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/79723a3e304bb74e3c5280b504603c764dc574e1/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79723a3e304bb74e3c5280b504603c764dc574e1/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=79723a3e304bb74e3c5280b504603c764dc574e1", "patch": "@@ -157,13 +157,6 @@ RUSTFLAGS_STAGE1 += -C prefer-dynamic\n # by not emitting them.\n RUSTFLAGS_STAGE0 += -Z no-landing-pads\n \n-# Go fast for stage0, and also for stage1/stage2 if optimization is off.\n-RUSTFLAGS_STAGE0 += -C codegen-units=4\n-ifdef CFG_DISABLE_OPTIMIZE\n-\tRUSTFLAGS_STAGE1 += -C codegen-units=4\n-\tRUSTFLAGS_STAGE2 += -C codegen-units=4\n-endif\n-\n # platform-specific auto-configuration\n include $(CFG_SRC_DIR)mk/platform.mk\n "}, {"sha": "45b618cb75841f007d3214c9fb562ac899b03011", "filename": "mk/tests.mk", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79723a3e304bb74e3c5280b504603c764dc574e1/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79723a3e304bb74e3c5280b504603c764dc574e1/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=79723a3e304bb74e3c5280b504603c764dc574e1", "patch": "@@ -633,10 +633,6 @@ CTEST_RUSTC_FLAGS := $$(subst -O,,$$(CTEST_RUSTC_FLAGS))\n ifndef CFG_DISABLE_OPTIMIZE_TESTS\n CTEST_RUSTC_FLAGS += -O\n endif\n-# Force codegen-units=1 for compiletest tests.  compiletest does its own\n-# parallelization internally, so rustc's default codegen-units=2 will actually\n-# slow things down.\n-CTEST_RUSTC_FLAGS += -C codegen-units=1\n \n \n CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) := \\"}, {"sha": "1f44808275f6cf961913060b9978dd79f75b87c7", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/79723a3e304bb74e3c5280b504603c764dc574e1/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79723a3e304bb74e3c5280b504603c764dc574e1/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=79723a3e304bb74e3c5280b504603c764dc574e1", "patch": "@@ -780,20 +780,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         early_warn(\"the --crate-file-name argument has been renamed to \\\n                     --print-file-name\");\n     }\n-\n-    let mut cg = build_codegen_options(matches);\n-\n-    if cg.codegen_units == 0 {\n-        match opt_level {\n-            // `-C lto` doesn't work with multiple codegen units.\n-            _ if cg.lto => cg.codegen_units = 1,\n-\n-            No | Less => cg.codegen_units = 2,\n-            Default | Aggressive => cg.codegen_units = 1,\n-        }\n-    }\n-    let cg = cg;\n-\n+    let cg = build_codegen_options(matches);\n \n     if !cg.remark.is_empty() && debuginfo == NoDebugInfo {\n         early_warn(\"-C remark will not show source locations without --debuginfo\");"}]}