{"sha": "8c5a8e10b25fdd2e12de78f04d2f538a22776024", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNWE4ZTEwYjI1ZmRkMmUxMmRlNzhmMDRkMmY1MzhhMjI3NzYwMjQ=", "commit": {"author": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-05-25T15:35:30Z"}, "committer": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-05-28T09:31:21Z"}, "message": "Rename UTF16Item[s] to Utf16Item[s]\n\nAccording to Rust's style guide acronyms should be CamelCase.\n\n[breaking-change]", "tree": {"sha": "20e2997c82601cf6d54e16d949090d4122f8710e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e2997c82601cf6d54e16d949090d4122f8710e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c5a8e10b25fdd2e12de78f04d2f538a22776024", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c5a8e10b25fdd2e12de78f04d2f538a22776024", "html_url": "https://github.com/rust-lang/rust/commit/8c5a8e10b25fdd2e12de78f04d2f538a22776024", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c5a8e10b25fdd2e12de78f04d2f538a22776024/comments", "author": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e049fefc74ce4ee92cf11ac2faff45ae35a1a29", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e049fefc74ce4ee92cf11ac2faff45ae35a1a29", "html_url": "https://github.com/rust-lang/rust/commit/7e049fefc74ce4ee92cf11ac2faff45ae35a1a29"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "8b8ddbe847c018ea4c10f65de4fc109cb6c859a2", "filename": "src/libcore/str.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8c5a8e10b25fdd2e12de78f04d2f538a22776024/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5a8e10b25fdd2e12de78f04d2f538a22776024/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8c5a8e10b25fdd2e12de78f04d2f538a22776024", "patch": "@@ -692,19 +692,19 @@ pub fn is_utf16(v: &[u16]) -> bool {\n /// An iterator that decodes UTF-16 encoded codepoints from a vector\n /// of `u16`s.\n #[deriving(Clone)]\n-pub struct UTF16Items<'a> {\n+pub struct Utf16Items<'a> {\n     iter: slice::Items<'a, u16>\n }\n /// The possibilities for values decoded from a `u16` stream.\n #[deriving(Eq, TotalEq, Clone, Show)]\n-pub enum UTF16Item {\n+pub enum Utf16Item {\n     /// A valid codepoint.\n     ScalarValue(char),\n     /// An invalid surrogate without its pair.\n     LoneSurrogate(u16)\n }\n \n-impl UTF16Item {\n+impl Utf16Item {\n     /// Convert `self` to a `char`, taking `LoneSurrogate`s to the\n     /// replacement character (U+FFFD).\n     #[inline]\n@@ -716,8 +716,8 @@ impl UTF16Item {\n     }\n }\n \n-impl<'a> Iterator<UTF16Item> for UTF16Items<'a> {\n-    fn next(&mut self) -> Option<UTF16Item> {\n+impl<'a> Iterator<Utf16Item> for Utf16Items<'a> {\n+    fn next(&mut self) -> Option<Utf16Item> {\n         let u = match self.iter.next() {\n             Some(u) => *u,\n             None => return None\n@@ -781,8 +781,8 @@ impl<'a> Iterator<UTF16Item> for UTF16Items<'a> {\n ///                 ScalarValue('i'), ScalarValue('c'),\n ///                 LoneSurrogate(0xD834)]);\n /// ```\n-pub fn utf16_items<'a>(v: &'a [u16]) -> UTF16Items<'a> {\n-    UTF16Items { iter : v.iter() }\n+pub fn utf16_items<'a>(v: &'a [u16]) -> Utf16Items<'a> {\n+    Utf16Items { iter : v.iter() }\n }\n \n /// Return a slice of `v` ending at (and not including) the first NUL"}, {"sha": "eb97f0f6a280808735aab22a1852a0b1566d70cc", "filename": "src/libstd/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c5a8e10b25fdd2e12de78f04d2f538a22776024/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5a8e10b25fdd2e12de78f04d2f538a22776024/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=8c5a8e10b25fdd2e12de78f04d2f538a22776024", "patch": "@@ -86,8 +86,8 @@ use vec::Vec;\n pub use core::str::{from_utf8, CharEq, Chars, CharOffsets};\n pub use core::str::{Bytes, CharSplits};\n pub use core::str::{CharSplitsN, Words, AnyLines, MatchIndices, StrSplits};\n-pub use core::str::{eq_slice, is_utf8, is_utf16, UTF16Items};\n-pub use core::str::{UTF16Item, ScalarValue, LoneSurrogate, utf16_items};\n+pub use core::str::{eq_slice, is_utf8, is_utf16, Utf16Items};\n+pub use core::str::{Utf16Item, ScalarValue, LoneSurrogate, utf16_items};\n pub use core::str::{truncate_utf16_at_nul, utf8_char_width, CharRange};\n pub use core::str::{Str, StrSlice};\n "}]}