{"sha": "a2c2cb942ebb443bfbc864a4606cc2784c850882", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYzJjYjk0MmViYjQ0M2JmYmM4NjRhNDYwNmNjMjc4NGM4NTA4ODI=", "commit": {"author": {"name": "ville-h", "email": "ville3.14159@gmail.com", "date": "2015-01-03T21:22:09Z"}, "committer": {"name": "ville-h", "email": "ville3.14159@gmail.com", "date": "2015-01-03T21:22:09Z"}, "message": "rename std::sync::RWLock to RwLock", "tree": {"sha": "be03aae62a70cb352602b166986d2963d548359a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be03aae62a70cb352602b166986d2963d548359a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2c2cb942ebb443bfbc864a4606cc2784c850882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c2cb942ebb443bfbc864a4606cc2784c850882", "html_url": "https://github.com/rust-lang/rust/commit/a2c2cb942ebb443bfbc864a4606cc2784c850882", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2c2cb942ebb443bfbc864a4606cc2784c850882/comments", "author": {"login": "ville-h", "id": 8824715, "node_id": "MDQ6VXNlcjg4MjQ3MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8824715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ville-h", "html_url": "https://github.com/ville-h", "followers_url": "https://api.github.com/users/ville-h/followers", "following_url": "https://api.github.com/users/ville-h/following{/other_user}", "gists_url": "https://api.github.com/users/ville-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/ville-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ville-h/subscriptions", "organizations_url": "https://api.github.com/users/ville-h/orgs", "repos_url": "https://api.github.com/users/ville-h/repos", "events_url": "https://api.github.com/users/ville-h/events{/privacy}", "received_events_url": "https://api.github.com/users/ville-h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ville-h", "id": 8824715, "node_id": "MDQ6VXNlcjg4MjQ3MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8824715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ville-h", "html_url": "https://github.com/ville-h", "followers_url": "https://api.github.com/users/ville-h/followers", "following_url": "https://api.github.com/users/ville-h/following{/other_user}", "gists_url": "https://api.github.com/users/ville-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/ville-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ville-h/subscriptions", "organizations_url": "https://api.github.com/users/ville-h/orgs", "repos_url": "https://api.github.com/users/ville-h/repos", "events_url": "https://api.github.com/users/ville-h/events{/privacy}", "received_events_url": "https://api.github.com/users/ville-h/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc2ba13939aa9672d886beb06efde7aeda2d5f7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2ba13939aa9672d886beb06efde7aeda2d5f7f", "html_url": "https://github.com/rust-lang/rust/commit/fc2ba13939aa9672d886beb06efde7aeda2d5f7f"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "af102fc74025a23422a0d128c72c01275e06f117", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a2c2cb942ebb443bfbc864a4606cc2784c850882/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c2cb942ebb443bfbc864a4606cc2784c850882/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=a2c2cb942ebb443bfbc864a4606cc2784c850882", "patch": "@@ -59,13 +59,13 @@ use sys_common::rwlock as sys;\n /// } // write lock is dropped here\n /// ```\n #[stable]\n-pub struct RWLock<T> {\n+pub struct RwLock<T> {\n     inner: Box<StaticRWLock>,\n     data: UnsafeCell<T>,\n }\n \n-unsafe impl<T:'static+Send> Send for RWLock<T> {}\n-unsafe impl<T> Sync for RWLock<T> {}\n+unsafe impl<T:'static+Send> Send for RwLock<T> {}\n+unsafe impl<T> Sync for RwLock<T> {}\n \n /// Structure representing a statically allocated RWLock.\n ///\n@@ -127,11 +127,11 @@ pub struct RWLockWriteGuard<'a, T: 'a> {\n     __marker: marker::NoSend,\n }\n \n-impl<T: Send + Sync> RWLock<T> {\n+impl<T: Send + Sync> RwLock<T> {\n     /// Creates a new instance of an RWLock which is unlocked and read to go.\n     #[stable]\n-    pub fn new(t: T) -> RWLock<T> {\n-        RWLock { inner: box RWLOCK_INIT, data: UnsafeCell::new(t) }\n+    pub fn new(t: T) -> RwLock<T> {\n+        RwLock { inner: box RWLOCK_INIT, data: UnsafeCell::new(t) }\n     }\n \n     /// Locks this rwlock with shared read access, blocking the current thread\n@@ -228,7 +228,7 @@ impl<T: Send + Sync> RWLock<T> {\n }\n \n #[unsafe_destructor]\n-impl<T> Drop for RWLock<T> {\n+impl<T> Drop for RwLock<T> {\n     fn drop(&mut self) {\n         unsafe { self.inner.lock.destroy() }\n     }"}]}