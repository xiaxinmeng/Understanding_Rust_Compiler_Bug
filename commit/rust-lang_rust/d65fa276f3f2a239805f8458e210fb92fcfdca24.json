{"sha": "d65fa276f3f2a239805f8458e210fb92fcfdca24", "node_id": "C_kwDOAAsO6NoAKGQ2NWZhMjc2ZjNmMmEyMzk4MDVmODQ1OGUyMTBmYjkyZmNmZGNhMjQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-04-27T15:01:05Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-26T11:38:10Z"}, "message": "Add tests for `#[rustc_default_body_unstable]`", "tree": {"sha": "9772f6696e32fe2051eecb7573949a66ca48d963", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9772f6696e32fe2051eecb7573949a66ca48d963"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d65fa276f3f2a239805f8458e210fb92fcfdca24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d65fa276f3f2a239805f8458e210fb92fcfdca24", "html_url": "https://github.com/rust-lang/rust/commit/d65fa276f3f2a239805f8458e210fb92fcfdca24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d65fa276f3f2a239805f8458e210fb92fcfdca24/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9015a5110fd7b887dafaa1007afc02da90963f2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9015a5110fd7b887dafaa1007afc02da90963f2a", "html_url": "https://github.com/rust-lang/rust/commit/9015a5110fd7b887dafaa1007afc02da90963f2a"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "3a177419d666ddd48d7e3b20c830b5be1ca0ce72", "filename": "src/test/ui/stability-attribute/auxiliary/default_body.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fauxiliary%2Fdefault_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fauxiliary%2Fdefault_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fauxiliary%2Fdefault_body.rs?ref=d65fa276f3f2a239805f8458e210fb92fcfdca24", "patch": "@@ -0,0 +1,29 @@\n+#![crate_type = \"lib\"]\n+#![feature(staged_api, rustc_attrs)]\n+#![stable(feature = \"stable_feature\", since = \"1.0.0\")]\n+\n+#[stable(feature = \"stable_feature\", since = \"1.0.0\")]\n+pub trait JustTrait {\n+    #[stable(feature = \"stable_feature\", since = \"1.0.0\")]\n+    #[rustc_default_body_unstable(feature = \"constant_default_body\", issue = \"none\")]\n+    const CONSTANT: usize = 0;\n+\n+    #[rustc_default_body_unstable(feature = \"fun_default_body\", issue = \"none\")]\n+    #[stable(feature = \"stable_feature\", since = \"1.0.0\")]\n+    fn fun() {}\n+}\n+\n+#[rustc_must_implement_one_of(eq, neq)]\n+#[stable(feature = \"stable_feature\", since = \"1.0.0\")]\n+pub trait Equal {\n+    #[rustc_default_body_unstable(feature = \"eq_default_body\", issue = \"none\")]\n+    #[stable(feature = \"stable_feature\", since = \"1.0.0\")]\n+    fn eq(&self, other: &Self) -> bool {\n+        !self.neq(other)\n+    }\n+\n+    #[stable(feature = \"stable_feature\", since = \"1.0.0\")]\n+    fn neq(&self, other: &Self) -> bool {\n+        !self.eq(other)\n+    }\n+}"}, {"sha": "8f970d0c9f6617407f2e88ac808c6946f4558363", "filename": "src/test/ui/stability-attribute/default-body-stability-err.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-err.rs?ref=d65fa276f3f2a239805f8458e210fb92fcfdca24", "patch": "@@ -0,0 +1,19 @@\n+// aux-build:default_body.rs\n+#![crate_type = \"lib\"]\n+\n+extern crate default_body;\n+\n+use default_body::{Equal, JustTrait};\n+\n+struct Type;\n+\n+impl JustTrait for Type {}\n+//~^ ERROR use of unstable library feature 'fun_default_body'\n+//~| ERROR use of unstable library feature 'constant_default_body'\n+\n+impl Equal for Type {\n+    //~^ ERROR use of unstable library feature 'eq_default_body'\n+    fn neq(&self, other: &Self) -> bool {\n+        false\n+    }\n+}"}, {"sha": "6abf68bbcae5328958c2bb856b717e21fb2df8ec", "filename": "src/test/ui/stability-attribute/default-body-stability-err.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-err.stderr?ref=d65fa276f3f2a239805f8458e210fb92fcfdca24", "patch": "@@ -0,0 +1,32 @@\n+error[E0658]: use of unstable library feature 'constant_default_body'\n+  --> $DIR/default-body-stability-err.rs:10:1\n+   |\n+LL | impl JustTrait for Type {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(constant_default_body)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'fun_default_body'\n+  --> $DIR/default-body-stability-err.rs:10:1\n+   |\n+LL | impl JustTrait for Type {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(fun_default_body)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'eq_default_body'\n+  --> $DIR/default-body-stability-err.rs:14:1\n+   |\n+LL | / impl Equal for Type {\n+LL | |\n+LL | |     fn neq(&self, other: &Self) -> bool {\n+LL | |         false\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: add `#![feature(eq_default_body)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "bdc7522f48dde92f9fb89f5e88688484be90540a", "filename": "src/test/ui/stability-attribute/default-body-stability-ok-enables.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-ok-enables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-ok-enables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-ok-enables.rs?ref=d65fa276f3f2a239805f8458e210fb92fcfdca24", "patch": "@@ -0,0 +1,18 @@\n+// check-pass\n+// aux-build:default_body.rs\n+#![crate_type = \"lib\"]\n+#![feature(fun_default_body, eq_default_body, constant_default_body)]\n+\n+extern crate default_body;\n+\n+use default_body::{Equal, JustTrait};\n+\n+struct Type;\n+\n+impl JustTrait for Type {}\n+\n+impl Equal for Type {\n+    fn neq(&self, other: &Self) -> bool {\n+        false\n+    }\n+}"}, {"sha": "e1f5c017096ab74261933767b74020b9efaf6866", "filename": "src/test/ui/stability-attribute/default-body-stability-ok-impls.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-ok-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65fa276f3f2a239805f8458e210fb92fcfdca24/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-ok-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fdefault-body-stability-ok-impls.rs?ref=d65fa276f3f2a239805f8458e210fb92fcfdca24", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+// aux-build:default_body.rs\n+#![crate_type = \"lib\"]\n+\n+extern crate default_body;\n+\n+use default_body::{Equal, JustTrait};\n+\n+struct Type;\n+\n+impl JustTrait for Type {\n+    const CONSTANT: usize = 1;\n+\n+    fn fun() {}\n+}\n+\n+impl Equal for Type {\n+    fn eq(&self, other: &Self) -> bool {\n+        false\n+    }\n+}"}]}