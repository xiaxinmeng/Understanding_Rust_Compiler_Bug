{"sha": "e7efce23618adcc9c960e1518d00883da8a8c444", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZWZjZTIzNjE4YWRjYzljOTYwZTE1MThkMDA4ODNkYThhOGM0NDQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-07-15T10:47:30Z"}, "committer": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2018-03-01T15:04:26Z"}, "message": "add some comments to `Obligation`", "tree": {"sha": "ac4ec83c8324dec978fddbd7bb23506d28951de1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac4ec83c8324dec978fddbd7bb23506d28951de1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7efce23618adcc9c960e1518d00883da8a8c444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7efce23618adcc9c960e1518d00883da8a8c444", "html_url": "https://github.com/rust-lang/rust/commit/e7efce23618adcc9c960e1518d00883da8a8c444", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7efce23618adcc9c960e1518d00883da8a8c444/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "803bd761278e6e06baabfd5aa1aa15e75c4a16a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/803bd761278e6e06baabfd5aa1aa15e75c4a16a4", "html_url": "https://github.com/rust-lang/rust/commit/803bd761278e6e06baabfd5aa1aa15e75c4a16a4"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "027ad4174bd1526076cf353f76b6727eb081df08", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e7efce23618adcc9c960e1518d00883da8a8c444/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7efce23618adcc9c960e1518d00883da8a8c444/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=e7efce23618adcc9c960e1518d00883da8a8c444", "patch": "@@ -77,10 +77,21 @@ pub enum IntercrateMode {\n /// scope. The eventual result is usually a `Selection` (defined below).\n #[derive(Clone, PartialEq, Eq, Hash)]\n pub struct Obligation<'tcx, T> {\n+    /// Why do we have to prove this thing?\n     pub cause: ObligationCause<'tcx>,\n+\n+    /// In which environment should we prove this thing?\n     pub param_env: ty::ParamEnv<'tcx>,\n-    pub recursion_depth: usize,\n+\n+    /// What are we trying to prove?\n     pub predicate: T,\n+\n+    /// If we started proving this as a result of trying to prove\n+    /// something else, track the total depth to ensure termination.\n+    /// If this goes over a certain threshold, we abort compilation --\n+    /// in such cases, we can not say whether or not the predicate\n+    /// holds for certain. Stupid halting problem. Such a drag.\n+    pub recursion_depth: usize,\n }\n \n pub type PredicateObligation<'tcx> = Obligation<'tcx, ty::Predicate<'tcx>>;"}]}