{"sha": "5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNmRkYjk0YTYxOWJhMTJmODM1NDlhNjVkMGU2MTY3ZTJjMDhjMWM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-10-12T12:49:03Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-10-13T12:35:14Z"}, "message": "Move span_invalid_monomorphization_error from cg_llvm to cg_ssa\n\nThe associated long diagnostic didn't get registered before", "tree": {"sha": "9ed083da565e6aa20501da549ef754490f3bfcb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ed083da565e6aa20501da549ef754490f3bfcb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "html_url": "https://github.com/rust-lang/rust/commit/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f203d5988e86a23d806c3d16c3a24bcb99610e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f203d5988e86a23d806c3d16c3a24bcb99610e3", "html_url": "https://github.com/rust-lang/rust/commit/5f203d5988e86a23d806c3d16c3a24bcb99610e3"}], "stats": {"total": 88, "additions": 42, "deletions": 46}, "files": [{"sha": "042e51ed2ba7a4e95e0f4bacd7e16142947df71c", "filename": "src/librustc_codegen_llvm/error_codes.rs", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5f203d5988e86a23d806c3d16c3a24bcb99610e3/src%2Flibrustc_codegen_llvm%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f203d5988e86a23d806c3d16c3a24bcb99610e3/src%2Flibrustc_codegen_llvm%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ferror_codes.rs?ref=5f203d5988e86a23d806c3d16c3a24bcb99610e3", "patch": "@@ -1,38 +0,0 @@\n-register_diagnostics! {\n-\n-E0511: r##\"\n-Invalid monomorphization of an intrinsic function was used. Erroneous code\n-example:\n-\n-```ignore (error-emitted-at-codegen-which-cannot-be-handled-by-compile_fail)\n-#![feature(platform_intrinsics)]\n-\n-extern \"platform-intrinsic\" {\n-    fn simd_add<T>(a: T, b: T) -> T;\n-}\n-\n-fn main() {\n-    unsafe { simd_add(0, 1); }\n-    // error: invalid monomorphization of `simd_add` intrinsic\n-}\n-```\n-\n-The generic type has to be a SIMD type. Example:\n-\n-```\n-#![feature(repr_simd)]\n-#![feature(platform_intrinsics)]\n-\n-#[repr(simd)]\n-#[derive(Copy, Clone)]\n-struct i32x2(i32, i32);\n-\n-extern \"platform-intrinsic\" {\n-    fn simd_add<T>(a: T, b: T) -> T;\n-}\n-\n-unsafe { simd_add(i32x2(0, 0), i32x2(1, 2)); } // ok!\n-```\n-\"##,\n-\n-}"}, {"sha": "3df8d4c26903bd43e859632e2c53a334b69689aa", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "patch": "@@ -20,9 +20,9 @@ use rustc_codegen_ssa::common::{IntPredicate, TypeKind};\n use rustc::hir;\n use syntax::ast::{self, FloatTy};\n \n+use rustc_codegen_ssa::common::span_invalid_monomorphization_error;\n use rustc_codegen_ssa::traits::*;\n \n-use rustc::session::Session;\n use syntax_pos::Span;\n \n use std::cmp::Ordering;\n@@ -1026,10 +1026,6 @@ fn get_rust_try_fn<'ll, 'tcx>(\n     rust_try\n }\n \n-fn span_invalid_monomorphization_error(a: &Session, b: Span, c: &str) {\n-    span_err!(a, b, E0511, \"{}\", c);\n-}\n-\n fn generic_simd_intrinsic(\n     bx: &mut Builder<'a, 'll, 'tcx>,\n     name: &str,"}, {"sha": "fde04a68457d074898181d000749889a64ae86c3", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "patch": "@@ -38,7 +38,7 @@ extern crate rustc_fs_util;\n extern crate rustc_driver as _;\n \n #[macro_use] extern crate log;\n-#[macro_use] extern crate syntax;\n+extern crate syntax;\n extern crate syntax_pos;\n extern crate rustc_errors as errors;\n \n@@ -64,8 +64,6 @@ use rustc::util::common::ErrorReported;\n use rustc_codegen_ssa::ModuleCodegen;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n \n-mod error_codes;\n-\n mod back {\n     pub mod archive;\n     pub mod bytecode;"}, {"sha": "ac39ca98476670ed2761ade3808667e35b4b2e51", "filename": "src/librustc_codegen_ssa/common.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcommon.rs?ref=5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "patch": "@@ -1,6 +1,7 @@\n #![allow(non_camel_case_types, non_snake_case)]\n \n use rustc::ty::{Ty, TyCtxt};\n+use rustc::session::Session;\n use syntax_pos::Span;\n \n use rustc::hir::def_id::DefId;\n@@ -200,3 +201,7 @@ pub fn shift_mask_val<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n         _ => bug!(\"shift_mask_val: expected Integer or Vector, found {:?}\", kind),\n     }\n }\n+\n+pub fn span_invalid_monomorphization_error(a: &Session, b: Span, c: &str) {\n+    span_err!(a, b, E0511, \"{}\", c);\n+}"}, {"sha": "02e26d8f6ecf0f9bebb552fc5dbb11b3717c7120", "filename": "src/librustc_codegen_ssa/error_codes.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_ssa%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c/src%2Flibrustc_codegen_ssa%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ferror_codes.rs?ref=5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "patch": "@@ -1,5 +1,40 @@\n syntax::register_diagnostics! {\n \n+E0511: r##\"\n+Invalid monomorphization of an intrinsic function was used. Erroneous code\n+example:\n+\n+```ignore (error-emitted-at-codegen-which-cannot-be-handled-by-compile_fail)\n+#![feature(platform_intrinsics)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_add<T>(a: T, b: T) -> T;\n+}\n+\n+fn main() {\n+    unsafe { simd_add(0, 1); }\n+    // error: invalid monomorphization of `simd_add` intrinsic\n+}\n+```\n+\n+The generic type has to be a SIMD type. Example:\n+\n+```\n+#![feature(repr_simd)]\n+#![feature(platform_intrinsics)]\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone)]\n+struct i32x2(i32, i32);\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_add<T>(a: T, b: T) -> T;\n+}\n+\n+unsafe { simd_add(i32x2(0, 0), i32x2(1, 2)); } // ok!\n+```\n+\"##,\n+\n E0668: r##\"\n Malformed inline assembly rejected by LLVM.\n "}]}