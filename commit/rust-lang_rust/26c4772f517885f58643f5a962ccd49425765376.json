{"sha": "26c4772f517885f58643f5a962ccd49425765376", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YzQ3NzJmNTE3ODg1ZjU4NjQzZjVhOTYyY2NkNDk0MjU3NjUzNzY=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T05:19:39Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T05:19:39Z"}, "message": "Implement string literals.", "tree": {"sha": "5513a301aa4b6aa04de4bd59b06c10e81fd43fbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5513a301aa4b6aa04de4bd59b06c10e81fd43fbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26c4772f517885f58643f5a962ccd49425765376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26c4772f517885f58643f5a962ccd49425765376", "html_url": "https://github.com/rust-lang/rust/commit/26c4772f517885f58643f5a962ccd49425765376", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26c4772f517885f58643f5a962ccd49425765376/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d4a804100f0ad643fb589f93851ceaee427fd02", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4a804100f0ad643fb589f93851ceaee427fd02", "html_url": "https://github.com/rust-lang/rust/commit/5d4a804100f0ad643fb589f93851ceaee427fd02"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "620f994ddcf0b18f3978c172db653c33a57addc9", "filename": "src/interpreter.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26c4772f517885f58643f5a962ccd49425765376/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c4772f517885f58643f5a962ccd49425765376/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=26c4772f517885f58643f5a962ccd49425765376", "patch": "@@ -587,6 +587,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                         _ => panic!(\"variant downcast on non-aggregate type: {:?}\", base_repr),\n                     },\n \n+                    // FIXME(tsion): Wrong for fat pointers.\n                     Deref => try!(self.memory.read_ptr(base_ptr)),\n \n                     _ => unimplemented!(),\n@@ -599,6 +600,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n         Ok(ptr)\n     }\n \n+    // TODO(tsion): Try making const_to_primval instead.\n     fn const_to_ptr(&mut self, const_val: &const_eval::ConstVal) -> EvalResult<Pointer> {\n         use rustc::middle::const_eval::ConstVal::*;\n         match *const_val {\n@@ -609,7 +611,15 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                 try!(self.memory.write_uint(ptr, int.to_u64_unchecked(), 8));\n                 Ok(ptr)\n             }\n-            Str(ref _s) => unimplemented!(),\n+            Str(ref s) => {\n+                let psize = self.memory.pointer_size;\n+                let static_ptr = self.memory.allocate(s.len());\n+                let ptr = self.memory.allocate(psize * 2);\n+                try!(self.memory.write_bytes(static_ptr, s.as_bytes()));\n+                try!(self.memory.write_ptr(ptr, static_ptr));\n+                try!(self.memory.write_uint(ptr.offset(psize as isize), s.len() as u64, psize));\n+                Ok(ptr)\n+            }\n             ByteStr(ref _bs) => unimplemented!(),\n             Bool(b) => {\n                 let ptr = self.memory.allocate(1);"}, {"sha": "e5ce009d3731e164b64ad898349a24dfdb49f4b5", "filename": "src/memory.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26c4772f517885f58643f5a962ccd49425765376/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c4772f517885f58643f5a962ccd49425765376/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=26c4772f517885f58643f5a962ccd49425765376", "patch": "@@ -144,6 +144,10 @@ impl Memory {\n         Ok(())\n     }\n \n+    pub fn write_bytes(&mut self, ptr: Pointer, src: &[u8]) -> EvalResult<()> {\n+        self.get_bytes_mut(ptr, src.len()).map(|dest| dest.clone_from_slice(src))\n+    }\n+\n     pub fn read_ptr(&self, ptr: Pointer) -> EvalResult<Pointer> {\n         let alloc = try!(self.get(ptr.alloc_id));\n         try!(alloc.check_relocation_edges(ptr.offset, ptr.offset + self.pointer_size));"}, {"sha": "0b9c3faff64d8227a65240fcdacf15f0572c9efc", "filename": "test/strings.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26c4772f517885f58643f5a962ccd49425765376/test%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c4772f517885f58643f5a962ccd49425765376/test%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fstrings.rs?ref=26c4772f517885f58643f5a962ccd49425765376", "patch": "@@ -0,0 +1,12 @@\n+#![feature(custom_attribute)]\n+#![allow(dead_code, unused_attributes)]\n+\n+#[miri_run]\n+fn empty() -> &'static str {\n+    \"\"\n+}\n+\n+#[miri_run]\n+fn hello() -> &'static str {\n+    \"Hello, world!\"\n+}"}]}