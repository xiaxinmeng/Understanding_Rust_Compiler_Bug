{"sha": "3ca40f7c08718a44c6d08d2cbe060244340e7157", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYTQwZjdjMDg3MThhNDRjNmQwOGQyY2JlMDYwMjQ0MzQwZTcxNTc=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-11-30T11:39:21Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-11-30T11:57:32Z"}, "message": "Add cycle recovery for generic predicates", "tree": {"sha": "ac206c8e3303a151b0ef06a8de2c6c68acfd2fdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac206c8e3303a151b0ef06a8de2c6c68acfd2fdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ca40f7c08718a44c6d08d2cbe060244340e7157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca40f7c08718a44c6d08d2cbe060244340e7157", "html_url": "https://github.com/rust-lang/rust/commit/3ca40f7c08718a44c6d08d2cbe060244340e7157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ca40f7c08718a44c6d08d2cbe060244340e7157/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf6809645e2327e20edd30eb535d4f06fa116b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf6809645e2327e20edd30eb535d4f06fa116b5c", "html_url": "https://github.com/rust-lang/rust/commit/cf6809645e2327e20edd30eb535d4f06fa116b5c"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "8e461e35922af5de7113d178f5b9a6bc130d2093", "filename": "crates/ra_hir_ty/src/db.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ca40f7c08718a44c6d08d2cbe060244340e7157/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca40f7c08718a44c6d08d2cbe060244340e7157/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs?ref=3ca40f7c08718a44c6d08d2cbe060244340e7157", "patch": "@@ -41,6 +41,7 @@ pub trait HirDatabase: DefDatabase {\n     fn callable_item_signature(&self, def: CallableDef) -> FnSig;\n \n     #[salsa::invoke(crate::lower::generic_predicates_for_param_query)]\n+    #[salsa::cycle(crate::lower::generic_predicates_for_param_recover)]\n     fn generic_predicates_for_param(\n         &self,\n         def: GenericDefId,"}, {"sha": "c6ee75c7ae0993cf4830423f79a6c99e678226ca", "filename": "crates/ra_hir_ty/src/lower.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3ca40f7c08718a44c6d08d2cbe060244340e7157/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca40f7c08718a44c6d08d2cbe060244340e7157/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flower.rs?ref=3ca40f7c08718a44c6d08d2cbe060244340e7157", "patch": "@@ -532,6 +532,15 @@ pub(crate) fn generic_predicates_for_param_query(\n         .collect()\n }\n \n+pub(crate) fn generic_predicates_for_param_recover(\n+    _db: &impl HirDatabase,\n+    _cycle: &[String],\n+    _def: &GenericDefId,\n+    _param_idx: &u32,\n+) -> Arc<[GenericPredicate]> {\n+    Arc::new([])\n+}\n+\n impl TraitEnvironment {\n     pub fn lower(db: &impl HirDatabase, resolver: &Resolver) -> Arc<TraitEnvironment> {\n         let predicates = resolver"}, {"sha": "552eb8f75a4f93d922f01c90b7815a5caf3ad568", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ca40f7c08718a44c6d08d2cbe060244340e7157/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca40f7c08718a44c6d08d2cbe060244340e7157/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=3ca40f7c08718a44c6d08d2cbe060244340e7157", "patch": "@@ -4718,10 +4718,6 @@ fn test() {\n }\n \n #[test]\n-// FIXME this is currently a Salsa panic; it would be nicer if it just returned\n-// in Unknown, and we should be able to do that once Salsa allows us to handle\n-// the cycle. But at least it doesn't overflow for now.\n-#[should_panic]\n fn unselected_projection_in_trait_env_cycle_1() {\n     let t = type_at(\n         r#\"\n@@ -4742,10 +4738,6 @@ fn test<T: Trait>() where T: Trait2<T::Item> {\n }\n \n #[test]\n-// FIXME this is currently a Salsa panic; it would be nicer if it just returned\n-// in Unknown, and we should be able to do that once Salsa allows us to handle\n-// the cycle. But at least it doesn't overflow for now.\n-#[should_panic]\n fn unselected_projection_in_trait_env_cycle_2() {\n     let t = type_at(\n         r#\""}]}