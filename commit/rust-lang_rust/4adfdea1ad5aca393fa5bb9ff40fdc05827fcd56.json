{"sha": "4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZGZkZWExYWQ1YWNhMzkzZmE1YmI5ZmY0MGZkYzA1ODI3ZmNkNTY=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-26T20:00:35Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-26T20:00:35Z"}, "message": "Small fixes", "tree": {"sha": "1ffe483a008c2d43441d7f04ef0b006823faf5f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ffe483a008c2d43441d7f04ef0b006823faf5f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56", "html_url": "https://github.com/rust-lang/rust/commit/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "590aed2eec869a1b64c5d3c07a26dd59c669004b", "url": "https://api.github.com/repos/rust-lang/rust/commits/590aed2eec869a1b64c5d3c07a26dd59c669004b", "html_url": "https://github.com/rust-lang/rust/commit/590aed2eec869a1b64c5d3c07a26dd59c669004b"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "c8ae198696e2b5d1481046e69956d3547a2c449f", "filename": "crates/ra_hir/src/expr/validation.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs?ref=4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56", "patch": "@@ -97,7 +97,12 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n         }\n     }\n \n-    fn validate_results_in_tail_expr(&mut self, body_id: ExprId, id: ExprId, db: &impl HirDatabase) {\n+    fn validate_results_in_tail_expr(\n+        &mut self,\n+        body_id: ExprId,\n+        id: ExprId,\n+        db: &impl HirDatabase,\n+    ) {\n         // the mismatch will be on the whole block currently\n         let mismatch = match self.infer.type_mismatch_for_expr(body_id) {\n             Some(m) => m,"}, {"sha": "8129904261ac41234423eea3f7b57e9ca891af92", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=4adfdea1ad5aca393fa5bb9ff40fdc05827fcd56", "patch": "@@ -1009,16 +1009,12 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n \n                 let then_ty = self.infer_expr_inner(*then_branch, &expected);\n                 self.coerce(&then_ty, &expected.ty);\n-                match else_branch {\n-                    Some(else_branch) => {\n-                        let else_ty = self.infer_expr_inner(*else_branch, &expected);\n-                        self.coerce(&else_ty, &expected.ty);\n-                    }\n-                    None => {\n-                        // no else branch -> unit\n-                        self.unify(&then_ty, &Ty::unit()); // actually coerce\n-                    }\n+\n+                let else_ty = match else_branch {\n+                    Some(else_branch) => self.infer_expr_inner(*else_branch, &expected),\n+                    None => Ty::unit(),\n                 };\n+                self.coerce(&else_ty, &expected.ty);\n \n                 expected.ty.clone()\n             }\n@@ -1422,7 +1418,8 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 }\n             }\n         }\n-        let ty = if let Some(expr) = tail { self.infer_expr_inner(expr, expected) } else { Ty::unit() };\n+        let ty =\n+            if let Some(expr) = tail { self.infer_expr_inner(expr, expected) } else { Ty::unit() };\n         ty\n     }\n \n@@ -1665,8 +1662,8 @@ fn calculate_least_upper_bound(expected_ty: Ty, actual_tys: &[Ty]) -> Ty {\n             all_never = false;\n             least_upper_bound = match (actual_ty, &least_upper_bound) {\n                 (_, Ty::Unknown)\n-                    | (Ty::Infer(_), Ty::Infer(InferTy::TypeVar(_)))\n-                    | (Ty::Apply(_), _) => actual_ty.clone(),\n+                | (Ty::Infer(_), Ty::Infer(InferTy::TypeVar(_)))\n+                | (Ty::Apply(_), _) => actual_ty.clone(),\n                 _ => least_upper_bound,\n             }\n         }"}]}