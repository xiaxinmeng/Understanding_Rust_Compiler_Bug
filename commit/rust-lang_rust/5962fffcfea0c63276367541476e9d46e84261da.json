{"sha": "5962fffcfea0c63276367541476e9d46e84261da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NjJmZmZjZmVhMGM2MzI3NjM2NzU0MTQ3NmU5ZDQ2ZTg0MjYxZGE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-27T11:41:11Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-27T13:07:55Z"}, "message": "Suggest similar lint name on unknown_clippy_lints", "tree": {"sha": "eabb87c1ce1d3205f82f0d033c468e49743d0187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eabb87c1ce1d3205f82f0d033c468e49743d0187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5962fffcfea0c63276367541476e9d46e84261da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5962fffcfea0c63276367541476e9d46e84261da", "html_url": "https://github.com/rust-lang/rust/commit/5962fffcfea0c63276367541476e9d46e84261da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5962fffcfea0c63276367541476e9d46e84261da/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fcb5304e27a747267276cdbac720f4bd2672172", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fcb5304e27a747267276cdbac720f4bd2672172", "html_url": "https://github.com/rust-lang/rust/commit/0fcb5304e27a747267276cdbac720f4bd2672172"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "b618fcfd7b87aa5ae5c139dd8ddeb7aa2ef1f7c9", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/5962fffcfea0c63276367541476e9d46e84261da/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5962fffcfea0c63276367541476e9d46e84261da/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=5962fffcfea0c63276367541476e9d46e84261da", "patch": "@@ -18,6 +18,7 @@ use rustc_session::declare_tool_lint;\n use semver::Version;\n use syntax::ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use syntax::source_map::Span;\n+use syntax::util::lev_distance::find_best_match_for_name;\n use syntax_pos::symbol::Symbol;\n \n declare_clippy_lint! {\n@@ -329,24 +330,30 @@ fn check_clippy_lint_names(cx: &LateContext<'_, '_>, items: &[NestedMetaItem]) {\n                     lint.span(),\n                     &format!(\"unknown clippy lint: clippy::{}\", name),\n                     |db| {\n-                        if name.as_str().chars().any(char::is_uppercase) {\n-                            let name_lower = name.as_str().to_lowercase();\n-                            match lint_store.check_lint_name(\n-                                &name_lower,\n-                                Some(tool_name.name)\n-                            ) {\n-                                // FIXME: can we suggest similar lint names here?\n-                                // https://github.com/rust-lang/rust/pull/56992\n-                                CheckLintNameResult::NoLint(None) => (),\n-                                _ => {\n-                                    db.span_suggestion(\n-                                        lint.span(),\n-                                        \"lowercase the lint name\",\n-                                        name_lower,\n-                                        Applicability::MaybeIncorrect,\n-                                    );\n-                                }\n-                            }\n+                        let name_lower = name.as_str().to_lowercase();\n+                        let symbols = lint_store.get_lints().iter().map(\n+                            |l| Symbol::intern(&l.name_lower())\n+                        ).collect::<Vec<_>>();\n+                        let sugg = find_best_match_for_name(\n+                            symbols.iter(),\n+                            &format!(\"clippy::{}\", name_lower),\n+                            None,\n+                        );\n+                        if name.as_str().chars().any(char::is_uppercase)\n+                            && lint_store.find_lints(&format!(\"clippy::{}\", name_lower)).is_ok() {\n+                            db.span_suggestion(\n+                                lint.span(),\n+                                \"lowercase the lint name\",\n+                                format!(\"clippy::{}\", name_lower),\n+                                Applicability::MachineApplicable,\n+                            );\n+                        } else if let Some(sugg) = sugg {\n+                            db.span_suggestion(\n+                                lint.span(),\n+                                \"did you mean\",\n+                                sugg.to_string(),\n+                                Applicability::MachineApplicable,\n+                            );\n                         }\n                     }\n                 );"}]}