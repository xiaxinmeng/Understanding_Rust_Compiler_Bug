{"sha": "3ff1d6bbf427cfb3d504092c93f261b49577170e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZjFkNmJiZjQyN2NmYjNkNTA0MDkyYzkzZjI2MWI0OTU3NzE3MGU=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-08-02T00:55:48Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-08-31T01:18:44Z"}, "message": "Fix tests", "tree": {"sha": "2a75067286fb96121dbacf260e770fa1a511dce6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a75067286fb96121dbacf260e770fa1a511dce6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ff1d6bbf427cfb3d504092c93f261b49577170e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff1d6bbf427cfb3d504092c93f261b49577170e", "html_url": "https://github.com/rust-lang/rust/commit/3ff1d6bbf427cfb3d504092c93f261b49577170e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ff1d6bbf427cfb3d504092c93f261b49577170e/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b95df4bdc330f34213812ad65cae86ced90d80c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b95df4bdc330f34213812ad65cae86ced90d80c", "html_url": "https://github.com/rust-lang/rust/commit/5b95df4bdc330f34213812ad65cae86ced90d80c"}], "stats": {"total": 66, "additions": 33, "deletions": 33}, "files": [{"sha": "d2938435ece31b0ae435d0b714ddfaa9ee51193d", "filename": "src/test/ui/did_you_mean/issue-40396.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -31,11 +31,11 @@ help: use `::<...>` instead of `<...>` to specify type or const arguments\n LL |     (0..13).collect::<Vec<i32>();\n    |                    ++\n \n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n   --> $DIR/issue-40396.rs:11:43\n    |\n LL |     let x = std::collections::HashMap<i128, i128>::new();\n-   |                                           ^ expected one of 7 possible tokens\n+   |                                           ^ expected one of 8 possible tokens\n    |\n help: use `::<...>` instead of `<...>` to specify type or const arguments\n    |"}, {"sha": "cec6980c008c4c9cc74350c2abd46e4afc5bd3ac", "filename": "src/test/ui/parser/attr-stmt-expr-attr-bad.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -12,11 +12,11 @@ error: expected expression, found `]`\n LL | #[cfg(FALSE)] fn e() { let _ = [#[attr]]; }\n    |                                        ^ expected expression\n \n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `#`\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `#`\n   --> $DIR/attr-stmt-expr-attr-bad.rs:9:35\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = foo#[attr](); }\n-   |                                   ^ expected one of 7 possible tokens\n+   |                                   ^ expected one of 8 possible tokens\n \n error: an inner attribute is not permitted in this context\n   --> $DIR/attr-stmt-expr-attr-bad.rs:11:36\n@@ -70,11 +70,11 @@ LL | #[cfg(FALSE)] fn e() { let _ = -#![attr] 0; }\n    |\n    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n \n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `#`\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `#`\n   --> $DIR/attr-stmt-expr-attr-bad.rs:23:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x #![attr] as Y; }\n-   |                                  ^ expected one of 7 possible tokens\n+   |                                  ^ expected one of 8 possible tokens\n \n error: an inner attribute is not permitted in this context\n   --> $DIR/attr-stmt-expr-attr-bad.rs:25:35\n@@ -372,23 +372,23 @@ error: unexpected token: `#`\n LL | #[cfg(FALSE)] fn e() { let _ = x.#![attr]foo(); }\n    |                                  ^\n \n-error: expected one of `.`, `;`, `?`, or an operator, found `#`\n+error: expected one of `.`, `;`, `?`, `else`, or an operator, found `#`\n   --> $DIR/attr-stmt-expr-attr-bad.rs:100:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.#![attr]foo(); }\n-   |                                  ^ expected one of `.`, `;`, `?`, or an operator\n+   |                                  ^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: unexpected token: `#`\n   --> $DIR/attr-stmt-expr-attr-bad.rs:103:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.#[attr]foo(); }\n    |                                  ^\n \n-error: expected one of `.`, `;`, `?`, or an operator, found `#`\n+error: expected one of `.`, `;`, `?`, `else`, or an operator, found `#`\n   --> $DIR/attr-stmt-expr-attr-bad.rs:103:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.#[attr]foo(); }\n-   |                                  ^ expected one of `.`, `;`, `?`, or an operator\n+   |                                  ^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: expected statement after outer attribute\n   --> $DIR/attr-stmt-expr-attr-bad.rs:108:37"}, {"sha": "1446a796fa0d5ba81825cad5d9e846dfd8bcd510", "filename": "src/test/ui/parser/issue-72253.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-72253.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-72253.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-72253.rs?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -1,6 +1,6 @@\n fn main() {\n     let a = std::process::Command::new(\"echo\")\n         .arg(\"1\")\n-        ,arg(\"2\") //~ ERROR expected one of `.`, `;`, `?`, or an operator, found `,`\n+        ,arg(\"2\") //~ ERROR expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n         .output();\n }"}, {"sha": "477fa09f495e23c315b7702283db3a1948dd407d", "filename": "src/test/ui/parser/issue-72253.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-72253.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-72253.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-72253.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `.`, `;`, `?`, or an operator, found `,`\n+error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n   --> $DIR/issue-72253.rs:4:9\n    |\n LL |         .arg(\"1\")\n-   |                  - expected one of `.`, `;`, `?`, or an operator\n+   |                  - expected one of `.`, `;`, `?`, `else`, or an operator\n LL |         ,arg(\"2\")\n    |         ^ unexpected token\n "}, {"sha": "919585877cf9cfa899c7e234188c72a108f0c97c", "filename": "src/test/ui/parser/issue-84117.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-84117.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-84117.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-84117.rs?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -2,8 +2,8 @@ fn main() {\n     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n     //~^ ERROR expected one of `>`, a const expression\n     //~| ERROR expected one of `>`, a const expression, lifetime, or type, found `}`\n-    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n-    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n-    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n+    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n+    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n }\n //~^ ERROR expected one of `,`, `:`, `=`, or `>`, found `}`"}, {"sha": "5b9cc53baa5eb891d247ca8a950ca9bd2c0b0574", "filename": "src/test/ui/parser/issue-84117.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-84117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fissue-84117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-84117.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -7,11 +7,11 @@ LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n    |                                         |          help: use `=` if you meant to assign\n    |                                         while parsing the type for `inner_local`\n \n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n   --> $DIR/issue-84117.rs:2:65\n    |\n LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n-   |                                                                 ^ expected one of 7 possible tokens\n+   |                                                                 ^ expected one of 8 possible tokens\n \n error: expected one of `,`, `:`, `=`, or `>`, found `}`\n   --> $DIR/issue-84117.rs:8:1\n@@ -33,17 +33,17 @@ LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n    |                                         |          help: use `=` if you meant to assign\n    |                                         while parsing the type for `inner_local`\n \n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n   --> $DIR/issue-84117.rs:2:65\n    |\n LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n-   |                                                                 ^ expected one of 7 possible tokens\n+   |                                                                 ^ expected one of 8 possible tokens\n \n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n   --> $DIR/issue-84117.rs:2:33\n    |\n LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n-   |                                 ^ expected one of 7 possible tokens\n+   |                                 ^ expected one of 8 possible tokens\n \n error: aborting due to 6 previous errors\n "}, {"sha": "8d9636d401c1ed0fa83414165c00fdffac342d1b", "filename": "src/test/ui/parser/macro/issue-37234.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37234.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37234.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37234.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `.`, `;`, `?`, or an operator, found `\"\"`\n+error: expected one of `.`, `;`, `?`, `else`, or an operator, found `\"\"`\n   --> $DIR/issue-37234.rs:3:19\n    |\n LL |         let x = 5 \"\";\n-   |                   ^^ expected one of `.`, `;`, `?`, or an operator\n+   |                   ^^ expected one of `.`, `;`, `?`, `else`, or an operator\n ...\n LL |     failed!();\n    |     ---------- in this macro invocation"}, {"sha": "f68d177c01f1fe04061871d6a4aa7d9ccbd0ea69", "filename": "src/test/ui/parser/missing-semicolon.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.rs?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -1,6 +1,6 @@\n macro_rules! m {\n     ($($e1:expr),*; $($e2:expr),*) => {\n-        $( let x = $e1 )*; //~ ERROR expected one of `.`, `;`, `?`, or\n+        $( let x = $e1 )*; //~ ERROR expected one of `.`, `;`, `?`, `else`, or\n         $( println!(\"{}\", $e2) )*;\n     }\n }"}, {"sha": "72f76b6fe3f548ce62809f6a58259d212afec891", "filename": "src/test/ui/parser/missing-semicolon.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `.`, `;`, `?`, or an operator, found keyword `let`\n+error: expected one of `.`, `;`, `?`, `else`, or an operator, found keyword `let`\n   --> $DIR/missing-semicolon.rs:3:12\n    |\n LL |         $( let x = $e1 )*;\n-   |            ^^^ expected one of `.`, `;`, `?`, or an operator\n+   |            ^^^ expected one of `.`, `;`, `?`, `else`, or an operator\n ...\n LL | fn main() { m!(0, 0; 0, 0); }\n    |             --------------- in this macro invocation"}, {"sha": "2c917a24e908aa1e030356b86fb0d6ab83beee34", "filename": "src/test/ui/parser/range-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frange-3.rs?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -2,5 +2,5 @@\n \n pub fn main() {\n     let r = 1..2..3;\n-    //~^ ERROR expected one of `.`, `;`, `?`, or an operator, found `..`\n+    //~^ ERROR expected one of `.`, `;`, `?`, `else`, or an operator, found `..`\n }"}, {"sha": "340167f1804e37a868dd6beac1addfd96e984d9d", "filename": "src/test/ui/parser/range-3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frange-3.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `.`, `;`, `?`, or an operator, found `..`\n+error: expected one of `.`, `;`, `?`, `else`, or an operator, found `..`\n   --> $DIR/range-3.rs:4:17\n    |\n LL |     let r = 1..2..3;\n-   |                 ^^ expected one of `.`, `;`, `?`, or an operator\n+   |                 ^^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: aborting due to previous error\n "}, {"sha": "c970c96de849094b14c1f2e637abee323778ff32", "filename": "src/test/ui/parser/range-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frange-4.rs?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -2,5 +2,5 @@\n \n pub fn main() {\n     let r = ..1..2;\n-    //~^ ERROR expected one of `.`, `;`, `?`, or an operator, found `..`\n+    //~^ ERROR expected one of `.`, `;`, `?`, `else`, or an operator, found `..`\n }"}, {"sha": "720d489389bfb7876f3b69253fe6d58f9030c40b", "filename": "src/test/ui/parser/range-4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ff1d6bbf427cfb3d504092c93f261b49577170e/src%2Ftest%2Fui%2Fparser%2Frange-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frange-4.stderr?ref=3ff1d6bbf427cfb3d504092c93f261b49577170e", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `.`, `;`, `?`, or an operator, found `..`\n+error: expected one of `.`, `;`, `?`, `else`, or an operator, found `..`\n   --> $DIR/range-4.rs:4:16\n    |\n LL |     let r = ..1..2;\n-   |                ^^ expected one of `.`, `;`, `?`, or an operator\n+   |                ^^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: aborting due to previous error\n "}]}