{"sha": "ca7b088aba92efb6643cbb1b69303db35bc1c631", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhN2IwODhhYmE5MmVmYjY2NDNjYmIxYjY5MzAzZGIzNWJjMWM2MzE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-16T07:50:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-16T07:50:44Z"}, "message": "remove type system tests", "tree": {"sha": "5377dea4b883a59dce0bee3bedab1b49d73206a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5377dea4b883a59dce0bee3bedab1b49d73206a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca7b088aba92efb6643cbb1b69303db35bc1c631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca7b088aba92efb6643cbb1b69303db35bc1c631", "html_url": "https://github.com/rust-lang/rust/commit/ca7b088aba92efb6643cbb1b69303db35bc1c631", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca7b088aba92efb6643cbb1b69303db35bc1c631/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255", "url": "https://api.github.com/repos/rust-lang/rust/commits/3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255", "html_url": "https://github.com/rust-lang/rust/commit/3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255"}], "stats": {"total": 20, "additions": 0, "deletions": 20}, "files": [{"sha": "568681da3c5d394244f00050cfb7e77f4aa51636", "filename": "tests/compile-fail/cast_fn_ptr_unsafe.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe.rs?ref=3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255", "patch": "@@ -1,10 +0,0 @@\n-// just making sure that fn -> unsafe fn casts are handled by rustc so miri doesn't have to\n-fn main() {\n-    fn f() {}\n-\n-    let g = f as fn() as unsafe fn(i32); //~ERROR: non-primitive cast: `fn()` as `unsafe fn(i32)`\n-\n-    unsafe {\n-        g(42);\n-    }\n-}"}, {"sha": "314365939fe8085834350276b6c4b176979837b1", "filename": "tests/compile-fail/cast_fn_ptr_unsafe2.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe2.rs?ref=3554d1acdc5dfecf9abb6fb5d03dcaf8f6e0e255", "patch": "@@ -1,10 +0,0 @@\n-// just making sure that fn -> unsafe fn casts are handled by rustc so miri doesn't have to\n-fn main() {\n-    fn f() {}\n-\n-    let g = f as fn() as fn(i32) as unsafe fn(i32); //~ERROR: non-primitive cast: `fn()` as `fn(i32)`\n-\n-    unsafe {\n-        g(42);\n-    }\n-}"}]}