{"sha": "11d2af7e9694e8e63000e33f77d4926e936e3822", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZDJhZjdlOTY5NGU4ZTYzMDAwZTMzZjc3ZDQ5MjZlOTM2ZTM4MjI=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-03-12T11:46:46Z"}, "committer": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-03-12T11:46:46Z"}, "message": "Improve suggestion and make it work for macros", "tree": {"sha": "f1d6450ac89a0a024820055ed210515b604df67c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1d6450ac89a0a024820055ed210515b604df67c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11d2af7e9694e8e63000e33f77d4926e936e3822", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJIBAABCAAyFiEEgbkHgdnD1idvtMJ0QJ1+7h56cWoFAmBLVKYUHHl1c3VrdGFu\nQG1hZ3Vyby5kZXYACgkQQJ1+7h56cWoCqw/+NcdIB2WleCdSI1RBqOUhesV4m0Xv\nOVhoQmG+3zsDdWddiFslART9MbvvyulT6XyYl9e6Q5DJHvF7KpXimupSUv70FeuT\nlt/OyCLgvdtZyG2j73yYCojELW/e/zx0XjXhA448XDLEPpi/pj6povihUCH3cbvL\nq4w8/bpjrGiWzfrypqpfup36OtM9KpYnVn5vGXwPdNzlc2i6PZqz9xegzkf2igOZ\nFznczwipNxRchrpKkxDx/gfCDVCarR+5I8o5sxP/iUAvOecXrkiKh1+Vytz5KN58\n1G7B2PdVXcXlAZ8wsWZg+6RxU4KtBoa+Z0N11IWWukx70i6/hmT5/43hk+7wyXku\n9HQ1smOf6AfGTLMSdrMWG6hoxkB6Xn4K+IjsorS4VIusJSv3+HkaX8VLi6pb4lUc\nweZFtzj1rS4UYF+VsjyczimLC/VhCGqQqM7gnKOtjkIR41CR4I1zOhGX4yzEwcXv\nDDbwePEpviw0EvRsD/yAp3vMjpnmKy5YtC0zkueiXsQkm8uIfnPEyPSMuzYHTMJp\nbb8NWaB+ZA0odB4PSbIIm/cJooqzHLhBA0uZjC0onSsavwLgbfCxl4G80a1FrsnL\nj6WhJATwyU+is+/zR/Q1HgU7L+h+TYI4LzSkGzZk2/eR2dcb1jZgs05Dm1HNxvhe\n8YLN9PkukNbpKDw=\n=RMkJ\n-----END PGP SIGNATURE-----", "payload": "tree f1d6450ac89a0a024820055ed210515b604df67c\nparent 0327c2e04106e258949dbf96e58bb582e2960c6b\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1615549606 +0900\ncommitter Yusuke Tanaka <yusuktan@maguro.dev> 1615549606 +0900\n\nImprove suggestion and make it work for macros\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11d2af7e9694e8e63000e33f77d4926e936e3822", "html_url": "https://github.com/rust-lang/rust/commit/11d2af7e9694e8e63000e33f77d4926e936e3822", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11d2af7e9694e8e63000e33f77d4926e936e3822/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0327c2e04106e258949dbf96e58bb582e2960c6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0327c2e04106e258949dbf96e58bb582e2960c6b", "html_url": "https://github.com/rust-lang/rust/commit/0327c2e04106e258949dbf96e58bb582e2960c6b"}], "stats": {"total": 68, "additions": 62, "deletions": 6}, "files": [{"sha": "a527f51b1fdc79de6fbd48cccef29852b8ad69d8", "filename": "clippy_lints/src/if_then_some_else_none.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/11d2af7e9694e8e63000e33f77d4926e936e3822/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11d2af7e9694e8e63000e33f77d4926e936e3822/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs?ref=11d2af7e9694e8e63000e33f77d4926e936e3822", "patch": "@@ -82,12 +82,22 @@ impl LateLintPass<'_> for IfThenSomeElseNone {\n             if let ExprKind::Path(ref els_call_qpath) = els_expr.kind;\n             if utils::match_qpath(els_call_qpath, &utils::paths::OPTION_NONE);\n             then {\n-                let cond_snip = utils::snippet(cx, cond.span, \"[condition]\");\n-                let arg_snip = utils::snippet(cx, then_arg.span, \"\");\n+                let cond_snip = utils::snippet_with_macro_callsite(cx, cond.span, \"[condition]\");\n+                let cond_snip = if matches!(cond.kind, ExprKind::Unary(_, _) | ExprKind::Binary(_, _, _)) {\n+                    format!(\"({})\", cond_snip)\n+                } else {\n+                    cond_snip.into_owned()\n+                };\n+                let arg_snip = utils::snippet_with_macro_callsite(cx, then_arg.span, \"\");\n+                let closure_body = if then_block.stmts.is_empty() {\n+                    arg_snip.into_owned()\n+                } else {\n+                    format!(\"{{ /* snippet */ {} }}\", arg_snip)\n+                };\n                 let help = format!(\n-                    \"consider using `bool::then` like: `{}.then(|| {{ /* snippet */ {} }})`\",\n+                    \"consider using `bool::then` like: `{}.then(|| {})`\",\n                     cond_snip,\n-                    arg_snip,\n+                    closure_body,\n                 );\n                 utils::span_lint_and_help(\n                     cx,"}, {"sha": "54789bf93209dff66681103f80796c148d295610", "filename": "tests/ui/if_then_some_else_none.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/11d2af7e9694e8e63000e33f77d4926e936e3822/tests%2Fui%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11d2af7e9694e8e63000e33f77d4926e936e3822/tests%2Fui%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.rs?ref=11d2af7e9694e8e63000e33f77d4926e936e3822", "patch": "@@ -10,6 +10,22 @@ fn main() {\n         None\n     };\n \n+    // Should issue an error when macros are used.\n+    let _ = if matches!(true, true) {\n+        println!(\"true!\");\n+        Some(matches!(true, false))\n+    } else {\n+        None\n+    };\n+\n+    // Should issue an error. Binary expression `o < 32` should be parenthesized.\n+    let x = Some(5);\n+    let _ = x.and_then(|o| if o < 32 { Some(o) } else { None });\n+\n+    // Should issue an error. Unary expression `!x` should be parenthesized.\n+    let x = true;\n+    let _ = if !x { Some(0) } else { None };\n+\n     // Should not issue an error since the `else` block has a statement besides `None`.\n     let _ = if foo() {\n         println!(\"true!\");"}, {"sha": "8cb22d569f4cc90bca59bf68e2971bb5e8415458", "filename": "tests/ui/if_then_some_else_none.stderr", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/11d2af7e9694e8e63000e33f77d4926e936e3822/tests%2Fui%2Fif_then_some_else_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11d2af7e9694e8e63000e33f77d4926e936e3822/tests%2Fui%2Fif_then_some_else_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.stderr?ref=11d2af7e9694e8e63000e33f77d4926e936e3822", "patch": "@@ -14,7 +14,37 @@ LL | |     };\n    = help: consider using `bool::then` like: `foo().then(|| { /* snippet */ \"foo\" })`\n \n error: this could be simplified with `bool::then`\n-  --> $DIR/if_then_some_else_none.rs:66:13\n+  --> $DIR/if_then_some_else_none.rs:14:13\n+   |\n+LL |       let _ = if matches!(true, true) {\n+   |  _____________^\n+LL | |         println!(\"true!\");\n+LL | |         Some(matches!(true, false))\n+LL | |     } else {\n+LL | |         None\n+LL | |     };\n+   | |_____^\n+   |\n+   = help: consider using `bool::then` like: `matches!(true, true).then(|| { /* snippet */ matches!(true, false) })`\n+\n+error: this could be simplified with `bool::then`\n+  --> $DIR/if_then_some_else_none.rs:23:28\n+   |\n+LL |     let _ = x.and_then(|o| if o < 32 { Some(o) } else { None });\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using `bool::then` like: `(o < 32).then(|| o)`\n+\n+error: this could be simplified with `bool::then`\n+  --> $DIR/if_then_some_else_none.rs:27:13\n+   |\n+LL |     let _ = if !x { Some(0) } else { None };\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using `bool::then` like: `(!x).then(|| 0)`\n+\n+error: this could be simplified with `bool::then`\n+  --> $DIR/if_then_some_else_none.rs:82:13\n    |\n LL |       let _ = if foo() {\n    |  _____________^\n@@ -27,5 +57,5 @@ LL | |     };\n    |\n    = help: consider using `bool::then` like: `foo().then(|| { /* snippet */ 150 })`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 5 previous errors\n "}]}