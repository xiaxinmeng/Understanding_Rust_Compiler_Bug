{"sha": "8d9f73a6902064e1a5508af98d77aed2ae055944", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkOWY3M2E2OTAyMDY0ZTFhNTUwOGFmOThkNzdhZWQyYWUwNTU5NDQ=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-05-01T13:32:28Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-05-01T15:32:06Z"}, "message": "Add new tests and bless old tests", "tree": {"sha": "e7c8d598b55aa1f2304a46f3b3e82fe1f973ccda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7c8d598b55aa1f2304a46f3b3e82fe1f973ccda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d9f73a6902064e1a5508af98d77aed2ae055944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9f73a6902064e1a5508af98d77aed2ae055944", "html_url": "https://github.com/rust-lang/rust/commit/8d9f73a6902064e1a5508af98d77aed2ae055944", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d9f73a6902064e1a5508af98d77aed2ae055944/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9b9ba51d3a5d3e5ae3db4a351c2be47e36ef366", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9b9ba51d3a5d3e5ae3db4a351c2be47e36ef366", "html_url": "https://github.com/rust-lang/rust/commit/f9b9ba51d3a5d3e5ae3db4a351c2be47e36ef366"}], "stats": {"total": 298, "additions": 286, "deletions": 12}, "files": [{"sha": "22187c4a4098a236681edef01c4ed10baa0dba8c", "filename": "src/test/ui/macros/issue-68060.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -1,11 +1,14 @@\n-error: `#[target_feature(..)]` can only be applied to `unsafe` functions\n+error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n   --> $DIR/issue-68060.rs:6:13\n    |\n LL |             #[target_feature(enable = \"\")]\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can only be applied to `unsafe` functions\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |             |_| (),\n    |             ------ not an `unsafe` function\n+   |\n+   = note: see issue #69098 <https://github.com/rust-lang/rust/issues/69098> for more information\n+   = help: add `#![feature(target_feature_11)]` to the crate attributes to enable\n \n error: the feature named `` is not valid for this target\n   --> $DIR/issue-68060.rs:6:30\n@@ -21,4 +24,5 @@ LL |             #[track_caller]\n \n error: aborting due to 3 previous errors\n \n-For more information about this error, try `rustc --explain E0737`.\n+Some errors have detailed explanations: E0658, E0737.\n+For more information about an error, try `rustc --explain E0658`."}, {"sha": "58a2c271ecfbccb8f1a53ff99bcc88f37d267686", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/check-pass.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fcheck-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fcheck-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fcheck-pass.rs?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,50 @@\n+// Tests the new rules added by RFC 2396, including:\n+// - applying `#[target_feature]` to safe functions is allowed\n+// - calling functions with `#[target_feature]` is allowed in\n+//   functions which have (at least) the same features\n+// - calling functions with `#[target_feature]` is allowed in\n+//   unsafe contexts\n+// - functions with `#[target_feature]` can coerce to unsafe fn pointers\n+\n+// check-pass\n+// only-x86_64\n+\n+#![feature(target_feature_11)]\n+\n+#[target_feature(enable = \"sse2\")]\n+const fn sse2() {}\n+\n+#[cfg(target_feature = \"sse2\")]\n+const SSE2_ONLY: () = unsafe {\n+    sse2();\n+};\n+\n+#[target_feature(enable = \"sse2\")]\n+fn also_sse2() {\n+    sse2();\n+}\n+\n+#[target_feature(enable = \"sse2\")]\n+#[target_feature(enable = \"avx\")]\n+fn sse2_and_avx() {\n+    sse2();\n+}\n+\n+struct Foo;\n+\n+impl Foo {\n+    #[target_feature(enable = \"sse2\")]\n+    fn sse2(&self) {\n+        sse2();\n+    }\n+}\n+\n+fn main() {\n+    if cfg!(target_feature = \"sse2\") {\n+        unsafe {\n+            sse2();\n+            Foo.sse2();\n+        }\n+    }\n+    let sse2_ptr: unsafe fn() = sse2;\n+}"}, {"sha": "975d7a1f694c6960933369479a9e60933a026e8f", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/feature-gate-target_feature_11.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffeature-gate-target_feature_11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffeature-gate-target_feature_11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffeature-gate-target_feature_11.rs?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,6 @@\n+// only-x86_64\n+\n+#[target_feature(enable = \"sse2\")] //~ ERROR can only be applied to `unsafe` functions\n+fn foo() {}\n+\n+fn main() {}"}, {"sha": "413890f436d0f07cda2f0ef0a70d33574c8ff9df", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/feature-gate-target_feature_11.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffeature-gate-target_feature_11.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffeature-gate-target_feature_11.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffeature-gate-target_feature_11.stderr?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,14 @@\n+error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n+  --> $DIR/feature-gate-target_feature_11.rs:3:1\n+   |\n+LL | #[target_feature(enable = \"sse2\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | fn foo() {}\n+   | ----------- not an `unsafe` function\n+   |\n+   = note: see issue #69098 <https://github.com/rust-lang/rust/issues/69098> for more information\n+   = help: add `#![feature(target_feature_11)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "3ecea5c5313901878d07384cd515ac4f2df4cf7c", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/fn-ptr.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-ptr.rs?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,10 @@\n+// only-x86_64\n+\n+#![feature(target_feature_11)]\n+\n+#[target_feature(enable = \"sse2\")]\n+fn foo() {}\n+\n+fn main() {\n+    let foo: fn() = foo; //~ ERROR mismatched types\n+}"}, {"sha": "06cfdde3fb974f4e309a3b0088ac9866334157e3", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/fn-ptr.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-ptr.stderr?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,18 @@\n+error[E0308]: mismatched types\n+  --> $DIR/fn-ptr.rs:9:21\n+   |\n+LL | #[target_feature(enable = \"sse2\")]\n+   | ---------------------------------- `#[target_feature]` added here\n+...\n+LL |     let foo: fn() = foo;\n+   |              ----   ^^^ cannot coerce functions with `#[target_feature]` to safe function pointers\n+   |              |\n+   |              expected due to this\n+   |\n+   = note: expected fn pointer `fn()`\n+                 found fn item `fn() {foo}`\n+   = note: functions with `#[target_feature]` can only be coerced to `unsafe` function pointers\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "8da3affc4477bb880ad7b32a58d819830bf5bf43", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/safe-calls.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fsafe-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fsafe-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fsafe-calls.rs?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,47 @@\n+// only-x86_64\n+\n+#![feature(target_feature_11)]\n+\n+#[target_feature(enable = \"sse2\")]\n+const fn sse2() {}\n+\n+#[target_feature(enable = \"avx\")]\n+#[target_feature(enable = \"bmi2\")]\n+fn avx_bmi2() {}\n+\n+struct Quux;\n+\n+impl Quux {\n+    #[target_feature(enable = \"avx\")]\n+    #[target_feature(enable = \"bmi2\")]\n+    fn avx_bmi2(&self) {}\n+}\n+\n+fn foo() {\n+    sse2();              //~ ERROR call to function with `#[target_feature]` is unsafe\n+    avx_bmi2();          //~ ERROR call to function with `#[target_feature]` is unsafe\n+    Quux.avx_bmi2();     //~ ERROR call to function with `#[target_feature]` is unsafe\n+}\n+\n+#[target_feature(enable = \"sse2\")]\n+fn bar() {\n+    avx_bmi2();          //~ ERROR call to function with `#[target_feature]` is unsafe\n+    Quux.avx_bmi2();     //~ ERROR call to function with `#[target_feature]` is unsafe\n+}\n+\n+#[target_feature(enable = \"avx\")]\n+fn baz() {\n+    sse2();              //~ ERROR call to function with `#[target_feature]` is unsafe\n+    avx_bmi2();          //~ ERROR call to function with `#[target_feature]` is unsafe\n+    Quux.avx_bmi2();     //~ ERROR call to function with `#[target_feature]` is unsafe\n+}\n+\n+#[target_feature(enable = \"avx\")]\n+#[target_feature(enable = \"bmi2\")]\n+fn qux() {\n+    sse2();              //~ ERROR call to function with `#[target_feature]` is unsafe\n+}\n+\n+const name: () = sse2(); //~ ERROR call to function with `#[target_feature]` is unsafe\n+\n+fn main() {}"}, {"sha": "b9f748640b55874a733bfab632b1f3d4a10baa9c", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/safe-calls.stderr", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fsafe-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fsafe-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fsafe-calls.stderr?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,83 @@\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:21:5\n+   |\n+LL |     sse2();\n+   |     ^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:22:5\n+   |\n+LL |     avx_bmi2();\n+   |     ^^^^^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:23:5\n+   |\n+LL |     Quux.avx_bmi2();\n+   |     ^^^^^^^^^^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:28:5\n+   |\n+LL |     avx_bmi2();\n+   |     ^^^^^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:29:5\n+   |\n+LL |     Quux.avx_bmi2();\n+   |     ^^^^^^^^^^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:34:5\n+   |\n+LL |     sse2();\n+   |     ^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:35:5\n+   |\n+LL |     avx_bmi2();\n+   |     ^^^^^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:36:5\n+   |\n+LL |     Quux.avx_bmi2();\n+   |     ^^^^^^^^^^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:42:5\n+   |\n+LL |     sse2();\n+   |     ^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error[E0133]: call to function with `#[target_feature]` is unsafe and requires unsafe function or block\n+  --> $DIR/safe-calls.rs:45:18\n+   |\n+LL | const name: () = sse2();\n+   |                  ^^^^^^ call to function with `#[target_feature]`\n+   |\n+   = note: can only be called if the required target features are available\n+\n+error: aborting due to 10 previous errors\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "7314fa8cced2aa5921147578de949b0696901594", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/trait-impl.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ftrait-impl.rs?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,21 @@\n+// only-x86_64\n+\n+#![feature(target_feature_11)]\n+\n+trait Foo {\n+    fn foo(&self);\n+    unsafe fn unsf_foo(&self);\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    #[target_feature(enable = \"sse2\")]\n+    //~^ ERROR cannot be applied to safe trait method\n+    fn foo(&self) {}\n+\n+    #[target_feature(enable = \"sse2\")]\n+    unsafe fn unsf_foo(&self) {}\n+}\n+\n+fn main() {}"}, {"sha": "3c56e0fc5c6e34765b5f5c47c6a160889974d820", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/trait-impl.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ftrait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ftrait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ftrait-impl.stderr?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -0,0 +1,11 @@\n+error: `#[target_feature(..)]` cannot be applied to safe trait method\n+  --> $DIR/trait-impl.rs:13:5\n+   |\n+LL |     #[target_feature(enable = \"sse2\")]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot be applied to safe trait method\n+LL |\n+LL |     fn foo(&self) {}\n+   |     ---------------- not an `unsafe` function\n+\n+error: aborting due to previous error\n+"}, {"sha": "63b1951a71631b2c4e295d4348ee509455dd6fae", "filename": "src/test/ui/target-feature/invalid-attribute.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -26,7 +26,7 @@ unsafe fn foo() {}\n \n #[target_feature(enable = \"sse2\")]\n //~^ ERROR `#[target_feature(..)]` can only be applied to `unsafe` functions\n-//~| NOTE can only be applied to `unsafe` functions\n+//~| NOTE see issue #69098\n fn bar() {}\n //~^ NOTE not an `unsafe` function\n \n@@ -72,7 +72,7 @@ trait Quux {\n impl Quux for Foo {\n     #[target_feature(enable = \"sse2\")]\n     //~^ ERROR `#[target_feature(..)]` can only be applied to `unsafe` functions\n-    //~| NOTE can only be applied to `unsafe` functions\n+    //~| NOTE see issue #69098\n     fn foo() {}\n     //~^ NOTE not an `unsafe` function\n }\n@@ -84,7 +84,7 @@ fn main() {\n     }\n     #[target_feature(enable = \"sse2\")]\n     //~^ ERROR `#[target_feature(..)]` can only be applied to `unsafe` functions\n-    //~| NOTE can only be applied to `unsafe` functions\n+    //~| NOTE see issue #69098\n     || {};\n     //~^ NOTE not an `unsafe` function\n }"}, {"sha": "21d6aa218ec79fe314c29d378d996b16bf022437", "filename": "src/test/ui/target-feature/invalid-attribute.stderr", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d9f73a6902064e1a5508af98d77aed2ae055944/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr?ref=8d9f73a6902064e1a5508af98d77aed2ae055944", "patch": "@@ -22,14 +22,17 @@ error: malformed `target_feature` attribute input\n LL | #[target_feature(disable = \"baz\")]\n    |                  ^^^^^^^^^^^^^^^ help: must be of the form: `enable = \"..\"`\n \n-error: `#[target_feature(..)]` can only be applied to `unsafe` functions\n+error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n   --> $DIR/invalid-attribute.rs:27:1\n    |\n LL | #[target_feature(enable = \"sse2\")]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can only be applied to `unsafe` functions\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | fn bar() {}\n    | ----------- not an `unsafe` function\n+   |\n+   = note: see issue #69098 <https://github.com/rust-lang/rust/issues/69098> for more information\n+   = help: add `#![feature(target_feature_11)]` to the crate attributes to enable\n \n error: attribute should be applied to a function\n   --> $DIR/invalid-attribute.rs:33:1\n@@ -91,23 +94,30 @@ error: cannot use `#[inline(always)]` with `#[target_feature]`\n LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n \n-error: `#[target_feature(..)]` can only be applied to `unsafe` functions\n+error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n   --> $DIR/invalid-attribute.rs:85:5\n    |\n LL |     #[target_feature(enable = \"sse2\")]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can only be applied to `unsafe` functions\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     || {};\n    |     ----- not an `unsafe` function\n+   |\n+   = note: see issue #69098 <https://github.com/rust-lang/rust/issues/69098> for more information\n+   = help: add `#![feature(target_feature_11)]` to the crate attributes to enable\n \n-error: `#[target_feature(..)]` can only be applied to `unsafe` functions\n+error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n   --> $DIR/invalid-attribute.rs:73:5\n    |\n LL |     #[target_feature(enable = \"sse2\")]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can only be applied to `unsafe` functions\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     fn foo() {}\n    |     ----------- not an `unsafe` function\n+   |\n+   = note: see issue #69098 <https://github.com/rust-lang/rust/issues/69098> for more information\n+   = help: add `#![feature(target_feature_11)]` to the crate attributes to enable\n \n error: aborting due to 14 previous errors\n \n+For more information about this error, try `rustc --explain E0658`."}]}