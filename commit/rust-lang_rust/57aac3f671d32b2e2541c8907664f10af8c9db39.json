{"sha": "57aac3f671d32b2e2541c8907664f10af8c9db39", "node_id": "C_kwDOAAsO6NoAKDU3YWFjM2Y2NzFkMzJiMmUyNTQxYzg5MDc2NjRmMTBhZjhjOWRiMzk", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-04-29T19:50:53Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-04-29T19:50:53Z"}, "message": "Improve internal field comments on `slice::Iter(Mut)`\n\nI wrote these in a previous PR that I ended up withdrawing, so might as well submit them separately.", "tree": {"sha": "3c0858e1d72d1784b5254833e2f70dff1b15fbc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c0858e1d72d1784b5254833e2f70dff1b15fbc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57aac3f671d32b2e2541c8907664f10af8c9db39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57aac3f671d32b2e2541c8907664f10af8c9db39", "html_url": "https://github.com/rust-lang/rust/commit/57aac3f671d32b2e2541c8907664f10af8c9db39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57aac3f671d32b2e2541c8907664f10af8c9db39/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a78029b4f4d92978b8fde0a677ea300b113c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/43a78029b4f4d92978b8fde0a677ea300b113c41", "html_url": "https://github.com/rust-lang/rust/commit/43a78029b4f4d92978b8fde0a677ea300b113c41"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "8629aab00704645b6c75db73b8e3978096f378c9", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/57aac3f671d32b2e2541c8907664f10af8c9db39/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57aac3f671d32b2e2541c8907664f10af8c9db39/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=57aac3f671d32b2e2541c8907664f10af8c9db39", "patch": "@@ -60,10 +60,17 @@ impl<'a, T> IntoIterator for &'a mut [T] {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n pub struct Iter<'a, T: 'a> {\n+    /// The pointer to the next element to return, or the past-the-end location\n+    /// if the iterator is empty.\n+    ///\n+    /// This address will be used for all ZST elements, never changed.\n     ptr: NonNull<T>,\n-    end: *const T, // If T is a ZST, this is actually ptr+len. This encoding is picked so that\n-    // ptr == end is a quick test for the Iterator being empty, that works\n-    // for both ZST and non-ZST.\n+    /// For non-ZSTs, the non-null pointer to the past-the-end element.\n+    ///\n+    /// For ZSTs, this is `ptr.wrapping_byte_add(len)`.\n+    ///\n+    /// For all types, `ptr == end` tests whether the iterator is empty.\n+    end: *const T,\n     _marker: PhantomData<&'a T>,\n }\n \n@@ -179,10 +186,17 @@ impl<T> AsRef<[T]> for Iter<'_, T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n pub struct IterMut<'a, T: 'a> {\n+    /// The pointer to the next element to return, or the past-the-end location\n+    /// if the iterator is empty.\n+    ///\n+    /// This address will be used for all ZST elements, never changed.\n     ptr: NonNull<T>,\n-    end: *mut T, // If T is a ZST, this is actually ptr+len. This encoding is picked so that\n-    // ptr == end is a quick test for the Iterator being empty, that works\n-    // for both ZST and non-ZST.\n+    /// For non-ZSTs, the non-null pointer to the past-the-end element.\n+    ///\n+    /// For ZSTs, this is `ptr.wrapping_byte_add(len)`.\n+    ///\n+    /// For all types, `ptr == end` tests whether the iterator is empty.\n+    end: *mut T,\n     _marker: PhantomData<&'a mut T>,\n }\n "}]}