{"sha": "3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZjgzMTA2OWE3YmIyNDlmMmNlNWJmYjhhYmVhYWMyMWEwZTkxODM=", "commit": {"author": {"name": "Ben Lewis", "email": "benlewisj@gmail.com", "date": "2020-01-04T00:42:02Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-17T09:01:23Z"}, "message": "Add lazy normalization tests", "tree": {"sha": "518eb45423e71917e12d7fd1f34c3958f85ac5ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/518eb45423e71917e12d7fd1f34c3958f85ac5ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "html_url": "https://github.com/rust-lang/rust/commit/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/comments", "author": {"login": "BenLewis-Seequent", "id": 7391596, "node_id": "MDQ6VXNlcjczOTE1OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7391596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenLewis-Seequent", "html_url": "https://github.com/BenLewis-Seequent", "followers_url": "https://api.github.com/users/BenLewis-Seequent/followers", "following_url": "https://api.github.com/users/BenLewis-Seequent/following{/other_user}", "gists_url": "https://api.github.com/users/BenLewis-Seequent/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenLewis-Seequent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenLewis-Seequent/subscriptions", "organizations_url": "https://api.github.com/users/BenLewis-Seequent/orgs", "repos_url": "https://api.github.com/users/BenLewis-Seequent/repos", "events_url": "https://api.github.com/users/BenLewis-Seequent/events{/privacy}", "received_events_url": "https://api.github.com/users/BenLewis-Seequent/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cfdd2178e999960358e15b8c36e89c13b4f21c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfdd2178e999960358e15b8c36e89c13b4f21c0", "html_url": "https://github.com/rust-lang/rust/commit/4cfdd2178e999960358e15b8c36e89c13b4f21c0"}], "stats": {"total": 170, "additions": 167, "deletions": 3}, "files": [{"sha": "35fb435b812a40c9d0a56a5425e6d13c294828ba", "filename": "src/test/ui/const-generics/issues/issue-61935.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.rs?ref=3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+trait Foo {}\n+\n+impl<const N: usize> Foo for [(); N]\n+    where\n+        Self:FooImpl<{N==0}>\n+{}\n+\n+trait FooImpl<const IS_ZERO: bool>{}\n+\n+impl FooImpl<true> for [(); 0] {}\n+\n+impl<const N:usize> FooImpl<false> for [();N] {}\n+\n+fn foo(_: impl Foo) {}\n+\n+fn main() {\n+    foo([]);\n+    foo([()]);\n+}"}, {"sha": "5ada50c344924b5ac5aa78e0faa74269916c0d3c", "filename": "src/test/ui/const-generics/issues/issue-61935.stderr", "status": "renamed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.stderr?ref=3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "patch": "@@ -1,11 +1,8 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-61336-1.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n-warning: 1 warning emitted\n-", "previous_filename": "src/test/ui/const-generics/issues/issue-61336-1.stderr"}, {"sha": "89e0b7f62da5d41dee4d5a6a9d8ea06f6e68efe6", "filename": "src/test/ui/const-generics/issues/issue-67185-1.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.rs?ref=3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "patch": "@@ -0,0 +1,32 @@\n+// check-pass\n+\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+trait Baz {\n+    type Quaks;\n+}\n+impl Baz for u8 {\n+    type Quaks = [u16; 3];\n+}\n+\n+trait Bar {}\n+impl Bar for [u16; 3] {}\n+impl Bar for [[u16; 3]; 2] {}\n+\n+trait Foo\n+    where\n+        [<u8 as Baz>::Quaks; 2]: Bar,\n+        <u8 as Baz>::Quaks: Bar,\n+{\n+}\n+\n+struct FooImpl;\n+\n+impl Foo for FooImpl {}\n+\n+fn f(_: impl Foo) {}\n+\n+fn main() {\n+    f(FooImpl)\n+}"}, {"sha": "01c09763314a9f22007742505b78da0651674d86", "filename": "src/test/ui/const-generics/issues/issue-67185-1.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.stderr?ref=3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "patch": "@@ -0,0 +1,8 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/issue-67185-1.rs:3:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+"}, {"sha": "af797721324e3a69fa762ba97ffd3b8423a015e7", "filename": "src/test/ui/const-generics/issues/issue-67185-2.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.rs?ref=3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "patch": "@@ -0,0 +1,34 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+trait Baz {\n+    type Quaks;\n+}\n+impl Baz for u8 {\n+    type Quaks = [u16; 3];\n+}\n+\n+trait Bar {}\n+impl Bar for [u16; 4] {}\n+impl Bar for [[u16; 3]; 3] {}\n+\n+trait Foo  //~ ERROR mismatched types\n+    where\n+        [<u8 as Baz>::Quaks; 2]: Bar,\n+        <u8 as Baz>::Quaks: Bar,\n+{\n+}\n+\n+struct FooImpl;\n+\n+impl Foo for FooImpl {}\n+//~^ ERROR mismatched types\n+//~^^ ERROR mismatched types\n+\n+fn f(_: impl Foo) {}\n+//~^ ERROR mismatched types\n+//~^^ ERROR mismatched types\n+\n+fn main() {\n+    f(FooImpl)\n+}"}, {"sha": "3a46d8fece88ff16e613434dbf68d3bf51b12ea1", "filename": "src/test/ui/const-generics/issues/issue-67185-2.stderr", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr?ref=3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "patch": "@@ -0,0 +1,61 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/issue-67185-2.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-67185-2.rs:15:1\n+   |\n+LL | / trait Foo\n+LL | |     where\n+LL | |         [<u8 as Baz>::Quaks; 2]: Bar,\n+LL | |         <u8 as Baz>::Quaks: Bar,\n+LL | | {\n+LL | | }\n+   | |_^ expected `3usize`, found `4usize`\n+   |\n+   = note: expected type `3usize`\n+              found type `4usize`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-67185-2.rs:24:6\n+   |\n+LL | impl Foo for FooImpl {}\n+   |      ^^^ expected `3usize`, found `4usize`\n+   |\n+   = note: expected type `3usize`\n+              found type `4usize`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-67185-2.rs:24:6\n+   |\n+LL | impl Foo for FooImpl {}\n+   |      ^^^ expected `2usize`, found `3usize`\n+   |\n+   = note: expected type `2usize`\n+              found type `3usize`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-67185-2.rs:28:1\n+   |\n+LL | fn f(_: impl Foo) {}\n+   | ^^^^^^^^^^^^^^^^^^^^ expected `2usize`, found `3usize`\n+   |\n+   = note: expected type `2usize`\n+              found type `3usize`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-67185-2.rs:28:1\n+   |\n+LL | fn f(_: impl Foo) {}\n+   | ^^^^^^^^^^^^^^^^^^^^ expected `3usize`, found `4usize`\n+   |\n+   = note: expected type `3usize`\n+              found type `4usize`\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "a07bf2a1a54989af7bf8f6a57593a389866cbeba", "filename": "src/test/ui/const-generics/lazy-normalization/issue-71986.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Fissue-71986.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef831069a7bb249f2ce5bfb8abeaac21a0e9183/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Fissue-71986.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Fissue-71986.rs?ref=3ef831069a7bb249f2ce5bfb8abeaac21a0e9183", "patch": "@@ -0,0 +1,8 @@\n+// check-pass\n+#![allow(incomplete_features)]\n+#![feature(const_generics, lazy_normalization_consts)]\n+\n+pub trait Foo<const B: bool> {}\n+pub fn bar<T: Foo<{ true }>>() {}\n+\n+fn main() {}"}]}