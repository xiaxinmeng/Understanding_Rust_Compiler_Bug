{"sha": "023e3a1deaff4e8780eb5eb5f660bf193cbe384d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyM2UzYTFkZWFmZjRlODc4MGViNWViNWY2NjBiZjE5M2NiZTM4NGQ=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-09-06T06:22:01Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-09-06T06:22:01Z"}, "message": "Highlight errors in macros", "tree": {"sha": "7c03a8b4c50ed6ab0d76da2bd5d08353343fa74e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c03a8b4c50ed6ab0d76da2bd5d08353343fa74e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/023e3a1deaff4e8780eb5eb5f660bf193cbe384d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/023e3a1deaff4e8780eb5eb5f660bf193cbe384d", "html_url": "https://github.com/rust-lang/rust/commit/023e3a1deaff4e8780eb5eb5f660bf193cbe384d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/023e3a1deaff4e8780eb5eb5f660bf193cbe384d/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0275b08d1521606fa733f76fe5d5707717456fb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0275b08d1521606fa733f76fe5d5707717456fb4", "html_url": "https://github.com/rust-lang/rust/commit/0275b08d1521606fa733f76fe5d5707717456fb4"}], "stats": {"total": 96, "additions": 89, "deletions": 7}, "files": [{"sha": "00e8da8a70c801bdf7a0fbcfb01dac5488391046", "filename": "crates/rust-analyzer/src/diagnostics/test_data/macro_compiler_error.txt", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/023e3a1deaff4e8780eb5eb5f660bf193cbe384d/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt", "raw_url": "https://github.com/rust-lang/rust/raw/023e3a1deaff4e8780eb5eb5f660bf193cbe384d/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt?ref=023e3a1deaff4e8780eb5eb5f660bf193cbe384d", "patch": "@@ -44,4 +44,49 @@\n         },\n         fixes: [],\n     },\n+    MappedRustDiagnostic {\n+        url: \"file:///test/crates/hir_def/src/path.rs\",\n+        diagnostic: Diagnostic {\n+            range: Range {\n+                start: Position {\n+                    line: 264,\n+                    character: 8,\n+                },\n+                end: Position {\n+                    line: 264,\n+                    character: 76,\n+                },\n+            },\n+            severity: Some(\n+                Error,\n+            ),\n+            code: None,\n+            source: Some(\n+                \"rustc\",\n+            ),\n+            message: \"Please register your known path in the path module\",\n+            related_information: Some(\n+                [\n+                    DiagnosticRelatedInformation {\n+                        location: Location {\n+                            uri: \"file:///test/crates/hir_def/src/data.rs\",\n+                            range: Range {\n+                                start: Position {\n+                                    line: 79,\n+                                    character: 15,\n+                                },\n+                                end: Position {\n+                                    line: 79,\n+                                    character: 41,\n+                                },\n+                            },\n+                        },\n+                        message: \"Exact error occured here\",\n+                    },\n+                ],\n+            ),\n+            tags: None,\n+        },\n+        fixes: [],\n+    },\n ]"}, {"sha": "33606edda4b0c03a75290ebe470cc9c27b32b7cd", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 44, "deletions": 7, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/023e3a1deaff4e8780eb5eb5f660bf193cbe384d/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/023e3a1deaff4e8780eb5eb5f660bf193cbe384d/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=023e3a1deaff4e8780eb5eb5f660bf193cbe384d", "patch": "@@ -225,12 +225,43 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n \n             // If error occurs from macro expansion, add related info pointing to\n             // where the error originated\n-            if !is_from_macro(&primary_span.file_name) && primary_span.expansion.is_some() {\n-                related_information.push(lsp_types::DiagnosticRelatedInformation {\n-                    location: location_naive(workspace_root, &primary_span),\n-                    message: \"Error originated from macro here\".to_string(),\n-                });\n-            }\n+            // Also, we would generate an additional diagnostic, so that exact place of macro\n+            // will be highlighted in the error origin place.\n+            let additional_diagnostic =\n+                if !is_from_macro(&primary_span.file_name) && primary_span.expansion.is_some() {\n+                    let in_macro_location = location_naive(workspace_root, &primary_span);\n+\n+                    // Add related information for the main disagnostic.\n+                    related_information.push(lsp_types::DiagnosticRelatedInformation {\n+                        location: in_macro_location.clone(),\n+                        message: \"Error originated from macro here\".to_string(),\n+                    });\n+\n+                    // For the additional in-macro diagnostic we add the inverse message pointing to the error location in code.\n+                    let information_for_additional_diagnostic =\n+                        vec![lsp_types::DiagnosticRelatedInformation {\n+                            location: location.clone(),\n+                            message: \"Exact error occured here\".to_string(),\n+                        }];\n+\n+                    let diagnostic = lsp_types::Diagnostic {\n+                        range: in_macro_location.range,\n+                        severity,\n+                        code: code.clone().map(lsp_types::NumberOrString::String),\n+                        source: Some(source.clone()),\n+                        message: message.clone(),\n+                        related_information: Some(information_for_additional_diagnostic),\n+                        tags: if tags.is_empty() { None } else { Some(tags.clone()) },\n+                    };\n+\n+                    Some(MappedRustDiagnostic {\n+                        url: in_macro_location.uri,\n+                        diagnostic,\n+                        fixes: fixes.clone(),\n+                    })\n+                } else {\n+                    None\n+                };\n \n             let diagnostic = lsp_types::Diagnostic {\n                 range: location.range,\n@@ -246,8 +277,14 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 tags: if tags.is_empty() { None } else { Some(tags.clone()) },\n             };\n \n-            MappedRustDiagnostic { url: location.uri, diagnostic, fixes: fixes.clone() }\n+            let main_diagnostic =\n+                MappedRustDiagnostic { url: location.uri, diagnostic, fixes: fixes.clone() };\n+            match additional_diagnostic {\n+                None => vec![main_diagnostic],\n+                Some(additional_diagnostic) => vec![main_diagnostic, additional_diagnostic],\n+            }\n         })\n+        .flatten()\n         .collect()\n }\n "}]}