{"sha": "a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZTcyMzllN2I1ZGIzYTk2ZmI2Yjg0YzQxZWNiY2VkNjRiMGFkMmU=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-07-07T11:50:49Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-07-14T11:57:46Z"}, "message": "Rename emit_struct->emit", "tree": {"sha": "a452e2194147ec387894ab5961690d08de3905a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a452e2194147ec387894ab5961690d08de3905a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e", "html_url": "https://github.com/rust-lang/rust/commit/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e/comments", "author": null, "committer": null, "parents": [{"sha": "55f06883b83bb652d7a8f036c15136abeb933048", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f06883b83bb652d7a8f036c15136abeb933048", "html_url": "https://github.com/rust-lang/rust/commit/55f06883b83bb652d7a8f036c15136abeb933048"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "697f9687b0a15bf47466b8fa12afbe17493a1a07", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e", "patch": "@@ -29,7 +29,7 @@ use term;\n /// implement `CoreEmitter` instead.\n pub trait Emitter {\n     /// Emit a structured diagnostic.\n-    fn emit_struct(&mut self, db: &DiagnosticBuilder);\n+    fn emit(&mut self, db: &DiagnosticBuilder);\n }\n \n pub trait CoreEmitter {\n@@ -43,7 +43,7 @@ pub trait CoreEmitter {\n }\n \n impl<T: CoreEmitter> Emitter for T {\n-    fn emit_struct(&mut self, db: &DiagnosticBuilder) {\n+    fn emit(&mut self, db: &DiagnosticBuilder) {\n         let old_school = check_old_skool();\n         let db_span = FullSpan(db.span.clone());\n         self.emit_message(&FullSpan(db.span.clone()),"}, {"sha": "7c14c132382e770984035967307987422445b3c9", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e", "patch": "@@ -238,7 +238,7 @@ impl<'a> DiagnosticBuilder<'a> {\n             return;\n         }\n \n-        self.handler.emit.borrow_mut().emit_struct(&self);\n+        self.handler.emitter.borrow_mut().emit(&self);\n         self.cancel();\n         self.handler.panic_if_treat_err_as_bug();\n \n@@ -420,7 +420,7 @@ impl<'a> Drop for DiagnosticBuilder<'a> {\n /// others log errors for later reporting.\n pub struct Handler {\n     err_count: Cell<usize>,\n-    emit: RefCell<Box<Emitter>>,\n+    emitter: RefCell<Box<Emitter>>,\n     pub can_emit_warnings: bool,\n     treat_err_as_bug: bool,\n     continue_after_error: Cell<bool>,\n@@ -444,7 +444,7 @@ impl Handler {\n                         e: Box<Emitter>) -> Handler {\n         Handler {\n             err_count: Cell::new(0),\n-            emit: RefCell::new(e),\n+            emitter: RefCell::new(e),\n             can_emit_warnings: can_emit_warnings,\n             treat_err_as_bug: treat_err_as_bug,\n             continue_after_error: Cell::new(true),"}, {"sha": "a40c30b3e3397fe61d6175a21e5ab9f56bd8bbad", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=a6e7239e7b5db3a96fb6b84c41ecbced64b0ad2e", "patch": "@@ -53,7 +53,7 @@ impl JsonEmitter {\n }\n \n impl Emitter for JsonEmitter {\n-    fn emit_struct(&mut self, db: &DiagnosticBuilder) {\n+    fn emit(&mut self, db: &DiagnosticBuilder) {\n         let data = Diagnostic::from_diagnostic_builder(db, self);\n         if let Err(e) = writeln!(&mut self.dst, \"{}\", as_json(&data)) {\n             panic!(\"failed to print diagnostics: {:?}\", e);"}]}