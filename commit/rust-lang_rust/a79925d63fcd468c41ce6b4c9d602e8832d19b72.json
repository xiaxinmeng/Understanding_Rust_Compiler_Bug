{"sha": "a79925d63fcd468c41ce6b4c9d602e8832d19b72", "node_id": "C_kwDOAAsO6NoAKGE3OTkyNWQ2M2ZjZDQ2OGM0MWNlNmI0YzlkNjAyZTg4MzJkMTliNzI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-18T11:04:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-18T11:04:22Z"}, "message": "Rollup merge of #109193 - spastorino:new-rpitit-11, r=compiler-errors\n\nAdd revisions for -Zlower-impl-trait-in-trait-to-assoc-ty fixed tests\n\nNeeds to go on top of #109198\n\nr? ``@compiler-errors``", "tree": {"sha": "876542be9ebdcee24ce504ff3378c98a6d120c65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/876542be9ebdcee24ce504ff3378c98a6d120c65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a79925d63fcd468c41ce6b4c9d602e8832d19b72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFZq2CRBK7hj4Ov3rIwAARf0IAEAIXB/9CI/Ooy4o4lMMYTah\n271NW+OERXp8FPfmn0EVdteEpPg+4sAiBKURTqWAAaNQbGeNym0e4F0Wk6j6qCep\nL2omxPo+zWbp415ncST44Rw5ZQ10q80MDoSh+cbi3IqojNf98B5vaysBQZV03tvx\nXSkGsK+hDGAId65lFDnHEMBNmaarxMkBFlewC7/phTqhWDTETLvdm2IxpZiOspFH\nuqPK9OHIvv1YsRvB7tFSNoBybvggebLQ8B22dZjoUUvEDXt4Kq9RzPHv2zUUTPgH\nTDehStjX7OVws2U2l/i9BOgC29wjyB8QKUjSoyoWHeI9ziGz1H7360WMQSMFSYI=\n=U3O8\n-----END PGP SIGNATURE-----\n", "payload": "tree 876542be9ebdcee24ce504ff3378c98a6d120c65\nparent 7ebf2cd2b8f1f8c11f9339ef337d336a91d6f7dc\nparent e0302bbc3bbecd172447f1105f586be3c35e043b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679137462 +0100\ncommitter GitHub <noreply@github.com> 1679137462 +0100\n\nRollup merge of #109193 - spastorino:new-rpitit-11, r=compiler-errors\n\nAdd revisions for -Zlower-impl-trait-in-trait-to-assoc-ty fixed tests\n\nNeeds to go on top of #109198\n\nr? ``@compiler-errors``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a79925d63fcd468c41ce6b4c9d602e8832d19b72", "html_url": "https://github.com/rust-lang/rust/commit/a79925d63fcd468c41ce6b4c9d602e8832d19b72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a79925d63fcd468c41ce6b4c9d602e8832d19b72/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ebf2cd2b8f1f8c11f9339ef337d336a91d6f7dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ebf2cd2b8f1f8c11f9339ef337d336a91d6f7dc", "html_url": "https://github.com/rust-lang/rust/commit/7ebf2cd2b8f1f8c11f9339ef337d336a91d6f7dc"}, {"sha": "e0302bbc3bbecd172447f1105f586be3c35e043b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0302bbc3bbecd172447f1105f586be3c35e043b", "html_url": "https://github.com/rust-lang/rust/commit/e0302bbc3bbecd172447f1105f586be3c35e043b"}], "stats": {"total": 359, "additions": 339, "deletions": 20}, "files": [{"sha": "7ccf2f2301d2404c1689c718d8837d9d60c2460e", "filename": "tests/ui/async-await/async-trait-fn.current.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fasync-trait-fn.current.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,42 @@\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:6:5\n+   |\n+LL |     async fn foo() {}\n+   |     -----^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:7:5\n+   |\n+LL |     async fn bar(&self) {}\n+   |     -----^^^^^^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:8:5\n+   |\n+LL |     async fn baz() {\n+   |     -----^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0706`."}, {"sha": "7ccf2f2301d2404c1689c718d8837d9d60c2460e", "filename": "tests/ui/async-await/async-trait-fn.next.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fasync-trait-fn.next.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,42 @@\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:6:5\n+   |\n+LL |     async fn foo() {}\n+   |     -----^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:7:5\n+   |\n+LL |     async fn bar(&self) {}\n+   |     -----^^^^^^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:8:5\n+   |\n+LL |     async fn baz() {\n+   |     -----^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0706`."}, {"sha": "04123badb5383f21353f74d56589d6e94ba61551", "filename": "tests/ui/async-await/async-trait-fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fasync-trait-fn.rs?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,4 +1,5 @@\n // edition:2018\n+\n trait T {\n     async fn foo() {} //~ ERROR functions in traits cannot be declared `async`\n     async fn bar(&self) {} //~ ERROR functions in traits cannot be declared `async`"}, {"sha": "68ebe3507ac35d2dbc0910212ff534e4d80ec4ef", "filename": "tests/ui/async-await/async-trait-fn.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fasync-trait-fn.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,5 +1,5 @@\n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/async-trait-fn.rs:3:5\n+  --> $DIR/async-trait-fn.rs:4:5\n    |\n LL |     async fn foo() {}\n    |     -----^^^^^^^^^\n@@ -12,7 +12,7 @@ LL |     async fn foo() {}\n    = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/async-trait-fn.rs:4:5\n+  --> $DIR/async-trait-fn.rs:5:5\n    |\n LL |     async fn bar(&self) {}\n    |     -----^^^^^^^^^^^^^^\n@@ -25,7 +25,7 @@ LL |     async fn bar(&self) {}\n    = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/async-trait-fn.rs:5:5\n+  --> $DIR/async-trait-fn.rs:6:5\n    |\n LL |     async fn baz() {\n    |     -----^^^^^^^^^"}, {"sha": "c47b99e657e1462fc1ba70d2a0564954415275c5", "filename": "tests/ui/async-await/edition-deny-async-fns-2015.current.stderr", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.current.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,5 +1,5 @@\n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:3:1\n+  --> $DIR/edition-deny-async-fns-2015.rs:5:1\n    |\n LL | async fn foo() {}\n    | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -8,7 +8,7 @@ LL | async fn foo() {}\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:5:12\n+  --> $DIR/edition-deny-async-fns-2015.rs:7:12\n    |\n LL | fn baz() { async fn foo() {} }\n    |            ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -17,7 +17,7 @@ LL | fn baz() { async fn foo() {} }\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:7:1\n+  --> $DIR/edition-deny-async-fns-2015.rs:9:1\n    |\n LL | async fn async_baz() {\n    | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -26,7 +26,7 @@ LL | async fn async_baz() {\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:8:5\n+  --> $DIR/edition-deny-async-fns-2015.rs:10:5\n    |\n LL |     async fn bar() {}\n    |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -35,7 +35,7 @@ LL |     async fn bar() {}\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:14:5\n+  --> $DIR/edition-deny-async-fns-2015.rs:16:5\n    |\n LL |     async fn foo() {}\n    |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -44,7 +44,7 @@ LL |     async fn foo() {}\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:18:5\n+  --> $DIR/edition-deny-async-fns-2015.rs:20:5\n    |\n LL |     async fn foo() {}\n    |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -53,7 +53,7 @@ LL |     async fn foo() {}\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:36:9\n+  --> $DIR/edition-deny-async-fns-2015.rs:38:9\n    |\n LL |         async fn bar() {}\n    |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -62,7 +62,7 @@ LL |         async fn bar() {}\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:26:9\n+  --> $DIR/edition-deny-async-fns-2015.rs:28:9\n    |\n LL |         async fn foo() {}\n    |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -71,7 +71,7 @@ LL |         async fn foo() {}\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n-  --> $DIR/edition-deny-async-fns-2015.rs:31:13\n+  --> $DIR/edition-deny-async-fns-2015.rs:33:13\n    |\n LL |             async fn bar() {}\n    |             ^^^^^ to use `async fn`, switch to Rust 2018 or later\n@@ -80,7 +80,7 @@ LL |             async fn bar() {}\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/edition-deny-async-fns-2015.rs:18:5\n+  --> $DIR/edition-deny-async-fns-2015.rs:20:5\n    |\n LL |     async fn foo() {}\n    |     -----^^^^^^^^^", "previous_filename": "tests/ui/async-await/edition-deny-async-fns-2015.stderr"}, {"sha": "c47b99e657e1462fc1ba70d2a0564954415275c5", "filename": "tests/ui/async-await/edition-deny-async-fns-2015.next.stderr", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.next.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,98 @@\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:5:1\n+   |\n+LL | async fn foo() {}\n+   | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:7:12\n+   |\n+LL | fn baz() { async fn foo() {} }\n+   |            ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:9:1\n+   |\n+LL | async fn async_baz() {\n+   | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:10:5\n+   |\n+LL |     async fn bar() {}\n+   |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:16:5\n+   |\n+LL |     async fn foo() {}\n+   |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:20:5\n+   |\n+LL |     async fn foo() {}\n+   |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:38:9\n+   |\n+LL |         async fn bar() {}\n+   |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:28:9\n+   |\n+LL |         async fn foo() {}\n+   |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0670]: `async fn` is not permitted in Rust 2015\n+  --> $DIR/edition-deny-async-fns-2015.rs:33:13\n+   |\n+LL |             async fn bar() {}\n+   |             ^^^^^ to use `async fn`, switch to Rust 2018 or later\n+   |\n+   = help: pass `--edition 2021` to `rustc`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/edition-deny-async-fns-2015.rs:20:5\n+   |\n+LL |     async fn foo() {}\n+   |     -----^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error: aborting due to 10 previous errors\n+\n+Some errors have detailed explanations: E0670, E0706.\n+For more information about an error, try `rustc --explain E0670`."}, {"sha": "d4c30dc9d828d9dbf86fb45b3f663410a7496f9b", "filename": "tests/ui/async-await/edition-deny-async-fns-2015.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,4 +1,6 @@\n // edition:2015\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n async fn foo() {} //~ ERROR `async fn` is not permitted in Rust 2015\n "}, {"sha": "be23384e049da851cc674be2a4c73ecd814b1755", "filename": "tests/ui/async-await/in-trait/generics-mismatch.current.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.current.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,16 @@\n+error[E0053]: method `foo` has an incompatible generic parameter for trait `Foo`\n+  --> $DIR/generics-mismatch.rs:13:18\n+   |\n+LL | trait Foo {\n+   |       ---\n+LL |     async fn foo<T>();\n+   |                  - expected type parameter\n+...\n+LL | impl Foo for () {\n+   | ---------------\n+LL |     async fn foo<const N: usize>() {}\n+   |                  ^^^^^^^^^^^^^^ found const parameter of type `usize`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0053`."}, {"sha": "be23384e049da851cc674be2a4c73ecd814b1755", "filename": "tests/ui/async-await/in-trait/generics-mismatch.next.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.next.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,16 @@\n+error[E0053]: method `foo` has an incompatible generic parameter for trait `Foo`\n+  --> $DIR/generics-mismatch.rs:13:18\n+   |\n+LL | trait Foo {\n+   |       ---\n+LL |     async fn foo<T>();\n+   |                  - expected type parameter\n+...\n+LL | impl Foo for () {\n+   | ---------------\n+LL |     async fn foo<const N: usize>() {}\n+   |                  ^^^^^^^^^^^^^^ found const parameter of type `usize`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0053`."}, {"sha": "fc29783c0e32e820570e090c4e2902932f0df62e", "filename": "tests/ui/async-await/in-trait/generics-mismatch.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.rs?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,15 @@\n+// edition: 2021\n+\n+#![feature(async_fn_in_trait)]\n+#![allow(incomplete_features)]\n+\n+trait Foo {\n+    async fn foo<T>();\n+}\n+\n+impl Foo for () {\n+    async fn foo<const N: usize>() {}\n+    //~^ ERROR: method `foo` has an incompatible generic parameter for trait `Foo` [E0053]\n+}\n+\n+fn main() {}"}, {"sha": "3518aa05cecc2f786d68cb2007defcc2910c01b5", "filename": "tests/ui/async-await/in-trait/generics-mismatch.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Fgenerics-mismatch.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,16 @@\n+error[E0053]: method `foo` has an incompatible generic parameter for trait `Foo`\n+  --> $DIR/generics-mismatch.rs:11:18\n+   |\n+LL | trait Foo {\n+   |       ---\n+LL |     async fn foo<T>();\n+   |                  - expected type parameter\n+...\n+LL | impl Foo for () {\n+   | ---------------\n+LL |     async fn foo<const N: usize>() {}\n+   |                  ^^^^^^^^^^^^^^ found const parameter of type `usize`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0053`."}, {"sha": "a5efc757156567589331d7541917d17fc52d7b59", "filename": "tests/ui/async-await/in-trait/return-type-suggestion.current.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.current.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/return-type-suggestion.rs:3:12\n+  --> $DIR/return-type-suggestion.rs:5:12\n    |\n LL | #![feature(async_fn_in_trait)]\n    |            ^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![feature(async_fn_in_trait)]\n    = note: `#[warn(incomplete_features)]` on by default\n \n error[E0308]: mismatched types\n-  --> $DIR/return-type-suggestion.rs:8:9\n+  --> $DIR/return-type-suggestion.rs:10:9\n    |\n LL |         Ok(())\n    |         ^^^^^^- help: consider using a semicolon here: `;`", "previous_filename": "tests/ui/async-await/in-trait/return-type-suggestion.stderr"}, {"sha": "a5efc757156567589331d7541917d17fc52d7b59", "filename": "tests/ui/async-await/in-trait/return-type-suggestion.next.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.next.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,23 @@\n+warning: the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/return-type-suggestion.rs:5:12\n+   |\n+LL | #![feature(async_fn_in_trait)]\n+   |            ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0308]: mismatched types\n+  --> $DIR/return-type-suggestion.rs:10:9\n+   |\n+LL |         Ok(())\n+   |         ^^^^^^- help: consider using a semicolon here: `;`\n+   |         |\n+   |         expected `()`, found `Result<(), _>`\n+   |\n+   = note: expected unit type `()`\n+                   found enum `Result<(), _>`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "3de66306d9ab89f455a85792385d73212a0ba8b5", "filename": "tests/ui/async-await/in-trait/return-type-suggestion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.rs?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,4 +1,6 @@\n // edition: 2021\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(async_fn_in_trait)]\n //~^ WARN the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes"}, {"sha": "3c24eff9ae3016400f655e8e1b1f37e2a0a78a08", "filename": "tests/ui/impl-trait/in-trait/default-body-with-rpit.current.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.current.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,11 +1,11 @@\n error: concrete type differs from previous defining opaque type use\n-  --> $DIR/default-body-with-rpit.rs:11:9\n+  --> $DIR/default-body-with-rpit.rs:13:9\n    |\n LL |         \"\"\n    |         ^^ expected `impl Debug`, got `&'static str`\n    |\n note: previous use here\n-  --> $DIR/default-body-with-rpit.rs:10:39\n+  --> $DIR/default-body-with-rpit.rs:12:39\n    |\n LL |       async fn baz(&self) -> impl Debug {\n    |  _______________________________________^\n@@ -14,7 +14,7 @@ LL | |     }\n    | |_____^\n \n error[E0720]: cannot resolve opaque type\n-  --> $DIR/default-body-with-rpit.rs:10:28\n+  --> $DIR/default-body-with-rpit.rs:12:28\n    |\n LL |     async fn baz(&self) -> impl Debug {\n    |                            ^^^^^^^^^^ cannot resolve opaque type", "previous_filename": "tests/ui/impl-trait/in-trait/default-body-with-rpit.stderr"}, {"sha": "3c24eff9ae3016400f655e8e1b1f37e2a0a78a08", "filename": "tests/ui/impl-trait/in-trait/default-body-with-rpit.next.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.next.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,24 @@\n+error: concrete type differs from previous defining opaque type use\n+  --> $DIR/default-body-with-rpit.rs:13:9\n+   |\n+LL |         \"\"\n+   |         ^^ expected `impl Debug`, got `&'static str`\n+   |\n+note: previous use here\n+  --> $DIR/default-body-with-rpit.rs:12:39\n+   |\n+LL |       async fn baz(&self) -> impl Debug {\n+   |  _______________________________________^\n+LL | |         \"\"\n+LL | |     }\n+   | |_____^\n+\n+error[E0720]: cannot resolve opaque type\n+  --> $DIR/default-body-with-rpit.rs:12:28\n+   |\n+LL |     async fn baz(&self) -> impl Debug {\n+   |                            ^^^^^^^^^^ cannot resolve opaque type\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0720`."}, {"sha": "6bcc7b9ef95f0a40ae6f21fe31f225089040d964", "filename": "tests/ui/impl-trait/in-trait/default-body-with-rpit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.rs?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,5 +1,7 @@\n // edition:2021\n // known-bug: #108304\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(async_fn_in_trait, return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]"}, {"sha": "653016cf009a9dc2284ba72e6e501ce328f5438a", "filename": "tests/ui/impl-trait/in-trait/doesnt-satisfy.current.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.current.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,13 +1,13 @@\n error[E0277]: `()` doesn't implement `std::fmt::Display`\n-  --> $DIR/doesnt-satisfy.rs:9:17\n+  --> $DIR/doesnt-satisfy.rs:12:17\n    |\n LL |     fn bar() -> () {}\n    |                 ^^ `()` cannot be formatted with the default formatter\n    |\n    = help: the trait `std::fmt::Display` is not implemented for `()`\n    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n note: required by a bound in `Foo::bar::{opaque#0}`\n-  --> $DIR/doesnt-satisfy.rs:5:22\n+  --> $DIR/doesnt-satisfy.rs:8:22\n    |\n LL |     fn bar() -> impl std::fmt::Display;\n    |                      ^^^^^^^^^^^^^^^^^ required by this bound in `Foo::bar::{opaque#0}`", "previous_filename": "tests/ui/impl-trait/in-trait/doesnt-satisfy.stderr"}, {"sha": "bbfa089ceef92157f6ec000e09ee22b3485df943", "filename": "tests/ui/impl-trait/in-trait/doesnt-satisfy.next.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.next.stderr?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -0,0 +1,17 @@\n+error[E0277]: `()` doesn't implement `std::fmt::Display`\n+  --> $DIR/doesnt-satisfy.rs:12:17\n+   |\n+LL |     fn bar() -> () {}\n+   |                 ^^ `()` cannot be formatted with the default formatter\n+   |\n+   = help: the trait `std::fmt::Display` is not implemented for `()`\n+   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n+note: required by a bound in `Foo::{opaque#0}`\n+  --> $DIR/doesnt-satisfy.rs:8:22\n+   |\n+LL |     fn bar() -> impl std::fmt::Display;\n+   |                      ^^^^^^^^^^^^^^^^^ required by this bound in `Foo::`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "fcd0b51eea4fc29361b4eda7621a07fe7caaa24f", "filename": "tests/ui/impl-trait/in-trait/doesnt-satisfy.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79925d63fcd468c41ce6b4c9d602e8832d19b72/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdoesnt-satisfy.rs?ref=a79925d63fcd468c41ce6b4c9d602e8832d19b72", "patch": "@@ -1,3 +1,6 @@\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n+\n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]\n "}]}