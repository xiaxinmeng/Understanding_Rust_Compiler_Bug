{"sha": "93a8283614e995a0cf7a866356609b7522cfda24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYTgyODM2MTRlOTk1YTBjZjdhODY2MzU2NjA5Yjc1MjJjZmRhMjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T12:15:20Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-01T17:54:56Z"}, "message": "Move builtin attribute logic to new rustc_attr crate.\n\nFor now, this is all the crate contains, but more\nattribute logic & types will be moved there over time.", "tree": {"sha": "6397f332880b5a73af9eec5cb3757e442a61ff90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6397f332880b5a73af9eec5cb3757e442a61ff90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93a8283614e995a0cf7a866356609b7522cfda24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93a8283614e995a0cf7a866356609b7522cfda24", "html_url": "https://github.com/rust-lang/rust/commit/93a8283614e995a0cf7a866356609b7522cfda24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93a8283614e995a0cf7a866356609b7522cfda24/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9be73dc63a63bc8692423bdac073c591dff80ccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9be73dc63a63bc8692423bdac073c591dff80ccd", "html_url": "https://github.com/rust-lang/rust/commit/9be73dc63a63bc8692423bdac073c591dff80ccd"}], "stats": {"total": 186, "additions": 133, "deletions": 53}, "files": [{"sha": "55f7a8357b70534fc17897ef8a466571dae44ff3", "filename": "Cargo.lock", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -3093,6 +3093,7 @@ dependencies = [\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n  \"rustc_apfloat\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -3374,6 +3375,7 @@ name = \"rustc_ast_passes\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -3383,12 +3385,28 @@ dependencies = [\n  \"syntax\",\n ]\n \n+[[package]]\n+name = \"rustc_attr\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"rustc_data_structures\",\n+ \"rustc_errors\",\n+ \"rustc_feature\",\n+ \"rustc_macros\",\n+ \"rustc_session\",\n+ \"rustc_span\",\n+ \"serialize\",\n+ \"smallvec 1.0.0\",\n+ \"syntax\",\n+]\n+\n [[package]]\n name = \"rustc_builtin_macros\"\n version = \"0.0.0\"\n dependencies = [\n  \"fmt_macros\",\n  \"log\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n@@ -3411,6 +3429,7 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc-demangle\",\n+ \"rustc_attr\",\n  \"rustc_codegen_ssa\",\n  \"rustc_codegen_utils\",\n  \"rustc_data_structures\",\n@@ -3442,6 +3461,7 @@ dependencies = [\n  \"num_cpus\",\n  \"rustc\",\n  \"rustc_apfloat\",\n+ \"rustc_attr\",\n  \"rustc_codegen_utils\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3552,6 +3572,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc_ast_passes\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -3628,6 +3649,7 @@ dependencies = [\n  \"rustc-rayon\",\n  \"rustc_ast_lowering\",\n  \"rustc_ast_passes\",\n+ \"rustc_attr\",\n  \"rustc_builtin_macros\",\n  \"rustc_codegen_llvm\",\n  \"rustc_codegen_ssa\",\n@@ -3672,6 +3694,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -3712,6 +3735,7 @@ dependencies = [\n  \"log\",\n  \"memmap\",\n  \"rustc\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n@@ -3739,6 +3763,7 @@ dependencies = [\n  \"polonius-engine\",\n  \"rustc\",\n  \"rustc_apfloat\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n@@ -3761,6 +3786,7 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_apfloat\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n@@ -3780,6 +3806,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"bitflags\",\n  \"log\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -3797,6 +3824,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -3827,6 +3855,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n@@ -3844,6 +3873,7 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_ast_lowering\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n@@ -3961,6 +3991,7 @@ dependencies = [\n  \"arena\",\n  \"log\",\n  \"rustc\",\n+ \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\","}, {"sha": "782c6879ac58fd6945bd2e6c921d13c3f4ca16e5", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -21,6 +21,7 @@ rustc-rayon = \"0.3.0\"\n rustc-rayon-core = \"0.3.0\"\n polonius-engine = \"0.11.0\"\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_target = { path = \"../librustc_target\" }"}, {"sha": "061b82ebb430ebe63bc72ef5b1c95278918607c2", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -3,12 +3,12 @@\n \n use crate::hir::map::DefPathHash;\n use crate::ich::{Fingerprint, NodeIdHashingMode, StableHashingContext};\n+use rustc_attr as attr;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHashKey};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_INDEX};\n use smallvec::SmallVec;\n use std::mem;\n-use syntax::attr;\n \n impl<'ctx> rustc_hir::HashStableContext for StableHashingContext<'ctx> {\n     #[inline]"}, {"sha": "9f8c20208616b3d2d4052853a6405d99a14664cc", "filename": "src/librustc/middle/codegen_fn_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fmiddle%2Fcodegen_fn_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fmiddle%2Fcodegen_fn_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcodegen_fn_attrs.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1,6 +1,6 @@\n use crate::mir::mono::Linkage;\n+use rustc_attr::{InlineAttr, OptimizeAttr};\n use rustc_span::symbol::Symbol;\n-use syntax::attr::{InlineAttr, OptimizeAttr};\n \n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n pub struct CodegenFnAttrs {"}, {"sha": "752b0945e71cfc61925f1ec144707a9b49ad49a6", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -5,6 +5,7 @@ pub use self::StabilityLevel::*;\n \n use crate::session::{DiagnosticMessageId, Session};\n use crate::ty::{self, TyCtxt};\n+use rustc_attr::{self as attr, ConstStability, Deprecation, RustcDeprecation, Stability};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_feature::GateIssue;\n@@ -16,7 +17,6 @@ use rustc_session::lint::{self, BuiltinLintDiagnostics, Lint, LintBuffer};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::CRATE_NODE_ID;\n-use syntax::attr::{self, ConstStability, Deprecation, RustcDeprecation, Stability};\n use syntax::sess::feature_err_issue;\n \n use std::num::NonZeroU32;"}, {"sha": "6da7c09c7df9efbbb1698bd413cfaa08548ed300", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -3,6 +3,7 @@ use crate::ich::{Fingerprint, NodeIdHashingMode, StableHashingContext};\n use crate::session::config::OptLevel;\n use crate::ty::print::obsolete::DefPathBasedNames;\n use crate::ty::{subst::InternalSubsts, Instance, InstanceDef, SymbolName, TyCtxt};\n+use rustc_attr::InlineAttr;\n use rustc_data_structures::base_n;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n@@ -12,7 +13,6 @@ use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n use std::fmt;\n use std::hash::Hash;\n-use syntax::attr::InlineAttr;\n \n /// Describes how a monomorphization will be instantiated in object files.\n #[derive(PartialEq)]"}, {"sha": "ca824d40e381ac0187cbdc1131e1bc7d0800f503", "filename": "src/librustc/traits/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -3,13 +3,13 @@ use fmt_macros::{Parser, Piece, Position};\n use crate::ty::{self, GenericParamDefKind, TyCtxt};\n use crate::util::common::ErrorReported;\n \n+use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{MetaItem, NestedMetaItem};\n-use syntax::attr;\n \n #[derive(Clone, Debug)]\n pub struct OnUnimplementedFormatString(Symbol);"}, {"sha": "8d0b7756565763a11a905ecfd5b45dcf9ff85336", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -51,6 +51,7 @@ use rustc_session::config::CrateType;\n use rustc_session::config::{BorrowckMode, OutputFilenames};\n use rustc_session::Session;\n \n+use rustc_attr as attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::profiling::SelfProfilerRef;\n use rustc_data_structures::sharded::{IntoPointer, ShardedHashMap};\n@@ -79,7 +80,6 @@ use std::mem;\n use std::ops::{Bound, Deref};\n use std::sync::Arc;\n use syntax::ast;\n-use syntax::attr;\n use syntax::expand::allocator::AllocatorKind;\n \n type InternedSet<'tcx, T> = ShardedHashMap<Interned<'tcx, T>, ()>;"}, {"sha": "bda42db40b0aea4c78757eacf98f17b672301af0", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1,9 +1,9 @@\n use crate::session::{self, DataTypeKind};\n use crate::ty::{self, subst::SubstsRef, ReprOptions, Ty, TyCtxt, TypeFoldable};\n \n+use rustc_attr as attr;\n use rustc_span::DUMMY_SP;\n use syntax::ast::{self, Ident, IntTy, UintTy};\n-use syntax::attr;\n \n use std::cmp;\n use std::fmt;"}, {"sha": "24b22d3f6821c7683ce5c2cce0f158ecd546ee60", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -26,6 +26,7 @@ use crate::ty::layout::VariantIdx;\n use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::{Discr, IntTypeExt};\n use crate::ty::walk::TypeWalker;\n+use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::fx::FxIndexMap;\n@@ -53,7 +54,6 @@ use std::ops::Range;\n use std::slice;\n use std::{mem, ptr};\n use syntax::ast::{self, Constness, Ident, Name, NodeId};\n-use syntax::attr;\n \n pub use self::sty::BoundRegion::*;\n pub use self::sty::InferTy::*;"}, {"sha": "f5c14e73db2bc3b4003dcaa1e84f2e0b081e6c51", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -11,10 +11,10 @@ use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n \n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n+use rustc_attr::{SignedInt, UnsignedInt};\n use rustc_span::symbol::{kw, Symbol};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n-use syntax::attr::{SignedInt, UnsignedInt};\n \n use std::cell::Cell;\n use std::collections::BTreeMap;"}, {"sha": "973cd81014616ffd112f9c9f3e48a766597aca59", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -49,14 +49,14 @@ use rustc_hir::{HirIdSet, ItemLocalId, TraitCandidate};\n use rustc_index::vec::IndexVec;\n use rustc_target::spec::PanicStrategy;\n \n+use rustc_attr as attr;\n use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n use std::any::type_name;\n use std::borrow::Cow;\n use std::ops::Deref;\n use std::sync::Arc;\n use syntax::ast;\n-use syntax::attr;\n \n #[macro_use]\n mod plumbing;"}, {"sha": "4dfff85d531477aaa54e71a1dd11f73fde3377aa", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -10,6 +10,7 @@ use crate::ty::TyKind::*;\n use crate::ty::{self, DefIdTree, GenericParamDefKind, Ty, TyCtxt, TypeFoldable};\n use crate::util::common::ErrorReported;\n use rustc_apfloat::Float as _;\n+use rustc_attr::{self as attr, SignedInt, UnsignedInt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir as hir;\n@@ -19,7 +20,6 @@ use rustc_macros::HashStable;\n use rustc_span::Span;\n use std::{cmp, fmt};\n use syntax::ast;\n-use syntax::attr::{self, SignedInt, UnsignedInt};\n \n #[derive(Copy, Clone, Debug)]\n pub struct Discr<'tcx> {"}, {"sha": "2b25f04ce9acada2d4ce8e7d2c6fb46a4fbf149b", "filename": "src/librustc_ast_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_ast_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_ast_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -10,6 +10,7 @@ path = \"lib.rs\"\n \n [dependencies]\n log = \"0.4\"\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "c6ea97be583ba8c0dbf8d37aa399488b02edc219", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -331,7 +331,7 @@ impl<'a> AstValidator<'a> {\n             .flat_map(|i| i.attrs.as_ref())\n             .filter(|attr| {\n                 let arr = [sym::allow, sym::cfg, sym::cfg_attr, sym::deny, sym::forbid, sym::warn];\n-                !arr.contains(&attr.name_or_empty()) && attr::is_builtin_attr(attr)\n+                !arr.contains(&attr.name_or_empty()) && rustc_attr::is_builtin_attr(attr)\n             })\n             .for_each(|attr| {\n                 if attr.is_doc_comment() {"}, {"sha": "acb93e1d64070ba9945417af1f81f84783e8fb0c", "filename": "src/librustc_attr/Cargo.toml", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_attr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_attr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -0,0 +1,21 @@\n+[package]\n+authors = [\"The Rust Project Developers\"]\n+name = \"rustc_attr\"\n+version = \"0.0.0\"\n+edition = \"2018\"\n+\n+[lib]\n+name = \"rustc_attr\"\n+path = \"lib.rs\"\n+doctest = false\n+\n+[dependencies]\n+rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n+rustc_errors = { path = \"../librustc_errors\" }\n+rustc_span = { path = \"../librustc_span\" }\n+rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_feature = { path = \"../librustc_feature\" }\n+rustc_macros = { path = \"../librustc_macros\" }\n+smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n+rustc_session = { path = \"../librustc_session\" }\n+syntax = { path = \"../libsyntax\" }"}, {"sha": "f13f19073ea3c788a6b842ef64a923ba4ad2f606", "filename": "src/librustc_attr/builtin.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_attr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_attr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Fbuiltin.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1,16 +1,16 @@\n //! Parsing and validation of builtin attributes\n \n-use super::{mark_used, MetaItemKind};\n-use crate::ast::{self, Attribute, MetaItem, NestedMetaItem};\n-use crate::print::pprust;\n-use crate::sess::{feature_err, ParseSess};\n+use super::mark_used;\n \n use rustc_errors::{struct_span_err, Applicability, Handler};\n use rustc_feature::{find_gated_cfg, is_builtin_attr_name, Features, GatedCfg};\n use rustc_macros::HashStable_Generic;\n+use rustc_session::parse::{feature_err, ParseSess};\n use rustc_span::hygiene::Transparency;\n use rustc_span::{symbol::sym, symbol::Symbol, Span};\n use std::num::NonZeroU32;\n+use syntax::ast::{self, Attribute, MetaItem, MetaItemKind, NestedMetaItem};\n+use syntax::print::pprust;\n \n pub fn is_builtin_attr(attr: &Attribute) -> bool {\n     attr.is_doc_comment() || attr.ident().filter(|ident| is_builtin_attr_name(ident.name)).is_some()", "previous_filename": "src/libsyntax/attr/builtin.rs"}, {"sha": "d2ff167db88e5664474e9e02a7ebc18e18831794", "filename": "src/librustc_attr/lib.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_attr%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_attr%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Flib.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -0,0 +1,16 @@\n+//! Functions and types dealing with attributes and meta items.\n+//!\n+//! FIXME(Centril): For now being, much of the logic is still in `syntax::attr`.\n+//! The goal is to move the definition of `MetaItem` and things that don't need to be in `syntax`\n+//! to this crate.\n+\n+mod builtin;\n+\n+pub use builtin::*;\n+pub use IntType::*;\n+pub use ReprAttr::*;\n+pub use StabilityLevel::*;\n+\n+pub use syntax::attr::*;\n+\n+pub(crate) use syntax::HashStableContext;"}, {"sha": "d0558a50acf6435eea2ff3bb32f4ed4e9592fd36", "filename": "src/librustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -12,6 +12,7 @@ doctest = false\n [dependencies]\n fmt_macros = { path = \"../libfmt_macros\" }\n log = \"0.4\"\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "c9a77ee0acd152b7ce5bb43d58f75f15afad6ab0", "filename": "src/librustc_builtin_macros/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_builtin_macros%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_builtin_macros%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fcfg.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -2,11 +2,11 @@\n //! a literal `true` or `false` based on whether the given cfg matches the\n //! current compilation environment.\n \n+use rustc_attr as attr;\n use rustc_errors::DiagnosticBuilder;\n use rustc_expand::base::{self, *};\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::attr;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "d0208cb33a79e9b1750020e7a7754732fc497bd6", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -181,13 +181,13 @@ use std::cell::RefCell;\n use std::iter;\n use std::vec;\n \n+use rustc_attr as attr;\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::source_map::respan;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, BinOpKind, EnumDef, Expr, Generics, Ident, PatKind};\n use syntax::ast::{GenericArg, GenericParamKind, VariantData};\n-use syntax::attr;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::util::map_in_place::MapInPlace;"}, {"sha": "e7c0ee5ea763ea2d330810beb6c14271a5cf0ab6", "filename": "src/librustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -17,6 +17,7 @@ libc = \"0.2\"\n log = \"0.4\"\n rustc = { path = \"../librustc\" }\n rustc-demangle = \"0.1\"\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_codegen_ssa = { path = \"../librustc_codegen_ssa\" }\n rustc_codegen_utils = { path = \"../librustc_codegen_utils\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "e3920d99c90bc644f5b5364428119f9b9b05b94c", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -21,7 +21,7 @@ use crate::attributes;\n use crate::llvm::AttributePlace::Function;\n use crate::llvm::{self, Attribute};\n use crate::llvm_util;\n-pub use syntax::attr::{self, InlineAttr, OptimizeAttr};\n+pub use rustc_attr::{self as attr, InlineAttr, OptimizeAttr};\n \n use crate::context::CodegenCx;\n use crate::value::Value;"}, {"sha": "8d767e5c2a04f46be4652a1164b4f11d6ccb02b4", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -24,6 +24,7 @@ syntax = { path = \"../libsyntax\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc = { path = \"../librustc\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_codegen_utils = { path = \"../librustc_codegen_utils\" }\n rustc_data_structures = { path = \"../librustc_data_structures\"}\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "71920020091972c4b583a46de15f1cf1078e704d", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1719,7 +1719,7 @@ pub fn add_upstream_native_libraries(\n \n pub fn relevant_lib(sess: &Session, lib: &NativeLibrary) -> bool {\n     match lib.cfg {\n-        Some(ref cfg) => syntax::attr::cfg_matches(cfg, &sess.parse_sess, None),\n+        Some(ref cfg) => rustc_attr::cfg_matches(cfg, &sess.parse_sess, None),\n         None => true,\n     }\n }"}, {"sha": "1f43a4027c5ffe34977c32828aca66ba0403d004", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -37,6 +37,7 @@ use rustc::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyLayout, VariantIdx};\n use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n use rustc::ty::query::Providers;\n use rustc::ty::{self, Instance, Ty, TyCtxt};\n+use rustc_attr as attr;\n use rustc_codegen_utils::{check_for_rustc_errors_attr, symbol_names_test};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::print_time_passes_entry;\n@@ -46,7 +47,6 @@ use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_index::vec::Idx;\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_span::Span;\n-use syntax::attr;\n \n use std::cmp;\n use std::ops::{Deref, DerefMut};"}, {"sha": "1310e7fbd095f4431a3b157acaf01ddba5ae123a", "filename": "src/librustc_expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -15,6 +15,7 @@ rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n log = \"0.4\"\n rustc_span = { path = \"../librustc_span\" }\n rustc_ast_passes = { path = \"../librustc_ast_passes\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "52e5798ec194cff90733fe2560ac8178a320a7ae", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1,5 +1,6 @@\n use crate::expand::{self, AstFragment, Invocation};\n \n+use rustc_attr::{self as attr, Deprecation, HasAttrs, Stability};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{self, Lrc};\n use rustc_errors::{DiagnosticBuilder, DiagnosticId};\n@@ -11,7 +12,6 @@ use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{FileName, MultiSpan, Span, DUMMY_SP};\n use smallvec::{smallvec, SmallVec};\n use syntax::ast::{self, Attribute, Name, NodeId, PatKind};\n-use syntax::attr::{self, Deprecation, HasAttrs, Stability};\n use syntax::mut_visit::{self, MutVisitor};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;"}, {"sha": "35b6b96d49b397cd8469ffa7ff506d08e20372cc", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -5,6 +5,7 @@ use crate::mbe::macro_rules::annotate_err_with_kind;\n use crate::placeholders::{placeholder, PlaceholderExpander};\n use crate::proc_macro::collect_derives;\n \n+use rustc_attr::{self as attr, is_builtin_attr, HasAttrs};\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Applicability, FatalError, PResult};\n use rustc_feature::Features;\n@@ -17,7 +18,6 @@ use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{FileName, Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Block, Ident, LitKind, NodeId, PatKind, Path};\n use syntax::ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n-use syntax::attr::{self, is_builtin_attr, HasAttrs};\n use syntax::mut_visit::*;\n use syntax::print::pprust;\n use syntax::ptr::P;"}, {"sha": "3dbe8e7983c3db2d5afad7650b39bd6e4549dd87", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -8,6 +8,7 @@ use crate::mbe::macro_parser::{Error, Failure, Success};\n use crate::mbe::macro_parser::{MatchedNonterminal, MatchedSeq, NamedParseResult};\n use crate::mbe::transcribe::transcribe;\n \n+use rustc_attr::{self as attr, TransparencyError};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Applicability, DiagnosticBuilder, FatalError};\n@@ -19,7 +20,6 @@ use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::attr::{self, TransparencyError};\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n use syntax::token::{self, NtTT, Token, TokenKind::*};"}, {"sha": "de7a9f4f5af1c754ed3d95e6676c0ccb2b6d39c9", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -14,6 +14,7 @@ log = \"0.4\"\n rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n syntax = { path = \"../libsyntax\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_builtin_macros = { path = \"../librustc_builtin_macros\" }\n rustc_expand = { path = \"../librustc_expand\" }\n rustc_parse = { path = \"../librustc_parse\" }"}, {"sha": "56121fba2d53a11e16a9f0ca8a30a176079ba361", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -32,7 +32,7 @@ use syntax::ast::{AttrVec, BlockCheckMode};\n use syntax::mut_visit::{visit_clobber, MutVisitor, *};\n use syntax::ptr::P;\n use syntax::util::lev_distance::find_best_match_for_name;\n-use syntax::{self, ast, attr};\n+use syntax::{self, ast};\n \n /// Adds `target_feature = \"...\"` cfgs for a variety of platform\n /// specific features (SSE, NEON etc.).\n@@ -547,7 +547,7 @@ pub fn build_output_filenames(\n                 .opts\n                 .crate_name\n                 .clone()\n-                .or_else(|| attr::find_crate_name(attrs).map(|n| n.to_string()))\n+                .or_else(|| rustc_attr::find_crate_name(attrs).map(|n| n.to_string()))\n                 .unwrap_or_else(|| input.filestem().to_owned());\n \n             OutputFilenames::new("}, {"sha": "d32622c09c6237e26fc140f83e202ce3059d9dca", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -12,6 +12,7 @@ path = \"lib.rs\"\n log = \"0.4\"\n unicode-security = \"0.0.2\"\n rustc = { path = \"../librustc\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_target = { path = \"../librustc_target\" }"}, {"sha": "6fdbfea7f03b3d8322faef6107253ffc797e0ea2", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1,5 +1,6 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n use rustc::ty;\n+use rustc_attr as attr;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n@@ -9,7 +10,6 @@ use rustc_span::symbol::sym;\n use rustc_span::{symbol::Ident, BytePos, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n-use syntax::attr;\n \n #[derive(PartialEq)]\n pub enum MethodLateContext {"}, {"sha": "6bc6f58f3e7fd2a6bb58c49a249853b78fc856fb", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -5,6 +5,7 @@ use rustc::mir::interpret::{sign_extend, truncate};\n use rustc::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n+use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -15,7 +16,7 @@ use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n-use syntax::{ast, attr};\n+use syntax::ast;\n \n use log::debug;\n use std::cmp;"}, {"sha": "a74f886043b6a71c207e6ad533e670647cf5c900", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -15,6 +15,7 @@ log = \"0.4\"\n memmap = \"0.7\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc = { path = \"../librustc\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "2fa9cb099dd515e679f1bd2aa7f1f43feb1d35e5", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -2,14 +2,14 @@ use rustc::middle::cstore::{self, NativeLibrary};\n use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n+use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::spec::abi::Abi;\n-use syntax::attr;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<NativeLibrary> {\n     let mut collector = Collector { tcx, libs: Vec::new() };"}, {"sha": "58cf142ab3a364c1432fa8a8ebe37ee37acc08e0", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -34,14 +34,14 @@ use std::u32;\n \n use log::debug;\n use proc_macro::bridge::client::ProcMacro;\n+use rustc_attr as attr;\n use rustc_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::proc_macro::{AttrProcMacro, BangProcMacro, ProcMacroDerive};\n use rustc_serialize::{opaque, Decodable, Decoder, SpecializedDecoder};\n use rustc_span::source_map::{self, respan, Spanned};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{self, hygiene::MacroKind, BytePos, Pos, Span, DUMMY_SP};\n use syntax::ast::{self, Ident};\n-use syntax::attr;\n \n pub use cstore_impl::{provide, provide_extern};\n "}, {"sha": "77ec3eb4555e3e1e8ec3dd3f02ecc4aba0d69646", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -10,6 +10,7 @@ use rustc::mir;\n use rustc::session::config::SymbolManglingVersion;\n use rustc::session::CrateDisambiguator;\n use rustc::ty::{self, ReprOptions, Ty};\n+use rustc_attr as attr;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_hir as hir;\n@@ -21,7 +22,7 @@ use rustc_span::edition::Edition;\n use rustc_span::symbol::Symbol;\n use rustc_span::{self, Span};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n-use syntax::{ast, attr};\n+use syntax::ast;\n \n use std::marker::PhantomData;\n use std::num::NonZeroUsize;"}, {"sha": "eead88dcb0c3036db2e2de597cc91a9993f94805", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -17,6 +17,7 @@ log = \"0.4\"\n log_settings = \"0.1.1\"\n polonius-engine = \"0.11.0\"\n rustc = { path = \"../librustc\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "4144bbc41d217cbc5147f1f6c7277a18c6d032a5", "filename": "src/librustc_mir/const_eval/fn_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1,11 +1,11 @@\n use rustc::hir::map::blocks::FnLikeNode;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_attr as attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::Symbol;\n use rustc_target::spec::abi::Abi;\n-use syntax::attr;\n \n /// Whether the `def_id` counts as const fn in your current crate, considering all active\n /// feature gates"}, {"sha": "a3cafcb576323178710f69e28ff2ff2bf3328a9a", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -16,8 +16,8 @@ use crate::transform::{MirPass, MirSource};\n use std::collections::VecDeque;\n use std::iter;\n \n+use rustc_attr as attr;\n use rustc_target::spec::abi::Abi;\n-use syntax::attr;\n \n const DEFAULT_THRESHOLD: usize = 50;\n const HINT_THRESHOLD: usize = 100;"}, {"sha": "9ff3ed1a935881c3165fc83a29c411aaeefab971", "filename": "src/librustc_mir_build/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -15,6 +15,7 @@ itertools = \"0.8\"\n log = \"0.4\"\n rustc = { path = \"../librustc\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "77bbce2d37aa9f03d2884fb229d4b80e77eddf8a", "filename": "src/librustc_mir_build/build/matches/simplify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fsimplify.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -18,8 +18,8 @@ use crate::hair::{self, *};\n use rustc::mir::interpret::truncate;\n use rustc::ty;\n use rustc::ty::layout::{Integer, IntegerExt, Size};\n+use rustc_attr::{SignedInt, UnsignedInt};\n use rustc_hir::RangeEnd;\n-use syntax::attr::{SignedInt, UnsignedInt};\n \n use std::mem;\n "}, {"sha": "1f536b63a394ab9c023dea23c3121a8389071e23", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -7,6 +7,7 @@ use rustc::middle::region;\n use rustc::mir::*;\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_attr::{self as attr, UnwindAttr};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{GeneratorKind, HirIdMap, Node};\n@@ -16,7 +17,6 @@ use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n use rustc_target::spec::PanicStrategy;\n use std::u32;\n-use syntax::attr::{self, UnwindAttr};\n \n use super::lints;\n "}, {"sha": "4f0e5bb45822bb2bf2aa3e379728a7379588ce20", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -245,8 +245,8 @@ use rustc::mir::interpret::{truncate, AllocId, ConstValue, Pointer, Scalar};\n use rustc::mir::Field;\n use rustc::util::common::ErrorReported;\n \n+use rustc_attr::{SignedInt, UnsignedInt};\n use rustc_span::{Span, DUMMY_SP};\n-use syntax::attr::{SignedInt, UnsignedInt};\n \n use arena::TypedArena;\n "}, {"sha": "bd8a9877719e46a7c77b1405c7d1530444dda83c", "filename": "src/librustc_mir_build/hair/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1036,7 +1036,7 @@ crate fn compare_const_vals<'tcx>(\n             }\n             ty::Int(ity) => {\n                 use rustc::ty::layout::{Integer, IntegerExt};\n-                use syntax::attr::SignedInt;\n+                use rustc_attr::SignedInt;\n                 let size = Integer::from_attr(&tcx, SignedInt(ity)).size();\n                 let a = sign_extend(a, size);\n                 let b = sign_extend(b, size);"}, {"sha": "6b0b6db8ed4685078b6afef9f10b223006c7ee3d", "filename": "src/librustc_parse/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -12,6 +12,7 @@ doctest = false\n [dependencies]\n bitflags = \"1.0\"\n log = \"0.4\"\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_lexer = { path = \"../librustc_lexer\" }"}, {"sha": "d97fe621174a4c1b60e238d7bc67b0d1dbac6c68", "filename": "src/librustc_parse/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_parse%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_parse%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fconfig.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -9,6 +9,7 @@\n //! [#64197]: https://github.com/rust-lang/rust/issues/64197\n \n use crate::{parse_in, validate_attr};\n+use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{error_code, struct_span_err, Applicability, Handler};\n use rustc_feature::{Feature, Features, State as FeatureState};\n@@ -19,7 +20,6 @@ use rustc_span::edition::{Edition, ALL_EDITIONS};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Attribute, MetaItem};\n-use syntax::attr;\n use syntax::attr::HasAttrs;\n use syntax::mut_visit::*;\n use syntax::ptr::P;"}, {"sha": "981ef7f8796d3d58e55870c1f1a502b94d2bbbd7", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -11,6 +11,7 @@ path = \"lib.rs\"\n [dependencies]\n log = \"0.4\"\n rustc = { path = \"../librustc\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "4009cc6d725ab3414dc2573e726d35f48c8c3b5d", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -10,6 +10,7 @@ use rustc::session::Session;\n use rustc::traits::misc::can_type_implement_copy;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_attr::{self as attr, Stability};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n@@ -20,7 +21,6 @@ use rustc_hir::{Generics, HirId, Item, StructField, Variant};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::Attribute;\n-use syntax::attr::{self, Stability};\n \n use std::cmp::Ordering;\n use std::mem::replace;"}, {"sha": "2f7aaf9e5cfe153aac8f4c5848723ab00fafb6db", "filename": "src/librustc_privacy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -10,6 +10,7 @@ path = \"lib.rs\"\n \n [dependencies]\n rustc = { path = \"../librustc\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_typeck = { path = \"../librustc_typeck\" }"}, {"sha": "74bb72d6fad7f8fc7254318586c4f2bdab2c95ca", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -11,6 +11,7 @@ use rustc::ty::fold::TypeVisitor;\n use rustc::ty::query::Providers;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, GenericParamDefKind, TraitRef, Ty, TyCtxt, TypeFoldable};\n+use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n@@ -22,7 +23,6 @@ use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use syntax::ast::Ident;\n-use syntax::attr;\n \n use std::marker::PhantomData;\n use std::{cmp, fmt, mem};"}, {"sha": "74f0d24749208d8ef6cd0c7abec7c34e6a17c2d5", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -17,6 +17,7 @@ syntax = { path = \"../libsyntax\" }\n arena = { path = \"../libarena\" }\n rustc = { path = \"../librustc\" }\n rustc_ast_lowering = { path = \"../librustc_ast_lowering\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_expand = { path = \"../librustc_expand\" }"}, {"sha": "c77b588d7fbc3ab0af2c74f7ec4068c69f556293", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -20,6 +20,7 @@ use rustc::bug;\n use rustc::hir::exports::Export;\n use rustc::middle::cstore::CrateStore;\n use rustc::ty;\n+use rustc_attr as attr;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_expand::base::SyntaxExtension;\n@@ -34,7 +35,6 @@ use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use syntax::ast::{Ident, Name};\n-use syntax::attr;\n use syntax::token::{self, Token};\n use syntax::visit::{self, Visitor};\n "}, {"sha": "966638db493b37b28d0b2f2b49a0c15513f030e5", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -10,6 +10,7 @@ use rustc::middle::stability;\n use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::{lint, span_bug, ty};\n+use rustc_attr::{self as attr, StabilityLevel};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_expand::base::SyntaxExtension;\n use rustc_expand::base::{self, Indeterminate, InvocationRes};\n@@ -23,7 +24,6 @@ use rustc_span::hygiene::{self, ExpnData, ExpnId, ExpnKind};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Ident, NodeId};\n-use syntax::attr::{self, StabilityLevel};\n use syntax::print::pprust;\n \n use rustc_data_structures::sync::Lrc;"}, {"sha": "748bfcc79460a12442bf19ec890d6cead07257f9", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -14,6 +14,7 @@ doctest = false\n arena = { path = \"../libarena\" }\n log = \"0.4\"\n rustc = { path = \"../librustc\" }\n+rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "0a917a1853eb5ebe30db967440be818b60ed92a5", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -115,6 +115,7 @@ use rustc::ty::{\n     self, AdtKind, CanonicalUserType, Const, GenericParamDefKind, RegionKind, ToPolyTraitRef,\n     ToPredicate, Ty, TyCtxt, UserType, WithConstness,\n };\n+use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder, DiagnosticId};\n@@ -131,7 +132,6 @@ use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::{self, BytePos, MultiSpan, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n-use syntax::attr;\n use syntax::util::parser::ExprPrecedence;\n \n use std::cell::{Cell, Ref, RefCell, RefMut};"}, {"sha": "4d812d2621c612524caf950f3d3f9f8d39d4fac3", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -33,6 +33,7 @@ use rustc::ty::util::Discr;\n use rustc::ty::util::IntTypeExt;\n use rustc::ty::{self, AdtKind, Const, DefIdTree, ToPolyTraitRef, Ty, TyCtxt, WithConstness};\n use rustc::ty::{ReprOptions, ToPredicate};\n+use rustc_attr::{list_contains_name, mark_used, InlineAttr, OptimizeAttr};\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, Applicability, StashKey};\n@@ -46,7 +47,6 @@ use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::abi;\n use syntax::ast;\n use syntax::ast::{Ident, MetaItemKind};\n-use syntax::attr::{list_contains_name, mark_used, InlineAttr, OptimizeAttr};\n \n struct OnlySelfBounds(bool);\n "}, {"sha": "2a35ab812a5f2f0983dd853296ce67d1802ce1e3", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -16,6 +16,7 @@ use rustc::middle::stability;\n use rustc::ty::fold::TypeFolder;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, AdtKind, Lift, Ty, TyCtxt};\n+use rustc_attr as attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n@@ -27,7 +28,6 @@ use rustc_span::symbol::{kw, sym};\n use rustc_span::{self, Pos};\n use rustc_typeck::hir_ty_to_ty;\n use syntax::ast::{self, Ident};\n-use syntax::attr;\n \n use std::collections::hash_map::Entry;\n use std::default::Default;"}, {"sha": "a8baa89c6f18131a1cdfccbf8370bc8d04b53c96", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -15,13 +15,13 @@ use rustc_lint;\n use rustc_resolve as resolve;\n use rustc_session::lint;\n \n+use rustc_attr as attr;\n use rustc_errors::emitter::{Emitter, EmitterWriter};\n use rustc_errors::json::JsonEmitter;\n use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n use syntax::ast::CRATE_NODE_ID;\n-use syntax::attr;\n \n use rustc_data_structures::sync::{self, Lrc};\n use std::cell::RefCell;"}, {"sha": "27a6a52c02644155516f2d0e1c81c5994eb934fc", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -21,6 +21,7 @@\n extern crate env_logger;\n extern crate getopts;\n extern crate rustc;\n+extern crate rustc_attr;\n extern crate rustc_data_structures;\n extern crate rustc_driver;\n extern crate rustc_errors;"}, {"sha": "e4d4017a345486ac50caaebce9906f67c590b858", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a8283614e995a0cf7a866356609b7522cfda24/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=93a8283614e995a0cf7a866356609b7522cfda24", "patch": "@@ -1,12 +1,5 @@\n //! Functions dealing with attributes and meta items.\n \n-mod builtin;\n-\n-pub use builtin::*;\n-pub use IntType::*;\n-pub use ReprAttr::*;\n-pub use StabilityLevel::*;\n-\n use crate::ast;\n use crate::ast::{AttrId, AttrItem, AttrKind, AttrStyle, AttrVec, Attribute};\n use crate::ast::{Expr, GenericParam, Item, Lit, LitKind, Local, Stmt, StmtKind};"}]}