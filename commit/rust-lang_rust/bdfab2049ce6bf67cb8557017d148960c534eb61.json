{"sha": "bdfab2049ce6bf67cb8557017d148960c534eb61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZmFiMjA0OWNlNmJmNjdjYjg1NTcwMTdkMTQ4OTYwYzUzNGViNjE=", "commit": {"author": {"name": "hman523", "email": "shbarbella@gmail.com", "date": "2019-09-09T23:50:11Z"}, "committer": {"name": "hman523", "email": "shbarbella@gmail.com", "date": "2019-09-09T23:50:11Z"}, "message": "Fixed documentation within c_str::from_ptr", "tree": {"sha": "c7ad7d6f01fa730eed0a778badcdbaa49f80b4bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7ad7d6f01fa730eed0a778badcdbaa49f80b4bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdfab2049ce6bf67cb8557017d148960c534eb61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdfab2049ce6bf67cb8557017d148960c534eb61", "html_url": "https://github.com/rust-lang/rust/commit/bdfab2049ce6bf67cb8557017d148960c534eb61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdfab2049ce6bf67cb8557017d148960c534eb61/comments", "author": {"login": "hman523", "id": 25874048, "node_id": "MDQ6VXNlcjI1ODc0MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/25874048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hman523", "html_url": "https://github.com/hman523", "followers_url": "https://api.github.com/users/hman523/followers", "following_url": "https://api.github.com/users/hman523/following{/other_user}", "gists_url": "https://api.github.com/users/hman523/gists{/gist_id}", "starred_url": "https://api.github.com/users/hman523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hman523/subscriptions", "organizations_url": "https://api.github.com/users/hman523/orgs", "repos_url": "https://api.github.com/users/hman523/repos", "events_url": "https://api.github.com/users/hman523/events{/privacy}", "received_events_url": "https://api.github.com/users/hman523/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hman523", "id": 25874048, "node_id": "MDQ6VXNlcjI1ODc0MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/25874048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hman523", "html_url": "https://github.com/hman523", "followers_url": "https://api.github.com/users/hman523/followers", "following_url": "https://api.github.com/users/hman523/following{/other_user}", "gists_url": "https://api.github.com/users/hman523/gists{/gist_id}", "starred_url": "https://api.github.com/users/hman523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hman523/subscriptions", "organizations_url": "https://api.github.com/users/hman523/orgs", "repos_url": "https://api.github.com/users/hman523/repos", "events_url": "https://api.github.com/users/hman523/events{/privacy}", "received_events_url": "https://api.github.com/users/hman523/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b36e9dea3f2ff25b1d0df2669836c33cce89ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b36e9dea3f2ff25b1d0df2669836c33cce89ae5", "html_url": "https://github.com/rust-lang/rust/commit/0b36e9dea3f2ff25b1d0df2669836c33cce89ae5"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "29d86e7146edc7ce00f2e7e8305fc96b934e64b6", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bdfab2049ce6bf67cb8557017d148960c534eb61/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdfab2049ce6bf67cb8557017d148960c534eb61/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=bdfab2049ce6bf67cb8557017d148960c534eb61", "patch": "@@ -935,8 +935,10 @@ impl CStr {\n     /// Wraps a raw C string with a safe C string wrapper.\n     ///\n     /// This function will wrap the provided `ptr` with a `CStr` wrapper, which\n-    /// allows inspection and interoperation of non-owned C strings. This method\n-    /// is unsafe for a number of reasons:\n+    /// allows inspection and interoperation of non-owned C strings. The total\n+    /// size of the raw C string must be smaller than `isize::MAX` **bytes**\n+    /// in memory due to calling the slice::from_raw_parts function.\n+    /// This method is unsafe for a number of reasons:\n     ///\n     /// * There is no guarantee to the validity of `ptr`.\n     /// * The returned lifetime is not guaranteed to be the actual lifetime of"}]}