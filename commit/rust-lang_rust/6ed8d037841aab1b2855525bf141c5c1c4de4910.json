{"sha": "6ed8d037841aab1b2855525bf141c5c1c4de4910", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZDhkMDM3ODQxYWFiMWIyODU1NTI1YmYxNDFjNWMxYzRkZTQ5MTA=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-06T08:51:03Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-06T08:56:42Z"}, "message": "Make sure iface_methods are set before they are accessed\n\nCloses #1761", "tree": {"sha": "5946e57a5f7e80c3e5abc7b0679c36e621dbc289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5946e57a5f7e80c3e5abc7b0679c36e621dbc289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ed8d037841aab1b2855525bf141c5c1c4de4910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed8d037841aab1b2855525bf141c5c1c4de4910", "html_url": "https://github.com/rust-lang/rust/commit/6ed8d037841aab1b2855525bf141c5c1c4de4910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ed8d037841aab1b2855525bf141c5c1c4de4910/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1158ca333fe6a982936bf69eeeaabaf21460911", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1158ca333fe6a982936bf69eeeaabaf21460911", "html_url": "https://github.com/rust-lang/rust/commit/d1158ca333fe6a982936bf69eeeaabaf21460911"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "e626d2089e871fbf7c153d75ad24a944cc628515", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6ed8d037841aab1b2855525bf141c5c1c4de4910/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed8d037841aab1b2855525bf141c5c1c4de4910/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=6ed8d037841aab1b2855525bf141c5c1c4de4910", "patch": "@@ -366,6 +366,10 @@ fn ast_ty_to_ty(tcx: ty::ctxt, mode: mode, &&ast_ty: @ast::ty) -> ty::t {\n \n fn ty_of_item(tcx: ty::ctxt, mode: mode, it: @ast::item)\n     -> ty::ty_param_bounds_and_ty {\n+    alt tcx.tcache.find(local_def(it.id)) {\n+      some(tpt) { ret tpt; }\n+      _ {}\n+    }\n     alt it.node {\n       ast::item_const(t, _) {\n         let typ = ast_ty_to_ty(tcx, mode, t);\n@@ -740,6 +744,16 @@ mod collect {\n             write_ty(cx.tcx, variant.node.id, result_ty);\n         }\n     }\n+    fn ensure_iface_methods(tcx: ty::ctxt, id: ast::node_id) {\n+        alt tcx.items.get(id) {\n+          ast_map::node_item(@{node: ast::item_iface(_, ms), _}, _) {\n+            ty::store_iface_methods(tcx, id, @vec::map(ms, {|m|\n+                ty_of_ty_method(tcx, m_collect, m)\n+            }));\n+          }\n+          _ { fail; }\n+        }\n+    }\n     fn convert(cx: @ctxt, it: @ast::item) {\n         alt it.node {\n           // These don't define types.\n@@ -771,6 +785,9 @@ mod collect {\n                                      {bounds: i_bounds, ty: iface_ty});\n                 alt ty::struct(cx.tcx, iface_ty) {\n                   ty::ty_iface(did, tys) {\n+                    if did.crate == ast::local_crate {\n+                        ensure_iface_methods(cx.tcx, did.node);\n+                    }\n                     for if_m in *ty::iface_methods(cx.tcx, did) {\n                         alt vec::find(my_methods,\n                                       {|m| if_m.ident == m.mty.ident}) {\n@@ -827,9 +844,7 @@ mod collect {\n           ast::item_iface(_, ms) {\n             let tpt = ty_of_item(cx.tcx, m_collect, it);\n             write_ty(cx.tcx, it.id, tpt.ty);\n-            ty::store_iface_methods(cx.tcx, it.id, @vec::map(ms, {|m|\n-                ty_of_ty_method(cx.tcx, m_collect, m)\n-            }));\n+            ensure_iface_methods(cx.tcx, it.id);\n           }\n           _ {\n             // This call populates the type cache with the converted type"}, {"sha": "aa981e2fb4b720d15f5409bcf07762aedf7bf506", "filename": "src/test/run-pass/use-iface-before-def.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ed8d037841aab1b2855525bf141c5c1c4de4910/src%2Ftest%2Frun-pass%2Fuse-iface-before-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed8d037841aab1b2855525bf141c5c1c4de4910/src%2Ftest%2Frun-pass%2Fuse-iface-before-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-iface-before-def.rs?ref=6ed8d037841aab1b2855525bf141c5c1c4de4910", "patch": "@@ -0,0 +1,5 @@\n+// Issue #1761\n+\n+impl of foo for int { fn foo() -> int { 10 } }\n+iface foo { fn foo() -> int; }\n+fn main() {}\n\\ No newline at end of file"}]}