{"sha": "58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NzExYmRhM2Q0OThmZWE2YmY4YWIwN2Q0ZDI1YTFhYzA0Y2RmY2Q=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-10T15:14:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-10T15:14:02Z"}, "message": "Merge #5696\n\n5696: Return InvalidRequest if Shutdown has been requested r=kjeremy a=kjeremy\n\nFrom the LSP 3.16 spec: \"If a server receives requests after a shutdown request those requests should error with InvalidRequest.\"\r\n\r\nRealized this behavior was missing while looking at #5693. Question on notification behavior is tracked at https://github.com/microsoft/language-server-protocol/issues/1066\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "b5c91a8daa3c9461b1e9305ae141ece3907b4d9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5c91a8daa3c9461b1e9305ae141ece3907b4d9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfMWQ6CRBK7hj4Ov3rIwAAdHIIADow9CZ6AqAphiJRp3fk0k03\nJLHGrKlDe6Ak8Bf3iCjiwXOyVZ0A4rR65tWL0fP15lr1f48R1miybHj2RXLJjIob\nw3Sck27dDUrFz61orlJBo/Ux5GgNcyha3t1rnggY8oC0DlxP4we0jsiqQfnUKSTZ\nuVDXkzTo8Lpx1UPgBHohyOnK3PF9fSbY8QeTUezqrI9tsVKEWv8scZa3IlP4L8vY\nEYDqUXBpMjSruYNK7Z1ezvEG1B7UNWguL4tiDUZi5s9hHVku7tYJxR76hEHe2ttH\njkX4LHLdK8ru+k6TzH4sSOfWYwcWXmdcc0aeH1AmXdJheQOpvJCfWgJ1VMYcfR0=\n=t3Gr\n-----END PGP SIGNATURE-----\n", "payload": "tree b5c91a8daa3c9461b1e9305ae141ece3907b4d9f\nparent cef39c3efb98e5ece42bb72c14d96388380a308c\nparent cf6d14cee7fee17ed668f502de5042136446945b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597072442 +0000\ncommitter GitHub <noreply@github.com> 1597072442 +0000\n\nMerge #5696\n\n5696: Return InvalidRequest if Shutdown has been requested r=kjeremy a=kjeremy\n\nFrom the LSP 3.16 spec: \"If a server receives requests after a shutdown request those requests should error with InvalidRequest.\"\r\n\r\nRealized this behavior was missing while looking at #5693. Question on notification behavior is tracked at https://github.com/microsoft/language-server-protocol/issues/1066\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd", "html_url": "https://github.com/rust-lang/rust/commit/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cef39c3efb98e5ece42bb72c14d96388380a308c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cef39c3efb98e5ece42bb72c14d96388380a308c", "html_url": "https://github.com/rust-lang/rust/commit/cef39c3efb98e5ece42bb72c14d96388380a308c"}, {"sha": "cf6d14cee7fee17ed668f502de5042136446945b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf6d14cee7fee17ed668f502de5042136446945b", "html_url": "https://github.com/rust-lang/rust/commit/cf6d14cee7fee17ed668f502de5042136446945b"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "658a50d1507ddf10a5a022386dde7abcbb1d7b44", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd", "patch": "@@ -73,6 +73,7 @@ pub(crate) struct GlobalState {\n     pub(crate) mem_docs: FxHashMap<VfsPath, DocumentData>,\n     pub(crate) semantic_tokens_cache: Arc<Mutex<FxHashMap<Url, SemanticTokens>>>,\n     pub(crate) vfs: Arc<RwLock<(vfs::Vfs, FxHashMap<FileId, LineEndings>)>>,\n+    pub(crate) shutdown_requested: bool,\n     pub(crate) status: Status,\n     pub(crate) source_root_config: SourceRootConfig,\n     pub(crate) proc_macro_client: ProcMacroClient,\n@@ -124,6 +125,7 @@ impl GlobalState {\n             mem_docs: FxHashMap::default(),\n             semantic_tokens_cache: Arc::new(Default::default()),\n             vfs: Arc::new(RwLock::new((vfs::Vfs::default(), FxHashMap::default()))),\n+            shutdown_requested: false,\n             status: Status::default(),\n             source_root_config: SourceRootConfig::default(),\n             proc_macro_client: ProcMacroClient::dummy(),"}, {"sha": "e6cf46df23ea668b3258bde9c3d6ed478c01242a", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=58711bda3d498fea6bf8ab07d4d25a1ac04cdfcd", "patch": "@@ -337,6 +337,16 @@ impl GlobalState {\n     fn on_request(&mut self, request_received: Instant, req: Request) -> Result<()> {\n         self.register_request(&req, request_received);\n \n+        if self.shutdown_requested {\n+            self.respond(Response::new_err(\n+                req.id,\n+                lsp_server::ErrorCode::InvalidRequest as i32,\n+                \"Shutdown already requested.\".to_owned(),\n+            ));\n+\n+            return Ok(());\n+        }\n+\n         if self.status == Status::Loading && req.method != \"shutdown\" {\n             self.respond(lsp_server::Response::new_err(\n                 req.id,\n@@ -351,7 +361,10 @@ impl GlobalState {\n             .on_sync::<lsp_ext::ReloadWorkspace>(|s, ()| Ok(s.fetch_workspaces()))?\n             .on_sync::<lsp_ext::JoinLines>(|s, p| handlers::handle_join_lines(s.snapshot(), p))?\n             .on_sync::<lsp_ext::OnEnter>(|s, p| handlers::handle_on_enter(s.snapshot(), p))?\n-            .on_sync::<lsp_types::request::Shutdown>(|_, ()| Ok(()))?\n+            .on_sync::<lsp_types::request::Shutdown>(|s, ()| {\n+                s.shutdown_requested = true;\n+                Ok(())\n+            })?\n             .on_sync::<lsp_types::request::SelectionRangeRequest>(|s, p| {\n                 handlers::handle_selection_range(s.snapshot(), p)\n             })?"}]}