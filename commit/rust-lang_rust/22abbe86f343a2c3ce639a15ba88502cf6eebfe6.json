{"sha": "22abbe86f343a2c3ce639a15ba88502cf6eebfe6", "node_id": "C_kwDOAAsO6NoAKDIyYWJiZTg2ZjM0M2EyYzNjZTYzOWExNWJhODg1MDJjZjZlZWJmZTY", "commit": {"author": {"name": "longfangsong", "email": "longfangsong@icloud.com", "date": "2021-09-25T14:47:20Z"}, "committer": {"name": "longfangsong", "email": "longfangsong@icloud.com", "date": "2021-09-25T14:48:57Z"}, "message": "Address comments", "tree": {"sha": "72a61dc5719bb4dfb537cf3566493752c848e10a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72a61dc5719bb4dfb537cf3566493752c848e10a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22abbe86f343a2c3ce639a15ba88502cf6eebfe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22abbe86f343a2c3ce639a15ba88502cf6eebfe6", "html_url": "https://github.com/rust-lang/rust/commit/22abbe86f343a2c3ce639a15ba88502cf6eebfe6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22abbe86f343a2c3ce639a15ba88502cf6eebfe6/comments", "author": {"login": "longfangsong", "id": 13777628, "node_id": "MDQ6VXNlcjEzNzc3NjI4", "avatar_url": "https://avatars.githubusercontent.com/u/13777628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longfangsong", "html_url": "https://github.com/longfangsong", "followers_url": "https://api.github.com/users/longfangsong/followers", "following_url": "https://api.github.com/users/longfangsong/following{/other_user}", "gists_url": "https://api.github.com/users/longfangsong/gists{/gist_id}", "starred_url": "https://api.github.com/users/longfangsong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longfangsong/subscriptions", "organizations_url": "https://api.github.com/users/longfangsong/orgs", "repos_url": "https://api.github.com/users/longfangsong/repos", "events_url": "https://api.github.com/users/longfangsong/events{/privacy}", "received_events_url": "https://api.github.com/users/longfangsong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "longfangsong", "id": 13777628, "node_id": "MDQ6VXNlcjEzNzc3NjI4", "avatar_url": "https://avatars.githubusercontent.com/u/13777628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longfangsong", "html_url": "https://github.com/longfangsong", "followers_url": "https://api.github.com/users/longfangsong/followers", "following_url": "https://api.github.com/users/longfangsong/following{/other_user}", "gists_url": "https://api.github.com/users/longfangsong/gists{/gist_id}", "starred_url": "https://api.github.com/users/longfangsong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longfangsong/subscriptions", "organizations_url": "https://api.github.com/users/longfangsong/orgs", "repos_url": "https://api.github.com/users/longfangsong/repos", "events_url": "https://api.github.com/users/longfangsong/events{/privacy}", "received_events_url": "https://api.github.com/users/longfangsong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd599ec202d49d044d6d71fd3471e3c5199476e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd599ec202d49d044d6d71fd3471e3c5199476e1", "html_url": "https://github.com/rust-lang/rust/commit/cd599ec202d49d044d6d71fd3471e3c5199476e1"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "9b060bb710f0538791f999ff5fca85be3d6629fc", "filename": "crates/ide_assists/src/handlers/move_to_mod_rs.rs", "status": "renamed", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/22abbe86f343a2c3ce639a15ba88502cf6eebfe6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_to_mod_rs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22abbe86f343a2c3ce639a15ba88502cf6eebfe6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_to_mod_rs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_to_mod_rs.rs?ref=22abbe86f343a2c3ce639a15ba88502cf6eebfe6", "patch": "@@ -35,9 +35,9 @@ fn trimmed_text_range(source_file: &SourceFile, initial_range: TextRange) -> Tex\n     trimmed_range\n }\n \n-// Assist: promote_mod_file\n+// Assist: move_to_mod_rs\n //\n-// Moves inline module's contents to a separate file.\n+// Moves xxx.rs to xxx/mod.rs.\n //\n // ```\n // //- /main.rs\n@@ -49,13 +49,18 @@ fn trimmed_text_range(source_file: &SourceFile, initial_range: TextRange) -> Tex\n // ```\n // fn t() {}\n // ```\n-pub(crate) fn promote_mod_file(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n+pub(crate) fn move_to_mod_rs(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let source_file = ctx.find_node_at_offset::<ast::SourceFile>()?;\n     let module = ctx.sema.to_module_def(ctx.frange.file_id)?;\n     // Enable this assist if the user select all \"meaningful\" content in the source file\n     let trimmed_selected_range = trimmed_text_range(&source_file, ctx.frange.range);\n     let trimmed_file_range = trimmed_text_range(&source_file, source_file.syntax().text_range());\n-    if module.is_mod_rs(ctx.db()) || trimmed_selected_range != trimmed_file_range {\n+    if module.is_mod_rs(ctx.db()) {\n+        cov_mark::hit!(already_mod_rs);\n+        return None;\n+    }\n+    if trimmed_selected_range != trimmed_file_range {\n+        cov_mark::hit!(not_all_selected);\n         return None;\n     }\n \n@@ -67,7 +72,7 @@ pub(crate) fn promote_mod_file(acc: &mut Assists, ctx: &AssistContext) -> Option\n     let path = format!(\"./{}/mod.rs\", module_name);\n     let dst = AnchoredPathBuf { anchor: ctx.frange.file_id, path };\n     acc.add(\n-        AssistId(\"promote_mod_file\", AssistKind::Refactor),\n+        AssistId(\"move_to_mod_rs\", AssistKind::Refactor),\n         format!(\"Turn {}.rs to {}/mod.rs\", module_name, module_name),\n         target,\n         |builder| {\n@@ -85,7 +90,7 @@ mod tests {\n     #[test]\n     fn trivial() {\n         check_assist(\n-            promote_mod_file,\n+            move_to_mod_rs,\n             r#\"\n //- /main.rs\n mod a;\n@@ -101,17 +106,19 @@ fn t() {}\n \n     #[test]\n     fn must_select_all_file() {\n+        cov_mark::check!(not_all_selected);\n         check_assist_not_applicable(\n-            promote_mod_file,\n+            move_to_mod_rs,\n             r#\"\n //- /main.rs\n mod a;\n //- /a.rs\n fn t() {}$0\n \"#,\n         );\n+        cov_mark::check!(not_all_selected);\n         check_assist_not_applicable(\n-            promote_mod_file,\n+            move_to_mod_rs,\n             r#\"\n //- /main.rs\n mod a;\n@@ -123,28 +130,29 @@ $0fn$0 t() {}\n \n     #[test]\n     fn cannot_promote_mod_rs() {\n+        cov_mark::check!(already_mod_rs);\n         check_assist_not_applicable(\n-            promote_mod_file,\n+            move_to_mod_rs,\n             r#\"//- /main.rs\n mod a;\n //- /a/mod.rs\n-$0fn t() {}\n+$0fn t() {}$0\n \"#,\n         );\n     }\n \n     #[test]\n     fn cannot_promote_main_and_lib_rs() {\n         check_assist_not_applicable(\n-            promote_mod_file,\n+            move_to_mod_rs,\n             r#\"//- /main.rs\n-$0fn t() {}\n+$0fn t() {}$0\n \"#,\n         );\n         check_assist_not_applicable(\n-            promote_mod_file,\n+            move_to_mod_rs,\n             r#\"//- /lib.rs\n-$0fn t() {}\n+$0fn t() {}$0\n \"#,\n         );\n     }\n@@ -153,7 +161,7 @@ $0fn t() {}\n     fn works_in_mod() {\n         // note: /a/b.rs remains untouched\n         check_assist(\n-            promote_mod_file,\n+            move_to_mod_rs,\n             r#\"//- /main.rs\n mod a;\n //- /a.rs", "previous_filename": "crates/ide_assists/src/handlers/promote_mod_file.rs"}, {"sha": "1f5e2f036e0c313028323f0a3727aa10b7358fb3", "filename": "crates/ide_assists/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22abbe86f343a2c3ce639a15ba88502cf6eebfe6/crates%2Fide_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22abbe86f343a2c3ce639a15ba88502cf6eebfe6/crates%2Fide_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Flib.rs?ref=22abbe86f343a2c3ce639a15ba88502cf6eebfe6", "patch": "@@ -96,7 +96,7 @@ mod handlers {\n     mod move_bounds;\n     mod move_guard;\n     mod move_module_to_file;\n-    mod promote_mod_file;\n+    mod move_to_mod_rs;\n     mod pull_assignment_up;\n     mod qualify_path;\n     mod raw_string;\n@@ -168,7 +168,7 @@ mod handlers {\n             move_guard::move_arm_cond_to_match_guard,\n             move_guard::move_guard_to_arm_body,\n             move_module_to_file::move_module_to_file,\n-            promote_mod_file::promote_mod_file,\n+            move_to_mod_rs::move_to_mod_rs,\n             pull_assignment_up::pull_assignment_up,\n             qualify_path::qualify_path,\n             raw_string::add_hash,"}, {"sha": "f371ca801787ce90c6889eff1af6da366606c3aa", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22abbe86f343a2c3ce639a15ba88502cf6eebfe6/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22abbe86f343a2c3ce639a15ba88502cf6eebfe6/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=22abbe86f343a2c3ce639a15ba88502cf6eebfe6", "patch": "@@ -1227,9 +1227,9 @@ mod foo;\n }\n \n #[test]\n-fn doctest_promote_mod_file() {\n+fn doctest_move_to_mod_rs() {\n     check_doc_test(\n-        \"promote_mod_file\",\n+        \"move_to_mod_rs\",\n         r#####\"\n //- /main.rs\n mod a;"}]}