{"sha": "aa3ca321e92c541dce363634c9cea7cf23689a5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhM2NhMzIxZTkyYzU0MWRjZTM2MzYzNGM5Y2VhN2NmMjM2ODlhNWU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-02-23T23:08:43Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-02-25T16:46:06Z"}, "message": "Rename rustdoc js test suites", "tree": {"sha": "3892956ba062a30f060d0e9b74cdbd09eca8121e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3892956ba062a30f060d0e9b74cdbd09eca8121e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa3ca321e92c541dce363634c9cea7cf23689a5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa3ca321e92c541dce363634c9cea7cf23689a5e", "html_url": "https://github.com/rust-lang/rust/commit/aa3ca321e92c541dce363634c9cea7cf23689a5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa3ca321e92c541dce363634c9cea7cf23689a5e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "834347ddafee7c33f3fd556c4976275b1111dc8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/834347ddafee7c33f3fd556c4976275b1111dc8f", "html_url": "https://github.com/rust-lang/rust/commit/834347ddafee7c33f3fd556c4976275b1111dc8f"}], "stats": {"total": 193, "additions": 93, "deletions": 100}, "files": [{"sha": "a471af257665f099b263e68365b7e300de578268", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "patch": "@@ -405,7 +405,7 @@ impl<'a> Builder<'a> {\n                 test::Miri,\n                 test::Clippy,\n                 test::CompiletestTest,\n-                test::RustdocJS,\n+                test::RustdocJSStd,\n                 test::RustdocJSNotStd,\n                 test::RustdocTheme,\n                 // Run bootstrap close to the end as it's unlikely to fail"}, {"sha": "c724d75c2dc0651b114c0b4fd1f941fb2f78f6a4", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "patch": "@@ -574,22 +574,22 @@ impl Step for RustdocTheme {\n }\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n-pub struct RustdocJS {\n+pub struct RustdocJSStd {\n     pub host: Interned<String>,\n     pub target: Interned<String>,\n }\n \n-impl Step for RustdocJS {\n+impl Step for RustdocJSStd {\n     type Output = ();\n     const DEFAULT: bool = true;\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/test/rustdoc-js\")\n+        run.path(\"src/test/rustdoc-js-std\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n-        run.builder.ensure(RustdocJS {\n+        run.builder.ensure(RustdocJSStd {\n             host: run.host,\n             target: run.target,\n         });\n@@ -598,15 +598,15 @@ impl Step for RustdocJS {\n     fn run(self, builder: &Builder<'_>) {\n         if let Some(ref nodejs) = builder.config.nodejs {\n             let mut command = Command::new(nodejs);\n-            command.args(&[\"src/tools/rustdoc-js/tester.js\", &*self.host]);\n+            command.args(&[\"src/tools/rustdoc-js-std/tester.js\", &*self.host]);\n             builder.ensure(crate::doc::Std {\n                 target: self.target,\n                 stage: builder.top_stage,\n             });\n             builder.run(&mut command);\n         } else {\n             builder.info(\n-                \"No nodejs found, skipping \\\"src/test/rustdoc-js\\\" tests\"\n+                \"No nodejs found, skipping \\\"src/test/rustdoc-js-std\\\" tests\"\n             );\n         }\n     }\n@@ -625,7 +625,7 @@ impl Step for RustdocJSNotStd {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun) -> ShouldRun {\n-        run.path(\"src/test/rustdoc-js-not-std\")\n+        run.path(\"src/test/rustdoc-js\")\n     }\n \n     fn make_run(run: RunConfig) {\n@@ -640,7 +640,7 @@ impl Step for RustdocJSNotStd {\n     fn run(self, builder: &Builder) {\n         if let Some(ref nodejs) = builder.config.nodejs {\n             let mut command = Command::new(nodejs);\n-            command.args(&[\"src/tools/rustdoc-js-not-std/tester.js\",\n+            command.args(&[\"src/tools/rustdoc-js/tester.js\",\n                            &*self.host,\n                            builder.top_stage.to_string().as_str()]);\n             builder.ensure(crate::doc::Std {\n@@ -650,7 +650,7 @@ impl Step for RustdocJSNotStd {\n             builder.run(&mut command);\n         } else {\n             builder.info(\n-                \"No nodejs found, skipping \\\"src/test/rustdoc-js-not-std\\\" tests\"\n+                \"No nodejs found, skipping \\\"src/test/rustdoc-js\\\" tests\"\n             );\n         }\n     }"}, {"sha": "d99b23468b60cfa94361eac46317304aa7ae8332", "filename": "src/test/rustdoc-js-not-std/basic.js", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/834347ddafee7c33f3fd556c4976275b1111dc8f/src%2Ftest%2Frustdoc-js-not-std%2Fbasic.js", "raw_url": "https://github.com/rust-lang/rust/raw/834347ddafee7c33f3fd556c4976275b1111dc8f/src%2Ftest%2Frustdoc-js-not-std%2Fbasic.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-not-std%2Fbasic.js?ref=834347ddafee7c33f3fd556c4976275b1111dc8f", "patch": "@@ -1,7 +0,0 @@\n-const QUERY = 'Fo';\n-\n-const EXPECTED = {\n-    'others': [\n-        { 'path': 'basic', 'name': 'Foo' },\n-    ],\n-};"}, {"sha": "7c6327fcdd7cae3e4aa54fa2e347e726ff8b5e56", "filename": "src/test/rustdoc-js-std/alias-1.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias-1.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias-1.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Falias-1.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/alias-1.js"}, {"sha": "f3c6713692b5982ec0ff7ab84000ef39792165c9", "filename": "src/test/rustdoc-js-std/alias-2.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias-2.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias-2.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Falias-2.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/alias-2.js"}, {"sha": "392b1e8183786a314e13d0b4dd9581c2bdeb2551", "filename": "src/test/rustdoc-js-std/alias-3.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias-3.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias-3.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Falias-3.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/alias-3.js"}, {"sha": "2b709c99119ae11e7a2b079d36c1d51f6f2955a6", "filename": "src/test/rustdoc-js-std/alias.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Falias.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Falias.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/alias.js"}, {"sha": "824cac71083328dd8e001f8a137c78d7d219db66", "filename": "src/test/rustdoc-js-std/basic.js", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fbasic.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fbasic.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fbasic.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "patch": "@@ -0,0 +1,15 @@\n+const QUERY = 'String';\n+\n+const EXPECTED = {\n+    'others': [\n+        { 'path': 'std::string', 'name': 'String' },\n+        { 'path': 'std::ffi', 'name': 'CString' },\n+        { 'path': 'std::ffi', 'name': 'OsString' },\n+    ],\n+    'in_args': [\n+        { 'path': 'std::str', 'name': 'eq' },\n+    ],\n+    'returned': [\n+        { 'path': 'std::string::String', 'name': 'add' },\n+    ],\n+};"}, {"sha": "f02f6cf55ed21aeb0f5b31b45c4858c71e896f6c", "filename": "src/test/rustdoc-js-std/deduplication.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fdeduplication.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fdeduplication.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fdeduplication.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/deduplication.js"}, {"sha": "902e09069108dc0b6d1b6dc1505d0e88842427a3", "filename": "src/test/rustdoc-js-std/enum-option.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fenum-option.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fenum-option.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fenum-option.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/enum-option.js"}, {"sha": "2e0330c449721153bc3c57d08d8b61694828e38b", "filename": "src/test/rustdoc-js-std/filter-crate.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Ffilter-crate.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Ffilter-crate.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Ffilter-crate.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/filter-crate.js"}, {"sha": "66a5fcaa7813dd9baa1bcb39ee16752a4dc41b0d", "filename": "src/test/rustdoc-js-std/fn-forget.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Ffn-forget.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Ffn-forget.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Ffn-forget.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/fn-forget.js"}, {"sha": "e3f3cd436aa6ae9267a934ff1862b78fa37d99fb", "filename": "src/test/rustdoc-js-std/from_u.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Ffrom_u.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Ffrom_u.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Ffrom_u.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/from_u.js"}, {"sha": "868ddd7b6dcebe3718507304c01f565f2edfe67c", "filename": "src/test/rustdoc-js-std/keyword.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fkeyword.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fkeyword.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fkeyword.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/keyword.js"}, {"sha": "242e0cbf5f4de12e8b11b3b26b9fa0e74f23d618", "filename": "src/test/rustdoc-js-std/macro-check.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fmacro-check.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fmacro-check.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fmacro-check.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/macro-check.js"}, {"sha": "858046e72e9a456518acb9d749bd972218101a00", "filename": "src/test/rustdoc-js-std/macro-print.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fmacro-print.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fmacro-print.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fmacro-print.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/macro-print.js"}, {"sha": "01e54065189c54e592c4a5281b1c246c896b20b2", "filename": "src/test/rustdoc-js-std/multi-query.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fmulti-query.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fmulti-query.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fmulti-query.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/multi-query.js"}, {"sha": "392b1e8183786a314e13d0b4dd9581c2bdeb2551", "filename": "src/test/rustdoc-js-std/never.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fnever.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fnever.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fnever.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/never.js"}, {"sha": "924129f86c8680214c07e2569cbea02aa2bc2a63", "filename": "src/test/rustdoc-js-std/quoted.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fquoted.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fquoted.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fquoted.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/quoted.js"}, {"sha": "b85a47dc08a88305ebda6e11be72fc199ce928b9", "filename": "src/test/rustdoc-js-std/should-fail.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fshould-fail.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fshould-fail.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fshould-fail.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/should-fail.js"}, {"sha": "f9edf4408db858f4578c1fb5c10b7c3462e275b0", "filename": "src/test/rustdoc-js-std/string-from_ut.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fstring-from_ut.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fstring-from_ut.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fstring-from_ut.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/string-from_ut.js"}, {"sha": "2c808143bae67fb434fda6307c5da81ef57d71c3", "filename": "src/test/rustdoc-js-std/struct-vec.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fstruct-vec.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fstruct-vec.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fstruct-vec.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/struct-vec.js"}, {"sha": "e4daa5065d2330cf302eb1c7ae2c0cf37b83a1de", "filename": "src/test/rustdoc-js-std/vec-new.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fvec-new.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js-std%2Fvec-new.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fvec-new.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js/vec-new.js"}, {"sha": "d99b23468b60cfa94361eac46317304aa7ae8332", "filename": "src/test/rustdoc-js/basic.js", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js%2Fbasic.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js%2Fbasic.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fbasic.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "patch": "@@ -1,15 +1,7 @@\n-const QUERY = 'String';\n+const QUERY = 'Fo';\n \n const EXPECTED = {\n     'others': [\n-        { 'path': 'std::string', 'name': 'String' },\n-        { 'path': 'std::ffi', 'name': 'CString' },\n-        { 'path': 'std::ffi', 'name': 'OsString' },\n-    ],\n-    'in_args': [\n-        { 'path': 'std::str', 'name': 'eq' },\n-    ],\n-    'returned': [\n-        { 'path': 'std::string::String', 'name': 'add' },\n+        { 'path': 'basic', 'name': 'Foo' },\n     ],\n };"}, {"sha": "4a835673a596bcd05404f43d34082bf2785f2a9d", "filename": "src/test/rustdoc-js/basic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftest%2Frustdoc-js%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fbasic.rs?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "previous_filename": "src/test/rustdoc-js-not-std/basic.rs"}, {"sha": "f49dd86c8c32d4bcbe5780a5011ae9cdc5895043", "filename": "src/tools/rustdoc-js-std/tester.js", "status": "renamed", "additions": 13, "deletions": 61, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftools%2Frustdoc-js-std%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftools%2Frustdoc-js-std%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js-std%2Ftester.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "patch": "@@ -1,7 +1,6 @@\n const fs = require('fs');\n-const { spawnSync } = require('child_process');\n \n-const TEST_FOLDER = 'src/test/rustdoc-js-not-std/';\n+const TEST_FOLDER = 'src/test/rustdoc-js-std/';\n \n function getNextStep(content, pos, stop) {\n     while (pos < content.length && content[pos] !== stop &&\n@@ -220,27 +219,17 @@ function lookForEntry(entry, data) {\n     return null;\n }\n \n-function remove_docs(out_dir) {\n-    spawnSync('rm', ['-rf', out_dir]);\n-}\n-\n-function build_docs(out_dir, rustdoc_path, file_to_document) {\n-    remove_docs(out_dir);\n-    var c = spawnSync(rustdoc_path, [file_to_document, '-o', out_dir]);\n-    var s = '';\n-    if (c.error || c.stderr.length > 0) {\n-        if (c.stderr.length > 0) {\n-            s += '==> STDERR: ' + c.stderr + '\\n';\n-        }\n-        s += '==> ERROR: ' + c.error;\n+function main(argv) {\n+    if (argv.length !== 3) {\n+        console.error(\"Expected toolchain to check as argument (for example \\\n+                       'x86_64-apple-darwin')\");\n+        return 1;\n     }\n-    return s;\n-}\n+    var toolchain = argv[2];\n \n-function load_files(out_folder, crate) {\n-    var mainJs = readFile(out_folder + \"/main.js\");\n-    var ALIASES = readFile(out_folder + \"/aliases.js\");\n-    var searchIndex = readFile(out_folder + \"/search-index.js\").split(\"\\n\");\n+    var mainJs = readFile(\"build/\" + toolchain + \"/doc/main.js\");\n+    var ALIASES = readFile(\"build/\" + toolchain + \"/doc/aliases.js\");\n+    var searchIndex = readFile(\"build/\" + toolchain + \"/doc/search-index.js\").split(\"\\n\");\n     if (searchIndex[searchIndex.length - 1].length === 0) {\n         searchIndex.pop();\n     }\n@@ -259,55 +248,19 @@ function load_files(out_folder, crate) {\n     var functionsToLoad = [\"buildHrefAndPath\", \"pathSplitter\", \"levenshtein\", \"validateResult\",\n                            \"getQuery\", \"buildIndex\", \"execQuery\", \"execSearch\"];\n \n-    finalJS += 'window = { \"currentCrate\": \"' + crate + '\" };\\n';\n+    finalJS += 'window = { \"currentCrate\": \"std\" };\\n';\n     finalJS += 'var rootPath = \"../\";\\n';\n     finalJS += ALIASES;\n     finalJS += loadThings(arraysToLoad, 'array', extractArrayVariable, mainJs);\n     finalJS += loadThings(variablesToLoad, 'variable', extractVariable, mainJs);\n     finalJS += loadThings(functionsToLoad, 'function', extractFunction, mainJs);\n \n     var loaded = loadContent(finalJS);\n-    return [loaded, loaded.buildIndex(searchIndex.searchIndex)];\n-}\n-\n-function main(argv) {\n-    if (argv.length !== 4) {\n-        console.error(\"USAGE: node tester.js [TOOLCHAIN] [STAGE]\");\n-        return 1;\n-    }\n-    const toolchain = argv[2];\n-    const stage = argv[3];\n-    const rustdoc_path = './build/' + toolchain + '/stage' + stage + '/bin/rustdoc';\n+    var index = loaded.buildIndex(searchIndex.searchIndex);\n \n     var errors = 0;\n \n     fs.readdirSync(TEST_FOLDER).forEach(function(file) {\n-        if (!file.endsWith('.js')) {\n-            return;\n-        }\n-        var test_name = file.substring(0, file.length - 3);\n-        process.stdout.write('Checking \"' + test_name + '\" ... ');\n-        var rust_file = TEST_FOLDER + test_name + '.rs';\n-\n-        if (!fs.existsSync(rust_file)) {\n-            console.error(\"FAILED\");\n-            console.error(\"==> Missing '\" + test_name + \".rs' file...\");\n-            errors += 1;\n-            return;\n-        }\n-\n-        var out_folder = \"build/\" + toolchain + \"/stage\" + stage + \"/tests/rustdoc-js-not-std/\" +\n-                         test_name;\n-\n-        var ret = build_docs(out_folder, rustdoc_path, rust_file);\n-        if (ret.length > 0) {\n-            console.error(\"FAILED\");\n-            console.error(ret);\n-            errors += 1;\n-            return;\n-        }\n-\n-        var [loaded, index] = load_files(out_folder, test_name);\n         var loadedFile = loadContent(readFile(TEST_FOLDER + file) +\n                                'exports.QUERY = QUERY;exports.EXPECTED = EXPECTED;');\n         const expected = loadedFile.EXPECTED;\n@@ -317,6 +270,7 @@ function main(argv) {\n         const exact_check = loadedFile.exact_check;\n         const should_fail = loadedFile.should_fail;\n         var results = loaded.execSearch(loaded.getQuery(query), index);\n+        process.stdout.write('Checking \"' + file + '\" ... ');\n         var error_text = [];\n         for (var key in expected) {\n             if (!expected.hasOwnProperty(key)) {\n@@ -354,8 +308,6 @@ function main(argv) {\n             console.error(\"FAILED\");\n             console.error(error_text.join(\"\\n\"));\n         } else {\n-            // In this case, we remove the docs, no need to keep them around.\n-            remove_docs(out_folder);\n             console.log(\"OK\");\n         }\n     });", "previous_filename": "src/tools/rustdoc-js-not-std/tester.js"}, {"sha": "f7c15eaf1b07de779aeb37c1e899d7aa1e6232ac", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 53, "deletions": 12, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/aa3ca321e92c541dce363634c9cea7cf23689a5e/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=aa3ca321e92c541dce363634c9cea7cf23689a5e", "patch": "@@ -1,4 +1,5 @@\n const fs = require('fs');\n+const { spawnSync } = require('child_process');\n \n const TEST_FOLDER = 'src/test/rustdoc-js/';\n \n@@ -219,17 +220,22 @@ function lookForEntry(entry, data) {\n     return null;\n }\n \n-function main(argv) {\n-    if (argv.length !== 3) {\n-        console.error(\"Expected toolchain to check as argument (for example \\\n-                       'x86_64-apple-darwin')\");\n-        return 1;\n+function build_docs(out_dir, rustdoc_path, file_to_document) {\n+    var c = spawnSync(rustdoc_path, [file_to_document, '-o', out_dir]);\n+    var s = '';\n+    if (c.error || c.stderr.length > 0) {\n+        if (c.stderr.length > 0) {\n+            s += '==> STDERR: ' + c.stderr + '\\n';\n+        }\n+        s += '==> ERROR: ' + c.error;\n     }\n-    var toolchain = argv[2];\n+    return s;\n+}\n \n-    var mainJs = readFile(\"build/\" + toolchain + \"/doc/main.js\");\n-    var ALIASES = readFile(\"build/\" + toolchain + \"/doc/aliases.js\");\n-    var searchIndex = readFile(\"build/\" + toolchain + \"/doc/search-index.js\").split(\"\\n\");\n+function load_files(out_folder, crate) {\n+    var mainJs = readFile(out_folder + \"/main.js\");\n+    var ALIASES = readFile(out_folder + \"/aliases.js\");\n+    var searchIndex = readFile(out_folder + \"/search-index.js\").split(\"\\n\");\n     if (searchIndex[searchIndex.length - 1].length === 0) {\n         searchIndex.pop();\n     }\n@@ -248,19 +254,55 @@ function main(argv) {\n     var functionsToLoad = [\"buildHrefAndPath\", \"pathSplitter\", \"levenshtein\", \"validateResult\",\n                            \"getQuery\", \"buildIndex\", \"execQuery\", \"execSearch\"];\n \n-    finalJS += 'window = { \"currentCrate\": \"std\" };\\n';\n+    finalJS += 'window = { \"currentCrate\": \"' + crate + '\" };\\n';\n     finalJS += 'var rootPath = \"../\";\\n';\n     finalJS += ALIASES;\n     finalJS += loadThings(arraysToLoad, 'array', extractArrayVariable, mainJs);\n     finalJS += loadThings(variablesToLoad, 'variable', extractVariable, mainJs);\n     finalJS += loadThings(functionsToLoad, 'function', extractFunction, mainJs);\n \n     var loaded = loadContent(finalJS);\n-    var index = loaded.buildIndex(searchIndex.searchIndex);\n+    return [loaded, loaded.buildIndex(searchIndex.searchIndex)];\n+}\n+\n+function main(argv) {\n+    if (argv.length !== 4) {\n+        console.error(\"USAGE: node tester.js [TOOLCHAIN] [STAGE]\");\n+        return 1;\n+    }\n+    const toolchain = argv[2];\n+    const stage = argv[3];\n+    const rustdoc_path = './build/' + toolchain + '/stage' + stage + '/bin/rustdoc';\n \n     var errors = 0;\n \n     fs.readdirSync(TEST_FOLDER).forEach(function(file) {\n+        if (!file.endsWith('.js')) {\n+            return;\n+        }\n+        var test_name = file.substring(0, file.length - 3);\n+        process.stdout.write('Checking \"' + test_name + '\" ... ');\n+        var rust_file = TEST_FOLDER + test_name + '.rs';\n+\n+        if (!fs.existsSync(rust_file)) {\n+            console.error(\"FAILED\");\n+            console.error(\"==> Missing '\" + test_name + \".rs' file...\");\n+            errors += 1;\n+            return;\n+        }\n+\n+        var out_folder = \"build/\" + toolchain + \"/stage\" + stage + \"/tests/rustdoc-js/\" +\n+                         test_name;\n+\n+        var ret = build_docs(out_folder, rustdoc_path, rust_file);\n+        if (ret.length > 0) {\n+            console.error(\"FAILED\");\n+            console.error(ret);\n+            errors += 1;\n+            return;\n+        }\n+\n+        var [loaded, index] = load_files(out_folder, test_name);\n         var loadedFile = loadContent(readFile(TEST_FOLDER + file) +\n                                'exports.QUERY = QUERY;exports.EXPECTED = EXPECTED;');\n         const expected = loadedFile.EXPECTED;\n@@ -270,7 +312,6 @@ function main(argv) {\n         const exact_check = loadedFile.exact_check;\n         const should_fail = loadedFile.should_fail;\n         var results = loaded.execSearch(loaded.getQuery(query), index);\n-        process.stdout.write('Checking \"' + file + '\" ... ');\n         var error_text = [];\n         for (var key in expected) {\n             if (!expected.hasOwnProperty(key)) {"}]}