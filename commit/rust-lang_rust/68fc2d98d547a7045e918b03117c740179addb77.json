{"sha": "68fc2d98d547a7045e918b03117c740179addb77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZmMyZDk4ZDU0N2E3MDQ1ZTkxOGIwMzExN2M3NDAxNzlhZGRiNzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-29T02:04:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-29T02:04:38Z"}, "message": "Auto merge of #27260 - alexcrichton:cap-lints, r=nrc\n\nThis commit is an implementation of [RFC 1193][rfc] which adds the ability to\r\nthe compiler to cap the lint level for the entire compilation session. This flag\r\nwill ensure that no lints will go above this level, and Cargo will primarily use\r\nthis flag passing `--cap-lints allow` to all upstream dependencies.\r\n\r\n[rfc]: https://github.com/rust-lang/rfcs/pull/1193\r\n\r\nCloses #27259", "tree": {"sha": "f2b05bb6d031c91e795138559bfc72257942d8fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2b05bb6d031c91e795138559bfc72257942d8fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68fc2d98d547a7045e918b03117c740179addb77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68fc2d98d547a7045e918b03117c740179addb77", "html_url": "https://github.com/rust-lang/rust/commit/68fc2d98d547a7045e918b03117c740179addb77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68fc2d98d547a7045e918b03117c740179addb77/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d432fbf10f53e00365ee83eae54c1705ce14237", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d432fbf10f53e00365ee83eae54c1705ce14237", "html_url": "https://github.com/rust-lang/rust/commit/8d432fbf10f53e00365ee83eae54c1705ce14237"}, {"sha": "b345437c3c1f73cc5c97544f07ab327abe86a2ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/b345437c3c1f73cc5c97544f07ab327abe86a2ed", "html_url": "https://github.com/rust-lang/rust/commit/b345437c3c1f73cc5c97544f07ab327abe86a2ed"}], "stats": {"total": 98, "additions": 97, "deletions": 1}, "files": [{"sha": "40ee023b7e86110c0ce68ba2a3d3c391c20805ee", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/68fc2d98d547a7045e918b03117c740179addb77/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fc2d98d547a7045e918b03117c740179addb77/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=68fc2d98d547a7045e918b03117c740179addb77", "patch": "@@ -34,6 +34,7 @@ use lint::builtin;\n use util::nodemap::FnvHashMap;\n \n use std::cell::RefCell;\n+use std::cmp;\n use std::mem;\n use syntax::ast_util::IdVisitingOperation;\n use syntax::attr::AttrMetaMethods;\n@@ -66,6 +67,9 @@ pub struct LintStore {\n     /// Map of registered lint groups to what lints they expand to. The bool\n     /// is true if the lint group was added by a plugin.\n     lint_groups: FnvHashMap<&'static str, (Vec<LintId>, bool)>,\n+\n+    /// Maximum level a lint can be\n+    lint_cap: Option<Level>,\n }\n \n /// The targed of the `by_name` map, which accounts for renaming/deprecation.\n@@ -94,7 +98,10 @@ impl LintStore {\n         }\n     }\n \n-    fn set_level(&mut self, lint: LintId, lvlsrc: LevelSource) {\n+    fn set_level(&mut self, lint: LintId, mut lvlsrc: LevelSource) {\n+        if let Some(cap) = self.lint_cap {\n+            lvlsrc.0 = cmp::min(lvlsrc.0, cap);\n+        }\n         if lvlsrc.0 == Allow {\n             self.levels.remove(&lint);\n         } else {\n@@ -109,6 +116,7 @@ impl LintStore {\n             by_name: FnvHashMap(),\n             levels: FnvHashMap(),\n             lint_groups: FnvHashMap(),\n+            lint_cap: None,\n         }\n     }\n \n@@ -227,6 +235,13 @@ impl LintStore {\n                 }\n             }\n         }\n+\n+        self.lint_cap = sess.opts.lint_cap;\n+        if let Some(cap) = self.lint_cap {\n+            for level in self.levels.iter_mut().map(|p| &mut (p.1).0) {\n+                *level = cmp::min(*level, cap);\n+            }\n+        }\n     }\n }\n "}, {"sha": "260c85d4d34f237e5bc74d9d298811a2135e1ac4", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/68fc2d98d547a7045e918b03117c740179addb77/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fc2d98d547a7045e918b03117c740179addb77/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=68fc2d98d547a7045e918b03117c740179addb77", "patch": "@@ -84,6 +84,7 @@ pub struct Options {\n     pub debug_assertions: bool,\n     pub debuginfo: DebugInfoLevel,\n     pub lint_opts: Vec<(String, lint::Level)>,\n+    pub lint_cap: Option<lint::Level>,\n     pub describe_lints: bool,\n     pub output_types: Vec<OutputType>,\n     // This was mutable for rustpkg, which updates search paths based on the\n@@ -203,6 +204,7 @@ pub fn basic_options() -> Options {\n         optimize: No,\n         debuginfo: NoDebugInfo,\n         lint_opts: Vec::new(),\n+        lint_cap: None,\n         describe_lints: false,\n         output_types: Vec::new(),\n         search_paths: SearchPaths::new(),\n@@ -794,6 +796,9 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n         opt::multi(\"A\", \"allow\", \"Set lint allowed\", \"OPT\"),\n         opt::multi(\"D\", \"deny\", \"Set lint denied\", \"OPT\"),\n         opt::multi(\"F\", \"forbid\", \"Set lint forbidden\", \"OPT\"),\n+        opt::multi(\"\", \"cap-lints\", \"Set the most restrictive lint level. \\\n+                                     More restrictive lints are capped at this \\\n+                                     level\", \"LEVEL\"),\n         opt::multi(\"C\", \"codegen\", \"Set a codegen option\", \"OPT[=VALUE]\"),\n         opt::flag(\"V\", \"version\", \"Print version info and exit\"),\n         opt::flag(\"v\", \"verbose\", \"Use verbose output\"),\n@@ -862,6 +867,12 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         }\n     }\n \n+    let lint_cap = matches.opt_str(\"cap-lints\").map(|cap| {\n+        lint::Level::from_str(&cap).unwrap_or_else(|| {\n+            early_error(&format!(\"unknown lint level: `{}`\", cap))\n+        })\n+    });\n+\n     let debugging_opts = build_debugging_options(matches);\n \n     let parse_only = debugging_opts.parse_only;\n@@ -1025,6 +1036,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         optimize: opt_level,\n         debuginfo: debuginfo,\n         lint_opts: lint_opts,\n+        lint_cap: lint_cap,\n         describe_lints: describe_lints,\n         output_types: output_types,\n         search_paths: search_paths,"}, {"sha": "cb9c347af603c1e42e57170808a54ee94915ea8f", "filename": "src/test/compile-fail/bad-lint-cap.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap.rs?ref=68fc2d98d547a7045e918b03117c740179addb77", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --cap-lints test\n+// error-pattern: unknown lint level: `test`\n+\n+fn main() {}"}, {"sha": "5a97d7b1a79a186ad2a88f136a52f023ed2fc779", "filename": "src/test/compile-fail/bad-lint-cap2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap2.rs?ref=68fc2d98d547a7045e918b03117c740179addb77", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --cap-lints deny\n+\n+#![deny(warnings)]\n+\n+use std::option; //~ ERROR\n+\n+fn main() {}"}, {"sha": "e03ba6ecb6440fd278bd82ddc9084770ab0ff3cb", "filename": "src/test/compile-fail/bad-lint-cap3.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-lint-cap3.rs?ref=68fc2d98d547a7045e918b03117c740179addb77", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --cap-lints warn\n+\n+#![deny(warnings)]\n+#![feature(rustc_attrs)]\n+\n+use std::option; //~ WARN\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR: compilation successful\n+"}, {"sha": "003a99f746a59b18f451ca47919dd2bf004edcf9", "filename": "src/test/run-pass/lint-cap.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Frun-pass%2Flint-cap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fc2d98d547a7045e918b03117c740179addb77/src%2Ftest%2Frun-pass%2Flint-cap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flint-cap.rs?ref=68fc2d98d547a7045e918b03117c740179addb77", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --cap-lints allow\n+\n+#![deny(warnings)]\n+\n+use std::option;\n+\n+fn main() {}\n+"}]}