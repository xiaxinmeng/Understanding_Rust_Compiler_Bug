{"sha": "4a33ece38216a42764a0c74ae99baf183b888817", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhMzNlY2UzODIxNmE0Mjc2NGEwYzc0YWU5OWJhZjE4M2I4ODg4MTc=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-13T16:57:02Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-13T16:57:02Z"}, "message": "Remove blank lines in AsRef documentation", "tree": {"sha": "20e1576bba8a115a9d2714714ea279d705d8e969", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e1576bba8a115a9d2714714ea279d705d8e969"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a33ece38216a42764a0c74ae99baf183b888817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a33ece38216a42764a0c74ae99baf183b888817", "html_url": "https://github.com/rust-lang/rust/commit/4a33ece38216a42764a0c74ae99baf183b888817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a33ece38216a42764a0c74ae99baf183b888817/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b701d32ca80e58d41cadc18755567794d5e65bd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b701d32ca80e58d41cadc18755567794d5e65bd9", "html_url": "https://github.com/rust-lang/rust/commit/b701d32ca80e58d41cadc18755567794d5e65bd9"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "e04c01e50c0bce1c683955b827434ca930d551be", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a33ece38216a42764a0c74ae99baf183b888817/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a33ece38216a42764a0c74ae99baf183b888817/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=4a33ece38216a42764a0c74ae99baf183b888817", "patch": "@@ -104,7 +104,6 @@ pub const fn identity<T>(x: T) -> T { x }\n /// If you need to do a costly conversion it is better to implement [`From`] with type\n /// `&T` or write a custom function.\n ///\n-///\n /// `AsRef` has the same signature as [`Borrow`], but `Borrow` is different in few aspects:\n ///\n /// - Unlike `AsRef`, `Borrow` has a blanket impl for any `T`, and can be used to accept either\n@@ -149,7 +148,6 @@ pub const fn identity<T>(x: T) -> T { x }\n /// let s = \"hello\".to_string();\n /// is_hello(s);\n /// ```\n-///\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait AsRef<T: ?Sized> {\n     /// Performs the conversion."}]}