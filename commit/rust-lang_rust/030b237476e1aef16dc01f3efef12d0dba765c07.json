{"sha": "030b237476e1aef16dc01f3efef12d0dba765c07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMGIyMzc0NzZlMWFlZjE2ZGMwMWYzZWZlZjEyZDBkYmE3NjVjMDc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-05T08:35:00Z"}, "committer": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-09T15:53:42Z"}, "message": "refactor `MirPass` to always require a tcx", "tree": {"sha": "25102c57cbd237dae74c383f988ed3416d0f4ca5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25102c57cbd237dae74c383f988ed3416d0f4ca5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/030b237476e1aef16dc01f3efef12d0dba765c07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/030b237476e1aef16dc01f3efef12d0dba765c07", "html_url": "https://github.com/rust-lang/rust/commit/030b237476e1aef16dc01f3efef12d0dba765c07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/030b237476e1aef16dc01f3efef12d0dba765c07/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "html_url": "https://github.com/rust-lang/rust/commit/41c892f5e141a4bd34252ec46f3b9debc3cdafdd"}], "stats": {"total": 58, "additions": 36, "deletions": 22}, "files": [{"sha": "53fd867e7fd487158d6a3002a5b2ea9dab468655", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=030b237476e1aef16dc01f3efef12d0dba765c07", "patch": "@@ -126,6 +126,7 @@ pub mod mir {\n     pub mod repr;\n     pub mod tcx;\n     pub mod visit;\n+    pub mod transform;\n     pub mod mir_map;\n }\n "}, {"sha": "0f18d8d282144428ff91f75689fad2a6dd4cf099", "filename": "src/librustc/mir/transform.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc%2Fmir%2Ftransform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc%2Fmir%2Ftransform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftransform.rs?ref=030b237476e1aef16dc01f3efef12d0dba765c07", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use mir::repr::Mir;\n+use middle::ty::ctxt;\n+\n+pub trait MirPass {\n+    fn run_on_mir<'tcx>(&mut self, mir: &mut Mir<'tcx>, tcx: &ctxt<'tcx>);\n+}"}, {"sha": "0e641bf679d1187c40cea7ac308cb3bb6b12b225", "filename": "src/librustc_mir/mir_map.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Fmir_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Fmir_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmir_map.rs?ref=030b237476e1aef16dc01f3efef12d0dba765c07", "patch": "@@ -22,12 +22,13 @@ extern crate rustc_front;\n use build;\n use graphviz;\n use pretty;\n-use transform::{simplify_cfg, MirPass};\n+use transform::simplify_cfg;\n use rustc::dep_graph::DepNode;\n use rustc::mir::repr::Mir;\n use hair::cx::Cx;\n use std::fs::File;\n \n+use rustc::mir::transform::MirPass;\n use rustc::mir::mir_map::MirMap;\n use rustc::middle::infer;\n use rustc::middle::region::CodeExtentData;\n@@ -147,7 +148,7 @@ impl<'a, 'm, 'tcx> Visitor<'tcx> for InnerDump<'a,'m,'tcx> {\n \n         match build_mir(Cx::new(&infcx), implicit_arg_tys, id, span, decl, body) {\n             Ok(mut mir) => {\n-                simplify_cfg::SimplifyCfg::new().run_on_mir(&mut mir);\n+                simplify_cfg::SimplifyCfg::new().run_on_mir(&mut mir, self.tcx);\n \n                 let meta_item_list = self.attr\n                                          .iter()"}, {"sha": "b927ab489f100c55aad8124089d118f55ccac317", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=030b237476e1aef16dc01f3efef12d0dba765c07", "patch": "@@ -15,24 +15,26 @@\n use rustc::middle::ty;\n use rustc::mir::repr::*;\n use rustc::mir::visit::MutVisitor;\n-use transform::MirPass;\n use rustc::mir::mir_map::MirMap;\n+use rustc::mir::transform::MirPass;\n \n pub fn erase_regions<'tcx>(tcx: &ty::ctxt<'tcx>, mir_map: &mut MirMap<'tcx>) {\n-    let mut eraser = EraseRegions::new(tcx);\n+    let mut eraser = EraseRegions;\n \n-        eraser.run_on_mir(mir);\n     for (_, mir) in &mut mir_map.map {\n+        eraser.run_on_mir(mir, tcx);\n     }\n }\n \n-pub struct EraseRegions<'a, 'tcx: 'a> {\n+pub struct EraseRegions;\n+\n+struct EraseRegionsVisitor<'a, 'tcx: 'a> {\n     tcx: &'a ty::ctxt<'tcx>,\n }\n \n-impl<'a, 'tcx> EraseRegions<'a, 'tcx> {\n-    pub fn new(tcx: &'a ty::ctxt<'tcx>) -> EraseRegions<'a, 'tcx> {\n-        EraseRegions {\n+impl<'a, 'tcx> EraseRegionsVisitor<'a, 'tcx> {\n+    pub fn new(tcx: &'a ty::ctxt<'tcx>) -> Self {\n+        EraseRegionsVisitor {\n             tcx: tcx\n         }\n     }\n@@ -56,13 +58,13 @@ impl<'a, 'tcx> EraseRegions<'a, 'tcx> {\n     }\n }\n \n-impl<'a, 'tcx> MirPass<'tcx> for EraseRegions<'a, 'tcx> {\n-    fn run_on_mir(&mut self, mir: &mut Mir<'tcx>) {\n-        self.visit_mir(mir);\n+impl MirPass for EraseRegions {\n+    fn run_on_mir<'tcx>(&mut self, mir: &mut Mir<'tcx>, tcx: &ty::ctxt<'tcx>) {\n+        EraseRegionsVisitor::new(tcx).visit_mir(mir);\n     }\n }\n \n-impl<'a, 'tcx> MutVisitor<'tcx> for EraseRegions<'a, 'tcx> {\n+impl<'a, 'tcx> MutVisitor<'tcx> for EraseRegionsVisitor<'a, 'tcx> {\n     fn visit_mir(&mut self, mir: &mut Mir<'tcx>) {\n         self.erase_regions_return_ty(&mut mir.return_ty);\n         self.erase_regions_tys(mir.var_decls.iter_mut().map(|d| &mut d.ty));"}, {"sha": "41ea4469734f77f7d6c9691eea3efa9cd332995b", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=030b237476e1aef16dc01f3efef12d0dba765c07", "patch": "@@ -11,9 +11,3 @@\n pub mod simplify_cfg;\n pub mod erase_regions;\n mod util;\n-\n-use rustc::mir::repr::Mir;\n-\n-pub trait MirPass<'tcx> {\n-    fn run_on_mir(&mut self, mir: &mut Mir<'tcx>);\n-}"}, {"sha": "17c5b5f7c3cffec94bc4eb95889bb4f7bc7ef1c1", "filename": "src/librustc_mir/transform/simplify_cfg.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030b237476e1aef16dc01f3efef12d0dba765c07/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs?ref=030b237476e1aef16dc01f3efef12d0dba765c07", "patch": "@@ -11,7 +11,7 @@\n use rustc::middle::const_eval::ConstVal;\n use rustc::mir::repr::*;\n use transform::util;\n-use transform::MirPass;\n+use rustc::mir::transform::MirPass;\n \n pub struct SimplifyCfg;\n \n@@ -118,8 +118,8 @@ impl SimplifyCfg {\n     }\n }\n \n-impl<'tcx> MirPass<'tcx> for SimplifyCfg {\n-    fn run_on_mir(&mut self, mir: &mut Mir<'tcx>) {\n+impl MirPass for SimplifyCfg {\n+    fn run_on_mir<'tcx>(&mut self, mir: &mut Mir<'tcx>, _: &::rustc::middle::ty::ctxt<'tcx>) {\n         let mut changed = true;\n         while changed {\n             changed = self.simplify_branches(mir);"}]}