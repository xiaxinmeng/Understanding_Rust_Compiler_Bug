{"sha": "080a53a9533de30c614f37d006985c2f26fd30e7", "node_id": "C_kwDOAAsO6NoAKDA4MGE1M2E5NTMzZGUzMGM2MTRmMzdkMDA2OTg1YzJmMjZmZDMwZTc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-13T00:43:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-14T15:37:22Z"}, "message": "add missing null ptr check in alloc example", "tree": {"sha": "eef4e0749cb3d5d2397fc7f4a956394d8b9a68b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef4e0749cb3d5d2397fc7f4a956394d8b9a68b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/080a53a9533de30c614f37d006985c2f26fd30e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/080a53a9533de30c614f37d006985c2f26fd30e7", "html_url": "https://github.com/rust-lang/rust/commit/080a53a9533de30c614f37d006985c2f26fd30e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/080a53a9533de30c614f37d006985c2f26fd30e7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3f4c3119957aa0a250cab08ab586b7a9a680ef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f4c3119957aa0a250cab08ab586b7a9a680ef1", "html_url": "https://github.com/rust-lang/rust/commit/b3f4c3119957aa0a250cab08ab586b7a9a680ef1"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "efdc86bf57a8af6e1eb32f0092551da6fd0920e5", "filename": "library/alloc/src/alloc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/080a53a9533de30c614f37d006985c2f26fd30e7/library%2Falloc%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/080a53a9533de30c614f37d006985c2f26fd30e7/library%2Falloc%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Falloc.rs?ref=080a53a9533de30c614f37d006985c2f26fd30e7", "patch": "@@ -70,11 +70,14 @@ pub use std::alloc::Global;\n /// # Examples\n ///\n /// ```\n-/// use std::alloc::{alloc, dealloc, Layout};\n+/// use std::alloc::{alloc, dealloc, handle_alloc_error, Layout};\n ///\n /// unsafe {\n ///     let layout = Layout::new::<u16>();\n ///     let ptr = alloc(layout);\n+///     if ptr.is_null() {\n+///         handle_alloc_error(layout);\n+///     }\n ///\n ///     *(ptr as *mut u16) = 42;\n ///     assert_eq!(*(ptr as *mut u16), 42);"}]}