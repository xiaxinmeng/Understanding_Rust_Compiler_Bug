{"sha": "5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "node_id": "C_kwDOAAsO6NoAKDVkNjNlMTAzMThlYTc2ZWZjNGQ0ZDZhMzNjZjFmNzRjOTgzOWFkZmI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-02-01T17:38:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-02-14T20:22:10Z"}, "message": "rebase and review comments", "tree": {"sha": "7bac8c472be48675a1b63380f9cb31c43c246c24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bac8c472be48675a1b63380f9cb31c43c246c24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "html_url": "https://github.com/rust-lang/rust/commit/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287cd5974c3fc7c885500036ffc8305ac978bede", "url": "https://api.github.com/repos/rust-lang/rust/commits/287cd5974c3fc7c885500036ffc8305ac978bede", "html_url": "https://github.com/rust-lang/rust/commit/287cd5974c3fc7c885500036ffc8305ac978bede"}], "stats": {"total": 113, "additions": 56, "deletions": 57}, "files": [{"sha": "9ed8ab67431c05b9a51a9bb4fa1f6310b0e2050d", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -612,7 +612,7 @@ impl Diagnostic {\n     pub fn multipart_suggestion_with_style(\n         &mut self,\n         msg: impl Into<SubdiagnosticMessage>,\n-        mut suggestion: Vec<(Span, String)>,\n+        suggestion: Vec<(Span, String)>,\n         applicability: Applicability,\n         style: SuggestionStyle,\n     ) -> &mut Self {\n@@ -634,7 +634,6 @@ impl Diagnostic {\n             None,\n             \"suggestion must not have overlapping parts\",\n         );\n-        suggestion.sort_by_key(|(span, _)| (span.lo(), span.hi()));\n \n         self.push_suggestion(CodeSuggestion {\n             substitutions: vec![Substitution { parts }],"}, {"sha": "21f236db7dce2fa16084b793147385bb14e99a57", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -930,7 +930,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         \"\".to_string()\n                     };\n                     labels\n-                        .push((provided_span, format!(\"argument{} unexpected\", provided_ty_name)));\n+                        .push((provided_span, format!(\"unexpected argument{}\", provided_ty_name)));\n                     let mut span = provided_span;\n                     if arg_idx.index() > 0\n                         && let Some((_, prev)) = provided_arg_tys"}, {"sha": "9f568f86970049a8a23c28964bcd8a6bfa8e91cc", "filename": "tests/ui/alloc-error/alloc-error-handler-bad-signature-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-3.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -7,7 +7,7 @@ LL |   fn oom() -> ! {\n    |  _-^^^^^^^^^^^^\n LL | |     loop {}\n LL | | }\n-   | |_- argument of type `core::alloc::Layout` unexpected\n+   | |_- unexpected argument of type `core::alloc::Layout`\n    |\n note: function defined here\n   --> $DIR/alloc-error-handler-bad-signature-3.rs:10:4"}, {"sha": "ea58ca97cfaf81a1ab692f3ac7d61ed6d80d9e19", "filename": "tests/ui/argument-suggestions/basic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fbasic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fbasic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fbasic.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -16,7 +16,7 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/basic.rs:21:5\n    |\n LL |     extra(\"\");\n-   |     ^^^^^ -- argument of type `&'static str` unexpected\n+   |     ^^^^^ -- unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/basic.rs:14:4"}, {"sha": "aca3b8a343343c65c94f698017891001de372876", "filename": "tests/ui/argument-suggestions/exotic-calls.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:2:5\n    |\n LL |     t(1i32);\n-   |     ^ ---- argument of type `i32` unexpected\n+   |     ^ ---- unexpected argument of type `i32`\n    |\n note: callable defined here\n   --> $DIR/exotic-calls.rs:1:11\n@@ -19,7 +19,7 @@ error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:7:5\n    |\n LL |     t(1i32);\n-   |     ^ ---- argument of type `i32` unexpected\n+   |     ^ ---- unexpected argument of type `i32`\n    |\n note: type parameter defined here\n   --> $DIR/exotic-calls.rs:6:11\n@@ -36,7 +36,7 @@ error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:16:5\n    |\n LL |     baz()(1i32)\n-   |     ^^^^^ ---- argument of type `i32` unexpected\n+   |     ^^^^^ ---- unexpected argument of type `i32`\n    |\n note: opaque type defined here\n   --> $DIR/exotic-calls.rs:11:13\n@@ -53,7 +53,7 @@ error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:22:5\n    |\n LL |     x(1i32);\n-   |     ^ ---- argument of type `i32` unexpected\n+   |     ^ ---- unexpected argument of type `i32`\n    |\n note: closure defined here\n   --> $DIR/exotic-calls.rs:21:13"}, {"sha": "34e849e85ccba7a7b02ca11aa02abdd2ddeaac73", "filename": "tests/ui/argument-suggestions/extra_arguments.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/extra_arguments.rs:7:3\n    |\n LL |   empty(\"\");\n-   |   ^^^^^ -- argument of type `&'static str` unexpected\n+   |   ^^^^^ -- unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:1:4\n@@ -19,7 +19,7 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/extra_arguments.rs:9:3\n    |\n LL |   one_arg(1, 1);\n-   |   ^^^^^^^    - argument of type `{integer}` unexpected\n+   |   ^^^^^^^    - unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:2:4\n@@ -36,7 +36,7 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/extra_arguments.rs:10:3\n    |\n LL |   one_arg(1, \"\");\n-   |   ^^^^^^^    -- argument of type `&'static str` unexpected\n+   |   ^^^^^^^    -- unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:2:4\n@@ -53,9 +53,9 @@ error[E0061]: this function takes 1 argument but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:11:3\n    |\n LL |   one_arg(1, \"\", 1.0);\n-   |   ^^^^^^^    --  --- argument of type `{float}` unexpected\n+   |   ^^^^^^^    --  --- unexpected argument of type `{float}`\n    |              |\n-   |              argument of type `&'static str` unexpected\n+   |              unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:2:4\n@@ -72,7 +72,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:13:3\n    |\n LL |   two_arg_same(1, 1, 1);\n-   |   ^^^^^^^^^^^^       - argument of type `{integer}` unexpected\n+   |   ^^^^^^^^^^^^       - unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n@@ -89,7 +89,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:14:3\n    |\n LL |   two_arg_same(1, 1, 1.0);\n-   |   ^^^^^^^^^^^^       --- argument of type `{float}` unexpected\n+   |   ^^^^^^^^^^^^       --- unexpected argument of type `{float}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n@@ -106,7 +106,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:16:3\n    |\n LL |   two_arg_diff(1, 1, \"\");\n-   |   ^^^^^^^^^^^^    - argument of type `{integer}` unexpected\n+   |   ^^^^^^^^^^^^    - unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n@@ -123,7 +123,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:17:3\n    |\n LL |   two_arg_diff(1, \"\", \"\");\n-   |   ^^^^^^^^^^^^        -- argument of type `&'static str` unexpected\n+   |   ^^^^^^^^^^^^        -- unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n@@ -140,9 +140,9 @@ error[E0061]: this function takes 2 arguments but 4 arguments were supplied\n   --> $DIR/extra_arguments.rs:18:3\n    |\n LL |   two_arg_diff(1, 1, \"\", \"\");\n-   |   ^^^^^^^^^^^^    -      -- argument of type `&'static str` unexpected\n+   |   ^^^^^^^^^^^^    -      -- unexpected argument of type `&'static str`\n    |                   |\n-   |                   argument of type `{integer}` unexpected\n+   |                   unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n@@ -159,9 +159,9 @@ error[E0061]: this function takes 2 arguments but 4 arguments were supplied\n   --> $DIR/extra_arguments.rs:19:3\n    |\n LL |   two_arg_diff(1, \"\", 1, \"\");\n-   |   ^^^^^^^^^^^^        -  -- argument of type `&'static str` unexpected\n+   |   ^^^^^^^^^^^^        -  -- unexpected argument of type `&'static str`\n    |                       |\n-   |                       argument of type `{integer}` unexpected\n+   |                       unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n@@ -178,7 +178,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:22:3\n    |\n LL |   two_arg_same(1, 1,     \"\");\n-   |   ^^^^^^^^^^^^           -- argument of type `&'static str` unexpected\n+   |   ^^^^^^^^^^^^           -- unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n@@ -195,7 +195,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:23:3\n    |\n LL |   two_arg_diff(1, 1,     \"\");\n-   |   ^^^^^^^^^^^^    - argument of type `{integer}` unexpected\n+   |   ^^^^^^^^^^^^    - unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n@@ -215,7 +215,7 @@ LL |   two_arg_same(\n    |   ^^^^^^^^^^^^\n ...\n LL |     \"\"\n-   |     -- argument of type `&'static str` unexpected\n+   |     -- unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n@@ -235,7 +235,7 @@ LL |   two_arg_diff(\n    |   ^^^^^^^^^^^^\n LL |     1,\n LL |     1,\n-   |     - argument of type `{integer}` unexpected\n+   |     - unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4"}, {"sha": "061f510144bda630423bbecc95277adef416d6a2", "filename": "tests/ui/argument-suggestions/issue-101097.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fissue-101097.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fissue-101097.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fissue-101097.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -4,7 +4,7 @@ error[E0061]: this function takes 6 arguments but 7 arguments were supplied\n LL |     f(C, A, A, A, B, B, C);\n    |     ^ -     -  -  - expected `C`, found `B`\n    |       |     |  |\n-   |       |     |  argument of type `A` unexpected\n+   |       |     |  unexpected argument of type `A`\n    |       |     expected `B`, found `A`\n    |       expected `A`, found `C`\n    |\n@@ -64,8 +64,8 @@ error[E0308]: arguments to this function are incorrect\n LL |     f(A, A, D, D, B, B);\n    |     ^       -  -  ---- two arguments of type `C` and `C` are missing\n    |             |  |\n-   |             |  argument of type `D` unexpected\n-   |             argument of type `D` unexpected\n+   |             |  unexpected argument of type `D`\n+   |             unexpected argument of type `D`\n    |\n note: function defined here\n   --> $DIR/issue-101097.rs:6:4"}, {"sha": "a86cbbf1802e17d66cea042c9255441bb338962e", "filename": "tests/ui/argument-suggestions/issue-97484.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fissue-97484.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,11 +2,11 @@ error[E0061]: this function takes 4 arguments but 7 arguments were supplied\n   --> $DIR/issue-97484.rs:12:5\n    |\n LL |     foo(&&A, B, C, D, E, F, G);\n-   |     ^^^      -  -     -  - argument of type `F` unexpected\n+   |     ^^^      -  -     -  - unexpected argument of type `F`\n    |              |  |     |\n    |              |  |     expected `&E`, found `E`\n-   |              |  argument of type `C` unexpected\n-   |              argument of type `B` unexpected\n+   |              |  unexpected argument of type `C`\n+   |              unexpected argument of type `B`\n    |\n note: function defined here\n   --> $DIR/issue-97484.rs:9:4"}, {"sha": "c645dd381792953442bc300a50b0bd440aa07780", "filename": "tests/ui/argument-suggestions/mixed_cases.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/mixed_cases.rs:10:3\n    |\n LL |   two_args(1, \"\", X {});\n-   |   ^^^^^^^^    --  ---- argument of type `X` unexpected\n+   |   ^^^^^^^^    --  ---- unexpected argument of type `X`\n    |               |\n    |               expected `f32`, found `&str`\n    |\n@@ -21,9 +21,9 @@ error[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> $DIR/mixed_cases.rs:11:3\n    |\n LL |   three_args(1, \"\", X {}, \"\");\n-   |   ^^^^^^^^^^    --  ----  -- argument of type `&'static str` unexpected\n+   |   ^^^^^^^^^^    --  ----  -- unexpected argument of type `&'static str`\n    |                 |   |\n-   |                 |   argument of type `X` unexpected\n+   |                 |   unexpected argument of type `X`\n    |                 an argument of type `f32` is missing\n    |\n note: function defined here\n@@ -59,7 +59,7 @@ error[E0308]: arguments to this function are incorrect\n   --> $DIR/mixed_cases.rs:17:3\n    |\n LL |   three_args(1, \"\", X {});\n-   |   ^^^^^^^^^^    --  ---- argument of type `X` unexpected\n+   |   ^^^^^^^^^^    --  ---- unexpected argument of type `X`\n    |                 |\n    |                 an argument of type `f32` is missing\n    |"}, {"sha": "efd2af6d609bd840660c33690e839692d32a5502", "filename": "tests/ui/error-codes/E0057.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ferror-codes%2FE0057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ferror-codes%2FE0057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0057.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -18,7 +18,7 @@ error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/E0057.rs:5:13\n    |\n LL |     let c = f(2, 3);\n-   |             ^    - argument of type `{integer}` unexpected\n+   |             ^    - unexpected argument of type `{integer}`\n    |\n note: closure defined here\n   --> $DIR/E0057.rs:2:13"}, {"sha": "50c502c527e7713443f8a20b1abfe259a93ef24a", "filename": "tests/ui/issues/issue-16939.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-16939.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-16939.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-16939.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/issue-16939.rs:5:9\n    |\n LL |     |t| f(t);\n-   |         ^ - argument unexpected\n+   |         ^ - unexpected argument\n    |\n note: callable defined here\n   --> $DIR/issue-16939.rs:4:12"}, {"sha": "abf3543ddb9f8c85f4d2def2baaf3865229960f5", "filename": "tests/ui/issues/issue-26094.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-26094.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-26094.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-26094.rs?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -1,6 +1,6 @@\n macro_rules! some_macro {\n     ($other: expr) => ({\n-        $other(None) //~ NOTE argument of type `Option<_>` unexpected\n+        $other(None) //~ NOTE unexpected argument of type `Option<_>`\n     })\n }\n "}, {"sha": "074cf31dda6f167852c1bfc08b734c1bb1fa1785", "filename": "tests/ui/issues/issue-26094.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-26094.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-26094.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-26094.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/issue-26094.rs:10:17\n    |\n LL |         $other(None)\n-   |                ---- argument of type `Option<_>` unexpected\n+   |                ---- unexpected argument of type `Option<_>`\n ...\n LL |     some_macro!(some_function);\n    |                 ^^^^^^^^^^^^^"}, {"sha": "2853fd9b7fb2beb9166ad6f4b9ce69e296294320", "filename": "tests/ui/issues/issue-4935.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-4935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fissues%2Fissue-4935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-4935.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/issue-4935.rs:5:13\n    |\n LL | fn main() { foo(5, 6) }\n-   |             ^^^    - argument of type `{integer}` unexpected\n+   |             ^^^    - unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/issue-4935.rs:3:4"}, {"sha": "e33efac938a999fb5f908aff18fbebba10542b39", "filename": "tests/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this method takes 0 arguments but 1 argument was supplied\n   --> $DIR/method-call-err-msg.rs:13:7\n    |\n LL |     x.zero(0)\n-   |       ^^^^ - argument of type `{integer}` unexpected\n+   |       ^^^^ - unexpected argument of type `{integer}`\n    |\n note: associated function defined here\n   --> $DIR/method-call-err-msg.rs:5:8"}, {"sha": "cd483e7ad2c6470984b1df1c5600b004fb5e2256", "filename": "tests/ui/mismatched_types/overloaded-calls-bad.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -32,7 +32,7 @@ error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/overloaded-calls-bad.rs:37:15\n    |\n LL |     let ans = s(\"burma\", \"shave\");\n-   |               ^ -------  ------- argument of type `&'static str` unexpected\n+   |               ^ -------  ------- unexpected argument of type `&'static str`\n    |                 |\n    |                 expected `isize`, found `&str`\n    |"}, {"sha": "0477faad46f066731ee08f87fb4c592b1df1cee8", "filename": "tests/ui/resolve/resolve-primitive-fallback.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -24,7 +24,7 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/resolve-primitive-fallback.rs:3:5\n    |\n LL |     std::mem::size_of(u16);\n-   |     ^^^^^^^^^^^^^^^^^ --- argument unexpected\n+   |     ^^^^^^^^^^^^^^^^^ --- unexpected argument\n    |\n note: function defined here\n   --> $SRC_DIR/core/src/mem/mod.rs:LL:COL"}, {"sha": "89c67719b5ae22ff16d5e788653f4ce18277b67f", "filename": "tests/ui/span/issue-34264.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fspan%2Fissue-34264.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fspan%2Fissue-34264.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2Fissue-34264.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -54,7 +54,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/issue-34264.rs:7:5\n    |\n LL |     foo(Some(42), 2, \"\");\n-   |     ^^^              -- argument of type `&'static str` unexpected\n+   |     ^^^              -- unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/issue-34264.rs:1:4\n@@ -85,7 +85,7 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/issue-34264.rs:10:5\n    |\n LL |     bar(1, 2, 3);\n-   |     ^^^       - argument of type `{integer}` unexpected\n+   |     ^^^       - unexpected argument of type `{integer}`\n    |\n note: function defined here\n   --> $DIR/issue-34264.rs:3:4"}, {"sha": "510b99bb5af73f5d3295519fbaccfd431e36ebb7", "filename": "tests/ui/suggestions/args-instead-of-tuple-errors.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:6:34\n    |\n LL |     let _: Option<(i32, bool)> = Some(1, 2);\n-   |                                  ^^^^    - argument of type `{integer}` unexpected\n+   |                                  ^^^^    - unexpected argument of type `{integer}`\n    |\n note: expected `(i32, bool)`, found integer\n   --> $DIR/args-instead-of-tuple-errors.rs:6:39\n@@ -30,7 +30,7 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:8:5\n    |\n LL |     int_bool(1, 2);\n-   |     ^^^^^^^^    - argument of type `{integer}` unexpected\n+   |     ^^^^^^^^    - unexpected argument of type `{integer}`\n    |\n note: expected `(i32, bool)`, found integer\n   --> $DIR/args-instead-of-tuple-errors.rs:8:14"}, {"sha": "7143c959478b47d4df505125c071a3f797c7a00d", "filename": "tests/ui/tuple/wrong_argument_ice-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this method takes 1 argument but 2 arguments were supplied\n   --> $DIR/wrong_argument_ice-3.rs:9:16\n    |\n LL |         groups.push(new_group, vec![process]);\n-   |                ^^^^            ------------- argument of type `Vec<&Process>` unexpected\n+   |                ^^^^            ------------- unexpected argument of type `Vec<&Process>`\n    |\n note: expected `(Vec<String>, Vec<Process>)`, found `Vec<String>`\n   --> $DIR/wrong_argument_ice-3.rs:9:21"}, {"sha": "f2e3b416545dc3bc1ff7bb62d5d3dddcda942319", "filename": "tests/ui/tuple/wrong_argument_ice-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -6,7 +6,7 @@ LL |       (|| {})(|| {\n LL | |\n LL | |         let b = 1;\n LL | |     });\n-   | |_____- argument of type `[closure@$DIR/wrong_argument_ice-4.rs:2:13: 2:15]` unexpected\n+   | |_____- unexpected argument of type `[closure@$DIR/wrong_argument_ice-4.rs:2:13: 2:15]`\n    |\n note: closure defined here\n   --> $DIR/wrong_argument_ice-4.rs:2:6"}, {"sha": "6c5447a62ea8d95e9f4118b024bc391cb21aa579", "filename": "tests/ui/type/type-ascription-instead-of-initializer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -11,7 +11,7 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/type-ascription-instead-of-initializer.rs:2:12\n    |\n LL |     let x: Vec::with_capacity(10, 20);\n-   |            ^^^^^^^^^^^^^^^^^^     -- argument of type `{integer}` unexpected\n+   |            ^^^^^^^^^^^^^^^^^^     -- unexpected argument of type `{integer}`\n    |\n note: associated function defined here\n   --> $SRC_DIR/alloc/src/vec/mod.rs:LL:COL"}, {"sha": "32a4d0ac72265c98b7d6503cd06cf389b7c3d2f0", "filename": "tests/ui/typeck/remove-extra-argument.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftypeck%2Fremove-extra-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftypeck%2Fremove-extra-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fremove-extra-argument.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/remove-extra-argument.rs:6:5\n    |\n LL |     l(vec![], vec![])\n-   |     ^         ------ argument of type `Vec<_>` unexpected\n+   |     ^         ------ unexpected argument of type `Vec<_>`\n    |\n note: function defined here\n   --> $DIR/remove-extra-argument.rs:3:4"}, {"sha": "d005eca841ecbbbca4bf6754f329a5abc15cd026", "filename": "tests/ui/typeck/struct-enum-wrong-args.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb/tests%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr?ref=5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "patch": "@@ -2,7 +2,7 @@ error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:6:13\n    |\n LL |     let _ = Some(3, 2);\n-   |             ^^^^    - argument of type `{integer}` unexpected\n+   |             ^^^^    - unexpected argument of type `{integer}`\n    |\n note: tuple variant defined here\n   --> $SRC_DIR/core/src/option.rs:LL:COL\n@@ -16,9 +16,9 @@ error[E0061]: this enum variant takes 1 argument but 3 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:7:13\n    |\n LL |     let _ = Ok(3, 6, 2);\n-   |             ^^    -  - argument of type `{integer}` unexpected\n+   |             ^^    -  - unexpected argument of type `{integer}`\n    |                   |\n-   |                   argument of type `{integer}` unexpected\n+   |                   unexpected argument of type `{integer}`\n    |\n note: tuple variant defined here\n   --> $SRC_DIR/core/src/result.rs:LL:COL\n@@ -61,7 +61,7 @@ error[E0061]: this struct takes 1 argument but 2 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:10:13\n    |\n LL |     let _ = Wrapper(5, 2);\n-   |             ^^^^^^^    - argument of type `{integer}` unexpected\n+   |             ^^^^^^^    - unexpected argument of type `{integer}`\n    |\n note: tuple struct defined here\n   --> $DIR/struct-enum-wrong-args.rs:2:8\n@@ -110,7 +110,7 @@ error[E0061]: this struct takes 2 arguments but 3 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:13:13\n    |\n LL |     let _ = DoubleWrapper(5, 2, 7);\n-   |             ^^^^^^^^^^^^^       - argument of type `{integer}` unexpected\n+   |             ^^^^^^^^^^^^^       - unexpected argument of type `{integer}`\n    |\n note: tuple struct defined here\n   --> $DIR/struct-enum-wrong-args.rs:3:8"}]}