{"sha": "e22d18dcd0bfb520ca0581cf6102cbb924ae3a74", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMmQxOGRjZDBiZmI1MjBjYTA1ODFjZjYxMDJjYmI5MjRhZTNhNzQ=", "commit": {"author": {"name": "kud1ing", "email": "github@kudling.de", "date": "2014-02-17T20:48:53Z"}, "committer": {"name": "kud1ing", "email": "github@kudling.de", "date": "2014-02-17T20:48:53Z"}, "message": "backticks for syntax elements", "tree": {"sha": "dde3c06ac6966db91f7bdd715ec166f0b920e896", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dde3c06ac6966db91f7bdd715ec166f0b920e896"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74", "html_url": "https://github.com/rust-lang/rust/commit/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74/comments", "author": null, "committer": null, "parents": [{"sha": "a7aa4c477e7ccc51f19805c42b74cf22dfe22c39", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7aa4c477e7ccc51f19805c42b74cf22dfe22c39", "html_url": "https://github.com/rust-lang/rust/commit/a7aa4c477e7ccc51f19805c42b74cf22dfe22c39"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "d33afd8fd035c4ffc40959d18de4e584d4846252", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=e22d18dcd0bfb520ca0581cf6102cbb924ae3a74", "patch": "@@ -687,8 +687,8 @@ pub fn check_pointer_pat(pcx: &pat_ctxt,\n                              e, actual)})},\n                 Some(expected),\n                 format!(\"{} pattern\", match pointer_kind {\n-                    Send => \"a ~-box\",\n-                    Borrowed => \"an &-pointer\"\n+                    Send => \"a `~`-box\",\n+                    Borrowed => \"an `&`-pointer\"\n                 }),\n                 None);\n             fcx.write_error(pat_id);"}, {"sha": "8d281a0b174acc0fd54d0854569d51a00058a2aa", "filename": "src/test/compile-fail/issue-4972.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74/src%2Ftest%2Fcompile-fail%2Fissue-4972.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74/src%2Ftest%2Fcompile-fail%2Fissue-4972.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4972.rs?ref=e22d18dcd0bfb520ca0581cf6102cbb924ae3a74", "patch": "@@ -16,7 +16,7 @@ pub enum TraitWrapper {\n \n fn get_tw_map<'lt>(tw: &'lt TraitWrapper) -> &'lt MyTrait {\n     match *tw {\n-        A(~ref map) => map, //~ ERROR found a ~-box pattern\n+        A(~ref map) => map, //~ ERROR found a `~`-box pattern\n     }\n }\n "}, {"sha": "b7c440d30b3aee61527604bfc5e56060e71fa924", "filename": "src/test/compile-fail/issue-5100.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22d18dcd0bfb520ca0581cf6102cbb924ae3a74/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs?ref=e22d18dcd0bfb520ca0581cf6102cbb924ae3a74", "patch": "@@ -24,12 +24,12 @@ fn main() {\n \n     match (true, false) {\n         ~(true, false) => ()\n-        //~^ ERROR mismatched types: expected `(bool,bool)` but found a ~-box pattern\n+        //~^ ERROR mismatched types: expected `(bool,bool)` but found a `~`-box pattern\n     }\n \n     match (true, false) {\n         &(true, false) => ()\n-        //~^ ERROR mismatched types: expected `(bool,bool)` but found an &-pointer pattern\n+        //~^ ERROR mismatched types: expected `(bool,bool)` but found an `&`-pointer pattern\n     }\n \n "}]}