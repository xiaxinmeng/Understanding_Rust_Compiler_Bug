{"sha": "b86620da377102a1a5e84a96910b70c9c957b810", "node_id": "C_kwDOAAsO6NoAKGI4NjYyMGRhMzc3MTAyYTFhNWU4NGE5NjkxMGI3MGM5Yzk1N2I4MTA", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-02-09T00:33:15Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-03-07T16:47:15Z"}, "message": "Stabilize const_fn_fn_ptr_basics and const_fn_trait_bound", "tree": {"sha": "651ecbefd1dfc1769fafd14d38d6af64893d7eba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/651ecbefd1dfc1769fafd14d38d6af64893d7eba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b86620da377102a1a5e84a96910b70c9c957b810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b86620da377102a1a5e84a96910b70c9c957b810", "html_url": "https://github.com/rust-lang/rust/commit/b86620da377102a1a5e84a96910b70c9c957b810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b86620da377102a1a5e84a96910b70c9c957b810/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96eb1168d177a8e37fb4866051e665e3f1988c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/96eb1168d177a8e37fb4866051e665e3f1988c25", "html_url": "https://github.com/rust-lang/rust/commit/96eb1168d177a8e37fb4866051e665e3f1988c25"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "891531951c1a03c0f6f5a3947544a04297151fcf", "filename": "clippy_utils/src/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b86620da377102a1a5e84a96910b70c9c957b810/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b86620da377102a1a5e84a96910b70c9c957b810/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs?ref=b86620da377102a1a5e84a96910b70c9c957b810", "patch": "@@ -32,32 +32,12 @@ pub fn is_min_const_fn<'a, 'tcx>(tcx: TyCtxt<'tcx>, body: &'a Body<'tcx>, msrv:\n                 | ty::PredicateKind::Projection(_)\n                 | ty::PredicateKind::ConstEvaluatable(..)\n                 | ty::PredicateKind::ConstEquate(..)\n+                | ty::PredicateKind::Trait(..)\n                 | ty::PredicateKind::TypeWellFormedFromEnv(..) => continue,\n                 ty::PredicateKind::ObjectSafe(_) => panic!(\"object safe predicate on function: {:#?}\", predicate),\n                 ty::PredicateKind::ClosureKind(..) => panic!(\"closure kind predicate on function: {:#?}\", predicate),\n                 ty::PredicateKind::Subtype(_) => panic!(\"subtype predicate on function: {:#?}\", predicate),\n                 ty::PredicateKind::Coerce(_) => panic!(\"coerce predicate on function: {:#?}\", predicate),\n-                ty::PredicateKind::Trait(pred) => {\n-                    if Some(pred.def_id()) == tcx.lang_items().sized_trait() {\n-                        continue;\n-                    }\n-                    match pred.self_ty().kind() {\n-                        ty::Param(ref p) => {\n-                            let generics = tcx.generics_of(current);\n-                            let def = generics.type_param(p, tcx);\n-                            let span = tcx.def_span(def.def_id);\n-                            return Err((\n-                                span,\n-                                \"trait bounds other than `Sized` \\\n-                                 on const fn parameters are unstable\"\n-                                    .into(),\n-                            ));\n-                        },\n-                        // other kinds of bounds are either tautologies\n-                        // or cause errors in other passes\n-                        _ => continue,\n-                    }\n-                },\n             }\n         }\n         match predicates.parent {"}]}