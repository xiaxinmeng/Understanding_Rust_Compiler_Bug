{"sha": "ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9", "node_id": "C_kwDOAAsO6NoAKGFiMGUyYWFlZDIwOThjZWNmNWViOWUyYzJlZTE5NmU3OTRkNzlkYjk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-16T13:00:36Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-16T13:00:36Z"}, "message": "Revert \"Don't PrintOnPanic on fatal errors\"\n\nThis reverts commit b5ac64b4cf33809b182a6f7c63a7c4e874fb3056.\n\nIt entirely breaks PrintOnPanic as ICE seems to be considered a fatal error too.", "tree": {"sha": "e692735e3dc0fb1611c19b53f958d6799ae7a5f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e692735e3dc0fb1611c19b53f958d6799ae7a5f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9", "html_url": "https://github.com/rust-lang/rust/commit/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14ca1df478ac9c0a7899530eb581362f37519ad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/14ca1df478ac9c0a7899530eb581362f37519ad3", "html_url": "https://github.com/rust-lang/rust/commit/14ca1df478ac9c0a7899530eb581362f37519ad3"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "89d955e8bf2e1d84c1a40045d0b063140d325525", "filename": "src/base.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9", "patch": "@@ -29,9 +29,8 @@ pub(crate) fn codegen_and_compile_fn<'tcx>(\n     module: &mut dyn Module,\n     instance: Instance<'tcx>,\n ) {\n-    let _inst_guard = crate::PrintOnPanic(Some(tcx.sess), || {\n-        format!(\"{:?} {}\", instance, tcx.symbol_name(instance).name)\n-    });\n+    let _inst_guard =\n+        crate::PrintOnPanic(|| format!(\"{:?} {}\", instance, tcx.symbol_name(instance).name));\n \n     let cached_func = std::mem::replace(&mut cached_context.func, Function::new());\n     let codegened_func = codegen_fn(tcx, cx, cached_func, module, instance);\n@@ -49,7 +48,7 @@ pub(crate) fn codegen_fn<'tcx>(\n     debug_assert!(!instance.substs.needs_infer());\n \n     let mir = tcx.instance_mir(instance.def);\n-    let _mir_guard = crate::PrintOnPanic(Some(tcx.sess), || {\n+    let _mir_guard = crate::PrintOnPanic(|| {\n         let mut buf = Vec::new();\n         with_no_trimmed_paths!({\n             rustc_middle::mir::pretty::write_mir_fn(tcx, mir, &mut |_, _| Ok(()), &mut buf)\n@@ -177,7 +176,7 @@ pub(crate) fn compile_fn(\n             write!(clif, \" {}\", isa_flag).unwrap();\n         }\n         writeln!(clif, \"\\n\").unwrap();\n-        crate::PrintOnPanic(None, move || {\n+        crate::PrintOnPanic(move || {\n             let mut clif = clif.clone();\n             ::cranelift_codegen::write::decorate_function(\n                 &mut &clif_comments_clone,\n@@ -498,7 +497,7 @@ fn codegen_stmt<'tcx>(\n     #[allow(unused_variables)] cur_block: Block,\n     stmt: &Statement<'tcx>,\n ) {\n-    let _print_guard = crate::PrintOnPanic(Some(fx.tcx.sess), || format!(\"stmt {:?}\", stmt));\n+    let _print_guard = crate::PrintOnPanic(|| format!(\"stmt {:?}\", stmt));\n \n     fx.set_debug_loc(stmt.source_info);\n "}, {"sha": "6e925cea277078b68ac5d03de3cc18fae0e91e71", "filename": "src/driver/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9/src%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9/src%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fmod.rs?ref=ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9", "patch": "@@ -23,8 +23,7 @@ fn predefine_mono_items<'tcx>(\n             match mono_item {\n                 MonoItem::Fn(instance) => {\n                     let name = tcx.symbol_name(instance).name;\n-                    let _inst_guard =\n-                        crate::PrintOnPanic(Some(tcx.sess), || format!(\"{:?} {}\", instance, name));\n+                    let _inst_guard = crate::PrintOnPanic(|| format!(\"{:?} {}\", instance, name));\n                     let sig =\n                         get_function_sig(tcx, module.target_config().default_call_conv, instance);\n                     let linkage = crate::linkage::get_clif_linkage("}, {"sha": "629d79d501240217d17ac3a6294ff338ed29300c", "filename": "src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ab0e2aaed2098cecf5eb9e2c2ee196e794d79db9", "patch": "@@ -113,11 +113,11 @@ mod prelude {\n     pub(crate) use crate::value_and_place::{CPlace, CPlaceInner, CValue};\n }\n \n-struct PrintOnPanic<'a, F: Fn() -> String>(Option<&'a Session>, F);\n-impl<'a, F: Fn() -> String> Drop for PrintOnPanic<'a, F> {\n+struct PrintOnPanic<F: Fn() -> String>(F);\n+impl<F: Fn() -> String> Drop for PrintOnPanic<F> {\n     fn drop(&mut self) {\n-        if ::std::thread::panicking() && self.0.map_or(true, |sess| sess.has_errors().is_none()) {\n-            println!(\"{}\", (self.1)());\n+        if ::std::thread::panicking() {\n+            println!(\"{}\", (self.0)());\n         }\n     }\n }"}]}