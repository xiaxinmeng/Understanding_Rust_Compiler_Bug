{"sha": "4904b9c228317a9cba963afb87425754a586acf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MDRiOWMyMjgzMTdhOWNiYTk2M2FmYjg3NDI1NzU0YTU4NmFjZjI=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-02-21T15:47:04Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-02-21T15:47:04Z"}, "message": "Detect Chocolatey MinGW installation", "tree": {"sha": "9a8ef9adb8b9813582d2425b9f3de91023ab989a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a8ef9adb8b9813582d2425b9f3de91023ab989a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4904b9c228317a9cba963afb87425754a586acf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4904b9c228317a9cba963afb87425754a586acf2", "html_url": "https://github.com/rust-lang/rust/commit/4904b9c228317a9cba963afb87425754a586acf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4904b9c228317a9cba963afb87425754a586acf2/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3b252b401ad133fac6d7ea2b452da921ff7f3b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b252b401ad133fac6d7ea2b452da921ff7f3b4", "html_url": "https://github.com/rust-lang/rust/commit/b3b252b401ad133fac6d7ea2b452da921ff7f3b4"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "78aacc56ea42e02927c7748384569eff36b83eee", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4904b9c228317a9cba963afb87425754a586acf2/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4904b9c228317a9cba963afb87425754a586acf2/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=4904b9c228317a9cba963afb87425754a586acf2", "patch": "@@ -1002,15 +1002,22 @@ fn get_crt_libs_path(sess: &Session) -> Option<PathBuf> {\n                     x if x == \"x86\" => \"i686\",\n                     x => x,\n                 };\n+                let mingw_bits = &sess.target.target.target_pointer_width;\n                 let mingw_dir = format!(\"{}-w64-mingw32\", mingw_arch);\n                 // Here we have path/bin/gcc but we need path/\n                 let mut path = linker_path;\n                 path.pop();\n                 path.pop();\n-                // Based on Clang MinGW driver\n-                let probe_paths = vec![\"lib\", \"sys-root/mingw/lib\"];\n+                // Loosely based on Clang MinGW driver\n+                let probe_paths = vec![\n+                    path.join(&mingw_dir).join(\"lib\"),                // Typical path\n+                    path.join(&mingw_dir).join(\"sys-root/mingw/lib\"), // Rare path\n+                    path.join(format!(\n+                        \"lib/mingw/tools/install/mingw{}/{}/lib\",\n+                        &mingw_bits, &mingw_dir\n+                    )), // Chocolatey is creative\n+                ];\n                 for probe_path in probe_paths {\n-                    let probe_path = path.join(&mingw_dir).join(&probe_path);\n                     if probe_path.join(\"crt2.o\").exists() {\n                         return Some(probe_path);\n                     };"}]}