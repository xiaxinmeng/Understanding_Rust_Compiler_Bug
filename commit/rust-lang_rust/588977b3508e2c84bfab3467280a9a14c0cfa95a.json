{"sha": "588977b3508e2c84bfab3467280a9a14c0cfa95a", "node_id": "C_kwDOAAsO6NoAKDU4ODk3N2IzNTA4ZTJjODRiZmFiMzQ2NzI4MGE5YTE0YzBjZmE5NWE", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-28T09:55:42Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:22Z"}, "message": "lint: port while true diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "041368be839c0e97a67af6d3bdc7a44fe00c5cc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/041368be839c0e97a67af6d3bdc7a44fe00c5cc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/588977b3508e2c84bfab3467280a9a14c0cfa95a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/588977b3508e2c84bfab3467280a9a14c0cfa95a", "html_url": "https://github.com/rust-lang/rust/commit/588977b3508e2c84bfab3467280a9a14c0cfa95a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/588977b3508e2c84bfab3467280a9a14c0cfa95a/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f7b10f484a42442c3e28bfbb62960460eba85f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7b10f484a42442c3e28bfbb62960460eba85f5", "html_url": "https://github.com/rust-lang/rust/commit/4f7b10f484a42442c3e28bfbb62960460eba85f5"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e1903470fce9f1599d1f08f7cd66ecc275ea3373", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/588977b3508e2c84bfab3467280a9a14c0cfa95a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/588977b3508e2c84bfab3467280a9a14c0cfa95a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=588977b3508e2c84bfab3467280a9a14c0cfa95a", "patch": "@@ -286,3 +286,6 @@ lint-unused-import-braces = braces around {$node} is unnecessary\n \n lint-unused-allocation = unnecessary allocation, use `&` instead\n lint-unused-allocation-mut = unnecessary allocation, use `&mut` instead\n+\n+lint-builtin-while-true = denote infinite loops with `loop {\"{\"} ... {\"}\"}`\n+    .suggestion = use `loop`"}, {"sha": "9640184fda3f255954c05f5db7106398cbc23408", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/588977b3508e2c84bfab3467280a9a14c0cfa95a/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/588977b3508e2c84bfab3467280a9a14c0cfa95a/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=588977b3508e2c84bfab3467280a9a14c0cfa95a", "patch": "@@ -31,7 +31,7 @@ use rustc_ast::{self as ast, *};\n use rustc_ast_pretty::pprust::{self, expr_to_string};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stack::ensure_sufficient_stack;\n-use rustc_errors::{Applicability, Diagnostic, DiagnosticStyledString, MultiSpan};\n+use rustc_errors::{fluent, Applicability, Diagnostic, DiagnosticStyledString, MultiSpan};\n use rustc_feature::{deprecated_attributes, AttributeGate, BuiltinAttribute, GateIssue, Stability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n@@ -99,13 +99,12 @@ impl EarlyLintPass for WhileTrue {\n             if let ast::ExprKind::Lit(ref lit) = pierce_parens(cond).kind {\n                 if let ast::LitKind::Bool(true) = lit.kind {\n                     if !lit.span.from_expansion() {\n-                        let msg = \"denote infinite loops with `loop { ... }`\";\n                         let condition_span = e.span.with_hi(cond.span.hi());\n                         cx.struct_span_lint(WHILE_TRUE, condition_span, |lint| {\n-                            lint.build(msg)\n+                            lint.build(fluent::lint::builtin_while_true)\n                                 .span_suggestion_short(\n                                     condition_span,\n-                                    \"use `loop`\",\n+                                    fluent::lint::suggestion,\n                                     format!(\n                                         \"{}loop\",\n                                         label.map_or_else(String::new, |label| format!("}]}