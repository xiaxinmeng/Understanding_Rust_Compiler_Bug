{"sha": "2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNzZiZjZjZjA0YmVhNzZkOWExYzg1YTg0MThmYjliOTFkMTdkZmE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-20T18:52:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-20T18:52:04Z"}, "message": "Fix nits\n\nCo-Authored-By: Ralf Jung <post@ralfj.de>", "tree": {"sha": "18a52c81c81c655652eaa512644eae66e072e636", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18a52c81c81c655652eaa512644eae66e072e636"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd1YtUCRBK7hj4Ov3rIwAAdHIIAKNH5F6rwNCJmV7VIMtjnWaM\nJN9tpISivCAm+Lm3iNrBWX5SW+nItm44bdUhMxQuNZCzOygJXR4rAP73wM0LYPl5\nT6p/otw78E8WzJxLlXvloaJI1KEINofFagsXFNIiwSzJhbLoHjsVytMceVfiAW0l\nsMeIHJhEgDvHrpt63tl/3rGrK5XMiKdaCj8U25OaDqWTswQ5kQgDQBNTJ4FTZ4kR\nmn424fBcWIQ+eeJOHI+4Bfp1QVEmrsdw2DgdF9UtZH4DydAus+Tg6eUyZm31tO/q\nUoD0rgUQORrB7rOlIyezCo45BtKtPmcyZ9eZq5o6Q/ouxMVgJZzcE3yZIo5EDEQ=\n=pjSo\n-----END PGP SIGNATURE-----\n", "payload": "tree 18a52c81c81c655652eaa512644eae66e072e636\nparent 310212931666421636286d223ca88841b26011c2\nauthor Aaron Hill <aa1ronham@gmail.com> 1574275924 -0500\ncommitter GitHub <noreply@github.com> 1574275924 -0500\n\nFix nits\n\nCo-Authored-By: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa", "html_url": "https://github.com/rust-lang/rust/commit/2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "310212931666421636286d223ca88841b26011c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/310212931666421636286d223ca88841b26011c2", "html_url": "https://github.com/rust-lang/rust/commit/310212931666421636286d223ca88841b26011c2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "237ef99d1fe66e7ea1b3eaf9ce9f607c7c409689", "filename": "src/eval.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=2176bf6cf04bea76d9a1c85a8418fb9b91d17dfa", "patch": "@@ -32,7 +32,7 @@ pub struct MiriConfig {\n /// Returns a freshly created `InterpCx`, along with an `MPlaceTy` representing\n /// the location where the return value of the `start` lang item will be\n /// written to.\n-/// Used by `priroda` and `miri\n+/// Public because this is also used by `priroda`.\n pub fn create_ecx<'mir, 'tcx: 'mir>(\n     tcx: TyCtxt<'tcx>,\n     main_id: DefId,\n@@ -178,7 +178,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n \n /// Evaluates the main function specified by `main_id`.\n /// Returns `Some(return_code)` if program executed completed.\n-/// Returns `None` if an evaluation error occured\n+/// Returns `None` if an evaluation error occured.\n pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) -> Option<i64> {\n     let (mut ecx, ret_ptr) = match create_ecx(tcx, main_id, config) {\n         Ok(v) => v,\n@@ -209,7 +209,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n             if !ignore_leaks && leaks != 0 {\n                 tcx.sess.err(\"the evaluated program leaked memory\");\n                 // Ignore the provided return code - let the reported error\n-                // determine the return code\n+                // determine the return code.\n                 return None;\n             }\n             return Some(return_code)\n@@ -260,7 +260,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n                     trace!(\"    local {}: {:?}\", i, local.value);\n                 }\n             }\n-            // Let the reported error determine the return code\n+            // Let the reported error determine the return code.\n             return None;\n         }\n     }"}]}