{"sha": "63e72348d192dfedfb84510a88099cd6523c187b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZTcyMzQ4ZDE5MmRmZWRmYjg0NTEwYTg4MDk5Y2Q2NTIzYzE4N2I=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-09-16T09:15:51Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-10-06T09:46:00Z"}, "message": "Add some docs to rustdoc::clean::inline and def_id functions\n\nCo-authored-by: Joshua Nelson <joshua@yottadb.com>", "tree": {"sha": "9c7b1be5036495277dbbdb24632158930f1eac9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c7b1be5036495277dbbdb24632158930f1eac9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63e72348d192dfedfb84510a88099cd6523c187b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63e72348d192dfedfb84510a88099cd6523c187b", "html_url": "https://github.com/rust-lang/rust/commit/63e72348d192dfedfb84510a88099cd6523c187b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63e72348d192dfedfb84510a88099cd6523c187b/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d890e64dff3fd2c28635c60cc9315648dd46c8f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d890e64dff3fd2c28635c60cc9315648dd46c8f7", "html_url": "https://github.com/rust-lang/rust/commit/d890e64dff3fd2c28635c60cc9315648dd46c8f7"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "b24ede9c53aed1d431ff44aeb8bd68d77c912afd", "filename": "compiler/rustc_span/src/def_id.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/63e72348d192dfedfb84510a88099cd6523c187b/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63e72348d192dfedfb84510a88099cd6523c187b/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs?ref=63e72348d192dfedfb84510a88099cd6523c187b", "patch": "@@ -159,6 +159,7 @@ impl DefId {\n         DefId { krate: LOCAL_CRATE, index }\n     }\n \n+    /// Returns whether the item is defined in the crate currently being compiled.\n     #[inline]\n     pub fn is_local(self) -> bool {\n         self.krate == LOCAL_CRATE"}, {"sha": "7f64d20d8e7cd70d185cc248c5fae005a5638f1f", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/63e72348d192dfedfb84510a88099cd6523c187b/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63e72348d192dfedfb84510a88099cd6523c187b/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=63e72348d192dfedfb84510a88099cd6523c187b", "patch": "@@ -290,10 +290,12 @@ pub fn build_ty(cx: &DocContext<'_>, did: DefId) -> Option<clean::Type> {\n     }\n }\n \n+/// Builds all inherent implementations of an ADT (struct/union/enum) or Trait item/path/reexport.\n pub fn build_impls(cx: &DocContext<'_>, did: DefId, attrs: Option<Attrs<'_>>) -> Vec<clean::Item> {\n     let tcx = cx.tcx;\n     let mut impls = Vec::new();\n \n+    // for each implementation of an item represented by `did`, build the clean::Item for that impl\n     for &did in tcx.inherent_impls(did).iter() {\n         build_impl(cx, did, attrs, &mut impls);\n     }\n@@ -320,6 +322,7 @@ fn merge_attrs(\n     merged_attrs.clean(cx)\n }\n \n+/// Builds a specific implementation of a type. The `did` could be a type method or trait method.\n pub fn build_impl(\n     cx: &DocContext<'_>,\n     did: DefId,"}]}