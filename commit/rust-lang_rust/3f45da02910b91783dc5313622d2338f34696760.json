{"sha": "3f45da02910b91783dc5313622d2338f34696760", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDVkYTAyOTEwYjkxNzgzZGM1MzEzNjIyZDIzMzhmMzQ2OTY3NjA=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-02-24T18:38:29Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-03-13T02:19:18Z"}, "message": "tidy: Check if exceptions are no longer used.", "tree": {"sha": "b8f5229d34460960d7be1e3a1ed4af56950c0d7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8f5229d34460960d7be1e3a1ed4af56950c0d7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f45da02910b91783dc5313622d2338f34696760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f45da02910b91783dc5313622d2338f34696760", "html_url": "https://github.com/rust-lang/rust/commit/3f45da02910b91783dc5313622d2338f34696760", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f45da02910b91783dc5313622d2338f34696760/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "349fcb9ef60f28eca485b9da5ba588fe558bae74", "url": "https://api.github.com/repos/rust-lang/rust/commits/349fcb9ef60f28eca485b9da5ba588fe558bae74", "html_url": "https://github.com/rust-lang/rust/commit/349fcb9ef60f28eca485b9da5ba588fe558bae74"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "c3bb313202f586164a237f249fb9508a19fa7ff2", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/3f45da02910b91783dc5313622d2338f34696760/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f45da02910b91783dc5313622d2338f34696760/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=3f45da02910b91783dc5313622d2338f34696760", "patch": "@@ -26,18 +26,14 @@ const EXCEPTIONS: &[&str] = &[\n     \"openssl\",            // BSD+advertising clause, cargo, mdbook\n     \"pest\",               // MPL2, mdbook via handlebars\n     \"arrayref\",           // BSD-2-Clause, mdbook via handlebars via pest\n-    \"thread-id\",          // Apache-2.0, mdbook\n     \"toml-query\",         // MPL-2.0, mdbook\n     \"toml-query_derive\",  // MPL-2.0, mdbook\n     \"is-match\",           // MPL-2.0, mdbook\n-    \"cssparser\",          // MPL-2.0, rustdoc\n     \"smallvec\",           // MPL-2.0, rustdoc\n     \"rdrand\",             // ISC, mdbook, rustfmt\n     \"fuchsia-cprng\",      // BSD-3-Clause, mdbook, rustfmt\n     \"fuchsia-zircon-sys\", // BSD-3-Clause, rustdoc, rustc, cargo\n     \"fuchsia-zircon\",     // BSD-3-Clause, rustdoc, rustc, cargo (jobserver & tempdir)\n-    \"cssparser-macros\",   // MPL-2.0, rustdoc\n-    \"selectors\",          // MPL-2.0, rustdoc\n     \"clippy_lints\",       // MPL-2.0, rls\n     \"colored\",            // MPL-2.0, rustfmt\n     \"ordslice\",           // Apache-2.0, rls\n@@ -74,7 +70,6 @@ const WHITELIST: &[&str] = &[\n     \"backtrace\",\n     \"backtrace-sys\",\n     \"bitflags\",\n-    \"build_const\",\n     \"byteorder\",\n     \"c2-chacha\",\n     \"cc\",\n@@ -84,7 +79,6 @@ const WHITELIST: &[&str] = &[\n     \"cloudabi\",\n     \"cmake\",\n     \"compiler_builtins\",\n-    \"crc\",\n     \"crc32fast\",\n     \"crossbeam-deque\",\n     \"crossbeam-epoch\",\n@@ -118,12 +112,9 @@ const WHITELIST: &[&str] = &[\n     \"memchr\",\n     \"memmap\",\n     \"memoffset\",\n-    \"miniz-sys\",\n     \"miniz_oxide\",\n-    \"miniz_oxide_c_api\",\n     \"nodrop\",\n     \"num_cpus\",\n-    \"owning_ref\",\n     \"parking_lot\",\n     \"parking_lot_core\",\n     \"pkg-config\",\n@@ -162,7 +153,6 @@ const WHITELIST: &[&str] = &[\n     \"synstructure\",\n     \"tempfile\",\n     \"termcolor\",\n-    \"terminon\",\n     \"termion\",\n     \"termize\",\n     \"thread_local\",\n@@ -172,11 +162,9 @@ const WHITELIST: &[&str] = &[\n     \"unicode-security\",\n     \"unicode-width\",\n     \"unicode-xid\",\n-    \"unreachable\",\n     \"utf8-ranges\",\n     \"vcpkg\",\n     \"version_check\",\n-    \"void\",\n     \"wasi\",\n     \"winapi\",\n     \"winapi-build\",\n@@ -205,6 +193,18 @@ pub fn check(path: &Path, cargo: &Path, bad: &mut bool) {\n ///\n /// Packages listed in `EXCEPTIONS` are allowed for tools.\n fn check_exceptions(metadata: &Metadata, bad: &mut bool) {\n+    // Check that the EXCEPTIONS list does not have unused entries.\n+    for exception in EXCEPTIONS {\n+        if !metadata.packages.iter().any(|p| p.name == *exception) {\n+            println!(\n+                \"could not find exception package `{}`\\n\\\n+                Remove from EXCEPTIONS list if it is no longer used.\",\n+                exception\n+            );\n+            *bad = true;\n+        }\n+    }\n+    // Check if any package does not have a valid license.\n     for pkg in &metadata.packages {\n         if pkg.source.is_none() {\n             // No need to check local packages.\n@@ -233,6 +233,17 @@ fn check_exceptions(metadata: &Metadata, bad: &mut bool) {\n ///\n /// Specifically, this checks that the dependencies are on the `WHITELIST`.\n fn check_whitelist(metadata: &Metadata, bad: &mut bool) {\n+    // Check that the WHITELIST does not have unused entries.\n+    for name in WHITELIST {\n+        if !metadata.packages.iter().any(|p| p.name == *name) {\n+            println!(\n+                \"could not find whitelisted package `{}`\\n\\\n+                Remove from WHITELIST list if it is no longer used.\",\n+                name\n+            );\n+            *bad = true;\n+        }\n+    }\n     // Get the whitelist in a convenient form.\n     let whitelist: HashSet<_> = WHITELIST.iter().cloned().collect();\n "}]}