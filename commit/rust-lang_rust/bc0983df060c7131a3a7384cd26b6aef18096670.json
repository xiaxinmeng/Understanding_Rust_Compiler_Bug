{"sha": "bc0983df060c7131a3a7384cd26b6aef18096670", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMDk4M2RmMDYwYzcxMzFhM2E3Mzg0Y2QyNmI2YWVmMTgwOTY2NzA=", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-08-04T08:17:06Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-08-26T09:14:31Z"}, "message": "add fixme", "tree": {"sha": "6fe56f61b8926694fa9deb30f6fd0f74bba827bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fe56f61b8926694fa9deb30f6fd0f74bba827bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc0983df060c7131a3a7384cd26b6aef18096670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0983df060c7131a3a7384cd26b6aef18096670", "html_url": "https://github.com/rust-lang/rust/commit/bc0983df060c7131a3a7384cd26b6aef18096670", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc0983df060c7131a3a7384cd26b6aef18096670/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58d749c8079761f20ef0410cbd0816a20694ca0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c58d749c8079761f20ef0410cbd0816a20694ca0", "html_url": "https://github.com/rust-lang/rust/commit/c58d749c8079761f20ef0410cbd0816a20694ca0"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "9fe26711f2102508080b0b27f55a1ef12930ed1d", "filename": "compiler/rustc_typeck/src/outlives/implicit_infer.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bc0983df060c7131a3a7384cd26b6aef18096670/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0983df060c7131a3a7384cd26b6aef18096670/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fimplicit_infer.rs?ref=bc0983df060c7131a3a7384cd26b6aef18096670", "patch": "@@ -119,6 +119,12 @@ fn insert_required_predicates_to_be_wf<'tcx>(\n     //\n     // Luckily the only types contained in default substs are type\n     // parameters which don't matter here.\n+    //\n+    // FIXME(const_generics): Once more complex const parameter types\n+    // are allowed, this might be incorrect. I think that we will still be\n+    // fine, as all outlives relations of the const param types should also\n+    // be part of the adt containing it, but we should still both update the\n+    // documentation and add some tests for this.\n     for arg in field_ty.walk_ignoring_default_const_substs() {\n         let ty = match arg.unpack() {\n             GenericArgKind::Type(ty) => ty,"}]}