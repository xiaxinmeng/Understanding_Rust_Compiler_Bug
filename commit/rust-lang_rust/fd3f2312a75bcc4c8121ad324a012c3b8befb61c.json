{"sha": "fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkM2YyMzEyYTc1YmNjNGM4MTIxYWQzMjRhMDEyYzNiOGJlZmI2MWM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-02-01T22:16:53Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-02-01T23:16:02Z"}, "message": "Fix test after rebase", "tree": {"sha": "41ef34572836e3bf8a726570706642da3155bed6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41ef34572836e3bf8a726570706642da3155bed6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "html_url": "https://github.com/rust-lang/rust/commit/fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "378e73e6db0b4d47586f4e3ec975e43ef530ac99", "url": "https://api.github.com/repos/rust-lang/rust/commits/378e73e6db0b4d47586f4e3ec975e43ef530ac99", "html_url": "https://github.com/rust-lang/rust/commit/378e73e6db0b4d47586f4e3ec975e43ef530ac99"}], "stats": {"total": 90, "additions": 31, "deletions": 59}, "files": [{"sha": "053746b579dcb31508741c0711cee871698f3081", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "patch": "@@ -235,7 +235,7 @@ impl<'a> Parser<'a> {\n         }\n \n         let lo = self.span;\n-        let ident = self.parse_ident_attr()?;\n+        let ident = self.parse_ident()?;\n         let node = self.parse_meta_item_kind()?;\n         Ok(ast::MetaItem { name: ident.name, node: node, span: lo.to(self.prev_span) })\n     }"}, {"sha": "4c61ab6bd7810143e5c4f316e30a9275d242c083", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "patch": "@@ -777,10 +777,6 @@ impl<'a> Parser<'a> {\n         self.parse_ident_common(true)\n     }\n \n-    pub fn parse_ident_attr(&mut self) -> PResult<'a, ast::Ident> {\n-        self.parse_ident()\n-    }\n-\n     fn parse_ident_common(&mut self, recover: bool) -> PResult<'a, ast::Ident> {\n         match self.token {\n             token::Ident(i) => {"}, {"sha": "be00ee4d74e7eededd2590ec6468ed33a62e651d", "filename": "src/test/ui/mismatched_types/closure-arg-count.stderr", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr?ref=fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "patch": "@@ -14,7 +14,7 @@ error[E0593]: closure is expected to take 2 arguments, but it takes 1 argument\n    |               |\n    |               expected closure that takes 2 arguments\n \n-error[E0593]: closure is expected to take 2 arguments, but it takes 1 argument\n+error[E0593]: closure is expected to take 2 distinct arguments, but it takes a single 2-tuple as argument\n   --> $DIR/closure-arg-count.rs:19:15\n    |\n 19 |     [1, 2, 3].sort_by(|(tuple, tuple2)| panic!());\n@@ -39,9 +39,9 @@ help: change the closure to take multiple arguments instead of a single tuple\n    |                       ^^^^^^^^^^^^^^^\n \n error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments\n-  --> $DIR/closure-arg-count.rs:21:5\n+  --> $DIR/closure-arg-count.rs:23:5\n    |\n-21 |     f(|| panic!());\n+23 |     f(|| panic!());\n    |     ^ -- takes 0 arguments\n    |     |\n    |     expected closure that takes 1 argument\n@@ -52,45 +52,53 @@ note: required by `f`\n 13 | fn f<F: Fn<usize>>(_: F) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0593]: closure is expected to take a single tuple as argument, but it takes 2 distinct arguments\n-  --> $DIR/closure-arg-count.rs:24:53\n+error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 2 distinct arguments\n+  --> $DIR/closure-arg-count.rs:26:53\n    |\n-24 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i, x| i);\n-   |                                                     ^^^ ------ help: consider changing the closure to accept a tuple: `|(i, x)|`\n+26 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i, x| i);\n+   |                                                     ^^^ ------ takes 2 distinct arguments\n    |                                                     |\n-   |                                                     expected closure that takes a single tuple as argument\n+   |                                                     expected closure that takes a single 2-tuple as argument\n+help: change the closure to accept a tuple instead of individual arguments\n+   |\n+26 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|(i, x)| i);\n+   |                                                         ^^^^^^^^\n \n-error[E0593]: closure is expected to take a single tuple as argument, but it takes 2 distinct arguments\n-  --> $DIR/closure-arg-count.rs:26:53\n+error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 2 distinct arguments\n+  --> $DIR/closure-arg-count.rs:28:53\n    |\n-26 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i: usize, x| i);\n-   |                                                     ^^^ ------------- help: consider changing the closure to accept a tuple: `|(i, x): (usize, _)|`\n+28 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i: usize, x| i);\n+   |                                                     ^^^ ------------- takes 2 distinct arguments\n    |                                                     |\n-   |                                                     expected closure that takes a single tuple as argument\n+   |                                                     expected closure that takes a single 2-tuple as argument\n+help: change the closure to accept a tuple instead of individual arguments\n+   |\n+28 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|(i, x)| i);\n+   |                                                         ^^^^^^^^\n \n error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 3 distinct arguments\n-  --> $DIR/closure-arg-count.rs:28:53\n+  --> $DIR/closure-arg-count.rs:30:53\n    |\n-28 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i, x, y| i);\n+30 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i, x, y| i);\n    |                                                     ^^^ --------- takes 3 distinct arguments\n    |                                                     |\n    |                                                     expected closure that takes a single 2-tuple as argument\n \n error[E0593]: function is expected to take a single 2-tuple as argument, but it takes 0 arguments\n-  --> $DIR/closure-arg-count.rs:30:53\n+  --> $DIR/closure-arg-count.rs:32:53\n    |\n-30 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(foo);\n+32 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(foo);\n    |                                                     ^^^ expected function that takes a single 2-tuple as argument\n ...\n-37 | fn foo() {}\n+41 | fn foo() {}\n    | -------- takes 0 arguments\n \n error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 3 distinct arguments\n-  --> $DIR/closure-arg-count.rs:33:53\n+  --> $DIR/closure-arg-count.rs:35:53\n    |\n-32 |     let bar = |i, x, y| i;\n+34 |     let bar = |i, x, y| i;\n    |               --------- takes 3 distinct arguments\n-33 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(bar);\n+35 |     let _it = vec![1, 2, 3].into_iter().enumerate().map(bar);\n    |                                                     ^^^ expected closure that takes a single 2-tuple as argument\n \n error[E0593]: function is expected to take a single 2-tuple as argument, but it takes 2 distinct arguments"}, {"sha": "88a7b1b49d62d693d85991972b00cbdbd377f030", "filename": "src/test/ui/suggestions/for-c-in-str.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd3f2312a75bcc4c8121ad324a012c3b8befb61c/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.stderr?ref=fd3f2312a75bcc4c8121ad324a012c3b8befb61c", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the trait bound `&str: std::iter::Iterator` is not satisfied\n   --> $DIR/for-c-in-str.rs:14:14\n    |\n 14 |     for c in \"asdf\" {\n-   |              ^^^^^^ `&str` is not an iterator; maybe try calling `.iter()` or a similar method\n+   |              ^^^^^^ `&str` is not an iterator; try calling `.chars()` or `.bytes()`\n    |\n    = help: the trait `std::iter::Iterator` is not implemented for `&str`\n    = note: required by `std::iter::IntoIterator::into_iter`"}, {"sha": "1022491b84a3614db4ce7fc3b9803b4b30ea45d6", "filename": "src/test/ui/suggestions/iterate-str.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/378e73e6db0b4d47586f4e3ec975e43ef530ac99/src%2Ftest%2Fui%2Fsuggestions%2Fiterate-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378e73e6db0b4d47586f4e3ec975e43ef530ac99/src%2Ftest%2Fui%2Fsuggestions%2Fiterate-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fiterate-str.rs?ref=378e73e6db0b4d47586f4e3ec975e43ef530ac99", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    for c in \"foobarbaz\" {\n-        println!(\"{}\", c);\n-    }\n-    //~^^^ ERROR the trait bound `&str: std::iter::Iterator` is not satisfied\n-    //~| NOTE `&str` is not an iterator; try calling `.chars()` or `.bytes()`\n-    //~| HELP the trait `std::iter::Iterator` is not implemented for `&str`\n-    //~| NOTE required by `std::iter::IntoIterator::into_iter`\n-}"}, {"sha": "59da6d70c0236ce5b5f6c81b19d7e86a64f13bb4", "filename": "src/test/ui/suggestions/iterate-str.stderr", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/378e73e6db0b4d47586f4e3ec975e43ef530ac99/src%2Ftest%2Fui%2Fsuggestions%2Fiterate-str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/378e73e6db0b4d47586f4e3ec975e43ef530ac99/src%2Ftest%2Fui%2Fsuggestions%2Fiterate-str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fiterate-str.stderr?ref=378e73e6db0b4d47586f4e3ec975e43ef530ac99", "patch": "@@ -1,13 +0,0 @@\n-error[E0277]: the trait bound `&str: std::iter::Iterator` is not satisfied\n-  --> $DIR/iterate-str.rs:12:5\n-   |\n-12 | /     for c in \"foobarbaz\" {\n-13 | |         println!(\"{}\", c);\n-14 | |     }\n-   | |_____^ `&str` is not an iterator; try calling `.chars()` or `.bytes()`\n-   |\n-   = help: the trait `std::iter::Iterator` is not implemented for `&str`\n-   = note: required by `std::iter::IntoIterator::into_iter`\n-\n-error: aborting due to previous error\n-"}]}