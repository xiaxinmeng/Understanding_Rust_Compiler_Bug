{"sha": "1301f43119f8ae564a01abd3fa306e87d635e862", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMDFmNDMxMTlmOGFlNTY0YTAxYWJkM2ZhMzA2ZTg3ZDYzNWU4NjI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T16:58:01Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T18:29:25Z"}, "message": "Remove E0019, use E0015 for inline assembly in a const", "tree": {"sha": "1276bd77184c395208ad1aa166b1f75bf4905432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1276bd77184c395208ad1aa166b1f75bf4905432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1301f43119f8ae564a01abd3fa306e87d635e862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1301f43119f8ae564a01abd3fa306e87d635e862", "html_url": "https://github.com/rust-lang/rust/commit/1301f43119f8ae564a01abd3fa306e87d635e862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1301f43119f8ae564a01abd3fa306e87d635e862/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c26144b1ac75267c679bad6a4e2c4e7bc7957d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c26144b1ac75267c679bad6a4e2c4e7bc7957d3", "html_url": "https://github.com/rust-lang/rust/commit/0c26144b1ac75267c679bad6a4e2c4e7bc7957d3"}], "stats": {"total": 50, "additions": 6, "deletions": 44}, "files": [{"sha": "6af265d5069a0388393a42fbc94bc370c58a6660", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1301f43119f8ae564a01abd3fa306e87d635e862/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1301f43119f8ae564a01abd3fa306e87d635e862/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=1301f43119f8ae564a01abd3fa306e87d635e862", "patch": "@@ -18,7 +18,6 @@ E0010: include_str!(\"./error_codes/E0010.md\"),\n E0013: include_str!(\"./error_codes/E0013.md\"),\n E0014: include_str!(\"./error_codes/E0014.md\"),\n E0015: include_str!(\"./error_codes/E0015.md\"),\n-E0019: include_str!(\"./error_codes/E0019.md\"),\n E0023: include_str!(\"./error_codes/E0023.md\"),\n E0025: include_str!(\"./error_codes/E0025.md\"),\n E0026: include_str!(\"./error_codes/E0026.md\"),\n@@ -461,6 +460,7 @@ E0774: include_str!(\"./error_codes/E0774.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard\n+//  E0019, merged into E0015\n //  E0035, merged into E0087/E0089\n //  E0036, merged into E0087/E0089\n //  E0068,"}, {"sha": "ef43a57a9810cff744d07b5e9a94431c2ff3d860", "filename": "compiler/rustc_error_codes/src/error_codes/E0019.md", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/0c26144b1ac75267c679bad6a4e2c4e7bc7957d3/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0019.md", "raw_url": "https://github.com/rust-lang/rust/raw/0c26144b1ac75267c679bad6a4e2c4e7bc7957d3/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0019.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0019.md?ref=0c26144b1ac75267c679bad6a4e2c4e7bc7957d3", "patch": "@@ -1,38 +0,0 @@\n-A function call isn't allowed in the const's initialization expression\n-because the expression's value must be known at compile-time.\n-\n-Erroneous code example:\n-\n-```compile_fail,E0019\n-#![feature(asm)]\n-\n-fn main() {\n-    static STATIC11: i32 = {\n-        let x: i32;\n-        unsafe { asm!(\"mov rax, 2\", out(\"rax\") x) }; // error!\n-        x\n-    };\n-}\n-```\n-\n-Remember: you can't use a function call inside a const's initialization\n-expression! However, you can totally use it anywhere else:\n-\n-```\n-enum Test {\n-    V1\n-}\n-\n-impl Test {\n-    fn func(&self) -> i32 {\n-        12\n-    }\n-}\n-\n-fn main() {\n-    const FOO: Test = Test::V1;\n-\n-    FOO.func(); // here is good\n-    let x = FOO.func(); // or even here!\n-}\n-```"}, {"sha": "25ed7859d2187af64fa4a0016c6c3ed7b0cdcc36", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1301f43119f8ae564a01abd3fa306e87d635e862/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1301f43119f8ae564a01abd3fa306e87d635e862/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=1301f43119f8ae564a01abd3fa306e87d635e862", "patch": "@@ -193,8 +193,8 @@ impl NonConstOp for InlineAsm {\n         struct_span_err!(\n             ccx.tcx.sess,\n             span,\n-            E0019,\n-            \"{} contains unimplemented expression type\",\n+            E0015,\n+            \"inline assembly is not allowed in {}s\",\n             ccx.const_kind()\n         )\n     }"}, {"sha": "b8b755018e61e7cc6dc87f8afa8fef5be3a6ff52", "filename": "src/test/ui/consts/inline_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1301f43119f8ae564a01abd3fa306e87d635e862/src%2Ftest%2Fui%2Fconsts%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1301f43119f8ae564a01abd3fa306e87d635e862/src%2Ftest%2Fui%2Fconsts%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Finline_asm.rs?ref=1301f43119f8ae564a01abd3fa306e87d635e862", "patch": "@@ -1,6 +1,6 @@\n #![feature(llvm_asm)]\n \n const _: () = unsafe { llvm_asm!(\"nop\") };\n-//~^ ERROR contains unimplemented expression type\n+//~^ ERROR inline assembly\n \n fn main() {}"}, {"sha": "6fb6b69d220ca58538262b310cdc88570803ef1e", "filename": "src/test/ui/consts/inline_asm.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1301f43119f8ae564a01abd3fa306e87d635e862/src%2Ftest%2Fui%2Fconsts%2Finline_asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1301f43119f8ae564a01abd3fa306e87d635e862/src%2Ftest%2Fui%2Fconsts%2Finline_asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Finline_asm.stderr?ref=1301f43119f8ae564a01abd3fa306e87d635e862", "patch": "@@ -1,4 +1,4 @@\n-error[E0019]: constant contains unimplemented expression type\n+error[E0015]: inline assembly is not allowed in constants\n   --> $DIR/inline_asm.rs:3:24\n    |\n LL | const _: () = unsafe { llvm_asm!(\"nop\") };\n@@ -8,4 +8,4 @@ LL | const _: () = unsafe { llvm_asm!(\"nop\") };\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0019`.\n+For more information about this error, try `rustc --explain E0015`."}]}