{"sha": "a317da42b16ffe4d06c12ab795aef3cbc0859de9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMTdkYTQyYjE2ZmZlNGQwNmMxMmFiNzk1YWVmM2NiYzA4NTlkZTk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-01T23:29:50Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-15T10:03:02Z"}, "message": "Suggest the correct syntax for different struct types", "tree": {"sha": "c097b895aded169357274f452c8e3b21731e2b6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c097b895aded169357274f452c8e3b21731e2b6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a317da42b16ffe4d06c12ab795aef3cbc0859de9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a317da42b16ffe4d06c12ab795aef3cbc0859de9", "html_url": "https://github.com/rust-lang/rust/commit/a317da42b16ffe4d06c12ab795aef3cbc0859de9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a317da42b16ffe4d06c12ab795aef3cbc0859de9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bab0f09d30c90126993fa824171925a8fa579a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bab0f09d30c90126993fa824171925a8fa579a7", "html_url": "https://github.com/rust-lang/rust/commit/9bab0f09d30c90126993fa824171925a8fa579a7"}], "stats": {"total": 107, "additions": 62, "deletions": 45}, "files": [{"sha": "29ca160fac0db7c07919fbecc05593d48fe93c2b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=a317da42b16ffe4d06c12ab795aef3cbc0859de9", "patch": "@@ -2702,19 +2702,29 @@ impl<'a> Resolver<'a> {\n                         }\n                         return (err, candidates);\n                     },\n-                    _ if ns == ValueNS && is_struct_like(def) => {\n-                        let mut accessible_ctor = true;\n-                        if let Def::Struct(def_id) = def {\n-                            if let Some((ctor_def, ctor_vis))\n-                                    = this.struct_constructors.get(&def_id).cloned() {\n-                                accessible_ctor = this.is_accessible(ctor_vis);\n-                                if is_expected(ctor_def) && !accessible_ctor {\n-                                    err.span_label(span, format!(\"constructor is not visible \\\n-                                                                   here due to private fields\"));\n-                                }\n+                    (Def::Struct(def_id), _) if ns == ValueNS && is_struct_like(def) => {\n+                        if let Some((ctor_def, ctor_vis))\n+                                = this.struct_constructors.get(&def_id).cloned() {\n+                            let accessible_ctor = this.is_accessible(ctor_vis);\n+                            if is_expected(ctor_def) && !accessible_ctor {\n+                                err.span_label(span, format!(\"constructor is not visible \\\n+                                                              here due to private fields\"));\n+                            } else if accessible_ctor {\n+                                let block = match ctor_def {\n+                                    Def::StructCtor(_, CtorKind::Fn) |\n+                                    Def::VariantCtor(_, CtorKind::Fn) => \"(/* fields */)\",\n+                                    Def::StructCtor(_, CtorKind::Fictive) |\n+                                    Def::VariantCtor(_, CtorKind::Fictive) => {\n+                                        \" { /* fields */ }\"\n+                                    }\n+                                    def => bug!(\"found def `{:?}` when looking for a ctor\",\n+                                                def),\n+                                };\n+                                err.span_label(span, format!(\"did you mean `{}{}`?\",\n+                                                             path_str,\n+                                                             block));\n                             }\n-                        }\n-                        if accessible_ctor {\n+                        } else {\n                             err.span_label(span, format!(\"did you mean `{} {{ /* fields */ }}`?\",\n                                                          path_str));\n                         }"}, {"sha": "f93007c8b61443b1d440ec555072c593a8264fbf", "filename": "src/test/ui/resolve/issue-18252.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr?ref=a317da42b16ffe4d06c12ab795aef3cbc0859de9", "patch": "@@ -2,7 +2,7 @@ error[E0423]: expected function, found struct variant `Foo::Variant`\n   --> $DIR/issue-18252.rs:16:13\n    |\n 16 |     let f = Foo::Variant(42);\n-   |             ^^^^^^^^^^^^ did you mean `Foo::Variant { /* fields */ }`?\n+   |             ^^^^^^^^^^^^ not a function\n \n error: aborting due to previous error\n "}, {"sha": "44690158b587fd862ef7ba7c57deb03c59e73373", "filename": "src/test/ui/resolve/issue-19452.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr?ref=a317da42b16ffe4d06c12ab795aef3cbc0859de9", "patch": "@@ -2,13 +2,13 @@ error[E0423]: expected value, found struct variant `Homura::Madoka`\n   --> $DIR/issue-19452.rs:19:18\n    |\n 19 |     let homura = Homura::Madoka;\n-   |                  ^^^^^^^^^^^^^^ did you mean `Homura::Madoka { /* fields */ }`?\n+   |                  ^^^^^^^^^^^^^^ not a value\n \n error[E0423]: expected value, found struct variant `issue_19452_aux::Homura::Madoka`\n   --> $DIR/issue-19452.rs:22:18\n    |\n 22 |     let homura = issue_19452_aux::Homura::Madoka;\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ did you mean `issue_19452_aux::Homura::Madoka { /* fields */ }`?\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a value\n \n error: aborting due to 2 previous errors\n "}, {"sha": "821a51e9427d3245c2fd0ba65775d0dde3dc2c9e", "filename": "src/test/ui/resolve/privacy-struct-ctor.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs?ref=a317da42b16ffe4d06c12ab795aef3cbc0859de9", "patch": "@@ -14,6 +14,9 @@ extern crate privacy_struct_ctor as xcrate;\n \n mod m {\n     pub struct S(u8);\n+    pub struct S2 {\n+        s: u8\n+    }\n \n     pub mod n {\n         pub(in m) struct Z(pub(in m::n) u8);\n@@ -29,13 +32,17 @@ mod m {\n }\n \n use m::S; // OK, only the type is imported\n+use m::S2; // OK, only the type is imported\n \n fn main() {\n     m::S; //~ ERROR tuple struct `S` is private\n     S;\n     //~^ ERROR expected value, found struct `S`\n     m::n::Z; //~ ERROR tuple struct `Z` is private\n \n+    S2;\n+    //~^ ERROR expected value, found struct `S2`\n+\n     xcrate::m::S; //~ ERROR tuple struct `S` is private\n     xcrate::S;\n     //~^ ERROR expected value, found struct `xcrate::S`"}, {"sha": "e274ac02c5739ea557b8a0639c3ca316ff5da83c", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=a317da42b16ffe4d06c12ab795aef3cbc0859de9", "patch": "@@ -1,65 +1,71 @@\n error[E0423]: expected value, found struct `Z`\n-  --> $DIR/privacy-struct-ctor.rs:26:9\n+  --> $DIR/privacy-struct-ctor.rs:29:9\n    |\n-26 |         Z;\n+29 |         Z;\n    |         ^\n    |         |\n    |         did you mean `S`?\n    |         constructor is not visible here due to private fields\n help: possible better candidate is found in another module, you can import it into scope\n    |\n-22 |     use m::n::Z;\n+25 |     use m::n::Z;\n    |\n \n error[E0423]: expected value, found struct `S`\n-  --> $DIR/privacy-struct-ctor.rs:35:5\n+  --> $DIR/privacy-struct-ctor.rs:39:5\n    |\n-35 |     S;\n+39 |     S;\n    |     ^ constructor is not visible here due to private fields\n help: possible better candidate is found in another module, you can import it into scope\n    |\n-31 | use m::S;\n+34 | use m::S;\n+   |\n+\n+error[E0423]: expected value, found struct `S2`\n+  --> $DIR/privacy-struct-ctor.rs:43:5\n    |\n+43 |     S2;\n+   |     ^^ did you mean `S2 { /* fields */ }`?\n \n error[E0423]: expected value, found struct `xcrate::S`\n-  --> $DIR/privacy-struct-ctor.rs:40:5\n+  --> $DIR/privacy-struct-ctor.rs:47:5\n    |\n-40 |     xcrate::S;\n+47 |     xcrate::S;\n    |     ^^^^^^^^^ constructor is not visible here due to private fields\n help: possible better candidate is found in another module, you can import it into scope\n    |\n-31 | use m::S;\n+34 | use m::S;\n    |\n \n error[E0603]: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:25:9\n+  --> $DIR/privacy-struct-ctor.rs:28:9\n    |\n-25 |         n::Z; //~ ERROR tuple struct `Z` is private\n+28 |         n::Z; //~ ERROR tuple struct `Z` is private\n    |         ^^^^\n \n error[E0603]: tuple struct `S` is private\n-  --> $DIR/privacy-struct-ctor.rs:34:5\n+  --> $DIR/privacy-struct-ctor.rs:38:5\n    |\n-34 |     m::S; //~ ERROR tuple struct `S` is private\n+38 |     m::S; //~ ERROR tuple struct `S` is private\n    |     ^^^^\n \n error[E0603]: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:37:5\n+  --> $DIR/privacy-struct-ctor.rs:41:5\n    |\n-37 |     m::n::Z; //~ ERROR tuple struct `Z` is private\n+41 |     m::n::Z; //~ ERROR tuple struct `Z` is private\n    |     ^^^^^^^\n \n error[E0603]: tuple struct `S` is private\n-  --> $DIR/privacy-struct-ctor.rs:39:5\n+  --> $DIR/privacy-struct-ctor.rs:46:5\n    |\n-39 |     xcrate::m::S; //~ ERROR tuple struct `S` is private\n+46 |     xcrate::m::S; //~ ERROR tuple struct `S` is private\n    |     ^^^^^^^^^^^^\n \n error[E0603]: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:42:5\n+  --> $DIR/privacy-struct-ctor.rs:49:5\n    |\n-42 |     xcrate::m::n::Z; //~ ERROR tuple struct `Z` is private\n+49 |     xcrate::m::n::Z; //~ ERROR tuple struct `Z` is private\n    |     ^^^^^^^^^^^^^^^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 9 previous errors\n "}, {"sha": "3b89c87b36f27e272d23348db0393cc40e7028af", "filename": "src/test/ui/resolve/tuple-struct-alias.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a317da42b16ffe4d06c12ab795aef3cbc0859de9/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr?ref=a317da42b16ffe4d06c12ab795aef3cbc0859de9", "patch": "@@ -2,31 +2,25 @@ error[E0423]: expected function, found self type `Self`\n   --> $DIR/tuple-struct-alias.rs:16:17\n    |\n 16 |         let s = Self(0, 1); //~ ERROR expected function\n-   |                 ^^^^ did you mean `Self { /* fields */ }`?\n+   |                 ^^^^ not a function\n \n error[E0532]: expected tuple struct/variant, found self type `Self`\n   --> $DIR/tuple-struct-alias.rs:18:13\n    |\n 18 |             Self(..) => {} //~ ERROR expected tuple struct/variant\n-   |             ^^^^ did you mean `Self { /* fields */ }`?\n+   |             ^^^^ not a tuple struct/variant\n \n error[E0423]: expected function, found type alias `A`\n   --> $DIR/tuple-struct-alias.rs:24:13\n    |\n 24 |     let s = A(0, 1); //~ ERROR expected function\n-   |             ^\n-   |             |\n-   |             did you mean `S`?\n-   |             did you mean `A { /* fields */ }`?\n+   |             ^ did you mean `S`?\n \n error[E0532]: expected tuple struct/variant, found type alias `A`\n   --> $DIR/tuple-struct-alias.rs:26:9\n    |\n 26 |         A(..) => {} //~ ERROR expected tuple struct/variant\n-   |         ^\n-   |         |\n-   |         did you mean `S`?\n-   |         did you mean `A { /* fields */ }`?\n+   |         ^ did you mean `S`?\n \n error: aborting due to 4 previous errors\n "}]}