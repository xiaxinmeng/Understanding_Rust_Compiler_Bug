{"sha": "3ed79944e8b5fc69f325db955336aff86e9210e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZDc5OTQ0ZThiNWZjNjlmMzI1ZGI5NTUzMzZhZmY4NmU5MjEwZTU=", "commit": {"author": {"name": "Philipp Oppermann", "email": "dev@phil-opp.com", "date": "2015-10-13T15:11:49Z"}, "committer": {"name": "Philipp Oppermann", "email": "dev@phil-opp.com", "date": "2015-10-20T17:56:45Z"}, "message": "Make Unique::new const function", "tree": {"sha": "6b0cf20dff7ec08daac9ce86434329be89028974", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b0cf20dff7ec08daac9ce86434329be89028974"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ed79944e8b5fc69f325db955336aff86e9210e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed79944e8b5fc69f325db955336aff86e9210e5", "html_url": "https://github.com/rust-lang/rust/commit/3ed79944e8b5fc69f325db955336aff86e9210e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ed79944e8b5fc69f325db955336aff86e9210e5/comments", "author": {"login": "phil-opp", "id": 1131315, "node_id": "MDQ6VXNlcjExMzEzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1131315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phil-opp", "html_url": "https://github.com/phil-opp", "followers_url": "https://api.github.com/users/phil-opp/followers", "following_url": "https://api.github.com/users/phil-opp/following{/other_user}", "gists_url": "https://api.github.com/users/phil-opp/gists{/gist_id}", "starred_url": "https://api.github.com/users/phil-opp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phil-opp/subscriptions", "organizations_url": "https://api.github.com/users/phil-opp/orgs", "repos_url": "https://api.github.com/users/phil-opp/repos", "events_url": "https://api.github.com/users/phil-opp/events{/privacy}", "received_events_url": "https://api.github.com/users/phil-opp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phil-opp", "id": 1131315, "node_id": "MDQ6VXNlcjExMzEzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1131315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phil-opp", "html_url": "https://github.com/phil-opp", "followers_url": "https://api.github.com/users/phil-opp/followers", "following_url": "https://api.github.com/users/phil-opp/following{/other_user}", "gists_url": "https://api.github.com/users/phil-opp/gists{/gist_id}", "starred_url": "https://api.github.com/users/phil-opp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phil-opp/subscriptions", "organizations_url": "https://api.github.com/users/phil-opp/orgs", "repos_url": "https://api.github.com/users/phil-opp/repos", "events_url": "https://api.github.com/users/phil-opp/events{/privacy}", "received_events_url": "https://api.github.com/users/phil-opp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9d528534477281bab5cdd5b95e9c667f25ac21e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d528534477281bab5cdd5b95e9c667f25ac21e", "html_url": "https://github.com/rust-lang/rust/commit/a9d528534477281bab5cdd5b95e9c667f25ac21e"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "63057aadf77e8e8db518878679dd54240e868097", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3ed79944e8b5fc69f325db955336aff86e9210e5/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ed79944e8b5fc69f325db955336aff86e9210e5/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=3ed79944e8b5fc69f325db955336aff86e9210e5", "patch": "@@ -498,12 +498,28 @@ unsafe impl<T: Send + ?Sized> Send for Unique<T> { }\n #[unstable(feature = \"unique\", issue = \"27730\")]\n unsafe impl<T: Sync + ?Sized> Sync for Unique<T> { }\n \n+#[cfg(stage0)]\n+macro_rules! unique_new {\n+    () => (\n+        /// Creates a new `Unique`.\n+        pub unsafe fn new(ptr: *mut T) -> Unique<T> {\n+            Unique { pointer: NonZero::new(ptr), _marker: PhantomData }\n+        }\n+    )\n+}\n+#[cfg(not(stage0))]\n+macro_rules! unique_new {\n+    () => (\n+        /// Creates a new `Unique`.\n+        pub unsafe const fn new(ptr: *mut T) -> Unique<T> {\n+            Unique { pointer: NonZero::new(ptr), _marker: PhantomData }\n+        }\n+    )\n+}\n+\n #[unstable(feature = \"unique\", issue = \"27730\")]\n impl<T: ?Sized> Unique<T> {\n-    /// Creates a new `Unique`.\n-    pub unsafe fn new(ptr: *mut T) -> Unique<T> {\n-        Unique { pointer: NonZero::new(ptr), _marker: PhantomData }\n-    }\n+    unique_new!{}\n \n     /// Dereferences the content.\n     pub unsafe fn get(&self) -> &T {"}]}