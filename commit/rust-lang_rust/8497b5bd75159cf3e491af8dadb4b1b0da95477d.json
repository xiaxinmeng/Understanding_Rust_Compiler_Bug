{"sha": "8497b5bd75159cf3e491af8dadb4b1b0da95477d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OTdiNWJkNzUxNTljZjNlNDkxYWY4ZGFkYjRiMWIwZGE5NTQ3N2Q=", "commit": {"author": {"name": "Matt Hall", "email": "matthew@quickbeam.me.uk", "date": "2021-02-20T17:11:04Z"}, "committer": {"name": "Matt Hall", "email": "matthew@quickbeam.me.uk", "date": "2021-02-20T17:11:04Z"}, "message": "Use format_to! to make logic a bit nicer", "tree": {"sha": "08118d1edaf39059fe328c854a07ad294513ce05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08118d1edaf39059fe328c854a07ad294513ce05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8497b5bd75159cf3e491af8dadb4b1b0da95477d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8497b5bd75159cf3e491af8dadb4b1b0da95477d", "html_url": "https://github.com/rust-lang/rust/commit/8497b5bd75159cf3e491af8dadb4b1b0da95477d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8497b5bd75159cf3e491af8dadb4b1b0da95477d/comments", "author": {"login": "mattyhall", "id": 5175499, "node_id": "MDQ6VXNlcjUxNzU0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5175499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattyhall", "html_url": "https://github.com/mattyhall", "followers_url": "https://api.github.com/users/mattyhall/followers", "following_url": "https://api.github.com/users/mattyhall/following{/other_user}", "gists_url": "https://api.github.com/users/mattyhall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattyhall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattyhall/subscriptions", "organizations_url": "https://api.github.com/users/mattyhall/orgs", "repos_url": "https://api.github.com/users/mattyhall/repos", "events_url": "https://api.github.com/users/mattyhall/events{/privacy}", "received_events_url": "https://api.github.com/users/mattyhall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattyhall", "id": 5175499, "node_id": "MDQ6VXNlcjUxNzU0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5175499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattyhall", "html_url": "https://github.com/mattyhall", "followers_url": "https://api.github.com/users/mattyhall/followers", "following_url": "https://api.github.com/users/mattyhall/following{/other_user}", "gists_url": "https://api.github.com/users/mattyhall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattyhall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattyhall/subscriptions", "organizations_url": "https://api.github.com/users/mattyhall/orgs", "repos_url": "https://api.github.com/users/mattyhall/repos", "events_url": "https://api.github.com/users/mattyhall/events{/privacy}", "received_events_url": "https://api.github.com/users/mattyhall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b963893349c0df4c6e8786303eaa39e2bc9fa500", "url": "https://api.github.com/repos/rust-lang/rust/commits/b963893349c0df4c6e8786303eaa39e2bc9fa500", "html_url": "https://github.com/rust-lang/rust/commit/b963893349c0df4c6e8786303eaa39e2bc9fa500"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "91c395c1b2067cef13848b290315302bcafdf288", "filename": "crates/assists/src/handlers/move_module_to_file.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8497b5bd75159cf3e491af8dadb4b1b0da95477d/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8497b5bd75159cf3e491af8dadb4b1b0da95477d/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs?ref=8497b5bd75159cf3e491af8dadb4b1b0da95477d", "patch": "@@ -1,5 +1,6 @@\n use ast::{edit::IndentLevel, VisibilityOwner};\n use ide_db::base_db::AnchoredPathBuf;\n+use stdx::format_to;\n use syntax::{\n     ast::{self, edit::AstNodeEdit, NameOwner},\n     AstNode, TextRange,\n@@ -36,8 +37,6 @@ pub(crate) fn move_module_to_file(acc: &mut Assists, ctx: &AssistContext) -> Opt\n \n     let module_def = ctx.sema.to_def(&module_ast)?;\n     let parent_module = module_def.parent(ctx.db())?;\n-    let vis_str =\n-        if let Some(v) = module_ast.visibility() { v.to_string() + \" \" } else { \"\".to_string() };\n \n     acc.add(\n         AssistId(\"move_module_to_file\", AssistKind::RefactorExtract),\n@@ -61,10 +60,13 @@ pub(crate) fn move_module_to_file(acc: &mut Assists, ctx: &AssistContext) -> Opt\n                 items\n             };\n \n-            builder.replace(\n-                module_ast.syntax().text_range(),\n-                format!(\"{}mod {};\", vis_str, module_name),\n-            );\n+            let mut buf = String::new();\n+            if let Some(v) = module_ast.visibility() {\n+                format_to!(buf, \"{} \", v);\n+            }\n+            format_to!(buf, \"mod {};\", module_name);\n+\n+            builder.replace(module_ast.syntax().text_range(), buf);\n \n             let dst = AnchoredPathBuf { anchor: ctx.frange.file_id, path };\n             builder.create_file(dst, contents);"}]}