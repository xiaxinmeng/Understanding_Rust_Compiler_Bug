{"sha": "27129c6aba153299100887de5c8643cbe3e9b8ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MTI5YzZhYmExNTMyOTkxMDA4ODdkZTVjODY0M2NiZTNlOWI4ZWY=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-08-28T13:43:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-08T21:22:15Z"}, "message": "core/std: finish making futures sendable + test.. still issues", "tree": {"sha": "839ba16a4951b31b64d85989425a1fcd69002ff3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/839ba16a4951b31b64d85989425a1fcd69002ff3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27129c6aba153299100887de5c8643cbe3e9b8ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27129c6aba153299100887de5c8643cbe3e9b8ef", "html_url": "https://github.com/rust-lang/rust/commit/27129c6aba153299100887de5c8643cbe3e9b8ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27129c6aba153299100887de5c8643cbe3e9b8ef/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bdda1e0de6097c1647ac49da8b24e86dd5299b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bdda1e0de6097c1647ac49da8b24e86dd5299b8", "html_url": "https://github.com/rust-lang/rust/commit/6bdda1e0de6097c1647ac49da8b24e86dd5299b8"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "82deaf8953764b9b43b52a4f0c194fdc9e5c6642", "filename": "src/libcore/future.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/27129c6aba153299100887de5c8643cbe3e9b8ef/src%2Flibcore%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27129c6aba153299100887de5c8643cbe3e9b8ef/src%2Flibcore%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture.rs?ref=27129c6aba153299100887de5c8643cbe3e9b8ef", "patch": "@@ -37,7 +37,7 @@ struct Future<A> {\n }\n \n priv enum FutureState<A> {\n-    Pending(fn@() -> A),\n+    Pending(fn~() -> A),\n     Evaluating,\n     Forced(A)\n }\n@@ -93,7 +93,7 @@ fn from_port<A:Send>(+port: future_pipe::client::waiting<A>) -> Future<A> {\n     }\n }\n \n-fn from_fn<A>(+f: @fn() -> A) -> Future<A> {\n+fn from_fn<A>(+f: ~fn() -> A) -> Future<A> {\n     /*!\n      * Create a future from a function.\n      *\n@@ -239,4 +239,14 @@ mod test {\n         let f = spawn(|| fail);\n         let _x: ~str = get(&f);\n     }\n-}\n\\ No newline at end of file\n+\n+    #[test]\n+    fn test_sendable_future() {\n+        let expected = ~\"schlorf\";\n+        let f = do spawn |copy expected| { expected };\n+        do task::spawn {\n+            let actual = get(&f);\n+            assert actual == expected;\n+        }\n+    }\n+}"}, {"sha": "3b1f9d8f845b5afdb495d09f243577013eb413dd", "filename": "src/libcore/task.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27129c6aba153299100887de5c8643cbe3e9b8ef/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27129c6aba153299100887de5c8643cbe3e9b8ef/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=27129c6aba153299100887de5c8643cbe3e9b8ef", "patch": "@@ -1754,7 +1754,7 @@ fn test_spawn_linked_sup_fail_down() { // parent fails; child fails\n         opts.supervised = true;\n         move opts\n     };\n-    \n+\n     let b0 = task();\n     let b1 = TaskBuilder({\n         opts: move opts,"}, {"sha": "00c80366084a47fed00c0ff98df690f8fa625fe4", "filename": "src/rustdoc/markdown_writer.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/27129c6aba153299100887de5c8643cbe3e9b8ef/src%2Frustdoc%2Fmarkdown_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27129c6aba153299100887de5c8643cbe3e9b8ef/src%2Frustdoc%2Fmarkdown_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_writer.rs?ref=27129c6aba153299100887de5c8643cbe3e9b8ef", "patch": "@@ -285,15 +285,14 @@ fn future_writer_factory(\n }\n \n fn future_writer() -> (writer, future::Future<~str>) {\n-    let port = comm::Port();\n-    let chan = comm::Chan(port);\n+    let (chan, port) = pipes::stream();\n     let writer = fn~(+instr: writeinstr) {\n-        comm::send(chan, copy instr);\n+        chan.send(copy instr);\n     };\n     let future = do future::from_fn {\n         let mut res = ~\"\";\n         loop {\n-            match comm::recv(port) {\n+            match port.recv() {\n               write(s) => res += s,\n               done => break\n             }"}]}