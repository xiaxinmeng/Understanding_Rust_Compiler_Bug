{"sha": "e792d1d96a88dbf737675de0682d82b7ddff8984", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3OTJkMWQ5NmE4OGRiZjczNzY3NWRlMDY4MmQ4MmI3ZGRmZjg5ODQ=", "commit": {"author": {"name": "Collins Abitekaniza", "email": "abtcolns@gmail.com", "date": "2018-07-13T13:53:29Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-09-12T19:31:53Z"}, "message": "remove struct CleanTools", "tree": {"sha": "9f14079143a9bdac11ea26fbe8f0d32702e95e2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f14079143a9bdac11ea26fbe8f0d32702e95e2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e792d1d96a88dbf737675de0682d82b7ddff8984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e792d1d96a88dbf737675de0682d82b7ddff8984", "html_url": "https://github.com/rust-lang/rust/commit/e792d1d96a88dbf737675de0682d82b7ddff8984", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e792d1d96a88dbf737675de0682d82b7ddff8984/comments", "author": {"login": "collin5", "id": 11579108, "node_id": "MDQ6VXNlcjExNTc5MTA4", "avatar_url": "https://avatars.githubusercontent.com/u/11579108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collin5", "html_url": "https://github.com/collin5", "followers_url": "https://api.github.com/users/collin5/followers", "following_url": "https://api.github.com/users/collin5/following{/other_user}", "gists_url": "https://api.github.com/users/collin5/gists{/gist_id}", "starred_url": "https://api.github.com/users/collin5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collin5/subscriptions", "organizations_url": "https://api.github.com/users/collin5/orgs", "repos_url": "https://api.github.com/users/collin5/repos", "events_url": "https://api.github.com/users/collin5/events{/privacy}", "received_events_url": "https://api.github.com/users/collin5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de3ec8dd1a2c0fbc09b025e7d7276f91f72420d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/de3ec8dd1a2c0fbc09b025e7d7276f91f72420d9", "html_url": "https://github.com/rust-lang/rust/commit/de3ec8dd1a2c0fbc09b025e7d7276f91f72420d9"}], "stats": {"total": 75, "additions": 22, "deletions": 53}, "files": [{"sha": "13449f0e00f97206eb14debc36de6807ee487626", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=e792d1d96a88dbf737675de0682d82b7ddff8984", "patch": "@@ -754,6 +754,7 @@ impl<'a> Builder<'a> {\n             match mode {\n                 Mode::Std => {\n                     self.clear_if_dirty(&my_out, &self.rustc(compiler));\n+                    self.clear_if_dirty(&my_out, &libstd_stamp);\n                 },\n                 Mode::Test => {\n                     self.clear_if_dirty(&my_out, &libstd_stamp);\n@@ -763,9 +764,19 @@ impl<'a> Builder<'a> {\n                     self.clear_if_dirty(&my_out, &libstd_stamp);\n                     self.clear_if_dirty(&my_out, &libtest_stamp);\n                 },\n-                Mode::Codegen => { },\n-                Mode::ToolStd => { },\n-                Mode::ToolTest => { },\n+                Mode::Codegen => {\n+                    self.clear_if_dirty(&my_out, &self.rustc(compiler));\n+                    self.clear_if_dirty(&my_out, &libstd_stamp);\n+                    self.clear_if_dirty(&my_out, &libtest_stamp);\n+                },\n+                Mode::ToolBootstrap => { },\n+                Mode::ToolStd => {\n+                    self.clear_if_dirty(&my_out, &libstd_stamp);\n+                },\n+                Mode::ToolTest => {\n+                    self.clear_if_dirty(&my_out, &libstd_stamp);\n+                    self.clear_if_dirty(&my_out, &libtest_stamp);\n+                },\n                 Mode::ToolRustc => {\n                     self.clear_if_dirty(&my_out, &libstd_stamp);\n                     self.clear_if_dirty(&my_out, &libtest_stamp);"}, {"sha": "04de97b53156269b519fcbd33119f66b0e5dd637", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=e792d1d96a88dbf737675de0682d82b7ddff8984", "patch": "@@ -12,7 +12,7 @@\n \n use compile::{run_cargo, std_cargo, test_cargo, rustc_cargo, rustc_cargo_env, add_to_sysroot};\n use builder::{RunConfig, Builder, ShouldRun, Step};\n-use tool::{self, prepare_tool_cargo, SourceType};\n+use tool::{prepare_tool_cargo, SourceType};\n use {Compiler, Mode};\n use cache::{INTERNER, Interned};\n use std::path::PathBuf;\n@@ -236,12 +236,7 @@ impl Step for Rustdoc {\n \n         let libdir = builder.sysroot_libdir(compiler, target);\n         add_to_sysroot(&builder, &libdir, &rustdoc_stamp(builder, compiler, target));\n-\n-        builder.ensure(tool::CleanTools {\n-            compiler,\n-            target,\n-            cause: Mode::Rustc,\n-        });\n+        builder.cargo(compiler, Mode::ToolRustc, target, \"clean\");\n     }\n }\n "}, {"sha": "ff6d2b504d2650a236fda76fb8eaba4ba60ad8dd", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=e792d1d96a88dbf737675de0682d82b7ddff8984", "patch": "@@ -32,7 +32,6 @@ use serde_json;\n use util::{exe, libdir, is_dylib, CiEnv};\n use {Compiler, Mode};\n use native;\n-use tool;\n \n use cache::{INTERNER, Interned};\n use builder::{Step, RunConfig, ShouldRun, Builder};\n@@ -244,11 +243,7 @@ impl Step for StdLink {\n             copy_apple_sanitizer_dylibs(builder, &builder.native_dir(target), \"osx\", &libdir);\n         }\n \n-        builder.ensure(tool::CleanTools {\n-            compiler: target_compiler,\n-            target,\n-            cause: Mode::Std,\n-        });\n+        builder.cargo(target_compiler, Mode::ToolStd, target, \"clean\");\n     }\n }\n \n@@ -444,11 +439,8 @@ impl Step for TestLink {\n                 target));\n         add_to_sysroot(builder, &builder.sysroot_libdir(target_compiler, target),\n                     &libtest_stamp(builder, compiler, target));\n-        builder.ensure(tool::CleanTools {\n-            compiler: target_compiler,\n-            target,\n-            cause: Mode::Test,\n-        });\n+\n+        builder.cargo(target_compiler, Mode::ToolTest, target, \"clean\");\n     }\n }\n \n@@ -606,11 +598,7 @@ impl Step for RustcLink {\n                  target));\n         add_to_sysroot(builder, &builder.sysroot_libdir(target_compiler, target),\n                        &librustc_stamp(builder, compiler, target));\n-        builder.ensure(tool::CleanTools {\n-            compiler: target_compiler,\n-            target,\n-            cause: Mode::Rustc,\n-        });\n+        builder.cargo(target_compiler, Mode::ToolRustc, target, \"clean\");\n     }\n }\n "}, {"sha": "5e4c1786b0d317c12ab354290f14e179942dd0c8", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=e792d1d96a88dbf737675de0682d82b7ddff8984", "patch": "@@ -347,6 +347,7 @@ pub enum Mode {\n     /// Compile a tool which uses all libraries we compile (up to rustc).\n     /// Doesn't use the stage0 compiler libraries like \"other\", and includes\n     /// tools like rustdoc, cargo, rls, etc.\n+    ToolTest,\n     ToolStd,\n     ToolRustc,\n }\n@@ -567,6 +568,7 @@ impl Build {\n             Mode::Codegen => \"-codegen\",\n             Mode::ToolBootstrap => \"-bootstrap-tools\",\n             Mode::ToolStd => \"-tools\",\n+            Mode::ToolTest => \"-tools\",\n             Mode::ToolRustc => \"-tools\",\n         };\n         self.out.join(&*compiler.host)"}, {"sha": "e5299761a159f76ef0dfa70d85d943b4faf1f3a0", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e792d1d96a88dbf737675de0682d82b7ddff8984/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=e792d1d96a88dbf737675de0682d82b7ddff8984", "patch": "@@ -25,33 +25,6 @@ use channel::GitInfo;\n use cache::Interned;\n use toolstate::ToolState;\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n-pub struct CleanTools {\n-    pub compiler: Compiler,\n-    pub target: Interned<String>,\n-    pub cause: Mode,\n-}\n-\n-impl Step for CleanTools {\n-    type Output = ();\n-\n-    fn should_run(run: ShouldRun) -> ShouldRun {\n-        run.never()\n-    }\n-\n-    fn run(self, _builder: &Builder) {\n-        let cause = self.cause;\n-\n-        for &cur_mode in &[Mode::Std, Mode::Test, Mode::Rustc] {\n-            // If we are a rustc tool, and std changed, we also need to clear ourselves out -- our\n-            // dependencies depend on std. Therefore, we iterate up until our own mode.\n-            if cause == cur_mode {\n-                break;\n-            }\n-        }\n-    }\n-}\n-\n #[derive(Debug, Clone, Hash, PartialEq, Eq)]\n pub enum SourceType {\n     InTree,"}]}