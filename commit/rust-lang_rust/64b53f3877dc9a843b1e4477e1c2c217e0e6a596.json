{"sha": "64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0YjUzZjM4NzdkYzlhODQzYjFlNDQ3N2UxYzJjMjE3ZTBlNmE1OTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-25T03:29:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-25T03:29:59Z"}, "message": "Auto merge of #5920 - giraffate:fix_fp_for_redundant_closure_call, r=mikerite\n\nFix FP for `redundant_closure_call`\n\nFix #5916\n\nchangelog: Fix FP for `redundant_closure_call` when called in function body", "tree": {"sha": "ce0746681ff42ee8ef9d8ecde79ab1c5ac97fcc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce0746681ff42ee8ef9d8ecde79ab1c5ac97fcc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "html_url": "https://github.com/rust-lang/rust/commit/64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d9a485ef11c3c30fb87f35f61278027e7370510", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9a485ef11c3c30fb87f35f61278027e7370510", "html_url": "https://github.com/rust-lang/rust/commit/8d9a485ef11c3c30fb87f35f61278027e7370510"}, {"sha": "9fe0ac36a53dfba14f5f33f5bab2fd243fb2c18e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe0ac36a53dfba14f5f33f5bab2fd243fb2c18e", "html_url": "https://github.com/rust-lang/rust/commit/9fe0ac36a53dfba14f5f33f5bab2fd243fb2c18e"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "49cb2ffc4e372a3f765e89e1f9fe4bf0f7740a23", "filename": "clippy_lints/src/redundant_closure_call.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/clippy_lints%2Fsrc%2Fredundant_closure_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/clippy_lints%2Fsrc%2Fredundant_closure_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_closure_call.rs?ref=64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "patch": "@@ -77,7 +77,7 @@ impl EarlyLintPass for RedundantClosureCall {\n                         cx,\n                         REDUNDANT_CLOSURE_CALL,\n                         expr.span,\n-                        \"try not to call a closure in the expression where it is declared.\",\n+                        \"try not to call a closure in the expression where it is declared\",\n                         |diag| {\n                             if decl.inputs.is_empty() {\n                                 let mut app = Applicability::MachineApplicable;\n@@ -95,12 +95,17 @@ impl EarlyLintPass for RedundantClosureCall {\n \n impl<'tcx> LateLintPass<'tcx> for RedundantClosureCall {\n     fn check_block(&mut self, cx: &LateContext<'tcx>, block: &'tcx hir::Block<'_>) {\n-        fn count_closure_usage<'tcx>(block: &'tcx hir::Block<'_>, path: &'tcx hir::Path<'tcx>) -> usize {\n-            struct ClosureUsageCount<'tcx> {\n+        fn count_closure_usage<'a, 'tcx>(\n+            cx: &'a LateContext<'tcx>,\n+            block: &'tcx hir::Block<'_>,\n+            path: &'tcx hir::Path<'tcx>,\n+        ) -> usize {\n+            struct ClosureUsageCount<'a, 'tcx> {\n+                cx: &'a LateContext<'tcx>,\n                 path: &'tcx hir::Path<'tcx>,\n                 count: usize,\n             };\n-            impl<'tcx> hir_visit::Visitor<'tcx> for ClosureUsageCount<'tcx> {\n+            impl<'a, 'tcx> hir_visit::Visitor<'tcx> for ClosureUsageCount<'a, 'tcx> {\n                 type Map = Map<'tcx>;\n \n                 fn visit_expr(&mut self, expr: &'tcx hir::Expr<'tcx>) {\n@@ -117,10 +122,10 @@ impl<'tcx> LateLintPass<'tcx> for RedundantClosureCall {\n                 }\n \n                 fn nested_visit_map(&mut self) -> hir_visit::NestedVisitorMap<Self::Map> {\n-                    hir_visit::NestedVisitorMap::None\n+                    hir_visit::NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n                 }\n             };\n-            let mut closure_usage_count = ClosureUsageCount { path, count: 0 };\n+            let mut closure_usage_count = ClosureUsageCount { cx, path, count: 0 };\n             closure_usage_count.visit_block(block);\n             closure_usage_count.count\n         }\n@@ -136,7 +141,7 @@ impl<'tcx> LateLintPass<'tcx> for RedundantClosureCall {\n                 if let hir::ExprKind::Call(ref closure, _) = call.kind;\n                 if let hir::ExprKind::Path(hir::QPath::Resolved(_, ref path)) = closure.kind;\n                 if ident == path.segments[0].ident;\n-                if count_closure_usage(block, path) == 1;\n+                if count_closure_usage(cx, block, path) == 1;\n                 then {\n                     span_lint(\n                         cx,"}, {"sha": "2735e41738f0d0ef4555759f74260fa5e82bca38", "filename": "tests/ui/redundant_closure_call_early.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/tests%2Fui%2Fredundant_closure_call_early.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/tests%2Fui%2Fredundant_closure_call_early.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_early.stderr?ref=64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "patch": "@@ -1,12 +1,12 @@\n-error: try not to call a closure in the expression where it is declared.\n+error: try not to call a closure in the expression where it is declared\n   --> $DIR/redundant_closure_call_early.rs:9:17\n    |\n LL |     let mut k = (|m| m + 1)(i);\n    |                 ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::redundant-closure-call` implied by `-D warnings`\n \n-error: try not to call a closure in the expression where it is declared.\n+error: try not to call a closure in the expression where it is declared\n   --> $DIR/redundant_closure_call_early.rs:12:9\n    |\n LL |     k = (|a, b| a * b)(1, 5);"}, {"sha": "afd704ef12a934f913454334a42bd68c5a95a954", "filename": "tests/ui/redundant_closure_call_fixable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/tests%2Fui%2Fredundant_closure_call_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/tests%2Fui%2Fredundant_closure_call_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_fixable.stderr?ref=64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "patch": "@@ -1,4 +1,4 @@\n-error: try not to call a closure in the expression where it is declared.\n+error: try not to call a closure in the expression where it is declared\n   --> $DIR/redundant_closure_call_fixable.rs:7:13\n    |\n LL |     let a = (|| 42)();"}, {"sha": "1f4864b72895bf10142574e214bdfe352eba896a", "filename": "tests/ui/redundant_closure_call_late.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/tests%2Fui%2Fredundant_closure_call_late.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64b53f3877dc9a843b1e4477e1c2c217e0e6a596/tests%2Fui%2Fredundant_closure_call_late.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_late.rs?ref=64b53f3877dc9a843b1e4477e1c2c217e0e6a596", "patch": "@@ -24,4 +24,16 @@ fn main() {\n     let shadowed_closure = || 2;\n     i = shadowed_closure();\n     i = shadowed_closure();\n+\n+    // Fix FP in #5916\n+    let mut x;\n+    let create = || 2 * 2;\n+    x = create();\n+    fun(move || {\n+        x = create();\n+    })\n+}\n+\n+fn fun<T: 'static + FnMut()>(mut f: T) {\n+    f();\n }"}]}