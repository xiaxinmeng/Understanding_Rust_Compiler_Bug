{"sha": "798fb856515fd2e9aeedbfe21a903c09cf85c165", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OGZiODU2NTE1ZmQyZTlhZWVkYmZlMjFhOTAzYzA5Y2Y4NWMxNjU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-03T14:40:57Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-03T14:40:57Z"}, "message": "Fix assert_assignable", "tree": {"sha": "cd7994bf562dad166e6b34a100dc67488374ad8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd7994bf562dad166e6b34a100dc67488374ad8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/798fb856515fd2e9aeedbfe21a903c09cf85c165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/798fb856515fd2e9aeedbfe21a903c09cf85c165", "html_url": "https://github.com/rust-lang/rust/commit/798fb856515fd2e9aeedbfe21a903c09cf85c165", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/798fb856515fd2e9aeedbfe21a903c09cf85c165/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21edec4ea5bec5b4da691232b3d832cc5d35acf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/21edec4ea5bec5b4da691232b3d832cc5d35acf7", "html_url": "https://github.com/rust-lang/rust/commit/21edec4ea5bec5b4da691232b3d832cc5d35acf7"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "c9516a98bfe446c84b6bbf7363d1f6179247c1d5", "filename": "src/value_and_place.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/798fb856515fd2e9aeedbfe21a903c09cf85c165/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798fb856515fd2e9aeedbfe21a903c09cf85c165/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=798fb856515fd2e9aeedbfe21a903c09cf85c165", "patch": "@@ -406,6 +406,10 @@ impl<'tcx> CPlace<'tcx> {\n             to_ty: Ty<'tcx>,\n         ) {\n             match (&from_ty.kind, &to_ty.kind) {\n+                (ty::Ref(_, a, _), ty::Ref(_, b, _))\n+                | (ty::RawPtr(TypeAndMut { ty: a, mutbl: _}), ty::RawPtr(TypeAndMut { ty: b, mutbl: _})) => {\n+                    assert_assignable(fx, a, b);\n+                }\n                 (ty::FnPtr(_), ty::FnPtr(_)) => {\n                     let from_sig = fx.tcx.normalize_erasing_late_bound_regions(\n                         ParamEnv::reveal_all(),"}]}