{"sha": "11a51488f03405ea539a9fe84973ee972eaa7b96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYTUxNDg4ZjAzNDA1ZWE1MzlhOWZlODQ5NzNlZTk3MmVhYTdiOTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-05T00:57:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-05T00:57:19Z"}, "message": "Auto merge of #63245 - RalfJung:miri-error, r=oli-obk\n\nMore Miri error tweaks\n\n* Add `err_` version of the `_format!` macros\n* Add `UbExperimental` variant so that Miri can mark some UB as experimental (e.g. Stacked Borrows)\n\nr? @oli-obk", "tree": {"sha": "238fcb056d4b3dbb19519a720da08bbdb10430fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/238fcb056d4b3dbb19519a720da08bbdb10430fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11a51488f03405ea539a9fe84973ee972eaa7b96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11a51488f03405ea539a9fe84973ee972eaa7b96", "html_url": "https://github.com/rust-lang/rust/commit/11a51488f03405ea539a9fe84973ee972eaa7b96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11a51488f03405ea539a9fe84973ee972eaa7b96/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3f8a0b5dfddfe443d9db1f1da18348dbceb0e47", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f8a0b5dfddfe443d9db1f1da18348dbceb0e47", "html_url": "https://github.com/rust-lang/rust/commit/d3f8a0b5dfddfe443d9db1f1da18348dbceb0e47"}, {"sha": "b9d4c759f3022c2f7c4334ef7b727044aee03915", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d4c759f3022c2f7c4334ef7b727044aee03915", "html_url": "https://github.com/rust-lang/rust/commit/b9d4c759f3022c2f7c4334ef7b727044aee03915"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "aa36b55ae376eca9abcabc19f6364de627898f67", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/11a51488f03405ea539a9fe84973ee972eaa7b96/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a51488f03405ea539a9fe84973ee972eaa7b96/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=11a51488f03405ea539a9fe84973ee972eaa7b96", "patch": "@@ -342,8 +342,10 @@ impl fmt::Debug for InvalidProgramInfo<'tcx> {\n \n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n pub enum UndefinedBehaviorInfo {\n-    /// Handle cases which for which we do not have a fixed variant.\n+    /// Free-form case. Only for errors that are never caught!\n     Ub(String),\n+    /// Free-form case for experimental UB. Only for errors that are never caught!\n+    UbExperimental(String),\n     /// Unreachable code was executed.\n     Unreachable,\n }\n@@ -352,7 +354,7 @@ impl fmt::Debug for UndefinedBehaviorInfo {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         use UndefinedBehaviorInfo::*;\n         match self {\n-            Ub(ref msg) =>\n+            Ub(msg) | UbExperimental(msg) =>\n                 write!(f, \"{}\", msg),\n             Unreachable =>\n                 write!(f, \"entered unreachable code\"),\n@@ -362,7 +364,7 @@ impl fmt::Debug for UndefinedBehaviorInfo {\n \n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n pub enum UnsupportedOpInfo<'tcx> {\n-    /// Handle cases which for which we do not have a fixed variant.\n+    /// Free-form case. Only for errors that are never caught!\n     Unsupported(String),\n \n     // -- Everything below is not classified yet --\n@@ -406,7 +408,6 @@ pub enum UnsupportedOpInfo<'tcx> {\n     VtableForArgumentlessMethod,\n     ModifiedConstantMemory,\n     ModifiedStatic,\n-    AssumptionNotHeld,\n     TypeNotPrimitive(Ty<'tcx>),\n     ReallocatedWrongMemoryKind(String, String),\n     DeallocatedWrongMemoryKind(String, String),\n@@ -505,8 +506,6 @@ impl fmt::Debug for UnsupportedOpInfo<'tcx> {\n             ModifiedStatic =>\n                 write!(f, \"tried to modify a static's initial value from another static's \\\n                     initializer\"),\n-            AssumptionNotHeld =>\n-                write!(f, \"`assume` argument was false\"),\n             ReallocateNonBasePtr =>\n                 write!(f, \"tried to reallocate with a pointer not to the beginning of an \\\n                     existing object\"),"}, {"sha": "1ec95c29a4a6fd2961157f8bfb549b7996090408", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/11a51488f03405ea539a9fe84973ee972eaa7b96/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a51488f03405ea539a9fe84973ee972eaa7b96/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=11a51488f03405ea539a9fe84973ee972eaa7b96", "patch": "@@ -9,6 +9,11 @@ macro_rules! err_unsup {\n     };\n }\n \n+#[macro_export]\n+macro_rules! err_unsup_format {\n+    ($($tt:tt)*) => { err_unsup!(Unsupported(format!($($tt)*))) };\n+}\n+\n #[macro_export]\n macro_rules! err_inval {\n     ($($tt:tt)*) => {\n@@ -27,6 +32,11 @@ macro_rules! err_ub {\n     };\n }\n \n+#[macro_export]\n+macro_rules! err_ub_format {\n+    ($($tt:tt)*) => { err_ub!(Ub(format!($($tt)*))) };\n+}\n+\n #[macro_export]\n macro_rules! err_panic {\n     ($($tt:tt)*) => {"}]}