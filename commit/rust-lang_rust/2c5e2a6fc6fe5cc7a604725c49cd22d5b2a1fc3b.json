{"sha": "2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNWUyYTZmYzZmZTVjYzdhNjA0NzI1YzQ5Y2QyMmQ1YjJhMWZjM2I=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-09-30T22:52:13Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-09-30T23:03:01Z"}, "message": "Improve wording for external crate resolution error\n\nI think it reads better this way.", "tree": {"sha": "64eb14a026944509afde6b1f43a1e16147f22e3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64eb14a026944509afde6b1f43a1e16147f22e3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b", "html_url": "https://github.com/rust-lang/rust/commit/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "867bd42c38bac3870388765f65386b18cf1d9c5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/867bd42c38bac3870388765f65386b18cf1d9c5f", "html_url": "https://github.com/rust-lang/rust/commit/867bd42c38bac3870388765f65386b18cf1d9c5f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bf8a2f269dd57c0c957e81329ad044725ece82fc", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b", "patch": "@@ -1157,7 +1157,7 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                     }\n                     _ => {\n                         if !ident.is_path_segment_keyword() {\n-                            format!(\"no `{}` external crate\", ident)\n+                            format!(\"no external crate `{}`\", ident)\n                         } else {\n                             // HACK(eddyb) this shows up for `self` & `super`, which\n                             // should work instead - for now keep the same error message."}, {"sha": "bd6778cf3d63d01c9fba4562e2c6a409b0ed7f65", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-3.stderr?ref=2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `ycrate`\n   --> $DIR/non-existent-3.rs:3:5\n    |\n LL | use ycrate;\n-   |     ^^^^^^ no `ycrate` external crate\n+   |     ^^^^^^ no external crate `ycrate`\n \n error: aborting due to previous error\n "}, {"sha": "a66330ccc46ec77830b7fa7c115ac7a8ab29c59c", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/not-allowed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnot-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnot-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnot-allowed.stderr?ref=2c5e2a6fc6fe5cc7a604725c49cd22d5b2a1fc3b", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `alloc`\n   --> $DIR/not-allowed.rs:5:5\n    |\n LL | use alloc;\n-   |     ^^^^^ no `alloc` external crate\n+   |     ^^^^^ no external crate `alloc`\n \n error: aborting due to previous error\n "}]}