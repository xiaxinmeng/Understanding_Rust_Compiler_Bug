{"sha": "83bc657e254cc3e35ca704864c17abac6d618e18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYmM2NTdlMjU0Y2MzZTM1Y2E3MDQ4NjRjMTdhYmFjNmQ2MThlMTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-24T11:27:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-24T11:27:17Z"}, "message": "rename Validator \u2192 Checker", "tree": {"sha": "badb44f1b0e1747581de0908e3b6c469de89f194", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/badb44f1b0e1747581de0908e3b6c469de89f194"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83bc657e254cc3e35ca704864c17abac6d618e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83bc657e254cc3e35ca704864c17abac6d618e18", "html_url": "https://github.com/rust-lang/rust/commit/83bc657e254cc3e35ca704864c17abac6d618e18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83bc657e254cc3e35ca704864c17abac6d618e18/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35d4d4ca149c8aa8ed2eca221a56612d35b6c7f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/35d4d4ca149c8aa8ed2eca221a56612d35b6c7f9", "html_url": "https://github.com/rust-lang/rust/commit/35d4d4ca149c8aa8ed2eca221a56612d35b6c7f9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "cff386f776beb99af9ab183e287a0ea568b34903", "filename": "compiler/rustc_mir/src/transform/check_consts/check.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83bc657e254cc3e35ca704864c17abac6d618e18/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83bc657e254cc3e35ca704864c17abac6d618e18/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=83bc657e254cc3e35ca704864c17abac6d618e18", "patch": "@@ -180,7 +180,7 @@ impl Qualifs<'mir, 'tcx> {\n     }\n }\n \n-pub struct Validator<'mir, 'tcx> {\n+pub struct Checker<'mir, 'tcx> {\n     ccx: &'mir ConstCx<'mir, 'tcx>,\n     qualifs: Qualifs<'mir, 'tcx>,\n \n@@ -194,17 +194,17 @@ pub struct Validator<'mir, 'tcx> {\n     secondary_errors: Vec<Diagnostic>,\n }\n \n-impl Deref for Validator<'mir, 'tcx> {\n+impl Deref for Checker<'mir, 'tcx> {\n     type Target = ConstCx<'mir, 'tcx>;\n \n     fn deref(&self) -> &Self::Target {\n         &self.ccx\n     }\n }\n \n-impl Validator<'mir, 'tcx> {\n+impl Checker<'mir, 'tcx> {\n     pub fn new(ccx: &'mir ConstCx<'mir, 'tcx>) -> Self {\n-        Validator {\n+        Checker {\n             span: ccx.body.span,\n             ccx,\n             qualifs: Default::default(),\n@@ -477,7 +477,7 @@ impl Validator<'mir, 'tcx> {\n     }\n }\n \n-impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n+impl Visitor<'tcx> for Checker<'mir, 'tcx> {\n     fn visit_basic_block_data(&mut self, bb: BasicBlock, block: &BasicBlockData<'tcx>) {\n         trace!(\"visit_basic_block_data: bb={:?} is_cleanup={:?}\", bb, block.is_cleanup);\n "}, {"sha": "dbf12e6d76f89902177a9d3d3c86309e07ca15eb", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83bc657e254cc3e35ca704864c17abac6d618e18/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83bc657e254cc3e35ca704864c17abac6d618e18/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=83bc657e254cc3e35ca704864c17abac6d618e18", "patch": "@@ -240,7 +240,7 @@ fn mir_const_qualif(tcx: TyCtxt<'_>, def: ty::WithOptConstParam<LocalDefId>) ->\n \n     let ccx = check_consts::ConstCx { body, tcx, const_kind, param_env: tcx.param_env(def.did) };\n \n-    let mut validator = check_consts::check::Validator::new(&ccx);\n+    let mut validator = check_consts::check::Checker::new(&ccx);\n     validator.check_body();\n \n     // We return the qualifs in the return place for every MIR body, even though it is only used"}]}