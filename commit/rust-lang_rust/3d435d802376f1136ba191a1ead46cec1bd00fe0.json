{"sha": "3d435d802376f1136ba191a1ead46cec1bd00fe0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNDM1ZDgwMjM3NmYxMTM2YmExOTFhMWVhZDQ2Y2VjMWJkMDBmZTA=", "commit": {"author": {"name": "Stein Somers", "email": "stein@debby.fritz.box", "date": "2020-03-22T20:10:48Z"}, "committer": {"name": "Stein Somers", "email": "stein@debby.fritz.box", "date": "2020-03-26T23:09:20Z"}, "message": "Test and fix gdb pretty printing again", "tree": {"sha": "f8e7b3e87e735a9307441279188882f3819f9944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8e7b3e87e735a9307441279188882f3819f9944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d435d802376f1136ba191a1ead46cec1bd00fe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d435d802376f1136ba191a1ead46cec1bd00fe0", "html_url": "https://github.com/rust-lang/rust/commit/3d435d802376f1136ba191a1ead46cec1bd00fe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d435d802376f1136ba191a1ead46cec1bd00fe0/comments", "author": null, "committer": null, "parents": [{"sha": "37c945dd6178cb520eb1e450a795f8c3b3cc5a3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/37c945dd6178cb520eb1e450a795f8c3b3cc5a3b", "html_url": "https://github.com/rust-lang/rust/commit/37c945dd6178cb520eb1e450a795f8c3b3cc5a3b"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "d580329cb504ed9c6d40ddf36e486e94f9df5670", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d435d802376f1136ba191a1ead46cec1bd00fe0/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/3d435d802376f1136ba191a1ead46cec1bd00fe0/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=3d435d802376f1136ba191a1ead46cec1bd00fe0", "patch": "@@ -374,7 +374,7 @@ def children(self):\n         innermap = GdbValue(self.__val.get_wrapped_value()['map'])\n         if innermap.get_wrapped_value()['length'] > 0:\n             root = GdbValue(innermap.get_wrapped_value()['root'])\n-            type_name = str(root.type.ty.name).replace('core::option::Option<', '')[:-1]\n+            type_name = str(root.type.ty.name).replace('core::option::Option<', '', 1)[:-1]\n             root = root.get_wrapped_value().cast(gdb.lookup_type(type_name))\n             node_ptr = root['node']\n             i = 0\n@@ -398,7 +398,7 @@ def to_string(self):\n     def children(self):\n         if self.__val.get_wrapped_value()['length'] > 0:\n             root = GdbValue(self.__val.get_wrapped_value()['root'])\n-            type_name = str(root.type.ty.name).replace('core::option::Option<', '')[:-1]\n+            type_name = str(root.type.ty.name).replace('core::option::Option<', '', 1)[:-1]\n             root = root.get_wrapped_value().cast(gdb.lookup_type(type_name))\n             node_ptr = root['node']\n             i = 0"}, {"sha": "1f4ff00100a233f835b3c97bdf358462b7013bd0", "filename": "src/test/debuginfo/pretty-std-collections.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3d435d802376f1136ba191a1ead46cec1bd00fe0/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d435d802376f1136ba191a1ead46cec1bd00fe0/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs?ref=3d435d802376f1136ba191a1ead46cec1bd00fe0", "patch": "@@ -26,14 +26,19 @@\n // gdb-command: print empty_btree_map\n // gdb-check:$4 = BTreeMap<i32, u32>(len: 0)\n \n+// gdb-command: print option_btree_map\n+// gdb-check:$5 = BTreeMap<bool, core::option::Option<bool>>(len: 2) = {[false] = [...], [true] = [...]}\n+// (abbreviated because both values vary wildly over gdb versions and/or linux distributions)\n+\n // gdb-command: print nasty_btree_map\n-// gdb-check:$5 = BTreeMap<i32, pretty_std_collections::MyLeafNode>(len: 1) = {[1] = pretty_std_collections::MyLeafNode (11)}\n+// gdb-check:$6 = BTreeMap<i32, pretty_std_collections::MyLeafNode>(len: 15) = {[0] = pretty_std_collections::MyLeafNode (0), [...]}\n+// (abbreviated because it's boring but we need enough elements to include internal nodes)\n \n // gdb-command: print vec_deque\n-// gdb-check:$6 = VecDeque<i32>(len: 3, cap: 8) = {5, 3, 7}\n+// gdb-check:$7 = VecDeque<i32>(len: 3, cap: 8) = {5, 3, 7}\n \n // gdb-command: print vec_deque2\n-// gdb-check:$7 = VecDeque<i32>(len: 7, cap: 8) = {2, 3, 4, 5, 6, 7, 8}\n+// gdb-check:$8 = VecDeque<i32>(len: 7, cap: 8) = {2, 3, 4, 5, 6, 7, 8}\n \n #![allow(unused_variables)]\n use std::collections::BTreeMap;\n@@ -59,8 +64,14 @@ fn main() {\n \n     let mut empty_btree_map: BTreeMap<i32, u32> = BTreeMap::new();\n \n+    let mut option_btree_map: BTreeMap<bool, Option<bool>> = BTreeMap::new();\n+    option_btree_map.insert(false, None);\n+    option_btree_map.insert(true, Some(true));\n+\n     let mut nasty_btree_map: BTreeMap<i32, MyLeafNode> = BTreeMap::new();\n-    nasty_btree_map.insert(1, MyLeafNode(11));\n+    for i in 0..15 {\n+        nasty_btree_map.insert(i, MyLeafNode(i));\n+    }\n \n     // VecDeque\n     let mut vec_deque = VecDeque::new();"}]}