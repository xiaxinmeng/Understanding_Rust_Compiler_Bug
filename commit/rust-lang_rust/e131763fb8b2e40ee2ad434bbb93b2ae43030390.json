{"sha": "e131763fb8b2e40ee2ad434bbb93b2ae43030390", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMzE3NjNmYjhiMmU0MGVlMmFkNDM0YmJiOTNiMmFlNDMwMzAzOTA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-24T20:18:59Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-24T20:18:59Z"}, "message": "Include correct item path for variant completions", "tree": {"sha": "7493a5160f365bf0c374232a57234fcb39243295", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7493a5160f365bf0c374232a57234fcb39243295"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e131763fb8b2e40ee2ad434bbb93b2ae43030390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e131763fb8b2e40ee2ad434bbb93b2ae43030390", "html_url": "https://github.com/rust-lang/rust/commit/e131763fb8b2e40ee2ad434bbb93b2ae43030390", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e131763fb8b2e40ee2ad434bbb93b2ae43030390/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d97667f8dd467e7382885fcae40bcdbac63ae4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d97667f8dd467e7382885fcae40bcdbac63ae4f", "html_url": "https://github.com/rust-lang/rust/commit/5d97667f8dd467e7382885fcae40bcdbac63ae4f"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "8e3dcf96e0026160f1e2b10c85bc6c7c0c2c34b9", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/e131763fb8b2e40ee2ad434bbb93b2ae43030390/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e131763fb8b2e40ee2ad434bbb93b2ae43030390/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=e131763fb8b2e40ee2ad434bbb93b2ae43030390", "patch": "@@ -38,7 +38,15 @@ fn complete_enum_variants(acc: &mut Completions, ctx: &CompletionContext) {\n     if let Some(ty) = ctx.expected_type_of(&ctx.token.parent()) {\n         if let Some(Adt::Enum(enum_data)) = ty.as_adt() {\n             let variants = enum_data.variants(ctx.db);\n-            let module = enum_data.module(ctx.db);\n+\n+            let module = if let Some(module) = ctx.scope().module() {\n+                // Compute path from the completion site if available.\n+                module\n+            } else {\n+                // Otherwise fall back to the enum's definition site.\n+                enum_data.module(ctx.db)\n+            };\n+\n             for variant in variants {\n                 if let Some(path) = module.find_use_path(ctx.db, ModuleDef::from(variant)) {\n                     // Variants with trivial paths are already added by the existing completion logic,\n@@ -1308,4 +1316,47 @@ mod tests {\n         \"###\n         )\n     }\n+\n+    #[test]\n+    fn completes_enum_variant_from_module() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                mod m { pub enum E { V } }\n+\n+                fn f() -> m::E {\n+                    V<|>\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"f()\",\n+                source_range: [98; 99),\n+                delete: [98; 99),\n+                insert: \"f()$0\",\n+                kind: Function,\n+                lookup: \"f\",\n+                detail: \"fn f() -> m::E\",\n+            },\n+            CompletionItem {\n+                label: \"m\",\n+                source_range: [98; 99),\n+                delete: [98; 99),\n+                insert: \"m\",\n+                kind: Module,\n+            },\n+            CompletionItem {\n+                label: \"m::E::V\",\n+                source_range: [98; 99),\n+                delete: [98; 99),\n+                insert: \"m::E::V\",\n+                kind: EnumVariant,\n+                detail: \"()\",\n+            },\n+        ]\n+        \"###\n+        )\n+    }\n }"}]}