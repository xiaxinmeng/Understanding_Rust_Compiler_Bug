{"sha": "44b926a6bbe3b8a48d077a72126b5921f87ece65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YjkyNmE2YmJlM2I4YTQ4ZDA3N2E3MjEyNmI1OTIxZjg3ZWNlNjU=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-11-26T13:02:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-26T13:02:15Z"}, "message": "Rollup merge of #38010 - frewsxcv:lock-creations, r=GuillaumeGomez\n\nDocument how lock 'guard' structures are created.", "tree": {"sha": "3b3caa455cb653f39433ae8f0a1c2f4ff8ebddbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b3caa455cb653f39433ae8f0a1c2f4ff8ebddbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44b926a6bbe3b8a48d077a72126b5921f87ece65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44b926a6bbe3b8a48d077a72126b5921f87ece65", "html_url": "https://github.com/rust-lang/rust/commit/44b926a6bbe3b8a48d077a72126b5921f87ece65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44b926a6bbe3b8a48d077a72126b5921f87ece65/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9f92e12c7cd00da8b5642e68025a7e833e5b9cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f92e12c7cd00da8b5642e68025a7e833e5b9cb", "html_url": "https://github.com/rust-lang/rust/commit/f9f92e12c7cd00da8b5642e68025a7e833e5b9cb"}, {"sha": "6075af4ac0b031f738da624ee0e9962f25f57e4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6075af4ac0b031f738da624ee0e9962f25f57e4c", "html_url": "https://github.com/rust-lang/rust/commit/6075af4ac0b031f738da624ee0e9962f25f57e4c"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "df4a3746a49bd7480ae37eb1d536e12de816b34f", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/44b926a6bbe3b8a48d077a72126b5921f87ece65/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b926a6bbe3b8a48d077a72126b5921f87ece65/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=44b926a6bbe3b8a48d077a72126b5921f87ece65", "patch": "@@ -133,7 +133,14 @@ unsafe impl<T: ?Sized + Send> Sync for Mutex<T> { }\n /// dropped (falls out of scope), the lock will be unlocked.\n ///\n /// The data protected by the mutex can be access through this guard via its\n-/// `Deref` and `DerefMut` implementations\n+/// `Deref` and `DerefMut` implementations.\n+///\n+/// This structure is created by the [`lock()`] and [`try_lock()`] methods on\n+/// [`Mutex`].\n+///\n+/// [`lock()`]: struct.Mutex.html#method.lock\n+/// [`try_lock()`]: struct.Mutex.html#method.try_lock\n+/// [`Mutex`]: struct.Mutex.html\n #[must_use]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct MutexGuard<'a, T: ?Sized + 'a> {"}, {"sha": "f83cf7ba9c29e41dc21679f63cff17e0c44df7ed", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/44b926a6bbe3b8a48d077a72126b5921f87ece65/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b926a6bbe3b8a48d077a72126b5921f87ece65/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=44b926a6bbe3b8a48d077a72126b5921f87ece65", "patch": "@@ -77,6 +77,13 @@ unsafe impl<T: ?Sized + Send + Sync> Sync for RwLock<T> {}\n \n /// RAII structure used to release the shared read access of a lock when\n /// dropped.\n+///\n+/// This structure is created by the [`read()`] and [`try_read()`] methods on\n+/// [`RwLock`].\n+///\n+/// [`read()`]: struct.RwLock.html#method.read\n+/// [`try_read()`]: struct.RwLock.html#method.try_read\n+/// [`RwLock`]: struct.RwLock.html\n #[must_use]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RwLockReadGuard<'a, T: ?Sized + 'a> {\n@@ -88,6 +95,13 @@ impl<'a, T: ?Sized> !marker::Send for RwLockReadGuard<'a, T> {}\n \n /// RAII structure used to release the exclusive write access of a lock when\n /// dropped.\n+///\n+/// This structure is created by the [`write()`] and [`try_write()`] methods\n+/// on [`RwLock`].\n+///\n+/// [`write()`]: struct.RwLock.html#method.write\n+/// [`try_write()`]: struct.RwLock.html#method.try_write\n+/// [`RwLock`]: struct.RwLock.html\n #[must_use]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RwLockWriteGuard<'a, T: ?Sized + 'a> {"}]}