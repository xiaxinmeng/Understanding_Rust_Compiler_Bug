{"sha": "5a6dc40a102cecdf73ddc9757afe7233e678cfeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNmRjNDBhMTAyY2VjZGY3M2RkYzk3NTdhZmU3MjMzZTY3OGNmZWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-04T05:01:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-04T05:01:43Z"}, "message": "auto merge of #14634 : BurntSushi/rust/fix-13843, r=alexcrichton\n\nAn empty regex is a valid regex that always matches. This behavior\r\nis consistent with at least Go and Python.\r\n\r\nA couple regression tests are included.\r\n\r\nI'd just assume that an empty regex is an invalid regex and that an error should be returned (I can't think of any reason to use an empty regex?), but it's probably better to be consistent with other regex libraries.", "tree": {"sha": "7e4aac2afbd30862c16e69e4023627569cfa2ba7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e4aac2afbd30862c16e69e4023627569cfa2ba7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a6dc40a102cecdf73ddc9757afe7233e678cfeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a6dc40a102cecdf73ddc9757afe7233e678cfeb", "html_url": "https://github.com/rust-lang/rust/commit/5a6dc40a102cecdf73ddc9757afe7233e678cfeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a6dc40a102cecdf73ddc9757afe7233e678cfeb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eeaa84a50bdbd6c3cc5e33c07a01110b59c7087", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eeaa84a50bdbd6c3cc5e33c07a01110b59c7087", "html_url": "https://github.com/rust-lang/rust/commit/3eeaa84a50bdbd6c3cc5e33c07a01110b59c7087"}, {"sha": "9d39178f2f60b6076e4bd00e263f2304084f34b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d39178f2f60b6076e4bd00e263f2304084f34b4", "html_url": "https://github.com/rust-lang/rust/commit/9d39178f2f60b6076e4bd00e263f2304084f34b4"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "14e34b805a3e332f47a1504d45cb6e817192f2e9", "filename": "src/libregex/parse/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5a6dc40a102cecdf73ddc9757afe7233e678cfeb/src%2Flibregex%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a6dc40a102cecdf73ddc9757afe7233e678cfeb/src%2Flibregex%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Fparse%2Fmod.rs?ref=5a6dc40a102cecdf73ddc9757afe7233e678cfeb", "patch": "@@ -201,6 +201,9 @@ pub fn parse(s: &str) -> Result<Ast, Error> {\n \n impl<'a> Parser<'a> {\n     fn parse(&mut self) -> Result<Ast, Error> {\n+        if self.chars.len() == 0 {\n+            return Ok(Nothing);\n+        }\n         loop {\n             let c = self.cur();\n             match c {"}, {"sha": "35cb7c3c5b09c78185e3e8225d6e8f0897dd1152", "filename": "src/libregex/test/tests.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a6dc40a102cecdf73ddc9757afe7233e678cfeb/src%2Flibregex%2Ftest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a6dc40a102cecdf73ddc9757afe7233e678cfeb/src%2Flibregex%2Ftest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Ftest%2Ftests.rs?ref=5a6dc40a102cecdf73ddc9757afe7233e678cfeb", "patch": "@@ -28,6 +28,20 @@ fn split() {\n     assert_eq!(subs, vec!(\"cauchy\", \"plato\", \"tyler\", \"binx\"));\n }\n \n+#[test]\n+fn empty_regex_empty_match() {\n+    let re = regex!(\"\");\n+    let ms = re.find_iter(\"\").collect::<Vec<(uint, uint)>>();\n+    assert_eq!(ms, vec![(0, 0)]);\n+}\n+\n+#[test]\n+fn empty_regex_nonempty_match() {\n+    let re = regex!(\"\");\n+    let ms = re.find_iter(\"abc\").collect::<Vec<(uint, uint)>>();\n+    assert_eq!(ms, vec![(0, 0), (1, 1), (2, 2), (3, 3)]);\n+}\n+\n macro_rules! replace(\n     ($name:ident, $which:ident, $re:expr,\n      $search:expr, $replace:expr, $result:expr) => ("}]}