{"sha": "b6a7b5accd03da6655e8150bcbd36defe1e43081", "node_id": "C_kwDOAAsO6NoAKGI2YTdiNWFjY2QwM2RhNjY1NWU4MTUwYmNiZDM2ZGVmZTFlNDMwODE", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-01T19:10:44Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-07T13:47:20Z"}, "message": "remove allocation from a self-profiling call in the LLVM backend", "tree": {"sha": "b7eaa5f5b7262bdebc61c967764e9238603f2939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7eaa5f5b7262bdebc61c967764e9238603f2939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6a7b5accd03da6655e8150bcbd36defe1e43081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a7b5accd03da6655e8150bcbd36defe1e43081", "html_url": "https://github.com/rust-lang/rust/commit/b6a7b5accd03da6655e8150bcbd36defe1e43081", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6a7b5accd03da6655e8150bcbd36defe1e43081/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af22801db08b9cd3e7dac9531bdab8ba8ad91d6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/af22801db08b9cd3e7dac9531bdab8ba8ad91d6e", "html_url": "https://github.com/rust-lang/rust/commit/af22801db08b9cd3e7dac9531bdab8ba8ad91d6e"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "7a747a9cdee4ead49b6894f5dc730a0ac94e729e", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6a7b5accd03da6655e8150bcbd36defe1e43081/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6a7b5accd03da6655e8150bcbd36defe1e43081/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=b6a7b5accd03da6655e8150bcbd36defe1e43081", "patch": "@@ -313,7 +313,9 @@ fn fat_lto(\n         for (bc_decoded, name) in serialized_modules {\n             let _timer = cgcx\n                 .prof\n-                .generic_activity_with_arg(\"LLVM_fat_lto_link_module\", format!(\"{:?}\", name));\n+                .generic_activity_with_arg_recorder(\"LLVM_fat_lto_link_module\", |recorder| {\n+                    recorder.record_arg(format!(\"{:?}\", name))\n+                });\n             info!(\"linking {:?}\", name);\n             let data = bc_decoded.data();\n             linker.add(data).map_err(|()| {"}]}