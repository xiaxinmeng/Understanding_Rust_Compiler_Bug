{"sha": "eae3036179ae56876104775c45f120e769de51aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZTMwMzYxNzlhZTU2ODc2MTA0Nzc1YzQ1ZjEyMGU3NjlkZTUxYWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-02T01:38:00Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-02T01:38:00Z"}, "message": "rustc: Remove else-after-return in main", "tree": {"sha": "1a872a0cc77ec1a47481fe1e984d7bdcfe72efb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a872a0cc77ec1a47481fe1e984d7bdcfe72efb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eae3036179ae56876104775c45f120e769de51aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eae3036179ae56876104775c45f120e769de51aa", "html_url": "https://github.com/rust-lang/rust/commit/eae3036179ae56876104775c45f120e769de51aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eae3036179ae56876104775c45f120e769de51aa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43f60e5d4eb09666312d6e5cd238faa7564e52b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d43f60e5d4eb09666312d6e5cd238faa7564e52b", "html_url": "https://github.com/rust-lang/rust/commit/d43f60e5d4eb09666312d6e5cd238faa7564e52b"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "aa02afe00cb1b9c114028c0cbc85da0afbfe9820", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/eae3036179ae56876104775c45f120e769de51aa/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eae3036179ae56876104775c45f120e769de51aa/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=eae3036179ae56876104775c45f120e769de51aa", "patch": "@@ -394,28 +394,28 @@ fn main(vec[str] args) {\n     if (ls) {\n         front::creader::list_file_metadata(ifile, std::io::stdout());\n         ret;\n-    } else {\n-        alt (output_file) {\n-            case (none) {\n-                let vec[str] parts = str::split(ifile, '.' as u8);\n-                vec::pop[str](parts);\n-                saved_out_filename = parts.(0);\n-                alt (sopts.output_type) {\n-                    case (link::output_type_none) { parts += [\"pp\"]; }\n-                    case (link::output_type_bitcode) { parts += [\"bc\"]; }\n-                    case (link::output_type_assembly) { parts += [\"s\"]; }\n-\n-                    // Object and exe output both use the '.o' extension here\n-                    case (link::output_type_object) { parts += [\"o\"]; }\n-                    case (link::output_type_exe) { parts += [\"o\"]; }\n-                }\n-                auto ofile = str::connect(parts, \".\");\n-                compile_input(sess, env, ifile, ofile);\n-            }\n-            case (some(?ofile)) {\n-                saved_out_filename = ofile;\n-                compile_input(sess, env, ifile, ofile);\n+    }\n+\n+    alt (output_file) {\n+        case (none) {\n+            let vec[str] parts = str::split(ifile, '.' as u8);\n+            vec::pop[str](parts);\n+            saved_out_filename = parts.(0);\n+            alt (sopts.output_type) {\n+                case (link::output_type_none) { parts += [\"pp\"]; }\n+                case (link::output_type_bitcode) { parts += [\"bc\"]; }\n+                case (link::output_type_assembly) { parts += [\"s\"]; }\n+\n+                // Object and exe output both use the '.o' extension here\n+                case (link::output_type_object) { parts += [\"o\"]; }\n+                case (link::output_type_exe) { parts += [\"o\"]; }\n             }\n+            auto ofile = str::connect(parts, \".\");\n+            compile_input(sess, env, ifile, ofile);\n+        }\n+        case (some(?ofile)) {\n+            saved_out_filename = ofile;\n+            compile_input(sess, env, ifile, ofile);\n         }\n     }\n "}]}