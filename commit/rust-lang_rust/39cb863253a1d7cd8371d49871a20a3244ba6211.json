{"sha": "39cb863253a1d7cd8371d49871a20a3244ba6211", "node_id": "C_kwDOAAsO6NoAKDM5Y2I4NjMyNTNhMWQ3Y2Q4MzcxZDQ5ODcxYTIwYTMyNDRiYTYyMTE", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-10-22T07:12:00Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-11-13T00:58:39Z"}, "message": "Expose portable-simd as core::simd\n\nThis enables programmers to use a safe alternative to the current\n`extern \"platform-intrinsics\"` API for writing portable SIMD code.\nThis is `#![feature(portable_simd)]` as tracked in #86656", "tree": {"sha": "63a33c32fdda93f1179b42e73e727f2226c8b20c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63a33c32fdda93f1179b42e73e727f2226c8b20c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39cb863253a1d7cd8371d49871a20a3244ba6211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39cb863253a1d7cd8371d49871a20a3244ba6211", "html_url": "https://github.com/rust-lang/rust/commit/39cb863253a1d7cd8371d49871a20a3244ba6211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39cb863253a1d7cd8371d49871a20a3244ba6211/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdee059c9050d8135dc98db8c90b225c9e6b085a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdee059c9050d8135dc98db8c90b225c9e6b085a", "html_url": "https://github.com/rust-lang/rust/commit/fdee059c9050d8135dc98db8c90b225c9e6b085a"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "b78c7361d9f09fd24eb9c5558241a431593e934b", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/39cb863253a1d7cd8371d49871a20a3244ba6211/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cb863253a1d7cd8371d49871a20a3244ba6211/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=39cb863253a1d7cd8371d49871a20a3244ba6211", "patch": "@@ -386,4 +386,25 @@ pub mod arch {\n     }\n }\n \n+// Pull in the `core_simd` crate directly into libcore. The contents of\n+// `core_simd` are in a different repository: rust-lang/portable-simd.\n+//\n+// `core_simd` depends on libcore, but the contents of this module are\n+// set up in such a way that directly pulling it here works such that the\n+// crate uses this crate as its libcore.\n+#[path = \"../../portable-simd/crates/core_simd/src/mod.rs\"]\n+#[allow(missing_debug_implementations, dead_code, unsafe_op_in_unsafe_fn, unused_unsafe)]\n+#[allow(rustdoc::bare_urls)]\n+#[unstable(feature = \"portable_simd\", issue = \"86656\")]\n+#[cfg(not(bootstrap))]\n+mod core_simd;\n+\n+#[doc = include_str!(\"../../portable-simd/crates/core_simd/src/core_simd_docs.md\")]\n+#[unstable(feature = \"portable_simd\", issue = \"86656\")]\n+#[cfg(not(bootstrap))]\n+pub mod simd {\n+    #[unstable(feature = \"portable_simd\", issue = \"86656\")]\n+    pub use crate::core_simd::simd::*;\n+}\n+\n include!(\"primitive_docs.rs\");"}, {"sha": "ea4bcc619fd920962b7d651e8a4a2e4bc6b4855b", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39cb863253a1d7cd8371d49871a20a3244ba6211/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cb863253a1d7cd8371d49871a20a3244ba6211/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=39cb863253a1d7cd8371d49871a20a3244ba6211", "patch": "@@ -320,6 +320,7 @@\n #![feature(panic_internals)]\n #![feature(panic_unwind)]\n #![feature(pin_static_ref)]\n+#![cfg_attr(not(bootstrap), feature(portable_simd))]\n #![feature(prelude_import)]\n #![feature(ptr_internals)]\n #![feature(rustc_attrs)]\n@@ -472,6 +473,9 @@ pub use core::pin;\n pub use core::ptr;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::result;\n+#[unstable(feature = \"portable_simd\", issue = \"86656\")]\n+#[cfg(not(bootstrap))]\n+pub use core::simd;\n #[unstable(feature = \"async_stream\", issue = \"79024\")]\n pub use core::stream;\n #[stable(feature = \"i128\", since = \"1.26.0\")]"}, {"sha": "265f2194fef8d0ce03c61d1c2222828a7c823dde", "filename": "rustfmt.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39cb863253a1d7cd8371d49871a20a3244ba6211/rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/39cb863253a1d7cd8371d49871a20a3244ba6211/rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt.toml?ref=39cb863253a1d7cd8371d49871a20a3244ba6211", "patch": "@@ -17,6 +17,7 @@ ignore = [\n \n     # do not format submodules\n     \"library/backtrace\",\n+    \"library/portable-simd\",\n     \"library/stdarch\",\n     \"compiler/rustc_codegen_cranelift\",\n     \"compiler/rustc_codegen_gcc\","}, {"sha": "7972437771399f71f356ad3d222c0b7cb0921263", "filename": "src/test/ui/suggestions/issue-71394-no-from-impl.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/39cb863253a1d7cd8371d49871a20a3244ba6211/src%2Ftest%2Fui%2Fsuggestions%2Fissue-71394-no-from-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39cb863253a1d7cd8371d49871a20a3244ba6211/src%2Ftest%2Fui%2Fsuggestions%2Fissue-71394-no-from-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-71394-no-from-impl.stderr?ref=39cb863253a1d7cd8371d49871a20a3244ba6211", "patch": "@@ -4,6 +4,9 @@ error[E0277]: the trait bound `&[i8]: From<&[u8]>` is not satisfied\n LL |     let _: &[i8] = data.into();\n    |                         ^^^^ the trait `From<&[u8]>` is not implemented for `&[i8]`\n    |\n+   = help: the following implementations were found:\n+             <[T; LANES] as From<Simd<T, LANES>>>\n+             <[bool; LANES] as From<Mask<T, LANES>>>\n    = note: required because of the requirements on the impl of `Into<&[i8]>` for `&[u8]`\n \n error: aborting due to previous error"}, {"sha": "09848462ae207f9bbcfd2d2c6c529c1905c492f3", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39cb863253a1d7cd8371d49871a20a3244ba6211/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cb863253a1d7cd8371d49871a20a3244ba6211/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=39cb863253a1d7cd8371d49871a20a3244ba6211", "patch": "@@ -60,6 +60,7 @@ fn filter_dirs(path: &Path) -> bool {\n         \"compiler/rustc_codegen_gcc\",\n         \"src/llvm-project\",\n         \"library/backtrace\",\n+        \"library/portable-simd\",\n         \"library/stdarch\",\n         \"src/tools/cargo\",\n         \"src/tools/clippy\","}]}