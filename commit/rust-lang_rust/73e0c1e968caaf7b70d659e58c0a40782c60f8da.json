{"sha": "73e0c1e968caaf7b70d659e58c0a40782c60f8da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZTBjMWU5NjhjYWFmN2I3MGQ2NTllNThjMGE0MDc4MmM2MGY4ZGE=", "commit": {"author": {"name": "bobtwinkles", "email": "srkoser+GitHub@gmail.com", "date": "2018-04-26T22:28:34Z"}, "committer": {"name": "bobtwinkles", "email": "srkoser+GitHub@gmail.com", "date": "2018-04-26T22:28:34Z"}, "message": "Fix review nits", "tree": {"sha": "c93e7744ab6b055e222bf9ee5087e7c90377a881", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c93e7744ab6b055e222bf9ee5087e7c90377a881"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73e0c1e968caaf7b70d659e58c0a40782c60f8da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73e0c1e968caaf7b70d659e58c0a40782c60f8da", "html_url": "https://github.com/rust-lang/rust/commit/73e0c1e968caaf7b70d659e58c0a40782c60f8da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73e0c1e968caaf7b70d659e58c0a40782c60f8da/comments", "author": {"login": "bobtwinkles", "id": 1514748, "node_id": "MDQ6VXNlcjE1MTQ3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1514748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobtwinkles", "html_url": "https://github.com/bobtwinkles", "followers_url": "https://api.github.com/users/bobtwinkles/followers", "following_url": "https://api.github.com/users/bobtwinkles/following{/other_user}", "gists_url": "https://api.github.com/users/bobtwinkles/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobtwinkles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobtwinkles/subscriptions", "organizations_url": "https://api.github.com/users/bobtwinkles/orgs", "repos_url": "https://api.github.com/users/bobtwinkles/repos", "events_url": "https://api.github.com/users/bobtwinkles/events{/privacy}", "received_events_url": "https://api.github.com/users/bobtwinkles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bobtwinkles", "id": 1514748, "node_id": "MDQ6VXNlcjE1MTQ3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1514748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobtwinkles", "html_url": "https://github.com/bobtwinkles", "followers_url": "https://api.github.com/users/bobtwinkles/followers", "following_url": "https://api.github.com/users/bobtwinkles/following{/other_user}", "gists_url": "https://api.github.com/users/bobtwinkles/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobtwinkles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobtwinkles/subscriptions", "organizations_url": "https://api.github.com/users/bobtwinkles/orgs", "repos_url": "https://api.github.com/users/bobtwinkles/repos", "events_url": "https://api.github.com/users/bobtwinkles/events{/privacy}", "received_events_url": "https://api.github.com/users/bobtwinkles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "498dbe44537998bd4bba6c28232a22e9243b9c67", "url": "https://api.github.com/repos/rust-lang/rust/commits/498dbe44537998bd4bba6c28232a22e9243b9c67", "html_url": "https://github.com/rust-lang/rust/commit/498dbe44537998bd4bba6c28232a22e9243b9c67"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "f51dbc3772f06ee1c3302304fe69f802b653c2e3", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73e0c1e968caaf7b70d659e58c0a40782c60f8da/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e0c1e968caaf7b70d659e58c0a40782c60f8da/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=73e0c1e968caaf7b70d659e58c0a40782c60f8da", "patch": "@@ -270,7 +270,7 @@ impl Span {\n     /// `self` was generated from, if any.\n     #[unstable(feature = \"proc_macro\", issue = \"38356\")]\n     pub fn parent(&self) -> Option<Span> {\n-        self.0.parent().map(|x| { Span(x) })\n+        self.0.parent().map(Span)\n     }\n \n     /// The span for the origin source code that `self` was generated from. If"}, {"sha": "658408519b9c7ead442eb045feb90ac82e258f1a", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/73e0c1e968caaf7b70d659e58c0a40782c60f8da/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e0c1e968caaf7b70d659e58c0a40782c60f8da/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=73e0c1e968caaf7b70d659e58c0a40782c60f8da", "patch": "@@ -123,11 +123,11 @@ impl Mark {\n     /// mark. That is, the following holds:\n     ///\n     /// ```rust\n-    /// let lub = lub(a, b);\n-    /// assert!(a.is_descendant_of(lub))\n-    /// assert!(b.is_descendant_of(lub))\n+    /// let la = least_ancestor(a, b);\n+    /// assert!(a.is_descendant_of(la))\n+    /// assert!(b.is_descendant_of(la))\n     /// ```\n-    pub fn lub(mut a: Mark, mut b: Mark) -> Mark {\n+    pub fn least_ancestor(mut a: Mark, mut b: Mark) -> Mark {\n         HygieneData::with(|data| {\n             // Compute the path from a to the root\n             let mut a_path = FxHashSet::<Mark>();\n@@ -138,7 +138,7 @@ impl Mark {\n \n             // While the path from b to the root hasn't intersected, move up the tree\n             while !a_path.contains(&b) {\n-                b =  data.marks[b.0 as usize].parent;\n+                b = data.marks[b.0 as usize].parent;\n             }\n \n             b"}, {"sha": "8d37b4aa3968f5c84deaa5cd3383eb13ba21e4d2", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73e0c1e968caaf7b70d659e58c0a40782c60f8da/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e0c1e968caaf7b70d659e58c0a40782c60f8da/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=73e0c1e968caaf7b70d659e58c0a40782c60f8da", "patch": "@@ -291,7 +291,7 @@ impl Span {\n         self.ctxt().outer().expn_info().map(|info| info.call_site.source_callsite()).unwrap_or(self)\n     }\n \n-    /// The `Span for the tokens in the previous macro expansion from which `self` was generated,\n+    /// The `Span` for the tokens in the previous macro expansion from which `self` was generated,\n     /// if any\n     pub fn parent(self) -> Option<Span> {\n         self.ctxt().outer().expn_info().map(|i| i.call_site)"}]}