{"sha": "2cfab735941e336946e339297c83e4a8cc88a1d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZmFiNzM1OTQxZTMzNjk0NmUzMzkyOTdjODNlNGE4Y2M4OGExZDE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-03T20:26:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-03T20:26:12Z"}, "message": "Rollup merge of #69621 - matthiaskrgr:q, r=petrochenkov\n\nuse question mark operator in a few places.", "tree": {"sha": "ef47e0ff4b2060803295e2d3ad6e8c4fef52abdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef47e0ff4b2060803295e2d3ad6e8c4fef52abdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cfab735941e336946e339297c83e4a8cc88a1d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeXr1kCRBK7hj4Ov3rIwAAdHIIAFLwfLWiROmSQNPVz9QYtvUZ\nsvVCYqUnF/5Y0JToIBguUn0ngC78p0YWWtBzWD4gfjXSsTIb75pfNFTXDcrndhbf\n54tJ3f/utej5GmLgyN1bxab6MaSKgHy08FDlzOJyC4B5YrDsVj5hFXv8olco8OqU\nU6kpIN/RMuhktGynNTXoMVNOesgdG5SYRmjeyJZmnyTqdP2bjO8xU71cp2oaKqrs\nICPTGZqygEZ6nruT9qusb7jj6GINTdAxn7kRNq7PlXj0rcelljJiF7SmCCBZRCKN\nigamwpj4n4p34Tbq2qhBrcaHk97Bq3EQE2pOI2FvqzuN/vYXxua8liv6M+Mr1ZI=\n=Y2n2\n-----END PGP SIGNATURE-----\n", "payload": "tree ef47e0ff4b2060803295e2d3ad6e8c4fef52abdd\nparent fab54fc34ebabe2dc648ac3280b668a1d5456eda\nparent ecae6e4260311fac40ef76a84273f6bc865e63d8\nauthor Dylan DPC <dylan.dpc@gmail.com> 1583267172 +0100\ncommitter GitHub <noreply@github.com> 1583267172 +0100\n\nRollup merge of #69621 - matthiaskrgr:q, r=petrochenkov\n\nuse question mark operator in a few places.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cfab735941e336946e339297c83e4a8cc88a1d1", "html_url": "https://github.com/rust-lang/rust/commit/2cfab735941e336946e339297c83e4a8cc88a1d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cfab735941e336946e339297c83e4a8cc88a1d1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fab54fc34ebabe2dc648ac3280b668a1d5456eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab54fc34ebabe2dc648ac3280b668a1d5456eda", "html_url": "https://github.com/rust-lang/rust/commit/fab54fc34ebabe2dc648ac3280b668a1d5456eda"}, {"sha": "ecae6e4260311fac40ef76a84273f6bc865e63d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecae6e4260311fac40ef76a84273f6bc865e63d8", "html_url": "https://github.com/rust-lang/rust/commit/ecae6e4260311fac40ef76a84273f6bc865e63d8"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "02dc9b8f82ed22dd290a911c60401f11bcdda3f0", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=2cfab735941e336946e339297c83e4a8cc88a1d1", "patch": "@@ -1894,9 +1894,7 @@ where\n             let to_skip = self.n;\n             self.n = 0;\n             // nth(n) skips n+1\n-            if self.iter.nth(to_skip - 1).is_none() {\n-                return None;\n-            }\n+            self.iter.nth(to_skip - 1)?;\n         }\n         self.iter.nth(n)\n     }\n@@ -1916,9 +1914,7 @@ where\n     fn last(mut self) -> Option<I::Item> {\n         if self.n > 0 {\n             // nth(n) skips n+1\n-            if self.iter.nth(self.n - 1).is_none() {\n-                return None;\n-            }\n+            self.iter.nth(self.n - 1)?;\n         }\n         self.iter.last()\n     }"}, {"sha": "bd26e02efb749dcada1e53d9a15ae72a7a58df30", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=2cfab735941e336946e339297c83e4a8cc88a1d1", "patch": "@@ -338,9 +338,8 @@ impl<'hir> Map<'hir> {\n             Node::Variant(_) => DefKind::Variant,\n             Node::Ctor(variant_data) => {\n                 // FIXME(eddyb) is this even possible, if we have a `Node::Ctor`?\n-                if variant_data.ctor_hir_id().is_none() {\n-                    return None;\n-                }\n+                variant_data.ctor_hir_id()?;\n+\n                 let ctor_of = match self.find(self.get_parent_node(hir_id)) {\n                     Some(Node::Item(..)) => def::CtorOf::Struct,\n                     Some(Node::Variant(..)) => def::CtorOf::Variant,"}, {"sha": "4014d1d8ae2501c8c798c5722b2fd20f45014604", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=2cfab735941e336946e339297c83e4a8cc88a1d1", "patch": "@@ -115,9 +115,7 @@ impl<'tcx> Instance<'tcx> {\n         }\n \n         // If this a non-generic instance, it cannot be a shared monomorphization.\n-        if self.substs.non_erasable_generics().next().is_none() {\n-            return None;\n-        }\n+        self.substs.non_erasable_generics().next()?;\n \n         match self.def {\n             InstanceDef::Item(def_id) => tcx"}, {"sha": "b1861acec04263fc5c71cab32ec3d2a4d5e4f1b1", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cfab735941e336946e339297c83e4a8cc88a1d1/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=2cfab735941e336946e339297c83e4a8cc88a1d1", "patch": "@@ -13,9 +13,7 @@ pub fn copy_cgu_workproducts_to_incr_comp_cache_dir(\n     files: &[(WorkProductFileKind, PathBuf)],\n ) -> Option<(WorkProductId, WorkProduct)> {\n     debug!(\"copy_cgu_workproducts_to_incr_comp_cache_dir({:?},{:?})\", cgu_name, files);\n-    if sess.opts.incremental.is_none() {\n-        return None;\n-    }\n+    sess.opts.incremental.as_ref()?;\n \n     let saved_files = files\n         .iter()"}]}