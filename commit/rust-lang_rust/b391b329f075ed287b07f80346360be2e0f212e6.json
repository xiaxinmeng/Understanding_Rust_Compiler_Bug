{"sha": "b391b329f075ed287b07f80346360be2e0f212e6", "node_id": "C_kwDOAAsO6NoAKGIzOTFiMzI5ZjA3NWVkMjg3YjA3ZjgwMzQ2MzYwYmUyZTBmMjEyZTY", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-22T05:02:55Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-22T19:21:27Z"}, "message": "Use revisions for NLL in issues", "tree": {"sha": "4b08d6724c1a864c377d7a9c32201ee0c71ed07c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b08d6724c1a864c377d7a9c32201ee0c71ed07c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b391b329f075ed287b07f80346360be2e0f212e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b391b329f075ed287b07f80346360be2e0f212e6", "html_url": "https://github.com/rust-lang/rust/commit/b391b329f075ed287b07f80346360be2e0f212e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b391b329f075ed287b07f80346360be2e0f212e6/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7c192e3466a7301e9291ab296b3f9b1a416dfa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c192e3466a7301e9291ab296b3f9b1a416dfa8", "html_url": "https://github.com/rust-lang/rust/commit/b7c192e3466a7301e9291ab296b3f9b1a416dfa8"}], "stats": {"total": 237, "additions": 159, "deletions": 78}, "files": [{"sha": "cad22b2f3ea6e231a8ad7467f902f863bda263c2", "filename": "src/test/ui/issues/issue-10291.base.stderr", "status": "renamed", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10291.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,19 +1,21 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/issue-10291.rs:3:9\n+  --> $DIR/issue-10291.rs:7:9\n    |\n LL |         x\n    |         ^\n    |\n note: ...the reference is valid for the anonymous lifetime #1 defined here...\n-  --> $DIR/issue-10291.rs:2:69\n+  --> $DIR/issue-10291.rs:6:69\n    |\n LL |       drop::<Box<dyn for<'z> FnMut(&'z isize) -> &'z isize>>(Box::new(|z| {\n    |  _____________________________________________________________________^\n LL | |         x\n+LL | |\n+LL | |\n LL | |     }));\n    | |_____^\n note: ...but the borrowed content is only valid for the lifetime `'x` as defined here\n-  --> $DIR/issue-10291.rs:1:9\n+  --> $DIR/issue-10291.rs:5:9\n    |\n LL | fn test<'x>(x: &'x isize) {\n    |         ^^", "previous_filename": "src/test/ui/issues/issue-10291.stderr"}, {"sha": "47c4d4945f3ed92be4d4229aa9fa4f6898f384ad", "filename": "src/test/ui/issues/issue-10291.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-10291.rs:3:9\n+  --> $DIR/issue-10291.rs:7:9\n    |\n LL | fn test<'x>(x: &'x isize) {\n    |         -- lifetime `'x` defined here"}, {"sha": "8ee3ce44d3d9e78cae3ac1a543afdfb9c6a5ae17", "filename": "src/test/ui/issues/issue-10291.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10291.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,6 +1,12 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn test<'x>(x: &'x isize) {\n     drop::<Box<dyn for<'z> FnMut(&'z isize) -> &'z isize>>(Box::new(|z| {\n-        x //~ ERROR E0312\n+        x\n+        //[base]~^ ERROR E0312\n+        //[nll]~^^ ERROR lifetime may not live long enough\n     }));\n }\n "}, {"sha": "2b9fff3f981055bda674e36614a05379a29cd9ec", "filename": "src/test/ui/issues/issue-13058.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-13058.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-13058.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13058.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0621]: explicit lifetime required in the type of `cont`\n-  --> $DIR/issue-13058.rs:14:26\n+  --> $DIR/issue-13058.rs:18:26\n    |\n LL | fn check<'r, I: Iterator<Item=usize>, T: Itble<'r, usize, I>>(cont: &T) -> bool\n    |                                                                     -- help: add explicit lifetime `'r` to the type of `cont`: `&'r T`", "previous_filename": "src/test/ui/issues/issue-13058.stderr"}, {"sha": "ddefa8a62c98d7d2396b0930ec82778ce8d5047a", "filename": "src/test/ui/issues/issue-13058.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-13058.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-13058.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13058.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0621]: explicit lifetime required in the type of `cont`\n-  --> $DIR/issue-13058.rs:14:21\n+  --> $DIR/issue-13058.rs:18:21\n    |\n LL | fn check<'r, I: Iterator<Item=usize>, T: Itble<'r, usize, I>>(cont: &T) -> bool\n    |                                                                     -- help: add explicit lifetime `'r` to the type of `cont`: `&'r T`"}, {"sha": "cbd52a802e8de75274234e72e7b24effc1603b9a", "filename": "src/test/ui/issues/issue-13058.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-13058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-13058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13058.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n use std::ops::Range;\n \n trait Itble<'r, T, I: Iterator<Item=T>> { fn iter(&'r self) -> I; }"}, {"sha": "293692c1ddc6242a04a3bf0282476bf8eac4ef69", "filename": "src/test/ui/issues/issue-15034.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-15034.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-15034.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15034.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0621]: explicit lifetime required in the type of `lexer`\n-  --> $DIR/issue-15034.rs:17:25\n+  --> $DIR/issue-15034.rs:21:25\n    |\n LL |     pub fn new(lexer: &'a mut Lexer) -> Parser<'a> {\n    |                       ------------- help: add explicit lifetime `'a` to the type of `lexer`: `&'a mut Lexer<'a>`", "previous_filename": "src/test/ui/issues/issue-15034.stderr"}, {"sha": "54af22fb726ecef49a191521361c3faa5c6d15a2", "filename": "src/test/ui/issues/issue-15034.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-15034.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-15034.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15034.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0621]: explicit lifetime required in the type of `lexer`\n-  --> $DIR/issue-15034.rs:17:9\n+  --> $DIR/issue-15034.rs:21:9\n    |\n LL |     pub fn new(lexer: &'a mut Lexer) -> Parser<'a> {\n    |                       ------------- help: add explicit lifetime `'a` to the type of `lexer`: `&'a mut Lexer<'a>`"}, {"sha": "f95275e3a7b80f43ddc3e4d832e8f89b8657bc59", "filename": "src/test/ui/issues/issue-15034.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-15034.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-15034.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15034.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n pub struct Lexer<'a> {\n     input: &'a str,\n }"}, {"sha": "f684dd04a36cab8bacd8dd6dcd34b4cc61bde374", "filename": "src/test/ui/issues/issue-16683.base.stderr", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16683.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,26 +1,26 @@\n error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n-  --> $DIR/issue-16683.rs:4:14\n+  --> $DIR/issue-16683.rs:8:14\n    |\n LL |         self.a();\n    |              ^\n    |\n note: first, the lifetime cannot outlive the anonymous lifetime defined here...\n-  --> $DIR/issue-16683.rs:3:10\n+  --> $DIR/issue-16683.rs:7:10\n    |\n LL |     fn b(&self) {\n    |          ^^^^^\n note: ...so that reference does not outlive borrowed content\n-  --> $DIR/issue-16683.rs:4:9\n+  --> $DIR/issue-16683.rs:8:9\n    |\n LL |         self.a();\n    |         ^^^^\n note: but, the lifetime must be valid for the lifetime `'a` as defined here...\n-  --> $DIR/issue-16683.rs:1:9\n+  --> $DIR/issue-16683.rs:5:9\n    |\n LL | trait T<'a> {\n    |         ^^\n note: ...so that the types are compatible\n-  --> $DIR/issue-16683.rs:4:14\n+  --> $DIR/issue-16683.rs:8:14\n    |\n LL |         self.a();\n    |              ^", "previous_filename": "src/test/ui/issues/issue-16683.stderr"}, {"sha": "308d6352602d28455d818afb6ca1b8a9e63132d3", "filename": "src/test/ui/issues/issue-16683.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-16683.rs:4:9\n+  --> $DIR/issue-16683.rs:8:9\n    |\n LL | trait T<'a> {\n    |         -- lifetime `'a` defined here"}, {"sha": "05969bc7b9f13e8e59c3e0638c31192fa2bc3757", "filename": "src/test/ui/issues/issue-16683.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16683.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,7 +1,13 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n trait T<'a> {\n     fn a(&'a self) -> &'a bool;\n     fn b(&self) {\n-        self.a(); //~ ERROR cannot infer\n+        self.a();\n+        //[base]~^ ERROR cannot infer\n+        //[nll]~^^ ERROR lifetime may not live long enough\n     }\n }\n "}, {"sha": "e139de2019d62240465f2ab303a9cc88a399b3aa", "filename": "src/test/ui/issues/issue-16922.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16922.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0759]: `value` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/issue-16922.rs:4:14\n+  --> $DIR/issue-16922.rs:8:14\n    |\n LL | fn foo<T: Any>(value: &T) -> Box<dyn Any> {\n    |                       -- this data with an anonymous lifetime `'_`...", "previous_filename": "src/test/ui/issues/issue-16922.stderr"}, {"sha": "00a42e6724250211b048f74b04db37c6bd801ed4", "filename": "src/test/ui/issues/issue-16922.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-16922.rs:4:5\n+  --> $DIR/issue-16922.rs:8:5\n    |\n LL | fn foo<T: Any>(value: &T) -> Box<dyn Any> {\n    |                       - let's call the lifetime of this reference `'1`"}, {"sha": "1767017eb3db5b3c04ef4a589c69e9c91278480b", "filename": "src/test/ui/issues/issue-16922.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16922.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,7 +1,13 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n use std::any::Any;\n \n fn foo<T: Any>(value: &T) -> Box<dyn Any> {\n-    Box::new(value) as Box<dyn Any> //~ ERROR E0759\n+    Box::new(value) as Box<dyn Any>\n+    //[base]~^ ERROR E0759\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn main() {"}, {"sha": "b52dc444593abad369369ad7fd9f883f8923c0f9", "filename": "src/test/ui/issues/issue-17728.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17728.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17728.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17728.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0623]: lifetime mismatch\n-  --> $DIR/issue-17728.rs:15:28\n+  --> $DIR/issue-17728.rs:19:28\n    |\n LL |     fn attemptTraverse(&self, room: &Room, directionStr: &str) -> Result<&Room, &str> {\n    |                                     -----                         -------------------\n@@ -16,7 +16,7 @@ LL |     fn attemptTraverse<'a>(&'a self, room: &'a Room, directionStr: &str) ->\n    |                       ++++  ++              ++\n \n error[E0308]: `match` arms have incompatible types\n-  --> $DIR/issue-17728.rs:109:14\n+  --> $DIR/issue-17728.rs:113:14\n    |\n LL | /     match to_parse {\n LL | |         \"w\" | \"west\" => RoomDirection::West,", "previous_filename": "src/test/ui/issues/issue-17728.stderr"}, {"sha": "ddfb890eac36e35c061f3133148e4e0eb13ce688", "filename": "src/test/ui/issues/issue-17728.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17728.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17728.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17728.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: `match` arms have incompatible types\n-  --> $DIR/issue-17728.rs:109:14\n+  --> $DIR/issue-17728.rs:113:14\n    |\n LL | /     match to_parse {\n LL | |         \"w\" | \"west\" => RoomDirection::West,"}, {"sha": "91b71ad6d0be2c5dce74e5035f2ae5e4a80b0890", "filename": "src/test/ui/issues/issue-17728.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17728.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17728.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17728.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n use std::fmt::{Debug, Formatter, Error};\n use std::collections::HashMap;\n \n@@ -13,7 +17,7 @@ trait TraversesWorld {\n         let maybe_room = room.direction_to_room.get(&direction);\n         match maybe_room {\n             Some(entry) => Ok(entry),\n-            //~^ ERROR lifetime mismatch [E0623]\n+            //[base]~^ ERROR lifetime mismatch [E0623]\n             _ => Err(\"Direction does not exist in room.\")\n         }\n     }"}, {"sha": "202238a49cbf57d45ac11b272e4e6387377ac7c7", "filename": "src/test/ui/issues/issue-17758.base.stderr", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17758.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,26 +1,26 @@\n error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n-  --> $DIR/issue-17758.rs:7:14\n+  --> $DIR/issue-17758.rs:11:14\n    |\n LL |         self.foo();\n    |              ^^^\n    |\n note: first, the lifetime cannot outlive the anonymous lifetime defined here...\n-  --> $DIR/issue-17758.rs:6:12\n+  --> $DIR/issue-17758.rs:10:12\n    |\n LL |     fn bar(&self) {\n    |            ^^^^^\n note: ...so that reference does not outlive borrowed content\n-  --> $DIR/issue-17758.rs:7:9\n+  --> $DIR/issue-17758.rs:11:9\n    |\n LL |         self.foo();\n    |         ^^^^\n note: but, the lifetime must be valid for the lifetime `'a` as defined here...\n-  --> $DIR/issue-17758.rs:4:11\n+  --> $DIR/issue-17758.rs:8:11\n    |\n LL | trait Foo<'a> {\n    |           ^^\n note: ...so that the types are compatible\n-  --> $DIR/issue-17758.rs:7:14\n+  --> $DIR/issue-17758.rs:11:14\n    |\n LL |         self.foo();\n    |              ^^^", "previous_filename": "src/test/ui/issues/issue-17758.stderr"}, {"sha": "32030540a84562dfd1ecd01c9e2f8defb92fe20f", "filename": "src/test/ui/issues/issue-17758.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-17758.rs:7:9\n+  --> $DIR/issue-17758.rs:11:9\n    |\n LL | trait Foo<'a> {\n    |           -- lifetime `'a` defined here"}, {"sha": "8090022b6d07454be965bafe4f71a2b09ec18fd0", "filename": "src/test/ui/issues/issue-17758.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17758.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,11 +1,16 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n // Test that regionck suggestions in a provided method of a trait\n // don't ICE\n \n trait Foo<'a> {\n     fn foo(&'a self);\n     fn bar(&self) {\n         self.foo();\n-        //~^ ERROR cannot infer\n+        //[base]~^ ERROR cannot infer\n+        //[nll]~^^ ERROR lifetime may not live long enough\n     }\n }\n "}, {"sha": "8b1ef806abb4a0639ff760943b432d260d679dca", "filename": "src/test/ui/issues/issue-26217.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26217.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0477]: the type `&'a i32` does not fulfill the required lifetime\n-  --> $DIR/issue-26217.rs:4:5\n+  --> $DIR/issue-26217.rs:8:5\n    |\n LL |     foo::<&'a i32>();\n    |     ^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/issues/issue-26217.stderr"}, {"sha": "c8b7d6205577d6b5f5d34106b88040a520922bea", "filename": "src/test/ui/issues/issue-26217.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-26217.rs:4:5\n+  --> $DIR/issue-26217.rs:8:5\n    |\n LL | fn bar<'a>() {\n    |        -- lifetime `'a` defined here"}, {"sha": "6cc60b05dc623b549b544a381dea68977b73bdc5", "filename": "src/test/ui/issues/issue-26217.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26217.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,8 +1,13 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn foo<T>() where for<'a> T: 'a {}\n \n fn bar<'a>() {\n     foo::<&'a i32>();\n-    //~^ ERROR the type `&'a i32` does not fulfill the required lifetime\n+    //[base]~^ ERROR the type `&'a i32` does not fulfill the required lifetime\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn main() {"}, {"sha": "a8518dde22e66b15d54e3de857740c305ed2e574", "filename": "src/test/ui/issues/issue-40000.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-40000.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-40000.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40000.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-40000.rs:6:9\n+  --> $DIR/issue-40000.rs:10:9\n    |\n LL |     foo(bar);\n    |         ^^^ one type is more general than the other", "previous_filename": "src/test/ui/issues/issue-40000.stderr"}, {"sha": "81df9969a4f7988ca84a7884648c682d86811a90", "filename": "src/test/ui/issues/issue-40000.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-40000.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-40000.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40000.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-40000.rs:6:9\n+  --> $DIR/issue-40000.rs:10:9\n    |\n LL |     foo(bar);\n    |         ^^^ one type is more general than the other\n@@ -8,7 +8,7 @@ LL |     foo(bar);\n               found trait object `dyn Fn(&i32)`\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-40000.rs:6:9\n+  --> $DIR/issue-40000.rs:10:9\n    |\n LL |     foo(bar);\n    |         ^^^ one type is more general than the other"}, {"sha": "3639413bfafc2a8194d4f1ec6043405fb7b9a831", "filename": "src/test/ui/issues/issue-40000.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-40000.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-40000.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40000.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,7 +1,13 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn main() {\n     let bar: fn(&mut u32) = |_| {};\n \n     fn foo(x: Box<dyn Fn(&i32)>) {}\n     let bar = Box::new(|x: &i32| {}) as Box<dyn Fn(_)>;\n-    foo(bar); //~ ERROR E0308\n+    foo(bar);\n+    //~^ ERROR E0308\n+    //[nll]~^^ ERROR mismatched types\n }"}, {"sha": "97ed4d65093853b0efd552bfd407f49017861a48", "filename": "src/test/ui/issues/issue-46983.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-46983.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-46983.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46983.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error[E0759]: `x` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/issue-46983.rs:2:5\n+  --> $DIR/issue-46983.rs:6:5\n    |\n LL | fn foo(x: &u32) -> &'static u32 {\n    |           ---- this data with an anonymous lifetime `'_`...", "previous_filename": "src/test/ui/issues/issue-46983.stderr"}, {"sha": "1327ff80c80125b410d31698497da72cb0df96e7", "filename": "src/test/ui/issues/issue-46983.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-46983.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-46983.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46983.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-46983.rs:2:5\n+  --> $DIR/issue-46983.rs:6:5\n    |\n LL | fn foo(x: &u32) -> &'static u32 {\n    |           - let's call the lifetime of this reference `'1`"}, {"sha": "e3ecdc8deac45dba6f469fabd552ab50fc1c42a6", "filename": "src/test/ui/issues/issue-46983.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-46983.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-46983.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46983.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,6 +1,11 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn foo(x: &u32) -> &'static u32 {\n     &*x\n-    //~^ ERROR `x` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement [E0759]\n+    //[base]~^ ERROR `x` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement [E0759]\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "6556a52de14f2c303a2fbe02feb269042e4ae6e3", "filename": "src/test/ui/issues/issue-52533.base.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-52533.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-52533.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52533.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,16 +1,16 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/issue-52533.rs:5:16\n+  --> $DIR/issue-52533.rs:9:16\n    |\n LL |     foo(|a, b| b)\n    |                ^\n    |\n note: ...the reference is valid for the anonymous lifetime #1 defined here...\n-  --> $DIR/issue-52533.rs:5:9\n+  --> $DIR/issue-52533.rs:9:9\n    |\n LL |     foo(|a, b| b)\n    |         ^^^^^^^^\n note: ...but the borrowed content is only valid for the anonymous lifetime #2 defined here\n-  --> $DIR/issue-52533.rs:5:9\n+  --> $DIR/issue-52533.rs:9:9\n    |\n LL |     foo(|a, b| b)\n    |         ^^^^^^^^", "previous_filename": "src/test/ui/issues/issue-52533.stderr"}, {"sha": "75fe5a5b862bb4bfb86796d7c38a72a928bad274", "filename": "src/test/ui/issues/issue-52533.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-52533.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-52533.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52533.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-52533.rs:5:16\n+  --> $DIR/issue-52533.rs:9:16\n    |\n LL |     foo(|a, b| b)\n    |          -  -  ^ closure was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`"}, {"sha": "bc6264d0e2fc9a247e3355991c30c9c26488a23b", "filename": "src/test/ui/issues/issue-52533.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-52533.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-52533.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52533.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,7 +1,12 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn foo(_: impl for<'a> FnOnce(&'a u32, &u32) -> &'a u32) {\n }\n \n fn main() {\n     foo(|a, b| b)\n-    //~^ ERROR lifetime of reference outlives lifetime of borrowed content...\n+    //[base]~^ ERROR lifetime of reference outlives lifetime of borrowed content...\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }"}, {"sha": "db91edf51e33751c696cad40b9583a0ab82f4208", "filename": "src/test/ui/issues/issue-54302-cases.base.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:63:5\n+  --> $DIR/issue-54302-cases.rs:67:5\n    |\n LL |     <u32 as RefFoo<u32>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough\n@@ -8,7 +8,7 @@ LL |     <u32 as RefFoo<u32>>::ref_foo(a)\n    = note: ...but `Foo<'_, u32>` is actually implemented for the type `&'1 u32`, for some specific lifetime `'1`\n \n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:69:5\n+  --> $DIR/issue-54302-cases.rs:73:5\n    |\n LL |     <i32 as RefFoo<i32>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough\n@@ -17,7 +17,7 @@ LL |     <i32 as RefFoo<i32>>::ref_foo(a)\n    = note: ...but `Foo<'_, i32>` is actually implemented for the type `&'1 i32`, for some specific lifetime `'1`\n \n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:75:5\n+  --> $DIR/issue-54302-cases.rs:79:5\n    |\n LL |     <u64 as RefFoo<u64>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough\n@@ -26,7 +26,7 @@ LL |     <u64 as RefFoo<u64>>::ref_foo(a)\n    = note: ...but `Foo<'_, u64>` is actually implemented for the type `&'1 u64`, for some specific lifetime `'1`\n \n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:81:5\n+  --> $DIR/issue-54302-cases.rs:85:5\n    |\n LL |     <i64 as RefFoo<i64>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough", "previous_filename": "src/test/ui/issues/issue-54302-cases.stderr"}, {"sha": "89725d3b03ac2f43410583995c484235326143d4", "filename": "src/test/ui/issues/issue-54302-cases.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:63:5\n+  --> $DIR/issue-54302-cases.rs:67:5\n    |\n LL |     <u32 as RefFoo<u32>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough\n@@ -8,7 +8,7 @@ LL |     <u32 as RefFoo<u32>>::ref_foo(a)\n    = note: ...but `Foo<'_, u32>` is actually implemented for the type `&'1 u32`, for some specific lifetime `'1`\n \n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:69:5\n+  --> $DIR/issue-54302-cases.rs:73:5\n    |\n LL |     <i32 as RefFoo<i32>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough\n@@ -17,7 +17,7 @@ LL |     <i32 as RefFoo<i32>>::ref_foo(a)\n    = note: ...but `Foo<'_, i32>` is actually implemented for the type `&'1 i32`, for some specific lifetime `'1`\n \n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:75:5\n+  --> $DIR/issue-54302-cases.rs:79:5\n    |\n LL |     <u64 as RefFoo<u64>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough\n@@ -26,7 +26,7 @@ LL |     <u64 as RefFoo<u64>>::ref_foo(a)\n    = note: ...but `Foo<'_, u64>` is actually implemented for the type `&'1 u64`, for some specific lifetime `'1`\n \n error: implementation of `Foo` is not general enough\n-  --> $DIR/issue-54302-cases.rs:81:5\n+  --> $DIR/issue-54302-cases.rs:85:5\n    |\n LL |     <i64 as RefFoo<i64>>::ref_foo(a)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough"}, {"sha": "f712d9b7718c5c0a87dfd3fcbe9e296542dabc0c", "filename": "src/test/ui/issues/issue-54302-cases.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54302-cases.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n trait Mirror {\n     type Image;\n     fn coerce(self) -> Self::Image;"}, {"sha": "ebd679996d05299ff85565ff6cd4052c97e7ec17", "filename": "src/test/ui/issues/issue-54943.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54943.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,11 +1,11 @@\n error[E0477]: the type `&'a u32` does not fulfill the required lifetime\n-  --> $DIR/issue-54943.rs:6:13\n+  --> $DIR/issue-54943.rs:10:13\n    |\n LL |     let x = foo::<&'a u32>();\n    |             ^^^^^^^^^^^^^^\n    |\n note: type must satisfy the static lifetime as required by this binding\n-  --> $DIR/issue-54943.rs:1:11\n+  --> $DIR/issue-54943.rs:5:11\n    |\n LL | fn foo<T: 'static>() { }\n    |           ^^^^^^^", "previous_filename": "src/test/ui/issues/issue-54943.stderr"}, {"sha": "2c86a5a3390cd5e8da8b2991cc4b209547d1120b", "filename": "src/test/ui/issues/issue-54943.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54943.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-54943.rs:6:13\n+  --> $DIR/issue-54943.rs:10:13\n    |\n LL | fn boo<'a>() {\n    |        -- lifetime `'a` defined here"}, {"sha": "ad463e7a466f24b8432bd359911eab79638d3f91", "filename": "src/test/ui/issues/issue-54943.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54943.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn foo<T: 'static>() { }\n \n fn boo<'a>() {"}, {"sha": "26b1c9ec4689a3f5aeaa1a13b9d9838e5c7c5a49", "filename": "src/test/ui/issues/issue-55731.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55731.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55731.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55731.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `DistributedIteratorMulti` is not general enough\n-  --> $DIR/issue-55731.rs:48:5\n+  --> $DIR/issue-55731.rs:52:5\n    |\n LL |     multi(Map {\n    |     ^^^^^ implementation of `DistributedIteratorMulti` is not general enough", "previous_filename": "src/test/ui/issues/issue-55731.stderr"}, {"sha": "168a2cbccd7cb37c4065b21f1ab14b4025fb1435", "filename": "src/test/ui/issues/issue-55731.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55731.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55731.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55731.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `DistributedIteratorMulti` is not general enough\n-  --> $DIR/issue-55731.rs:48:5\n+  --> $DIR/issue-55731.rs:52:5\n    |\n LL | /     multi(Map {\n LL | |         i: Cloned(PhantomData),"}, {"sha": "c6a0ee12589dfc981b5a5c4a28f6b62374ae2bca", "filename": "src/test/ui/issues/issue-55731.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55731.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55731.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55731.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n use std::marker::PhantomData;\n \n trait DistributedIterator {"}, {"sha": "a4c5d68472dedc38181b01d6b860eac898850707", "filename": "src/test/ui/issues/issue-55796.base.stderr", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55796.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,47 +1,47 @@\n error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n-  --> $DIR/issue-55796.rs:16:9\n+  --> $DIR/issue-55796.rs:20:9\n    |\n LL |         Box::new(self.out_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: first, the lifetime cannot outlive the lifetime `'a` as defined here...\n-  --> $DIR/issue-55796.rs:5:17\n+  --> $DIR/issue-55796.rs:9:17\n    |\n LL | pub trait Graph<'a> {\n    |                 ^^\n-note: ...so that the type `Map<<Self as Graph<'a>>::EdgesIter, [closure@$DIR/issue-55796.rs:16:40: 16:54]>` will meet its required lifetime bounds\n-  --> $DIR/issue-55796.rs:16:9\n+note: ...so that the type `Map<<Self as Graph<'a>>::EdgesIter, [closure@$DIR/issue-55796.rs:20:40: 20:54]>` will meet its required lifetime bounds\n+  --> $DIR/issue-55796.rs:20:9\n    |\n LL |         Box::new(self.out_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: but, the lifetime must be valid for the static lifetime...\n note: ...so that the types are compatible\n-  --> $DIR/issue-55796.rs:16:9\n+  --> $DIR/issue-55796.rs:20:9\n    |\n LL |         Box::new(self.out_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected `Box<(dyn Iterator<Item = <Self as Graph<'a>>::Node> + 'static)>`\n               found `Box<dyn Iterator<Item = <Self as Graph<'a>>::Node>>`\n \n error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n-  --> $DIR/issue-55796.rs:21:9\n+  --> $DIR/issue-55796.rs:26:9\n    |\n LL |         Box::new(self.in_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: first, the lifetime cannot outlive the lifetime `'a` as defined here...\n-  --> $DIR/issue-55796.rs:5:17\n+  --> $DIR/issue-55796.rs:9:17\n    |\n LL | pub trait Graph<'a> {\n    |                 ^^\n-note: ...so that the type `Map<<Self as Graph<'a>>::EdgesIter, [closure@$DIR/issue-55796.rs:21:39: 21:53]>` will meet its required lifetime bounds\n-  --> $DIR/issue-55796.rs:21:9\n+note: ...so that the type `Map<<Self as Graph<'a>>::EdgesIter, [closure@$DIR/issue-55796.rs:26:39: 26:53]>` will meet its required lifetime bounds\n+  --> $DIR/issue-55796.rs:26:9\n    |\n LL |         Box::new(self.in_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: but, the lifetime must be valid for the static lifetime...\n note: ...so that the types are compatible\n-  --> $DIR/issue-55796.rs:21:9\n+  --> $DIR/issue-55796.rs:26:9\n    |\n LL |         Box::new(self.in_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/issues/issue-55796.stderr"}, {"sha": "2b7d231871a04be19d1f6c08db6b0af31b30bc6f", "filename": "src/test/ui/issues/issue-55796.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55796.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-55796.rs:16:9\n+  --> $DIR/issue-55796.rs:20:9\n    |\n LL | pub trait Graph<'a> {\n    |                 -- lifetime `'a` defined here\n@@ -8,7 +8,7 @@ LL |         Box::new(self.out_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n \n error: lifetime may not live long enough\n-  --> $DIR/issue-55796.rs:21:9\n+  --> $DIR/issue-55796.rs:26:9\n    |\n LL | pub trait Graph<'a> {\n    |                 -- lifetime `'a` defined here"}, {"sha": "a0bc63dd2a7313f3bb4a919a3d653082270fc3f6", "filename": "src/test/ui/issues/issue-55796.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55796.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n pub trait EdgeTrait<N> {\n     fn target(&self) -> N;\n }\n@@ -14,12 +18,14 @@ pub trait Graph<'a> {\n \n     fn out_neighbors(&'a self, u: &Self::Node) -> Box<dyn Iterator<Item = Self::Node>> {\n         Box::new(self.out_edges(u).map(|e| e.target()))\n-        //~^ ERROR cannot infer\n+        //[base]~^ ERROR cannot infer\n+        //[nll]~^^ ERROR lifetime may not live long enough\n     }\n \n     fn in_neighbors(&'a self, u: &Self::Node) -> Box<dyn Iterator<Item = Self::Node>> {\n         Box::new(self.in_edges(u).map(|e| e.target()))\n-        //~^ ERROR cannot infer\n+        //[base]~^ ERROR cannot infer\n+        //[nll]~^^ ERROR lifetime may not live long enough\n     }\n }\n "}, {"sha": "d2c6738cb590f0ced16e8234a9837cea66fe17af", "filename": "src/test/ui/issues/issue-75777.base.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75777.base.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,24 +1,24 @@\n error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n-  --> $DIR/issue-75777.rs:11:14\n+  --> $DIR/issue-75777.rs:15:14\n    |\n LL |     Box::new(move |_| fut)\n    |              ^^^^^^^^^^^^\n    |\n note: first, the lifetime cannot outlive the lifetime `'a` as defined here...\n-  --> $DIR/issue-75777.rs:9:11\n+  --> $DIR/issue-75777.rs:13:11\n    |\n LL | fn inject<'a, Env: 'a, A: 'a + Send>(v: A) -> Box<dyn FnOnce(&'a Env) -> BoxFuture<'a, A>> {\n    |           ^^\n note: ...so that the types are compatible\n-  --> $DIR/issue-75777.rs:11:14\n+  --> $DIR/issue-75777.rs:15:14\n    |\n LL |     Box::new(move |_| fut)\n    |              ^^^^^^^^^^^^\n    = note: expected `(Pin<Box<dyn Future<Output = A> + Send>>,)`\n               found `(Pin<Box<(dyn Future<Output = A> + Send + 'a)>>,)`\n    = note: but, the lifetime must be valid for the static lifetime...\n note: ...so that the types are compatible\n-  --> $DIR/issue-75777.rs:11:5\n+  --> $DIR/issue-75777.rs:15:5\n    |\n LL |     Box::new(move |_| fut)\n    |     ^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/issues/issue-75777.stderr"}, {"sha": "d1f8d3886763d39a0bc5d496076eeafe141c8193", "filename": "src/test/ui/issues/issue-75777.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-75777.rs:11:5\n+  --> $DIR/issue-75777.rs:15:5\n    |\n LL | fn inject<'a, Env: 'a, A: 'a + Send>(v: A) -> Box<dyn FnOnce(&'a Env) -> BoxFuture<'a, A>> {\n    |           -- lifetime `'a` defined here"}, {"sha": "930cd7ad37ba248dd4efc4f4167dc039d7c53f91", "filename": "src/test/ui/issues/issue-75777.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b391b329f075ed287b07f80346360be2e0f212e6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75777.rs?ref=b391b329f075ed287b07f80346360be2e0f212e6", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n // Regression test for #75777.\n // Checks that a boxed future can be properly constructed.\n \n@@ -9,7 +13,8 @@ type BoxFuture<'a, T> = Pin<Box<dyn Future<Output = T> + 'a + Send>>;\n fn inject<'a, Env: 'a, A: 'a + Send>(v: A) -> Box<dyn FnOnce(&'a Env) -> BoxFuture<'a, A>> {\n     let fut: BoxFuture<'a, A> = Box::pin(future::ready(v));\n     Box::new(move |_| fut)\n-    //~^ ERROR: cannot infer an appropriate lifetime\n+    //[base]~^ ERROR: cannot infer an appropriate lifetime\n+    //[nll]~^^ ERROR: lifetime may not live long enough\n }\n \n fn main() {}"}]}