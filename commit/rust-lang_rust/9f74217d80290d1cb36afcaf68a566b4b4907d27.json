{"sha": "9f74217d80290d1cb36afcaf68a566b4b4907d27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNzQyMTdkODAyOTBkMWNiMzZhZmNhZjY4YTU2NmI0YjQ5MDdkMjc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-03T16:21:57Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-04T01:09:28Z"}, "message": "register snapshots", "tree": {"sha": "4695dee6c30009d210eb1bc27566a89cc2ae5f78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4695dee6c30009d210eb1bc27566a89cc2ae5f78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f74217d80290d1cb36afcaf68a566b4b4907d27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f74217d80290d1cb36afcaf68a566b4b4907d27", "html_url": "https://github.com/rust-lang/rust/commit/9f74217d80290d1cb36afcaf68a566b4b4907d27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f74217d80290d1cb36afcaf68a566b4b4907d27/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34101d2320583a0a95ab3afc4c2b6b75dadb5cd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/34101d2320583a0a95ab3afc4c2b6b75dadb5cd7", "html_url": "https://github.com/rust-lang/rust/commit/34101d2320583a0a95ab3afc4c2b6b75dadb5cd7"}], "stats": {"total": 41, "additions": 9, "deletions": 32}, "files": [{"sha": "55c18faf83deeb5a9eed4044d551907ccfa36fe3", "filename": "src/libstd/ptr.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Flibstd%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Flibstd%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fptr.rs?ref=9f74217d80290d1cb36afcaf68a566b4b4907d27", "patch": "@@ -13,8 +13,6 @@\n use cast;\n use clone::Clone;\n use option::{Option, Some, None};\n-#[cfg(stage0)]\n-use sys;\n use unstable::intrinsics;\n use util::swap;\n \n@@ -26,42 +24,18 @@ use uint;\n \n /// Calculate the offset from a pointer\n #[inline]\n-#[cfg(stage0)]\n-pub fn offset<T>(ptr: *T, count: int) -> *T {\n-    (ptr as uint + (count as uint) * sys::size_of::<T>()) as *T\n-}\n-\n-/// Calculate the offset from a const pointer\n-#[inline]\n-#[cfg(stage0)]\n-pub fn const_offset<T>(ptr: *const T, count: int) -> *const T {\n-    (ptr as uint + (count as uint) * sys::size_of::<T>()) as *T\n-}\n-\n-/// Calculate the offset from a mut pointer\n-#[inline]\n-#[cfg(stage0)]\n-pub fn mut_offset<T>(ptr: *mut T, count: int) -> *mut T {\n-    (ptr as uint + (count as uint) * sys::size_of::<T>()) as *mut T\n-}\n-\n-/// Calculate the offset from a pointer\n-#[inline]\n-#[cfg(not(stage0))]\n pub fn offset<T>(ptr: *T, count: int) -> *T {\n     unsafe { intrinsics::offset(ptr, count) }\n }\n \n /// Calculate the offset from a const pointer\n #[inline]\n-#[cfg(not(stage0))]\n pub fn const_offset<T>(ptr: *const T, count: int) -> *const T {\n     unsafe { intrinsics::offset(ptr as *T, count) }\n }\n \n /// Calculate the offset from a mut pointer\n #[inline]\n-#[cfg(not(stage0))]\n pub fn mut_offset<T>(ptr: *mut T, count: int) -> *mut T {\n     unsafe { intrinsics::offset(ptr as *T, count) as *mut T }\n }"}, {"sha": "2cfe63d99266f97531c16f21781254cef0b92f72", "filename": "src/libstd/unstable/atomics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Flibstd%2Funstable%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Flibstd%2Funstable%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fatomics.rs?ref=9f74217d80290d1cb36afcaf68a566b4b4907d27", "patch": "@@ -509,7 +509,7 @@ pub unsafe fn atomic_xor<T>(dst: &mut T, val: T, order: Ordering) -> T {\n  *\n  * Accepts `Acquire`, `Release`, `AcqRel` and `SeqCst` orderings.\n  */\n-#[inline] #[cfg(not(stage0))]\n+#[inline]\n pub fn fence(order: Ordering) {\n     unsafe {\n         match order {"}, {"sha": "1270a80c354990aeee037520b1fe4f1221faf192", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=9f74217d80290d1cb36afcaf68a566b4b4907d27", "patch": "@@ -256,13 +256,9 @@ extern \"rust-intrinsic\" {\n     pub fn atomic_umax_acqrel(dst: &mut int, src: int) -> int;\n     pub fn atomic_umax_relaxed(dst: &mut int, src: int) -> int;\n \n-    #[cfg(not(stage0))]\n     pub fn atomic_fence();\n-    #[cfg(not(stage0))]\n     pub fn atomic_fence_acq();\n-    #[cfg(not(stage0))]\n     pub fn atomic_fence_rel();\n-    #[cfg(not(stage0))]\n     pub fn atomic_fence_acqrel();\n \n     /// The size of a type in bytes.\n@@ -325,7 +321,6 @@ extern \"rust-intrinsic\" {\n     ///\n     /// This is implemented as an intrinsic to avoid converting to and from an\n     /// integer, since the conversion would throw away aliasing information.\n-    #[cfg(not(stage0))]\n     pub fn offset<T>(dst: *T, offset: int) -> *T;\n \n     /// Equivalent to the `llvm.memcpy.p0i8.0i8.i32` intrinsic, with a size of"}, {"sha": "d5c27fb74eb950f8f83087cf8529f50052f22b03", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f74217d80290d1cb36afcaf68a566b4b4907d27/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=9f74217d80290d1cb36afcaf68a566b4b4907d27", "patch": "@@ -1,3 +1,11 @@\n+S 2013-08-03 18e3db7\n+  freebsd-x86_64 addf91b20416bf21a7c53ea9508bc302ec957ce9\n+  linux-i386 ce103c323c0a0b75d1307014f1d6f8ff4d03c873\n+  linux-x86_64 6828d854d174c7b514a4350dfdd92c059df059d6\n+  macos-i386 ef4b67859146cacce54367f9243b5da9f9fde386\n+  macos-x86_64 936d4e170d8207b40df64c5eca3a3a27b3eee08a\n+  winnt-i386 332f0181fb68fcbeaaae342d5fb22889aa902152\n+\n S 2013-07-31 389aba0\n   freebsd-x86_64 c9783bb5723404be8ae371d265bbb9a1c679e4db\n   linux-i386 7413d98325b23dc461ced92757e5e19bec750dbd"}]}