{"sha": "65b731908abee2bb8b0af50d18567eb4abaa4ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YjczMTkwOGFiZWUyYmI4YjBhZjUwZDE4NTY3ZWI0YWJhYTRhYzI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-17T19:18:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-17T19:18:56Z"}, "message": "Explain that ? converts the error type using From", "tree": {"sha": "b8186a7dc7cc33edbe4080e85bf0b8883812b183", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8186a7dc7cc33edbe4080e85bf0b8883812b183"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65b731908abee2bb8b0af50d18567eb4abaa4ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65b731908abee2bb8b0af50d18567eb4abaa4ac2", "html_url": "https://github.com/rust-lang/rust/commit/65b731908abee2bb8b0af50d18567eb4abaa4ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65b731908abee2bb8b0af50d18567eb4abaa4ac2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1962adea6ad9b992516ae56ad7f8c5bc33b951cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1962adea6ad9b992516ae56ad7f8c5bc33b951cb", "html_url": "https://github.com/rust-lang/rust/commit/1962adea6ad9b992516ae56ad7f8c5bc33b951cb"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "9019c4a0575d40b9c5c12df1aa7fb6335cd946cf", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=65b731908abee2bb8b0af50d18567eb4abaa4ac2", "patch": "@@ -643,13 +643,16 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                             .map(|s| &s == \"?\")\n                             .unwrap_or(false);\n                         let is_from = format!(\"{}\", trait_ref).starts_with(\"std::convert::From<\");\n-                        let message = if is_try && is_from {\n-                            Some(format!(\n+                        let (message, note) = if is_try && is_from {\n+                            (Some(format!(\n                                 \"`?` couldn't convert the error to `{}`\",\n                                 trait_ref.self_ty(),\n+                            )), Some(\n+                                \"the question mark operation (`?`) implicitly performs a \\\n+                                 conversion on the error value using the `From` trait\".to_owned()\n                             ))\n                         } else {\n-                            message\n+                            (message, note)\n                         };\n \n                         let mut err = struct_span_err!("}, {"sha": "04b8c3aa35396374ba058fc471b989d485ae34eb", "filename": "src/test/ui/issues/issue-32709.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr?ref=65b731908abee2bb8b0af50d18567eb4abaa4ac2", "patch": "@@ -4,6 +4,7 @@ error[E0277]: `?` couldn't convert the error to `()`\n LL |     Err(5)?;\n    |           ^ the trait `std::convert::From<{integer}>` is not implemented for `()`\n    |\n+   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n    = note: required by `std::convert::From::from`\n \n error: aborting due to previous error"}, {"sha": "e1c2c6b675e9bb1d1dd2d7a2ae56d7f1b73f9801", "filename": "src/test/ui/try-block/try-block-bad-type.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr?ref=65b731908abee2bb8b0af50d18567eb4abaa4ac2", "patch": "@@ -4,6 +4,7 @@ error[E0277]: `?` couldn't convert the error to `i32`\n LL |         Err(\"\")?;\n    |                ^ the trait `std::convert::From<&str>` is not implemented for `i32`\n    |\n+   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n    = help: the following implementations were found:\n              <i32 as std::convert::From<bool>>\n              <i32 as std::convert::From<i16>>"}, {"sha": "db5046f8c151af029bc24d9f3b3a59b5b8c39c55", "filename": "src/test/ui/try-on-option.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Ftest%2Fui%2Ftry-on-option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65b731908abee2bb8b0af50d18567eb4abaa4ac2/src%2Ftest%2Fui%2Ftry-on-option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-on-option.stderr?ref=65b731908abee2bb8b0af50d18567eb4abaa4ac2", "patch": "@@ -4,6 +4,7 @@ error[E0277]: `?` couldn't convert the error to `()`\n LL |     x?;\n    |      ^ the trait `std::convert::From<std::option::NoneError>` is not implemented for `()`\n    |\n+   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n    = note: required by `std::convert::From::from`\n \n error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)"}]}