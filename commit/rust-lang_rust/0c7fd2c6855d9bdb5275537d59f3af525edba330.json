{"sha": "0c7fd2c6855d9bdb5275537d59f3af525edba330", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjN2ZkMmM2ODU1ZDliZGI1Mjc1NTM3ZDU5ZjNhZjUyNWVkYmEzMzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-06T19:11:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-22T09:36:30Z"}, "message": "expand successful-promotion test a bit", "tree": {"sha": "888b51c32d0c97c68e2b1b703f87e2bd208938e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/888b51c32d0c97c68e2b1b703f87e2bd208938e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c7fd2c6855d9bdb5275537d59f3af525edba330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c7fd2c6855d9bdb5275537d59f3af525edba330", "html_url": "https://github.com/rust-lang/rust/commit/0c7fd2c6855d9bdb5275537d59f3af525edba330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c7fd2c6855d9bdb5275537d59f3af525edba330/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f62cecd80761ae3de9134c5a021bcaa4aed9337e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f62cecd80761ae3de9134c5a021bcaa4aed9337e", "html_url": "https://github.com/rust-lang/rust/commit/f62cecd80761ae3de9134c5a021bcaa4aed9337e"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "580c6d62f10af238cb57c1b7e4784fc0f3c1383a", "filename": "src/test/ui/consts/promotion.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0c7fd2c6855d9bdb5275537d59f3af525edba330/src%2Ftest%2Fui%2Fconsts%2Fpromotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c7fd2c6855d9bdb5275537d59f3af525edba330/src%2Ftest%2Fui%2Fconsts%2Fpromotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromotion.rs?ref=0c7fd2c6855d9bdb5275537d59f3af525edba330", "patch": "@@ -1,41 +1,43 @@\n-// run-pass\n+// revisions: noopt opt opt_with_overflow_checks\n+//[noopt]compile-flags: -C opt-level=0\n+//[opt]compile-flags: -O\n+//[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O\n \n-// compile-flags: -O\n+// build-pass\n+#[allow(arithmetic_overflow)]\n \n-fn foo(_: &'static [&'static str]) {}\n-fn bar(_: &'static [&'static str; 3]) {}\n-const fn baz_i32(_: &'static i32) {}\n-const fn baz_u32(_: &'static u32) {}\n+const fn assert_static<T>(_: &'static T) {}\n \n const fn fail() -> i32 { 1/0 }\n const C: i32 = {\n     // Promoted that fails to evaluate in dead code -- this must work\n     // (for backwards compatibility reasons).\n     if false {\n-        baz_i32(&fail());\n+        assert_static(&fail());\n     }\n     42\n };\n \n fn main() {\n-    foo(&[\"a\", \"b\", \"c\"]);\n-    bar(&[\"d\", \"e\", \"f\"]);\n+    assert_static(&[\"a\", \"b\", \"c\"]);\n+    assert_static(&[\"d\", \"e\", \"f\"]);\n     assert_eq!(C, 42);\n \n     // make sure that these do not cause trouble despite overflowing\n-    baz_u32(&(0-1));\n-    baz_i32(&-i32::MIN);\n+    assert_static(&(0-1));\n+    assert_static(&-i32::MIN);\n \n     // div-by-non-0 is okay\n-    baz_i32(&(1/1));\n-    baz_i32(&(1%1));\n+    assert_static(&(1/1));\n+    assert_static(&(1%1));\n \n     // in-bounds array access is okay\n-    baz_i32(&([1,2,3][0] + 1));\n+    assert_static(&([1,2,3][0] + 1));\n+    assert_static(&[[1,2][1]]);\n \n-    // Top-level projections do not get promoted, so no error here.\n+    // Top-level projections are not part of the promoted, so no error here.\n     if false {\n         #[allow(unconditional_panic)]\n-        baz_i32(&[1,2,3][4]);\n+        assert_static(&[1,2,3][4]);\n     }\n }"}]}