{"sha": "46514448b740b82e4f5f9cf742c6f8c6caec1d38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NTE0NDQ4Yjc0MGI4MmU0ZjVmOWNmNzQyYzZmOGM2Y2FlYzFkMzg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-11-13T20:31:41Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-11-16T19:19:06Z"}, "message": "Tweak the search limits a bit", "tree": {"sha": "3c0b226594c9a18e8d49d738d5c419a09cee25db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c0b226594c9a18e8d49d738d5c419a09cee25db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46514448b740b82e4f5f9cf742c6f8c6caec1d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46514448b740b82e4f5f9cf742c6f8c6caec1d38", "html_url": "https://github.com/rust-lang/rust/commit/46514448b740b82e4f5f9cf742c6f8c6caec1d38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46514448b740b82e4f5f9cf742c6f8c6caec1d38/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1598740292c29613ef2b384a82de3a2735bc5566", "url": "https://api.github.com/repos/rust-lang/rust/commits/1598740292c29613ef2b384a82de3a2735bc5566", "html_url": "https://github.com/rust-lang/rust/commit/1598740292c29613ef2b384a82de3a2735bc5566"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "2ac6f94a9b5a3f3110febc831f772ab70b26cf86", "filename": "crates/completion/src/completions/magic.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46514448b740b82e4f5f9cf742c6f8c6caec1d38/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fmagic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46514448b740b82e4f5f9cf742c6f8c6caec1d38/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fmagic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fmagic.rs?ref=46514448b740b82e4f5f9cf742c6f8c6caec1d38", "patch": "@@ -13,19 +13,21 @@ use crate::{\n \n use super::Completions;\n \n+// TODO kb reuse auto_import assist approach to add trait completion\n // TODO kb add a setting toggle for this feature?\n pub(crate) fn complete_magic(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     if !(ctx.is_trivial_path || ctx.is_pat_binding_or_const) {\n         return None;\n     }\n+    let _p = profile::span(\"complete_magic\");\n     let current_module = ctx.scope.module()?;\n     let anchor = ctx.name_ref_syntax.as_ref()?;\n     let import_scope = ImportScope::find_insert_use_container(anchor.syntax(), &ctx.sema)?;\n \n     let potential_import_name = ctx.token.to_string();\n \n     let possible_imports =\n-        imports_locator::find_similar_imports(&ctx.sema, ctx.krate?, &potential_import_name)\n+        imports_locator::find_similar_imports(&ctx.sema, ctx.krate?, &potential_import_name, 400)\n             .filter_map(|import_candidate| {\n                 Some(match import_candidate {\n                     Either::Left(module_def) => ("}, {"sha": "1b21f76ac9b303653f1812a1393bedf7041ab4bd", "filename": "crates/ide_db/src/imports_locator.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/46514448b740b82e4f5f9cf742c6f8c6caec1d38/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46514448b740b82e4f5f9cf742c6f8c6caec1d38/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fimports_locator.rs?ref=46514448b740b82e4f5f9cf742c6f8c6caec1d38", "patch": "@@ -35,17 +35,18 @@ pub fn find_similar_imports<'a>(\n     sema: &Semantics<'a, RootDatabase>,\n     krate: Crate,\n     name_to_import: &str,\n+    limit: usize,\n ) -> impl Iterator<Item = Either<ModuleDef, MacroDef>> {\n     let _p = profile::span(\"find_similar_imports\");\n     find_imports(\n         sema,\n         krate,\n         {\n             let mut local_query = LocalImportablesQuery::new(name_to_import.to_string());\n-            local_query.limit(40);\n+            local_query.limit(limit);\n             local_query\n         },\n-        ExternalImportablesQuery::new(name_to_import).limit(40),\n+        ExternalImportablesQuery::new(name_to_import).limit(limit),\n     )\n }\n "}]}