{"sha": "f251ff4081dc89b984000547ec0903e845f14201", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNTFmZjQwODFkYzg5Yjk4NDAwMDU0N2VjMDkwM2U4NDVmMTQyMDE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-01-11T17:23:22Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-01-13T13:02:06Z"}, "message": "bug fixes for issues 30018 and 30822.\n\nincludes bugfixes pointed out during review:\n\n * Only `call_lifetime_start` for an alloca if the function entry does\n   not itself initialize it to \"dropped.\"\n\n * Remove `schedule_lifetime_end` after writing an *element* into a\n   borrowed slice. (As explained by [dotdash][irc], \"the lifetime end\n   that is being removed was for an element in the slice, which is not\n   an alloca of its own and has no lifetime start of its own\")\n\n[irc]: https://botbot.me/mozilla/rust-internals/2016-01-13/?msg=57844504&page=3", "tree": {"sha": "1d4a6e63b7424e89315577d5535477da382e04c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d4a6e63b7424e89315577d5535477da382e04c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f251ff4081dc89b984000547ec0903e845f14201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f251ff4081dc89b984000547ec0903e845f14201", "html_url": "https://github.com/rust-lang/rust/commit/f251ff4081dc89b984000547ec0903e845f14201", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f251ff4081dc89b984000547ec0903e845f14201/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cec7280bf367be9da472e02eba59b5440b5336c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cec7280bf367be9da472e02eba59b5440b5336c9", "html_url": "https://github.com/rust-lang/rust/commit/cec7280bf367be9da472e02eba59b5440b5336c9"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "3a1568a70c9922d8d8804c8daa75b0c6b402a090", "filename": "src/librustc_trans/trans/tvec.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f251ff4081dc89b984000547ec0903e845f14201/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f251ff4081dc89b984000547ec0903e845f14201/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs?ref=f251ff4081dc89b984000547ec0903e845f14201", "patch": "@@ -111,8 +111,15 @@ pub fn trans_slice_vec<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n \n     // Always create an alloca even if zero-sized, to preserve\n     // the non-null invariant of the inner slice ptr\n-    let llfixed = base::alloc_ty(bcx, fixed_ty, \"\");\n-    call_lifetime_start(bcx, llfixed);\n+    let llfixed;\n+    // Issue 30018: ensure state is initialized as dropped if necessary.\n+    if fcx.type_needs_drop(vt.unit_ty) {\n+        llfixed = base::alloc_ty_init(bcx, fixed_ty, InitAlloca::Dropped, \"\");\n+    } else {\n+        let uninit = InitAlloca::Uninit(\"fcx says vt.unit_ty is non-drop\");\n+        llfixed = base::alloc_ty_init(bcx, fixed_ty, uninit, \"\");\n+        call_lifetime_start(bcx, llfixed);\n+    };\n \n     if count > 0 {\n         // Arrange for the backing array to be cleaned up.\n@@ -212,8 +219,8 @@ fn write_content<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                         bcx = expr::trans_into(bcx, &**element,\n                                                SaveIn(lleltptr));\n                         let scope = cleanup::CustomScope(temp_scope);\n-                        fcx.schedule_lifetime_end(scope, lleltptr);\n-                        fcx.schedule_drop_mem(scope, lleltptr, vt.unit_ty, None);\n+                        // Issue #30822: mark memory as dropped after running destructor\n+                        fcx.schedule_drop_and_fill_mem(scope, lleltptr, vt.unit_ty, None);\n                     }\n                     fcx.pop_custom_cleanup_scope(temp_scope);\n                 }"}]}