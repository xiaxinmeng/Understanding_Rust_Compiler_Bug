{"sha": "350a5c0b722038a3743058a7a824cfa6ac7094da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MGE1YzBiNzIyMDM4YTM3NDMwNThhN2E4MjRjZmE2YWM3MDk0ZGE=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-30T02:40:40Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-30T07:45:39Z"}, "message": "vec: use contains_managed instead of box header", "tree": {"sha": "c697608dc9a5c952779d02be503ed0a6d919b887", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c697608dc9a5c952779d02be503ed0a6d919b887"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/350a5c0b722038a3743058a7a824cfa6ac7094da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/350a5c0b722038a3743058a7a824cfa6ac7094da", "html_url": "https://github.com/rust-lang/rust/commit/350a5c0b722038a3743058a7a824cfa6ac7094da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/350a5c0b722038a3743058a7a824cfa6ac7094da/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b91416214ed0e24b780dec8608a122b6b3a943f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b91416214ed0e24b780dec8608a122b6b3a943f5", "html_url": "https://github.com/rust-lang/rust/commit/b91416214ed0e24b780dec8608a122b6b3a943f5"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "009c84a4a6e9fa9980cdadcb7e881c99b15d2fcb", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/350a5c0b722038a3743058a7a824cfa6ac7094da/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350a5c0b722038a3743058a7a824cfa6ac7094da/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=350a5c0b722038a3743058a7a824cfa6ac7094da", "patch": "@@ -34,7 +34,7 @@ use unstable::intrinsics;\n #[cfg(stage0)]\n use intrinsic::{get_tydesc};\n #[cfg(not(stage0))]\n-use unstable::intrinsics::{get_tydesc};\n+use unstable::intrinsics::{get_tydesc, contains_managed};\n use vec;\n use util;\n \n@@ -1521,6 +1521,7 @@ impl<T> OwnedVector<T> for ~[T] {\n      * * n - The number of elements to reserve space for\n      */\n     #[inline]\n+    #[cfg(stage0)]\n     fn reserve(&mut self, n: uint) {\n         // Only make the (slow) call into the runtime if we have to\n         use managed;\n@@ -1538,6 +1539,33 @@ impl<T> OwnedVector<T> for ~[T] {\n         }\n     }\n \n+    /**\n+     * Reserves capacity for exactly `n` elements in the given vector.\n+     *\n+     * If the capacity for `self` is already equal to or greater than the requested\n+     * capacity, then no action is taken.\n+     *\n+     * # Arguments\n+     *\n+     * * n - The number of elements to reserve space for\n+     */\n+    #[inline]\n+    #[cfg(not(stage0))]\n+    fn reserve(&mut self, n: uint) {\n+        // Only make the (slow) call into the runtime if we have to\n+        if self.capacity() < n {\n+            unsafe {\n+                let ptr: **raw::VecRepr = cast::transmute(self);\n+                let td = get_tydesc::<T>();\n+                if contains_managed::<T>() {\n+                    rustrt::vec_reserve_shared_actual(td, ptr, n as libc::size_t);\n+                } else {\n+                    rustrt::vec_reserve_shared(td, ptr, n as libc::size_t);\n+                }\n+            }\n+        }\n+    }\n+\n     /**\n      * Reserves capacity for at least `n` elements in the given vector.\n      *"}]}