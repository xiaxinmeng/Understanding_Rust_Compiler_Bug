{"sha": "fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMjc4YTg5MmE5YmIyN2ZiZTI3NGQ3Y2I0NzJiYzdlNGNhMGMxYjM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-08-26T12:45:00Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-08-29T07:43:46Z"}, "message": "Avoid flow-on Iterator error for `for ... in [ty err] {}`.\n\nThis squashes the\n\n> `for` loop expression has type `[type error]` which does not implement\n> the `Iterator` trait\n\nmessage that one received when writing `for ... in x` where was\npreviously found to have a type error.\n\nFixes #16042.", "tree": {"sha": "05e788396e1625c40b8ea6693a28cf365f6f63bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05e788396e1625c40b8ea6693a28cf365f6f63bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3", "html_url": "https://github.com/rust-lang/rust/commit/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "html_url": "https://github.com/rust-lang/rust/commit/2e4a21c2c2cc0702044dabf11d0839e4ed65a079"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "cfd2ee2b44190c74e82a9f40e7ef74a373fc1f3f", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3", "patch": "@@ -2184,10 +2184,15 @@ fn lookup_method_for_for_loop(fcx: &FnCtxt,\n     let method_type = match method {\n         Some(ref method) => method.ty,\n         None => {\n-            fcx.tcx().sess.span_err(iterator_expr.span,\n-                                    format!(\"`for` loop expression has type `{}` which does \\\n-                                             not implement the `Iterator` trait\",\n-                                            fcx.infcx().ty_to_string(expr_type)).as_slice());\n+            let true_expr_type = fcx.infcx().resolve_type_vars_if_possible(expr_type);\n+\n+            if !ty::type_is_error(true_expr_type) {\n+                let ty_string = fcx.infcx().ty_to_string(true_expr_type);\n+                fcx.tcx().sess.span_err(iterator_expr.span,\n+                                        format!(\"`for` loop expression has type `{}` which does \\\n+                                                 not implement the `Iterator` trait\",\n+                                                ty_string).as_slice());\n+            }\n             ty::mk_err()\n         }\n     };"}, {"sha": "7f0e40128f5d681f382e9cd43b118aa4dde83c94", "filename": "src/test/compile-fail/for-loop-type-error.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3/src%2Ftest%2Fcompile-fail%2Ffor-loop-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3/src%2Ftest%2Fcompile-fail%2Ffor-loop-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffor-loop-type-error.rs?ref=fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn main() {\n+    let x = () + (); //~ ERROR binary operation\n+\n+    // this shouldn't have a flow-on error:\n+    for _ in x {}\n+}"}]}