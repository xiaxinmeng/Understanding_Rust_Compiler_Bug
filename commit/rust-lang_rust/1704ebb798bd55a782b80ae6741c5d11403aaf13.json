{"sha": "1704ebb798bd55a782b80ae6741c5d11403aaf13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MDRlYmI3OThiZDU1YTc4MmI4MGFlNjc0MWM1ZDExNDAzYWFmMTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-15T14:26:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-15T14:26:11Z"}, "message": "auto merge of #15421 : catharsis/rust/doc-ffi-minor-fixes, r=alexcrichton\n\nSigned-off-by: Anton Lofgren <alofgren@op5.com>", "tree": {"sha": "a14b5ec5e91025d79e8a7a3eb8c6a915e1e26fce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a14b5ec5e91025d79e8a7a3eb8c6a915e1e26fce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1704ebb798bd55a782b80ae6741c5d11403aaf13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1704ebb798bd55a782b80ae6741c5d11403aaf13", "html_url": "https://github.com/rust-lang/rust/commit/1704ebb798bd55a782b80ae6741c5d11403aaf13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1704ebb798bd55a782b80ae6741c5d11403aaf13/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d336c1a3d2641aad3fa15c7006eabdf17696a7ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d336c1a3d2641aad3fa15c7006eabdf17696a7ad", "html_url": "https://github.com/rust-lang/rust/commit/d336c1a3d2641aad3fa15c7006eabdf17696a7ad"}, {"sha": "e737440bc6b793f98d5fb6883fc84dd3466fe5e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e737440bc6b793f98d5fb6883fc84dd3466fe5e5", "html_url": "https://github.com/rust-lang/rust/commit/e737440bc6b793f98d5fb6883fc84dd3466fe5e5"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "fb03d7bc11f5ea9e9b14c8b4f5f3c4f34cc6c6ed", "filename": "src/doc/guide-ffi.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1704ebb798bd55a782b80ae6741c5d11403aaf13/src%2Fdoc%2Fguide-ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/1704ebb798bd55a782b80ae6741c5d11403aaf13/src%2Fdoc%2Fguide-ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-ffi.md?ref=1704ebb798bd55a782b80ae6741c5d11403aaf13", "patch": "@@ -173,7 +173,7 @@ the same stack as the rust stack. This means that there is no extra\n stack-switching mechanism in place because it is assumed that the large stack\n for the rust task is plenty for the C function to have.\n \n-A planned future improvement (net yet implemented at the time of this writing)\n+A planned future improvement (not yet implemented at the time of this writing)\n is to have a guard page at the end of every rust stack. No rust function will\n hit this guard page (due to Rust's usage of LLVM's `__morestack`). The intention\n for this unmapped page is to prevent infinite recursion in C from overflowing\n@@ -201,7 +201,7 @@ It is possible to pass functions defined in Rust to an external library.\n The requirement for this is that the callback function is marked as `extern`\n with the correct calling convention to make it callable from C code.\n \n-The callback function that can then be sent to through a registration call\n+The callback function can then be sent through a registration call\n to the C library and afterwards be invoked from there.\n \n A basic example is:\n@@ -243,14 +243,14 @@ void trigger_callback() {\n }\n ~~~~\n \n-In this example will Rust's `main()` will call `do_callback()` in C,\n-which would call back to `callback()` in Rust.\n+In this example Rust's `main()` will call `do_callback()` in C,\n+which would, in turn, call back to `callback()` in Rust.\n \n \n-## Targetting callbacks to Rust objects\n+## Targeting callbacks to Rust objects\n \n The former example showed how a global function can be called from C code.\n-However it is often desired that the callback is targetted to a special\n+However it is often desired that the callback is targeted to a special\n Rust object. This could be the object that represents the wrapper for the\n respective C object.\n \n@@ -334,7 +334,7 @@ it is also absolutely necessary that no more callbacks are performed by the\n C library after the respective Rust object gets destroyed.\n This can be achieved by unregistering the callback in the object's\n destructor and designing the library in a way that guarantees that no\n-callback will be performed after unregistration.\n+callback will be performed after deregistration.\n \n # Linking\n "}]}