{"sha": "07f78a37d4e8d7c55330e90e0a36815bf615a8d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Zjc4YTM3ZDRlOGQ3YzU1MzMwZTkwZTBhMzY4MTViZjYxNWE4ZDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-27T07:16:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-27T07:16:58Z"}, "message": "tweaks", "tree": {"sha": "5766baa5a151cf0a7daa3c3f7e2a1510e784da3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5766baa5a151cf0a7daa3c3f7e2a1510e784da3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07f78a37d4e8d7c55330e90e0a36815bf615a8d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07f78a37d4e8d7c55330e90e0a36815bf615a8d9", "html_url": "https://github.com/rust-lang/rust/commit/07f78a37d4e8d7c55330e90e0a36815bf615a8d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07f78a37d4e8d7c55330e90e0a36815bf615a8d9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58982d655a3544486e8d827035e6acc4da1f0ccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/58982d655a3544486e8d827035e6acc4da1f0ccd", "html_url": "https://github.com/rust-lang/rust/commit/58982d655a3544486e8d827035e6acc4da1f0ccd"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "becb5c69e56123db93581067ad623635b13e08d7", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07f78a37d4e8d7c55330e90e0a36815bf615a8d9/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/07f78a37d4e8d7c55330e90e0a36815bf615a8d9/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=07f78a37d4e8d7c55330e90e0a36815bf615a8d9", "patch": "@@ -35,7 +35,7 @@ required-features = [\"rustc_tests\"]\n [dependencies]\n byteorder = { version = \"1.1\", features = [\"i128\"]}\n cargo_metadata = { version = \"0.6\", optional = true }\n-dirs = { version = \"1.0.4\", optional = true }\n+directories = { version = \"1.0\", optional = true }\n env_logger = \"0.5\"\n log = \"0.4\"\n \n@@ -44,7 +44,7 @@ vergen = \"3\"\n \n [features]\n default = [\"cargo_miri\"]\n-cargo_miri = [\"cargo_metadata\", \"dirs\"]\n+cargo_miri = [\"cargo_metadata\", \"directories\"]\n rustc_tests = []\n \n [dev-dependencies]"}, {"sha": "05d1bf3220812f04dfc24a62f6e5bc511ca6aa08", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/07f78a37d4e8d7c55330e90e0a36815bf615a8d9/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07f78a37d4e8d7c55330e90e0a36815bf615a8d9/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=07f78a37d4e8d7c55330e90e0a36815bf615a8d9", "patch": "@@ -65,10 +65,7 @@ fn list_targets(mut args: impl Iterator<Item=String>) -> impl Iterator<Item=carg\n     {\n         metadata\n     } else {\n-        let _ = std::io::stderr().write_fmt(format_args!(\n-            \"error: Could not obtain cargo metadata.\"\n-        ));\n-        std::process::exit(101);\n+        show_error(format!(\"error: Could not obtain cargo metadata.\"));\n     };\n \n     let manifest_path = manifest_path_arg.map(|arg| {\n@@ -106,14 +103,11 @@ fn ask(question: &str) {\n     print!(\"{} [Y/n] \", question);\n     io::stdout().flush().unwrap();\n     io::stdin().read_line(&mut buf).unwrap();\n-    let answer = match buf.trim().to_lowercase().as_ref() {\n-        \"\" | \"y\" | \"yes\" => true,\n-        \"n\" | \"no\" => false,\n+    match buf.trim().to_lowercase().as_ref() {\n+        \"\" | \"y\" | \"yes\" => {}, // proceed\n+        \"n\" | \"no\" => show_error(format!(\"Aborting as per your request\")),\n         a => show_error(format!(\"I do not understand `{}`\", a))\n     };\n-    if !answer {\n-        show_error(format!(\"Aborting as per your request\"))\n-    }\n }\n \n /// Perform the setup requires to make `cargo miri` work: Getting a custom-built libstd. Then sets MIRI_SYSROOT.\n@@ -152,7 +146,7 @@ fn setup(ask_user: bool) {\n     }\n \n     // Next, we need our own libstd. We will do this work in ~/.miri.\n-    let dir = dirs::home_dir().unwrap().join(\".miri\");\n+    let dir = directories::UserDirs::new().unwrap().home_dir().join(\".miri\");\n     if !dir.exists() {\n         fs::create_dir(&dir).unwrap();\n     }"}]}