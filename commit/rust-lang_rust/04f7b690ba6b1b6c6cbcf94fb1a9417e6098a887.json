{"sha": "04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZjdiNjkwYmE2YjFiNmM2Y2JjZjk0ZmIxYTk0MTdlNjA5OGE4ODc=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2014-11-07T19:05:50Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2014-11-16T15:39:03Z"}, "message": "implement cloned for Option", "tree": {"sha": "094e25b826f0c27fc5a6ab8419488849c2e2a4f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/094e25b826f0c27fc5a6ab8419488849c2e2a4f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887", "html_url": "https://github.com/rust-lang/rust/commit/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c7a3d6c167c4656e8d35a1d428d142993e0aaab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c7a3d6c167c4656e8d35a1d428d142993e0aaab", "html_url": "https://github.com/rust-lang/rust/commit/0c7a3d6c167c4656e8d35a1d428d142993e0aaab"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "5ae1060dd292f69aef18d5223ddce6ec92b75ede", "filename": "src/libcore/option.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887", "patch": "@@ -150,6 +150,7 @@ use mem;\n use result::{Result, Ok, Err};\n use slice;\n use slice::AsSlice;\n+use clone::Clone;\n \n // Note that this is not a lang item per se, but it has a hidden dependency on\n // `Iterator`, which is one. The compiler assumes that the `next` method of\n@@ -676,6 +677,14 @@ impl<T> Option<T> {\n     }\n }\n \n+impl<'a, T: Clone> Option<&'a T> {\n+    /// Maps an Option<&T> to an Option<T> by cloning the contents of the Option<&T>.\n+    #[unstable = \"recently added as part of collections reform\"]\n+    pub fn cloned(self) -> Option<T> {\n+        self.map(|t| t.clone())\n+    }\n+}\n+\n impl<T: Default> Option<T> {\n     /// Returns the contained value or a default\n     ///"}, {"sha": "6138986e1d185fea67b4460e8ee66c46a7b2c040", "filename": "src/libcoretest/option.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887/src%2Flibcoretest%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887/src%2Flibcoretest%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Foption.rs?ref=04f7b690ba6b1b6c6cbcf94fb1a9417e6098a887", "patch": "@@ -11,6 +11,7 @@\n use core::option::*;\n use core::kinds::marker;\n use core::mem;\n+use core::clone::Clone;\n \n #[test]\n fn test_get_ptr() {\n@@ -239,3 +240,15 @@ fn test_collect() {\n \n     assert!(v == None);\n }\n+\n+fn test_cloned() {\n+    let s = 1u32;\n+    let n: Option<&'static u32> = None;\n+    let o = Some(&s);\n+\n+    assert_eq!(o.clone(), Some(&s));\n+    assert_eq!(o.cloned(), Some(1u32));\n+\n+    assert_eq!(n.clone(), None);\n+    assert_eq!(n.cloned(), None);\n+}\n\\ No newline at end of file"}]}