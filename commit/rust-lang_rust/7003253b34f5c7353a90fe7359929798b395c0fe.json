{"sha": "7003253b34f5c7353a90fe7359929798b395c0fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMDMyNTNiMzRmNWM3MzUzYTkwZmU3MzU5OTI5Nzk4YjM5NWMwZmU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-15T14:43:40Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-15T14:43:40Z"}, "message": "Rollup merge of #33475 - billyevans:master, r=guillaumegomez\n\nAdd detailed error explanation for E0505\n\nPart of #32777", "tree": {"sha": "80eeef10d59fda5521eed3135012eff421a409e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80eeef10d59fda5521eed3135012eff421a409e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7003253b34f5c7353a90fe7359929798b395c0fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7003253b34f5c7353a90fe7359929798b395c0fe", "html_url": "https://github.com/rust-lang/rust/commit/7003253b34f5c7353a90fe7359929798b395c0fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7003253b34f5c7353a90fe7359929798b395c0fe/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9a130f6af7fa29bd3fbe5c5327dd7e2eb585ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9a130f6af7fa29bd3fbe5c5327dd7e2eb585ecd", "html_url": "https://github.com/rust-lang/rust/commit/a9a130f6af7fa29bd3fbe5c5327dd7e2eb585ecd"}, {"sha": "bf09a9eda02c3930c0beee011a6f06138260cdf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf09a9eda02c3930c0beee011a6f06138260cdf4", "html_url": "https://github.com/rust-lang/rust/commit/bf09a9eda02c3930c0beee011a6f06138260cdf4"}], "stats": {"total": 80, "additions": 79, "deletions": 1}, "files": [{"sha": "b5d54567191c89bfe0ac3cf143a0ff1d4960c5c4", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 79, "deletions": 1, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/7003253b34f5c7353a90fe7359929798b395c0fe/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7003253b34f5c7353a90fe7359929798b395c0fe/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=7003253b34f5c7353a90fe7359929798b395c0fe", "patch": "@@ -642,6 +642,85 @@ fn print_fancy_ref(fancy_ref: &FancyNum){\n ```\n \"##,\n \n+E0505: r##\"\n+A value was moved out while it was still borrowed.\n+Erroneous code example:\n+\n+```compile_fail\n+struct Value {}\n+\n+fn eat(val: Value) {}\n+\n+fn main() {\n+    let x = Value{};\n+    {\n+        let _ref_to_val: &Value = &x;\n+        eat(x);\n+    }\n+}\n+```\n+\n+Here, the function `eat` takes the ownership of `x`. However,\n+`x` cannot be moved because it was borrowed to `_ref_to_val`.\n+To fix that you can do few different things:\n+\n+* Try to avoid moving the variable.\n+* Release borrow before move.\n+* Implement the `Copy` trait on the type.\n+\n+Examples:\n+\n+```\n+struct Value {}\n+\n+fn eat(val: &Value) {}\n+\n+fn main() {\n+    let x = Value{};\n+    {\n+        let _ref_to_val: &Value = &x;\n+        eat(&x); // pass by reference, if it's possible\n+    }\n+}\n+```\n+\n+Or:\n+\n+```\n+struct Value {}\n+\n+fn eat(val: Value) {}\n+\n+fn main() {\n+    let x = Value{};\n+    {\n+        let _ref_to_val: &Value = &x;\n+    }\n+    eat(x); // release borrow and then move it.\n+}\n+```\n+\n+Or:\n+\n+```\n+#[derive(Clone, Copy)] // implement Copy trait\n+struct Value {}\n+\n+fn eat(val: Value) {}\n+\n+fn main() {\n+    let x = Value{};\n+    {\n+        let _ref_to_val: &Value = &x;\n+        eat(x); // it will be copied here.\n+    }\n+}\n+```\n+\n+You can find more information about borrowing in the rust-book:\n+http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n+\"##,\n+\n E0507: r##\"\n You tried to move out of a value which was borrowed. Erroneous code example:\n \n@@ -860,7 +939,6 @@ register_diagnostics! {\n     E0500, // closure requires unique access to `..` but .. is already borrowed\n     E0502, // cannot borrow `..`.. as .. because .. is also borrowed as ...\n     E0503, // cannot use `..` because it was mutably borrowed\n-    E0505, // cannot move out of `..` because it is borrowed\n     E0508, // cannot move out of type `..`, a non-copy fixed-size array\n     E0524, // two closures require unique access to `..` at the same time\n }"}]}