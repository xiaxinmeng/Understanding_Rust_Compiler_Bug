{"sha": "f1e62501c3de7932396d29c89588ff296bbcc50d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZTYyNTAxYzNkZTc5MzIzOTZkMjljODk1ODhmZjI5NmJiY2M1MGQ=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-11T09:56:05Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-11T09:56:05Z"}, "message": "Fix for<'lifetime> for types specified by path", "tree": {"sha": "c1039639e96fecbc20853d7b358da9bb21a57982", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1039639e96fecbc20853d7b358da9bb21a57982"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1e62501c3de7932396d29c89588ff296bbcc50d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1e62501c3de7932396d29c89588ff296bbcc50d", "html_url": "https://github.com/rust-lang/rust/commit/f1e62501c3de7932396d29c89588ff296bbcc50d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1e62501c3de7932396d29c89588ff296bbcc50d/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3f8e6023d66ceb37040833bf317d77019bb10f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f8e6023d66ceb37040833bf317d77019bb10f1", "html_url": "https://github.com/rust-lang/rust/commit/e3f8e6023d66ceb37040833bf317d77019bb10f1"}], "stats": {"total": 87, "additions": 85, "deletions": 2}, "files": [{"sha": "9acc00793e1ca116b59bd67d1e336bcd2332eb81", "filename": "crates/ra_parser/src/grammar/types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1e62501c3de7932396d29c89588ff296bbcc50d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1e62501c3de7932396d29c89588ff296bbcc50d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=f1e62501c3de7932396d29c89588ff296bbcc50d", "patch": "@@ -205,14 +205,15 @@ pub(super) fn for_binder(p: &mut Parser) {\n // type A = for<'a> fn() -> ();\n // fn foo<T>(_t: &T) where for<'a> &'a T: Iterator {}\n // fn bar<T>(_t: &T) where for<'a> &'a mut T: Iterator {}\n+// fn baz<T>(_t: &T) where for<'a> <&'a T as Baz>::Foo: Iterator {}\n pub(super) fn for_type(p: &mut Parser) {\n     assert!(p.at(T![for]));\n     let m = p.start();\n     for_binder(p);\n     match p.current() {\n         T![fn] | T![unsafe] | T![extern] => fn_pointer_type(p),\n         T![&] => reference_type(p),\n-        _ if paths::is_path_start(p) => path_type_(p, false),\n+        _ if paths::is_path_start(p) || p.at(T![<]) => path_type_(p, false),\n         _ => p.error(\"expected a path\"),\n     }\n     m.complete(p, FOR_TYPE);"}, {"sha": "d6774d438bc6b7db29752023fe0847d80a3bbba4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f1e62501c3de7932396d29c89588ff296bbcc50d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1e62501c3de7932396d29c89588ff296bbcc50d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rs?ref=f1e62501c3de7932396d29c89588ff296bbcc50d", "patch": "@@ -1,3 +1,4 @@\n type A = for<'a> fn() -> ();\n fn foo<T>(_t: &T) where for<'a> &'a T: Iterator {}\n fn bar<T>(_t: &T) where for<'a> &'a mut T: Iterator {}\n+fn baz<T>(_t: &T) where for<'a> <&'a T as Baz>::Foo: Iterator {}"}, {"sha": "c12ce4ddb8bcde027f7c807d18ddf37a7dbeeb52", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.txt", "status": "modified", "additions": 82, "deletions": 1, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/f1e62501c3de7932396d29c89588ff296bbcc50d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f1e62501c3de7932396d29c89588ff296bbcc50d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.txt?ref=f1e62501c3de7932396d29c89588ff296bbcc50d", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@[0; 135)\n+SOURCE_FILE@[0; 200)\n   TYPE_ALIAS_DEF@[0; 28)\n     TYPE_KW@[0; 4) \"type\"\n     WHITESPACE@[4; 5) \" \"\n@@ -157,3 +157,84 @@ SOURCE_FILE@[0; 135)\n       L_CURLY@[132; 133) \"{\"\n       R_CURLY@[133; 134) \"}\"\n   WHITESPACE@[134; 135) \"\\n\"\n+  FN_DEF@[135; 199)\n+    FN_KW@[135; 137) \"fn\"\n+    WHITESPACE@[137; 138) \" \"\n+    NAME@[138; 141)\n+      IDENT@[138; 141) \"baz\"\n+    TYPE_PARAM_LIST@[141; 144)\n+      L_ANGLE@[141; 142) \"<\"\n+      TYPE_PARAM@[142; 143)\n+        NAME@[142; 143)\n+          IDENT@[142; 143) \"T\"\n+      R_ANGLE@[143; 144) \">\"\n+    PARAM_LIST@[144; 152)\n+      L_PAREN@[144; 145) \"(\"\n+      PARAM@[145; 151)\n+        BIND_PAT@[145; 147)\n+          NAME@[145; 147)\n+            IDENT@[145; 147) \"_t\"\n+        COLON@[147; 148) \":\"\n+        WHITESPACE@[148; 149) \" \"\n+        REFERENCE_TYPE@[149; 151)\n+          AMP@[149; 150) \"&\"\n+          PATH_TYPE@[150; 151)\n+            PATH@[150; 151)\n+              PATH_SEGMENT@[150; 151)\n+                NAME_REF@[150; 151)\n+                  IDENT@[150; 151) \"T\"\n+      R_PAREN@[151; 152) \")\"\n+    WHITESPACE@[152; 153) \" \"\n+    WHERE_CLAUSE@[153; 196)\n+      WHERE_KW@[153; 158) \"where\"\n+      WHITESPACE@[158; 159) \" \"\n+      WHERE_PRED@[159; 196)\n+        FOR_TYPE@[159; 186)\n+          FOR_KW@[159; 162) \"for\"\n+          TYPE_PARAM_LIST@[162; 166)\n+            L_ANGLE@[162; 163) \"<\"\n+            LIFETIME_PARAM@[163; 165)\n+              LIFETIME@[163; 165) \"\\'a\"\n+            R_ANGLE@[165; 166) \">\"\n+          WHITESPACE@[166; 167) \" \"\n+          PATH_TYPE@[167; 186)\n+            PATH@[167; 186)\n+              PATH@[167; 181)\n+                PATH_SEGMENT@[167; 181)\n+                  L_ANGLE@[167; 168) \"<\"\n+                  REFERENCE_TYPE@[168; 173)\n+                    AMP@[168; 169) \"&\"\n+                    LIFETIME@[169; 171) \"\\'a\"\n+                    WHITESPACE@[171; 172) \" \"\n+                    PATH_TYPE@[172; 173)\n+                      PATH@[172; 173)\n+                        PATH_SEGMENT@[172; 173)\n+                          NAME_REF@[172; 173)\n+                            IDENT@[172; 173) \"T\"\n+                  WHITESPACE@[173; 174) \" \"\n+                  AS_KW@[174; 176) \"as\"\n+                  WHITESPACE@[176; 177) \" \"\n+                  PATH_TYPE@[177; 180)\n+                    PATH@[177; 180)\n+                      PATH_SEGMENT@[177; 180)\n+                        NAME_REF@[177; 180)\n+                          IDENT@[177; 180) \"Baz\"\n+                  R_ANGLE@[180; 181) \">\"\n+              COLONCOLON@[181; 183) \"::\"\n+              PATH_SEGMENT@[183; 186)\n+                NAME_REF@[183; 186)\n+                  IDENT@[183; 186) \"Foo\"\n+        COLON@[186; 187) \":\"\n+        WHITESPACE@[187; 188) \" \"\n+        TYPE_BOUND_LIST@[188; 196)\n+          TYPE_BOUND@[188; 196)\n+            PATH_TYPE@[188; 196)\n+              PATH@[188; 196)\n+                PATH_SEGMENT@[188; 196)\n+                  NAME_REF@[188; 196)\n+                    IDENT@[188; 196) \"Iterator\"\n+    WHITESPACE@[196; 197) \" \"\n+    BLOCK@[197; 199)\n+      L_CURLY@[197; 198) \"{\"\n+      R_CURLY@[198; 199) \"}\"\n+  WHITESPACE@[199; 200) \"\\n\""}]}