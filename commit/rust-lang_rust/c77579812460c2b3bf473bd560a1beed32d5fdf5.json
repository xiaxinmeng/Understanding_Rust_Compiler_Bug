{"sha": "c77579812460c2b3bf473bd560a1beed32d5fdf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NzU3OTgxMjQ2MGMyYjNiZjQ3M2JkNTYwYTFiZWVkMzJkNWZkZjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-30T22:27:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-31T03:37:32Z"}, "message": "rustdoc: Add a test that unexported ifaces are pruned", "tree": {"sha": "6f546a550fa47042f7ec3876901626cf580aa75d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f546a550fa47042f7ec3876901626cf580aa75d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c77579812460c2b3bf473bd560a1beed32d5fdf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c77579812460c2b3bf473bd560a1beed32d5fdf5", "html_url": "https://github.com/rust-lang/rust/commit/c77579812460c2b3bf473bd560a1beed32d5fdf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c77579812460c2b3bf473bd560a1beed32d5fdf5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb4a3839222a0501a8f54f3c31dbf8ffa2c2945d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4a3839222a0501a8f54f3c31dbf8ffa2c2945d", "html_url": "https://github.com/rust-lang/rust/commit/cb4a3839222a0501a8f54f3c31dbf8ffa2c2945d"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "2db7e10cd1ff5a2ff37d4b04e02b1fa12c882ed2", "filename": "src/rustdoc/prune_unexported_pass.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c77579812460c2b3bf473bd560a1beed32d5fdf5/src%2Frustdoc%2Fprune_unexported_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77579812460c2b3bf473bd560a1beed32d5fdf5/src%2Frustdoc%2Fprune_unexported_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_unexported_pass.rs?ref=c77579812460c2b3bf473bd560a1beed32d5fdf5", "patch": "@@ -235,3 +235,12 @@ fn should_prune_unexported_resources() {\n     let doc = run(srv, doc);\n     assert vec::is_empty(doc.topmod.mods()[0].resources());\n }\n+\n+#[test]\n+fn should_prune_unexported_ifaces_from_top_mod() {\n+    let source = \"export a; mod a { } iface b { fn c(); }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    assert vec::is_empty(doc.topmod.ifaces());\n+}\n\\ No newline at end of file"}]}