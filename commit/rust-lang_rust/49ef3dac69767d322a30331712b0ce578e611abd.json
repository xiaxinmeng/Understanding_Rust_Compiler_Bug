{"sha": "49ef3dac69767d322a30331712b0ce578e611abd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZWYzZGFjNjk3NjdkMzIyYTMwMzMxNzEyYjBjZTU3OGU2MTFhYmQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-03T18:27:38Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-03T18:27:38Z"}, "message": "Take `FnMut` instead of `Fn` in `Qualif` methods", "tree": {"sha": "50f7cee31d492ffe665001ccb1a1042b8543a6ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f7cee31d492ffe665001ccb1a1042b8543a6ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49ef3dac69767d322a30331712b0ce578e611abd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49ef3dac69767d322a30331712b0ce578e611abd", "html_url": "https://github.com/rust-lang/rust/commit/49ef3dac69767d322a30331712b0ce578e611abd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49ef3dac69767d322a30331712b0ce578e611abd/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34700c15c7a49d400951da385b2eacab6fb6fe86", "url": "https://api.github.com/repos/rust-lang/rust/commits/34700c15c7a49d400951da385b2eacab6fb6fe86", "html_url": "https://github.com/rust-lang/rust/commit/34700c15c7a49d400951da385b2eacab6fb6fe86"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "e509e8267cc1aa9172c166c8d00b82f26599db85", "filename": "src/librustc_mir/transform/check_consts/qualifs.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/49ef3dac69767d322a30331712b0ce578e611abd/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49ef3dac69767d322a30331712b0ce578e611abd/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=49ef3dac69767d322a30331712b0ce578e611abd", "patch": "@@ -34,7 +34,7 @@ pub trait Qualif {\n \n     fn in_projection_structurally(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         place: PlaceRef<'_, 'tcx>,\n     ) -> bool {\n         if let [proj_base @ .., elem] = place.projection {\n@@ -66,15 +66,15 @@ pub trait Qualif {\n \n     fn in_projection(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         place: PlaceRef<'_, 'tcx>,\n     ) -> bool {\n         Self::in_projection_structurally(cx, per_local, place)\n     }\n \n     fn in_place(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         place: PlaceRef<'_, 'tcx>,\n     ) -> bool {\n         match place {\n@@ -85,7 +85,7 @@ pub trait Qualif {\n \n     fn in_operand(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         operand: &Operand<'tcx>,\n     ) -> bool {\n         match *operand {\n@@ -126,7 +126,7 @@ pub trait Qualif {\n \n     fn in_rvalue_structurally(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         rvalue: &Rvalue<'tcx>,\n     ) -> bool {\n         match *rvalue {\n@@ -170,15 +170,15 @@ pub trait Qualif {\n \n     fn in_rvalue(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         rvalue: &Rvalue<'tcx>,\n     ) -> bool {\n         Self::in_rvalue_structurally(cx, per_local, rvalue)\n     }\n \n     fn in_call(\n         cx: &ConstCx<'_, 'tcx>,\n-        _per_local: &impl Fn(Local) -> bool,\n+        _per_local: &mut impl FnMut(Local) -> bool,\n         _callee: &Operand<'tcx>,\n         _args: &[Operand<'tcx>],\n         return_ty: Ty<'tcx>,\n@@ -208,7 +208,7 @@ impl Qualif for HasMutInterior {\n \n     fn in_rvalue(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         rvalue: &Rvalue<'tcx>,\n     ) -> bool {\n         match *rvalue {\n@@ -249,7 +249,7 @@ impl Qualif for NeedsDrop {\n \n     fn in_rvalue(\n         cx: &ConstCx<'_, 'tcx>,\n-        per_local: &impl Fn(Local) -> bool,\n+        per_local: &mut impl FnMut(Local) -> bool,\n         rvalue: &Rvalue<'tcx>,\n     ) -> bool {\n         if let Rvalue::Aggregate(ref kind, _) = *rvalue {"}, {"sha": "4dac0d09413eab656c301994808e556a81abb7a8", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49ef3dac69767d322a30331712b0ce578e611abd/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49ef3dac69767d322a30331712b0ce578e611abd/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=49ef3dac69767d322a30331712b0ce578e611abd", "patch": "@@ -253,7 +253,7 @@ impl Validator<'a, 'mir, 'tcx> {\n \n         let borrowed_place_has_mut_interior = HasMutInterior::in_place(\n             &self.item,\n-            &|local| self.qualifs.has_mut_interior_eager_seek(local),\n+            &mut |local| self.qualifs.has_mut_interior_eager_seek(local),\n             place.as_ref(),\n         );\n "}]}