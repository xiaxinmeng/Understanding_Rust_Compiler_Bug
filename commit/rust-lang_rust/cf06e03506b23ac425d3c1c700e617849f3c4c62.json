{"sha": "cf06e03506b23ac425d3c1c700e617849f3c4c62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMDZlMDM1MDZiMjNhYzQyNWQzYzFjNzAwZTYxNzg0OWYzYzRjNjI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-20T13:36:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-20T13:36:26Z"}, "message": "Rollup merge of #54292 - memoryruins:issue-53712, r=estebank\n\nSuggest array indexing when tuple indexing on an array\n\nCloses #53712\n\nr? @varkor\ncc @estebank", "tree": {"sha": "5474d5c2f229b5e17efd88c42ec97b01273b273b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5474d5c2f229b5e17efd88c42ec97b01273b273b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf06e03506b23ac425d3c1c700e617849f3c4c62", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbo6JaCRBK7hj4Ov3rIwAAdHIIAAUzmu1jg+oGuGj0igwIjkHX\nAgNYmDXQFvArGS0b9epvL7GLrIxaRclpr5mIfQsz6bvKEm8viMaDWdyJUTv2Pkro\nR8IscX0m0TFYdQQ+lrN3s+tKLIxUY//uN5waaWhSxeqmFYdIWQupRzvmRno9pazr\nuhk3GADXV62pBuas7UmXFOBhf2tiXZLOgjOxyPwRG5uiniIRC+beAOU+mZtwG3+x\nsdBDwGXd2E7q2NJpxCdc9l2JiSZ3Ze2EEsWl26l8ndQER6Up0w6d2o+cx60ZEKjb\n0+3+jfCiGHFn6scWSgA/4mJwsjpOS5T08T+YaV4E2x5aas7TdqgevLozIeQ++38=\n=xJlD\n-----END PGP SIGNATURE-----\n", "payload": "tree 5474d5c2f229b5e17efd88c42ec97b01273b273b\nparent ea6cfe32af51c81e1a7e352c43e8d405b07598c5\nparent 73fdc81b39138d3526c3629e7d83f581901dce58\nauthor kennytm <kennytm@gmail.com> 1537450586 +0800\ncommitter GitHub <noreply@github.com> 1537450586 +0800\n\nRollup merge of #54292 - memoryruins:issue-53712, r=estebank\n\nSuggest array indexing when tuple indexing on an array\n\nCloses #53712\n\nr? @varkor\ncc @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf06e03506b23ac425d3c1c700e617849f3c4c62", "html_url": "https://github.com/rust-lang/rust/commit/cf06e03506b23ac425d3c1c700e617849f3c4c62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf06e03506b23ac425d3c1c700e617849f3c4c62/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea6cfe32af51c81e1a7e352c43e8d405b07598c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea6cfe32af51c81e1a7e352c43e8d405b07598c5", "html_url": "https://github.com/rust-lang/rust/commit/ea6cfe32af51c81e1a7e352c43e8d405b07598c5"}, {"sha": "73fdc81b39138d3526c3629e7d83f581901dce58", "url": "https://api.github.com/repos/rust-lang/rust/commits/73fdc81b39138d3526c3629e7d83f581901dce58", "html_url": "https://github.com/rust-lang/rust/commit/73fdc81b39138d3526c3629e7d83f581901dce58"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "0dc7bc75c3d40673be192692c7fac144c19dfe6e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cf06e03506b23ac425d3c1c700e617849f3c4c62/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf06e03506b23ac425d3c1c700e617849f3c4c62/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=cf06e03506b23ac425d3c1c700e617849f3c4c62", "patch": "@@ -3347,6 +3347,24 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                 }\n                             };\n                     }\n+                    ty::Array(_, len) => {\n+                        if let (Some(len), Ok(user_index)) = (\n+                            len.assert_usize(self.tcx),\n+                            field.as_str().parse::<u64>()\n+                        ) {\n+                            let base = self.tcx.hir.node_to_pretty_string(base.id);\n+                            let help = \"instead of using tuple indexing, use array indexing\";\n+                            let suggestion = format!(\"{}[{}]\", base, field);\n+                            let applicability = if len < user_index {\n+                                Applicability::MachineApplicable\n+                            } else {\n+                                Applicability::MaybeIncorrect\n+                            };\n+                            err.span_suggestion_with_applicability(\n+                                expr.span, help, suggestion, applicability\n+                            );\n+                        }\n+                    }\n                     ty::RawPtr(..) => {\n                         let base = self.tcx.hir.node_to_pretty_string(base.id);\n                         let msg = format!(\"`{}` is a native pointer; try dereferencing it\", base);"}, {"sha": "2353904d79d75fadba09cf96e8f82b0d76f53606", "filename": "src/test/ui/issues/issue-53712.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cf06e03506b23ac425d3c1c700e617849f3c4c62/src%2Ftest%2Fui%2Fissues%2Fissue-53712.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf06e03506b23ac425d3c1c700e617849f3c4c62/src%2Ftest%2Fui%2Fissues%2Fissue-53712.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53712.rs?ref=cf06e03506b23ac425d3c1c700e617849f3c4c62", "patch": "@@ -0,0 +1,9 @@\n+// issue #53712: make the error generated by using tuple indexing on an array more specific\n+\n+fn main() {\n+    let arr = [10, 20, 30, 40, 50];\n+    arr.0;\n+    //~^ ERROR no field `0` on type `[{integer}; 5]` [E0609]\n+    //~| HELP instead of using tuple indexing, use array indexing\n+    //~| SUGGESTION arr[0]\n+}"}, {"sha": "db85919afcb556b77a2c84c71e7bfeee24ac262f", "filename": "src/test/ui/issues/issue-53712.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cf06e03506b23ac425d3c1c700e617849f3c4c62/src%2Ftest%2Fui%2Fissues%2Fissue-53712.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf06e03506b23ac425d3c1c700e617849f3c4c62/src%2Ftest%2Fui%2Fissues%2Fissue-53712.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53712.stderr?ref=cf06e03506b23ac425d3c1c700e617849f3c4c62", "patch": "@@ -0,0 +1,11 @@\n+error[E0609]: no field `0` on type `[{integer}; 5]`\n+  --> $DIR/issue-53712.rs:5:9\n+   |\n+LL |     arr.0;\n+   |     ----^\n+   |     |\n+   |     help: instead of using tuple indexing, use array indexing: `arr[0]`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0609`."}]}