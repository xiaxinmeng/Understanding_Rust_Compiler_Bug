{"sha": "b6bce56ac718a6343e44b37110e6c273ab9b6189", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2YmNlNTZhYzcxOGE2MzQzZTQ0YjM3MTEwZTZjMjczYWI5YjYxODk=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-09-24T10:45:19Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-09-24T10:45:19Z"}, "message": "sort the list of inference errors by span\n\nthis should produce more error stability", "tree": {"sha": "e6313097fe8f620abd0b13a0dd80b3b2a49dba62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6313097fe8f620abd0b13a0dd80b3b2a49dba62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6bce56ac718a6343e44b37110e6c273ab9b6189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6bce56ac718a6343e44b37110e6c273ab9b6189", "html_url": "https://github.com/rust-lang/rust/commit/b6bce56ac718a6343e44b37110e6c273ab9b6189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6bce56ac718a6343e44b37110e6c273ab9b6189/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d6b9d62ba67fd2ff5d97ae958c954ad2c45d04d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d6b9d62ba67fd2ff5d97ae958c954ad2c45d04d", "html_url": "https://github.com/rust-lang/rust/commit/9d6b9d62ba67fd2ff5d97ae958c954ad2c45d04d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "b24c9690a46187748b347da1d50fb22b6b804c2f", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b6bce56ac718a6343e44b37110e6c273ab9b6189/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6bce56ac718a6343e44b37110e6c273ab9b6189/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=b6bce56ac718a6343e44b37110e6c273ab9b6189", "patch": "@@ -333,11 +333,20 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             GenericBoundFailure(..) => true,\n         };\n \n-        if errors.iter().all(|e| is_bound_failure(e)) {\n+\n+        let mut errors = if errors.iter().all(|e| is_bound_failure(e)) {\n             errors.clone()\n         } else {\n             errors.iter().filter(|&e| !is_bound_failure(e)).cloned().collect()\n-        }\n+        };\n+\n+        // sort the errors by span, for better error message stability.\n+        errors.sort_by_key(|u| match *u {\n+            ConcreteFailure(ref sro, _, _) => sro.span(),\n+            GenericBoundFailure(ref sro, _, _) => sro.span(),\n+            SubSupConflict(ref rvo, _, _, _, _) => rvo.span(),\n+        });\n+        errors\n     }\n \n     /// Adds a note if the types come from similarly named crates"}]}