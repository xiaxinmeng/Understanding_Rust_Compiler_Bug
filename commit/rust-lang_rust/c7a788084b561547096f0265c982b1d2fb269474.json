{"sha": "c7a788084b561547096f0265c982b1d2fb269474", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3YTc4ODA4NGI1NjE1NDcwOTZmMDI2NWM5ODJiMWQyZmIyNjk0NzQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-26T07:55:36Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-06T04:52:25Z"}, "message": "Simplify let-if pattern", "tree": {"sha": "57ef2914cede0ea131c87a83b434d259919a8010", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57ef2914cede0ea131c87a83b434d259919a8010"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7a788084b561547096f0265c982b1d2fb269474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7a788084b561547096f0265c982b1d2fb269474", "html_url": "https://github.com/rust-lang/rust/commit/c7a788084b561547096f0265c982b1d2fb269474", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7a788084b561547096f0265c982b1d2fb269474/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c5ac5a9b34b9169209e8ed2db852d965bdef8c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5ac5a9b34b9169209e8ed2db852d965bdef8c8", "html_url": "https://github.com/rust-lang/rust/commit/6c5ac5a9b34b9169209e8ed2db852d965bdef8c8"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "7a7d46f8aea9231b4f3dd7357bbf39e6d7e6ade4", "filename": "src/visitor.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c7a788084b561547096f0265c982b1d2fb269474/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7a788084b561547096f0265c982b1d2fb269474/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=c7a788084b561547096f0265c982b1d2fb269474", "patch": "@@ -197,12 +197,11 @@ impl<'a> FmtVisitor<'a> {\n             }\n         }\n \n-        let mut unindent_comment = self.is_if_else_block && !b.stmts.is_empty();\n-        if unindent_comment {\n+        let unindent_comment = (self.is_if_else_block && !b.stmts.is_empty()) && {\n             let end_pos = source!(self, b.span).hi() - brace_compensation - remove_len;\n             let snippet = self.snippet(mk_sp(self.last_pos, end_pos));\n-            unindent_comment = snippet.contains(\"//\") || snippet.contains(\"/*\");\n-        }\n+            snippet.contains(\"//\") || snippet.contains(\"/*\")\n+        };\n         // FIXME: we should compress any newlines here to just one\n         if unindent_comment {\n             self.block_indent = self.block_indent.block_unindent(self.config);"}]}