{"sha": "dc3219bb11f032e2e6f1d16deab2b5eabe9463d7", "node_id": "C_kwDOAAsO6NoAKGRjMzIxOWJiMTFmMDMyZTJlNmYxZDE2ZGVhYjJiNWVhYmU5NDYzZDc", "commit": {"author": {"name": "Justin Ridgewell", "email": "justin@ridgewell.name", "date": "2022-08-09T20:25:25Z"}, "committer": {"name": "Justin Ridgewell", "email": "justin@ridgewell.name", "date": "2022-08-09T20:39:14Z"}, "message": "Suggest `.await` when type impls IntoFuture", "tree": {"sha": "cff9427420bc3b139891e71dfa2885b062b9c587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cff9427420bc3b139891e71dfa2885b062b9c587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7", "html_url": "https://github.com/rust-lang/rust/commit/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7/comments", "author": {"login": "jridgewell", "id": 112982, "node_id": "MDQ6VXNlcjExMjk4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/112982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jridgewell", "html_url": "https://github.com/jridgewell", "followers_url": "https://api.github.com/users/jridgewell/followers", "following_url": "https://api.github.com/users/jridgewell/following{/other_user}", "gists_url": "https://api.github.com/users/jridgewell/gists{/gist_id}", "starred_url": "https://api.github.com/users/jridgewell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jridgewell/subscriptions", "organizations_url": "https://api.github.com/users/jridgewell/orgs", "repos_url": "https://api.github.com/users/jridgewell/repos", "events_url": "https://api.github.com/users/jridgewell/events{/privacy}", "received_events_url": "https://api.github.com/users/jridgewell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jridgewell", "id": 112982, "node_id": "MDQ6VXNlcjExMjk4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/112982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jridgewell", "html_url": "https://github.com/jridgewell", "followers_url": "https://api.github.com/users/jridgewell/followers", "following_url": "https://api.github.com/users/jridgewell/following{/other_user}", "gists_url": "https://api.github.com/users/jridgewell/gists{/gist_id}", "starred_url": "https://api.github.com/users/jridgewell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jridgewell/subscriptions", "organizations_url": "https://api.github.com/users/jridgewell/orgs", "repos_url": "https://api.github.com/users/jridgewell/repos", "events_url": "https://api.github.com/users/jridgewell/events{/privacy}", "received_events_url": "https://api.github.com/users/jridgewell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5810c8188a2cfc36a8026ae068c985aa9a2f5f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5810c8188a2cfc36a8026ae068c985aa9a2f5f2b", "html_url": "https://github.com/rust-lang/rust/commit/5810c8188a2cfc36a8026ae068c985aa9a2f5f2b"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "7f16634afe1a7c1f7da589b5507a364317c756d5", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=dc3219bb11f032e2e6f1d16deab2b5eabe9463d7", "patch": "@@ -2780,19 +2780,28 @@ impl Type {\n     /// Checks that particular type `ty` implements `std::future::Future`.\n     /// This function is used in `.await` syntax completion.\n     pub fn impls_future(&self, db: &dyn HirDatabase) -> bool {\n-        // FIXME: This should be checking for IntoFuture trait, but I don't know how to find the\n-        // right TraitId in this crate.\n-        let std_future_trait = db\n-            .lang_item(self.env.krate, SmolStr::new_inline(\"future_trait\"))\n-            .and_then(|it| it.as_trait());\n-        let std_future_trait = match std_future_trait {\n+        let trait_ = db\n+            .lang_item(self.env.krate, SmolStr::new_inline(\"into_future\"))\n+            .and_then(|it| {\n+                let into_future_fn = it.as_function()?;\n+                let assoc_item = as_assoc_item(db, AssocItem::Function, into_future_fn)?;\n+                let into_future_trait = assoc_item.containing_trait_or_trait_impl(db)?;\n+                Some(into_future_trait.id)\n+            })\n+            .or_else(|| {\n+                let future_trait =\n+                    db.lang_item(self.env.krate, SmolStr::new_inline(\"future_trait\"))?;\n+                future_trait.as_trait()\n+            });\n+\n+        let trait_ = match trait_ {\n             Some(it) => it,\n             None => return false,\n         };\n \n         let canonical_ty =\n             Canonical { value: self.ty.clone(), binders: CanonicalVarKinds::empty(Interner) };\n-        method_resolution::implements_trait(&canonical_ty, db, self.env.clone(), std_future_trait)\n+        method_resolution::implements_trait(&canonical_ty, db, self.env.clone(), trait_)\n     }\n \n     /// Checks that particular type `ty` implements `std::ops::FnOnce`."}, {"sha": "1d03c8cc5ca6d4f9b630b08ee2dc99d622dc9aec", "filename": "crates/ide-completion/src/completions/keyword.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc3219bb11f032e2e6f1d16deab2b5eabe9463d7/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=dc3219bb11f032e2e6f1d16deab2b5eabe9463d7", "patch": "@@ -114,6 +114,32 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_completion_await_impls_into_future() {\n+        check(\n+            r#\"\n+//- minicore: future\n+use core::future::*;\n+struct A {}\n+impl IntoFuture for A {}\n+fn foo(a: A) { a.$0 }\n+\"#,\n+            expect![[r#\"\n+                kw await                  expr.await\n+                me into_future() (as IntoFuture) fn(self) -> <Self as IntoFuture>::IntoFuture\n+                sn box                    Box::new(expr)\n+                sn call                   function(expr)\n+                sn dbg                    dbg!(expr)\n+                sn dbgr                   dbg!(&expr)\n+                sn let                    let\n+                sn letm                   let mut\n+                sn match                  match expr {}\n+                sn ref                    &expr\n+                sn refm                   &mut expr\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn let_semi() {\n         cov_mark::check!(let_semi);"}]}