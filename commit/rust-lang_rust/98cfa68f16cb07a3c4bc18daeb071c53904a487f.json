{"sha": "98cfa68f16cb07a3c4bc18daeb071c53904a487f", "node_id": "C_kwDOAAsO6NoAKDk4Y2ZhNjhmMTZjYjA3YTNjNGJjMThkYWViMDcxYzUzOTA0YTQ4N2Y", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-01-14T21:17:06Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-01-15T11:58:04Z"}, "message": "Add tidy check to ensure that rustdoc GUI tests start with a small description", "tree": {"sha": "d276ba79c6c1cddd895c37f48f88d688cfb3af74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d276ba79c6c1cddd895c37f48f88d688cfb3af74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98cfa68f16cb07a3c4bc18daeb071c53904a487f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98cfa68f16cb07a3c4bc18daeb071c53904a487f", "html_url": "https://github.com/rust-lang/rust/commit/98cfa68f16cb07a3c4bc18daeb071c53904a487f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98cfa68f16cb07a3c4bc18daeb071c53904a487f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de34489a019b8e5319c09504ca158022df188d49", "url": "https://api.github.com/repos/rust-lang/rust/commits/de34489a019b8e5319c09504ca158022df188d49", "html_url": "https://github.com/rust-lang/rust/commit/de34489a019b8e5319c09504ca158022df188d49"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "97e56720b985260a6cfd1a04b87986339aea3deb", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98cfa68f16cb07a3c4bc18daeb071c53904a487f/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98cfa68f16cb07a3c4bc18daeb071c53904a487f/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=98cfa68f16cb07a3c4bc18daeb071c53904a487f", "patch": "@@ -62,6 +62,7 @@ pub mod features;\n pub mod mir_opt_tests;\n pub mod pal;\n pub mod primitive_docs;\n+pub mod rustdoc_gui_tests;\n pub mod style;\n pub mod target_specific_tests;\n pub mod tests_placement;"}, {"sha": "0b9a1b37e947ec81b58a9c7f46aa1132e9994f27", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98cfa68f16cb07a3c4bc18daeb071c53904a487f/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98cfa68f16cb07a3c4bc18daeb071c53904a487f/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=98cfa68f16cb07a3c4bc18daeb071c53904a487f", "patch": "@@ -80,6 +80,7 @@ fn main() {\n         check!(debug_artifacts, &tests_path);\n         check!(ui_tests, &tests_path);\n         check!(mir_opt_tests, &tests_path, bless);\n+        check!(rustdoc_gui_tests, &tests_path);\n \n         // Checks that only make sense for the compiler.\n         check!(error_codes, &root_path, &[&compiler_path, &librustdoc_path], verbose);"}, {"sha": "feb513df34bf71a09315227dc4f60fe635b30a64", "filename": "src/tools/tidy/src/rustdoc_gui_tests.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/98cfa68f16cb07a3c4bc18daeb071c53904a487f/src%2Ftools%2Ftidy%2Fsrc%2Frustdoc_gui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98cfa68f16cb07a3c4bc18daeb071c53904a487f/src%2Ftools%2Ftidy%2Fsrc%2Frustdoc_gui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Frustdoc_gui_tests.rs?ref=98cfa68f16cb07a3c4bc18daeb071c53904a487f", "patch": "@@ -0,0 +1,33 @@\n+//! Tidy check to ensure that rustdoc GUI tests start with a small description.\n+\n+use std::path::Path;\n+\n+pub fn check(path: &Path, bad: &mut bool) {\n+    crate::walk::walk(\n+        &path.join(\"rustdoc-gui\"),\n+        &mut |p| {\n+            // If there is no extension, it's very likely a folder and we want to go into it.\n+            p.extension().map(|e| e != \"goml\").unwrap_or(false)\n+        },\n+        &mut |entry, content| {\n+            for line in content.lines() {\n+                if !line.starts_with(\"// \") {\n+                    tidy_error!(\n+                        bad,\n+                        \"{}: rustdoc-gui tests must start with a small description\",\n+                        entry.path().display(),\n+                    );\n+                    return;\n+                } else if line.starts_with(\"// \") {\n+                    let parts = line[2..].trim();\n+                    // We ignore tidy comments.\n+                    if parts.starts_with(\"// tidy-\") {\n+                        continue;\n+                    }\n+                    // All good!\n+                    return;\n+                }\n+            }\n+        },\n+    );\n+}"}]}