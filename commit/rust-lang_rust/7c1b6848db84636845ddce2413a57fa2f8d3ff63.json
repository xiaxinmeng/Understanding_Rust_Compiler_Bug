{"sha": "7c1b6848db84636845ddce2413a57fa2f8d3ff63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMWI2ODQ4ZGI4NDYzNjg0NWRkY2UyNDEzYTU3ZmEyZjhkM2ZmNjM=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-01-16T21:20:26Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-02-28T15:33:14Z"}, "message": "use `map_bound` instead of `skip_binder`", "tree": {"sha": "5eb0d358af37116cc9c9a8a1b795e22e71aa9c9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eb0d358af37116cc9c9a8a1b795e22e71aa9c9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c1b6848db84636845ddce2413a57fa2f8d3ff63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c1b6848db84636845ddce2413a57fa2f8d3ff63", "html_url": "https://github.com/rust-lang/rust/commit/7c1b6848db84636845ddce2413a57fa2f8d3ff63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c1b6848db84636845ddce2413a57fa2f8d3ff63/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b4a06272e8453c8b90f282b2b5b0e4c27993ff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b4a06272e8453c8b90f282b2b5b0e4c27993ff1", "html_url": "https://github.com/rust-lang/rust/commit/3b4a06272e8453c8b90f282b2b5b0e4c27993ff1"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "7648feea457d017e0b001d54e80224860dcda79a", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7c1b6848db84636845ddce2413a57fa2f8d3ff63/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c1b6848db84636845ddce2413a57fa2f8d3ff63/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=7c1b6848db84636845ddce2413a57fa2f8d3ff63", "patch": "@@ -277,7 +277,6 @@ impl<'a, 'gcx> CheckTypeWellFormedVisitor<'a, 'gcx> {\n \n     fn check_trait(&mut self, item: &hir::Item) {\n         let trait_def_id = self.tcx.hir.local_def_id(item.id);\n-        \n         self.for_item(item).with_fcx(|fcx, _| {\n             self.check_trait_where_clauses(fcx, item.span, trait_def_id);\n             vec![]\n@@ -421,14 +420,13 @@ impl<'a, 'gcx> CheckTypeWellFormedVisitor<'a, 'gcx> {\n                 if skip { continue; }\n                 substituted_predicates.push(match pred {\n                     // In trait predicates, substitute defaults only for the LHS.\n-                    ty::Predicate::Trait(trait_pred) => {\n-                        let t_pred = trait_pred.skip_binder();\n-                        let self_ty = t_pred.self_ty().subst(fcx.tcx, substs);\n-                        let mut trait_substs = t_pred.trait_ref.substs.to_vec();\n-                        trait_substs[0] = self_ty.into();\n-                        let trait_ref = ty::TraitRef::new(t_pred.def_id(),\n-                                                          fcx.tcx.intern_substs(&trait_substs));\n-                        ty::Predicate::Trait(ty::Binder(trait_ref).to_poly_trait_predicate())\n+                    ty::Predicate::Trait(t_pred) => {\n+                        let trait_ref = t_pred.map_bound(|t_pred| {\n+                            let mut trait_subs = t_pred.trait_ref.substs.to_vec();\n+                            trait_subs[0] = t_pred.self_ty().subst(fcx.tcx, substs).into();\n+                            ty::TraitRef::new(t_pred.def_id(), fcx.tcx.intern_substs(&trait_subs))\n+                        });\n+                        ty::Predicate::Trait(trait_ref.to_poly_trait_predicate())\n                     }\n                     _ => pred.subst(fcx.tcx, substs)\n                 });"}]}