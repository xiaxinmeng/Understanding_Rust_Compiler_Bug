{"sha": "77fcca00f032fed19246b0939b57ad35c9db31cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZmNjYTAwZjAzMmZlZDE5MjQ2YjA5MzliNTdhZDM1YzlkYjMxY2M=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-01T16:24:33Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-01T16:24:33Z"}, "message": "Merge pull request #271 from birkenfeld/lint_groups\n\nlib: add clippy_pedantic group with all Allow by default lints (fixes #265)", "tree": {"sha": "f873b2ef8711d82b62a6a9db8f20d0343c760908", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f873b2ef8711d82b62a6a9db8f20d0343c760908"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77fcca00f032fed19246b0939b57ad35c9db31cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77fcca00f032fed19246b0939b57ad35c9db31cc", "html_url": "https://github.com/rust-lang/rust/commit/77fcca00f032fed19246b0939b57ad35c9db31cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77fcca00f032fed19246b0939b57ad35c9db31cc/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2abc5ab97cb0d09a095fd44cd74c6a8c48f26b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/2abc5ab97cb0d09a095fd44cd74c6a8c48f26b68", "html_url": "https://github.com/rust-lang/rust/commit/2abc5ab97cb0d09a095fd44cd74c6a8c48f26b68"}, {"sha": "88dd38de8771069b44b5ea52917c749d35bbc9b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/88dd38de8771069b44b5ea52917c749d35bbc9b8", "html_url": "https://github.com/rust-lang/rust/commit/88dd38de8771069b44b5ea52917c749d35bbc9b8"}], "stats": {"total": 64, "additions": 36, "deletions": 28}, "files": [{"sha": "f4da8b03bc288f5c470eb53fa578365b111fc8f4", "filename": "src/lib.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/77fcca00f032fed19246b0939b57ad35c9db31cc/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77fcca00f032fed19246b0939b57ad35c9db31cc/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=77fcca00f032fed19246b0939b57ad35c9db31cc", "patch": "@@ -77,10 +77,19 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_lint_pass(box matches::MatchPass as LintPassObject);\n     reg.register_lint_pass(box misc::PatternPass as LintPassObject);\n \n-    reg.register_lint_group(\"shadow\", vec![\n+    reg.register_lint_group(\"clippy_pedantic\", vec![\n+        methods::OPTION_UNWRAP_USED,\n+        methods::RESULT_UNWRAP_USED,\n+        ptr_arg::PTR_ARG,\n         shadow::SHADOW_REUSE,\n         shadow::SHADOW_SAME,\n-        shadow::SHADOW_UNRELATED,\n+        strings::STRING_ADD,\n+        strings::STRING_ADD_ASSIGN,\n+        types::CAST_POSSIBLE_TRUNCATION,\n+        types::CAST_POSSIBLE_WRAP,\n+        types::CAST_PRECISION_LOSS,\n+        types::CAST_SIGN_LOSS,\n+        unicode::NON_ASCII_LITERAL,\n     ]);\n \n     reg.register_lint_group(\"clippy\", vec![\n@@ -102,8 +111,6 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         loops::WHILE_LET_LOOP,\n         matches::MATCH_REF_PATS,\n         matches::SINGLE_MATCH,\n-        methods::OPTION_UNWRAP_USED,\n-        methods::RESULT_UNWRAP_USED,\n         methods::SHOULD_IMPLEMENT_TRAIT,\n         methods::STR_TO_STRING,\n         methods::STRING_TO_STRING,\n@@ -116,25 +123,15 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         mut_mut::MUT_MUT,\n         needless_bool::NEEDLESS_BOOL,\n         precedence::PRECEDENCE,\n-        ptr_arg::PTR_ARG,\n         ranges::RANGE_STEP_BY_ZERO,\n         returns::LET_AND_RETURN,\n         returns::NEEDLESS_RETURN,\n-        shadow::SHADOW_REUSE,\n-        shadow::SHADOW_SAME,\n         shadow::SHADOW_UNRELATED,\n-        strings::STRING_ADD,\n-        strings::STRING_ADD_ASSIGN,\n         types::BOX_VEC,\n-        types::CAST_POSSIBLE_TRUNCATION,\n-        types::CAST_POSSIBLE_WRAP,\n-        types::CAST_PRECISION_LOSS,\n-        types::CAST_SIGN_LOSS,\n         types::LET_UNIT_VALUE,\n         types::LINKEDLIST,\n         types::TYPE_COMPLEXITY,\n         types::UNIT_CMP,\n-        unicode::NON_ASCII_LITERAL,\n         unicode::ZERO_WIDTH_SPACE,\n     ]);\n }"}, {"sha": "1c81fefc4e51cf6271835079febe81022c6b6d79", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77fcca00f032fed19246b0939b57ad35c9db31cc/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77fcca00f032fed19246b0939b57ad35c9db31cc/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=77fcca00f032fed19246b0939b57ad35c9db31cc", "patch": "@@ -2,7 +2,7 @@\n #![plugin(clippy)]\n \n #![allow(unused)]\n-#![deny(clippy)]\n+#![deny(clippy, clippy_pedantic)]\n \n use std::ops::Mul;\n "}, {"sha": "8ac9a93b140fdd90081337f6b2ac7ad59116d774", "filename": "tests/compile-fail/shadow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77fcca00f032fed19246b0939b57ad35c9db31cc/tests%2Fcompile-fail%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77fcca00f032fed19246b0939b57ad35c9db31cc/tests%2Fcompile-fail%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fshadow.rs?ref=77fcca00f032fed19246b0939b57ad35c9db31cc", "patch": "@@ -2,7 +2,7 @@\n #![plugin(clippy)]\n \n #![allow(unused_parens, unused_variables)]\n-#![deny(shadow)]\n+#![deny(clippy, clippy_pedantic)]\n \n fn id<T>(x: T) -> T { x }\n \n@@ -19,9 +19,9 @@ fn main() {\n     let x = first(x); //~ERROR: x is shadowed by first(x) which reuses\n     let y = 1;\n     let x = y; //~ERROR: x is shadowed by y in this declaration\n-    \n+\n     let o = Some(1u8);\n-    \n+\n     if let Some(p) = o { assert_eq!(1, p); }\n     match o {\n         Some(p) => p, // no error, because the p above is in its own scope"}, {"sha": "5ba8b4efa17e036ff0534c2eeea881d942bd19c8", "filename": "util/dogfood.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77fcca00f032fed19246b0939b57ad35c9db31cc/util%2Fdogfood.sh", "raw_url": "https://github.com/rust-lang/rust/raw/77fcca00f032fed19246b0939b57ad35c9db31cc/util%2Fdogfood.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fdogfood.sh?ref=77fcca00f032fed19246b0939b57ad35c9db31cc", "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n rm -rf target*/*so\n-cargo build --lib && cp -R target target_recur && cargo rustc -- -Zextra-plugins=clippy -Ltarget_recur/debug   -Dclippy || exit 1\n+cargo build --lib && cp -R target target_recur && cargo rustc -- -Zextra-plugins=clippy -Ltarget_recur/debug -Dclippy_pedantic -Dclippy || exit 1\n rm -rf target_recur\n "}, {"sha": "94b2a3a57ba613fb311cc575ec87b667a8e9aae2", "filename": "util/update_lints.py", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/77fcca00f032fed19246b0939b57ad35c9db31cc/util%2Fupdate_lints.py", "raw_url": "https://github.com/rust-lang/rust/raw/77fcca00f032fed19246b0939b57ad35c9db31cc/util%2Fupdate_lints.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_lints.py?ref=77fcca00f032fed19246b0939b57ad35c9db31cc", "patch": "@@ -38,7 +38,7 @@ def gen_table(lints, link=None):\n     \"\"\"Write lint table in Markdown format.\"\"\"\n     if link:\n         lints = [(p, '[%s](%s#%s)' % (l, link, l), lvl, d)\n-                    for (p, l, lvl, d) in lints]\n+                 for (p, l, lvl, d) in lints]\n     # first and third column widths\n     w_name = max(len(l[1]) for l in lints)\n     w_desc = max(len(l[3]) for l in lints)\n@@ -50,8 +50,10 @@ def gen_table(lints, link=None):\n         yield '%-*s | %-7s | %s\\n' % (w_name, name, default, meaning)\n \n \n-def gen_group(lints):\n+def gen_group(lints, levels=None):\n     \"\"\"Write lint group (list of all lints in the form module::NAME).\"\"\"\n+    if levels:\n+        lints = [tup for tup in lints if tup[2] in levels]\n     for (module, name, _, _) in sorted(lints):\n         yield '        %s::%s,\\n' % (module, name.upper())\n \n@@ -113,19 +115,28 @@ def main(print_only=False, check=False):\n         return\n \n     # replace table in README.md\n-    changed = replace_region('README.md', r'^name +\\|', '^$',\n-                             lambda: gen_table(lints, link=wiki_link),\n-                             write_back=not check)\n+    changed = replace_region(\n+        'README.md', r'^name +\\|', '^$',\n+        lambda: gen_table(lints, link=wiki_link),\n+        write_back=not check)\n \n-    changed |= replace_region('README.md',\n+    changed |= replace_region(\n+        'README.md',\n         r'^There are \\d+ lints included in this crate:', \"\",\n         lambda: ['There are %d lints included in this crate:\\n' % len(lints)],\n         write_back=not check)\n \n     # same for \"clippy\" lint collection\n-    changed |= replace_region('src/lib.rs', r'reg.register_lint_group\\(\"clippy\"', r'\\]\\);',\n-                              lambda: gen_group(lints), replace_start=False,\n-                              write_back=not check)\n+    changed |= replace_region(\n+        'src/lib.rs', r'reg.register_lint_group\\(\"clippy\"', r'\\]\\);',\n+        lambda: gen_group(lints, levels=('warn', 'deny')),\n+        replace_start=False, write_back=not check)\n+\n+    # same for \"clippy_pedantic\" lint collection\n+    changed |= replace_region(\n+        'src/lib.rs', r'reg.register_lint_group\\(\"clippy_pedantic\"', r'\\]\\);',\n+        lambda: gen_group(lints, levels=('allow',)),\n+        replace_start=False, write_back=not check)\n \n     if check and changed:\n         print('Please run util/update_lints.py to regenerate lints lists.')"}]}