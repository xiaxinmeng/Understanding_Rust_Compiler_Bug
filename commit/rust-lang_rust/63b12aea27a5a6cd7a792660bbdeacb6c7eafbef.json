{"sha": "63b12aea27a5a6cd7a792660bbdeacb6c7eafbef", "node_id": "C_kwDOAAsO6NoAKDYzYjEyYWVhMjdhNWE2Y2Q3YTc5MjY2MGJiZGVhY2I2YzdlYWZiZWY", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2022-02-01T21:32:02Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2022-02-01T21:32:02Z"}, "message": "Fix two incorrect \"it's\"", "tree": {"sha": "621c797eec2f830d9c7c5e2ff7255d9bf8a61e2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/621c797eec2f830d9c7c5e2ff7255d9bf8a61e2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef", "html_url": "https://github.com/rust-lang/rust/commit/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547f2ba06bc4aa93a375c54e1af3fd1216eeaf62", "url": "https://api.github.com/repos/rust-lang/rust/commits/547f2ba06bc4aa93a375c54e1af3fd1216eeaf62", "html_url": "https://github.com/rust-lang/rust/commit/547f2ba06bc4aa93a375c54e1af3fd1216eeaf62"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e9e6d61331077e4575757b67cb93953e19eda54c", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=63b12aea27a5a6cd7a792660bbdeacb6c7eafbef", "patch": "@@ -1642,7 +1642,7 @@ pub enum FakeReadCause {\n     ForMatchedPlace(Option<DefId>),\n \n     /// A fake read of the RefWithinGuard version of a bind-by-value variable\n-    /// in a match guard to ensure that it's value hasn't change by the time\n+    /// in a match guard to ensure that its value hasn't change by the time\n     /// we create the OutsideGuard version.\n     ForGuardBinding,\n \n@@ -2939,7 +2939,7 @@ impl Location {\n         let mut visited = FxHashSet::default();\n \n         while let Some(block) = queue.pop() {\n-            // If we haven't visited this block before, then make sure we visit it's predecessors.\n+            // If we haven't visited this block before, then make sure we visit its predecessors.\n             if visited.insert(block) {\n                 queue.extend(predecessors[block].iter().cloned());\n             } else {"}]}