{"sha": "b7b026bce672f3161df83d9d503ff32c393e3768", "node_id": "C_kwDOAAsO6NoAKGI3YjAyNmJjZTY3MmYzMTYxZGY4M2Q5ZDUwM2ZmMzJjMzkzZTM3Njg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-18T05:22:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-18T05:22:41Z"}, "message": "Auto merge of #14825 - HKalbasi:float-const-eval, r=Veykril\n\nFix evaluating negative for floating point types\n\nfix #14704\nUnary operators was missed from #14705", "tree": {"sha": "821c6a188be8d0aabd1481efa461da4ebe2c3b46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/821c6a188be8d0aabd1481efa461da4ebe2c3b46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7b026bce672f3161df83d9d503ff32c393e3768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b026bce672f3161df83d9d503ff32c393e3768", "html_url": "https://github.com/rust-lang/rust/commit/b7b026bce672f3161df83d9d503ff32c393e3768", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7b026bce672f3161df83d9d503ff32c393e3768/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20a08f3e2d3fb2b68e277b10d0d8413ae74d762", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20a08f3e2d3fb2b68e277b10d0d8413ae74d762", "html_url": "https://github.com/rust-lang/rust/commit/a20a08f3e2d3fb2b68e277b10d0d8413ae74d762"}, {"sha": "fd034bea1a13cf557f9fa3446f8f31fa18c084f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd034bea1a13cf557f9fa3446f8f31fa18c084f9", "html_url": "https://github.com/rust-lang/rust/commit/fd034bea1a13cf557f9fa3446f8f31fa18c084f9"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "41e0b5188b38cb67baa9c07c19b8de1b79aacdc1", "filename": "crates/hir-ty/src/consteval/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7b026bce672f3161df83d9d503ff32c393e3768/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b026bce672f3161df83d9d503ff32c393e3768/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs?ref=b7b026bce672f3161df83d9d503ff32c393e3768", "patch": "@@ -113,6 +113,10 @@ fn floating_point() {\n         r#\"const GOAL: f32 = 2.0 + 3.0 * 5.5 - 8.;\"#,\n         i128::from_le_bytes(pad16(&f32::to_le_bytes(10.5), true)),\n     );\n+    check_number(\n+        r#\"const GOAL: f32 = -90.0 + 36.0;\"#,\n+        i128::from_le_bytes(pad16(&f32::to_le_bytes(-54.0), true)),\n+    );\n }\n \n #[test]"}, {"sha": "c55ecb056c05a71b49e2176fc39aee7fbd34904f", "filename": "crates/hir-ty/src/mir/eval.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b7b026bce672f3161df83d9d503ff32c393e3768/crates%2Fhir-ty%2Fsrc%2Fmir%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b026bce672f3161df83d9d503ff32c393e3768/crates%2Fhir-ty%2Fsrc%2Fmir%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmir%2Feval.rs?ref=b7b026bce672f3161df83d9d503ff32c393e3768", "patch": "@@ -759,25 +759,38 @@ impl Evaluator<'_> {\n                     let size = self.size_of_sized(&ty, locals, \"operand of unary op\")?;\n                     c = self.read_memory(Address::from_bytes(c)?, size)?;\n                 }\n-                let mut c = c.to_vec();\n-                if ty.as_builtin() == Some(BuiltinType::Bool) {\n-                    c[0] = 1 - c[0];\n+                if let TyKind::Scalar(chalk_ir::Scalar::Float(f)) = ty.kind(Interner) {\n+                    match f {\n+                        chalk_ir::FloatTy::F32 => {\n+                            let c = -from_bytes!(f32, c);\n+                            Owned(c.to_le_bytes().into())\n+                        }\n+                        chalk_ir::FloatTy::F64 => {\n+                            let c = -from_bytes!(f32, c);\n+                            Owned(c.to_le_bytes().into())\n+                        }\n+                    }\n                 } else {\n-                    match op {\n-                        UnOp::Not => c.iter_mut().for_each(|x| *x = !*x),\n-                        UnOp::Neg => {\n-                            c.iter_mut().for_each(|x| *x = !*x);\n-                            for k in c.iter_mut() {\n-                                let o;\n-                                (*k, o) = k.overflowing_add(1);\n-                                if !o {\n-                                    break;\n+                    let mut c = c.to_vec();\n+                    if ty.as_builtin() == Some(BuiltinType::Bool) {\n+                        c[0] = 1 - c[0];\n+                    } else {\n+                        match op {\n+                            UnOp::Not => c.iter_mut().for_each(|x| *x = !*x),\n+                            UnOp::Neg => {\n+                                c.iter_mut().for_each(|x| *x = !*x);\n+                                for k in c.iter_mut() {\n+                                    let o;\n+                                    (*k, o) = k.overflowing_add(1);\n+                                    if !o {\n+                                        break;\n+                                    }\n                                 }\n                             }\n                         }\n                     }\n+                    Owned(c)\n                 }\n-                Owned(c)\n             }\n             Rvalue::CheckedBinaryOp(op, lhs, rhs) => {\n                 let lc = self.eval_operand(lhs, locals)?;"}]}