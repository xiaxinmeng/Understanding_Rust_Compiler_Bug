{"sha": "62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYzcwMjdhMzI1OGI2MGNiYWQzZTk5ZjRjN2NiOGQ1OGY1OWZiZDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-15T12:43:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-15T12:43:58Z"}, "message": "auto merge of #6485 : cmr/rust/local_rename_import_error, r=catamorphism", "tree": {"sha": "299c25aec17c76b9ee8e07ac20e921d70a7f51d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/299c25aec17c76b9ee8e07ac20e921d70a7f51d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "html_url": "https://github.com/rust-lang/rust/commit/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e4f90d4a0b887c45d1ced359657fbdb23ab2438", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4f90d4a0b887c45d1ced359657fbdb23ab2438", "html_url": "https://github.com/rust-lang/rust/commit/4e4f90d4a0b887c45d1ced359657fbdb23ab2438"}, {"sha": "68863153bba3ab994978b49216cb58641e7a9fbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/68863153bba3ab994978b49216cb58641e7a9fbb", "html_url": "https://github.com/rust-lang/rust/commit/68863153bba3ab994978b49216cb58641e7a9fbb"}], "stats": {"total": 49, "additions": 36, "deletions": 13}, "files": [{"sha": "9532cf327cb385756edeafac431ea2e3cefcc31d", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -2058,7 +2058,8 @@ pub impl Resolver {\n                             self.resolve_single_import(module_,\n                                                        containing_module,\n                                                        target,\n-                                                       source);\n+                                                       source,\n+                                                       import_directive.span);\n                     }\n                     GlobImport => {\n                         let span = import_directive.span;\n@@ -2121,7 +2122,8 @@ pub impl Resolver {\n                              module_: @mut Module,\n                              containing_module: @mut Module,\n                              target: ident,\n-                             source: ident)\n+                             source: ident,\n+                             span: span)\n                           -> ResolveResult<()> {\n         debug!(\"(resolving single import) resolving `%s` = `%s::%s` from \\\n                 `%s`\",\n@@ -2325,14 +2327,14 @@ pub impl Resolver {\n         }\n \n         if resolve_fail {\n-            self.session.err(fmt!(\"unresolved import: there is no `%s` in `%s`\",\n-                                  *self.session.str_of(source),\n-                                  self.module_to_str(containing_module)));\n+            self.session.span_err(span, fmt!(\"unresolved import: there is no `%s` in `%s`\",\n+                                             *self.session.str_of(source),\n+                                             self.module_to_str(containing_module)));\n             return Failed;\n         } else if priv_fail {\n-            self.session.err(fmt!(\"unresolved import: found `%s` in `%s` but it is private\",\n-                                  *self.session.str_of(source),\n-                                  self.module_to_str(containing_module)));\n+            self.session.span_err(span, fmt!(\"unresolved import: found `%s` in `%s` but it is \\\n+                                             private\", *self.session.str_of(source),\n+                                             self.module_to_str(containing_module)));\n             return Failed;\n         }\n \n@@ -2593,7 +2595,18 @@ pub impl Resolver {\n         let start_index;\n         match module_prefix_result {\n             Failed => {\n-                self.session.span_err(span, ~\"unresolved name\");\n+                let mpath = self.idents_to_str(module_path);\n+                match str::rfind(self.idents_to_str(module_path), |c| { c == ':' }) {\n+                    Some(idx) => {\n+                        self.session.span_err(span, fmt!(\"unresolved import: could not find `%s` \\\n+                                                         in `%s`\", str::substr(mpath, idx,\n+                                                                               mpath.len() - idx),\n+                                                         // idx - 1 to account for the extra\n+                                                         // colon\n+                                                         str::substr(mpath, 0, idx - 1)));\n+                    },\n+                    None => (),\n+                };\n                 return Failed;\n             }\n             Indeterminate => {"}, {"sha": "6d617d338ed941a3f031b9856f1b7baad62a0d6e", "filename": "src/test/compile-fail/issue-2123.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-2123.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-2123.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2123.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use x = m::f; //~ ERROR failed to resolve import\n+              //~^ unresolved import: there is no `f` in `m`\n \n mod m {\n }"}, {"sha": "b225c5496e24978c56511f048dc7ce3c972679d5", "filename": "src/test/compile-fail/issue-2937.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use x = m::f; //~ ERROR failed to resolve import\n+              //~^ ERROR unresolved import: there is no `f` in `m`\n \n mod m {\n }"}, {"sha": "2ca871cd11ca03becf55c68648cdb8aeb2acede5", "filename": "src/test/compile-fail/issue-3993-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-3993-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-3993-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3993-2.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use zoo::{duck, goose}; //~ ERROR failed to resolve import\n+                        //~^ ERROR unresolved import: found `goose` in `zoo` but it is private\n \n mod zoo {\n     pub enum bird {"}, {"sha": "ccda6f158eda283ea35603cefc2abdd5dc67b4f7", "filename": "src/test/compile-fail/issue-3993-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-3993-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-3993-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3993-3.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use zoo::fly; //~ ERROR failed to resolve import\n+              //~^ ERROR unresolved import: found `fly` in `zoo` but it is private\n \n mod zoo {\n     priv type fly = ();"}, {"sha": "450ea023bcbe6760100e7dfbe9f85e1852a8ade4", "filename": "src/test/compile-fail/issue-3993.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-3993.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fissue-3993.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3993.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use zoo::fly; //~ ERROR failed to resolve import\n+              //~^ ERROR unresolved import: found `fly` in `zoo` but it is private\n \n mod zoo {\n     priv fn fly() {}"}, {"sha": "9ec92e6dbfabcfdfb8ae102c7d114069a6e7d37b", "filename": "src/test/compile-fail/super-at-top-level.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -1,5 +1,4 @@\n-use super::f;   //~ ERROR unresolved name\n-//~^ ERROR failed to resolve import\n+use super::f; //~ ERROR failed to resolve import\n \n fn main() {\n }"}, {"sha": "fc69c34c1183be9c381b3ce3b6e163dff70d7900", "filename": "src/test/compile-fail/unresolved-import.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs?ref=62c7027a3258b60cbad3e99f4c7cb8d58f59fbd5", "patch": "@@ -8,5 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use foo::bar; //~ ERROR unresolved import. maybe a missing\n-              //~^ ERROR failed to resolve import\n+use foo::bar; //~ ERROR unresolved import. maybe a missing `extern mod foo`?\n+              //~^ ERROR failed to resolve import `foo::bar`\n+use x = bar::baz; //~ ERROR unresolved import: there is no `baz` in `bar`\n+                  //~^ ERROR failed to resolve import `bar::baz`\n+\n+mod bar {\n+    struct bar;\n+}"}]}