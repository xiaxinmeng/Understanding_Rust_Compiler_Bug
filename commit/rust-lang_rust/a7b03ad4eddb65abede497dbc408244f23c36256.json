{"sha": "a7b03ad4eddb65abede497dbc408244f23c36256", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YjAzYWQ0ZWRkYjY1YWJlZGU0OTdkYmM0MDgyNDRmMjNjMzYyNTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-06T22:26:03Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-07T17:19:37Z"}, "message": "Fix E0284 to not use incorrect wording\n\nFix #71584, fix #69683.", "tree": {"sha": "0f734feb526542c67e8fa221fc1256127325a78e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f734feb526542c67e8fa221fc1256127325a78e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7b03ad4eddb65abede497dbc408244f23c36256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7b03ad4eddb65abede497dbc408244f23c36256", "html_url": "https://github.com/rust-lang/rust/commit/a7b03ad4eddb65abede497dbc408244f23c36256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7b03ad4eddb65abede497dbc408244f23c36256/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "339f574809bf8e4166b8de3cdbe7df181d37af3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/339f574809bf8e4166b8de3cdbe7df181d37af3d", "html_url": "https://github.com/rust-lang/rust/commit/339f574809bf8e4166b8de3cdbe7df181d37af3d"}], "stats": {"total": 107, "additions": 81, "deletions": 26}, "files": [{"sha": "866a5beeceb1f32c08351902b54ef320b883a051", "filename": "src/librustc_trait_selection/traits/error_reporting/mod.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -1492,12 +1492,26 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n             ty::Predicate::Projection(ref data) => {\n                 let trait_ref = data.to_poly_trait_ref(self.tcx);\n                 let self_ty = trait_ref.self_ty();\n+                let ty = data.skip_binder().ty;\n                 if predicate.references_error() {\n                     return;\n                 }\n-                let mut err = self.need_type_info_err(body_id, span, self_ty, ErrorCode::E0284);\n-                err.note(&format!(\"cannot satisfy `{}`\", predicate));\n-                err\n+                if self_ty.needs_infer() && ty.needs_infer() {\n+                    // We do this for the `foo.collect()?` case to produce a suggestion.\n+                    let mut err = self.need_type_info_err(body_id, span, self_ty, ErrorCode::E0284);\n+                    err.note(&format!(\"cannot satisfy `{}`\", predicate));\n+                    err\n+                } else {\n+                    let mut err = struct_span_err!(\n+                        self.tcx.sess,\n+                        span,\n+                        E0284,\n+                        \"type annotations needed: cannot satisfy `{}`\",\n+                        predicate,\n+                    );\n+                    err.span_label(span, &format!(\"cannot satisfy `{}`\", predicate));\n+                    err\n+                }\n             }\n \n             _ => {"}, {"sha": "b8321ce5b25379121eb80601b6e91e069e7ac2f4", "filename": "src/test/ui/associated-types/associated-types-overridden-binding.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -1,22 +1,18 @@\n-error[E0284]: type annotations needed\n+error[E0284]: type annotations needed: cannot satisfy `<Self as std::iter::Iterator>::Item == i32`\n   --> $DIR/associated-types-overridden-binding.rs:4:12\n    |\n LL | trait Foo: Iterator<Item = i32> {}\n    |                     ---------- required by this bound in `Foo`\n LL | trait Bar: Foo<Item = u32> {}\n-   |            ^^^^^^^^^^^^^^^ cannot infer type for type parameter `Self`\n-   |\n-   = note: cannot satisfy `<Self as std::iter::Iterator>::Item == i32`\n+   |            ^^^^^^^^^^^^^^^ cannot satisfy `<Self as std::iter::Iterator>::Item == i32`\n \n-error[E0284]: type annotations needed\n+error[E0284]: type annotations needed: cannot satisfy `<Self as std::iter::Iterator>::Item == i32`\n   --> $DIR/associated-types-overridden-binding.rs:7:21\n    |\n LL | trait I32Iterator = Iterator<Item = i32>;\n    |                              ---------- required by this bound in `I32Iterator`\n LL | trait U32Iterator = I32Iterator<Item = u32>;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `Self`\n-   |\n-   = note: cannot satisfy `<Self as std::iter::Iterator>::Item == i32`\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^ cannot satisfy `<Self as std::iter::Iterator>::Item == i32`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "30cb7a1df8071e388c1962399c374252f037c115", "filename": "src/test/ui/issues/issue-12028.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -1,10 +1,8 @@\n-error[E0284]: type annotations needed\n+error[E0284]: type annotations needed: cannot satisfy `<_ as StreamHasher>::S == <H as StreamHasher>::S`\n   --> $DIR/issue-12028.rs:27:14\n    |\n LL |         self.input_stream(&mut stream);\n-   |              ^^^^^^^^^^^^ cannot infer type for type parameter `H` declared on the trait `StreamHash`\n-   |\n-   = note: cannot satisfy `<_ as StreamHasher>::S == <H as StreamHasher>::S`\n+   |              ^^^^^^^^^^^^ cannot satisfy `<_ as StreamHasher>::S == <H as StreamHasher>::S`\n \n error: aborting due to previous error\n "}, {"sha": "f1935ae253463ced17157bb2ff23fa66682e3b42", "filename": "src/test/ui/issues/issue-69455.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69455.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69455.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69455.rs?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -26,5 +26,5 @@ impl Test<u64> for u64 {\n \n fn main() {\n     let xs: Vec<u64> = vec![1, 2, 3];\n-    println!(\"{}\", 23u64.test(xs.iter().sum())); //~ ERROR: type annotations needed [E0284]\n+    println!(\"{}\", 23u64.test(xs.iter().sum())); //~ ERROR: type annotations needed\n }"}, {"sha": "430bbcabf83e81ad976abad619e2fb5f989d63aa", "filename": "src/test/ui/issues/issue-69455.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69455.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69455.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69455.stderr?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -1,16 +1,8 @@\n-error[E0284]: type annotations needed\n+error[E0284]: type annotations needed: cannot satisfy `<u64 as Test<_>>::Output == _`\n   --> $DIR/issue-69455.rs:29:26\n    |\n-LL |     type Output;\n-   |     ------------ `<Self as Test<Rhs>>::Output` defined here\n-...\n LL |     println!(\"{}\", 23u64.test(xs.iter().sum()));\n-   |                    ------^^^^-----------------\n-   |                    |     |\n-   |                    |     cannot infer type for type `u64`\n-   |                    this method call resolves to `<Self as Test<Rhs>>::Output`\n-   |\n-   = note: cannot satisfy `<u64 as Test<_>>::Output == _`\n+   |                          ^^^^ cannot satisfy `<u64 as Test<_>>::Output == _`\n \n error: aborting due to previous error\n "}, {"sha": "cc7f1fa0f558056be74f56ba0475e22f822d2bd7", "filename": "src/test/ui/issues/issue-69683.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69683.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69683.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69683.rs?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -0,0 +1,32 @@\n+pub trait Element<S> {\n+    type Array;\n+}\n+\n+impl<T> Element<()> for T {\n+    type Array = T;\n+}\n+\n+impl<T: Element<S>, S> Element<[S; 3]> for T {\n+    type Array = [T::Array; 3];\n+}\n+\n+trait Foo<I>\n+where\n+    u8: Element<I>,\n+{\n+    fn foo(self, x: <u8 as Element<I>>::Array);\n+}\n+\n+impl<I> Foo<I> for u16\n+where\n+    u8: Element<I>,\n+{\n+    fn foo(self, _: <u8 as Element<I>>::Array) {}\n+}\n+\n+fn main() {\n+    let b: [u8; 3] = [0u8; 3];\n+\n+    0u16.foo(b); //~ ERROR type annotations needed\n+    //<u16 as Foo<[(); 3]>>::foo(0u16, b);\n+}"}, {"sha": "776370331a4c9193cd2c568ea14b0a3eab1e6b47", "filename": "src/test/ui/issues/issue-69683.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69683.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-69683.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69683.stderr?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -0,0 +1,9 @@\n+error[E0284]: type annotations needed: cannot satisfy `<u8 as Element<_>>::Array == [u8; 3]`\n+  --> $DIR/issue-69683.rs:30:10\n+   |\n+LL |     0u16.foo(b);\n+   |          ^^^ cannot satisfy `<u8 as Element<_>>::Array == [u8; 3]`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "c96cd598f0ce067dab8619991fc3ad9a72767a1c", "filename": "src/test/ui/issues/issue-71584.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-71584.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-71584.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-71584.rs?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let n: u32 = 1;\n+    let mut d: u64 = 2;\n+    d = d % n.into(); //~ ERROR type annotations needed\n+}"}, {"sha": "c162d338a93be8aa0b020e2511393e95c19c2be8", "filename": "src/test/ui/issues/issue-71584.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-71584.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7b03ad4eddb65abede497dbc408244f23c36256/src%2Ftest%2Fui%2Fissues%2Fissue-71584.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-71584.stderr?ref=a7b03ad4eddb65abede497dbc408244f23c36256", "patch": "@@ -0,0 +1,9 @@\n+error[E0284]: type annotations needed: cannot satisfy `<u64 as std::ops::Rem<_>>::Output == u64`\n+  --> $DIR/issue-71584.rs:4:11\n+   |\n+LL |     d = d % n.into();\n+   |           ^ cannot satisfy `<u64 as std::ops::Rem<_>>::Output == u64`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0284`."}]}