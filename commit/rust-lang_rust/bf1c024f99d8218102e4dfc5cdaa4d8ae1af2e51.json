{"sha": "bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMWMwMjRmOTlkODIxODEwMmU0ZGZjNWNkYWE0ZDhhZTFhZjJlNTE=", "commit": {"author": {"name": "Austin Lasher", "email": "austinlasher@gmail.com", "date": "2020-08-15T17:04:18Z"}, "committer": {"name": "Austin Lasher", "email": "austinlasher@gmail.com", "date": "2020-08-17T21:18:23Z"}, "message": "Suppress verbose MIR comments for trivial types", "tree": {"sha": "9f3374c7655b06570e6efc52a7dd99414c37bf39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f3374c7655b06570e6efc52a7dd99414c37bf39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51", "html_url": "https://github.com/rust-lang/rust/commit/bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51/comments", "author": {"login": "alasher", "id": 6944190, "node_id": "MDQ6VXNlcjY5NDQxOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6944190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alasher", "html_url": "https://github.com/alasher", "followers_url": "https://api.github.com/users/alasher/followers", "following_url": "https://api.github.com/users/alasher/following{/other_user}", "gists_url": "https://api.github.com/users/alasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/alasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alasher/subscriptions", "organizations_url": "https://api.github.com/users/alasher/orgs", "repos_url": "https://api.github.com/users/alasher/repos", "events_url": "https://api.github.com/users/alasher/events{/privacy}", "received_events_url": "https://api.github.com/users/alasher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alasher", "id": 6944190, "node_id": "MDQ6VXNlcjY5NDQxOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6944190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alasher", "html_url": "https://github.com/alasher", "followers_url": "https://api.github.com/users/alasher/followers", "following_url": "https://api.github.com/users/alasher/following{/other_user}", "gists_url": "https://api.github.com/users/alasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/alasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alasher/subscriptions", "organizations_url": "https://api.github.com/users/alasher/orgs", "repos_url": "https://api.github.com/users/alasher/repos", "events_url": "https://api.github.com/users/alasher/events{/privacy}", "received_events_url": "https://api.github.com/users/alasher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33c96b4d9782cf6364e47cb2c904e66b06c22bb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/33c96b4d9782cf6364e47cb2c904e66b06c22bb4", "html_url": "https://github.com/rust-lang/rust/commit/33c96b4d9782cf6364e47cb2c904e66b06c22bb4"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "0294a7cd7aff1ecb5577316e4b50f725433c9a92", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=bf1c024f99d8218102e4dfc5cdaa4d8ae1af2e51", "patch": "@@ -387,20 +387,30 @@ impl Visitor<'tcx> for ExtraComments<'tcx> {\n     fn visit_constant(&mut self, constant: &Constant<'tcx>, location: Location) {\n         self.super_constant(constant, location);\n         let Constant { span, user_ty, literal } = constant;\n-        self.push(\"mir::Constant\");\n-        self.push(&format!(\"+ span: {}\", self.tcx.sess.source_map().span_to_string(*span)));\n-        if let Some(user_ty) = user_ty {\n-            self.push(&format!(\"+ user_ty: {:?}\", user_ty));\n+        match literal.ty.kind {\n+            ty::Int(_) | ty::Uint(_) | ty::Bool | ty::Char => {}\n+            _ => {\n+                self.push(\"mir::Constant\");\n+                self.push(&format!(\"+ span: {}\", self.tcx.sess.source_map().span_to_string(*span)));\n+                if let Some(user_ty) = user_ty {\n+                    self.push(&format!(\"+ user_ty: {:?}\", user_ty));\n+                }\n+                self.push(&format!(\"+ literal: {:?}\", literal));\n+            }\n         }\n-        self.push(&format!(\"+ literal: {:?}\", literal));\n     }\n \n     fn visit_const(&mut self, constant: &&'tcx ty::Const<'tcx>, _: Location) {\n         self.super_const(constant);\n         let ty::Const { ty, val, .. } = constant;\n-        self.push(\"ty::Const\");\n-        self.push(&format!(\"+ ty: {:?}\", ty));\n-        self.push(&format!(\"+ val: {:?}\", val));\n+        match ty.kind {\n+            ty::Int(_) | ty::Uint(_) | ty::Bool | ty::Char => {}\n+            _ => {\n+                self.push(\"ty::Const\");\n+                self.push(&format!(\"+ ty: {:?}\", ty));\n+                self.push(&format!(\"+ val: {:?}\", val));\n+            }\n+        }\n     }\n \n     fn visit_rvalue(&mut self, rvalue: &Rvalue<'tcx>, location: Location) {"}]}