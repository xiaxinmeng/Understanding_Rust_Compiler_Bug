{"sha": "c17d0670185e67ed6edb0aca5d305b4b25072d35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxN2QwNjcwMTg1ZTY3ZWQ2ZWRiMGFjYTVkMzA1YjRiMjUwNzJkMzU=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-09-15T17:22:48Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-08T17:49:44Z"}, "message": "Don't discourage implementing `core::fmt::Write`\n\nExplain when you should use it and when you should not.", "tree": {"sha": "cf4eb708db0fef6a5abfe5b2af15a2165a45bcaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4eb708db0fef6a5abfe5b2af15a2165a45bcaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c17d0670185e67ed6edb0aca5d305b4b25072d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c17d0670185e67ed6edb0aca5d305b4b25072d35", "html_url": "https://github.com/rust-lang/rust/commit/c17d0670185e67ed6edb0aca5d305b4b25072d35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c17d0670185e67ed6edb0aca5d305b4b25072d35/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea7e131435a960d154e9a5d6a9297039574ffd7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea7e131435a960d154e9a5d6a9297039574ffd7d", "html_url": "https://github.com/rust-lang/rust/commit/ea7e131435a960d154e9a5d6a9297039574ffd7d"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "0963c6d6cd7ea2bbdc506a0c877e1406a2d26f8b", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c17d0670185e67ed6edb0aca5d305b4b25072d35/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c17d0670185e67ed6edb0aca5d305b4b25072d35/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=c17d0670185e67ed6edb0aca5d305b4b25072d35", "patch": "@@ -92,18 +92,14 @@ pub type Result = result::Result<(), Error>;\n #[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]\n pub struct Error;\n \n-/// A collection of methods that are required to format a message into a stream.\n+/// A trait for writing or formatting into Unicode-accepting buffers or streams.\n ///\n-/// This trait is the type which this modules requires when formatting\n-/// information. This is similar to the standard library's [`io::Write`] trait,\n-/// but it is only intended for use in libcore.\n+/// This trait only accepts UTF-8\u2013encoded data and is not [flushable]. If you only\n+/// want to accept Unicode and you don't need flushing, you should implement this trait;\n+/// otherwise you should implement [`std::io::Write`].\n ///\n-/// This trait should generally not be implemented by consumers of the standard\n-/// library. The [`write!`] macro accepts an instance of [`io::Write`], and the\n-/// [`io::Write`] trait is favored over implementing this trait.\n-///\n-/// [`write!`]: crate::write!\n-/// [`io::Write`]: ../../std/io/trait.Write.html\n+/// [`std::io::Write`]: ../../std/io/trait.Write.html\n+/// [flushable]: ../../std/io/trait.Write.html#tymethod.flush\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Write {\n     /// Writes a string slice into this writer, returning whether the write"}]}