{"sha": "3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486", "node_id": "C_kwDOAAsO6NoAKDNhMmJiNzgyMjg5YTljYzM0ZDRiNGY3ZWQ4ZTBiN2E1YzNiYmY0ODY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-05-30T23:46:04Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-05-30T23:46:04Z"}, "message": "normalize harder", "tree": {"sha": "4425c28be5ed9e4068e8595bdd829447e083939b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4425c28be5ed9e4068e8595bdd829447e083939b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486", "html_url": "https://github.com/rust-lang/rust/commit/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e0747f8d25a76f83723990d2c11a7ce40f97258", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0747f8d25a76f83723990d2c11a7ce40f97258", "html_url": "https://github.com/rust-lang/rust/commit/1e0747f8d25a76f83723990d2c11a7ce40f97258"}], "stats": {"total": 117, "additions": 59, "deletions": 58}, "files": [{"sha": "5b0b9aa9666e52417163fd4d38479200e9662bff", "filename": "src/test/ui/const-ptr/forbidden_slices.32bit.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.32bit.stderr?ref=3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486", "patch": "@@ -7,10 +7,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: null pointer is not a valid pointer\n    |         inside `std::slice::from_raw_parts::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:18:34\n+  ::: $DIR/forbidden_slices.rs:19:34\n    |\n LL | pub static S0: &[u32] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                  ------------------------------ inside `S0` at $DIR/forbidden_slices.rs:18:34\n+   |                                  ------------------------------ inside `S0` at $DIR/forbidden_slices.rs:19:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n@@ -21,10 +21,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: null pointer is not a valid pointer\n    |         inside `std::slice::from_raw_parts::<()>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:19:33\n+  ::: $DIR/forbidden_slices.rs:20:33\n    |\n LL | pub static S1: &[()] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                 ------------------------------ inside `S1` at $DIR/forbidden_slices.rs:19:33\n+   |                                 ------------------------------ inside `S1` at $DIR/forbidden_slices.rs:20:33\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n@@ -35,13 +35,13 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: ALLOC_ID has size 4, so pointer to 8 bytes starting at offset 0 is out-of-bounds\n    |         inside `std::slice::from_raw_parts::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:22:34\n+  ::: $DIR/forbidden_slices.rs:23:34\n    |\n LL | pub static S2: &[u32] = unsafe { from_raw_parts(&D0, 2) };\n-   |                                  ---------------------- inside `S2` at $DIR/forbidden_slices.rs:22:34\n+   |                                  ---------------------- inside `S2` at $DIR/forbidden_slices.rs:23:34\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:25:1\n+  --> $DIR/forbidden_slices.rs:26:1\n    |\n LL | pub static S4: &[u8] = unsafe { from_raw_parts((&D1) as *const _ as _, 1) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>[0]: encountered uninitialized bytes\n@@ -52,7 +52,7 @@ LL | pub static S4: &[u8] = unsafe { from_raw_parts((&D1) as *const _ as _, 1) }\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:27:1\n+  --> $DIR/forbidden_slices.rs:28:1\n    |\n LL | pub static S5: &[u8] = unsafe { from_raw_parts((&D3) as *const _ as _, size_of::<&u32>()) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>: encountered a pointer, but expected plain (non-pointer) bytes\n@@ -63,7 +63,7 @@ LL | pub static S5: &[u8] = unsafe { from_raw_parts((&D3) as *const _ as _, size\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:29:1\n+  --> $DIR/forbidden_slices.rs:30:1\n    |\n LL | pub static S6: &[bool] = unsafe { from_raw_parts((&D0) as *const _ as _, 4) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>[0]: encountered 0x11, but expected a boolean\n@@ -74,7 +74,7 @@ LL | pub static S6: &[bool] = unsafe { from_raw_parts((&D0) as *const _ as _, 4)\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:32:1\n+  --> $DIR/forbidden_slices.rs:33:1\n    |\n LL | / pub static S7: &[u16] = unsafe {\n LL | |\n@@ -86,7 +86,7 @@ LL | | };\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 8, align: 4) {\n-               \u257e\u2500a79+0x1\u2500\u257c 04 00 00 00                         \u2502 \u257e\u2500\u2500\u257c....\n+               \u257e\u2500A_ID+0x1\u2500\u257c 04 00 00 00                         \u2502 \u257e\u2500\u2500\u257c....\n            }\n \n error[E0080]: could not evaluate static initializer\n@@ -98,10 +98,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: ALLOC_ID has size 8, so pointer to 8 bytes starting at offset 1 is out-of-bounds\n    |         inside `std::slice::from_raw_parts::<u64>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:43:5\n+  ::: $DIR/forbidden_slices.rs:44:5\n    |\n LL |     from_raw_parts(ptr, 1)\n-   |     ---------------------- inside `S8` at $DIR/forbidden_slices.rs:43:5\n+   |     ---------------------- inside `S8` at $DIR/forbidden_slices.rs:44:5\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -117,10 +117,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:46:34\n+  ::: $DIR/forbidden_slices.rs:47:34\n    |\n LL | pub static R0: &[u32] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                  ---------------------------------------- inside `R0` at $DIR/forbidden_slices.rs:46:34\n+   |                                  ---------------------------------------- inside `R0` at $DIR/forbidden_slices.rs:47:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -136,10 +136,10 @@ LL |         assert!(0 < pointee_size && pointee_size <= isize::MAX as usize);\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<()>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:47:33\n+  ::: $DIR/forbidden_slices.rs:48:33\n    |\n LL | pub static R1: &[()] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                 ---------------------------------------- inside `R1` at $DIR/forbidden_slices.rs:47:33\n+   |                                 ---------------------------------------- inside `R1` at $DIR/forbidden_slices.rs:48:33\n    |\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -155,13 +155,13 @@ LL |         unsafe { intrinsics::offset(self, count) }\n LL |         unsafe { self.offset(count as isize) }\n    |                  --------------------------- inside `ptr::const_ptr::<impl *const u32>::add` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:50:25\n+  ::: $DIR/forbidden_slices.rs:51:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(2))\n-   |                         ---------- inside `R2` at $DIR/forbidden_slices.rs:50:25\n+   |                         ---------- inside `R2` at $DIR/forbidden_slices.rs:51:25\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:52:1\n+  --> $DIR/forbidden_slices.rs:53:1\n    |\n LL | / pub static R4: &[u8] = unsafe {\n LL | |\n@@ -176,7 +176,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:57:1\n+  --> $DIR/forbidden_slices.rs:58:1\n    |\n LL | / pub static R5: &[u8] = unsafe {\n LL | |\n@@ -191,7 +191,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:62:1\n+  --> $DIR/forbidden_slices.rs:63:1\n    |\n LL | / pub static R6: &[bool] = unsafe {\n LL | |\n@@ -206,7 +206,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:67:1\n+  --> $DIR/forbidden_slices.rs:68:1\n    |\n LL | / pub static R7: &[u16] = unsafe {\n LL | |\n@@ -217,7 +217,7 @@ LL | | };\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 8, align: 4) {\n-               \u257ea209+0x1\u2500\u257c 04 00 00 00                         \u2502 \u257e\u2500\u2500\u257c....\n+               \u257eA_ID+0x1\u2500\u257c 04 00 00 00                         \u2502 \u257e\u2500\u2500\u257c....\n            }\n \n error[E0080]: could not evaluate static initializer\n@@ -232,10 +232,10 @@ LL |         unsafe { intrinsics::offset(self, count) }\n LL |         unsafe { self.offset(count as isize) }\n    |                  --------------------------- inside `ptr::const_ptr::<impl *const u64>::add` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:74:25\n+  ::: $DIR/forbidden_slices.rs:75:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(1))\n-   |                         ---------- inside `R8` at $DIR/forbidden_slices.rs:74:25\n+   |                         ---------- inside `R8` at $DIR/forbidden_slices.rs:75:25\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -251,10 +251,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:79:34\n+  ::: $DIR/forbidden_slices.rs:80:34\n    |\n LL | pub static R9: &[u32] = unsafe { from_ptr_range(&D0..(&D0 as *const u32).add(1)) };\n-   |                                  ----------------------------------------------- inside `R9` at $DIR/forbidden_slices.rs:79:34\n+   |                                  ----------------------------------------------- inside `R9` at $DIR/forbidden_slices.rs:80:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -270,10 +270,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:80:35\n+  ::: $DIR/forbidden_slices.rs:81:35\n    |\n LL | pub static R10: &[u32] = unsafe { from_ptr_range(&D0..&D0) };\n-   |                                   ------------------------ inside `R10` at $DIR/forbidden_slices.rs:80:35\n+   |                                   ------------------------ inside `R10` at $DIR/forbidden_slices.rs:81:35\n \n error: aborting due to 18 previous errors\n "}, {"sha": "b75e6c5024667f1d02c75508d894193a3596b32b", "filename": "src/test/ui/const-ptr/forbidden_slices.64bit.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.64bit.stderr?ref=3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486", "patch": "@@ -7,10 +7,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: null pointer is not a valid pointer\n    |         inside `std::slice::from_raw_parts::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:18:34\n+  ::: $DIR/forbidden_slices.rs:19:34\n    |\n LL | pub static S0: &[u32] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                  ------------------------------ inside `S0` at $DIR/forbidden_slices.rs:18:34\n+   |                                  ------------------------------ inside `S0` at $DIR/forbidden_slices.rs:19:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n@@ -21,10 +21,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: null pointer is not a valid pointer\n    |         inside `std::slice::from_raw_parts::<()>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:19:33\n+  ::: $DIR/forbidden_slices.rs:20:33\n    |\n LL | pub static S1: &[()] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                 ------------------------------ inside `S1` at $DIR/forbidden_slices.rs:19:33\n+   |                                 ------------------------------ inside `S1` at $DIR/forbidden_slices.rs:20:33\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n@@ -35,13 +35,13 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: ALLOC_ID has size 4, so pointer to 8 bytes starting at offset 0 is out-of-bounds\n    |         inside `std::slice::from_raw_parts::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:22:34\n+  ::: $DIR/forbidden_slices.rs:23:34\n    |\n LL | pub static S2: &[u32] = unsafe { from_raw_parts(&D0, 2) };\n-   |                                  ---------------------- inside `S2` at $DIR/forbidden_slices.rs:22:34\n+   |                                  ---------------------- inside `S2` at $DIR/forbidden_slices.rs:23:34\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:25:1\n+  --> $DIR/forbidden_slices.rs:26:1\n    |\n LL | pub static S4: &[u8] = unsafe { from_raw_parts((&D1) as *const _ as _, 1) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>[0]: encountered uninitialized bytes\n@@ -52,7 +52,7 @@ LL | pub static S4: &[u8] = unsafe { from_raw_parts((&D1) as *const _ as _, 1) }\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:27:1\n+  --> $DIR/forbidden_slices.rs:28:1\n    |\n LL | pub static S5: &[u8] = unsafe { from_raw_parts((&D3) as *const _ as _, size_of::<&u32>()) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>: encountered a pointer, but expected plain (non-pointer) bytes\n@@ -63,7 +63,7 @@ LL | pub static S5: &[u8] = unsafe { from_raw_parts((&D3) as *const _ as _, size\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:29:1\n+  --> $DIR/forbidden_slices.rs:30:1\n    |\n LL | pub static S6: &[bool] = unsafe { from_raw_parts((&D0) as *const _ as _, 4) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>[0]: encountered 0x11, but expected a boolean\n@@ -74,7 +74,7 @@ LL | pub static S6: &[bool] = unsafe { from_raw_parts((&D0) as *const _ as _, 4)\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:32:1\n+  --> $DIR/forbidden_slices.rs:33:1\n    |\n LL | / pub static S7: &[u16] = unsafe {\n LL | |\n@@ -98,10 +98,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: ALLOC_ID has size 8, so pointer to 8 bytes starting at offset 1 is out-of-bounds\n    |         inside `std::slice::from_raw_parts::<u64>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:43:5\n+  ::: $DIR/forbidden_slices.rs:44:5\n    |\n LL |     from_raw_parts(ptr, 1)\n-   |     ---------------------- inside `S8` at $DIR/forbidden_slices.rs:43:5\n+   |     ---------------------- inside `S8` at $DIR/forbidden_slices.rs:44:5\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -117,10 +117,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:46:34\n+  ::: $DIR/forbidden_slices.rs:47:34\n    |\n LL | pub static R0: &[u32] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                  ---------------------------------------- inside `R0` at $DIR/forbidden_slices.rs:46:34\n+   |                                  ---------------------------------------- inside `R0` at $DIR/forbidden_slices.rs:47:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -136,10 +136,10 @@ LL |         assert!(0 < pointee_size && pointee_size <= isize::MAX as usize);\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<()>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:47:33\n+  ::: $DIR/forbidden_slices.rs:48:33\n    |\n LL | pub static R1: &[()] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                 ---------------------------------------- inside `R1` at $DIR/forbidden_slices.rs:47:33\n+   |                                 ---------------------------------------- inside `R1` at $DIR/forbidden_slices.rs:48:33\n    |\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -155,13 +155,13 @@ LL |         unsafe { intrinsics::offset(self, count) }\n LL |         unsafe { self.offset(count as isize) }\n    |                  --------------------------- inside `ptr::const_ptr::<impl *const u32>::add` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:50:25\n+  ::: $DIR/forbidden_slices.rs:51:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(2))\n-   |                         ---------- inside `R2` at $DIR/forbidden_slices.rs:50:25\n+   |                         ---------- inside `R2` at $DIR/forbidden_slices.rs:51:25\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:52:1\n+  --> $DIR/forbidden_slices.rs:53:1\n    |\n LL | / pub static R4: &[u8] = unsafe {\n LL | |\n@@ -176,7 +176,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:57:1\n+  --> $DIR/forbidden_slices.rs:58:1\n    |\n LL | / pub static R5: &[u8] = unsafe {\n LL | |\n@@ -191,7 +191,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:62:1\n+  --> $DIR/forbidden_slices.rs:63:1\n    |\n LL | / pub static R6: &[bool] = unsafe {\n LL | |\n@@ -206,7 +206,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:67:1\n+  --> $DIR/forbidden_slices.rs:68:1\n    |\n LL | / pub static R7: &[u16] = unsafe {\n LL | |\n@@ -232,10 +232,10 @@ LL |         unsafe { intrinsics::offset(self, count) }\n LL |         unsafe { self.offset(count as isize) }\n    |                  --------------------------- inside `ptr::const_ptr::<impl *const u64>::add` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:74:25\n+  ::: $DIR/forbidden_slices.rs:75:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(1))\n-   |                         ---------- inside `R8` at $DIR/forbidden_slices.rs:74:25\n+   |                         ---------- inside `R8` at $DIR/forbidden_slices.rs:75:25\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -251,10 +251,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:79:34\n+  ::: $DIR/forbidden_slices.rs:80:34\n    |\n LL | pub static R9: &[u32] = unsafe { from_ptr_range(&D0..(&D0 as *const u32).add(1)) };\n-   |                                  ----------------------------------------------- inside `R9` at $DIR/forbidden_slices.rs:79:34\n+   |                                  ----------------------------------------------- inside `R9` at $DIR/forbidden_slices.rs:80:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -270,10 +270,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:80:35\n+  ::: $DIR/forbidden_slices.rs:81:35\n    |\n LL | pub static R10: &[u32] = unsafe { from_ptr_range(&D0..&D0) };\n-   |                                   ------------------------ inside `R10` at $DIR/forbidden_slices.rs:80:35\n+   |                                   ------------------------ inside `R10` at $DIR/forbidden_slices.rs:81:35\n \n error: aborting due to 18 previous errors\n "}, {"sha": "4465da454687fa398589aa2d296ba1a70a823e2d", "filename": "src/test/ui/const-ptr/forbidden_slices.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.rs?ref=3a2bb782289a9cc34d4b4f7ed8e0b7a5c3bbf486", "patch": "@@ -1,5 +1,6 @@\n // stderr-per-bitwidth\n // normalize-stderr-test \"alloc[0-9]+\" -> \"ALLOC_ID\"\n+// normalize-stderr-test \"a[0-9]+\\+0x\" -> \"A_ID+0x\"\n // error-pattern: could not evaluate static initializer\n #![feature(\n     const_slice_from_raw_parts,"}]}