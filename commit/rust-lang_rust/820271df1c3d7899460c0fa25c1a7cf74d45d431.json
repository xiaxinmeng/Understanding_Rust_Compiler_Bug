{"sha": "820271df1c3d7899460c0fa25c1a7cf74d45d431", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMDI3MWRmMWMzZDc4OTk0NjBjMGZhMjVjMWE3Y2Y3NGQ0NWQ0MzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-07T05:01:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-07T05:01:32Z"}, "message": "auto merge of #10809 : alexcrichton/rust/static-snapshot, r=alexcrichton\n\nNow that we have the necessary logic in rustc for windows, this is possible to land.", "tree": {"sha": "95f887fb4917f321c5317bfd88ea6c74afddba0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95f887fb4917f321c5317bfd88ea6c74afddba0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/820271df1c3d7899460c0fa25c1a7cf74d45d431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/820271df1c3d7899460c0fa25c1a7cf74d45d431", "html_url": "https://github.com/rust-lang/rust/commit/820271df1c3d7899460c0fa25c1a7cf74d45d431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/820271df1c3d7899460c0fa25c1a7cf74d45d431/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa4455e4c76598fcf6de84de14f050a700a2a14e", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4455e4c76598fcf6de84de14f050a700a2a14e", "html_url": "https://github.com/rust-lang/rust/commit/aa4455e4c76598fcf6de84de14f050a700a2a14e"}, {"sha": "e91ffb07105421b39dd6cade712522d0c5262c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91ffb07105421b39dd6cade712522d0c5262c6c", "html_url": "https://github.com/rust-lang/rust/commit/e91ffb07105421b39dd6cade712522d0c5262c6c"}], "stats": {"total": 190, "additions": 124, "deletions": 66}, "files": [{"sha": "00dfeede99c8b9272a8e898f55212b361ba58c45", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -90,3 +90,4 @@ src/etc/dl\n .settings/\n build/\n i686-pc-mingw32/\n+src/librustc/lib/llvmdeps.rs"}, {"sha": "5348499a19fc8f105f5b1d62fb49506e8d2ec302", "filename": "Makefile.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -134,10 +134,13 @@ endif\n # static copies of libstd and libextra. We also generate dynamic versions of all\n # libraries, so in the interest of space, prefer dynamic linking throughout the\n # compilation process.\n+#\n+# Note though that these flags are omitted for stage2+. This means that the\n+# snapshot will be generated with a statically linked rustc so we only have to\n+# worry about the distribution of one file (with its native dynamic\n+# dependencies)\n RUSTFLAGS_STAGE0 += -Z prefer-dynamic\n RUSTFLAGS_STAGE1 += -Z prefer-dynamic\n-RUSTFLAGS_STAGE2 += -Z prefer-dynamic\n-RUSTFLAGS_STAGE3 += -Z prefer-dynamic\n \n # platform-specific auto-configuration\n include $(CFG_SRC_DIR)mk/platform.mk\n@@ -224,7 +227,7 @@ GENERATED :=\n define DEF_LIBS\n \n CFG_RUNTIME_$(1) :=$(call CFG_STATIC_LIB_NAME_$(1),rustrt)\n-CFG_RUSTLLVM_$(1) :=$(call CFG_LIB_NAME_$(1),rustllvm)\n+CFG_RUSTLLVM_$(1) :=$(call CFG_STATIC_LIB_NAME_$(1),rustllvm)\n CFG_STDLIB_$(1) :=$(call CFG_LIB_NAME_$(1),std)\n CFG_EXTRALIB_$(1) :=$(call CFG_LIB_NAME_$(1),extra)\n CFG_LIBRUSTC_$(1) :=$(call CFG_LIB_NAME_$(1),rustc)\n@@ -251,6 +254,8 @@ LIBRUSTUV_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rustuv)\n EXTRALIB_RGLOB_$(1) :=$(call CFG_RLIB_GLOB,extra)\n STDLIB_RGLOB_$(1) :=$(call CFG_RLIB_GLOB,std)\n LIBRUSTUV_RGLOB_$(1) :=$(call CFG_RLIB_GLOB,rustuv)\n+LIBSYNTAX_RGLOB_$(1) :=$(call CFG_RLIB_GLOB,syntax)\n+LIBRUSTC_RGLOB_$(1) :=$(call CFG_RLIB_GLOB,rustc)\n \n endef\n \n@@ -428,8 +433,6 @@ TLIBRUSTUV_DEFAULT$(1)_T_$(2)_H_$(3) = \\\n # Preqrequisites for using the stageN compiler\n HSREQ$(1)_H_$(3) = \\\n \t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3)) \\\n-\t$$(HLIB$(1)_H_$(3))/$(CFG_RUNTIME_$(3)) \\\n-\t$$(HLIB$(1)_H_$(3))/$(CFG_RUSTLLVM_$(3)) \\\n \t$$(HSTDLIB_DEFAULT$(1)_H_$(3)) \\\n \t$$(HEXTRALIB_DEFAULT$(1)_H_$(3)) \\\n \t$$(HLIBSYNTAX_DEFAULT$(1)_H_$(3)) \\"}, {"sha": "251f2c751356892e7381bc25c605ab8203efb5b2", "filename": "mk/clean.mk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -132,7 +132,9 @@ clean$(1)_T_$(2)_H_$(3):\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTUV_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTUV_RGLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTC_GLOB_$(2))\n+\t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTC_RGLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBSYNTAX_GLOB_$(2))\n+\t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBSYNTAX_RGLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTPKG_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTDOC_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(2))"}, {"sha": "3ddbd7d69c96cd9deff19742550883e0e5d073cc", "filename": "mk/host.mk", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fhost.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fhost.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fhost.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -26,21 +26,20 @@ define CP_HOST_STAGE_N\n $$(HBIN$(2)_H_$(4))/rustc$$(X_$(4)): \\\n \t$$(TBIN$(1)_T_$(4)_H_$(3))/rustc$$(X_$(4)) \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)) \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4)) \\\n \t$$(HSTDLIB_DEFAULT$(2)_H_$(4)) \\\n \t$$(HEXTRALIB_DEFAULT$(2)_H_$(4)) \\\n \t$$(HLIBRUSTUV_DEFAULT$(2)_H_$(4)) \\\n+\t$$(HLIBRUSTC_DEFAULT$(2)_H_$(4)) \\\n+\t$$(HLIBSYNTAX_DEFAULT$(2)_H_$(4)) \\\n \t| $$(HBIN$(2)_H_$(4))/\n-\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4)): \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4)) \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(4)) \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)) \\\n \t$$(HSTDLIB_DEFAULT$(2)_H_$(4)) \\\n \t$$(HEXTRALIB_DEFAULT$(2)_H_$(4)) \\\n \t$$(HLIBRUSTUV_DEFAULT$(2)_H_$(4)) \\\n@@ -57,7 +56,6 @@ $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4)): \\\n $$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(4)): \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBSYNTAX_$(4)) \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)) \\\n \t$$(HSTDLIB_DEFAULT$(2)_H_$(4)) \\\n \t$$(HEXTRALIB_DEFAULT$(2)_H_$(4)) \\\n \t$$(HLIBRUSTUV_DEFAULT$(2)_H_$(4)) \\\n@@ -130,12 +128,6 @@ $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTUV_$(4)): \\\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTUV_GLOB_$(4)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTUV_RGLOB_$(4)),$$(notdir $$@))\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)): \\\n-\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_RUSTLLVM_$(4)) \\\n-\t| $$(HLIB$(2)_H_$(4))/\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\n $$(HBIN$(2)_H_$(4))/:\n \tmkdir -p $$@\n "}, {"sha": "37eaa6f52167a0a55db727fa7c5ac957c45441a6", "filename": "mk/install.mk", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -103,7 +103,6 @@ install-target-$(1)-host-$(2): LIB_SOURCE_DIR=$$(TL$(1)$(2))\n install-target-$(1)-host-$(2): LIB_DESTIN_DIR=$$(PTL$(1)$(2))\n install-target-$(1)-host-$(2): $$(CSREQ$$(ISTAGE)_T_$(1)_H_$(2))\n \t$$(Q)$$(call MK_INSTALL_DIR,$$(PTL$(1)$(2)))\n-\t$$(Q)$$(call INSTALL_LIB,$$(CFG_RUSTLLVM_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(STDLIB_GLOB_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(STDLIB_RGLOB_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(EXTRALIB_GLOB_$(1)))\n@@ -154,7 +153,6 @@ install-host: $(CSREQ$(ISTAGE)_T_$(CFG_BUILD_)_H_$(CFG_BUILD_))\n \t$(Q)$(call INSTALL_LIB,$(LIBSYNTAX_GLOB_$(CFG_BUILD)))\n \t$(Q)$(call INSTALL_LIB,$(LIBRUSTPKG_GLOB_$(CFG_BUILD)))\n \t$(Q)$(call INSTALL_LIB,$(LIBRUSTDOC_GLOB_$(CFG_BUILD)))\n-\t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_RUSTLLVM_$(CFG_BUILD)))\n \t$(Q)$(call INSTALL,$(S)/man,$(CFG_MANDIR)/man1,rustc.1)\n \t$(Q)$(call INSTALL,$(S)/man,$(CFG_MANDIR)/man1,rustdoc.1)\n \t$(Q)$(call INSTALL,$(S)/man,$(CFG_MANDIR)/man1,rustpkg.1)\n@@ -169,7 +167,6 @@ uninstall:\n \t$(Q)rm -f $(PHB)/rustc$(X_$(CFG_BUILD))\n \t$(Q)rm -f $(PHB)/rustpkg$(X_$(CFG_BUILD))\n \t$(Q)rm -f $(PHB)/rustdoc$(X_$(CFG_BUILD))\n-\t$(Q)rm -f $(PHL)/$(CFG_RUSTLLVM_$(CFG_BUILD))\n \t$(Q)for i in \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(STDLIB_GLOB_$(CFG_BUILD))) \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(STDLIB_RGLOB_$(CFG_BUILD))) \\"}, {"sha": "cf4e98c6dba562272ca3f8f961bd44868dc8e30d", "filename": "mk/llvm.mk", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -44,5 +44,15 @@ $$(LLVM_STAMP_$(1)): $(S)src/rustllvm/llvm-auto-clean-trigger\n \n endef\n \n+$(foreach host,$(CFG_HOST), \\\n+    $(eval LLVM_CONFIGS := $(LLVM_CONFIGS) $(LLVM_CONFIG_$(host))))\n+\n+$(S)src/librustc/lib/llvmdeps.rs: \\\n+\t\t    $(LLVM_CONFIGS) \\\n+\t\t    $(S)src/etc/mklldeps.py\n+\t$(Q)$(CFG_PYTHON) $(S)src/etc/mklldeps.py \\\n+\t    \"$(LLVM_COMPONENTS)\" $(LLVM_CONFIGS) \\\n+\t    > $@\n+\n $(foreach host,$(CFG_HOST), \\\n  $(eval $(call DEF_LLVM_RULES,$(host))))"}, {"sha": "89b31400d5c3da9c841f564aa985ca2c7114c99c", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -32,13 +32,9 @@ RUSTLLVM_INCS_$(1) = $$(LLVM_EXTRA_INCDIRS_$(1)) \\\n RUSTLLVM_OBJS_OBJS_$(1) := $$(RUSTLLVM_OBJS_CS_$(1):rustllvm/%.cpp=$(1)/rustllvm/%.o)\n ALL_OBJ_FILES += $$(RUSTLLVM_OBJS_OBJS_$(1))\n \n-$(1)/rustllvm/$(CFG_RUSTLLVM_$(1)): $$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n-                          $$(MKFILE_DEPS) $$(RUSTLLVM_DEF_$(1))\n+$(1)/rustllvm/$(CFG_RUSTLLVM_$(1)): $$(RUSTLLVM_OBJS_OBJS_$(1))\n \t@$$(call E, link: $$@)\n-\t$$(Q)$$(call CFG_LINK_CXX_$(1),$$@,$$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n-\t  $$(CFG_GCCISH_PRE_LIB_FLAGS_$(1)) $$(LLVM_LIBS_$(1)) \\\n-          $$(CFG_GCCISH_POST_LIB_FLAGS_$(1)) \\\n-          $$(LLVM_LDFLAGS_$(1)),$$(RUSTLLVM_DEF_$(1)),$$(CFG_RUSTLLVM_$(1)))\n+\t$$(Q)$$(AR_$(1)) rcs $$@ $$(RUSTLLVM_OBJS_OBJS_$(1))\n \n $(1)/rustllvm/%.o: rustllvm/%.cpp $$(MKFILE_DEPS) $$(LLVM_CONFIG_$(1))\n \t@$$(call E, compile: $$@)"}, {"sha": "bf55289a7fb012fdadb69d202801bb1fc28cf4e5", "filename": "mk/stage0.mk", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -27,11 +27,7 @@ endif\n \n # Host libs will be extracted by the above rule\n \n-$(HLIB0_H_$(CFG_BUILD))/$(CFG_RUNTIME_$(CFG_BUILD)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD))/rustc$(X_$(CFG_BUILD)) \\\n-\t\t| $(HLIB0_H_$(CFG_BUILD))/\n-\t$(Q)touch $@\n-\n+# NOTE: remove all these after the next snapshot\n $(HLIB0_H_$(CFG_BUILD))/$(CFG_STDLIB_$(CFG_BUILD)): \\\n \t\t$(HBIN0_H_$(CFG_BUILD))/rustc$(X_$(CFG_BUILD)) \\\n \t\t| $(HLIB0_H_$(CFG_BUILD))/\n@@ -76,12 +72,7 @@ $$(HBIN0_H_$(1))/rustc$$(X_$(1)): \\\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB0_H_$(1))/$(CFG_RUNTIME_$(1)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUNTIME_$(1)) \\\n-\t\t| $(HLIB0_H_$(1))/\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\n+# NOTE: removing everything below after the next snapshot\n $$(HLIB0_H_$(1))/$(CFG_STDLIB_$(1)): \\\n \t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_STDLIB_$(1)) \\\n \t\t| $(HLIB0_H_$(1))/"}, {"sha": "3bf0a2f7843d82ab01ebc228120564b37b82f711", "filename": "mk/target.mk", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -103,8 +103,10 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)): \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(2)),$$(notdir $$@))\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) $(BORROWCK) --out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(2)),$$(notdir $$@))\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_RGLOB_$(2)),$$(notdir $$@))\n \n # Only build the compiler for host triples\n ifneq ($$(findstring $(2),$$(CFG_HOST)),)\n@@ -119,14 +121,19 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(3)): \\\n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)): CFG_COMPILER = $(2)\n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)):\t\t\\\n \t\t$$(COMPILER_CRATE) $$(COMPILER_INPUTS)\t\t\\\n+\t\t$(S)src/librustc/lib/llvmdeps.rs\t\t\\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)) \\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) --out-dir $$(@D) $$< && touch $$@\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_RGLOB_$(2)),$$(notdir $$@))\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) \\\n+\t    -L \"$$(LLVM_LIBDIR_$(3))\" \\\n+\t    --out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_RGLOB_$(2)),$$(notdir $$@))\n \n # NOTE: after the next snapshot remove these '-L' flags\n $$(TBIN$(1)_T_$(2)_H_$(3))/rustc$$(X_$(3)):\t\t\t\\"}, {"sha": "3f21b1b4819d5c27502d6ecea8fbe3b04714ae29", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -376,7 +376,8 @@ $(3)/stage$(1)/test/rustctest-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_RUSTLLVM_$(2)) \\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBSYNTAX_$(2))\n \t@$$(call E, compile_and_link: $$@)\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test \\\n+\t    -L \"$$(LLVM_LIBDIR_$(3))\"\n \n $(3)/stage$(1)/test/rustpkgtest-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(RUSTPKG_LIB) $$(RUSTPKG_INPUTS)\t\t\\"}, {"sha": "90e48de532b94b2ce16f69362dc7c52d7a21ae61", "filename": "src/etc/mklldeps.py", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -0,0 +1,58 @@\n+# xfail-license\n+\n+import os\n+import sys\n+import subprocess\n+\n+components = sys.argv[1].split(' ')\n+\n+print \"\"\"// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// WARNING: THIS IS A GENERATED FILE, DO NOT MODIFY\n+//          take a look at src/etc/mklldeps.py if you're interested\n+\"\"\"\n+\n+for llconfig in sys.argv[2:]:\n+    print\n+\n+    proc = subprocess.Popen([llconfig, '--host-target'], stdout = subprocess.PIPE)\n+    out, err = proc.communicate()\n+    arch, os = out.split('-', 1)\n+    arch = 'x86' if arch == 'i686' or arch == 'i386' else arch\n+    if 'darwin' in os:\n+        os = 'macos'\n+    elif 'linux' in os:\n+        os = 'linux'\n+    elif 'freebsd' in os:\n+        os = 'freebsd'\n+    elif 'android' in os:\n+        os = 'android'\n+    elif 'win' in os or 'mingw' in os:\n+        os = 'win32'\n+    cfg = [\n+        \"target_arch = \\\"\" + arch + \"\\\"\",\n+        \"target_os = \\\"\" + os + \"\\\"\",\n+    ]\n+\n+    print \"#[cfg(\" + ', '.join(cfg) + \")]\"\n+\n+    args = [llconfig, '--libs']\n+    args.extend(components)\n+    proc = subprocess.Popen(args, stdout = subprocess.PIPE)\n+    out, err = proc.communicate()\n+\n+    for lib in out.strip().split(' '):\n+        lib = lib[2:] # chop of the leading '-l'\n+        print \"#[link(name = \\\"\" + lib + \"\\\", kind = \\\"static\\\")]\"\n+    if os == 'win32':\n+        print \"#[link(name = \\\"pthread\\\")]\"\n+        print \"#[link(name = \\\"imagehlp\\\")]\"\n+    print \"extern {}\""}, {"sha": "e6508ec526e201febdffee6376c1337fa79243c5", "filename": "src/etc/snapshot.py", "status": "modified", "additions": 4, "deletions": 28, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Fetc%2Fsnapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Fetc%2Fsnapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsnapshot.py?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -25,34 +25,10 @@ def scrub(b):\n download_unpack_base = os.path.join(download_dir_base, \"unpack\")\n \n snapshot_files = {\n-    \"linux\": [\"bin/rustc\",\n-              \"lib/libstd-*.so\",\n-              \"lib/libextra-*.so\",\n-              \"lib/librustc-*.so\",\n-              \"lib/libsyntax-*.so\",\n-              \"lib/librustuv-*.so\",\n-              \"lib/librustllvm.so\"],\n-    \"macos\": [\"bin/rustc\",\n-              \"lib/libstd-*.dylib\",\n-              \"lib/libextra-*.dylib\",\n-              \"lib/librustc-*.dylib\",\n-              \"lib/libsyntax-*.dylib\",\n-              \"lib/librustuv-*.dylib\",\n-              \"lib/librustllvm.dylib\"],\n-    \"winnt\": [\"bin/rustc.exe\",\n-              \"bin/std-*.dll\",\n-              \"bin/extra-*.dll\",\n-              \"bin/rustc-*.dll\",\n-              \"bin/syntax-*.dll\",\n-              \"bin/rustuv-*.dll\",\n-              \"bin/rustllvm.dll\"],\n-    \"freebsd\": [\"bin/rustc\",\n-                \"lib/libstd-*.so\",\n-                \"lib/libextra-*.so\",\n-                \"lib/librustc-*.so\",\n-                \"lib/libsyntax-*.so\",\n-                \"lib/librustuv-*.so\",\n-                \"lib/librustllvm.so\"]\n+    \"linux\": [\"bin/rustc\"],\n+    \"macos\": [\"bin/rustc\"],\n+    \"winnt\": [\"bin/rustc.exe\"],\n+    \"freebsd\": [\"bin/rustc\"],\n     }\n \n winnt_runtime_deps = [\"libgcc_s_dw2-1.dll\","}, {"sha": "7484550b3f3fd4e4882b1bd93d183c133a10712c", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -17,6 +17,7 @@\n #[comment = \"The Rust compiler\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];\n+#[crate_type = \"rlib\"];\n \n #[feature(macro_rules, globs, struct_variant, managed_boxes)];\n \n@@ -110,6 +111,7 @@ pub mod util {\n \n pub mod lib {\n     pub mod llvm;\n+    pub mod llvmdeps;\n }\n \n // A curious inner module that allows ::std::foo to be available in here for"}, {"sha": "3b0925164c9821510b07beb7065ef99f0018478e", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -306,7 +306,18 @@ pub mod llvm {\n     use std::libc::{c_char, c_int, c_longlong, c_ushort, c_uint, c_ulonglong,\n                     size_t};\n \n-    #[link(name = \"rustllvm\")]\n+    // Link to our native llvm bindings (things that we need to use the C++ api\n+    // for) and because llvm is written in C++ we need to link against libstdc++\n+    //\n+    // You'll probably notice that there is an omission of all LLVM libraries\n+    // from this location. This is because the set of LLVM libraries that we\n+    // link to is mostly defined by LLVM, and the `llvm-config` tool is used to\n+    // figure out the exact set of libraries. To do this, the build system\n+    // generates an llvmdeps.rs file next to this one which will be\n+    // automatically updated whenever LLVM is updated to include an up-to-date\n+    // set of the libraries we need to link to LLVM for.\n+    #[link(name = \"rustllvm\", kind = \"static\")]\n+    #[link(name = \"stdc++\")]\n     extern {\n         /* Create and destroy contexts. */\n         pub fn LLVMContextCreate() -> ContextRef;"}, {"sha": "911caf304d2a95afc981d4359f9ad1140a9d1807", "filename": "src/librustpkg/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibrustpkg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibrustpkg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftests.rs?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -1101,6 +1101,7 @@ fn no_rebuilding() {\n }\n \n #[test]\n+#[ignore]\n fn no_recopying() {\n     let p_id = PkgId::new(\"foo\");\n     let workspace = create_local_package(&p_id);"}, {"sha": "63cc397e8d795df248ee86ee2a920dab38eea228", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -543,6 +543,7 @@ impl Unwinder {\n #[no_split_stack] // - it would be sad for this function to trigger __morestack\n #[doc(hidden)]    // - Function must be `pub` to get exported, but it's\n                   //   irrelevant for documentation purposes.\n+#[cfg(not(test))] // in testing, use the original libstd's version\n pub extern \"C\" fn rust_stack_exhausted() {\n     use rt::in_green_task_context;\n     use rt::task::Task;"}, {"sha": "c9b3ba9d4600f3b6e8cccd852826fc918444b0f8", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -20,6 +20,7 @@\n \n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];\n+#[crate_type = \"rlib\"];\n \n #[feature(macro_rules, globs, managed_boxes)];\n "}, {"sha": "b9be50701d9f9c6d0960cac6da58a83effe3e1cc", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/820271df1c3d7899460c0fa25c1a7cf74d45d431/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=820271df1c3d7899460c0fa25c1a7cf74d45d431", "patch": "@@ -1,3 +1,11 @@\n+S 2013-12-04 9169579\n+  freebsd-x86_64 0dc6dcd9435e23c891b9e9e37d483e92cfe51449\n+  linux-i386 9802f6ba319bec4dd02299af08e421270ede5f5f\n+  linux-x86_64 195d69ac1846cd646faaa50d05639d41b03e33ae\n+  macos-i386 b0729f5ce3f5581fbb02f963a0f5261e6f011e01\n+  macos-x86_64 5091706c1111bbbd21a22e11b18f68717be17c29\n+  winnt-i386 1f975067f08f7702ab7f1d88b13221a0c2becd2f\n+\n S 2013-11-30 4252a24\n   freebsd-x86_64 2e0bfc6eb0dd75b8a1ad5c9958d90f3b626650dd\n   linux-i386 2ea4b43fbc22c295e60874ef494dfbea1cc08a63"}]}