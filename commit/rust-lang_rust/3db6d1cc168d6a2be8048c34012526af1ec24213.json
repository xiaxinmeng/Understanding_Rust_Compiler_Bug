{"sha": "3db6d1cc168d6a2be8048c34012526af1ec24213", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYjZkMWNjMTY4ZDZhMmJlODA0OGMzNDAxMjUyNmFmMWVjMjQyMTM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-03-20T15:36:57Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-03-20T17:56:25Z"}, "message": "For issue 53957: revise unit tests to focus on underlying bug of 23076.\n\nNamely, this version focuses on the end-to-end behavior that the attempt to\ncreate the UDP binding will fail, regardless of the semantics of how particular\nDNS servers handle junk inputs.\n\n(I spent some time trying to create a second more-focused test that would\nsidestep the DNS resolution, but this is not possible without more invasive\nchanges to the internal infrastructure of `ToSocketAddrs` and what not. It is\nnot worth it.)", "tree": {"sha": "ff07210a83fe35de3f04674919728749c99cd3e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff07210a83fe35de3f04674919728749c99cd3e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3db6d1cc168d6a2be8048c34012526af1ec24213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3db6d1cc168d6a2be8048c34012526af1ec24213", "html_url": "https://github.com/rust-lang/rust/commit/3db6d1cc168d6a2be8048c34012526af1ec24213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3db6d1cc168d6a2be8048c34012526af1ec24213/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4c675c476c18b1a11041193f2f59d695b126bc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c675c476c18b1a11041193f2f59d695b126bc8", "html_url": "https://github.com/rust-lang/rust/commit/f4c675c476c18b1a11041193f2f59d695b126bc8"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "de6360cf020f5740cd3a31a5ff80a5d6748be1da", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3db6d1cc168d6a2be8048c34012526af1ec24213/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3db6d1cc168d6a2be8048c34012526af1ec24213/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=3db6d1cc168d6a2be8048c34012526af1ec24213", "patch": "@@ -989,11 +989,26 @@ mod tests {\n         // s has been moved into the tsa call\n     }\n \n-    // FIXME: figure out why this fails on openbsd and fix it\n     #[test]\n-    #[cfg(not(any(windows, target_os = \"openbsd\")))]\n-    fn to_socket_addr_str_bad() {\n-        assert!(tsa(\"1200::AB00:1234::2552:7777:1313:34300\").is_err());\n+    fn bind_udp_socket_bad() {\n+        // rust-lang/rust#53957: This is a regression test for a parsing problem\n+        // discovered as part of issue rust-lang/rust#23076, where we were\n+        // incorrectly parsing invalid input and then that would result in a\n+        // successful `UdpSocket` binding when we would expect failure.\n+        //\n+        // At one time, this test was written as a call to `tsa` with\n+        // INPUT_23076. However, that structure yields an unreliable test,\n+        // because it ends up passing junk input to the DNS server, and some DNS\n+        // servers will respond with `Ok` to such input, with the ip address of\n+        // the DNS server itself.\n+        //\n+        // This form of the test is more robust: even when the DNS server\n+        // returns its own address, it is still an error to bind a UDP socket to\n+        // a non-local address, and so we still get an error here in that case.\n+\n+        const INPUT_23076: &'static str = \"1200::AB00:1234::2552:7777:1313:34300\";\n+\n+        assert!(crate::net::UdpSocket::bind(INPUT_23076).is_err())\n     }\n \n     #[test]"}]}