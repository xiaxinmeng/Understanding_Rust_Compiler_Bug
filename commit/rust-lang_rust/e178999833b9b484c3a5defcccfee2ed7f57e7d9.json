{"sha": "e178999833b9b484c3a5defcccfee2ed7f57e7d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNzg5OTk4MzNiOWI0ODRjM2E1ZGVmY2NjZmVlMmVkN2Y1N2U3ZDk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-28T23:05:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-28T23:06:25Z"}, "message": "core: More magic to make core build with --test", "tree": {"sha": "c9afa431edfa2705394cb7d39e382acac7990b4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9afa431edfa2705394cb7d39e382acac7990b4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e178999833b9b484c3a5defcccfee2ed7f57e7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e178999833b9b484c3a5defcccfee2ed7f57e7d9", "html_url": "https://github.com/rust-lang/rust/commit/e178999833b9b484c3a5defcccfee2ed7f57e7d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e178999833b9b484c3a5defcccfee2ed7f57e7d9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2df03bfdca16c23aaa7c3e10a876924edcd18469", "url": "https://api.github.com/repos/rust-lang/rust/commits/2df03bfdca16c23aaa7c3e10a876924edcd18469", "html_url": "https://github.com/rust-lang/rust/commit/2df03bfdca16c23aaa7c3e10a876924edcd18469"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "448f800f566004d160ef70517ca22f38e1fb4c70", "filename": "src/libcore/core.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rs?ref=e178999833b9b484c3a5defcccfee2ed7f57e7d9", "patch": "@@ -60,6 +60,17 @@ export add, sub, mul, div, modulo, neg, bitand, bitor, bitxor;\n #[cfg(notest)]\n export shl, shr, index;\n \n+#[cfg(test)]\n+use coreops(name = \"core\", vers = \"0.3\");\n+\n+#[cfg(test)]\n+import coreops::ops::{const, copy, send, owned};\n+#[cfg(test)]\n+import coreops::ops::{add, sub, mul, div, modulo, neg, bitand, bitor, bitxor};\n+#[cfg(test)]\n+import coreops::ops::{shl, shr, index};\n+\n+\n // Export the log levels as global constants. Higher levels mean\n // more-verbosity. Error is the bottom level, default logging level is\n // warn-and-below."}, {"sha": "838eeee7dc4f60ea2064e00136ab3d303c79c51f", "filename": "src/libcore/dvec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fdvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fdvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdvec.rs?ref=e178999833b9b484c3a5defcccfee2ed7f57e7d9", "patch": "@@ -311,7 +311,7 @@ impl extensions<A:copy> for dvec<A> {\n     }\n }\n \n-impl extensions<A:copy> of ops::index<uint,A> for dvec<A> {\n+impl extensions<A:copy> of index<uint,A> for dvec<A> {\n     pure fn index(&&idx: uint) -> A {\n         self.get_elt(idx)\n     }"}, {"sha": "85de50c5a0f52df7efdcb31b6a960f62bb6825af", "filename": "src/libcore/str.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=e178999833b9b484c3a5defcccfee2ed7f57e7d9", "patch": "@@ -1918,7 +1918,8 @@ impl extensions of unique_str for ~str {\n     }\n }\n \n-impl extensions of ops::add<&str,~str> for ~str {\n+#[cfg(notest)]\n+impl extensions of add<&str,~str> for ~str {\n     #[inline(always)]\n     pure fn add(rhs: &str) -> ~str {\n         append(self, rhs)"}, {"sha": "9698e229d20dafe631c958a1569c1016db007409", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e178999833b9b484c3a5defcccfee2ed7f57e7d9/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=e178999833b9b484c3a5defcccfee2ed7f57e7d9", "patch": "@@ -1299,7 +1299,8 @@ impl extensions<T: copy> of vec_concat<T> for ~[T] {\n     }\n }\n \n-impl extensions<T: copy> of ops::add<&[const T],~[T]> for ~[T] {\n+#[cfg(notest)]\n+impl extensions<T: copy> of add<&[const T],~[T]> for ~[T] {\n     #[inline(always)]\n     pure fn add(rhs: &[const T]) -> ~[T] {\n         append(self, rhs)\n@@ -1313,7 +1314,7 @@ impl extensions<T: copy> of vec_concat<T> for ~[mut T] {\n     }\n }\n \n-impl extensions<T: copy> of ops::add<&[const T],~[mut T]> for ~[mut T] {\n+impl extensions<T: copy> of add<&[const T],~[mut T]> for ~[mut T] {\n     #[inline(always)]\n     pure fn add(rhs: &[const T]) -> ~[mut T] {\n         append_mut(self, rhs)"}]}