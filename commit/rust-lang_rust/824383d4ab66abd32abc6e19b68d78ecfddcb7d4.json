{"sha": "824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNDM4M2Q0YWI2NmFiZDMyYWJjNmUxOWI2OGQ3OGVjZmRkY2I3ZDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-09T08:39:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-09T08:39:59Z"}, "message": "Auto merge of #64237 - estebank:tweak-method-not-found, r=Centril\n\nGive method not found a primary span label", "tree": {"sha": "8ea8bb333a495505e1dfa426a6f4af534455c9b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ea8bb333a495505e1dfa426a6f4af534455c9b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "html_url": "https://github.com/rust-lang/rust/commit/824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e869133b9888dc5abde54f4f31cb797ed9c7874", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e869133b9888dc5abde54f4f31cb797ed9c7874", "html_url": "https://github.com/rust-lang/rust/commit/1e869133b9888dc5abde54f4f31cb797ed9c7874"}, {"sha": "5799fb419c96a9e6a170f7980f67fd9047fd6f96", "url": "https://api.github.com/repos/rust-lang/rust/commits/5799fb419c96a9e6a170f7980f67fd9047fd6f96", "html_url": "https://github.com/rust-lang/rust/commit/5799fb419c96a9e6a170f7980f67fd9047fd6f96"}], "stats": {"total": 199, "additions": 101, "deletions": 98}, "files": [{"sha": "3e45b1e98d4ec52e64e920c378b99d51b9516699", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -425,6 +425,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             \"private field\"\n                         };\n                         err.span_label(item_name.span, format!(\"{}, not a method\", field_kind));\n+                    } else if lev_candidate.is_none() && static_sources.is_empty() {\n+                        err.span_label(span, format!(\"{} not found in `{}`\", item_kind, ty_str));\n+                        self.tcx.sess.trait_methods_not_found.borrow_mut().insert(orig_span);\n                     }\n                 } else {\n                     err.span_label(span, format!(\"{} not found in `{}`\", item_kind, ty_str));"}, {"sha": "3e36f2402a99080af536df5b6006906af7d8abab", "filename": "src/test/ui/auto-ref-slice-plus-ref.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -12,7 +12,7 @@ error[E0599]: no method named `test` found for type `std::vec::Vec<{integer}>` i\n   --> $DIR/auto-ref-slice-plus-ref.rs:8:7\n    |\n LL |     a.test();\n-   |       ^^^^\n+   |       ^^^^ method not found in `std::vec::Vec<{integer}>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `test`, perhaps you need to implement it:\n@@ -22,7 +22,7 @@ error[E0599]: no method named `test` found for type `[{integer}; 1]` in the curr\n   --> $DIR/auto-ref-slice-plus-ref.rs:10:11\n    |\n LL |     ([1]).test();\n-   |           ^^^^\n+   |           ^^^^ method not found in `[{integer}; 1]`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `test`, perhaps you need to implement it:\n@@ -32,7 +32,7 @@ error[E0599]: no method named `test` found for type `&[{integer}; 1]` in the cur\n   --> $DIR/auto-ref-slice-plus-ref.rs:11:12\n    |\n LL |     (&[1]).test();\n-   |            ^^^^\n+   |            ^^^^ method not found in `&[{integer}; 1]`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `test`, perhaps you need to implement it:"}, {"sha": "4cab52e3e974ca40075bbd727de647df0454ee29", "filename": "src/test/ui/class-cast-to-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fclass-cast-to-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fclass-cast-to-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclass-cast-to-trait.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `eat` found for type `std::boxed::Box<dyn Noisy>`\n   --> $DIR/class-cast-to-trait.rs:53:8\n    |\n LL |   nyan.eat();\n-   |        ^^^\n+   |        ^^^ method not found in `std::boxed::Box<dyn Noisy>`\n \n error: aborting due to previous error\n "}, {"sha": "750d243480638ff5827a0735685eb719633c1b4d", "filename": "src/test/ui/coherence/coherence_inherent.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent.old.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `the_fn` found for type `&Lib::TheStruct` in the c\n   --> $DIR/coherence_inherent.rs:35:11\n    |\n LL |         s.the_fn();\n-   |           ^^^^^^\n+   |           ^^^^^^ method not found in `&Lib::TheStruct`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "750d243480638ff5827a0735685eb719633c1b4d", "filename": "src/test/ui/coherence/coherence_inherent.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent.re.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `the_fn` found for type `&Lib::TheStruct` in the c\n   --> $DIR/coherence_inherent.rs:35:11\n    |\n LL |         s.the_fn();\n-   |           ^^^^^^\n+   |           ^^^^^^ method not found in `&Lib::TheStruct`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "59166a46094069b99e665f07e7274b7252a64173", "filename": "src/test/ui/coherence/coherence_inherent_cc.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent_cc.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent_cc.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent_cc.old.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `the_fn` found for type `&coherence_inherent_cc_li\n   --> $DIR/coherence_inherent_cc.rs:26:11\n    |\n LL |         s.the_fn();\n-   |           ^^^^^^\n+   |           ^^^^^^ method not found in `&coherence_inherent_cc_lib::TheStruct`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "59166a46094069b99e665f07e7274b7252a64173", "filename": "src/test/ui/coherence/coherence_inherent_cc.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent_cc.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent_cc.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_inherent_cc.re.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `the_fn` found for type `&coherence_inherent_cc_li\n   --> $DIR/coherence_inherent_cc.rs:26:11\n    |\n LL |         s.the_fn();\n-   |           ^^^^^^\n+   |           ^^^^^^ method not found in `&coherence_inherent_cc_lib::TheStruct`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "47b090cb886783da762f369c8d999d49b9357e6c", "filename": "src/test/ui/const-generics/invalid-const-arg-for-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -11,7 +11,7 @@ LL | struct S;\n    | --------- method `f` not found for this\n ...\n LL |     S.f::<0>();\n-   |       ^\n+   |       ^ method not found in `S`\n \n error[E0107]: wrong number of const arguments: expected 0, found 1\n   --> $DIR/invalid-const-arg-for-type-param.rs:8:9"}, {"sha": "054bd0914d31c300fb5e638f8455d4ab47913d39", "filename": "src/test/ui/copy-a-resource.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcopy-a-resource.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fcopy-a-resource.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcopy-a-resource.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct Foo {\n    | ---------- method `clone` not found for this\n ...\n LL |     let _y = x.clone();\n-   |                ^^^^^\n+   |                ^^^^^ method not found in `Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:"}, {"sha": "038de80508ac23962fb97fdb7238994603160320", "filename": "src/test/ui/derives/derive-assoc-type-not-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct Bar<T: Foo> {\n    | ------------------ method `clone` not found for this\n ...\n LL |     Bar::<NotClone> { x: 1 }.clone();\n-   |                              ^^^^^\n+   |                              ^^^^^ method not found in `Bar<NotClone>`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n            `Bar<NotClone> : std::clone::Clone`"}, {"sha": "73571a375b5f64fad49e6d84ba553cbb452f74f4", "filename": "src/test/ui/error-festival.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ferror-festival.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ferror-festival.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-festival.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -24,7 +24,7 @@ error[E0599]: no method named `z` found for type `&str` in the current scope\n   --> $DIR/error-festival.rs:16:7\n    |\n LL |     x.z();\n-   |       ^\n+   |       ^ method not found in `&str`\n \n error[E0600]: cannot apply unary operator `!` to type `Question`\n   --> $DIR/error-festival.rs:19:5"}, {"sha": "8fa55d05bddcb02f9631345cda886b4c0621d9ce", "filename": "src/test/ui/hygiene/no_implicit_prelude.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -22,7 +22,7 @@ LL |     fn f() { ::bar::m!(); }\n    |              ------------ in this macro invocation\n ...\n LL |         ().clone()\n-   |            ^^^^^\n+   |            ^^^^^ method not found in `()`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "39e32522c7a761295111a30ca686c2d0ef09f8b9", "filename": "src/test/ui/hygiene/trait_items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL |     fn f() { ::baz::m!(); }\n    |              ------------ in this macro invocation\n ...\n LL |     pub macro m() { ().f() }\n-   |                        ^\n+   |                        ^ method not found in `()`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "644d26b34060c94e7c9384ff43b5ef43b83d9d92", "filename": "src/test/ui/impl-trait/bindings-opaque.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -10,19 +10,19 @@ error[E0599]: no method named `count_ones` found for type `impl std::marker::Cop\n   --> $DIR/bindings-opaque.rs:11:17\n    |\n LL |     let _ = FOO.count_ones();\n-   |                 ^^^^^^^^^^\n+   |                 ^^^^^^^^^^ method not found in `impl std::marker::Copy`\n \n error[E0599]: no method named `count_ones` found for type `impl std::marker::Copy` in the current scope\n   --> $DIR/bindings-opaque.rs:13:17\n    |\n LL |     let _ = BAR.count_ones();\n-   |                 ^^^^^^^^^^\n+   |                 ^^^^^^^^^^ method not found in `impl std::marker::Copy`\n \n error[E0599]: no method named `count_ones` found for type `impl std::marker::Copy` in the current scope\n   --> $DIR/bindings-opaque.rs:15:17\n    |\n LL |     let _ = foo.count_ones();\n-   |                 ^^^^^^^^^^\n+   |                 ^^^^^^^^^^ method not found in `impl std::marker::Copy`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "441191beaf588002d2def67298bb35f718a6c292", "filename": "src/test/ui/impl-trait/issues/issue-21659-show-relevant-trait-impls-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct Bar;\n    | ----------- method `foo` not found for this\n ...\n LL |     f1.foo(1usize);\n-   |        ^^^\n+   |        ^^^ method not found in `Bar`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `foo`, perhaps you need to implement it:"}, {"sha": "fb870d6c6f0764fa739c8fccce82ec7c2c5f024e", "filename": "src/test/ui/impl-trait/method-suggestion-no-duplication.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct Foo;\n    | ----------- method `is_empty` not found for this\n ...\n LL |     foo(|s| s.is_empty());\n-   |               ^^^^^^^^\n+   |               ^^^^^^^^ method not found in `Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `is_empty`, perhaps you need to implement it:"}, {"sha": "be8f3ab1b72e88b6c168fbff2d7de52b382bdc2b", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `method` found for type `u32` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:23:10\n    |\n LL |     1u32.method();\n-   |          ^^^^^^\n+   |          ^^^^^^ method not found in `u32`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following traits are implemented but not in scope, perhaps add a `use` for one of them:\n@@ -20,7 +20,7 @@ error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::box\n   --> $DIR/no-method-suggested-traits.rs:26:44\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&1u32)).method();\n-   |                                            ^^^^^^\n+   |                                            ^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&u32>>`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following traits are implemented but not in scope, perhaps add a `use` for one of them:\n@@ -38,7 +38,7 @@ error[E0599]: no method named `method` found for type `char` in the current scop\n   --> $DIR/no-method-suggested-traits.rs:30:9\n    |\n LL |     'a'.method();\n-   |         ^^^^^^\n+   |         ^^^^^^ method not found in `char`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:\n@@ -58,7 +58,7 @@ LL |         fn method(&self) {}\n    |            the method is available for `std::rc::Rc<std::rc::Rc<&mut std::boxed::Box<&char>>>` here\n ...\n LL |     std::rc::Rc::new(&mut Box::new(&'a')).method();\n-   |                                           ^^^^^^\n+   |                                           ^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&char>>`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:\n@@ -70,7 +70,7 @@ error[E0599]: no method named `method` found for type `i32` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:35:10\n    |\n LL |     1i32.method();\n-   |          ^^^^^^\n+   |          ^^^^^^ method not found in `i32`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:\n@@ -82,7 +82,7 @@ error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::box\n   --> $DIR/no-method-suggested-traits.rs:37:44\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&1i32)).method();\n-   |                                            ^^^^^^\n+   |                                            ^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&i32>>`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:\n@@ -97,7 +97,7 @@ LL | struct Foo;\n    | ----------- method `method` not found for this\n ...\n LL |     Foo.method();\n-   |         ^^^^^^\n+   |         ^^^^^^ method not found in `Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `method`, perhaps you need to implement one of them:\n@@ -110,7 +110,7 @@ error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::box\n   --> $DIR/no-method-suggested-traits.rs:42:43\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&Foo)).method();\n-   |                                           ^^^^^^\n+   |                                           ^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&Foo>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `method`, perhaps you need to implement one of them:\n@@ -123,7 +123,7 @@ error[E0599]: no method named `method2` found for type `u64` in the current scop\n   --> $DIR/no-method-suggested-traits.rs:45:10\n    |\n LL |     1u64.method2();\n-   |          ^^^^^^^\n+   |          ^^^^^^^ method not found in `u64`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method2`, perhaps you need to implement it:\n@@ -133,7 +133,7 @@ error[E0599]: no method named `method2` found for type `std::rc::Rc<&mut std::bo\n   --> $DIR/no-method-suggested-traits.rs:47:44\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&1u64)).method2();\n-   |                                            ^^^^^^^\n+   |                                            ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&u64>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method2`, perhaps you need to implement it:\n@@ -143,7 +143,7 @@ error[E0599]: no method named `method2` found for type `no_method_suggested_trai\n   --> $DIR/no-method-suggested-traits.rs:50:37\n    |\n LL |     no_method_suggested_traits::Foo.method2();\n-   |                                     ^^^^^^^\n+   |                                     ^^^^^^^ method not found in `no_method_suggested_traits::Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method2`, perhaps you need to implement it:\n@@ -153,7 +153,7 @@ error[E0599]: no method named `method2` found for type `std::rc::Rc<&mut std::bo\n   --> $DIR/no-method-suggested-traits.rs:52:71\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n-   |                                                                       ^^^^^^^\n+   |                                                                       ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method2`, perhaps you need to implement it:\n@@ -163,7 +163,7 @@ error[E0599]: no method named `method2` found for type `no_method_suggested_trai\n   --> $DIR/no-method-suggested-traits.rs:54:40\n    |\n LL |     no_method_suggested_traits::Bar::X.method2();\n-   |                                        ^^^^^^^\n+   |                                        ^^^^^^^ method not found in `no_method_suggested_traits::Bar`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method2`, perhaps you need to implement it:\n@@ -173,7 +173,7 @@ error[E0599]: no method named `method2` found for type `std::rc::Rc<&mut std::bo\n   --> $DIR/no-method-suggested-traits.rs:56:74\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n-   |                                                                          ^^^^^^^\n+   |                                                                          ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method2`, perhaps you need to implement it:\n@@ -186,7 +186,7 @@ LL | struct Foo;\n    | ----------- method `method3` not found for this\n ...\n LL |     Foo.method3();\n-   |         ^^^^^^^\n+   |         ^^^^^^^ method not found in `Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n@@ -196,7 +196,7 @@ error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::bo\n   --> $DIR/no-method-suggested-traits.rs:61:43\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&Foo)).method3();\n-   |                                           ^^^^^^^\n+   |                                           ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&Foo>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n@@ -209,7 +209,7 @@ LL | enum Bar { X }\n    | -------- method `method3` not found for this\n ...\n LL |     Bar::X.method3();\n-   |            ^^^^^^^\n+   |            ^^^^^^^ method not found in `Bar`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n@@ -219,7 +219,7 @@ error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::bo\n   --> $DIR/no-method-suggested-traits.rs:65:46\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&Bar::X)).method3();\n-   |                                              ^^^^^^^\n+   |                                              ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&Bar>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n@@ -229,37 +229,37 @@ error[E0599]: no method named `method3` found for type `usize` in the current sc\n   --> $DIR/no-method-suggested-traits.rs:69:13\n    |\n LL |     1_usize.method3();\n-   |             ^^^^^^^\n+   |             ^^^^^^^ method not found in `usize`\n \n error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&usize>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:70:47\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&1_usize)).method3();\n-   |                                               ^^^^^^^\n+   |                                               ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&usize>>`\n \n error[E0599]: no method named `method3` found for type `no_method_suggested_traits::Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:71:37\n    |\n LL |     no_method_suggested_traits::Foo.method3();\n-   |                                     ^^^^^^^\n+   |                                     ^^^^^^^ method not found in `no_method_suggested_traits::Foo`\n \n error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:72:71\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method3();\n-   |                                                                       ^^^^^^^\n+   |                                                                       ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>`\n \n error[E0599]: no method named `method3` found for type `no_method_suggested_traits::Bar` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:74:40\n    |\n LL |     no_method_suggested_traits::Bar::X.method3();\n-   |                                        ^^^^^^^\n+   |                                        ^^^^^^^ method not found in `no_method_suggested_traits::Bar`\n \n error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:75:74\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method3();\n-   |                                                                          ^^^^^^^\n+   |                                                                          ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>`\n \n error: aborting due to 24 previous errors\n "}, {"sha": "a2ad58a7e46fc8a3f36293cd5d5afee54e73f2ed", "filename": "src/test/ui/infinite/infinite-autoderef.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -44,7 +44,7 @@ LL | struct Foo;\n    | ----------- method `bar` not found for this\n ...\n LL |     Foo.bar();\n-   |         ^^^\n+   |         ^^^ method not found in `Foo`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "413daa6db6787ccc87f41256631dd8208a743ab7", "filename": "src/test/ui/issues/issue-10465.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-10465.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-10465.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10465.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for type `&b::B` in the current scope\n   --> $DIR/issue-10465.rs:17:15\n    |\n LL |             b.foo();\n-   |               ^^^\n+   |               ^^^ method not found in `&b::B`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "c57ca3e25d99f2c1486fb52f8efdada97c53c04e", "filename": "src/test/ui/issues/issue-13853.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-13853.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-13853.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13853.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -14,7 +14,7 @@ error[E0599]: no method named `iter` found for type `&G` in the current scope\n   --> $DIR/issue-13853.rs:27:23\n    |\n LL |     for node in graph.iter() {\n-   |                       ^^^^\n+   |                       ^^^^ method not found in `&G`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-13853.rs:37:13"}, {"sha": "25ce7cb5cc069e8608c75318dbfc4242a8a83e23", "filename": "src/test/ui/issues/issue-15207.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-15207.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-15207.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15207.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `push` found for type `!` in the current scope\n   --> $DIR/issue-15207.rs:3:15\n    |\n LL |         break.push(1)\n-   |               ^^^^\n+   |               ^^^^ method not found in `!`\n \n error: aborting due to previous error\n "}, {"sha": "b774ca22dd72a153a5c3410682dfe63e8d1ac503", "filename": "src/test/ui/issues/issue-1871.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-1871.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-1871.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1871.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `honk` found for type `{integer}` in the current s\n   --> $DIR/issue-1871.rs:7:9\n    |\n LL |       f.honk()\n-   |         ^^^^\n+   |         ^^^^ method not found in `{integer}`\n \n error: aborting due to previous error\n "}, {"sha": "c15c5392fac2590147df668ed903a6f1ec23f5d5", "filename": "src/test/ui/issues/issue-19521.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-19521.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-19521.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19521.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `homura` found for type `&'static str` in the curr\n   --> $DIR/issue-19521.rs:2:8\n    |\n LL |     \"\".homura()();\n-   |        ^^^^^^\n+   |        ^^^^^^ method not found in `&'static str`\n \n error: aborting due to previous error\n "}, {"sha": "fe920c1693982649a7af5a46ec2265bf0ed09f32", "filename": "src/test/ui/issues/issue-19692.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-19692.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-19692.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19692.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct Homura;\n    | -------------- method `kaname` not found for this\n ...\n LL |     let Some(ref madoka) = Some(homura.kaname());\n-   |                                        ^^^^^^\n+   |                                        ^^^^^^ method not found in `Homura`\n \n error: aborting due to previous error\n "}, {"sha": "8ce2ba033321e2e28caec3836bea032654484492", "filename": "src/test/ui/issues/issue-2149.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-2149.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-2149.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-2149.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -10,7 +10,7 @@ error[E0599]: no method named `bind` found for type `[&str; 1]` in the current s\n   --> $DIR/issue-2149.rs:13:12\n    |\n LL |     [\"hi\"].bind(|x| [x] );\n-   |            ^^^^\n+   |            ^^^^ method not found in `[&str; 1]`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `bind`, perhaps you need to implement it:"}, {"sha": "4e5cace525787e41ab27914af6c6ae3954c7c0fc", "filename": "src/test/ui/issues/issue-21596.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-21596.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-21596.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21596.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `to_string` found for type `*const u8` in the curr\n   --> $DIR/issue-21596.rs:4:22\n    |\n LL |     println!(\"{}\", z.to_string());\n-   |                      ^^^^^^^^^\n+   |                      ^^^^^^^^^ method not found in `*const u8`\n    |\n    = note: try using `<*const T>::as_ref()` to get a reference to the type behind the pointer: https://doc.rust-lang.org/std/primitive.pointer.html#method.as_ref\n    = note: using `<*const T>::as_ref()` on a pointer which is unaligned or points to invalid or uninitialized memory is undefined behavior"}, {"sha": "ab4db7e42a4b95757a370ed29fc73cd9e9069d4d", "filename": "src/test/ui/issues/issue-25385.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-25385.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-25385.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25385.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for type `i32` in the current scope\n   --> $DIR/issue-25385.rs:2:23\n    |\n LL |     ($e:expr) => { $e.foo() }\n-   |                       ^^^\n+   |                       ^^^ method not found in `i32`\n ...\n LL |     foo!(a);\n    |     -------- in this macro invocation\n@@ -11,7 +11,7 @@ error[E0599]: no method named `foo` found for type `i32` in the current scope\n   --> $DIR/issue-25385.rs:10:15\n    |\n LL |     foo!(1i32.foo());\n-   |               ^^^\n+   |               ^^^ method not found in `i32`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c9ede03003434a3f490c2fd5cd42a7f6454112cf", "filename": "src/test/ui/issues/issue-2823.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-2823.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-2823.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-2823.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct C {\n    | -------- method `clone` not found for this\n ...\n LL |     let _d = c.clone();\n-   |                ^^^^^\n+   |                ^^^^^ method not found in `C`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:"}, {"sha": "c537c6118f3a8cbb609c9fa5b7768d5fc6004e48", "filename": "src/test/ui/issues/issue-29124.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-29124.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-29124.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29124.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,15 +2,15 @@ error[E0599]: no method named `x` found for type `fn() -> Ret {Obj::func}` in th\n   --> $DIR/issue-29124.rs:15:15\n    |\n LL |     Obj::func.x();\n-   |               ^\n+   |               ^ method not found in `fn() -> Ret {Obj::func}`\n    |\n    = note: Obj::func is a function, perhaps you wish to call it\n \n error[E0599]: no method named `x` found for type `fn() -> Ret {func}` in the current scope\n   --> $DIR/issue-29124.rs:17:10\n    |\n LL |     func.x();\n-   |          ^\n+   |          ^ method not found in `fn() -> Ret {func}`\n    |\n    = note: func is a function, perhaps you wish to call it\n "}, {"sha": "250b158ab8e33e8bd8c0bc463660e0fee500828b", "filename": "src/test/ui/issues/issue-29181.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-29181.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-29181.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29181.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `homura` found for type `{integer}` in the current\n   --> $DIR/issue-29181.rs:6:7\n    |\n LL |     0.homura();\n-   |       ^^^^^^\n+   |       ^^^^^^ method not found in `{integer}`\n \n error: aborting due to previous error\n "}, {"sha": "6d03b7810939a5df47e37eec57b401c164d40081", "filename": "src/test/ui/issues/issue-31173.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -11,7 +11,7 @@ error[E0599]: no method named `collect` found for type `std::iter::Cloned<std::i\n   --> $DIR/issue-31173.rs:14:10\n    |\n LL |         .collect();\n-   |          ^^^^^^^\n+   |          ^^^^^^^ method not found in `std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:6:39: 9:6 found_e:_]>>`\n    |\n    = note: the method `collect` exists but the following trait bounds were not satisfied:\n            `&mut std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:6:39: 9:6 found_e:_]>> : std::iter::Iterator`"}, {"sha": "8d52e08374ac724924332d0fba462ea30dc6be7b", "filename": "src/test/ui/issues/issue-34334.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -45,7 +45,7 @@ error[E0599]: no method named `iter` found for type `()` in the current scope\n   --> $DIR/issue-34334.rs:9:36\n    |\n LL |     let sr2: Vec<(u32, _, _)> = sr.iter().map(|(faction, th_sender, th_receiver)| {}).collect();\n-   |                                    ^^^^\n+   |                                    ^^^^ method not found in `()`\n \n error: aborting due to 7 previous errors\n "}, {"sha": "b381203856e925a6ead03990b06868d2840345a0", "filename": "src/test/ui/issues/issue-35677.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-35677.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-35677.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35677.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `is_subset` found for type `&std::collections::Has\n   --> $DIR/issue-35677.rs:4:10\n    |\n LL |     this.is_subset(other)\n-   |          ^^^^^^^^^\n+   |          ^^^^^^^^^ method not found in `&std::collections::HashSet<T>`\n    |\n    = note: the method `is_subset` exists but the following trait bounds were not satisfied:\n            `T : std::cmp::Eq`"}, {"sha": "66680b9936e688187159d1188ec6ede0b47d8a3f", "filename": "src/test/ui/issues/issue-39175.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-39175.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-39175.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39175.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `exec` found for type `&mut std::process::Command`\n   --> $DIR/issue-39175.rs:15:39\n    |\n LL |     Command::new(\"echo\").arg(\"hello\").exec();\n-   |                                       ^^^^\n+   |                                       ^^^^ method not found in `&mut std::process::Command`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "0e1d55c339eb4437b7eee548e883727c1be7d7d4", "filename": "src/test/ui/issues/issue-41880.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-41880.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-41880.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41880.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | pub struct Iterate<T, F> {\n    | ------------------------ method `iter` not found for this\n ...\n LL |     println!(\"{:?}\", a.iter().take(10).collect::<Vec<usize>>());\n-   |                        ^^^^\n+   |                        ^^^^ method not found in `Iterate<{integer}, [closure@$DIR/issue-41880.rs:26:24: 26:31]>`\n \n error: aborting due to previous error\n "}, {"sha": "33c3f18650a805cb3b48fc1c946b1803cfdb0c14", "filename": "src/test/ui/issues/issue-43189.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-43189.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-43189.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43189.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `a` found for type `()` in the current scope\n   --> $DIR/issue-43189.rs:10:8\n    |\n LL |     ().a();\n-   |        ^\n+   |        ^ method not found in `()`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "29fd15fb396e99143e6340240ca81669035de956", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/option-as_deref_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Foption-as_deref_mut.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `as_deref_mut` found for type `std::option::Option\n   --> $DIR/option-as_deref_mut.rs:4:33\n    |\n LL |     let _result = &mut Some(42).as_deref_mut();\n-   |                                 ^^^^^^^^^^^^\n+   |                                 ^^^^^^^^^^^^ method not found in `std::option::Option<{integer}>`\n    |\n    = note: the method `as_deref_mut` exists but the following trait bounds were not satisfied:\n            `{integer} : std::ops::DerefMut`"}, {"sha": "5034e6d538e3e307e66031b772b34cd9ad65575e", "filename": "src/test/ui/issues/issue-5153.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for type `&dyn Foo` in the current sco\n   --> $DIR/issue-5153.rs:10:27\n    |\n LL |     (&5isize as &dyn Foo).foo();\n-   |                           ^^^\n+   |                           ^^^ method not found in `&dyn Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `foo`, perhaps you need to implement it:"}, {"sha": "3830ad4b1e3ae317348558a4527e0f133c86acaf", "filename": "src/test/ui/issues/issue-54062.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-54062.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-54062.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54062.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -8,7 +8,7 @@ error[E0599]: no method named `unwrap` found for type `std::sys_common::mutex::M\n   --> $DIR/issue-54062.rs:10:37\n    |\n LL |     let _ = test.comps.inner.lock().unwrap();\n-   |                                     ^^^^^^\n+   |                                     ^^^^^^ method not found in `std::sys_common::mutex::MutexGuard<'_>`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c4000c8a9d41ef72c86342e7599e8862d0aae512", "filename": "src/test/ui/issues/issue-57362-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `f` found for type `fn(&u8)` in the current scope\n   --> $DIR/issue-57362-1.rs:20:7\n    |\n LL |     a.f();\n-   |       ^\n+   |       ^ method not found in `fn(&u8)`\n    |\n    = note: a is a function, perhaps you wish to call it\n    = help: items from traits can only be used if the trait is implemented and in scope"}, {"sha": "96054de801c1f9e11d7f71f85f9475dd089a0944", "filename": "src/test/ui/macros/macro-backtrace-invalid-internals.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `fake` found for type `{integer}` in the current s\n   --> $DIR/macro-backtrace-invalid-internals.rs:5:13\n    |\n LL |           1.fake()\n-   |             ^^^^\n+   |             ^^^^ method not found in `{integer}`\n ...\n LL |     fake_method_stmt!();\n    |     -------------------- in this macro invocation\n@@ -42,7 +42,7 @@ error[E0599]: no method named `fake` found for type `{integer}` in the current s\n   --> $DIR/macro-backtrace-invalid-internals.rs:23:13\n    |\n LL |           1.fake()\n-   |             ^^^^\n+   |             ^^^^ method not found in `{integer}`\n ...\n LL |     let _ = fake_method_expr!();\n    |             ------------------- in this macro invocation"}, {"sha": "94c27b7d17865abee9dc5e8cff7fb8bb5cc993c1", "filename": "src/test/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -32,7 +32,7 @@ LL | pub struct Foo;\n    | --------------- method `take` not found for this\n ...\n LL |      .take()\n-   |       ^^^^\n+   |       ^^^^ method not found in `Foo`\n    |\n    = note: the method `take` exists but the following trait bounds were not satisfied:\n            `&mut Foo : std::iter::Iterator`"}, {"sha": "89c7b0981158add1d4322cb96c96a54ca9812fe7", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `count` found for type `std::iter::Filter<std::ite\n   --> $DIR/issue-36053-2.rs:7:55\n    |\n LL |     once::<&str>(\"str\").fuse().filter(|a: &str| true).count();\n-   |                                                       ^^^^^\n+   |                                                       ^^^^^ method not found in `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:7:39: 7:53]>`\n    |\n    = note: the method `count` exists but the following trait bounds were not satisfied:\n            `&mut std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:7:39: 7:53]> : std::iter::Iterator`"}, {"sha": "865092e4e9ccccc385d99dbc30934e5f9c9d0cb5", "filename": "src/test/ui/mismatched_types/method-help-unsatisfied-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `unwrap` found for type `std::result::Result<(), F\n   --> $DIR/method-help-unsatisfied-bound.rs:5:7\n    |\n LL |     a.unwrap();\n-   |       ^^^^^^\n+   |       ^^^^^^ method not found in `std::result::Result<(), Foo>`\n    |\n    = note: the method `unwrap` exists but the following trait bounds were not satisfied:\n            `Foo : std::fmt::Debug`"}, {"sha": "b05c29c0d40360ccbf8db0f8d8c7df036660f302", "filename": "src/test/ui/non-copyable-void.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fnon-copyable-void.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fnon-copyable-void.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-copyable-void.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `clone` found for type `libc::c_void` in the curre\n   --> $DIR/non-copyable-void.rs:11:23\n    |\n LL |         let _z = (*y).clone();\n-   |                       ^^^^^\n+   |                       ^^^^^ method not found in `libc::c_void`\n \n error: aborting due to previous error\n "}, {"sha": "c1c50211381899c53909aafd76cce0f20e3311e0", "filename": "src/test/ui/noncopyable-class.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fnoncopyable-class.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fnoncopyable-class.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnoncopyable-class.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct Foo {\n    | ---------- method `clone` not found for this\n ...\n LL |     let _y = x.clone();\n-   |                ^^^^^\n+   |                ^^^^^ method not found in `Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:"}, {"sha": "2df628ecf8e500434226e3d1a6e9a871495b1f60", "filename": "src/test/ui/object-pointer-types.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fobject-pointer-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fobject-pointer-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-pointer-types.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `owned` found for type `&dyn Foo` in the current s\n   --> $DIR/object-pointer-types.rs:11:7\n    |\n LL |     x.owned();\n-   |       ^^^^^\n+   |       ^^^^^ method not found in `&dyn Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `owned`, perhaps you need to implement it:\n@@ -12,7 +12,7 @@ error[E0599]: no method named `owned` found for type `&mut dyn Foo` in the curre\n   --> $DIR/object-pointer-types.rs:17:7\n    |\n LL |     x.owned();\n-   |       ^^^^^\n+   |       ^^^^^ method not found in `&mut dyn Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `owned`, perhaps you need to implement it:\n@@ -22,7 +22,7 @@ error[E0599]: no method named `managed` found for type `std::boxed::Box<(dyn Foo\n   --> $DIR/object-pointer-types.rs:23:7\n    |\n LL |     x.managed();\n-   |       ^^^^^^^\n+   |       ^^^^^^^ method not found in `std::boxed::Box<(dyn Foo + 'static)>`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "19f758fd8da7779a063424224d7739de2a9bb3d4", "filename": "src/test/ui/rust-2018/trait-import-suggestions.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Frust-2018%2Ftrait-import-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Frust-2018%2Ftrait-import-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftrait-import-suggestions.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foobar` found for type `u32` in the current scope\n   --> $DIR/trait-import-suggestions.rs:22:11\n    |\n LL |         x.foobar();\n-   |           ^^^^^^\n+   |           ^^^^^^ method not found in `u32`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n@@ -12,7 +12,7 @@ error[E0599]: no method named `bar` found for type `u32` in the current scope\n   --> $DIR/trait-import-suggestions.rs:28:7\n    |\n LL |     x.bar();\n-   |       ^^^\n+   |       ^^^ method not found in `u32`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:\n@@ -24,7 +24,7 @@ error[E0599]: no method named `baz` found for type `u32` in the current scope\n   --> $DIR/trait-import-suggestions.rs:29:7\n    |\n LL |     x.baz();\n-   |       ^^^\n+   |       ^^^ method not found in `u32`\n \n error[E0599]: no function or associated item named `from_str` found for type `u32` in the current scope\n   --> $DIR/trait-import-suggestions.rs:30:18"}, {"sha": "dec5809f1539bd8be297cdb7f2bbc38bf3f7a891", "filename": "src/test/ui/self/point-at-arbitrary-self-type-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-method.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -8,7 +8,7 @@ LL |     fn foo(self: Box<Self>) {}\n    |        --- the method is available for `std::boxed::Box<A>` here\n ...\n LL |     A.foo();\n-   |       ^^^\n+   |       ^^^ method not found in `A`\n \n error: aborting due to previous error\n "}, {"sha": "e93c4da9dfc85145735429a4aa9c5da0ecab9efd", "filename": "src/test/ui/self/point-at-arbitrary-self-type-trait-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -7,7 +7,7 @@ LL | struct A;\n    | --------- method `foo` not found for this\n ...\n LL |     A.foo()\n-   |       ^^^\n+   |       ^^^ method not found in `A`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `foo`, perhaps you need to implement it:"}, {"sha": "190159ec7b88d4db98b6ddc7d7e21e87551587ea", "filename": "src/test/ui/shadowed/shadowed-trait-methods.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-trait-methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-trait-methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-trait-methods.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `f` found for type `()` in the current scope\n   --> $DIR/shadowed-trait-methods.rs:13:8\n    |\n LL |     ().f()\n-   |        ^\n+   |        ^ method not found in `()`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "bbfe4c3d59dcf15e4e5cb4f372e1e8dfc9c257b4", "filename": "src/test/ui/specialization/defaultimpl/specialization-trait-not-implemented.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct MyStruct;\n    | ---------------- method `foo_one` not found for this\n ...\n LL |     println!(\"{}\", MyStruct.foo_one());\n-   |                             ^^^^^^^\n+   |                             ^^^^^^^ method not found in `MyStruct`\n    |\n    = note: the method `foo_one` exists but the following trait bounds were not satisfied:\n            `MyStruct : Foo`"}, {"sha": "4aec72006eef03c36312150841e369bb60ff1350", "filename": "src/test/ui/suggestions/impl-trait-with-missing-trait-bounds-in-arg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `hello` found for type `impl Foo` in the current s\n   --> $DIR/impl-trait-with-missing-trait-bounds-in-arg.rs:15:9\n    |\n LL |     foo.hello();\n-   |         ^^^^^\n+   |         ^^^^^ method not found in `impl Foo`\n    |\n    = help: items from traits can only be used if the type parameter is bounded by the trait\n help: the following trait defines an item `hello`, perhaps you need to restrict type parameter `impl Foo` with it:"}, {"sha": "f2496f696d698294614be3a36aafc4620e714eb7", "filename": "src/test/ui/suggestions/issue-21673.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fsuggestions%2Fissue-21673.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fsuggestions%2Fissue-21673.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-21673.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `method` found for type `&T` in the current scope\n   --> $DIR/issue-21673.rs:6:7\n    |\n LL |     x.method()\n-   |       ^^^^^^\n+   |       ^^^^^^ method not found in `&T`\n    |\n    = help: items from traits can only be used if the type parameter is bounded by the trait\n help: the following trait defines an item `method`, perhaps you need to restrict type parameter `T` with it:\n@@ -14,7 +14,7 @@ error[E0599]: no method named `method` found for type `T` in the current scope\n   --> $DIR/issue-21673.rs:10:7\n    |\n LL |     x.method()\n-   |       ^^^^^^\n+   |       ^^^^^^ method not found in `T`\n    |\n    = help: items from traits can only be used if the type parameter is bounded by the trait\n help: the following trait defines an item `method`, perhaps you need to restrict type parameter `T` with it:"}, {"sha": "4678410eb48599b33ea3c4e8b266de11e4db9569", "filename": "src/test/ui/suggestions/suggest-methods.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -23,7 +23,7 @@ error[E0599]: no method named `count_o` found for type `u32` in the current scop\n   --> $DIR/suggest-methods.rs:28:19\n    |\n LL |     let _ = 63u32.count_o();\n-   |                   ^^^^^^^\n+   |                   ^^^^^^^ method not found in `u32`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "0d61c3ed00d909e3ddd1788b91d741c83133ea48", "filename": "src/test/ui/traits/trait-impl-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-1.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for type `&i32` in the current scope\n   --> $DIR/trait-impl-1.rs:15:7\n    |\n LL |     x.foo();\n-   |       ^^^\n+   |       ^^^ method not found in `&i32`\n \n error: aborting due to previous error\n "}, {"sha": "39cc66d275c24aa2d98e70b1185e07155e68036b", "filename": "src/test/ui/traits/trait-item-privacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -5,7 +5,7 @@ LL | struct S;\n    | --------- method `a` not found for this\n ...\n LL |     S.a();\n-   |       ^\n+   |       ^ method not found in `S`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `a`, perhaps you need to implement it:\n@@ -25,7 +25,7 @@ LL |         fn b(&self) { }\n    |            the method is available for `std::rc::Rc<S>` here\n ...\n LL |     S.b();\n-   |       ^\n+   |       ^ method not found in `S`\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "d172d5ecc4b70bd1fd9d573caca6c25ce7afafd0", "filename": "src/test/ui/trivial-bounds/trivial-bounds-leak.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -12,7 +12,7 @@ error[E0599]: no method named `test` found for type `i32` in the current scope\n   --> $DIR/trivial-bounds-leak.rs:24:10\n    |\n LL |     3i32.test();\n-   |          ^^^^\n+   |          ^^^^ method not found in `i32`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `test`, perhaps you need to implement it:"}, {"sha": "18276d5710cf8950f2230dd756ded993b156f366", "filename": "src/test/ui/unboxed-closures/unboxed-closures-static-call-wrong-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-static-call-wrong-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-static-call-wrong-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-static-call-wrong-trait.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `call` found for type `[closure@$DIR/unboxed-closu\n   --> $DIR/unboxed-closures-static-call-wrong-trait.rs:7:10\n    |\n LL |     mut_.call((0, ));\n-   |          ^^^^\n+   |          ^^^^ method not found in `[closure@$DIR/unboxed-closures-static-call-wrong-trait.rs:6:26: 6:31]`\n    |\n    = note: mut_ is a function, perhaps you wish to call it\n "}, {"sha": "63262d0dc326d088932742050bf563dc3770919b", "filename": "src/test/ui/underscore-imports/shadow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funderscore-imports%2Fshadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funderscore-imports%2Fshadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-imports%2Fshadow.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `deref` found for type `&()` in the current scope\n   --> $DIR/shadow.rs:19:11\n    |\n LL |         x.deref();\n-   |           ^^^^^\n+   |           ^^^^^ method not found in `&()`\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:"}, {"sha": "4f4c779b12bb326334274cad2758dbcbe01af607", "filename": "src/test/ui/union/union-derive-clone.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -13,7 +13,7 @@ LL | union U4<T> {\n    | ----------- method `clone` not found for this\n ...\n LL |     let w = u.clone();\n-   |               ^^^^^\n+   |               ^^^^^ method not found in `U4<CloneNoCopy>`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n            `U4<CloneNoCopy> : std::clone::Clone`"}, {"sha": "cd46878c19be4972473a49ed57466a77fbc0c036", "filename": "src/test/ui/unique-object-noncopyable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `clone` found for type `std::boxed::Box<dyn Foo>`\n   --> $DIR/unique-object-noncopyable.rs:24:16\n    |\n LL |     let _z = y.clone();\n-   |                ^^^^^\n+   |                ^^^^^ method not found in `std::boxed::Box<dyn Foo>`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n            `std::boxed::Box<dyn Foo> : std::clone::Clone`"}, {"sha": "19ef2b21c26854b1b853ca54782ac829b26b5199", "filename": "src/test/ui/unique-pinned-nocopy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funique-pinned-nocopy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824383d4ab66abd32abc6e19b68d78ecfddcb7d4/src%2Ftest%2Fui%2Funique-pinned-nocopy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funique-pinned-nocopy.stderr?ref=824383d4ab66abd32abc6e19b68d78ecfddcb7d4", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `clone` found for type `std::boxed::Box<R>` in the\n   --> $DIR/unique-pinned-nocopy.rs:12:16\n    |\n LL |     let _j = i.clone();\n-   |                ^^^^^\n+   |                ^^^^^ method not found in `std::boxed::Box<R>`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n            `std::boxed::Box<R> : std::clone::Clone`"}]}