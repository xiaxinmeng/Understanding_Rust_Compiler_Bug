{"sha": "3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a", "node_id": "C_kwDOAAsO6NoAKDNkNGI5YjhiOGJkM2VhOWMyOWY5Y2ZlZmE2ODZkYTc4NTA0NGFlOWE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-01-27T15:33:15Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:12Z"}, "message": "Remove some unused arguments and update a comment", "tree": {"sha": "1f77a9f6d75ba9acd5dcf469939f57898b01ccde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f77a9f6d75ba9acd5dcf469939f57898b01ccde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a", "html_url": "https://github.com/rust-lang/rust/commit/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc36b385261a8200f8259feddef58715549f2563", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc36b385261a8200f8259feddef58715549f2563", "html_url": "https://github.com/rust-lang/rust/commit/dc36b385261a8200f8259feddef58715549f2563"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "741438b3d29cc773f02f9725fa7b78df3fc3ab6e", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a", "patch": "@@ -61,8 +61,10 @@ bitflags! {\n                                           | TypeFlags::HAS_CT_INFER.bits\n                                           | TypeFlags::HAS_TY_PLACEHOLDER.bits\n                                           | TypeFlags::HAS_CT_PLACEHOLDER.bits\n-                                          // Opaque types may get resolved in the current scope and must\n-                                          // thus not be transported to other queries if it can be avoided.\n+                                          // The `evaluate_obligation` query does not return further\n+                                          // obligations. If it evaluates an obligation with an opaque\n+                                          // type, that opaque type may get compared to another type,\n+                                          // constraining it. We would lose this information.\n                                           // FIXME: differentiate between crate-local opaque types\n                                           // and opaque types from other crates, as only opaque types\n                                           // from the local crate can possibly be a local name"}, {"sha": "75e461454543e425b127b27bb714b628a0eaea65", "filename": "compiler/rustc_typeck/src/check/_match.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs?ref=3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a", "patch": "@@ -98,8 +98,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let arm_ty = self.check_expr_with_expectation(&arm.body, expected);\n             all_arms_diverge &= self.diverges.get();\n \n-            let opt_suggest_box_span =\n-                self.opt_suggest_box_span(arm.body.span, arm_ty, orig_expected);\n+            let opt_suggest_box_span = self.opt_suggest_box_span(arm_ty, orig_expected);\n \n             let (arm_span, semi_span) =\n                 self.get_appropriate_arm_semicolon_removal_span(&arms, i, prior_arm_ty, arm_ty);\n@@ -504,12 +503,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     // provide a structured suggestion in that case.\n     pub(crate) fn opt_suggest_box_span(\n         &self,\n-        _span: Span,\n         outer_ty: &'tcx TyS<'tcx>,\n         orig_expected: Expectation<'tcx>,\n     ) -> Option<Span> {\n         match (orig_expected, self.ret_coercion_impl_trait.map(|ty| (self.body_id.owner, ty))) {\n-            (Expectation::ExpectHasType(expected), Some((_id, _ty)))\n+            (Expectation::ExpectHasType(expected), Some(_))\n                 if self.in_tail_expr && self.can_coerce(outer_ty, expected) =>\n             {\n                 let obligations = self.fulfillment_cx.borrow().pending_obligations();"}, {"sha": "d9b63152e3fe7a71a47344ba0a2129b8f915f181", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=3d4b9b8b8bd3ea9c29f9cfefa686da785044ae9a", "patch": "@@ -948,8 +948,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             };\n             let else_diverges = self.diverges.get();\n \n-            let opt_suggest_box_span =\n-                self.opt_suggest_box_span(else_expr.span, else_ty, orig_expected);\n+            let opt_suggest_box_span = self.opt_suggest_box_span(else_ty, orig_expected);\n             let if_cause =\n                 self.if_cause(sp, then_expr, else_expr, then_ty, else_ty, opt_suggest_box_span);\n "}]}