{"sha": "5191fb755b7929f5393c3d488f25e5d2eafbc8a1", "node_id": "C_kwDOAAsO6NoAKDUxOTFmYjc1NWI3OTI5ZjUzOTNjM2Q0ODhmMjVlNWQyZWFmYmM4YTE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-07T12:56:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-07T12:56:28Z"}, "message": "Merge #10480\n\n10480: fix: Change `stdx::to_snake_case` to match rustc implementation r=Veykril a=Crauzer\n\nFixes #10473\n\nCo-authored-by: crauzer <filip.quitko@gmail.com>", "tree": {"sha": "285a7c380967205229214da98d4517979042f06d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/285a7c380967205229214da98d4517979042f06d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5191fb755b7929f5393c3d488f25e5d2eafbc8a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhXu58CRBK7hj4Ov3rIwAAkikIAI0T2bEcKcXBcdDqB28SPmci\nplTVz6V6663NfztkPCws1Q3UerTDWgmG5dMRoOze9n9Jl2OIgdoMoPm0G/Hz6AMj\nXyF+vBh/zciL++jPU4IrdEHRC0XqWtcz96rBkCLuV46HTbeC1e7iri8EH0kP3GsE\nISmGd8FbVtG2y5qgzeuNCyJxwssZWs4PHXOlCaMvsn+84TPVxIlcieG3S89Ols98\nhfVrqeKE2QPvavT2tZvM6QgfmXgMGu4LKxBiAxXl60JrneGZPIiFwvtLK2LpEvA6\nWGjG3RNHYQR71BE7QOO2LdomYaH4eiDXSLzZ3OQN47G9sIi9kyqDqtt7gvq/eUU=\n=Giqk\n-----END PGP SIGNATURE-----\n", "payload": "tree 285a7c380967205229214da98d4517979042f06d\nparent fd3f4c50dac870f11c11364c71f0a40497808d72\nparent ba62a8a0754f29d252a36a3270163d718656834f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1633611388 +0000\ncommitter GitHub <noreply@github.com> 1633611388 +0000\n\nMerge #10480\n\n10480: fix: Change `stdx::to_snake_case` to match rustc implementation r=Veykril a=Crauzer\n\nFixes #10473\n\nCo-authored-by: crauzer <filip.quitko@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5191fb755b7929f5393c3d488f25e5d2eafbc8a1", "html_url": "https://github.com/rust-lang/rust/commit/5191fb755b7929f5393c3d488f25e5d2eafbc8a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5191fb755b7929f5393c3d488f25e5d2eafbc8a1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd3f4c50dac870f11c11364c71f0a40497808d72", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3f4c50dac870f11c11364c71f0a40497808d72", "html_url": "https://github.com/rust-lang/rust/commit/fd3f4c50dac870f11c11364c71f0a40497808d72"}, {"sha": "ba62a8a0754f29d252a36a3270163d718656834f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba62a8a0754f29d252a36a3270163d718656834f", "html_url": "https://github.com/rust-lang/rust/commit/ba62a8a0754f29d252a36a3270163d718656834f"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "88d607194f756995aca3986ed65836e9ea985d28", "filename": "crates/hir_ty/src/diagnostics/decl_check/case_conv.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5191fb755b7929f5393c3d488f25e5d2eafbc8a1/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5191fb755b7929f5393c3d488f25e5d2eafbc8a1/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs?ref=5191fb755b7929f5393c3d488f25e5d2eafbc8a1", "patch": "@@ -161,6 +161,7 @@ mod tests {\n         check(to_lower_snake_case, \"lowerCamelCase\", expect![[\"lower_camel_case\"]]);\n         check(to_lower_snake_case, \"a\", expect![[\"\"]]);\n         check(to_lower_snake_case, \"abc\", expect![[\"\"]]);\n+        check(to_lower_snake_case, \"foo__bar\", expect![[\"foo_bar\"]]);\n     }\n \n     #[test]\n@@ -192,5 +193,7 @@ mod tests {\n         check(to_upper_snake_case, \"A\", expect![[\"\"]]);\n         check(to_upper_snake_case, \"ABC\", expect![[\"\"]]);\n         check(to_upper_snake_case, \"X86_64\", expect![[\"\"]]);\n+        check(to_upper_snake_case, \"FOO_BAr\", expect![[\"FOO_BAR\"]]);\n+        check(to_upper_snake_case, \"FOO__BAR\", expect![[\"FOO_BAR\"]]);\n     }\n }"}, {"sha": "6990b19cf3a63e7eb660c150d6b85879f0f0d611", "filename": "crates/ide_diagnostics/src/handlers/incorrect_case.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5191fb755b7929f5393c3d488f25e5d2eafbc8a1/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fincorrect_case.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5191fb755b7929f5393c3d488f25e5d2eafbc8a1/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fincorrect_case.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fincorrect_case.rs?ref=5191fb755b7929f5393c3d488f25e5d2eafbc8a1", "patch": "@@ -102,8 +102,8 @@ fn some_fn() {\n \"#,\n             r#\"\n fn some_fn() {\n-    let what_a_weird_formatting = 10;\n-    another_func(what_a_weird_formatting);\n+    let what_aweird_formatting = 10;\n+    another_func(what_aweird_formatting);\n }\n \"#,\n         );"}, {"sha": "ee23f579345cf413ad34ea9da6ea9b499c0b5bb7", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 35, "deletions": 12, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/5191fb755b7929f5393c3d488f25e5d2eafbc8a1/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5191fb755b7929f5393c3d488f25e5d2eafbc8a1/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=5191fb755b7929f5393c3d488f25e5d2eafbc8a1", "patch": "@@ -1,4 +1,5 @@\n //! Missing batteries for standard libraries.\n+use std::iter;\n use std::{cmp::Ordering, ops, time::Instant};\n \n mod macros;\n@@ -37,22 +38,44 @@ pub fn to_lower_snake_case(s: &str) -> String {\n pub fn to_upper_snake_case(s: &str) -> String {\n     to_snake_case(s, char::to_ascii_uppercase)\n }\n-fn to_snake_case<F: Fn(&char) -> char>(s: &str, change_case: F) -> String {\n-    let mut buf = String::with_capacity(s.len());\n-    let mut prev = false;\n-    for c in s.chars() {\n-        // `&& prev` is required to not insert `_` before the first symbol.\n-        if c.is_ascii_uppercase() && prev {\n-            // This check is required to not translate `Weird_Case` into `weird__case`.\n-            if !buf.ends_with('_') {\n-                buf.push('_');\n+\n+// Code partially taken from rust/compiler/rustc_lint/src/nonstandard_style.rs\n+// commit: 9626f2b\n+fn to_snake_case<F: Fn(&char) -> char>(mut s: &str, change_case: F) -> String {\n+    let mut words = vec![];\n+\n+    // Preserve leading underscores\n+    s = s.trim_start_matches(|c: char| {\n+        if c == '_' {\n+            words.push(String::new());\n+            true\n+        } else {\n+            false\n+        }\n+    });\n+\n+    for s in s.split('_') {\n+        let mut last_upper = false;\n+        let mut buf = String::new();\n+\n+        if s.is_empty() {\n+            continue;\n+        }\n+\n+        for ch in s.chars() {\n+            if !buf.is_empty() && buf != \"'\" && ch.is_uppercase() && !last_upper {\n+                words.push(buf);\n+                buf = String::new();\n             }\n+\n+            last_upper = ch.is_uppercase();\n+            buf.extend(iter::once(change_case(&ch)));\n         }\n-        prev = true;\n \n-        buf.push(change_case(&c));\n+        words.push(buf);\n     }\n-    buf\n+\n+    words.join(\"_\")\n }\n \n pub fn replace(buf: &mut String, from: char, to: &str) {"}]}