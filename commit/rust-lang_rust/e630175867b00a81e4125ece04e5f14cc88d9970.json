{"sha": "e630175867b00a81e4125ece04e5f14cc88d9970", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MzAxNzU4NjdiMDBhODFlNDEyNWVjZTA0ZTVmMTRjYzg4ZDk5NzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-15T08:32:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-15T08:35:55Z"}, "message": "fix async-fn test", "tree": {"sha": "99606ff4a7c230be89de9225bbb19020c21a8aef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99606ff4a7c230be89de9225bbb19020c21a8aef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e630175867b00a81e4125ece04e5f14cc88d9970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e630175867b00a81e4125ece04e5f14cc88d9970", "html_url": "https://github.com/rust-lang/rust/commit/e630175867b00a81e4125ece04e5f14cc88d9970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e630175867b00a81e4125ece04e5f14cc88d9970/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15722fab51fadd484694dd01498f35ebba2b1999", "url": "https://api.github.com/repos/rust-lang/rust/commits/15722fab51fadd484694dd01498f35ebba2b1999", "html_url": "https://github.com/rust-lang/rust/commit/15722fab51fadd484694dd01498f35ebba2b1999"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "48f8fc1223c945ae9653cef65d199c131ea98488", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e630175867b00a81e4125ece04e5f14cc88d9970/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e630175867b00a81e4125ece04e5f14cc88d9970/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=e630175867b00a81e4125ece04e5f14cc88d9970", "patch": "@@ -4,7 +4,8 @@\n     futures_api,\n )]\n \n-use std::{future::Future, pin::Pin, task::Poll};\n+use std::{future::Future, pin::Pin, task::Poll, ptr};\n+use std::task::{Waker, RawWaker, RawWakerVTable};\n \n // See if we can run a basic `async fn`\n pub async fn foo(x: &u32, y: u32) -> u32 {\n@@ -17,18 +18,23 @@ pub async fn foo(x: &u32, y: u32) -> u32 {\n     *x + y + *a\n }\n \n-fn main() {\n-    use std::{sync::Arc, task::{Wake, local_waker}};\n+fn raw_waker_clone(_this: *const ()) -> RawWaker {\n+    panic!(\"unimplemented\");\n+}\n+fn raw_waker_wake(_this: *const ()) {\n+    panic!(\"unimplemented\");\n+}\n+fn raw_waker_drop(_this: *const ()) {}\n \n-    struct NoWake;\n-    impl Wake for NoWake {\n-        fn wake(_arc_self: &Arc<Self>) {\n-            panic!();\n-        }\n-    }\n+static RAW_WAKER: RawWakerVTable = RawWakerVTable {\n+    clone: raw_waker_clone,\n+    wake: raw_waker_wake,\n+    drop: raw_waker_drop,\n+};\n \n-    let lw = unsafe { local_waker(Arc::new(NoWake)) };\n+fn main() {\n     let x = 5;\n     let mut fut = foo(&x, 7);\n-    assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&lw), Poll::Ready(31));\n+    let waker = unsafe { Waker::new_unchecked(RawWaker::new(ptr::null(), &RAW_WAKER)) };\n+    assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&waker), Poll::Ready(31));\n }"}]}