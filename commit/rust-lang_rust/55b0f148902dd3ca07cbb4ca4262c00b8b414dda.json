{"sha": "55b0f148902dd3ca07cbb4ca4262c00b8b414dda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YjBmMTQ4OTAyZGQzY2EwN2NiYjRjYTQyNjJjMDBiOGI0MTRkZGE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-18T16:49:32Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-18T16:49:32Z"}, "message": "Fix the regression", "tree": {"sha": "b01acc4818639b69b7579b8fa0fce2e20b5e4418", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b01acc4818639b69b7579b8fa0fce2e20b5e4418"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55b0f148902dd3ca07cbb4ca4262c00b8b414dda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55b0f148902dd3ca07cbb4ca4262c00b8b414dda", "html_url": "https://github.com/rust-lang/rust/commit/55b0f148902dd3ca07cbb4ca4262c00b8b414dda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55b0f148902dd3ca07cbb4ca4262c00b8b414dda/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbffc4278b4c58b1582a6dc66baa2deebfab8138", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbffc4278b4c58b1582a6dc66baa2deebfab8138", "html_url": "https://github.com/rust-lang/rust/commit/dbffc4278b4c58b1582a6dc66baa2deebfab8138"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0319e6b3d56aa2d5a68504c261f704aa7132db54", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55b0f148902dd3ca07cbb4ca4262c00b8b414dda/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55b0f148902dd3ca07cbb4ca4262c00b8b414dda/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=55b0f148902dd3ca07cbb4ca4262c00b8b414dda", "patch": "@@ -559,7 +559,7 @@ impl<'a, 'gcx, 'tcx> ExprUseVisitor<'a, 'gcx, 'tcx> {\n             ty::TyError => { }\n             _ => {\n                 let type_dependent_defs = self.mc.tables.type_dependent_defs();\n-                if !type_dependent_defs.contains_key(call.hir_id) {\n+                if type_dependent_defs.contains_key(call.hir_id) {\n                     let def_id = type_dependent_defs[call.hir_id].def_id();\n                     let call_scope = region::Scope::Node(call.hir_id.local_id);\n                     match OverloadedCallType::from_method_id(self.tcx(), def_id) {\n@@ -577,7 +577,7 @@ impl<'a, 'gcx, 'tcx> ExprUseVisitor<'a, 'gcx, 'tcx> {\n                                             ty::ImmBorrow,\n                                             ClosureInvocation);\n                         }\n-                        FnOnceOverloadedCall => {self.consume_expr(callee)},\n+                        FnOnceOverloadedCall => self.consume_expr(callee),\n                     }\n                 }\n             }"}]}