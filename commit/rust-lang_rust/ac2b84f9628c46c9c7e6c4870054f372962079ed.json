{"sha": "ac2b84f9628c46c9c7e6c4870054f372962079ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMmI4NGY5NjI4YzQ2YzljN2U2YzQ4NzAwNTRmMzcyOTYyMDc5ZWQ=", "commit": {"author": {"name": "Luca Barbieri", "email": "luca@luca-barbieri.com", "date": "2020-04-10T20:42:19Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-11T21:49:16Z"}, "message": "Depend on getopts from crates.io\n\nrustc_session exports it for other crates to avoid mismatching\ncrate versions.", "tree": {"sha": "8c2a0967cd69c2237e65c57f87c64071d2a042d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c2a0967cd69c2237e65c57f87c64071d2a042d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac2b84f9628c46c9c7e6c4870054f372962079ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac2b84f9628c46c9c7e6c4870054f372962079ed", "html_url": "https://github.com/rust-lang/rust/commit/ac2b84f9628c46c9c7e6c4870054f372962079ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac2b84f9628c46c9c7e6c4870054f372962079ed/comments", "author": {"login": "luca-barbieri", "id": 298418, "node_id": "MDQ6VXNlcjI5ODQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/298418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luca-barbieri", "html_url": "https://github.com/luca-barbieri", "followers_url": "https://api.github.com/users/luca-barbieri/followers", "following_url": "https://api.github.com/users/luca-barbieri/following{/other_user}", "gists_url": "https://api.github.com/users/luca-barbieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/luca-barbieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luca-barbieri/subscriptions", "organizations_url": "https://api.github.com/users/luca-barbieri/orgs", "repos_url": "https://api.github.com/users/luca-barbieri/repos", "events_url": "https://api.github.com/users/luca-barbieri/events{/privacy}", "received_events_url": "https://api.github.com/users/luca-barbieri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45ede927fb01ea7928267cc4caa2db75fd3be318", "url": "https://api.github.com/repos/rust-lang/rust/commits/45ede927fb01ea7928267cc4caa2db75fd3be318", "html_url": "https://github.com/rust-lang/rust/commit/45ede927fb01ea7928267cc4caa2db75fd3be318"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "73d276d1776489d6200e3b087678500881c15bab", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b84f9628c46c9c7e6c4870054f372962079ed/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b84f9628c46c9c7e6c4870054f372962079ed/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ac2b84f9628c46c9c7e6c4870054f372962079ed", "patch": "@@ -4201,6 +4201,7 @@ dependencies = [\n name = \"rustc_session\"\n version = \"0.0.0\"\n dependencies = [\n+ \"getopts\",\n  \"log\",\n  \"num_cpus\",\n  \"rustc_ast\","}, {"sha": "0e3199975f9becf3d1a6125f8b5be5440851eb7a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=ac2b84f9628c46c9c7e6c4870054f372962079ed", "patch": "@@ -8,7 +8,6 @@\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n \n-pub extern crate getopts;\n #[macro_use]\n extern crate log;\n #[macro_use]\n@@ -35,6 +34,7 @@ use rustc_save_analysis::DumpHandler;\n use rustc_serialize::json::{self, ToJson};\n use rustc_session::config::nightly_options;\n use rustc_session::config::{ErrorOutputType, Input, OutputType, PrintRequest};\n+use rustc_session::getopts;\n use rustc_session::lint::{Lint, LintId};\n use rustc_session::{config, DiagnosticOutput, Session};\n use rustc_session::{early_error, early_warn};"}, {"sha": "c75f3b279a258396935b6fd0b17a312bdc972563", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=ac2b84f9628c46c9c7e6c4870054f372962079ed", "patch": "@@ -1,5 +1,3 @@\n-extern crate getopts;\n-\n use crate::interface::parse_cfgspecs;\n \n use rustc_data_structures::fx::FxHashSet;\n@@ -9,6 +7,7 @@ use rustc_session::config::{build_configuration, build_session_options, to_crate\n use rustc_session::config::{rustc_optgroups, ErrorOutputType, ExternLocation, Options, Passes};\n use rustc_session::config::{ExternEntry, LinkerPluginLto, LtoCli, SwitchWithOptPath};\n use rustc_session::config::{Externs, OutputType, OutputTypes, SymbolManglingVersion};\n+use rustc_session::getopts;\n use rustc_session::lint::Level;\n use rustc_session::search_paths::SearchPath;\n use rustc_session::{build_session, Session};"}, {"sha": "814073bb4f7be06b202f3825e1be1a3a64675422", "filename": "src/librustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2FCargo.toml?ref=ac2b84f9628c46c9c7e6c4870054f372962079ed", "patch": "@@ -9,6 +9,7 @@ name = \"rustc_session\"\n path = \"lib.rs\"\n \n [dependencies]\n+getopts = \"0.2\"\n log = \"0.4\"\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "2ff92c46d12514c7b05d8b94f58a56c1c9200da0", "filename": "src/librustc_session/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_session%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustc_session%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flib.rs?ref=ac2b84f9628c46c9c7e6c4870054f372962079ed", "patch": "@@ -1,10 +1,4 @@\n #![feature(crate_visibility_modifier)]\n-#![feature(test)]\n-\n-// Use the test crate here so we depend on getopts through it. This allow tools to link to both\n-// librustc_session and libtest.\n-extern crate getopts;\n-extern crate test as _;\n \n pub mod cgu_reuse_tracker;\n pub mod utils;\n@@ -23,3 +17,5 @@ mod session;\n pub use session::*;\n \n pub mod output;\n+\n+pub use getopts;"}, {"sha": "a5a1e20396cafd5f79e8fd4d85f0c7dfadf2f02a", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=ac2b84f9628c46c9c7e6c4870054f372962079ed", "patch": "@@ -10,6 +10,7 @@ use rustc_session::config::{\n     nightly_options,\n };\n use rustc_session::config::{CodegenOptions, DebuggingOptions, ErrorOutputType, Externs};\n+use rustc_session::getopts;\n use rustc_session::lint::Level;\n use rustc_session::search_paths::SearchPath;\n use rustc_span::edition::{Edition, DEFAULT_EDITION};"}, {"sha": "b0d5a8e58e1201f84c6ff76f2638b1abf6615008", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b84f9628c46c9c7e6c4870054f372962079ed/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=ac2b84f9628c46c9c7e6c4870054f372962079ed", "patch": "@@ -15,7 +15,6 @@\n #![recursion_limit = \"256\"]\n \n extern crate env_logger;\n-extern crate getopts;\n extern crate rustc_ast;\n extern crate rustc_ast_pretty;\n extern crate rustc_attr;\n@@ -51,6 +50,7 @@ use std::panic;\n use std::process;\n \n use rustc_session::config::{make_crate_type_option, ErrorOutputType, RustcOptGroup};\n+use rustc_session::getopts;\n use rustc_session::{early_error, early_warn};\n \n #[macro_use]"}]}