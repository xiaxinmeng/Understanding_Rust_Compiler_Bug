{"sha": "59f1ccd35ca57da4cef5740d61ecfe5ea52939d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZjFjY2QzNWNhNTdkYTRjZWY1NzQwZDYxZWNmZTVlYTUyOTM5ZDc=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-12-27T16:57:17Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-05T20:10:34Z"}, "message": "Compute parent module when collecting hir::MacroDef.", "tree": {"sha": "62fcb17edec6522dd0f0ef840accba560268147e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62fcb17edec6522dd0f0ef840accba560268147e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59f1ccd35ca57da4cef5740d61ecfe5ea52939d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59f1ccd35ca57da4cef5740d61ecfe5ea52939d7", "html_url": "https://github.com/rust-lang/rust/commit/59f1ccd35ca57da4cef5740d61ecfe5ea52939d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59f1ccd35ca57da4cef5740d61ecfe5ea52939d7/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68ec33261183ffc21de96d6f825b02373e22e835", "url": "https://api.github.com/repos/rust-lang/rust/commits/68ec33261183ffc21de96d6f825b02373e22e835", "html_url": "https://github.com/rust-lang/rust/commit/68ec33261183ffc21de96d6f825b02373e22e835"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "872fcb0f581d0fd0e7405af4b4580783289fbcf6", "filename": "compiler/rustc_middle/src/hir/map/collector.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/59f1ccd35ca57da4cef5740d61ecfe5ea52939d7/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59f1ccd35ca57da4cef5740d61ecfe5ea52939d7/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fcollector.rs?ref=59f1ccd35ca57da4cef5740d61ecfe5ea52939d7", "patch": "@@ -529,13 +529,22 @@ impl<'a, 'hir> Visitor<'hir> for NodeCollector<'a, 'hir> {\n     }\n \n     fn visit_macro_def(&mut self, macro_def: &'hir MacroDef<'hir>) {\n-        self.with_dep_node_owner(macro_def.hir_id.owner, macro_def, |this, hash| {\n-            this.insert_with_hash(\n-                macro_def.span,\n-                macro_def.hir_id,\n-                Node::MacroDef(macro_def),\n-                hash,\n-            );\n+        // Exported macros are visited directly from the crate root,\n+        // so they do not have `parent_node` set.\n+        // Find the correct enclosing module from their DefKey.\n+        let def_key = self.definitions.def_key(macro_def.hir_id.owner);\n+        let parent = def_key.parent.map_or(hir::CRATE_HIR_ID, |local_def_index| {\n+            self.definitions.local_def_id_to_hir_id(LocalDefId { local_def_index })\n+        });\n+        self.with_parent(parent, |this| {\n+            this.with_dep_node_owner(macro_def.hir_id.owner, macro_def, |this, hash| {\n+                this.insert_with_hash(\n+                    macro_def.span,\n+                    macro_def.hir_id,\n+                    Node::MacroDef(macro_def),\n+                    hash,\n+                );\n+            })\n         });\n     }\n "}]}