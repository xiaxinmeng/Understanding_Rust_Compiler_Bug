{"sha": "9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMGZmMjRiNmRiZWFhNTQ5Nzc1ZWY3N2U1ZmRmODQ5M2YwZjgyZGE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-23T13:35:49Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-23T13:35:49Z"}, "message": "Prefer `.nth(n)` over `.skip(n).next()`.\n\nFound by clippy.", "tree": {"sha": "778cd550b1a9c85845d97483daefa82cc0226781", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/778cd550b1a9c85845d97483daefa82cc0226781"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "html_url": "https://github.com/rust-lang/rust/commit/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "917945d662c42053383fe3e71cb0f313d585e459", "url": "https://api.github.com/repos/rust-lang/rust/commits/917945d662c42053383fe3e71cb0f313d585e459", "html_url": "https://github.com/rust-lang/rust/commit/917945d662c42053383fe3e71cb0f313d585e459"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6ed90fdd4b6ee64bed3afeaa4abf87beebfcee57", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "patch": "@@ -1232,7 +1232,7 @@ impl<'a> Formatter<'a> {\n             // If our string is longer that the precision, then we must have\n             // truncation. However other flags like `fill`, `width` and `align`\n             // must act as always.\n-            if let Some((i, _)) = s.char_indices().skip(max).next() {\n+            if let Some((i, _)) = s.char_indices().nth(max) {\n                 // LLVM here can't prove that `..i` won't panic `&s[..i]`, but\n                 // we know that it can't panic. Use `get` + `unwrap_or` to avoid\n                 // `unsafe` and otherwise don't emit any panic-related code"}, {"sha": "8219ec3df248aaebdbb096987fe6fae2cb5339d7", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "patch": "@@ -1111,7 +1111,7 @@ impl<'a, 'b: 'a, 'tcx: 'b> IsolatedEncoder<'a, 'b, 'tcx> {\n                 let trait_ref = tcx.impl_trait_ref(def_id);\n                 let parent = if let Some(trait_ref) = trait_ref {\n                     let trait_def = tcx.trait_def(trait_ref.def_id);\n-                    trait_def.ancestors(tcx, def_id).skip(1).next().and_then(|node| {\n+                    trait_def.ancestors(tcx, def_id).nth(1).and_then(|node| {\n                         match node {\n                             specialization_graph::Node::Impl(parent) => Some(parent),\n                             _ => None,"}, {"sha": "e88162bc1e92ee21ff9d5f9cffcbfbcbbcaea809", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "patch": "@@ -1434,7 +1434,7 @@ fn check_specialization_validity<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         hir::ImplItemKind::Type(_) => ty::AssociatedKind::Type\n     };\n \n-    let parent = ancestors.defs(tcx, trait_item.ident, kind, trait_def.def_id).skip(1).next()\n+    let parent = ancestors.defs(tcx, trait_item.ident, kind, trait_def.def_id).nth(1)\n         .map(|node_item| node_item.map(|parent| parent.defaultness));\n \n     if let Some(parent) = parent {"}, {"sha": "b9c565a9d3c23c590726725405e4f1bbf209aeff", "filename": "src/test/run-pass-fulldeps/auxiliary/proc_macro_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs?ref=9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "patch": "@@ -19,7 +19,7 @@ use proc_macro::*;\n \n #[proc_macro_attribute]\n pub fn attr_tru(_attr: TokenStream, item: TokenStream) -> TokenStream {\n-    let name = item.into_iter().skip(1).next().unwrap();\n+    let name = item.into_iter().nth(1).unwrap();\n     quote!(fn $name() -> bool { true })\n }\n "}, {"sha": "c4fc9ee53fd7fbde976b50d682d728cc48dbd5a5", "filename": "src/test/run-pass/command-before-exec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs?ref=9e0ff24b6dbeaa549775ef77e5fdf8493f0f82da", "patch": "@@ -24,7 +24,7 @@ use std::sync::Arc;\n use std::sync::atomic::{AtomicUsize, Ordering};\n \n fn main() {\n-    if let Some(arg) = env::args().skip(1).next() {\n+    if let Some(arg) = env::args().nth(1) {\n         match &arg[..] {\n             \"test1\" => println!(\"hello2\"),\n             \"test2\" => assert_eq!(env::var(\"FOO\").unwrap(), \"BAR\"),"}]}