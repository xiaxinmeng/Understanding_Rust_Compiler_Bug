{"sha": "f8726d781a971752a6918a20eea10cddca2114ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NzI2ZDc4MWE5NzE3NTJhNjkxOGEyMGVlYTEwY2RkY2EyMTE0ZWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-29T19:21:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-29T19:21:25Z"}, "message": "Merge #6601\n\n6601: add let and letm postfix to turn expressions into variables r=matklad a=bnjjj\n\nPartially resolve #6426 \n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "a790c011f73be0896e6e09ec2bd63a1a4289d0fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a790c011f73be0896e6e09ec2bd63a1a4289d0fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8726d781a971752a6918a20eea10cddca2114ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfw/S1CRBK7hj4Ov3rIwAAdHIIADP36aJiwFFJTKwVvs7/YDAu\nk8NGa68zln9yHbHcNTyK26mZzPw1nxdwJTeEmEeIpzffv4IwHcOp/dajEWLWGiea\noln+pseY4PR0xrrKiYXh+k101Gv/28KVJ93BaXg1suFDCHUCCBHaJyvTK7I2vmqT\nzfrnFkq54kgdtKW256qAmFZGNsbIPbLBtFq5w2etc6cVMlEubxBv7CBaerrnrXsv\nFoQYgfptF3x2yao+qRYtUw6wGTj0h1xYT8C0nlKBjMMWLh0nX7cJUPaNT71syVSw\nmh71uZDQv/qWC2t+V5mc6yZz48FIXZGBh3yviyPBbZuMRzHKtpIvHsl+lBZE2yE=\n=HJ1q\n-----END PGP SIGNATURE-----\n", "payload": "tree a790c011f73be0896e6e09ec2bd63a1a4289d0fb\nparent 68910d2f341ddd7635265c3847712cc7e44ef75e\nparent 474ebd60d1ae1057165e189bb539ba6a410e1d68\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1606677685 +0000\ncommitter GitHub <noreply@github.com> 1606677685 +0000\n\nMerge #6601\n\n6601: add let and letm postfix to turn expressions into variables r=matklad a=bnjjj\n\nPartially resolve #6426 \n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8726d781a971752a6918a20eea10cddca2114ed", "html_url": "https://github.com/rust-lang/rust/commit/f8726d781a971752a6918a20eea10cddca2114ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8726d781a971752a6918a20eea10cddca2114ed/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68910d2f341ddd7635265c3847712cc7e44ef75e", "url": "https://api.github.com/repos/rust-lang/rust/commits/68910d2f341ddd7635265c3847712cc7e44ef75e", "html_url": "https://github.com/rust-lang/rust/commit/68910d2f341ddd7635265c3847712cc7e44ef75e"}, {"sha": "474ebd60d1ae1057165e189bb539ba6a410e1d68", "url": "https://api.github.com/repos/rust-lang/rust/commits/474ebd60d1ae1057165e189bb539ba6a410e1d68", "html_url": "https://github.com/rust-lang/rust/commit/474ebd60d1ae1057165e189bb539ba6a410e1d68"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "1785794cc5c7cdb796bec08bb8663f876a664fbf", "filename": "crates/completion/src/completions/postfix.rs", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f8726d781a971752a6918a20eea10cddca2114ed/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8726d781a971752a6918a20eea10cddca2114ed/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=f8726d781a971752a6918a20eea10cddca2114ed", "patch": "@@ -5,6 +5,7 @@ mod format_like;\n use ide_db::ty_filter::TryEnum;\n use syntax::{\n     ast::{self, AstNode, AstToken},\n+    SyntaxKind::BLOCK_EXPR,\n     TextRange, TextSize,\n };\n use text_edit::TextEdit;\n@@ -220,6 +221,30 @@ pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     )\n     .add_to(acc);\n \n+    let parent_node = dot_receiver.syntax().parent().and_then(|p| p.parent());\n+    if let Some(parent) = parent_node {\n+        if parent.kind() == BLOCK_EXPR {\n+            postfix_snippet(\n+                ctx,\n+                cap,\n+                &dot_receiver,\n+                \"let\",\n+                \"let\",\n+                &format!(\"let $0 = {};\", receiver_text),\n+            )\n+            .add_to(acc);\n+            postfix_snippet(\n+                ctx,\n+                cap,\n+                &dot_receiver,\n+                \"letm\",\n+                \"let mut\",\n+                &format!(\"let mut $0 = {};\", receiver_text),\n+            )\n+            .add_to(acc);\n+        }\n+    }\n+\n     if let ast::Expr::Literal(literal) = dot_receiver.clone() {\n         if let Some(literal_text) = ast::String::cast(literal.token()) {\n             add_format_like_completions(acc, ctx, &dot_receiver, cap, &literal_text);\n@@ -289,6 +314,38 @@ fn main() {\n     let bar = true;\n     bar.<|>\n }\n+\"#,\n+            expect![[r#\"\n+                sn box   Box::new(expr)\n+                sn call  function(expr)\n+                sn dbg   dbg!(expr)\n+                sn dbgr  dbg!(&expr)\n+                sn if    if expr {}\n+                sn let   let\n+                sn letm  let mut\n+                sn match match expr {}\n+                sn not   !expr\n+                sn ok    Ok(expr)\n+                sn ref   &expr\n+                sn refm  &mut expr\n+                sn some  Some(expr)\n+                sn while while expr {}\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn postfix_completion_works_for_function_calln() {\n+        check(\n+            r#\"\n+fn foo(elt: bool) -> bool {\n+    !elt\n+}\n+\n+fn main() {\n+    let bar = true;\n+    foo(bar.<|>)\n+}\n \"#,\n             expect![[r#\"\n                 sn box   Box::new(expr)\n@@ -321,6 +378,8 @@ fn main() {\n                 sn call  function(expr)\n                 sn dbg   dbg!(expr)\n                 sn dbgr  dbg!(&expr)\n+                sn let   let\n+                sn letm  let mut\n                 sn match match expr {}\n                 sn ok    Ok(expr)\n                 sn ref   &expr"}, {"sha": "1ec2e9be72de5433a46669198c2b95a671d3d229", "filename": "crates/completion/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8726d781a971752a6918a20eea10cddca2114ed/crates%2Fcompletion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8726d781a971752a6918a20eea10cddca2114ed/crates%2Fcompletion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Flib.rs?ref=f8726d781a971752a6918a20eea10cddca2114ed", "patch": "@@ -44,6 +44,8 @@ pub use crate::{\n // - `expr.while` -> `while expr {}` or `while let ... {}` for `Option` or `Result`\n // - `expr.ref` -> `&expr`\n // - `expr.refm` -> `&mut expr`\n+// - `expr.let` -> `let <|> = expr;`\n+// - `expr.letm` -> `let mut <|> = expr;`\n // - `expr.not` -> `!expr`\n // - `expr.dbg` -> `dbg!(expr)`\n // - `expr.dbgr` -> `dbg!(&expr)`"}]}