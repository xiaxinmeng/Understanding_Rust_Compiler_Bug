{"sha": "67012158a379dbf58318346e87a631e7eb310bd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MDEyMTU4YTM3OWRiZjU4MzE4MzQ2ZTg3YTYzMWU3ZWIzMTBiZDU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-25T23:26:38Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-09T13:50:40Z"}, "message": "Move `analysis` to the query macro", "tree": {"sha": "fb53ed044e1ae793eed7b49767b9cd7b2b6cccd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb53ed044e1ae793eed7b49767b9cd7b2b6cccd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67012158a379dbf58318346e87a631e7eb310bd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67012158a379dbf58318346e87a631e7eb310bd5", "html_url": "https://github.com/rust-lang/rust/commit/67012158a379dbf58318346e87a631e7eb310bd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67012158a379dbf58318346e87a631e7eb310bd5/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cb0b8582ebbf9784db9cec06fff517badbf4553", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb0b8582ebbf9784db9cec06fff517badbf4553", "html_url": "https://github.com/rust-lang/rust/commit/2cb0b8582ebbf9784db9cec06fff517badbf4553"}], "stats": {"total": 37, "additions": 7, "deletions": 30}, "files": [{"sha": "05088dc419339ec83c3d8d41a8cc34a66519fd10", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=67012158a379dbf58318346e87a631e7eb310bd5", "patch": "@@ -360,8 +360,6 @@ rustc_dep_node_append!([define_dep_nodes!][ <'tcx>\n     [anon] TraitSelect,\n \n     [] CompileCodegenUnit(Symbol),\n-\n-    [eval_always] Analysis(CrateNum),\n ]);\n \n pub trait RecoverKey<'tcx>: Sized {"}, {"sha": "daf89cab8af6d81ab1c5867c943a000a6f213f3e", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=67012158a379dbf58318346e87a631e7eb310bd5", "patch": "@@ -60,6 +60,11 @@ rustc_queries! {\n             cache_on_disk_if { key.is_local() }\n         }\n \n+        query analysis(key: CrateNum) -> Result<(), ErrorReported> {\n+            eval_always\n+            desc { \"running analysis passes on this crate\" }\n+        }\n+\n         /// Maps from the `DefId` of an item (trait/struct/enum/fn) to its\n         /// associated generics.\n         query generics_of(key: DefId) -> &'tcx ty::Generics {"}, {"sha": "178c2362def6e9db554cbdef6f8c67c63c2048f5", "filename": "src/librustc/ty/query/config.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs?ref=67012158a379dbf58318346e87a631e7eb310bd5", "patch": "@@ -2,11 +2,10 @@ use crate::dep_graph::SerializedDepNodeIndex;\n use crate::dep_graph::{DepKind, DepNode};\n use crate::ty::query::caches::QueryCache;\n use crate::ty::query::plumbing::CycleError;\n-use crate::ty::query::queries;\n use crate::ty::query::{Query, QueryState};\n use crate::ty::TyCtxt;\n use rustc_data_structures::profiling::ProfileCategory;\n-use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::def_id::DefId;\n \n use crate::ich::StableHashingContext;\n use rustc_data_structures::fingerprint::Fingerprint;\n@@ -87,9 +86,3 @@ where\n         bug!(\"QueryDescription::load_from_disk() called for an unsupported query.\")\n     }\n }\n-\n-impl<'tcx> QueryDescription<'tcx> for queries::analysis<'tcx> {\n-    fn describe(_tcx: TyCtxt<'_>, _: CrateNum) -> Cow<'static, str> {\n-        \"running analysis passes on this crate\".into()\n-    }\n-}"}, {"sha": "f49c64a7b87a7707a6111f0c21c2ec68f44e037c", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=67012158a379dbf58318346e87a631e7eb310bd5", "patch": "@@ -104,9 +104,4 @@ pub use self::profiling_support::{IntoSelfProfilingString, QueryKeyStringBuilder\n // Queries marked with `fatal_cycle` do not need the latter implementation,\n // as they will raise an fatal error on query cycles instead.\n \n-rustc_query_append! { [define_queries!][ <'tcx>\n-    Other {\n-        /// Runs analysis passes on the crate.\n-        [eval_always] fn analysis: Analysis(CrateNum) -> Result<(), ErrorReported>,\n-    },\n-]}\n+rustc_query_append! { [define_queries!][<'tcx>] }"}, {"sha": "1769a925ec30155677511aba49abbaa6e804c320", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67012158a379dbf58318346e87a631e7eb310bd5/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=67012158a379dbf58318346e87a631e7eb310bd5", "patch": "@@ -1246,20 +1246,6 @@ pub fn force_from_dep_node(tcx: TyCtxt<'_>, dep_node: &DepNode) -> bool {\n         DepKind::CompileCodegenUnit => {\n             bug!(\"force_from_dep_node: encountered {:?}\", dep_node)\n         }\n-\n-        DepKind::Analysis => {\n-            let def_id = if let Some(def_id) = dep_node.extract_def_id(tcx) {\n-                def_id\n-            } else {\n-                // Return from the whole function.\n-                return false\n-            };\n-            tcx.force_query::<crate::ty::query::queries::analysis<'_>>(\n-                def_id.krate,\n-                DUMMY_SP,\n-                *dep_node\n-            );\n-        }\n     );\n \n     true"}]}