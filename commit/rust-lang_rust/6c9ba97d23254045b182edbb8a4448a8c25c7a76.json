{"sha": "6c9ba97d23254045b182edbb8a4448a8c25c7a76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOWJhOTdkMjMyNTQwNDViMTgyZWRiYjhhNDQ0OGE4YzI1YzdhNzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-14T09:38:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-14T09:42:54Z"}, "message": "miri: helper methods for max values of machine's usize/isize", "tree": {"sha": "7c55674f45d644f179cc09bee5b3bbae2c134d1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c55674f45d644f179cc09bee5b3bbae2c134d1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c9ba97d23254045b182edbb8a4448a8c25c7a76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9ba97d23254045b182edbb8a4448a8c25c7a76", "html_url": "https://github.com/rust-lang/rust/commit/6c9ba97d23254045b182edbb8a4448a8c25c7a76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c9ba97d23254045b182edbb8a4448a8c25c7a76/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e380b797b22e5361a43b2b82f6278df17d89f3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e380b797b22e5361a43b2b82f6278df17d89f3e", "html_url": "https://github.com/rust-lang/rust/commit/5e380b797b22e5361a43b2b82f6278df17d89f3e"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "7c77b2c0711b9ee698c6d6fda501fcaefd9de304", "filename": "src/librustc/mir/interpret/pointer.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6c9ba97d23254045b182edbb8a4448a8c25c7a76/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c9ba97d23254045b182edbb8a4448a8c25c7a76/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs?ref=6c9ba97d23254045b182edbb8a4448a8c25c7a76", "patch": "@@ -1,4 +1,5 @@\n use std::fmt::{self, Display};\n+use std::convert::TryFrom;\n \n use crate::mir;\n use crate::ty::layout::{self, HasDataLayout, Size};\n@@ -40,6 +41,18 @@ pub trait PointerArithmetic: layout::HasDataLayout {\n         self.data_layout().pointer_size\n     }\n \n+    #[inline]\n+    fn usize_max(&self) -> u64 {\n+        let max_usize_plus_1 = 1u128 << self.pointer_size().bits();\n+        u64::try_from(max_usize_plus_1-1).unwrap()\n+    }\n+\n+    #[inline]\n+    fn isize_max(&self) -> i64 {\n+        let max_isize_plus_1 = 1u128 << (self.pointer_size().bits()-1);\n+        i64::try_from(max_isize_plus_1-1).unwrap()\n+    }\n+\n     /// Helper function: truncate given value-\"overflowed flag\" pair to pointer size and\n     /// update \"overflowed flag\" if there was an overflow.\n     /// This should be called by all the other methods before returning!"}]}