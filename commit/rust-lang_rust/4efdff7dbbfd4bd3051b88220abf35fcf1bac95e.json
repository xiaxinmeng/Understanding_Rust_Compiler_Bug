{"sha": "4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZmRmZjdkYmJmZDRiZDMwNTFiODgyMjBhYmYzNWZjZjFiYWM5NWU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-15T23:55:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-15T23:55:07Z"}, "message": "Rollup merge of #62646 - estebank:wording, r=petrochenkov\n\nTweak wording in feature gate errors", "tree": {"sha": "cb4169266de785998c33b9f6cfdbcac84d569fc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb4169266de785998c33b9f6cfdbcac84d569fc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdLRJbCRBK7hj4Ov3rIwAAdHIIAJYxIHUuJD6FuXRI25sLqmO7\nAGd93EmeW9bHKgejKiF9cCtFohlCUbSXBOCcOJ+QJaS+GF8oUodOWAln3c5sJPtv\nR8BuV/KHJ96LFCYZeZ8yohp++G+QMdRredeK8ooheihaC3eKX1ikRb1JGS6VqfU9\nSRGIXccwO+PqsJxayvxnBMgEdFuihOWbUNWQqdACPaOyv65VSPlekfmVI6/JBvUw\nDuRbaas7qIpIq6+Rgo9y4Cr1aRGdySZLOAg/RROPaCxI/sr6XPgTu25ijkhICS8S\ng8A3pbiN3TDPik+Ua0UjBWC+TZAeLUdb6tRQTQWE5r8LC9m3iNTAxag5fz8uvbg=\n=k6c3\n-----END PGP SIGNATURE-----\n", "payload": "tree cb4169266de785998c33b9f6cfdbcac84d569fc2\nparent ee8194002e47b1a6103c7a8f5d592c625b5efba7\nparent b7459f329f3a0a601cb1852358a85c6edd3057ed\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1563234907 -0400\ncommitter GitHub <noreply@github.com> 1563234907 -0400\n\nRollup merge of #62646 - estebank:wording, r=petrochenkov\n\nTweak wording in feature gate errors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "html_url": "https://github.com/rust-lang/rust/commit/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee8194002e47b1a6103c7a8f5d592c625b5efba7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8194002e47b1a6103c7a8f5d592c625b5efba7", "html_url": "https://github.com/rust-lang/rust/commit/ee8194002e47b1a6103c7a8f5d592c625b5efba7"}, {"sha": "b7459f329f3a0a601cb1852358a85c6edd3057ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7459f329f3a0a601cb1852358a85c6edd3057ed", "html_url": "https://github.com/rust-lang/rust/commit/b7459f329f3a0a601cb1852358a85c6edd3057ed"}], "stats": {"total": 124, "additions": 62, "deletions": 62}, "files": [{"sha": "ed7d6c35fb97a8bf066307a139e8963ca39a9a7e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -1451,7 +1451,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     template!(Word),\n     Gated(Stability::Unstable,\n         sym::dropck_eyepatch,\n-        \"may_dangle has unstable semantics and may be removed in the future\",\n+        \"`may_dangle` has unstable semantics and may be removed in the future\",\n         cfg_fn!(dropck_eyepatch))),\n     (sym::unwind, Whitelisted, template!(List: \"allowed|aborts\"), Gated(Stability::Unstable,\n                                 sym::unwind_attributes,\n@@ -1693,8 +1693,8 @@ impl<'a> Context<'a> {\n             // Only run the custom attribute lint during regular feature gate\n             // checking. Macro gating runs before the plugin attributes are\n             // registered, so we skip this in that case.\n-            let msg = format!(\"The attribute `{}` is currently unknown to the compiler and \\\n-                                may have meaning added to it in the future\", attr.path);\n+            let msg = format!(\"the attribute `{}` is currently unknown to the compiler and \\\n+                               may have meaning added to it in the future\", attr.path);\n             gate_feature!(self, custom_attribute, attr.span, &msg);\n         }\n     }"}, {"sha": "1f9731fcfbefb5915b4e9cb9794f9d452ed5023e", "filename": "src/test/ui/conditional-compilation/cfg-generic-params.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-generic-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-generic-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-generic-params.stderr?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -16,7 +16,7 @@ error: only lifetime parameters can be used in this context\n LL | struct WhereBad where for<#[cfg(no)] 'a, #[cfg(yes)] T> u8: Copy;\n    |                                                      ^\n \n-error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:19:29\n    |\n LL | fn f_lt_yes<#[cfg_attr(yes, unknown)] 'a>() {}\n@@ -25,7 +25,7 @@ LL | fn f_lt_yes<#[cfg_attr(yes, unknown)] 'a>() {}\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:21:29\n    |\n LL | fn f_ty_yes<#[cfg_attr(yes, unknown)] T>() {}\n@@ -34,7 +34,7 @@ LL | fn f_ty_yes<#[cfg_attr(yes, unknown)] T>() {}\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:24:34\n    |\n LL | type FnYes = for<#[cfg_attr(yes, unknown)] 'a> fn();\n@@ -43,7 +43,7 @@ LL | type FnYes = for<#[cfg_attr(yes, unknown)] 'a> fn();\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:28:40\n    |\n LL | type PolyYes = dyn for<#[cfg_attr(yes, unknown)] 'a> Copy;\n@@ -52,7 +52,7 @@ LL | type PolyYes = dyn for<#[cfg_attr(yes, unknown)] 'a> Copy;\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:32:43\n    |\n LL | struct WhereYes where for<#[cfg_attr(yes, unknown)] 'a> u8: Copy;"}, {"sha": "8fe11cb02a021b0c05e1287b69329b438058c460", "filename": "src/test/ui/feature-gates/feature-gate-custom_attribute2.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.rs?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -4,54 +4,54 @@\n // gate-test-custom_attribute\n \n struct StLt<#[lt_struct] 'a>(&'a u32);\n-//~^ ERROR The attribute `lt_struct` is currently unknown to the compiler\n+//~^ ERROR the attribute `lt_struct` is currently unknown to the compiler\n struct StTy<#[ty_struct] I>(I);\n-//~^ ERROR The attribute `ty_struct` is currently unknown to the compiler\n+//~^ ERROR the attribute `ty_struct` is currently unknown to the compiler\n \n enum EnLt<#[lt_enum] 'b> { A(&'b u32), B }\n-//~^ ERROR The attribute `lt_enum` is currently unknown to the compiler\n+//~^ ERROR the attribute `lt_enum` is currently unknown to the compiler\n enum EnTy<#[ty_enum] J> { A(J), B }\n-//~^ ERROR The attribute `ty_enum` is currently unknown to the compiler\n+//~^ ERROR the attribute `ty_enum` is currently unknown to the compiler\n \n trait TrLt<#[lt_trait] 'c> { fn foo(&self, _: &'c [u32]) -> &'c u32; }\n-//~^ ERROR The attribute `lt_trait` is currently unknown to the compiler\n+//~^ ERROR the attribute `lt_trait` is currently unknown to the compiler\n trait TrTy<#[ty_trait] K> { fn foo(&self, _: K); }\n-//~^ ERROR The attribute `ty_trait` is currently unknown to the compiler\n+//~^ ERROR the attribute `ty_trait` is currently unknown to the compiler\n \n type TyLt<#[lt_type] 'd> = &'d u32;\n-//~^ ERROR The attribute `lt_type` is currently unknown to the compiler\n+//~^ ERROR the attribute `lt_type` is currently unknown to the compiler\n type TyTy<#[ty_type] L> = (L, );\n-//~^ ERROR The attribute `ty_type` is currently unknown to the compiler\n+//~^ ERROR the attribute `ty_type` is currently unknown to the compiler\n \n impl<#[lt_inherent] 'e> StLt<'e> { }\n-//~^ ERROR The attribute `lt_inherent` is currently unknown to the compiler\n+//~^ ERROR the attribute `lt_inherent` is currently unknown to the compiler\n impl<#[ty_inherent] M> StTy<M> { }\n-//~^ ERROR The attribute `ty_inherent` is currently unknown to the compiler\n+//~^ ERROR the attribute `ty_inherent` is currently unknown to the compiler\n \n impl<#[lt_impl_for] 'f> TrLt<'f> for StLt<'f> {\n-    //~^ ERROR The attribute `lt_impl_for` is currently unknown to the compiler\n+    //~^ ERROR the attribute `lt_impl_for` is currently unknown to the compiler\n     fn foo(&self, _: &'f [u32]) -> &'f u32 { loop { } }\n }\n impl<#[ty_impl_for] N> TrTy<N> for StTy<N> {\n-    //~^ ERROR The attribute `ty_impl_for` is currently unknown to the compiler\n+    //~^ ERROR the attribute `ty_impl_for` is currently unknown to the compiler\n     fn foo(&self, _: N) { }\n }\n \n fn f_lt<#[lt_fn] 'g>(_: &'g [u32]) -> &'g u32 { loop { } }\n-//~^ ERROR The attribute `lt_fn` is currently unknown to the compiler\n+//~^ ERROR the attribute `lt_fn` is currently unknown to the compiler\n fn f_ty<#[ty_fn] O>(_: O) { }\n-//~^ ERROR The attribute `ty_fn` is currently unknown to the compiler\n+//~^ ERROR the attribute `ty_fn` is currently unknown to the compiler\n \n impl<I> StTy<I> {\n     fn m_lt<#[lt_meth] 'h>(_: &'h [u32]) -> &'h u32 { loop { } }\n-    //~^ ERROR The attribute `lt_meth` is currently unknown to the compiler\n+    //~^ ERROR the attribute `lt_meth` is currently unknown to the compiler\n     fn m_ty<#[ty_meth] P>(_: P) { }\n-    //~^ ERROR The attribute `ty_meth` is currently unknown to the compiler\n+    //~^ ERROR the attribute `ty_meth` is currently unknown to the compiler\n }\n \n fn hof_lt<Q>(_: Q)\n     where Q: for <#[lt_hof] 'i> Fn(&'i [u32]) -> &'i u32\n-    //~^ ERROR The attribute `lt_hof` is currently unknown to the compiler\n+    //~^ ERROR the attribute `lt_hof` is currently unknown to the compiler\n {\n }\n "}, {"sha": "15e0c41b90637909c936075e767e9c45462ca5c8", "filename": "src/test/ui/feature-gates/feature-gate-custom_attribute2.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: The attribute `lt_struct` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_struct` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:6:13\n    |\n LL | struct StLt<#[lt_struct] 'a>(&'a u32);\n@@ -7,7 +7,7 @@ LL | struct StLt<#[lt_struct] 'a>(&'a u32);\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_struct` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_struct` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:8:13\n    |\n LL | struct StTy<#[ty_struct] I>(I);\n@@ -16,7 +16,7 @@ LL | struct StTy<#[ty_struct] I>(I);\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_enum` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_enum` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:11:11\n    |\n LL | enum EnLt<#[lt_enum] 'b> { A(&'b u32), B }\n@@ -25,7 +25,7 @@ LL | enum EnLt<#[lt_enum] 'b> { A(&'b u32), B }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_enum` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_enum` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:13:11\n    |\n LL | enum EnTy<#[ty_enum] J> { A(J), B }\n@@ -34,7 +34,7 @@ LL | enum EnTy<#[ty_enum] J> { A(J), B }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_trait` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_trait` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:16:12\n    |\n LL | trait TrLt<#[lt_trait] 'c> { fn foo(&self, _: &'c [u32]) -> &'c u32; }\n@@ -43,7 +43,7 @@ LL | trait TrLt<#[lt_trait] 'c> { fn foo(&self, _: &'c [u32]) -> &'c u32; }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_trait` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_trait` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:18:12\n    |\n LL | trait TrTy<#[ty_trait] K> { fn foo(&self, _: K); }\n@@ -52,7 +52,7 @@ LL | trait TrTy<#[ty_trait] K> { fn foo(&self, _: K); }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_type` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_type` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:21:11\n    |\n LL | type TyLt<#[lt_type] 'd> = &'d u32;\n@@ -61,7 +61,7 @@ LL | type TyLt<#[lt_type] 'd> = &'d u32;\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_type` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_type` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:23:11\n    |\n LL | type TyTy<#[ty_type] L> = (L, );\n@@ -70,7 +70,7 @@ LL | type TyTy<#[ty_type] L> = (L, );\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:26:6\n    |\n LL | impl<#[lt_inherent] 'e> StLt<'e> { }\n@@ -79,7 +79,7 @@ LL | impl<#[lt_inherent] 'e> StLt<'e> { }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:28:6\n    |\n LL | impl<#[ty_inherent] M> StTy<M> { }\n@@ -88,7 +88,7 @@ LL | impl<#[ty_inherent] M> StTy<M> { }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:31:6\n    |\n LL | impl<#[lt_impl_for] 'f> TrLt<'f> for StLt<'f> {\n@@ -97,7 +97,7 @@ LL | impl<#[lt_impl_for] 'f> TrLt<'f> for StLt<'f> {\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:35:6\n    |\n LL | impl<#[ty_impl_for] N> TrTy<N> for StTy<N> {\n@@ -106,7 +106,7 @@ LL | impl<#[ty_impl_for] N> TrTy<N> for StTy<N> {\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_fn` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_fn` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:40:9\n    |\n LL | fn f_lt<#[lt_fn] 'g>(_: &'g [u32]) -> &'g u32 { loop { } }\n@@ -115,7 +115,7 @@ LL | fn f_lt<#[lt_fn] 'g>(_: &'g [u32]) -> &'g u32 { loop { } }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_fn` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_fn` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:42:9\n    |\n LL | fn f_ty<#[ty_fn] O>(_: O) { }\n@@ -124,7 +124,7 @@ LL | fn f_ty<#[ty_fn] O>(_: O) { }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_meth` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_meth` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:46:13\n    |\n LL |     fn m_lt<#[lt_meth] 'h>(_: &'h [u32]) -> &'h u32 { loop { } }\n@@ -133,7 +133,7 @@ LL |     fn m_lt<#[lt_meth] 'h>(_: &'h [u32]) -> &'h u32 { loop { } }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `ty_meth` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `ty_meth` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:48:13\n    |\n LL |     fn m_ty<#[ty_meth] P>(_: P) { }\n@@ -142,7 +142,7 @@ LL |     fn m_ty<#[ty_meth] P>(_: P) { }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `lt_hof` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `lt_hof` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:53:19\n    |\n LL |     where Q: for <#[lt_hof] 'i> Fn(&'i [u32]) -> &'i u32"}, {"sha": "23db92c15df650155725b14555eeba49096a668d", "filename": "src/test/ui/feature-gates/feature-gate-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.rs?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -4,7 +4,7 @@\n \n struct Pt<A>(A);\n unsafe impl<#[may_dangle] A> Drop for Pt<A> {\n-    //~^ ERROR may_dangle has unstable semantics and may be removed in the future\n+    //~^ ERROR `may_dangle` has unstable semantics and may be removed in the future\n     fn drop(&mut self) { }\n }\n "}, {"sha": "b344d7375747331ca9984f61b7e86fb492bb1ca0", "filename": "src/test/ui/feature-gates/feature-gate-may-dangle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: may_dangle has unstable semantics and may be removed in the future\n+error[E0658]: `may_dangle` has unstable semantics and may be removed in the future\n   --> $DIR/feature-gate-may-dangle.rs:6:13\n    |\n LL | unsafe impl<#[may_dangle] A> Drop for Pt<A> {"}, {"sha": "a7f6f8bfb13d60f81382c5ad3111cbbe6decbecd", "filename": "src/test/ui/proc-macro/proc-macro-gates2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: The attribute `empty_attr` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `empty_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/proc-macro-gates2.rs:12:11\n    |\n LL | fn _test6<#[empty_attr] T>() {}\n@@ -7,7 +7,7 @@ LL | fn _test6<#[empty_attr] T>() {}\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `empty_attr` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `empty_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/proc-macro-gates2.rs:17:9\n    |\n LL |         #[empty_attr]"}, {"sha": "b957c673a41f1a207a36c3c4186d3cc22504a3a3", "filename": "src/test/ui/rfc-2565-param-attrs/param-attrs-builtin-attrs.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.rs?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -5,7 +5,7 @@ extern \"C\" {\n         /// Foo\n         //~^ ERROR documentation comments cannot be applied to function\n         #[test] a: i32,\n-        //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+        //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n         /// Bar\n         //~^ ERROR documentation comments cannot be applied to function\n         #[must_use]\n@@ -21,7 +21,7 @@ type FnType = fn(\n     /// Foo\n     //~^ ERROR documentation comments cannot be applied to function\n     #[test] a: u32,\n-    //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+    //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n     /// Bar\n     //~^ ERROR documentation comments cannot be applied to function\n     #[must_use]\n@@ -36,7 +36,7 @@ pub fn foo(\n     /// Foo\n     //~^ ERROR documentation comments cannot be applied to function\n     #[test] a: u32,\n-    //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+    //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n     /// Bar\n     //~^ ERROR documentation comments cannot be applied to function\n     #[must_use]\n@@ -56,7 +56,7 @@ impl SelfStruct {\n         /// Bar\n         //~^ ERROR documentation comments cannot be applied to function\n         #[test] a: i32,\n-        //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+        //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n         /// Baz\n         //~^ ERROR documentation comments cannot be applied to function\n         #[must_use]\n@@ -77,7 +77,7 @@ impl RefStruct {\n         /// Bar\n         //~^ ERROR documentation comments cannot be applied to function\n         #[test] a: i32,\n-        //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+        //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n         /// Baz\n         //~^ ERROR documentation comments cannot be applied to function\n         #[must_use]\n@@ -96,7 +96,7 @@ trait RefTrait {\n         /// Bar\n         //~^ ERROR documentation comments cannot be applied to function\n         #[test] a: i32,\n-        //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+        //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n         /// Baz\n         //~^ ERROR documentation comments cannot be applied to function\n         #[must_use]\n@@ -115,7 +115,7 @@ impl RefTrait for RefStruct {\n         /// Bar\n         //~^ ERROR documentation comments cannot be applied to function\n         #[test] a: i32,\n-        //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+        //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n         /// Baz\n         //~^ ERROR documentation comments cannot be applied to function\n         #[must_use]\n@@ -132,7 +132,7 @@ fn main() {\n         /// Foo\n         //~^ ERROR documentation comments cannot be applied to function\n         #[test] a: u32,\n-        //~^ ERROR The attribute `test` is currently unknown to the compiler and may have\n+        //~^ ERROR the attribute `test` is currently unknown to the compiler and may have\n         /// Bar\n         //~^ ERROR documentation comments cannot be applied to function\n         #[must_use]"}, {"sha": "a57572abb3513c98419b4185409d3b1dae087e74", "filename": "src/test/ui/rfc-2565-param-attrs/param-attrs-builtin-attrs.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4efdff7dbbfd4bd3051b88220abf35fcf1bac95e/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.stderr?ref=4efdff7dbbfd4bd3051b88220abf35fcf1bac95e", "patch": "@@ -262,7 +262,7 @@ error: allow, cfg, cfg_attr, deny, forbid, and warn are the only allowed built-i\n LL |         #[no_mangle] b: i32\n    |         ^^^^^^^^^^^^\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:7:9\n    |\n LL |         #[test] a: i32,\n@@ -271,7 +271,7 @@ LL |         #[test] a: i32,\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:23:5\n    |\n LL |     #[test] a: u32,\n@@ -280,7 +280,7 @@ LL |     #[test] a: u32,\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:38:5\n    |\n LL |     #[test] a: u32,\n@@ -289,7 +289,7 @@ LL |     #[test] a: u32,\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:58:9\n    |\n LL |         #[test] a: i32,\n@@ -298,7 +298,7 @@ LL |         #[test] a: i32,\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:79:9\n    |\n LL |         #[test] a: i32,\n@@ -307,7 +307,7 @@ LL |         #[test] a: i32,\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:98:9\n    |\n LL |         #[test] a: i32,\n@@ -316,7 +316,7 @@ LL |         #[test] a: i32,\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:117:9\n    |\n LL |         #[test] a: i32,\n@@ -325,7 +325,7 @@ LL |         #[test] a: i32,\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n-error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n+error[E0658]: the attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:134:9\n    |\n LL |         #[test] a: u32,"}]}