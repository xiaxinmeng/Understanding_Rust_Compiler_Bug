{"sha": "f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2", "node_id": "C_kwDOAAsO6NoAKGY3Y2MyMGFmOGM3YmYwODVkMGZkYzNmZjIwYjRmM2I4NTdiN2U5ZTI", "commit": {"author": {"name": "Tshepang Mbambo", "email": "tshepang@gmail.com", "date": "2023-01-30T05:20:38Z"}, "committer": {"name": "Tshepang Mbambo", "email": "tshepang@gmail.com", "date": "2023-01-30T05:20:38Z"}, "message": "use a more descriptive name", "tree": {"sha": "9d65b2f10f871ffc3aa947a990fa2a594f452d68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d65b2f10f871ffc3aa947a990fa2a594f452d68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2", "html_url": "https://github.com/rust-lang/rust/commit/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a4b00beaa208388c2f140866674605aceab0fe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a4b00beaa208388c2f140866674605aceab0fe9", "html_url": "https://github.com/rust-lang/rust/commit/2a4b00beaa208388c2f140866674605aceab0fe9"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "7a05ee2ff37fdc3dbc3324603b203fec44e59f60", "filename": "compiler/rustc_middle/src/mir/mono.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs?ref=f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2", "patch": "@@ -318,16 +318,19 @@ impl<'tcx> CodegenUnit<'tcx> {\n         base_n::encode(hash, base_n::CASE_INSENSITIVE)\n     }\n \n-    pub fn estimate_size(&mut self, tcx: TyCtxt<'tcx>) {\n+    pub fn create_size_estimate(&mut self, tcx: TyCtxt<'tcx>) {\n         // Estimate the size of a codegen unit as (approximately) the number of MIR\n         // statements it corresponds to.\n         self.size_estimate = Some(self.items.keys().map(|mi| mi.size_estimate(tcx)).sum());\n     }\n \n     #[inline]\n+    /// Should only be called if [`create_size_estimate`] has previously been called.\n+    ///\n+    /// [`create_size_estimate`]: Self::create_size_estimate\n     pub fn size_estimate(&self) -> usize {\n-        // Should only be called if `estimate_size` has previously been called.\n-        self.size_estimate.expect(\"estimate_size must be called before getting a size_estimate\")\n+        self.size_estimate\n+            .expect(\"create_size_estimate must be called before getting a size_estimate\")\n     }\n \n     pub fn modify_size_estimate(&mut self, delta: usize) {"}, {"sha": "615126e8b5896c789e162522a69b43fd2b1df671", "filename": "compiler/rustc_monomorphize/src/partitioning/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs?ref=f7cc20af8c7bf085d0fdc3ff20b4f3b857b7e9e2", "patch": "@@ -180,7 +180,7 @@ pub fn partition<'tcx>(\n         partitioner.place_root_mono_items(cx, mono_items)\n     };\n \n-    initial_partitioning.codegen_units.iter_mut().for_each(|cgu| cgu.estimate_size(tcx));\n+    initial_partitioning.codegen_units.iter_mut().for_each(|cgu| cgu.create_size_estimate(tcx));\n \n     debug_dump(tcx, \"INITIAL PARTITIONING:\", initial_partitioning.codegen_units.iter());\n \n@@ -200,7 +200,7 @@ pub fn partition<'tcx>(\n         partitioner.place_inlined_mono_items(cx, initial_partitioning)\n     };\n \n-    post_inlining.codegen_units.iter_mut().for_each(|cgu| cgu.estimate_size(tcx));\n+    post_inlining.codegen_units.iter_mut().for_each(|cgu| cgu.create_size_estimate(tcx));\n \n     debug_dump(tcx, \"POST INLINING:\", post_inlining.codegen_units.iter());\n "}]}