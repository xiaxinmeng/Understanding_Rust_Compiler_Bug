{"sha": "914c9aa78d7d43d268690e2cf1ae634795cd29aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNGM5YWE3OGQ3ZDQzZDI2ODY5MGUyY2YxYWU2MzQ3OTVjZDI5YWE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-11T18:58:00Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-11T19:10:09Z"}, "message": "resolve: Always resolve visibilities on impl items", "tree": {"sha": "1ca9e89c6b06e1dafaf9617001df383da9fa9954", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ca9e89c6b06e1dafaf9617001df383da9fa9954"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/914c9aa78d7d43d268690e2cf1ae634795cd29aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/914c9aa78d7d43d268690e2cf1ae634795cd29aa", "html_url": "https://github.com/rust-lang/rust/commit/914c9aa78d7d43d268690e2cf1ae634795cd29aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/914c9aa78d7d43d268690e2cf1ae634795cd29aa/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90b957a17c1abba979aa41234ce0993a61030e67", "url": "https://api.github.com/repos/rust-lang/rust/commits/90b957a17c1abba979aa41234ce0993a61030e67", "html_url": "https://github.com/rust-lang/rust/commit/90b957a17c1abba979aa41234ce0993a61030e67"}], "stats": {"total": 58, "additions": 46, "deletions": 12}, "files": [{"sha": "e2578d67e730cea82ff5bf1d4babc3c93d8acb7b", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/914c9aa78d7d43d268690e2cf1ae634795cd29aa/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/914c9aa78d7d43d268690e2cf1ae634795cd29aa/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=914c9aa78d7d43d268690e2cf1ae634795cd29aa", "patch": "@@ -647,8 +647,6 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 self.r.define(parent, ident, TypeNS, imported_binding);\n             }\n \n-            ItemKind::GlobalAsm(..) => {}\n-\n             ItemKind::Mod(..) if ident.name == kw::Invalid => {} // Crate root\n \n             ItemKind::Mod(..) => {\n@@ -667,9 +665,6 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 self.parent_scope.module = module;\n             }\n \n-            // Handled in `rustc_metadata::{native_libs,link_args}`\n-            ItemKind::ForeignMod(..) => {}\n-\n             // These items live in the value namespace.\n             ItemKind::Static(..) => {\n                 let res = Res::Def(DefKind::Static, self.r.definitions.local_def_id(item.id));\n@@ -765,12 +760,6 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 self.insert_field_names_local(def_id, vdata);\n             }\n \n-            ItemKind::Impl(.., ref impl_items) => {\n-                for impl_item in impl_items {\n-                    self.resolve_visibility(&impl_item.vis);\n-                }\n-            }\n-\n             ItemKind::Trait(..) => {\n                 let def_id = self.r.definitions.local_def_id(item.id);\n \n@@ -785,6 +774,9 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 self.parent_scope.module = module;\n             }\n \n+            // These items do not add names to modules.\n+            ItemKind::Impl(..) | ItemKind::ForeignMod(..) | ItemKind::GlobalAsm(..) => {}\n+\n             ItemKind::MacroDef(..) | ItemKind::Mac(_) => unreachable!(),\n         }\n     }\n@@ -1118,7 +1110,6 @@ macro_rules! method {\n }\n \n impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n-    method!(visit_impl_item: ast::ImplItem, ast::ImplItemKind::Macro, walk_impl_item);\n     method!(visit_expr:      ast::Expr,     ast::ExprKind::Mac,       walk_expr);\n     method!(visit_pat:       ast::Pat,      ast::PatKind::Mac,        walk_pat);\n     method!(visit_ty:        ast::Ty,       ast::TyKind::Mac,         walk_ty);\n@@ -1202,6 +1193,15 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n         visit::walk_trait_item(self, item);\n     }\n \n+    fn visit_impl_item(&mut self, item: &'b ast::ImplItem) {\n+        if let ast::ImplItemKind::Macro(..) = item.kind {\n+            self.visit_invoc(item.id);\n+        } else {\n+            self.resolve_visibility(&item.vis);\n+            visit::walk_impl_item(self, item);\n+        }\n+    }\n+\n     fn visit_token(&mut self, t: Token) {\n         if let token::Interpolated(nt) = t.kind {\n             if let token::NtExpr(ref expr) = *nt {"}, {"sha": "9b4fe498239b6b32500896f78dc8ceeb3c64062b", "filename": "src/test/ui/resolve/impl-items-vis-unresolved.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/914c9aa78d7d43d268690e2cf1ae634795cd29aa/src%2Ftest%2Fui%2Fresolve%2Fimpl-items-vis-unresolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/914c9aa78d7d43d268690e2cf1ae634795cd29aa/src%2Ftest%2Fui%2Fresolve%2Fimpl-items-vis-unresolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fimpl-items-vis-unresolved.rs?ref=914c9aa78d7d43d268690e2cf1ae634795cd29aa", "patch": "@@ -0,0 +1,25 @@\n+// Visibilities on impl items expanded from macros are resolved (issue #64705).\n+\n+macro_rules! perftools_inline {\n+    ($($item:tt)*) => (\n+        $($item)*\n+    );\n+}\n+\n+mod state {\n+    pub struct RawFloatState;\n+    impl RawFloatState {\n+        perftools_inline! {\n+            pub(super) fn new() {} // OK\n+        }\n+    }\n+}\n+\n+pub struct RawFloatState;\n+impl RawFloatState {\n+    perftools_inline! {\n+        pub(super) fn new() {} //~ ERROR failed to resolve: there are too many initial `super`s\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "8e285e53124007009761f5dde046d9d752b5d651", "filename": "src/test/ui/resolve/impl-items-vis-unresolved.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/914c9aa78d7d43d268690e2cf1ae634795cd29aa/src%2Ftest%2Fui%2Fresolve%2Fimpl-items-vis-unresolved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/914c9aa78d7d43d268690e2cf1ae634795cd29aa/src%2Ftest%2Fui%2Fresolve%2Fimpl-items-vis-unresolved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fimpl-items-vis-unresolved.stderr?ref=914c9aa78d7d43d268690e2cf1ae634795cd29aa", "patch": "@@ -0,0 +1,9 @@\n+error[E0433]: failed to resolve: there are too many initial `super`s.\n+  --> $DIR/impl-items-vis-unresolved.rs:21:13\n+   |\n+LL |         pub(super) fn new() {}\n+   |             ^^^^^ there are too many initial `super`s.\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}]}