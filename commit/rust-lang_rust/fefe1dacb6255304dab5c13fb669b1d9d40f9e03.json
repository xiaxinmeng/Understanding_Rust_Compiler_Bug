{"sha": "fefe1dacb6255304dab5c13fb669b1d9d40f9e03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZmUxZGFjYjYyNTUzMDRkYWI1YzEzZmI2NjliMWQ5ZDQwZjllMDM=", "commit": {"author": {"name": "Alexander Ronald Altman", "email": "alexanderaltman@me.com", "date": "2019-01-17T05:03:29Z"}, "committer": {"name": "Alexander Ronald Altman", "email": "alexanderaltman@me.com", "date": "2019-01-17T05:03:29Z"}, "message": "Fix tidy errors.", "tree": {"sha": "47ee07538936d47f02501d09765d335ad01fda9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47ee07538936d47f02501d09765d335ad01fda9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fefe1dacb6255304dab5c13fb669b1d9d40f9e03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fefe1dacb6255304dab5c13fb669b1d9d40f9e03", "html_url": "https://github.com/rust-lang/rust/commit/fefe1dacb6255304dab5c13fb669b1d9d40f9e03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fefe1dacb6255304dab5c13fb669b1d9d40f9e03/comments", "author": {"login": "pthariensflame", "id": 1847577, "node_id": "MDQ6VXNlcjE4NDc1Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1847577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pthariensflame", "html_url": "https://github.com/pthariensflame", "followers_url": "https://api.github.com/users/pthariensflame/followers", "following_url": "https://api.github.com/users/pthariensflame/following{/other_user}", "gists_url": "https://api.github.com/users/pthariensflame/gists{/gist_id}", "starred_url": "https://api.github.com/users/pthariensflame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pthariensflame/subscriptions", "organizations_url": "https://api.github.com/users/pthariensflame/orgs", "repos_url": "https://api.github.com/users/pthariensflame/repos", "events_url": "https://api.github.com/users/pthariensflame/events{/privacy}", "received_events_url": "https://api.github.com/users/pthariensflame/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pthariensflame", "id": 1847577, "node_id": "MDQ6VXNlcjE4NDc1Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1847577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pthariensflame", "html_url": "https://github.com/pthariensflame", "followers_url": "https://api.github.com/users/pthariensflame/followers", "following_url": "https://api.github.com/users/pthariensflame/following{/other_user}", "gists_url": "https://api.github.com/users/pthariensflame/gists{/gist_id}", "starred_url": "https://api.github.com/users/pthariensflame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pthariensflame/subscriptions", "organizations_url": "https://api.github.com/users/pthariensflame/orgs", "repos_url": "https://api.github.com/users/pthariensflame/repos", "events_url": "https://api.github.com/users/pthariensflame/events{/privacy}", "received_events_url": "https://api.github.com/users/pthariensflame/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22251a87be74865cc977f3fdcc995c1c467361c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/22251a87be74865cc977f3fdcc995c1c467361c7", "html_url": "https://github.com/rust-lang/rust/commit/22251a87be74865cc977f3fdcc995c1c467361c7"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "7c09a36d898830a472988b84976ca44a24c1befc", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fefe1dacb6255304dab5c13fb669b1d9d40f9e03/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fefe1dacb6255304dab5c13fb669b1d9d40f9e03/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=fefe1dacb6255304dab5c13fb669b1d9d40f9e03", "patch": "@@ -129,7 +129,6 @@ impl<P, Q> PartialEq<Pin<Q>> for Pin<P>\n where\n     P: PartialEq<Q>,\n {\n-    \n     fn eq(&self, other: &Pin<Q>) -> bool {\n         self.pointer == other.pointer\n     }\n@@ -144,7 +143,6 @@ impl<P, Q> PartialOrd<Pin<Q>> for Pin<P>\n where\n     P: PartialOrd<Q>,\n {\n-    \n     fn partial_cmp(&self, other: &Pin<Q>) -> Option<cmp::Ordering> {\n         self.pointer.partial_cmp(&other.pointer)\n     }"}]}