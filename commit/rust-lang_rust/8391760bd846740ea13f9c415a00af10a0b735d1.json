{"sha": "8391760bd846740ea13f9c415a00af10a0b735d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzOTE3NjBiZDg0Njc0MGVhMTNmOWM0MTVhMDBhZjEwYTBiNzM1ZDE=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-27T09:21:36Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-09-11T23:00:50Z"}, "message": "Use question_mark feature in librustc_errors.", "tree": {"sha": "3f8e4247d20cd820236eb31cd5e417503bd7e435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f8e4247d20cd820236eb31cd5e417503bd7e435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8391760bd846740ea13f9c415a00af10a0b735d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8391760bd846740ea13f9c415a00af10a0b735d1", "html_url": "https://github.com/rust-lang/rust/commit/8391760bd846740ea13f9c415a00af10a0b735d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8391760bd846740ea13f9c415a00af10a0b735d1/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfd123d1e9fce7b0cfb4462966b09a76e65b00d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfd123d1e9fce7b0cfb4462966b09a76e65b00d6", "html_url": "https://github.com/rust-lang/rust/commit/bfd123d1e9fce7b0cfb4462966b09a76e65b00d6"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "1bdc9ef30881fe44390e2c7ca615b11864419203", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/8391760bd846740ea13f9c415a00af10a0b735d1/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8391760bd846740ea13f9c415a00af10a0b735d1/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=8391760bd846740ea13f9c415a00af10a0b735d1", "patch": "@@ -882,45 +882,45 @@ impl Destination {\n         match style {\n             Style::FileNameStyle | Style::LineAndColumn => {}\n             Style::LineNumber => {\n-                try!(self.start_attr(term::Attr::Bold));\n+                self.start_attr(term::Attr::Bold)?;\n                 if cfg!(windows) {\n-                    try!(self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_CYAN)));\n+                    self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_CYAN))?;\n                 } else {\n-                    try!(self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_BLUE)));\n+                    self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_BLUE))?;\n                 }\n             }\n             Style::ErrorCode => {\n-                try!(self.start_attr(term::Attr::Bold));\n-                try!(self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_MAGENTA)));\n+                self.start_attr(term::Attr::Bold)?;\n+                self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_MAGENTA))?;\n             }\n             Style::Quotation => {}\n             Style::OldSchoolNote => {\n-                try!(self.start_attr(term::Attr::Bold));\n-                try!(self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_GREEN)));\n+                self.start_attr(term::Attr::Bold)?;\n+                self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_GREEN))?;\n             }\n             Style::OldSchoolNoteText | Style::HeaderMsg => {\n-                try!(self.start_attr(term::Attr::Bold));\n+                self.start_attr(term::Attr::Bold)?;\n                 if cfg!(windows) {\n-                    try!(self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_WHITE)));\n+                    self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_WHITE))?;\n                 }\n             }\n             Style::UnderlinePrimary | Style::LabelPrimary => {\n-                try!(self.start_attr(term::Attr::Bold));\n-                try!(self.start_attr(term::Attr::ForegroundColor(lvl.color())));\n+                self.start_attr(term::Attr::Bold)?;\n+                self.start_attr(term::Attr::ForegroundColor(lvl.color()))?;\n             }\n             Style::UnderlineSecondary |\n             Style::LabelSecondary => {\n-                try!(self.start_attr(term::Attr::Bold));\n+                self.start_attr(term::Attr::Bold)?;\n                 if cfg!(windows) {\n-                    try!(self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_CYAN)));\n+                    self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_CYAN))?;\n                 } else {\n-                    try!(self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_BLUE)));\n+                    self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_BLUE))?;\n                 }\n             }\n             Style::NoStyle => {}\n             Style::Level(l) => {\n-                try!(self.start_attr(term::Attr::Bold));\n-                try!(self.start_attr(term::Attr::ForegroundColor(l.color())));\n+                self.start_attr(term::Attr::Bold)?;\n+                self.start_attr(term::Attr::ForegroundColor(l.color()))?;\n             }\n         }\n         Ok(())\n@@ -960,4 +960,4 @@ impl Write for Destination {\n             Raw(ref mut w) => w.flush(),\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}]}