{"sha": "c57a8260f22d4968f8c802ce92593a32e1e27f4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1N2E4MjYwZjIyZDQ5NjhmOGM4MDJjZTkyNTkzYTMyZTFlMjdmNGM=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-10T16:21:38Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-02T09:40:24Z"}, "message": "Move unsound_collection_transmute to its own module", "tree": {"sha": "fab23487bccbceb6168a5d3db6b1b41e18ec82e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fab23487bccbceb6168a5d3db6b1b41e18ec82e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c57a8260f22d4968f8c802ce92593a32e1e27f4c", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmA+CAgACgkQHKDfKvWd\naKX9rw/9FrD5h2BXzUyegklldR/ITwnt5vFzv9KLm3V1EVF8TgyRZTFQ3aIazseM\na40kTayrzoQ1hluziSadmOOA+kgP/aQG3eA4mC0jfJdhezEMDkOhikbGEuW8ghYM\nKjPOWGHIMDyGj3Cw+HpjirIyMPWNUG01URUTJ+4UGF3KKzpPXgppL/ZxnOyDnNkU\n6KNIRHOBKl5wf/fnk3SKbdAwmkRetb9Q0pfkwJde4LAzKFGGLil0efFQsfsAE+/X\nYwDBR+S423dfRdhCOdwDR80nRblDkPAhYQmSdsIEwe1vkZRQrCNecIOvrd8dDG+a\nUuUzoWF1PdYACUJ8enYay+g/nH2k8MaTzWHlt4clivV2c3ua4WaTFkbFQG26EIGP\nwdh/uPXCnZFeJ9WVMm/V4SPiFmzHqx4hu5Cw85W7iL5b/LcOFQ5ETBz+oj/Auz35\nG0STbaMMPvq+8BKvcasnp4AzjMgLOPq4esxqnW1F2yU4uEGI7OpZhcQkhuPY7kgi\nmJ8myg10fwv+7zhxjZFqZpv8SHHoZA2YWkNhmOWvTpvWExtqt4/P8MfsB/vqH4ck\nW8v6RBwvZh25CJZIt3r8tTX71IYQdXQPgqS28OF6nb+WaMgLMdhwtr2dF5/2lcOp\nhLjvgGW/BzHO4kiutHNr1KhgqvWB86qmz6vAUknQhvsQZi8NtkQ=\n=yLx2\n-----END PGP SIGNATURE-----", "payload": "tree fab23487bccbceb6168a5d3db6b1b41e18ec82e0\nparent e7d2393d0182f9837897723e1541c0404bdcd55b\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612974098 +0900\ncommitter flip1995 <philipp.krones@embecosm.com> 1614678024 +0100\n\nMove unsound_collection_transmute to its own module\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c57a8260f22d4968f8c802ce92593a32e1e27f4c", "html_url": "https://github.com/rust-lang/rust/commit/c57a8260f22d4968f8c802ce92593a32e1e27f4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c57a8260f22d4968f8c802ce92593a32e1e27f4c/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7d2393d0182f9837897723e1541c0404bdcd55b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d2393d0182f9837897723e1541c0404bdcd55b", "html_url": "https://github.com/rust-lang/rust/commit/e7d2393d0182f9837897723e1541c0404bdcd55b"}], "stats": {"total": 84, "additions": 54, "deletions": 30}, "files": [{"sha": "8cb4f6500574b5611545224c58472e248f002eed", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 5, "deletions": 30, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c57a8260f22d4968f8c802ce92593a32e1e27f4c/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57a8260f22d4968f8c802ce92593a32e1e27f4c/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=c57a8260f22d4968f8c802ce92593a32e1e27f4c", "patch": "@@ -6,6 +6,7 @@ mod transmute_int_to_float;\n mod transmute_ptr_to_ptr;\n mod transmute_ptr_to_ref;\n mod transmute_ref_to_ref;\n+mod unsound_collection_transmute;\n mod useless_transmute;\n mod utils;\n mod wrong_transmute;\n@@ -327,17 +328,6 @@ declare_lint_pass!(Transmute => [\n     TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,\n ]);\n \n-// used to check for UNSOUND_COLLECTION_TRANSMUTE\n-static COLLECTIONS: &[&[&str]] = &[\n-    &paths::VEC,\n-    &paths::VEC_DEQUE,\n-    &paths::BINARY_HEAP,\n-    &paths::BTREESET,\n-    &paths::BTREEMAP,\n-    &paths::HASHSET,\n-    &paths::HASHMAP,\n-];\n-\n impl<'tcx> LateLintPass<'tcx> for Transmute {\n     #[allow(clippy::similar_names, clippy::too_many_lines)]\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) {\n@@ -395,27 +385,12 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 if triggered {\n                     return;\n                 }\n+                let triggered = unsound_collection_transmute::check(cx, e, from_ty, to_ty);\n+                if triggered {\n+                    return;\n+                }\n \n                 match (&from_ty.kind(), &to_ty.kind()) {\n-                    (ty::Adt(from_adt, from_substs), ty::Adt(to_adt, to_substs)) => {\n-                        if from_adt.did != to_adt.did ||\n-                                !COLLECTIONS.iter().any(|path| match_def_path(cx, to_adt.did, path)) {\n-                            return;\n-                        }\n-                        if from_substs.types().zip(to_substs.types())\n-                                              .any(|(from_ty, to_ty)| is_layout_incompatible(cx, from_ty, to_ty)) {\n-                            span_lint(\n-                                cx,\n-                                UNSOUND_COLLECTION_TRANSMUTE,\n-                                e.span,\n-                                &format!(\n-                                    \"transmute from `{}` to `{}` with mismatched layout is unsound\",\n-                                    from_ty,\n-                                    to_ty\n-                                )\n-                            );\n-                        }\n-                    },\n                     (_, _) if can_be_expressed_as_pointer_cast(cx, e, from_ty, to_ty) => span_lint_and_then(\n                         cx,\n                         TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,"}, {"sha": "3ce6bcd3ea039991ae34638cd3cd54c79e914e7b", "filename": "clippy_lints/src/transmute/unsound_collection_transmute.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/c57a8260f22d4968f8c802ce92593a32e1e27f4c/clippy_lints%2Fsrc%2Ftransmute%2Funsound_collection_transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57a8260f22d4968f8c802ce92593a32e1e27f4c/clippy_lints%2Fsrc%2Ftransmute%2Funsound_collection_transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Funsound_collection_transmute.rs?ref=c57a8260f22d4968f8c802ce92593a32e1e27f4c", "patch": "@@ -0,0 +1,49 @@\n+use super::utils::is_layout_incompatible;\n+use super::UNSOUND_COLLECTION_TRANSMUTE;\n+use crate::utils::{match_def_path, paths, span_lint};\n+use rustc_hir::Expr;\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+use rustc_middle::ty::Ty;\n+\n+// used to check for UNSOUND_COLLECTION_TRANSMUTE\n+static COLLECTIONS: &[&[&str]] = &[\n+    &paths::VEC,\n+    &paths::VEC_DEQUE,\n+    &paths::BINARY_HEAP,\n+    &paths::BTREESET,\n+    &paths::BTREEMAP,\n+    &paths::HASHSET,\n+    &paths::HASHMAP,\n+];\n+\n+/// Checks for `unsound_collection_transmute` lint.\n+/// Returns `true` if it's triggered, otherwise returns `false`.\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>, from_ty: Ty<'tcx>, to_ty: Ty<'tcx>) -> bool {\n+    match (&from_ty.kind(), &to_ty.kind()) {\n+        (ty::Adt(from_adt, from_substs), ty::Adt(to_adt, to_substs)) => {\n+            if from_adt.did != to_adt.did || !COLLECTIONS.iter().any(|path| match_def_path(cx, to_adt.did, path)) {\n+                return false;\n+            }\n+            if from_substs\n+                .types()\n+                .zip(to_substs.types())\n+                .any(|(from_ty, to_ty)| is_layout_incompatible(cx, from_ty, to_ty))\n+            {\n+                span_lint(\n+                    cx,\n+                    UNSOUND_COLLECTION_TRANSMUTE,\n+                    e.span,\n+                    &format!(\n+                        \"transmute from `{}` to `{}` with mismatched layout is unsound\",\n+                        from_ty, to_ty\n+                    ),\n+                );\n+                true\n+            } else {\n+                false\n+            }\n+        },\n+        _ => false,\n+    }\n+}"}]}