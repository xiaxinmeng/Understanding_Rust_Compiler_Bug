{"sha": "7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZTM5NjdlNTczOWI3ODZmY2QzZjdiN2IzMzNjNzNmMmMzOGU4ZGQ=", "commit": {"author": {"name": "John Renner", "email": "john@jrenner.net", "date": "2021-05-10T20:34:09Z"}, "committer": {"name": "John Renner", "email": "john@jrenner.net", "date": "2021-05-10T20:34:09Z"}, "message": "Formatting and docs", "tree": {"sha": "da0ab8119d19bcce349eb9c60825761898a231e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da0ab8119d19bcce349eb9c60825761898a231e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "html_url": "https://github.com/rust-lang/rust/commit/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/comments", "author": {"login": "djrenren", "id": 634666, "node_id": "MDQ6VXNlcjYzNDY2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/634666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrenren", "html_url": "https://github.com/djrenren", "followers_url": "https://api.github.com/users/djrenren/followers", "following_url": "https://api.github.com/users/djrenren/following{/other_user}", "gists_url": "https://api.github.com/users/djrenren/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrenren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrenren/subscriptions", "organizations_url": "https://api.github.com/users/djrenren/orgs", "repos_url": "https://api.github.com/users/djrenren/repos", "events_url": "https://api.github.com/users/djrenren/events{/privacy}", "received_events_url": "https://api.github.com/users/djrenren/received_events", "type": "User", "site_admin": false}, "committer": {"login": "djrenren", "id": 634666, "node_id": "MDQ6VXNlcjYzNDY2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/634666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrenren", "html_url": "https://github.com/djrenren", "followers_url": "https://api.github.com/users/djrenren/followers", "following_url": "https://api.github.com/users/djrenren/following{/other_user}", "gists_url": "https://api.github.com/users/djrenren/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrenren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrenren/subscriptions", "organizations_url": "https://api.github.com/users/djrenren/orgs", "repos_url": "https://api.github.com/users/djrenren/repos", "events_url": "https://api.github.com/users/djrenren/events{/privacy}", "received_events_url": "https://api.github.com/users/djrenren/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3ba1f14faaf132de7c216123878a681d7f3ca61", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ba1f14faaf132de7c216123878a681d7f3ca61", "html_url": "https://github.com/rust-lang/rust/commit/c3ba1f14faaf132de7c216123878a681d7f3ca61"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "123b63f531185e704dd6be17ae7613fc11c70c5d", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "patch": "@@ -44,9 +44,6 @@ config_data! {\n         /// Show function name and docs in parameter hints.\n         callInfo_full: bool = \"true\",\n \n-        /// Use semantic tokens for strings. Disable to support injected grammars\n-        semanticStringTokens: bool = \"true\",\n-\n         /// Automatically refresh project info via `cargo metadata` on\n         /// `Cargo.toml` changes.\n         cargo_autoreload: bool           = \"true\",\n@@ -211,6 +208,13 @@ config_data! {\n         /// Advanced option, fully override the command rust-analyzer uses for\n         /// formatting.\n         rustfmt_overrideCommand: Option<Vec<String>> = \"null\",\n+\n+        /// Use semantic tokens for strings.\n+        ///\n+        /// In some editors (e.g. vscode) semantic tokens override other highlighting grammars.\n+        /// By disabling semantic tokens for strings, other grammars can be used to highlight\n+        /// their contents.\n+        semanticStringTokens: bool = \"true\",\n     }\n }\n "}, {"sha": "78b558a2129a50b278f1054e0d2b6d53c4d307fd", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "patch": "@@ -1377,7 +1377,8 @@ pub(crate) fn handle_semantic_tokens_full(\n \n     let highlights = snap.analysis.highlight(file_id)?;\n     let semantic_strings = snap.config.semantic_strings();\n-    let semantic_tokens = to_proto::semantic_tokens(&text, &line_index, highlights, semantic_strings);\n+    let semantic_tokens =\n+        to_proto::semantic_tokens(&text, &line_index, highlights, semantic_strings);\n \n     // Unconditionally cache the tokens\n     snap.semantic_tokens_cache.lock().insert(params.text_document.uri, semantic_tokens.clone());\n@@ -1397,7 +1398,8 @@ pub(crate) fn handle_semantic_tokens_full_delta(\n \n     let highlights = snap.analysis.highlight(file_id)?;\n     let semantic_strings = snap.config.semantic_strings();\n-    let semantic_tokens = to_proto::semantic_tokens(&text, &line_index, highlights, semantic_strings);\n+    let semantic_tokens =\n+        to_proto::semantic_tokens(&text, &line_index, highlights, semantic_strings);\n \n     let mut cache = snap.semantic_tokens_cache.lock();\n     let cached_tokens = cache.entry(params.text_document.uri).or_default();\n@@ -1427,7 +1429,8 @@ pub(crate) fn handle_semantic_tokens_range(\n \n     let highlights = snap.analysis.highlight_range(frange)?;\n     let semantic_strings = snap.config.semantic_strings();\n-    let semantic_tokens = to_proto::semantic_tokens(&text, &line_index, highlights, semantic_strings);\n+    let semantic_tokens =\n+        to_proto::semantic_tokens(&text, &line_index, highlights, semantic_strings);\n     Ok(Some(semantic_tokens.into()))\n }\n "}, {"sha": "5f2dd418f32fd5a85eac735cf4d34ff821efec93", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "patch": "@@ -381,7 +381,7 @@ pub(crate) fn semantic_tokens(\n     text: &str,\n     line_index: &LineIndex,\n     highlights: Vec<HlRange>,\n-    include_strings: bool\n+    include_strings: bool,\n ) -> lsp_types::SemanticTokens {\n     let id = TOKEN_RESULT_COUNTER.fetch_add(1, Ordering::SeqCst).to_string();\n     let mut builder = semantic_tokens::SemanticTokensBuilder::new(id);"}, {"sha": "920c43f25dc9793b1eb8a0b5674e844836077bea", "filename": "crates/rust-analyzer/tests/rust-analyzer/main.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs?ref=7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "patch": "@@ -18,13 +18,13 @@ use lsp_types::{\n     notification::DidOpenTextDocument,\n     request::{\n         CodeActionRequest, Completion, Formatting, GotoTypeDefinition, HoverRequest,\n-        SemanticTokensRangeRequest, WillRenameFiles\n+        SemanticTokensRangeRequest, WillRenameFiles,\n     },\n     CodeActionContext, CodeActionParams, CompletionParams, DidOpenTextDocumentParams,\n     DocumentFormattingParams, FileRename, FormattingOptions, GotoDefinitionParams, HoverParams,\n-    PartialResultParams, Position, Range, RenameFilesParams, SemanticTokensRangeParams, TextDocumentItem,\n-    TextDocumentPositionParams, WorkDoneProgressParams,\n-    SemanticTokens\n+    PartialResultParams, Position, Range, RenameFilesParams, SemanticTokens,\n+    SemanticTokensRangeParams, TextDocumentItem, TextDocumentPositionParams,\n+    WorkDoneProgressParams,\n };\n use rust_analyzer::lsp_ext::{OnEnter, Runnables, RunnablesParams};\n use serde_json::{from_value, json};\n@@ -56,10 +56,9 @@ version = \"0.0.0\"\n const foo: &'static str = \"hi\";\n \"#,\n         )\n-        .with_config(serde_json::json!({\n-            \"semanticStringTokens\": semantic_strings \n-        }))\n-        .server().wait_until_workspace_is_loaded();\n+        .with_config(serde_json::json!({ \"semanticStringTokens\": semantic_strings }))\n+        .server()\n+        .wait_until_workspace_is_loaded();\n \n         let res = server.send_request::<SemanticTokensRangeRequest>(SemanticTokensRangeParams {\n             text_document: server.doc_id(\"src/lib.rs\"),\n@@ -73,7 +72,6 @@ const foo: &'static str = \"hi\";\n     });\n }\n \n-\n #[test]\n fn completes_items_from_standard_library() {\n     if skip_slow_tests() {"}, {"sha": "ff4fb064e56ac97d30a3678eabe7af317c41ae8b", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "patch": "@@ -332,3 +332,12 @@ Additional arguments to `rustfmt`.\n Advanced option, fully override the command rust-analyzer uses for\n formatting.\n --\n+[[rust-analyzer.semanticStringTokens]]rust-analyzer.semanticStringTokens (default: `true`)::\n++\n+--\n+Use semantic tokens for strings.\n+\n+In some editors (e.g. vscode) semantic tokens override other highlighting grammars.\n+By disabling semantic tokens for strings, other grammars can be used to highlight\n+their contents.\n+--"}, {"sha": "1605d926bfdf6440f2247961e49ca79413b250de", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=7ae3967e5739b786fcd3f7b7b333c73f2c38e8dd", "patch": "@@ -770,6 +770,11 @@\n                         \"type\": \"string\"\n                     }\n                 },\n+                \"rust-analyzer.semanticStringTokens\": {\n+                    \"markdownDescription\": \"Use semantic tokens for strings.\\n\\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\\nBy disabling semantic tokens for strings, other grammars can be used to highlight\\ntheir contents.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n                 \"$generated-end\": false\n             }\n         },"}]}