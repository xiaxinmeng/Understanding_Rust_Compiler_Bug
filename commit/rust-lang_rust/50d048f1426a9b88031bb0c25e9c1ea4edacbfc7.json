{"sha": "50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZDA0OGYxNDI2YTliODgwMzFiYjBjMjVlOWMxZWE0ZWRhY2JmYzc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-23T01:15:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-23T01:15:43Z"}, "message": "Rollup merge of #83384 - mark-i-m:rename-pat2018, r=joshtriplett\n\nrename :pat2018 -> :pat2015\n\nas requested by T-lang on zulip: https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/or.20patterns/near/231133873\n\nNo functional changes here... just renaming.\n\nr? `@nikomatsakis`", "tree": {"sha": "c1478f749b2ff1c385960b04e176694b641b1b24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1478f749b2ff1c385960b04e176694b641b1b24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgWUE/CRBK7hj4Ov3rIwAAdHIIACAQk54J6ExKLV6TsTT7pDMP\nVWuyA7RUvDxNvJnVcQxyWCgtAh292r8cRB+NvFeLSnHdngQkXQQHDhFfMiX1yL81\nmc3CBi4LTC1Z7fwtrkrDbJeCZeyJ6DfbcnWnHdWgXwpgxNSYQEhsK6qmjaHvhE1b\ngRKS5Gk7yT08voXZWnrfVFmHu9dBgxB2nLMhk42++ipPEliqN63V600yRTQHJ0SK\n+vihiagccTxoJWGGqwZez79lF/T92M58InrpBSZWyB8UFhivUgzfXW8SJknkdqQP\nX3o+L3F04SD083LQSxNLQ2RbZCIcRAhTQLk+IASBy951USQaPenKIUiNksseHmk=\n=SjnW\n-----END PGP SIGNATURE-----\n", "payload": "tree c1478f749b2ff1c385960b04e176694b641b1b24\nparent 20006b1891dbacb974dbe73af6c98c751b4dfcdb\nparent 8c4b3dbb50621b661aa63ad1791eed2d52564dcb\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1616462143 +0900\ncommitter GitHub <noreply@github.com> 1616462143 +0900\n\nRollup merge of #83384 - mark-i-m:rename-pat2018, r=joshtriplett\n\nrename :pat2018 -> :pat2015\n\nas requested by T-lang on zulip: https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/or.20patterns/near/231133873\n\nNo functional changes here... just renaming.\n\nr? `@nikomatsakis`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "html_url": "https://github.com/rust-lang/rust/commit/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20006b1891dbacb974dbe73af6c98c751b4dfcdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/20006b1891dbacb974dbe73af6c98c751b4dfcdb", "html_url": "https://github.com/rust-lang/rust/commit/20006b1891dbacb974dbe73af6c98c751b4dfcdb"}, {"sha": "8c4b3dbb50621b661aa63ad1791eed2d52564dcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4b3dbb50621b661aa63ad1791eed2d52564dcb", "html_url": "https://github.com/rust-lang/rust/commit/8c4b3dbb50621b661aa63ad1791eed2d52564dcb"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "10d48a55bb54ee614948e09c18c86b4c54ad174d", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -688,13 +688,13 @@ pub enum NonterminalKind {\n     Item,\n     Block,\n     Stmt,\n-    Pat2018 {\n-        /// Keep track of whether the user used `:pat2018` or `:pat` and we inferred it from the\n+    Pat2015 {\n+        /// Keep track of whether the user used `:pat2015` or `:pat` and we inferred it from the\n         /// edition of the span. This is used for diagnostics.\n         inferred: bool,\n     },\n     Pat2021 {\n-        /// Keep track of whether the user used `:pat2018` or `:pat` and we inferred it from the\n+        /// Keep track of whether the user used `:pat2015` or `:pat` and we inferred it from the\n         /// edition of the span. This is used for diagnostics.\n         inferred: bool,\n     },\n@@ -722,11 +722,11 @@ impl NonterminalKind {\n             sym::stmt => NonterminalKind::Stmt,\n             sym::pat => match edition() {\n                 Edition::Edition2015 | Edition::Edition2018 => {\n-                    NonterminalKind::Pat2018 { inferred: true }\n+                    NonterminalKind::Pat2015 { inferred: true }\n                 }\n                 Edition::Edition2021 => NonterminalKind::Pat2021 { inferred: true },\n             },\n-            sym::pat2018 => NonterminalKind::Pat2018 { inferred: false },\n+            sym::pat2015 => NonterminalKind::Pat2015 { inferred: false },\n             sym::pat2021 => NonterminalKind::Pat2021 { inferred: false },\n             sym::expr => NonterminalKind::Expr,\n             sym::ty => NonterminalKind::Ty,\n@@ -745,9 +745,9 @@ impl NonterminalKind {\n             NonterminalKind::Item => sym::item,\n             NonterminalKind::Block => sym::block,\n             NonterminalKind::Stmt => sym::stmt,\n-            NonterminalKind::Pat2018 { inferred: false } => sym::pat2018,\n+            NonterminalKind::Pat2015 { inferred: false } => sym::pat2015,\n             NonterminalKind::Pat2021 { inferred: false } => sym::pat2021,\n-            NonterminalKind::Pat2018 { inferred: true }\n+            NonterminalKind::Pat2015 { inferred: true }\n             | NonterminalKind::Pat2021 { inferred: true } => sym::pat,\n             NonterminalKind::Expr => sym::expr,\n             NonterminalKind::Ty => sym::ty,"}, {"sha": "9ed478e6fccce05d48293fabec00850d1f73c6b4", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -1080,7 +1080,7 @@ fn is_in_follow(tok: &mbe::TokenTree, kind: NonterminalKind) -> IsInFollow {\n                     _ => IsInFollow::No(TOKENS),\n                 }\n             }\n-            NonterminalKind::Pat2018 { .. } | NonterminalKind::Pat2021 { .. } => {\n+            NonterminalKind::Pat2015 { .. } | NonterminalKind::Pat2021 { .. } => {\n                 const TOKENS: &[&str] = &[\"`=>`\", \"`,`\", \"`=`\", \"`|`\", \"`if`\", \"`in`\"];\n                 match tok {\n                     TokenTree::Token(token) => match token.kind {"}, {"sha": "e205cb65d0229bbae499f2f7daeec0888f5f0790", "filename": "compiler/rustc_expand/src/mbe/quoted.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fquoted.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -63,13 +63,13 @@ pub(super) fn parse(\n                                     let span = token.span.with_lo(start_sp.lo());\n \n                                     match frag.name {\n-                                        sym::pat2018 | sym::pat2021 => {\n+                                        sym::pat2015 | sym::pat2021 => {\n                                             if !features.edition_macro_pats {\n                                                 feature_err(\n                                                     sess,\n                                                     sym::edition_macro_pats,\n                                                     frag.span,\n-                                                    \"`pat2018` and `pat2021` are unstable.\",\n+                                                    \"`pat2015` and `pat2021` are unstable.\",\n                                                 )\n                                                 .emit();\n                                             }"}, {"sha": "fb08a7b8cea0df34105a503f4554cea3692232aa", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -611,7 +611,7 @@ declare_features! (\n     /// Allows arbitrary expressions in key-value attributes at parse time.\n     (active, extended_key_value_attributes, \"1.50.0\", Some(78835), None),\n \n-    /// `:pat2018` and `:pat2021` macro matchers.\n+    /// `:pat2015` and `:pat2021` macro matchers.\n     (active, edition_macro_pats, \"1.51.0\", Some(54883), None),\n \n     /// Allows const generics to have default values (e.g. `struct Foo<const N: usize = 3>(...);`)."}, {"sha": "fc25e883666d1f85f2d9ea5059b6b5561e3c01fc", "filename": "compiler/rustc_parse/src/parser/nonterminal.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fnonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fnonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fnonterminal.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -61,7 +61,7 @@ impl<'a> Parser<'a> {\n                 },\n                 _ => false,\n             },\n-            NonterminalKind::Pat2018 { .. } | NonterminalKind::Pat2021 { .. } => match token.kind {\n+            NonterminalKind::Pat2015 { .. } | NonterminalKind::Pat2021 { .. } => match token.kind {\n                 token::Ident(..) |                  // box, ref, mut, and other identifiers (can stricten)\n                 token::OpenDelim(token::Paren) |    // tuple pattern\n                 token::OpenDelim(token::Bracket) |  // slice pattern\n@@ -118,9 +118,9 @@ impl<'a> Parser<'a> {\n                     return Err(self.struct_span_err(self.token.span, \"expected a statement\"));\n                 }\n             },\n-            NonterminalKind::Pat2018 { .. } | NonterminalKind::Pat2021 { .. } => {\n+            NonterminalKind::Pat2015 { .. } | NonterminalKind::Pat2021 { .. } => {\n                 token::NtPat(self.collect_tokens_no_attrs(|this| match kind {\n-                    NonterminalKind::Pat2018 { .. } => this.parse_pat_no_top_alt(None),\n+                    NonterminalKind::Pat2015 { .. } => this.parse_pat_no_top_alt(None),\n                     NonterminalKind::Pat2021 { .. } => {\n                         this.parse_pat_allow_top_alt(None, RecoverComma::No)\n                     }"}, {"sha": "42e01f1b8d1fe0803dd364f31c6e19f986c2bd75", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -845,7 +845,7 @@ symbols! {\n         partial_ord,\n         passes,\n         pat,\n-        pat2018,\n+        pat2015,\n         pat2021,\n         path,\n         pattern_parentheses,"}, {"sha": "430a9437cee34e2b717a0a954194ea2dbfbfe0b3", "filename": "src/test/ui/feature-gates/feature-gate-edition_macro_pats.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-edition_macro_pats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-edition_macro_pats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-edition_macro_pats.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -1,8 +1,8 @@\n // Feature gate test for `edition_macro_pats` feature.\n \n macro_rules! foo {\n-    ($x:pat2018) => {}; //~ERROR `pat2018` and `pat2021` are unstable\n-    ($x:pat2021) => {}; //~ERROR `pat2018` and `pat2021` are unstable\n+    ($x:pat2015) => {}; //~ERROR `pat2015` and `pat2021` are unstable\n+    ($x:pat2021) => {}; //~ERROR `pat2015` and `pat2021` are unstable\n }\n \n fn main() {}"}, {"sha": "d25bcaf929bcddfcb5a6fc309e402b1b0350716f", "filename": "src/test/ui/feature-gates/feature-gate-edition_macro_pats.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-edition_macro_pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-edition_macro_pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-edition_macro_pats.stderr?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -1,13 +1,13 @@\n-error[E0658]: `pat2018` and `pat2021` are unstable.\n+error[E0658]: `pat2015` and `pat2021` are unstable.\n   --> $DIR/feature-gate-edition_macro_pats.rs:4:9\n    |\n-LL |     ($x:pat2018) => {};\n+LL |     ($x:pat2015) => {};\n    |         ^^^^^^^\n    |\n    = note: see issue #54883 <https://github.com/rust-lang/rust/issues/54883> for more information\n    = help: add `#![feature(edition_macro_pats)]` to the crate attributes to enable\n \n-error[E0658]: `pat2018` and `pat2021` are unstable.\n+error[E0658]: `pat2015` and `pat2021` are unstable.\n   --> $DIR/feature-gate-edition_macro_pats.rs:5:9\n    |\n LL |     ($x:pat2021) => {};"}, {"sha": "58f92710305832800e2e82bbb4d99c991443fe30", "filename": "src/test/ui/macros/edition-macro-pats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/src%2Ftest%2Fui%2Fmacros%2Fedition-macro-pats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d048f1426a9b88031bb0c25e9c1ea4edacbfc7/src%2Ftest%2Fui%2Fmacros%2Fedition-macro-pats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fedition-macro-pats.rs?ref=50d048f1426a9b88031bb0c25e9c1ea4edacbfc7", "patch": "@@ -3,7 +3,7 @@\n #![feature(edition_macro_pats)]\n \n macro_rules! foo {\n-    (a $x:pat2018) => {};\n+    (a $x:pat2015) => {};\n     (b $x:pat2021) => {};\n }\n "}]}