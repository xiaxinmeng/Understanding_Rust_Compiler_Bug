{"sha": "fd2fdbded1b05aba687e032dbfb20efd29a4f48a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMmZkYmRlZDFiMDVhYmE2ODdlMDMyZGJmYjIwZWZkMjlhNGY0OGE=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-02-18T23:11:05Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-02-20T20:56:32Z"}, "message": "fix a few 'variable does not need to be mutable' warnings", "tree": {"sha": "1ac1ef0672d4c7ebe6af76344479c9bd2dc52ca9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ac1ef0672d4c7ebe6af76344479c9bd2dc52ca9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd2fdbded1b05aba687e032dbfb20efd29a4f48a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2fdbded1b05aba687e032dbfb20efd29a4f48a", "html_url": "https://github.com/rust-lang/rust/commit/fd2fdbded1b05aba687e032dbfb20efd29a4f48a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd2fdbded1b05aba687e032dbfb20efd29a4f48a/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "html_url": "https://github.com/rust-lang/rust/commit/522d09dfecbeca1595f25ac58c6d0178bbd21d7d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "6cbc7bf1bbc51a72b3e34a5a98e2a545b54b2094", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fd2fdbded1b05aba687e032dbfb20efd29a4f48a/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd2fdbded1b05aba687e032dbfb20efd29a4f48a/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=fd2fdbded1b05aba687e032dbfb20efd29a4f48a", "patch": "@@ -82,7 +82,7 @@ fn test_iterator_chain() {\n     let xs = [0, 1, 2, 3, 4, 5];\n     let ys = [30, 40, 50, 60];\n     let expected = [0, 1, 2, 3, 4, 5, 30, 40, 50, 60];\n-    let mut it = xs.iter().chain(ys.iter());\n+    let it = xs.iter().chain(ys.iter());\n     let mut i = 0;\n     for &x in it {\n         assert_eq!(x, expected[i]);\n@@ -91,7 +91,7 @@ fn test_iterator_chain() {\n     assert_eq!(i, expected.len());\n \n     let ys = count(30, 10).take(4);\n-    let mut it = xs.iter().cloned().chain(ys);\n+    let it = xs.iter().cloned().chain(ys);\n     let mut i = 0;\n     for x in it {\n         assert_eq!(x, expected[i]);\n@@ -110,7 +110,7 @@ fn test_filter_map() {\n #[test]\n fn test_iterator_enumerate() {\n     let xs = [0, 1, 2, 3, 4, 5];\n-    let mut it = xs.iter().enumerate();\n+    let it = xs.iter().enumerate();\n     for (i, &x) in it {\n         assert_eq!(i, x);\n     }\n@@ -152,7 +152,7 @@ fn test_iterator_peekable() {\n fn test_iterator_take_while() {\n     let xs = [0, 1, 2, 3, 5, 13, 15, 16, 17, 19];\n     let ys = [0, 1, 2, 3, 5, 13];\n-    let mut it = xs.iter().take_while(|&x| *x < 15);\n+    let it = xs.iter().take_while(|&x| *x < 15);\n     let mut i = 0;\n     for x in it {\n         assert_eq!(*x, ys[i]);\n@@ -165,7 +165,7 @@ fn test_iterator_take_while() {\n fn test_iterator_skip_while() {\n     let xs = [0, 1, 2, 3, 5, 13, 15, 16, 17, 19];\n     let ys = [15, 16, 17, 19];\n-    let mut it = xs.iter().skip_while(|&x| *x < 15);\n+    let it = xs.iter().skip_while(|&x| *x < 15);\n     let mut i = 0;\n     for x in it {\n         assert_eq!(*x, ys[i]);\n@@ -231,7 +231,7 @@ fn test_iterator_scan() {\n     let xs = [0, 1, 2, 3, 4];\n     let ys = [0f64, 1.0, 3.0, 6.0, 10.0];\n \n-    let mut it = xs.iter().scan(0, add);\n+    let it = xs.iter().scan(0, add);\n     let mut i = 0;\n     for x in it {\n         assert_eq!(x, ys[i]);\n@@ -244,7 +244,7 @@ fn test_iterator_scan() {\n fn test_iterator_flat_map() {\n     let xs = [0, 3, 6];\n     let ys = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n-    let mut it = xs.iter().flat_map(|&x| count(x, 1).take(3));\n+    let it = xs.iter().flat_map(|&x| count(x, 1).take(3));\n     let mut i = 0;\n     for x in it {\n         assert_eq!(x, ys[i]);\n@@ -279,7 +279,7 @@ fn test_unfoldr() {\n         }\n     }\n \n-    let mut it = Unfold::new(0, count);\n+    let it = Unfold::new(0, count);\n     let mut i = 0;\n     for counted in it {\n         assert_eq!(counted, i);"}]}