{"sha": "1116c9a0e9992d0dea8dac87de95c8a74c093cff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMTZjOWEwZTk5OTJkMGRlYThkYWM4N2RlOTVjOGE3NGMwOTNjZmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-06T11:08:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-06T11:21:49Z"}, "message": "Fix TODO", "tree": {"sha": "fe1fb40500ea87a6e92351800884248ed6fe81e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe1fb40500ea87a6e92351800884248ed6fe81e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1116c9a0e9992d0dea8dac87de95c8a74c093cff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1116c9a0e9992d0dea8dac87de95c8a74c093cff", "html_url": "https://github.com/rust-lang/rust/commit/1116c9a0e9992d0dea8dac87de95c8a74c093cff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1116c9a0e9992d0dea8dac87de95c8a74c093cff/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4de3c3eedc1f6576d59e00f0ddde3c70c97be066", "url": "https://api.github.com/repos/rust-lang/rust/commits/4de3c3eedc1f6576d59e00f0ddde3c70c97be066", "html_url": "https://github.com/rust-lang/rust/commit/4de3c3eedc1f6576d59e00f0ddde3c70c97be066"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "cbf1963b7213ae6eacf652968801171c9c0bb68b", "filename": "crates/ra_assists/src/assist_ctx.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1116c9a0e9992d0dea8dac87de95c8a74c093cff/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1116c9a0e9992d0dea8dac87de95c8a74c093cff/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs?ref=1116c9a0e9992d0dea8dac87de95c8a74c093cff", "patch": "@@ -256,10 +256,10 @@ impl<'a, 'b> ActionBuilder<'a, 'b> {\n     }\n \n     fn build(self) -> AssistAction {\n-        AssistAction {\n-            edit: self.edit.finish(),\n-            cursor_position: self.cursor_position,\n-            file: self.file,\n+        let edit = self.edit.finish();\n+        if edit.is_empty() && self.cursor_position.is_none() {\n+            panic!(\"Only call `add_assist` if the assist can be applied\")\n         }\n+        AssistAction { edit, cursor_position: self.cursor_position, file: self.file }\n     }\n }"}, {"sha": "1d9d4e638fc681851f2ebc55314534c13f03b5c4", "filename": "crates/ra_assists/src/handlers/add_function.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1116c9a0e9992d0dea8dac87de95c8a74c093cff/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1116c9a0e9992d0dea8dac87de95c8a74c093cff/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs?ref=1116c9a0e9992d0dea8dac87de95c8a74c093cff", "patch": "@@ -58,13 +58,11 @@ pub(crate) fn add_function(ctx: AssistCtx) -> Option<Assist> {\n     let function_builder = FunctionBuilder::from_call(&ctx, &call, &path, target_module)?;\n \n     let target = call.syntax().text_range();\n-    // TODO: assert here?\n     ctx.add_assist(AssistId(\"add_function\"), \"Add function\", target, |edit| {\n-        if let Some(function_template) = function_builder.render() {\n-            edit.set_file(function_template.file);\n-            edit.set_cursor(function_template.cursor_offset);\n-            edit.insert(function_template.insert_offset, function_template.fn_def.to_string());\n-        }\n+        let function_template = function_builder.render();\n+        edit.set_file(function_template.file);\n+        edit.set_cursor(function_template.cursor_offset);\n+        edit.insert(function_template.insert_offset, function_template.fn_def.to_string());\n     })\n }\n \n@@ -107,7 +105,7 @@ impl FunctionBuilder {\n         Some(Self { target, fn_name, type_params, params, file, needs_pub })\n     }\n \n-    fn render(self) -> Option<FunctionTemplate> {\n+    fn render(self) -> FunctionTemplate {\n         let placeholder_expr = ast::make::expr_todo();\n         let fn_body = ast::make::block_expr(vec![], Some(placeholder_expr));\n         let mut fn_def = ast::make::fn_def(self.fn_name, self.type_params, self.params, fn_body);\n@@ -133,15 +131,11 @@ impl FunctionBuilder {\n             }\n         };\n \n-        let cursor_offset_from_fn_start = fn_def\n-            .syntax()\n-            .descendants()\n-            .find_map(ast::MacroCall::cast)?\n-            .syntax()\n-            .text_range()\n-            .start();\n+        let placeholder_expr =\n+            fn_def.syntax().descendants().find_map(ast::MacroCall::cast).unwrap();\n+        let cursor_offset_from_fn_start = placeholder_expr.syntax().text_range().start();\n         let cursor_offset = insert_offset + cursor_offset_from_fn_start;\n-        Some(FunctionTemplate { insert_offset, cursor_offset, fn_def, file: self.file })\n+        FunctionTemplate { insert_offset, cursor_offset, fn_def, file: self.file }\n     }\n }\n "}, {"sha": "3409713ff3d0e7807f80fd6994cb2ba36c16dcc1", "filename": "crates/ra_text_edit/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1116c9a0e9992d0dea8dac87de95c8a74c093cff/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1116c9a0e9992d0dea8dac87de95c8a74c093cff/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_text_edit%2Fsrc%2Flib.rs?ref=1116c9a0e9992d0dea8dac87de95c8a74c093cff", "patch": "@@ -71,6 +71,10 @@ impl TextEdit {\n         TextEdit { indels }\n     }\n \n+    pub fn is_empty(&self) -> bool {\n+        self.indels.is_empty()\n+    }\n+\n     pub fn as_indels(&self) -> &[Indel] {\n         &self.indels\n     }"}]}