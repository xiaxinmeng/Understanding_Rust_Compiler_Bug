{"sha": "d90084c226718e3ad66ae7a29e76e3d41240630b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MDA4NGMyMjY3MThlM2FkNjZhZTdhMjllNzZlM2Q0MTI0MDYzMGI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-13T02:05:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-13T02:05:43Z"}, "message": "Rollup merge of #79970 - bjorn3:no_unnecessary_llvm_checkout, r=Mark-Simulacrum\n\nMisc rustbuild improvements when the LLVM backend isn't used\n\n* Don't checkout llvm-project\n* Don't require cmake and ninja\n\nFixes #78564", "tree": {"sha": "2019c1e320cee4171314143cb8b506c802cdc1af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2019c1e320cee4171314143cb8b506c802cdc1af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d90084c226718e3ad66ae7a29e76e3d41240630b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf1Xb3CRBK7hj4Ov3rIwAAdHIIALLdwSnnHqgX/MIkJOxXA3pw\nAhxNWchN/4KJp5jB0riMSFW+J2/3i1jbTBkC4vnCT9RpInIMavaylpOtlunrjUEm\nfsuEeotAFoT6NrppbRTnngdsOt1LnOCRa/k+n19/AXEbXPW1Ve3y1GERJx9zBO8v\njrAvbY+rT2kfOCnwlv7UeX5OBxL4nZSXz0vOnieNP11qRbyYXWc23A9ivFCy3bkx\n3XrTFVfLp055LggUDehTiGY5dkfMgB27HmEIeP0c0Tki38z1REzKqMLBqijveiTa\nm0aTwUI111F8dzDGYr3wfOW7ZodvzqafDFCfdqtu1hcPXH/LREo0u5vFDFlusik=\n=QfvR\n-----END PGP SIGNATURE-----\n", "payload": "tree 2019c1e320cee4171314143cb8b506c802cdc1af\nparent e4a663cbaaf3b04ecf14bfa17e2fa0699ecb5a78\nparent d79e19f3320be33f280a2b2eeb2e1ffd7f8f9162\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1607825143 +0900\ncommitter GitHub <noreply@github.com> 1607825143 +0900\n\nRollup merge of #79970 - bjorn3:no_unnecessary_llvm_checkout, r=Mark-Simulacrum\n\nMisc rustbuild improvements when the LLVM backend isn't used\n\n* Don't checkout llvm-project\n* Don't require cmake and ninja\n\nFixes #78564\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d90084c226718e3ad66ae7a29e76e3d41240630b", "html_url": "https://github.com/rust-lang/rust/commit/d90084c226718e3ad66ae7a29e76e3d41240630b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d90084c226718e3ad66ae7a29e76e3d41240630b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a663cbaaf3b04ecf14bfa17e2fa0699ecb5a78", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a663cbaaf3b04ecf14bfa17e2fa0699ecb5a78", "html_url": "https://github.com/rust-lang/rust/commit/e4a663cbaaf3b04ecf14bfa17e2fa0699ecb5a78"}, {"sha": "d79e19f3320be33f280a2b2eeb2e1ffd7f8f9162", "url": "https://api.github.com/repos/rust-lang/rust/commits/d79e19f3320be33f280a2b2eeb2e1ffd7f8f9162", "html_url": "https://github.com/rust-lang/rust/commit/d79e19f3320be33f280a2b2eeb2e1ffd7f8f9162"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "97f40815b87b421d9e9f4357782f3148da27fd04", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d90084c226718e3ad66ae7a29e76e3d41240630b/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/d90084c226718e3ad66ae7a29e76e3d41240630b/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=d90084c226718e3ad66ae7a29e76e3d41240630b", "patch": "@@ -897,13 +897,17 @@ def update_submodules(self):\n         filtered_submodules = []\n         submodules_names = []\n         llvm_checked_out = os.path.exists(os.path.join(self.rust_root, \"src/llvm-project/.git\"))\n+        external_llvm_provided = self.get_toml('llvm-config') or self.downloading_llvm()\n+        llvm_needed = not self.get_toml('codegen-backends', 'rust') \\\n+            or \"llvm\" in self.get_toml('codegen-backends', 'rust')\n         for module in submodules:\n             if module.endswith(\"llvm-project\"):\n-                # Don't sync the llvm-project submodule either if an external LLVM\n-                # was provided, or if we are downloading LLVM. Also, if the\n-                # submodule has been initialized already, sync it anyways so that\n-                # it doesn't mess up contributor pull requests.\n-                if self.get_toml('llvm-config') or self.downloading_llvm():\n+                # Don't sync the llvm-project submodule if an external LLVM was\n+                # provided, if we are downloading LLVM or if the LLVM backend is\n+                # not being built. Also, if the submodule has been initialized\n+                # already, sync it anyways so that it doesn't mess up contributor\n+                # pull requests.\n+                if external_llvm_provided or not llvm_needed:\n                     if self.get_toml('lld') != 'true' and not llvm_checked_out:\n                         continue\n             check = self.check_submodule(module, slow_submodules)"}, {"sha": "acb941d95407ed42856a2c395a308d3938132808", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/d90084c226718e3ad66ae7a29e76e3d41240630b/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d90084c226718e3ad66ae7a29e76e3d41240630b/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=d90084c226718e3ad66ae7a29e76e3d41240630b", "patch": "@@ -17,6 +17,7 @@ use std::process::Command;\n \n use build_helper::{output, t};\n \n+use crate::cache::INTERNER;\n use crate::config::Target;\n use crate::Build;\n \n@@ -79,18 +80,19 @@ pub fn check(build: &mut Build) {\n     }\n \n     // We need cmake, but only if we're actually building LLVM or sanitizers.\n-    let building_llvm = build\n-        .hosts\n-        .iter()\n-        .map(|host| {\n-            build\n-                .config\n-                .target_config\n-                .get(host)\n-                .map(|config| config.llvm_config.is_none())\n-                .unwrap_or(true)\n-        })\n-        .any(|build_llvm_ourselves| build_llvm_ourselves);\n+    let building_llvm = build.config.rust_codegen_backends.contains(&INTERNER.intern_str(\"llvm\"))\n+        && build\n+            .hosts\n+            .iter()\n+            .map(|host| {\n+                build\n+                    .config\n+                    .target_config\n+                    .get(host)\n+                    .map(|config| config.llvm_config.is_none())\n+                    .unwrap_or(true)\n+            })\n+            .any(|build_llvm_ourselves| build_llvm_ourselves);\n     if building_llvm || build.config.any_sanitizers_enabled() {\n         cmd_finder.must_have(\"cmake\");\n     }\n@@ -147,10 +149,12 @@ pub fn check(build: &mut Build) {\n         }\n     }\n \n-    // Externally configured LLVM requires FileCheck to exist\n-    let filecheck = build.llvm_filecheck(build.build);\n-    if !filecheck.starts_with(&build.out) && !filecheck.exists() && build.config.codegen_tests {\n-        panic!(\"FileCheck executable {:?} does not exist\", filecheck);\n+    if build.config.rust_codegen_backends.contains(&INTERNER.intern_str(\"llvm\")) {\n+        // Externally configured LLVM requires FileCheck to exist\n+        let filecheck = build.llvm_filecheck(build.build);\n+        if !filecheck.starts_with(&build.out) && !filecheck.exists() && build.config.codegen_tests {\n+            panic!(\"FileCheck executable {:?} does not exist\", filecheck);\n+        }\n     }\n \n     for target in &build.targets {"}]}