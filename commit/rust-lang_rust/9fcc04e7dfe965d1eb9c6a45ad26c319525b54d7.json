{"sha": "9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmY2MwNGU3ZGZlOTY1ZDFlYjljNmE0NWFkMjZjMzE5NTI1YjU0ZDc=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2016-10-24T07:25:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-24T07:25:52Z"}, "message": "Merge pull request #1288 from Arnavion/fix-1247\n\nDon't assume the first package in the result of `cargo metadata` is the current crate.", "tree": {"sha": "7a83d72dae9fcbdcc2885abb405123800c5dd369", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a83d72dae9fcbdcc2885abb405123800c5dd369"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7", "html_url": "https://github.com/rust-lang/rust/commit/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984e15a0c0bc87b07050bc6f9b7036126cb577ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/984e15a0c0bc87b07050bc6f9b7036126cb577ea", "html_url": "https://github.com/rust-lang/rust/commit/984e15a0c0bc87b07050bc6f9b7036126cb577ea"}, {"sha": "604694bc0b2f445520469d62ecf54d60f3cc39db", "url": "https://api.github.com/repos/rust-lang/rust/commits/604694bc0b2f445520469d62ecf54d60f3cc39db", "html_url": "https://github.com/rust-lang/rust/commit/604694bc0b2f445520469d62ecf54d60f3cc39db"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "b9ce8626eb9bf3a5e6286d084af0aa492e2b8ec5", "filename": "clippy_lints/src/utils/cargo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcargo.rs?ref=9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7", "patch": "@@ -20,7 +20,7 @@ pub struct Package {\n     pub dependencies: Vec<Dependency>,\n     pub targets: Vec<Target>,\n     features: HashMap<String, Vec<String>>,\n-    manifest_path: String,\n+    pub manifest_path: String,\n }\n \n #[derive(RustcDecodable, Debug)]\n@@ -65,10 +65,10 @@ impl From<json::DecoderError> for Error {\n     }\n }\n \n-pub fn metadata(manifest_path: Option<String>) -> Result<Metadata, Error> {\n+pub fn metadata(manifest_path_arg: Option<&str>) -> Result<Metadata, Error> {\n     let mut cmd = Command::new(\"cargo\");\n     cmd.arg(\"metadata\").arg(\"--no-deps\");\n-    if let Some(ref mani) = manifest_path {\n+    if let Some(mani) = manifest_path_arg {\n         cmd.arg(mani);\n     }\n     let output = cmd.output()?;"}, {"sha": "0eef99bfc12b39eab7a4878884083658850c652a", "filename": "src/main.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=9fcc04e7dfe965d1eb9c6a45ad26c319525b54d7", "patch": "@@ -138,10 +138,29 @@ pub fn main() {\n \n     if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n         // this arm is executed on the initial call to `cargo clippy`\n-        let manifest_path = std::env::args().skip(2).find(|val| val.starts_with(\"--manifest-path=\"));\n-        let mut metadata = cargo::metadata(manifest_path).expect(\"could not obtain cargo metadata\");\n+        let manifest_path_arg = std::env::args().skip(2).find(|val| val.starts_with(\"--manifest-path=\"));\n+\n+        let mut metadata = cargo::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref)).expect(\"could not obtain cargo metadata\");\n         assert_eq!(metadata.version, 1);\n-        for target in metadata.packages.remove(0).targets {\n+\n+        let manifest_path = manifest_path_arg.map(|arg| PathBuf::from(Path::new(&arg[\"--manifest-path=\".len()..])));\n+\n+        let current_dir = std::env::current_dir();\n+\n+        let package_index = metadata.packages.iter()\n+            .position(|package| {\n+                let package_manifest_path = Path::new(&package.manifest_path);\n+                if let Some(ref manifest_path) = manifest_path {\n+                    package_manifest_path == manifest_path\n+                } else {\n+                    let current_dir = current_dir.as_ref().expect(\"could not read current directory\");\n+                    let package_manifest_directory = package_manifest_path.parent().expect(\"could not find parent directory of package manifest\");\n+                    package_manifest_directory == current_dir\n+                }\n+            })\n+            .expect(\"could not find matching package\");\n+        let package = metadata.packages.remove(package_index);\n+        for target in package.targets {\n             let args = std::env::args().skip(2);\n             if let Some(first) = target.kind.get(0) {\n                 if target.kind.len() > 1 || first.ends_with(\"lib\") {"}]}