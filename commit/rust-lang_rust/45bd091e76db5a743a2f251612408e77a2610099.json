{"sha": "45bd091e76db5a743a2f251612408e77a2610099", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1YmQwOTFlNzZkYjVhNzQzYTJmMjUxNjEyNDA4ZTc3YTI2MTAwOTk=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-01-12T04:01:27Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-01-16T01:16:40Z"}, "message": "[incremental] Cache ty::Slice<T> hashes\n\nFixes #47294", "tree": {"sha": "5277a7b9a01a24cdbe3fed0405779b4035552721", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5277a7b9a01a24cdbe3fed0405779b4035552721"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45bd091e76db5a743a2f251612408e77a2610099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45bd091e76db5a743a2f251612408e77a2610099", "html_url": "https://github.com/rust-lang/rust/commit/45bd091e76db5a743a2f251612408e77a2610099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45bd091e76db5a743a2f251612408e77a2610099/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14780b310e88e0b69e15a2dd7f7870087ced685d", "url": "https://api.github.com/repos/rust-lang/rust/commits/14780b310e88e0b69e15a2dd7f7870087ced685d", "html_url": "https://github.com/rust-lang/rust/commit/14780b310e88e0b69e15a2dd7f7870087ced685d"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "4ae114c4e69da8cc6f871f7b17474c12ade335b8", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/45bd091e76db5a743a2f251612408e77a2610099/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45bd091e76db5a743a2f251612408e77a2610099/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=45bd091e76db5a743a2f251612408e77a2610099", "patch": "@@ -11,9 +11,11 @@\n //! This module contains `HashStable` implementations for various data types\n //! from rustc::ty in no particular order.\n \n-use ich::{StableHashingContext, NodeIdHashingMode};\n+use ich::{Fingerprint, StableHashingContext, NodeIdHashingMode};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, ToStableHashKey,\n                                            StableHasher, StableHasherResult};\n+use std::cell::RefCell;\n use std::hash as std_hash;\n use std::mem;\n use middle::region;\n@@ -26,7 +28,26 @@ for &'gcx ty::Slice<T>\n     fn hash_stable<W: StableHasherResult>(&self,\n                                           hcx: &mut StableHashingContext<'gcx>,\n                                           hasher: &mut StableHasher<W>) {\n-        (&self[..]).hash_stable(hcx, hasher);\n+        thread_local! {\n+            static CACHE: RefCell<FxHashMap<(usize, usize), Fingerprint>> =\n+                RefCell::new(FxHashMap());\n+        }\n+\n+        let hash = CACHE.with(|cache| {\n+            let key = (self.as_ptr() as usize, self.len());\n+            if let Some(&hash) = cache.borrow().get(&key) {\n+                return hash;\n+            }\n+\n+            let mut hasher = StableHasher::new();\n+            (&self[..]).hash_stable(hcx, &mut hasher);\n+\n+            let hash: Fingerprint = hasher.finish();\n+            cache.borrow_mut().insert(key, hash);\n+            hash\n+        });\n+\n+        hash.hash_stable(hcx, hasher);\n     }\n }\n "}]}