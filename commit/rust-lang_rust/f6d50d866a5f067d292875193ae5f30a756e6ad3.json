{"sha": "f6d50d866a5f067d292875193ae5f30a756e6ad3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZDUwZDg2NmE1ZjA2N2QyOTI4NzUxOTNhZTVmMzBhNzU2ZTZhZDM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-06T03:55:28Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-06T03:55:28Z"}, "message": "libcore: Make to_upper() and to_lower() pure", "tree": {"sha": "98c91e434882082826d2514db549e749b741fd9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98c91e434882082826d2514db549e749b741fd9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6d50d866a5f067d292875193ae5f30a756e6ad3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d50d866a5f067d292875193ae5f30a756e6ad3", "html_url": "https://github.com/rust-lang/rust/commit/f6d50d866a5f067d292875193ae5f30a756e6ad3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6d50d866a5f067d292875193ae5f30a756e6ad3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1554106742fa8c0a99cac1adc5f65aa0ce0ac62", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1554106742fa8c0a99cac1adc5f65aa0ce0ac62", "html_url": "https://github.com/rust-lang/rust/commit/d1554106742fa8c0a99cac1adc5f65aa0ce0ac62"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bc669870c49dc216de6e989fc63d43040a69ced5", "filename": "src/libcore/str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6d50d866a5f067d292875193ae5f30a756e6ad3/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d50d866a5f067d292875193ae5f30a756e6ad3/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=f6d50d866a5f067d292875193ae5f30a756e6ad3", "patch": "@@ -2160,8 +2160,8 @@ trait StrSlice {\n     fn split_str(sep: &a/str) -> ~[~str];\n     fn starts_with(needle: &a/str) -> bool;\n     fn substr(begin: uint, n: uint) -> ~str;\n-    fn to_lower() -> ~str;\n-    fn to_upper() -> ~str;\n+    pure fn to_lower() -> ~str;\n+    pure fn to_upper() -> ~str;\n     fn escape_default() -> ~str;\n     fn escape_unicode() -> ~str;\n     pure fn to_unique() -> ~str;\n@@ -2262,10 +2262,10 @@ impl &str: StrSlice {\n     fn substr(begin: uint, n: uint) -> ~str { substr(self, begin, n) }\n     /// Convert a string to lowercase\n     #[inline]\n-    fn to_lower() -> ~str { to_lower(self) }\n+    pure fn to_lower() -> ~str { to_lower(self) }\n     /// Convert a string to uppercase\n     #[inline]\n-    fn to_upper() -> ~str { to_upper(self) }\n+    pure fn to_upper() -> ~str { to_upper(self) }\n     /// Escape each char in `s` with char::escape_default.\n     #[inline]\n     fn escape_default() -> ~str { escape_default(self) }"}]}