{"sha": "b65ea1bef1391a3af9118884952718fc905f8e02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NWVhMWJlZjEzOTFhM2FmOTExODg4NDk1MjcxOGZjOTA1ZjhlMDI=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2020-06-22T22:29:55Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2020-06-22T22:29:55Z"}, "message": "place non-obvious defaults on a separate line\n\nSee https://github.com/rust-lang/rust/pull/73538#discussion_r443809593\nfor the motivation", "tree": {"sha": "a3858bed8c6515ee1f0a462d1825957cee8e6064", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3858bed8c6515ee1f0a462d1825957cee8e6064"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b65ea1bef1391a3af9118884952718fc905f8e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b65ea1bef1391a3af9118884952718fc905f8e02", "html_url": "https://github.com/rust-lang/rust/commit/b65ea1bef1391a3af9118884952718fc905f8e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b65ea1bef1391a3af9118884952718fc905f8e02/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e84552e5dcb5b21de1528d7c42406a4b9ae9afe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e84552e5dcb5b21de1528d7c42406a4b9ae9afe9", "html_url": "https://github.com/rust-lang/rust/commit/e84552e5dcb5b21de1528d7c42406a4b9ae9afe9"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "79b06d5cf9962cf2eb3498126e630a095e7f82e8", "filename": "config.toml.example", "status": "modified", "additions": 30, "deletions": 10, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b65ea1bef1391a3af9118884952718fc905f8e02/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/b65ea1bef1391a3af9118884952718fc905f8e02/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=b65ea1bef1391a3af9118884952718fc905f8e02", "patch": "@@ -118,18 +118,24 @@\n # nightlies are already produced for. The current platform must be able to run\n # binaries of this build triple and the nightly will be used to bootstrap the\n # first compiler.\n-#build = \"x86_64-unknown-linux-gnu\"    # defaults to your host platform\n+#\n+# Defaults to host platform\n+#build = \"x86_64-unknown-linux-gnu\"\n \n # In addition to the build triple, other triples to produce full compiler\n # toolchains for. Each of these triples will be bootstrapped from the build\n # triple and then will continue to bootstrap themselves. This platform must\n # currently be able to run all of the triples provided here.\n-#host = [\"x86_64-unknown-linux-gnu\"]   # defaults to just the build triple\n+#\n+# Defaults to just the build triple\n+#host = [\"x86_64-unknown-linux-gnu\"]\n \n # In addition to all host triples, other triples to produce the standard library\n # for. Each host triple will be used to produce a copy of the standard library\n # for each target triple.\n-#target = [\"x86_64-unknown-linux-gnu\"] # defaults to just the build triple\n+#\n+# Defaults to just the build triple\n+#target = [\"x86_64-unknown-linux-gnu\"]\n \n # Use this directory to store build artifacts.\n # You can use \"$ROOT\" to indicate the root of the git repository.\n@@ -173,7 +179,9 @@\n \n # Python interpreter to use for various tasks throughout the build, notably\n # rustdoc tests, the lldb python interpreter, and some dist bits and pieces.\n-#python = \"python\" # defaults to the Python interpreter used to execute x.py\n+#\n+# Defaults to the Python interpreter used to execute x.py\n+#python = \"python\"\n \n # Force Cargo to check that Cargo.lock describes the precise dependency\n # set that all the Cargo.toml files create, instead of updating it.\n@@ -311,11 +319,15 @@\n \n # Whether or not debug assertions are enabled for the compiler and standard\n # library.\n-#debug-assertions = false # defaults to rust.debug value\n+#\n+# Defaults to rust.debug value\n+#debug-assertions = false\n \n # Whether or not debug assertions are enabled for the standard library.\n # Overrides the `debug-assertions` option, if defined.\n-#debug-assertions-std = false # defaults to rust.debug value\n+#\n+# Defaults to rust.debug value\n+#debug-assertions-std = false\n \n # Debuginfo level for most of Rust code, corresponds to the `-C debuginfo=N` option of `rustc`.\n # `0` - no debug info\n@@ -324,16 +336,24 @@\n # Can be overridden for specific subsets of Rust code (rustc, std or tools).\n # Debuginfo for tests run with compiletest is not controlled by this option\n # and needs to be enabled separately with `debuginfo-level-tests`.\n-#debuginfo-level = 0 # defaults to 2 if debug is true\n+#\n+# Defaults to 2 if debug is true\n+#debuginfo-level = 0\n \n # Debuginfo level for the compiler.\n-#debuginfo-level-rustc = 0 # defaults to rust.debuginfo-level value\n+#\n+# Defaults to rust.debuginfo-level value\n+#debuginfo-level-rustc = 0\n \n # Debuginfo level for the standard library.\n-#debuginfo-level-std = 0 # defaults to rust.debuginfo-level value\n+#\n+# Defaults to rust.debuginfo-level value\n+#debuginfo-level-std = 0\n \n # Debuginfo level for the tools.\n-#debuginfo-level-tools = 0 # defaults to rust.debuginfo-level value\n+#\n+# Defaults to rust.debuginfo-level value\n+#debuginfo-level-tools = 0\n \n # Debuginfo level for the test suites run with compiletest.\n # FIXME(#61117): Some tests fail when this option is enabled."}]}