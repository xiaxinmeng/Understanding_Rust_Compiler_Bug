{"sha": "5d19d4d894031c337e8b6d13802ebda622d30d23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMTlkNGQ4OTQwMzFjMzM3ZThiNmQxMzgwMmViZGE2MjJkMzBkMjM=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-25T21:09:51Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-25T21:09:51Z"}, "message": "Use the correct type for static qualifs", "tree": {"sha": "e7319942b5c676f0ceb848135814baea46603227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7319942b5c676f0ceb848135814baea46603227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d19d4d894031c337e8b6d13802ebda622d30d23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d19d4d894031c337e8b6d13802ebda622d30d23", "html_url": "https://github.com/rust-lang/rust/commit/5d19d4d894031c337e8b6d13802ebda622d30d23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d19d4d894031c337e8b6d13802ebda622d30d23/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed33453a37d602f34cc40c205f9b9b8a8aff88b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed33453a37d602f34cc40c205f9b9b8a8aff88b5", "html_url": "https://github.com/rust-lang/rust/commit/ed33453a37d602f34cc40c205f9b9b8a8aff88b5"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "bd895171e358e9b89971669a1d1ced34647aa68f", "filename": "src/librustc_mir/transform/check_consts/qualifs.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5d19d4d894031c337e8b6d13802ebda622d30d23/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d19d4d894031c337e8b6d13802ebda622d30d23/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=5d19d4d894031c337e8b6d13802ebda622d30d23", "patch": "@@ -1,6 +1,5 @@\n //! A copy of the `Qualif` trait in `qualify_consts.rs` that is suitable for the new validator.\n \n-use rustc::hir::def_id::DefId;\n use rustc::mir::*;\n use rustc::ty::{self, Ty};\n use syntax_pos::DUMMY_SP;\n@@ -33,12 +32,6 @@ pub trait Qualif {\n     /// of the type.\n     fn in_any_value_of_ty(_cx: &ConstCx<'_, 'tcx>, _ty: Ty<'tcx>) -> bool;\n \n-    fn in_static(cx: &ConstCx<'_, 'tcx>, def_id: DefId) -> bool {\n-        // `mir_const_qualif` does return the qualifs in the final value of a `static`, so we could\n-        // use value-based qualification here, but we shouldn't do this without a good reason.\n-        Self::in_any_value_of_ty(cx, cx.tcx.type_of(def_id))\n-    }\n-\n     fn in_projection_structurally(\n         cx: &ConstCx<'_, 'tcx>,\n         per_local: &impl Fn(Local) -> bool,\n@@ -101,8 +94,14 @@ pub trait Qualif {\n             }\n \n             Operand::Constant(ref constant) => {\n-                if let Some(static_) = constant.check_static_ptr(cx.tcx) {\n-                    Self::in_static(cx, static_)\n+                if constant.check_static_ptr(cx.tcx).is_some() {\n+                    // `mir_const_qualif` does return the qualifs in the final value of a `static`,\n+                    // so we could use value-based qualification here, but we shouldn't do this\n+                    // without a good reason.\n+                    //\n+                    // Note: this uses `constant.literal.ty` which is a reference or pointer to the\n+                    // type of the actual `static` item.\n+                    Self::in_any_value_of_ty(cx, constant.literal.ty)\n                 } else if let ty::ConstKind::Unevaluated(def_id, _) = constant.literal.val {\n                     // Don't peek inside trait associated constants.\n                     if cx.tcx.trait_of_item(def_id).is_some() {"}, {"sha": "d3c663c53e90593ab49081261934991de4d179c9", "filename": "src/test/ui/consts/const-eval/promote-static.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5d19d4d894031c337e8b6d13802ebda622d30d23/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromote-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d19d4d894031c337e8b6d13802ebda622d30d23/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromote-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromote-static.rs?ref=5d19d4d894031c337e8b6d13802ebda622d30d23", "patch": "@@ -0,0 +1,14 @@\n+// regression test for #67609.\n+\n+// check-pass\n+\n+static NONE: Option<String> = None;\n+\n+static NONE_REF_REF: &&Option<String> = {\n+    let x = &&NONE;\n+    x\n+};\n+\n+fn main() {\n+    println!(\"{:?}\", NONE_REF_REF);\n+}"}]}