{"sha": "dc8fe633d5812096008d94d47fa692264d327a46", "node_id": "C_kwDOAAsO6NoAKGRjOGZlNjMzZDU4MTIwOTYwMDhkOTRkNDdmYTY5MjI2NGQzMjdhNDY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-03T05:03:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-03T05:03:06Z"}, "message": "Rollup merge of #101217 - eholk:drop-tracking-73137, r=jyn514\n\n[drop tracking] Use parent expression for scope, not parent node\n\nPreviously we were just using the parent node as the scope for a temporary value, but it turns out this is too narrow. For example, in an expression like\n\n    Foo {\n        b: &42,\n        a: async { 0 }.await,\n    }\n\nthe scope for the &42 was set to the ExprField node for `b: &42`, when we actually want to use the Foo struct expression.\n\nWe fix this by recursively searching through parent nodes until we find a Node::Expr. It may be that we don't find one, and if so that's okay, we will just fall back on the enclosing temporary scope which is always sufficient.\n\nHelps with #97331\n\nr? ``@jyn514``", "tree": {"sha": "7c3d92ed9171f0e079166db53dbb8ba3166bcfd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c3d92ed9171f0e079166db53dbb8ba3166bcfd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc8fe633d5812096008d94d47fa692264d327a46", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjEuAKCRBK7hj4Ov3rIwAA9GIIAAvodLs9iMvtFCU1bI6rMnLC\nlk9u7ZIJAMpqyqK6TlxL5T4j/aKkvQPH55oJi3Kx6lxP33RECoJ40O+N1/2t9wC5\nMLyDC/utVVbi5rQ0rdqeNhZQi+VFj0NI+XconbQMFvPCXCEKlHuKLFa3p49Lc/7a\n/T7OR+NhT70aw/ENW6i9hE9xahQtm0gV2hcBQ4CuQlm3jxzJhvpyCnFGk28J1yhx\ngHdp2Zdo6TyHDJrZ+flPU1AcZ7bf2PjPTnY9U/WQu2lSb8UbRMVc4Kqekomixs5t\n7YC7GtX8RTrlXMAAK75PBh8v2ZQwR3m8brQHMtzUTlWZGy2LQrCHDa9LY0piMXk=\n=LBXt\n-----END PGP SIGNATURE-----\n", "payload": "tree 7c3d92ed9171f0e079166db53dbb8ba3166bcfd1\nparent a0056795da7a51f0ebebf0d5ad8f0b663d089420\nparent f921f5626d1dcc08f2707ed2c22e22fd1ad678b7\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1662181386 +0530\ncommitter GitHub <noreply@github.com> 1662181386 +0530\n\nRollup merge of #101217 - eholk:drop-tracking-73137, r=jyn514\n\n[drop tracking] Use parent expression for scope, not parent node\n\nPreviously we were just using the parent node as the scope for a temporary value, but it turns out this is too narrow. For example, in an expression like\n\n    Foo {\n        b: &42,\n        a: async { 0 }.await,\n    }\n\nthe scope for the &42 was set to the ExprField node for `b: &42`, when we actually want to use the Foo struct expression.\n\nWe fix this by recursively searching through parent nodes until we find a Node::Expr. It may be that we don't find one, and if so that's okay, we will just fall back on the enclosing temporary scope which is always sufficient.\n\nHelps with #97331\n\nr? ``@jyn514``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc8fe633d5812096008d94d47fa692264d327a46", "html_url": "https://github.com/rust-lang/rust/commit/dc8fe633d5812096008d94d47fa692264d327a46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc8fe633d5812096008d94d47fa692264d327a46/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0056795da7a51f0ebebf0d5ad8f0b663d089420", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0056795da7a51f0ebebf0d5ad8f0b663d089420", "html_url": "https://github.com/rust-lang/rust/commit/a0056795da7a51f0ebebf0d5ad8f0b663d089420"}, {"sha": "f921f5626d1dcc08f2707ed2c22e22fd1ad678b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f921f5626d1dcc08f2707ed2c22e22fd1ad678b7", "html_url": "https://github.com/rust-lang/rust/commit/f921f5626d1dcc08f2707ed2c22e22fd1ad678b7"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "6217bffb8f76c206b4df1840eb12dd9586c7277a", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dc8fe633d5812096008d94d47fa692264d327a46/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc8fe633d5812096008d94d47fa692264d327a46/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=dc8fe633d5812096008d94d47fa692264d327a46", "patch": "@@ -291,6 +291,9 @@ impl<'hir> Map<'hir> {\n         Some(def_kind)\n     }\n \n+    /// Finds the id of the parent node to this one.\n+    ///\n+    /// If calling repeatedly and iterating over parents, prefer [`Map::parent_iter`].\n     pub fn find_parent_node(self, id: HirId) -> Option<HirId> {\n         if id.local_id == ItemLocalId::from_u32(0) {\n             Some(self.tcx.hir_owner_parent(id.owner))"}, {"sha": "7fda6f79f238da477bbe80afdfb98098b76c25a0", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dc8fe633d5812096008d94d47fa692264d327a46/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc8fe633d5812096008d94d47fa692264d327a46/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=dc8fe633d5812096008d94d47fa692264d327a46", "patch": "@@ -408,8 +408,15 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n             }) {\n             self.rvalue_scopes.temporary_scope(self.region_scope_tree, expr.hir_id.local_id)\n         } else {\n-            debug!(\"parent_node: {:?}\", self.fcx.tcx.hir().find_parent_node(expr.hir_id));\n-            match self.fcx.tcx.hir().find_parent_node(expr.hir_id) {\n+            let parent_expr = self\n+                .fcx\n+                .tcx\n+                .hir()\n+                .parent_iter(expr.hir_id)\n+                .find(|(_, node)| matches!(node, hir::Node::Expr(_)))\n+                .map(|(id, _)| id);\n+            debug!(\"parent_expr: {:?}\", parent_expr);\n+            match parent_expr {\n                 Some(parent) => Some(Scope { id: parent.local_id, data: ScopeData::Node }),\n                 None => {\n                     self.rvalue_scopes.temporary_scope(self.region_scope_tree, expr.hir_id.local_id)"}, {"sha": "e22675e9d5f4e5ebc45155f2166788600eafc481", "filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/record_consumed_borrow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc8fe633d5812096008d94d47fa692264d327a46/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc8fe633d5812096008d94d47fa692264d327a46/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs?ref=dc8fe633d5812096008d94d47fa692264d327a46", "patch": "@@ -159,8 +159,8 @@ impl<'tcx> expr_use_visitor::Delegate<'tcx> for ExprUseDelegate<'tcx> {\n         bk: rustc_middle::ty::BorrowKind,\n     ) {\n         debug!(\n-            \"borrow: place_with_id = {place_with_id:?}, diag_expr_id={diag_expr_id:?}, \\\n-            borrow_kind={bk:?}\"\n+            \"borrow: place_with_id = {place_with_id:#?}, diag_expr_id={diag_expr_id:#?}, \\\n+            borrow_kind={bk:#?}\"\n         );\n \n         self.borrow_place(place_with_id);"}, {"sha": "dcbe7765a9e1c4fd3d13f34a8e9b2f982f0a719c", "filename": "src/test/ui/async-await/issue-73137.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dc8fe633d5812096008d94d47fa692264d327a46/src%2Ftest%2Fui%2Fasync-await%2Fissue-73137.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc8fe633d5812096008d94d47fa692264d327a46/src%2Ftest%2Fui%2Fasync-await%2Fissue-73137.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-73137.rs?ref=dc8fe633d5812096008d94d47fa692264d327a46", "patch": "@@ -2,6 +2,9 @@\n \n // run-pass\n // edition:2018\n+// revisions: normal drop-tracking\n+// [normal]compile-flags: -Zdrop-tracking=no\n+// [drop-tracking]compile-flags: -Zdrop-tracking\n \n #![allow(dead_code)]\n use std::future::Future;"}]}