{"sha": "8536c288f206445395375cfd06932ef74cf9877d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MzZjMjg4ZjIwNjQ0NTM5NTM3NWNmZDA2OTMyZWY3NGNmOTg3N2Q=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-05-31T09:58:48Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-05-31T09:58:48Z"}, "message": "suppress and compress", "tree": {"sha": "9d6c4a1c87607d6d56e319cce685aaef0505a8e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d6c4a1c87607d6d56e319cce685aaef0505a8e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8536c288f206445395375cfd06932ef74cf9877d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8536c288f206445395375cfd06932ef74cf9877d", "html_url": "https://github.com/rust-lang/rust/commit/8536c288f206445395375cfd06932ef74cf9877d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8536c288f206445395375cfd06932ef74cf9877d/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f390626778c1bbb13911556d585850eb2fa67923", "url": "https://api.github.com/repos/rust-lang/rust/commits/f390626778c1bbb13911556d585850eb2fa67923", "html_url": "https://github.com/rust-lang/rust/commit/f390626778c1bbb13911556d585850eb2fa67923"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "2aa53a1632ba26a2b3e6a4d61494f2f5d83d1ce0", "filename": "src/items.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8536c288f206445395375cfd06932ef74cf9877d/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8536c288f206445395375cfd06932ef74cf9877d/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8536c288f206445395375cfd06932ef74cf9877d", "patch": "@@ -649,8 +649,14 @@ pub fn format_impl(\n         } else {\n             context.budget(last_line_width(&result))\n         };\n-        let option = WhereClauseOption::snuggled(&ref_and_type);\n-        let where_clause_str = rewrite_where_clause(\n+\n+        let mut option = WhereClauseOption::snuggled(&ref_and_type);\n+        if items.is_empty() && generics.where_clause.predicates.len() == 1 {\n+            option.compress_where();\n+            option.suppress_comma();\n+        }\n+\n+        let mut where_clause_str = rewrite_where_clause(\n             context,\n             &generics.where_clause,\n             context.config.brace_style(),\n@@ -1380,9 +1386,9 @@ fn format_tuple_struct(\n         // We need to put the where clause on a new line, but we didn't\n         // know that earlier, so the where clause will not be indented properly.\n         result.push('\\n');\n-        result.push_str(\n-            &(offset.block_only() + (context.config.tab_spaces() - 1)).to_string(context.config),\n-        );\n+        result\n+            .push_str(&(offset.block_only() + (context.config.tab_spaces() - 1))\n+                .to_string(context.config));\n     }\n     result.push_str(&where_clause_str);\n \n@@ -2133,6 +2139,14 @@ impl WhereClauseOption {\n             compress_where: false,\n         }\n     }\n+\n+    pub fn suppress_comma(&mut self) {\n+        self.suppress_comma = true\n+    }\n+\n+    pub fn compress_where(&mut self) {\n+        self.compress_where = true\n+    }\n }\n \n fn rewrite_args("}]}