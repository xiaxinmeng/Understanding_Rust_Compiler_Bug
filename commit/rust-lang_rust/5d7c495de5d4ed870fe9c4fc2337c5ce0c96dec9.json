{"sha": "5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "node_id": "C_kwDOAAsO6NoAKDVkN2M0OTVkZTVkNGVkODcwZmU5YzRmYzIzMzdjNWNlMGM5NmRlYzk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-26T18:33:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-26T18:33:17Z"}, "message": "channels do ptr-int transmutes so move them to non-check-number-validity test", "tree": {"sha": "a9a89026686673ceef4b55402e079478769db5f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9a89026686673ceef4b55402e079478769db5f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "html_url": "https://github.com/rust-lang/rust/commit/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "552b77e3b9841f697d954f2ab341711dbff8d029", "url": "https://api.github.com/repos/rust-lang/rust/commits/552b77e3b9841f697d954f2ab341711dbff8d029", "html_url": "https://github.com/rust-lang/rust/commit/552b77e3b9841f697d954f2ab341711dbff8d029"}], "stats": {"total": 115, "additions": 63, "deletions": 52}, "files": [{"sha": "58d073c85acc51641c259462aa96ab3f3db373cb", "filename": "tests/run-pass/concurrency/channels.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fchannels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fchannels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fchannels.rs?ref=5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "patch": "@@ -0,0 +1,57 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n+// compile-flags: -Zmiri-disable-isolation\n+\n+use std::sync::mpsc::{channel, sync_channel};\n+use std::thread;\n+\n+// Check if channels are working.\n+\n+/// The test taken from the Rust documentation.\n+fn simple_send() {\n+    let (tx, rx) = channel();\n+    thread::spawn(move || {\n+        tx.send(10).unwrap();\n+    });\n+    assert_eq!(rx.recv().unwrap(), 10);\n+}\n+\n+/// The test taken from the Rust documentation.\n+fn multiple_send() {\n+    let (tx, rx) = channel();\n+    for i in 0..10 {\n+        let tx = tx.clone();\n+        thread::spawn(move || {\n+            tx.send(i).unwrap();\n+        });\n+    }\n+\n+    let mut sum = 0;\n+    for _ in 0..10 {\n+        let j = rx.recv().unwrap();\n+        assert!(0 <= j && j < 10);\n+        sum += j;\n+    }\n+    assert_eq!(sum, 45);\n+}\n+\n+/// The test taken from the Rust documentation.\n+fn send_on_sync() {\n+    let (sender, receiver) = sync_channel(1);\n+\n+    // this returns immediately\n+    sender.send(1).unwrap();\n+\n+    thread::spawn(move || {\n+        // this will block until the previous message has been received\n+        sender.send(2).unwrap();\n+    });\n+\n+    assert_eq!(receiver.recv().unwrap(), 1);\n+    assert_eq!(receiver.recv().unwrap(), 2);\n+}\n+\n+fn main() {\n+    simple_send();\n+    multiple_send();\n+    send_on_sync();\n+}"}, {"sha": "03676519d4f1c052581dee9227a650c2a4b8d782", "filename": "tests/run-pass/concurrency/channels.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fchannels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fchannels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fchannels.stderr?ref=5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "patch": "@@ -0,0 +1,2 @@\n+warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+"}, {"sha": "c659cfbc3fdc226982d2ca0fa76edaf97355bdb0", "filename": "tests/run-pass/concurrency/simple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fsimple.rs?ref=5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "patch": "@@ -1,4 +1,5 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n+// compile-flags: -Zmiri-check-number-validity\n \n use std::thread;\n "}, {"sha": "35f5f10274c95b95a195dcceec46f7d4ab40d162", "filename": "tests/run-pass/concurrency/simple.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fsimple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fsimple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fsimple.stderr?ref=5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "patch": "@@ -1,5 +1,5 @@\n warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n \n-thread '<unnamed>' panicked at 'Hello!', $DIR/simple.rs:54:9\n+thread '<unnamed>' panicked at 'Hello!', $DIR/simple.rs:55:9\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n-thread 'childthread' panicked at 'Hello, world!', $DIR/simple.rs:64:9\n+thread 'childthread' panicked at 'Hello, world!', $DIR/simple.rs:65:9"}, {"sha": "d47aa2a8d234a4c6a4a5d7d9763cf1c56bec0496", "filename": "tests/run-pass/concurrency/sync.rs", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fsync.rs?ref=5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "patch": "@@ -1,7 +1,6 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n // compile-flags: -Zmiri-disable-isolation -Zmiri-check-number-validity\n \n-use std::sync::mpsc::{channel, sync_channel};\n use std::sync::{Arc, Barrier, Condvar, Mutex, Once, RwLock};\n use std::thread;\n use std::time::{Duration, Instant};\n@@ -181,52 +180,6 @@ fn check_rwlock_read_no_deadlock() {\n     handle.join().unwrap();\n }\n \n-// Check if channels are working.\n-\n-/// The test taken from the Rust documentation.\n-fn simple_send() {\n-    let (tx, rx) = channel();\n-    thread::spawn(move || {\n-        tx.send(10).unwrap();\n-    });\n-    assert_eq!(rx.recv().unwrap(), 10);\n-}\n-\n-/// The test taken from the Rust documentation.\n-fn multiple_send() {\n-    let (tx, rx) = channel();\n-    for i in 0..10 {\n-        let tx = tx.clone();\n-        thread::spawn(move || {\n-            tx.send(i).unwrap();\n-        });\n-    }\n-\n-    let mut sum = 0;\n-    for _ in 0..10 {\n-        let j = rx.recv().unwrap();\n-        assert!(0 <= j && j < 10);\n-        sum += j;\n-    }\n-    assert_eq!(sum, 45);\n-}\n-\n-/// The test taken from the Rust documentation.\n-fn send_on_sync() {\n-    let (sender, receiver) = sync_channel(1);\n-\n-    // this returns immediately\n-    sender.send(1).unwrap();\n-\n-    thread::spawn(move || {\n-        // this will block until the previous message has been received\n-        sender.send(2).unwrap();\n-    });\n-\n-    assert_eq!(receiver.recv().unwrap(), 1);\n-    assert_eq!(receiver.recv().unwrap(), 2);\n-}\n-\n // Check if Rust once statics are working.\n \n static mut VAL: usize = 0;\n@@ -353,9 +306,6 @@ fn main() {\n     check_mutex();\n     check_rwlock_write();\n     check_rwlock_read_no_deadlock();\n-    simple_send();\n-    multiple_send();\n-    send_on_sync();\n     check_once();\n     check_rwlock_unlock_bug1();\n     check_rwlock_unlock_bug2();"}, {"sha": "0fd4a9f1372dc30f94536913f82ffc0b072d349e", "filename": "tests/run-pass/concurrency/thread_locals.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs?ref=5d7c495de5d4ed870fe9c4fc2337c5ce0c96dec9", "patch": "@@ -1,4 +1,5 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n+// compile-flags: -Zmiri-check-number-validity\n \n //! The main purpose of this test is to check that if we take a pointer to\n //! thread's `t1` thread-local `A` and send it to another thread `t2`,"}]}