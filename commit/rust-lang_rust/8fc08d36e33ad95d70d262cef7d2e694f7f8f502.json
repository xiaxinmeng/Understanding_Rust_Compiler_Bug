{"sha": "8fc08d36e33ad95d70d262cef7d2e694f7f8f502", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYzA4ZDM2ZTMzYWQ5NWQ3MGQyNjJjZWY3ZDJlNjk0ZjdmOGY1MDI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-02T13:59:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-02T13:59:18Z"}, "message": "remove second way to get the body", "tree": {"sha": "ac8a3c42e334f1c9b5207de9b0c6ba55c8838c83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac8a3c42e334f1c9b5207de9b0c6ba55c8838c83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fc08d36e33ad95d70d262cef7d2e694f7f8f502", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc08d36e33ad95d70d262cef7d2e694f7f8f502", "html_url": "https://github.com/rust-lang/rust/commit/8fc08d36e33ad95d70d262cef7d2e694f7f8f502", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fc08d36e33ad95d70d262cef7d2e694f7f8f502/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03b2ab8e1f11f0e05234da9162ef57f7a30a64af", "url": "https://api.github.com/repos/rust-lang/rust/commits/03b2ab8e1f11f0e05234da9162ef57f7a30a64af", "html_url": "https://github.com/rust-lang/rust/commit/03b2ab8e1f11f0e05234da9162ef57f7a30a64af"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "d6c551fb23578a16aa5c85cef32c3e177f78c910", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8fc08d36e33ad95d70d262cef7d2e694f7f8f502/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc08d36e33ad95d70d262cef7d2e694f7f8f502/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=8fc08d36e33ad95d70d262cef7d2e694f7f8f502", "patch": "@@ -77,10 +77,6 @@ impl Body {\n     pub fn pats(&self) -> impl Iterator<Item = (PatId, &Pat)> {\n         self.pats.iter()\n     }\n-\n-    pub fn source_map(&self, db: &impl HirDatabase) -> Arc<BodySourceMap> {\n-        db.body_with_source_map(self.owner).1\n-    }\n }\n \n // needs arbitrary_self_types to be a method... or maybe move to the def?"}, {"sha": "9ec179593ae800e201e246bece95e29eda3fd513", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8fc08d36e33ad95d70d262cef7d2e694f7f8f502/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc08d36e33ad95d70d262cef7d2e694f7f8f502/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=8fc08d36e33ad95d70d262cef7d2e694f7f8f502", "patch": "@@ -109,7 +109,7 @@ pub(crate) fn reference_definition(\n             Some(Resolution::Def(def)) => return Exact(NavigationTarget::from_def(db, def)),\n             Some(Resolution::LocalBinding(pat)) => {\n                 let body = resolver.body().expect(\"no body for local binding\");\n-                let source_map = body.source_map(db);\n+                let source_map = body.owner().body_source_map(db);\n                 let ptr = source_map.pat_syntax(pat).expect(\"pattern not found in syntax mapping\");\n                 let name =\n                     path.as_ident().cloned().expect(\"local binding from a multi-segment path\");"}]}