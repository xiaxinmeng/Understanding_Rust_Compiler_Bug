{"sha": "c93d9c1794eb8d57fd2f108547192c3aeb92b505", "node_id": "C_kwDOAAsO6NoAKGM5M2Q5YzE3OTRlYjhkNTdmZDJmMTA4NTQ3MTkyYzNhZWI5MmI1MDU", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-19T09:25:35Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-21T12:16:41Z"}, "message": "Rename `drop_ref` lint to `dropping_references`", "tree": {"sha": "4595f3edcf388590e6aeb4839c45a123c8b9ffc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4595f3edcf388590e6aeb4839c45a123c8b9ffc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c93d9c1794eb8d57fd2f108547192c3aeb92b505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c93d9c1794eb8d57fd2f108547192c3aeb92b505", "html_url": "https://github.com/rust-lang/rust/commit/c93d9c1794eb8d57fd2f108547192c3aeb92b505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c93d9c1794eb8d57fd2f108547192c3aeb92b505/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85a18289431d245437d80b3006ec499c23e62400", "url": "https://api.github.com/repos/rust-lang/rust/commits/85a18289431d245437d80b3006ec499c23e62400", "html_url": "https://github.com/rust-lang/rust/commit/85a18289431d245437d80b3006ec499c23e62400"}], "stats": {"total": 100, "additions": 50, "deletions": 50}, "files": [{"sha": "b0ccbe4b1f1fde2735d2468b5f1d38b333bd79e8", "filename": "compiler/rustc_lint/messages.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/compiler%2Frustc_lint%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/compiler%2Frustc_lint%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fmessages.ftl?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -521,7 +521,7 @@ lint_opaque_hidden_inferred_bound = opaque type `{$ty}` does not satisfy its ass\n \n lint_opaque_hidden_inferred_bound_sugg = add this bound\n \n-lint_drop_ref = calls to `std::mem::drop` with a reference instead of an owned value does nothing\n+lint_dropping_references = calls to `std::mem::drop` with a reference instead of an owned value does nothing\n     .label = argument has type `{$arg_ty}`\n     .note = use `let _ = ...` to ignore the expression or result\n "}, {"sha": "b1199096d7c82481feefa0ed603dc237d4588fe9", "filename": "compiler/rustc_lint/src/drop_forget_useless.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/compiler%2Frustc_lint%2Fsrc%2Fdrop_forget_useless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/compiler%2Frustc_lint%2Fsrc%2Fdrop_forget_useless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fdrop_forget_useless.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -7,7 +7,7 @@ use crate::{\n };\n \n declare_lint! {\n-    /// The `drop_ref` lint checks for calls to `std::mem::drop` with a reference\n+    /// The `dropping_references` lint checks for calls to `std::mem::drop` with a reference\n     /// instead of an owned value.\n     ///\n     /// ### Example\n@@ -29,7 +29,7 @@ declare_lint! {\n     /// reference itself, which is a no-op. It will not call the `drop` method (from\n     /// the `Drop` trait implementation) on the underlying referenced value, which\n     /// is likely what was intended.\n-    pub DROP_REF,\n+    pub DROPPING_REFERENCES,\n     Warn,\n     \"calls to `std::mem::drop` with a reference instead of an owned value\"\n }\n@@ -109,7 +109,7 @@ declare_lint! {\n     \"calls to `std::mem::forget` with a value that implements Copy\"\n }\n \n-declare_lint_pass!(DropForgetUseless => [DROP_REF, FORGET_REF, DROPPING_COPY_TYPES, FORGETTING_COPY_TYPES]);\n+declare_lint_pass!(DropForgetUseless => [DROPPING_REFERENCES, FORGET_REF, DROPPING_COPY_TYPES, FORGETTING_COPY_TYPES]);\n \n impl<'tcx> LateLintPass<'tcx> for DropForgetUseless {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n@@ -123,7 +123,7 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetUseless {\n             let drop_is_single_call_in_arm = is_single_call_in_arm(cx, arg, expr);\n             match fn_name {\n                 sym::mem_drop if arg_ty.is_ref() && !drop_is_single_call_in_arm => {\n-                    cx.emit_spanned_lint(DROP_REF, expr.span, DropRefDiag { arg_ty, label: arg.span });\n+                    cx.emit_spanned_lint(DROPPING_REFERENCES, expr.span, DropRefDiag { arg_ty, label: arg.span });\n                 },\n                 sym::mem_forget if arg_ty.is_ref() => {\n                     cx.emit_spanned_lint(FORGET_REF, expr.span, ForgetRefDiag { arg_ty, label: arg.span });"}, {"sha": "aebfa6f3078cf71ada8d5d4a801c9e6202a707fc", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -662,9 +662,9 @@ pub struct ForLoopsOverFalliblesSuggestion<'a> {\n     pub end_span: Span,\n }\n \n-// drop_ref.rs\n+// drop_forget_useless.rs\n #[derive(LintDiagnostic)]\n-#[diag(lint_drop_ref)]\n+#[diag(lint_dropping_references)]\n #[note]\n pub struct DropRefDiag<'a> {\n     pub arg_ty: Ty<'a>,"}, {"sha": "00211d65094eea6788048cd0db84d1162edc29ab", "filename": "src/tools/clippy/clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -98,7 +98,7 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetRef {\n             let is_copy = is_copy(cx, arg_ty);\n             let drop_is_single_call_in_arm = is_single_call_in_arm(cx, arg, expr);\n             let (lint, msg) = match fn_name {\n-                // early return for uplifted lints: drop_ref, dropping_copy_types, forget_ref, forgetting_copy_types\n+                // early return for uplifted lints: dropping_references, dropping_copy_types, forget_ref, forgetting_copy_types\n                 sym::mem_drop if arg_ty.is_ref() && !drop_is_single_call_in_arm => return,\n                 sym::mem_forget if arg_ty.is_ref() => return,\n                 sym::mem_drop if is_copy && !drop_is_single_call_in_arm => return,"}, {"sha": "4d1a462d110cacc41c785e6c9f6471da2478dbae", "filename": "src/tools/clippy/clippy_lints/src/renamed_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -34,7 +34,7 @@ pub static RENAMED_LINTS: &[(&str, &str)] = &[\n     (\"clippy::clone_double_ref\", \"suspicious_double_ref_op\"),\n     (\"clippy::drop_bounds\", \"drop_bounds\"),\n     (\"clippy::drop_copy\", \"dropping_copy_types\"),\n-    (\"clippy::drop_ref\", \"drop_ref\"),\n+    (\"clippy::drop_ref\", \"dropping_references\"),\n     (\"clippy::for_loop_over_option\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loop_over_result\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loops_over_fallibles\", \"for_loops_over_fallibles\"),"}, {"sha": "a4fb4fbffdfc8c1f2384be8f59b9abb30c7edbd5", "filename": "src/tools/clippy/tests/ui/rename.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -31,7 +31,7 @@\n #![allow(suspicious_double_ref_op)]\n #![allow(drop_bounds)]\n #![allow(dropping_copy_types)]\n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n #![allow(for_loops_over_fallibles)]\n #![allow(forgetting_copy_types)]\n #![allow(forget_ref)]\n@@ -78,7 +78,7 @@\n #![warn(suspicious_double_ref_op)]\n #![warn(drop_bounds)]\n #![warn(dropping_copy_types)]\n-#![warn(drop_ref)]\n+#![warn(dropping_references)]\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]"}, {"sha": "bb833c9534688322793fb531d647fd7fa1f9a189", "filename": "src/tools/clippy/tests/ui/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -31,7 +31,7 @@\n #![allow(suspicious_double_ref_op)]\n #![allow(drop_bounds)]\n #![allow(dropping_copy_types)]\n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n #![allow(for_loops_over_fallibles)]\n #![allow(forgetting_copy_types)]\n #![allow(forget_ref)]"}, {"sha": "8bbd046bbf31ba96ec2f3fa14aea8352e7bf529c", "filename": "src/tools/clippy/tests/ui/rename.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -192,11 +192,11 @@ error: lint `clippy::drop_copy` has been renamed to `dropping_copy_types`\n LL | #![warn(clippy::drop_copy)]\n    |         ^^^^^^^^^^^^^^^^^ help: use the new name: `dropping_copy_types`\n \n-error: lint `clippy::drop_ref` has been renamed to `drop_ref`\n+error: lint `clippy::drop_ref` has been renamed to `dropping_references`\n   --> $DIR/rename.rs:81:9\n    |\n LL | #![warn(clippy::drop_ref)]\n-   |         ^^^^^^^^^^^^^^^^ help: use the new name: `drop_ref`\n+   |         ^^^^^^^^^^^^^^^^ help: use the new name: `dropping_references`\n \n error: lint `clippy::for_loop_over_option` has been renamed to `for_loops_over_fallibles`\n   --> $DIR/rename.rs:82:9"}, {"sha": "a5a1930ed65bb5304172dd6d162f57ed2ab1431e", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,4 +1,4 @@\n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n fn main() {\n     let target = &mut 42;"}, {"sha": "60128c9419d11e52e55b0f9b48fbe8bb8d209fcc", "filename": "tests/ui/borrowck/borrowck-closures-slice-patterns-ok.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fborrowck%2Fborrowck-closures-slice-patterns-ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fborrowck%2Fborrowck-closures-slice-patterns-ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-closures-slice-patterns-ok.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,7 +1,7 @@\n // Check that closure captures for slice patterns are inferred correctly\n \n #![allow(unused_variables)]\n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n // run-pass\n "}, {"sha": "98f8d5d473380adbbc72c40f72cf36447d804cfe", "filename": "tests/ui/closures/2229_closure_analysis/migrations/issue-78720.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fissue-78720.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fissue-78720.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fissue-78720.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![warn(rust_2021_incompatible_closure_captures)]\n-#![allow(drop_ref, dropping_copy_types)]\n+#![allow(dropping_references, dropping_copy_types)]\n \n fn main() {\n     if let a = \"\" {"}, {"sha": "5496d0e5fc7e3f1236b381d00ec58fbd54e686e9", "filename": "tests/ui/closures/2229_closure_analysis/optimization/edge_case_run_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case_run_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case_run_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case_run_pass.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -3,7 +3,7 @@\n \n #![allow(unused)]\n #![allow(dead_code)]\n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n struct Int(i32);\n struct B<'a>(&'a i32);"}, {"sha": "b5e97ec1c1b8dc191cbb27612dcf59d2aaab4ff2", "filename": "tests/ui/closures/2229_closure_analysis/run_pass/drop_then_use_fake_reads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Fdrop_then_use_fake_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Fdrop_then_use_fake_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Fdrop_then_use_fake_reads.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -2,7 +2,7 @@\n // check-pass\n \n #![feature(rustc_attrs)]\n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n fn main() {\n     let mut x = 1;"}, {"sha": "0afb4bb11bc89ec4c40fd3f6222fcd1401737afe", "filename": "tests/ui/drop/repeat-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fdrop%2Frepeat-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fdrop%2Frepeat-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop%2Frepeat-drop.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n // needs-unwind\n \n-#![allow(drop_ref, dropping_copy_types)]\n+#![allow(dropping_references, dropping_copy_types)]\n \n static mut CHECK: usize = 0;\n "}, {"sha": "bb093a4af4a3eec242a5f37de416199c0417b988", "filename": "tests/ui/explicit/explicit-call-to-supertrait-dtor.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.fixed?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n struct Foo {\n     x: isize"}, {"sha": "1a9f89c054f396bfecde674c5447a1796846db5a", "filename": "tests/ui/explicit/explicit-call-to-supertrait-dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n struct Foo {\n     x: isize"}, {"sha": "381897c77a5c35822809cae1f1e011728ef3a88c", "filename": "tests/ui/generator/issue-57017.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fgenerator%2Fissue-57017.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fgenerator%2Fissue-57017.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fissue-57017.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -5,7 +5,7 @@\n // [drop_tracking_mir] build-pass\n \n #![feature(generators, negative_impls)]\n-#![allow(drop_ref, dropping_copy_types)]\n+#![allow(dropping_references, dropping_copy_types)]\n \n macro_rules! type_combinations {\n     ("}, {"sha": "c088c82791b4dd35fd4d5f94054c3ce953a36e09", "filename": "tests/ui/illegal-ufcs-drop.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fillegal-ufcs-drop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fillegal-ufcs-drop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fillegal-ufcs-drop.fixed?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n struct Foo;\n "}, {"sha": "1389b112188657578e699c1a9fe5a995002787f0", "filename": "tests/ui/illegal-ufcs-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fillegal-ufcs-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fillegal-ufcs-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fillegal-ufcs-drop.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n struct Foo;\n "}, {"sha": "b6291aa5ed6346680c8574d974039c78e8a05095", "filename": "tests/ui/lint/dropping_copy_types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Flint%2Fdropping_copy_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Flint%2Fdropping_copy_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdropping_copy_types.stderr?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -32,7 +32,7 @@ LL |     drop(s3);\n    |          argument has type `&SomeStruct`\n    |\n    = note: use `let _ = ...` to ignore the expression or result\n-   = note: `#[warn(drop_ref)]` on by default\n+   = note: `#[warn(dropping_references)]` on by default\n \n warning: calls to `std::mem::drop` with a value that implements `Copy` does nothing\n   --> $DIR/dropping_copy_types.rs:37:5"}, {"sha": "0d5d484f4517fae6b02abf9b1e42329a5339eedb", "filename": "tests/ui/lint/dropping_references.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Flint%2Fdropping_references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Flint%2Fdropping_references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdropping_references.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![warn(drop_ref)]\n+#![warn(dropping_references)]\n \n struct SomeStruct;\n ", "previous_filename": "tests/ui/lint/drop_ref.rs"}, {"sha": "7e25a46216ecf013c8696765f1e232fa944a2728", "filename": "tests/ui/lint/dropping_references.stderr", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Flint%2Fdropping_references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Flint%2Fdropping_references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdropping_references.stderr?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,5 +1,5 @@\n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:8:5\n+  --> $DIR/dropping_references.rs:8:5\n    |\n LL |     drop(&SomeStruct);\n    |     ^^^^^-----------^\n@@ -8,13 +8,13 @@ LL |     drop(&SomeStruct);\n    |\n    = note: use `let _ = ...` to ignore the expression or result\n note: the lint level is defined here\n-  --> $DIR/drop_ref.rs:3:9\n+  --> $DIR/dropping_references.rs:3:9\n    |\n-LL | #![warn(drop_ref)]\n-   |         ^^^^^^^^\n+LL | #![warn(dropping_references)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:11:5\n+  --> $DIR/dropping_references.rs:11:5\n    |\n LL |     drop(&owned1);\n    |     ^^^^^-------^\n@@ -24,7 +24,7 @@ LL |     drop(&owned1);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:12:5\n+  --> $DIR/dropping_references.rs:12:5\n    |\n LL |     drop(&&owned1);\n    |     ^^^^^--------^\n@@ -34,7 +34,7 @@ LL |     drop(&&owned1);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:13:5\n+  --> $DIR/dropping_references.rs:13:5\n    |\n LL |     drop(&mut owned1);\n    |     ^^^^^-----------^\n@@ -44,7 +44,7 @@ LL |     drop(&mut owned1);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:17:5\n+  --> $DIR/dropping_references.rs:17:5\n    |\n LL |     drop(reference1);\n    |     ^^^^^----------^\n@@ -54,7 +54,7 @@ LL |     drop(reference1);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:20:5\n+  --> $DIR/dropping_references.rs:20:5\n    |\n LL |     drop(reference2);\n    |     ^^^^^----------^\n@@ -64,7 +64,7 @@ LL |     drop(reference2);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:23:5\n+  --> $DIR/dropping_references.rs:23:5\n    |\n LL |     drop(reference3);\n    |     ^^^^^----------^\n@@ -74,7 +74,7 @@ LL |     drop(reference3);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:28:5\n+  --> $DIR/dropping_references.rs:28:5\n    |\n LL |     drop(&val);\n    |     ^^^^^----^\n@@ -84,7 +84,7 @@ LL |     drop(&val);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:36:5\n+  --> $DIR/dropping_references.rs:36:5\n    |\n LL |     std::mem::drop(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^-----------^\n@@ -94,7 +94,7 @@ LL |     std::mem::drop(&SomeStruct);\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:91:13\n+  --> $DIR/dropping_references.rs:91:13\n    |\n LL |             drop(println_and(&13));\n    |             ^^^^^----------------^\n@@ -104,7 +104,7 @@ LL |             drop(println_and(&13));\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:94:14\n+  --> $DIR/dropping_references.rs:94:14\n    |\n LL |         3 if drop(println_and(&14)) == () => (),\n    |              ^^^^^----------------^\n@@ -114,7 +114,7 @@ LL |         3 if drop(println_and(&14)) == () => (),\n    = note: use `let _ = ...` to ignore the expression or result\n \n warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing\n-  --> $DIR/drop_ref.rs:96:14\n+  --> $DIR/dropping_references.rs:96:14\n    |\n LL |         4 => drop(&2),\n    |              ^^^^^--^", "previous_filename": "tests/ui/lint/drop_ref.stderr"}, {"sha": "722d6747102fc7ceb4db33a10e0115b0788f3535", "filename": "tests/ui/nll/ty-outlives/projection-body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -3,7 +3,7 @@\n //\n // check-pass\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n trait MyTrait<'a> {\n     type Output;"}, {"sha": "df6aab0e6a88501b23b41a073534bca54b8d2775", "filename": "tests/ui/or-patterns/or-patterns-default-binding-modes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2For-patterns%2For-patterns-default-binding-modes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2For-patterns%2For-patterns-default-binding-modes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For-patterns%2For-patterns-default-binding-modes.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -4,7 +4,7 @@\n \n #![allow(irrefutable_let_patterns)]\n #![allow(dropping_copy_types)]\n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n fn main() {\n     // A regression test for a mistake we made at one point:"}, {"sha": "43b53b7cf1f17d2e451d6962df31fac319e6d2c6", "filename": "tests/ui/pattern/bindings-after-at/borrowck-pat-at-and-box-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box-pass.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -2,7 +2,7 @@\n \n // Test `@` patterns combined with `box` patterns.\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n #![allow(dropping_copy_types)]\n \n #![feature(box_patterns)]"}, {"sha": "204cd3e665762fc40751ac951478b0666be4c4b7", "filename": "tests/ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern-pass.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n fn main() {}\n "}, {"sha": "4de1f653db03abdd9ffb6b6ef716254e253b390d", "filename": "tests/ui/pattern/move-ref-patterns/move-ref-patterns-closure-captures-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-closure-captures-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-closure-captures-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-closure-captures-pass.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n fn main() {\n     struct U;"}, {"sha": "b9ff24c7624dc017ba67d28e96eb03b18ca09530", "filename": "tests/ui/rfc-2008-non-exhaustive/borrowck-exhaustive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-exhaustive.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -3,7 +3,7 @@\n \n // check-pass\n \n-#![allow(drop_ref)]\n+#![allow(dropping_references)]\n \n // aux-build:monovariants.rs\n extern crate monovariants;"}, {"sha": "e311a4af2f4ea165e99ed8df53ef851caf9424b4", "filename": "tests/ui/traits/new-solver/auto-with-drop_tracking_mir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Ftraits%2Fnew-solver%2Fauto-with-drop_tracking_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Ftraits%2Fnew-solver%2Fauto-with-drop_tracking_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fauto-with-drop_tracking_mir.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -14,7 +14,7 @@ async fn foo() {\n     #[cfg(fail)]\n     let x = &NotSync;\n     bar().await;\n-    #[allow(drop_ref)]\n+    #[allow(dropping_references)]\n     drop(x);\n }\n "}, {"sha": "f98c3164d7eb59776e3f6a6af51361e210154a39", "filename": "tests/ui/trivial-bounds/trivial-bounds-inconsistent-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93d9c1794eb8d57fd2f108547192c3aeb92b505/tests%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-copy.rs?ref=c93d9c1794eb8d57fd2f108547192c3aeb92b505", "patch": "@@ -2,7 +2,7 @@\n // Check tautalogically false `Copy` bounds\n \n #![feature(trivial_bounds)]\n-#![allow(drop_ref, dropping_copy_types)]\n+#![allow(dropping_references, dropping_copy_types)]\n \n fn copy_string(t: String) -> String where String: Copy { //~ WARNING trivial_bounds\n     is_copy(&t);"}]}