{"sha": "d5b6a20557743911ff9f90af5d8ad24c699570d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YjZhMjA1NTc3NDM5MTFmZjlmOTBhZjVkOGFkMjRjNjk5NTcwZDM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2020-03-12T20:03:48Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2020-03-18T14:06:13Z"}, "message": "std: Don't abort process when printing panics in tests\n\nThis commit fixes an issue when using `set_print` and friends, notably\nused by libtest, to avoid aborting the process if printing panics. This\npreviously panicked due to borrowing a mutable `RefCell` twice, and this\nis worked around by borrowing these cells for less time, instead\ntaking out and removing contents temporarily.\n\nCloses #69558", "tree": {"sha": "a157c7372ba995c00b667f297d5917714c5fa9ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a157c7372ba995c00b667f297d5917714c5fa9ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5b6a20557743911ff9f90af5d8ad24c699570d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b6a20557743911ff9f90af5d8ad24c699570d3", "html_url": "https://github.com/rust-lang/rust/commit/d5b6a20557743911ff9f90af5d8ad24c699570d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5b6a20557743911ff9f90af5d8ad24c699570d3/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23de8275c9b5e5812dc54a12bdba6d80870d9dc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/23de8275c9b5e5812dc54a12bdba6d80870d9dc8", "html_url": "https://github.com/rust-lang/rust/commit/23de8275c9b5e5812dc54a12bdba6d80870d9dc8"}], "stats": {"total": 60, "additions": 56, "deletions": 4}, "files": [{"sha": "0fb0757792ed7c3ade51ac38223d597db3aed1ee", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d5b6a20557743911ff9f90af5d8ad24c699570d3/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b6a20557743911ff9f90af5d8ad24c699570d3/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=d5b6a20557743911ff9f90af5d8ad24c699570d3", "patch": "@@ -792,10 +792,14 @@ fn print_to<T>(\n {\n     let result = local_s\n         .try_with(|s| {\n-            if let Ok(mut borrowed) = s.try_borrow_mut() {\n-                if let Some(w) = borrowed.as_mut() {\n-                    return w.write_fmt(args);\n-                }\n+            // Note that we completely remove a local sink to write to in case\n+            // our printing recursively panics/prints, so the recursive\n+            // panic/print goes to the global sink instead of our local sink.\n+            let prev = s.borrow_mut().take();\n+            if let Some(mut w) = prev {\n+                let result = w.write_fmt(args);\n+                *s.borrow_mut() = Some(w);\n+                return result;\n             }\n             global_s().write_fmt(args)\n         })"}, {"sha": "7e9fa16b0847a0156b9664e466f2f29f71781c5a", "filename": "src/test/ui/panic-while-printing.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d5b6a20557743911ff9f90af5d8ad24c699570d3/src%2Ftest%2Fui%2Fpanic-while-printing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b6a20557743911ff9f90af5d8ad24c699570d3/src%2Ftest%2Fui%2Fpanic-while-printing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-while-printing.rs?ref=d5b6a20557743911ff9f90af5d8ad24c699570d3", "patch": "@@ -0,0 +1,24 @@\n+// run-pass\n+// ignore-emscripten no subprocess support\n+\n+#![feature(set_stdio)]\n+\n+use std::fmt;\n+use std::fmt::{Display, Formatter};\n+use std::io::set_panic;\n+\n+pub struct A;\n+\n+impl Display for A {\n+    fn fmt(&self, _f: &mut Formatter<'_>) -> fmt::Result {\n+        panic!();\n+    }\n+}\n+\n+fn main() {\n+    set_panic(Some(Box::new(Vec::new())));\n+    assert!(std::panic::catch_unwind(|| {\n+        eprintln!(\"{}\", A);\n+    })\n+    .is_err());\n+}"}, {"sha": "23f45407c1af3d91c79d164c932787a24e7167dd", "filename": "src/test/ui/test-panic-while-printing.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d5b6a20557743911ff9f90af5d8ad24c699570d3/src%2Ftest%2Fui%2Ftest-panic-while-printing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b6a20557743911ff9f90af5d8ad24c699570d3/src%2Ftest%2Fui%2Ftest-panic-while-printing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-while-printing.rs?ref=d5b6a20557743911ff9f90af5d8ad24c699570d3", "patch": "@@ -0,0 +1,24 @@\n+// compile-flags:--test\n+// run-pass\n+// ignore-emscripten no subprocess support\n+\n+use std::fmt;\n+use std::fmt::{Display, Formatter};\n+\n+pub struct A(Vec<u32>);\n+\n+impl Display for A {\n+    fn fmt(&self, _f: &mut Formatter<'_>) -> fmt::Result {\n+        self.0[0];\n+        Ok(())\n+    }\n+}\n+\n+#[test]\n+fn main() {\n+    let result = std::panic::catch_unwind(|| {\n+        let a = A(vec![]);\n+        eprintln!(\"{}\", a);\n+    });\n+    assert!(result.is_err());\n+}"}]}