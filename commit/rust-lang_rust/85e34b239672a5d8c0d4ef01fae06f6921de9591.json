{"sha": "85e34b239672a5d8c0d4ef01fae06f6921de9591", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZTM0YjIzOTY3MmE1ZDhjMGQ0ZWYwMWZhZTA2ZjY5MjFkZTk1OTE=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-05-11T16:23:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-13T02:52:29Z"}, "message": "Improved example code in Option", "tree": {"sha": "1a2e7fac7161c9e3746d782fa05a55fca0f3af91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a2e7fac7161c9e3746d782fa05a55fca0f3af91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85e34b239672a5d8c0d4ef01fae06f6921de9591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85e34b239672a5d8c0d4ef01fae06f6921de9591", "html_url": "https://github.com/rust-lang/rust/commit/85e34b239672a5d8c0d4ef01fae06f6921de9591", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85e34b239672a5d8c0d4ef01fae06f6921de9591/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "437338ab658d075b50538541541e3049a79f5911", "url": "https://api.github.com/repos/rust-lang/rust/commits/437338ab658d075b50538541541e3049a79f5911", "html_url": "https://github.com/rust-lang/rust/commit/437338ab658d075b50538541541e3049a79f5911"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "886b7315152b8e1eb54bbe94f32051ebf9adbf80", "filename": "src/libcore/option.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/85e34b239672a5d8c0d4ef01fae06f6921de9591/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e34b239672a5d8c0d4ef01fae06f6921de9591/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=85e34b239672a5d8c0d4ef01fae06f6921de9591", "patch": "@@ -30,20 +30,23 @@\n //! of a value and take action, always accounting for the `None` case.\n //!\n //! ```\n-//! # // FIXME This is not the greatest first example\n-//! // cow_says contains the word \"moo\"\n-//! let cow_says = Some(\"moo\");\n-//! // dog_says does not contain a value\n-//! let dog_says: Option<&str> = None;\n+//! fn divide(numerator: f64, denominator: f64) -> Option<f64> {\n+//!     if denominator == 0.0 {\n+//!         None\n+//!     } else {\n+//!         Some(numerator / denominator)\n+//!     }\n+//! }\n+//!\n+//! // The return value of the function is an option\n+//! let result = divide(2.0, 3.0);\n //!\n //! // Pattern match to retrieve the value\n-//! match (cow_says, dog_says) {\n-//!     (Some(cow_words), Some(dog_words)) => {\n-//!         println!(\"Cow says {} and dog says {}!\", cow_words, dog_words);\n-//!     }\n-//!     (Some(cow_words), None) => println!(\"Cow says {}\", cow_words),\n-//!     (None, Some(dog_words)) => println!(\"Dog says {}\", dog_words),\n-//!     (None, None) => println!(\"Cow and dog are suspiciously silent\")\n+//! match result {\n+//!     // The division was valid\n+//!     Some(x) => println!(\"Result: {}\", x),\n+//!     // The division was invalid\n+//!     None    => println!(\"Cannot divide by 0\")\n //! }\n //! ```\n //!"}, {"sha": "ad834f2b4d44bcac4723c0be951e147d316b6904", "filename": "src/libstd/option.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/85e34b239672a5d8c0d4ef01fae06f6921de9591/src%2Flibstd%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e34b239672a5d8c0d4ef01fae06f6921de9591/src%2Flibstd%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foption.rs?ref=85e34b239672a5d8c0d4ef01fae06f6921de9591", "patch": "@@ -30,20 +30,23 @@\n //! of a value and take action, always accounting for the `None` case.\n //!\n //! ```\n-//! # // FIXME This is not the greatest first example\n-//! // cow_says contains the word \"moo\"\n-//! let cow_says = Some(\"moo\");\n-//! // dog_says does not contain a value\n-//! let dog_says: Option<&str> = None;\n+//! fn divide(numerator: f64, denominator: f64) -> Option<f64> {\n+//!     if denominator == 0.0 {\n+//!         None\n+//!     } else {\n+//!         Some(numerator / denominator)\n+//!     }\n+//! }\n+//!\n+//! // The return value of the function is an option\n+//! let result = divide(2.0, 3.0);\n //!\n //! // Pattern match to retrieve the value\n-//! match (cow_says, dog_says) {\n-//!     (Some(cow_words), Some(dog_words)) => {\n-//!         println!(\"Cow says {} and dog says {}!\", cow_words, dog_words);\n-//!     }\n-//!     (Some(cow_words), None) => println!(\"Cow says {}\", cow_words),\n-//!     (None, Some(dog_words)) => println!(\"Dog says {}\", dog_words),\n-//!     (None, None) => println!(\"Cow and dog are suspiciously silent\")\n+//! match result {\n+//!     // The division was valid\n+//!     Some(x) => println!(\"Result: {}\", x),\n+//!     // The division was invalid\n+//!     None    => println!(\"Cannot divide by 0\")\n //! }\n //! ```\n //!"}]}