{"sha": "5342800147679a0ded5546322c94aa6339d58fbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNDI4MDAxNDc2NzlhMGRlZDU1NDYzMjJjOTRhYTYzMzlkNThmYmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-09T15:20:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-09T15:20:37Z"}, "message": "internal: rewrite **Repalce impl Trait** assist to mutable syntax trees", "tree": {"sha": "7a70c7145b5e3a738bf289b7f54941fc645b4fe1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a70c7145b5e3a738bf289b7f54941fc645b4fe1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5342800147679a0ded5546322c94aa6339d58fbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5342800147679a0ded5546322c94aa6339d58fbc", "html_url": "https://github.com/rust-lang/rust/commit/5342800147679a0ded5546322c94aa6339d58fbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5342800147679a0ded5546322c94aa6339d58fbc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984d20aad8445ecbdc05d1dc3ea2de104c685af0", "url": "https://api.github.com/repos/rust-lang/rust/commits/984d20aad8445ecbdc05d1dc3ea2de104c685af0", "html_url": "https://github.com/rust-lang/rust/commit/984d20aad8445ecbdc05d1dc3ea2de104c685af0"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "16cae028143d6c825b64c0fb87dc479098ba8a77", "filename": "crates/ide_assists/src/handlers/replace_impl_trait_with_generic.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5342800147679a0ded5546322c94aa6339d58fbc/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_impl_trait_with_generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5342800147679a0ded5546322c94aa6339d58fbc/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_impl_trait_with_generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_impl_trait_with_generic.rs?ref=5342800147679a0ded5546322c94aa6339d58fbc", "patch": "@@ -1,4 +1,7 @@\n-use syntax::ast::{self, edit::AstNodeEdit, make, AstNode, GenericParamsOwner};\n+use syntax::{\n+    ast::{self, edit_in_place::GenericParamsOwnerEdit, make, AstNode},\n+    ted,\n+};\n \n use crate::{utils::suggest_name, AssistContext, AssistId, AssistKind, Assists};\n \n@@ -29,18 +32,17 @@ pub(crate) fn replace_impl_trait_with_generic(\n         \"Replace impl trait with generic\",\n         target,\n         |edit| {\n-            let type_param_name = suggest_name::for_generic_parameter(&impl_trait_type);\n+            let impl_trait_type = edit.make_ast_mut(impl_trait_type);\n+            let fn_ = edit.make_ast_mut(fn_);\n \n-            let generic_param_list = fn_\n-                .generic_param_list()\n-                .unwrap_or_else(|| make::generic_param_list(None))\n-                .append_param(make::generic_param(&type_param_name, Some(type_bound_list)));\n+            let type_param_name = suggest_name::for_generic_parameter(&impl_trait_type);\n \n-            let new_type_fn = fn_\n-                .replace_descendant::<ast::Type>(impl_trait_type.into(), make::ty(&type_param_name))\n-                .with_generic_param_list(generic_param_list);\n+            let type_param =\n+                make::generic_param(&type_param_name, Some(type_bound_list)).clone_for_update();\n+            let new_ty = make::ty(&type_param_name).clone_for_update();\n \n-            edit.replace_ast(fn_.clone(), new_type_fn);\n+            ted::replace(impl_trait_type.syntax(), new_ty.syntax());\n+            fn_.get_or_create_generic_param_list().add_generic_param(type_param)\n         },\n     )\n }\n@@ -127,7 +129,7 @@ fn foo<\n fn foo<\n     G: Foo,\n     F,\n-    H, B: Bar\n+    H, B: Bar,\n >(bar: B) {}\n \"#,\n         );"}, {"sha": "168355555778bdc5e906bcf229cf3b492eae5539", "filename": "crates/syntax/src/ast/edit_in_place.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5342800147679a0ded5546322c94aa6339d58fbc/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5342800147679a0ded5546322c94aa6339d58fbc/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs?ref=5342800147679a0ded5546322c94aa6339d58fbc", "patch": "@@ -195,18 +195,13 @@ impl ast::GenericParamList {\n     pub fn add_generic_param(&self, generic_param: ast::GenericParam) {\n         match self.generic_params().last() {\n             Some(last_param) => {\n-                let mut elems = Vec::new();\n-                if !last_param\n-                    .syntax()\n-                    .siblings_with_tokens(Direction::Next)\n-                    .any(|it| it.kind() == T![,])\n-                {\n-                    elems.push(make::token(T![,]).into());\n-                    elems.push(make::tokens::single_space().into());\n-                };\n-                elems.push(generic_param.syntax().clone().into());\n-                let after_last_param = Position::after(last_param.syntax());\n-                ted::insert_all(after_last_param, elems);\n+                let position = Position::after(last_param.syntax());\n+                let elements = vec![\n+                    make::token(T![,]).into(),\n+                    make::tokens::single_space().into(),\n+                    generic_param.syntax().clone().into(),\n+                ];\n+                ted::insert_all(position, elements);\n             }\n             None => {\n                 let after_l_angle = Position::after(self.l_angle_token().unwrap());"}]}