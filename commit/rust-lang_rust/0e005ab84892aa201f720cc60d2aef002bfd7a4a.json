{"sha": "0e005ab84892aa201f720cc60d2aef002bfd7a4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMDA1YWI4NDg5MmFhMjAxZjcyMGNjNjBkMmFlZjAwMmJmZDdhNGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-09T19:08:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-11T21:55:22Z"}, "message": "to_str -- update to contain scope of closure", "tree": {"sha": "fca324389341ead6f3cba2035f40c68caa0383c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fca324389341ead6f3cba2035f40c68caa0383c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e005ab84892aa201f720cc60d2aef002bfd7a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e005ab84892aa201f720cc60d2aef002bfd7a4a", "html_url": "https://github.com/rust-lang/rust/commit/0e005ab84892aa201f720cc60d2aef002bfd7a4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e005ab84892aa201f720cc60d2aef002bfd7a4a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f5baad6ee5191991d18271aabebaf3fc6124424", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5baad6ee5191991d18271aabebaf3fc6124424", "html_url": "https://github.com/rust-lang/rust/commit/0f5baad6ee5191991d18271aabebaf3fc6124424"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "e5145fb15f7a1393568c228c38ac5cec833f5c16", "filename": "src/libsyntax/ext/deriving/to_str.rs", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/0e005ab84892aa201f720cc60d2aef002bfd7a4a/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e005ab84892aa201f720cc60d2aef002bfd7a4a/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs?ref=0e005ab84892aa201f720cc60d2aef002bfd7a4a", "patch": "@@ -67,31 +67,32 @@ fn to_str_substructure(cx: &mut ExtCtxt, span: Span, substr: &Substructure)\n             let mut stmts = ~[cx.stmt_let(span, true, buf, init)];\n             let push_str = cx.ident_of(\"push_str\");\n \n-            let push = |s: @Expr| {\n-                let ebuf = cx.expr_ident(span, buf);\n-                let call = cx.expr_method_call(span, ebuf, push_str, ~[s]);\n-                stmts.push(cx.stmt_expr(call));\n-            };\n+            {\n+                let push = |s: @Expr| {\n+                    let ebuf = cx.expr_ident(span, buf);\n+                    let call = cx.expr_method_call(span, ebuf, push_str, ~[s]);\n+                    stmts.push(cx.stmt_expr(call));\n+                };\n \n-            for (i, &FieldInfo {name, span, self_, .. }) in fields.iter().enumerate() {\n-                if i > 0 {\n-                    push(cx.expr_str(span, InternedString::new(\", \")));\n-                }\n-                match name {\n-                    None => {}\n-                    Some(id) => {\n-                        let interned_id = token::get_ident(id.name);\n-                        let name = interned_id.get() + \": \";\n-                        push(cx.expr_str(span,\n-                                         token::intern_and_get_ident(name)));\n+                for (i, &FieldInfo {name, span, self_, .. }) in fields.iter().enumerate() {\n+                    if i > 0 {\n+                        push(cx.expr_str(span, InternedString::new(\", \")));\n+                    }\n+                    match name {\n+                        None => {}\n+                        Some(id) => {\n+                            let interned_id = token::get_ident(id.name);\n+                            let name = interned_id.get() + \": \";\n+                            push(cx.expr_str(span,\n+                                             token::intern_and_get_ident(name)));\n+                        }\n                     }\n+                    push(cx.expr_method_call(span, self_, to_str, ~[]));\n                 }\n-                push(cx.expr_method_call(span, self_, to_str, ~[]));\n+                push(cx.expr_str(span, end));\n             }\n-            push(cx.expr_str(span, end));\n \n-            cx.expr_block(cx.block(span, stmts, Some(cx.expr_ident(span,\n-                                                                   buf))))\n+            cx.expr_block(cx.block(span, stmts, Some(cx.expr_ident(span, buf))))\n         }\n     };\n "}]}