{"sha": "603f26d8f18890a438c4febda3d16d51579a8036", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwM2YyNmQ4ZjE4ODkwYTQzOGM0ZmViZGEzZDE2ZDUxNTc5YTgwMzY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-03-29T04:51:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-29T04:51:19Z"}, "message": "Merge pull request #1415 from topecongiro/remove-duplicates\n\nRemove duplicates", "tree": {"sha": "3595b3fe5c9c43d6495188ac3041637453ea694d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3595b3fe5c9c43d6495188ac3041637453ea694d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/603f26d8f18890a438c4febda3d16d51579a8036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/603f26d8f18890a438c4febda3d16d51579a8036", "html_url": "https://github.com/rust-lang/rust/commit/603f26d8f18890a438c4febda3d16d51579a8036", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/603f26d8f18890a438c4febda3d16d51579a8036/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d2e52a21465a0bf3c839a7b92a0a4cfa25e2166", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d2e52a21465a0bf3c839a7b92a0a4cfa25e2166", "html_url": "https://github.com/rust-lang/rust/commit/3d2e52a21465a0bf3c839a7b92a0a4cfa25e2166"}, {"sha": "78826e67839d3d58e420dbeff9c793a43675a0a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/78826e67839d3d58e420dbeff9c793a43675a0a7", "html_url": "https://github.com/rust-lang/rust/commit/78826e67839d3d58e420dbeff9c793a43675a0a7"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "91b17db5d23b92077c4dee1999e416706a8659c4", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/603f26d8f18890a438c4febda3d16d51579a8036/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/603f26d8f18890a438c4febda3d16d51579a8036/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=603f26d8f18890a438c4febda3d16d51579a8036", "patch": "@@ -23,7 +23,8 @@ use lists::{write_list, itemize_list, ListFormatting, SeparatorTactic, ListTacti\n             struct_lit_tactic, shape_for_tactic, struct_lit_formatting};\n use string::{StringFormat, rewrite_string};\n use utils::{extra_offset, last_line_width, wrap_str, binary_search, first_line_width,\n-            semicolon_for_stmt, trimmed_last_line_width, left_most_sub_expr, stmt_expr};\n+            semicolon_for_stmt, trimmed_last_line_width, left_most_sub_expr, stmt_expr,\n+            colon_spaces};\n use visitor::FmtVisitor;\n use config::{Config, IndentStyle, MultilineStyle, ControlBraceStyle};\n use comment::{FindUncommented, rewrite_comment, contains_comment, recover_comment_removed};\n@@ -1891,12 +1892,8 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n }\n \n pub fn type_annotation_separator(config: &Config) -> &str {\n-    match (config.space_before_type_annotation, config.space_after_type_annotation_colon) {\n-        (true, true) => \" : \",\n-        (true, false) => \" :\",\n-        (false, true) => \": \",\n-        (false, false) => \":\",\n-    }\n+    colon_spaces(config.space_before_type_annotation,\n+                 config.space_after_type_annotation_colon)\n }\n \n fn rewrite_field(context: &RewriteContext, field: &ast::Field, shape: Shape) -> Option<String> {"}, {"sha": "34ad6b26ea8a478d28a6b43a452fddca63ebf304", "filename": "src/lists.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/603f26d8f18890a438c4febda3d16d51579a8036/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/603f26d8f18890a438c4febda3d16d51579a8036/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=603f26d8f18890a438c4febda3d16d51579a8036", "patch": "@@ -207,7 +207,7 @@ pub fn write_list<I, T>(items: I, formatting: &ListFormatting) -> Option<String>\n         let item_sep_len = if separate { sep_len } else { 0 };\n \n         // Item string may be multi-line. Its length (used for block comment alignment)\n-        // Should be only the length of the last line.\n+        // should be only the length of the last line.\n         let item_last_line = if item.is_multiline() {\n             inner_item.lines().last().unwrap_or(\"\")\n         } else {"}, {"sha": "d766b9770de8d769e2969457668409b138af13cc", "filename": "src/types.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/603f26d8f18890a438c4febda3d16d51579a8036/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/603f26d8f18890a438c4febda3d16d51579a8036/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=603f26d8f18890a438c4febda3d16d51579a8036", "patch": "@@ -21,7 +21,7 @@ use {Shape, Spanned};\n use codemap::SpanUtils;\n use lists::{format_item_list, itemize_list, format_fn_args};\n use rewrite::{Rewrite, RewriteContext};\n-use utils::{extra_offset, format_mutability, wrap_str};\n+use utils::{extra_offset, format_mutability, colon_spaces, wrap_str};\n use expr::{rewrite_unary_prefix, rewrite_pair, rewrite_tuple};\n use config::TypeDensity;\n use itertools::Itertools;\n@@ -346,12 +346,8 @@ fn format_function_type<'a, I>(inputs: I,\n }\n \n fn type_bound_colon(context: &RewriteContext) -> &'static str {\n-    match (context.config.space_before_bound, context.config.space_after_bound_colon) {\n-        (true, true) => \" : \",\n-        (true, false) => \" :\",\n-        (false, true) => \": \",\n-        (false, false) => \":\",\n-    }\n+    colon_spaces(context.config.space_before_bound,\n+                 context.config.space_after_bound_colon)\n }\n \n impl Rewrite for ast::WherePredicate {"}, {"sha": "1b1ef99955eefb2374295645ee43d4074be7dc60", "filename": "src/utils.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/603f26d8f18890a438c4febda3d16d51579a8036/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/603f26d8f18890a438c4febda3d16d51579a8036/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=603f26d8f18890a438c4febda3d16d51579a8036", "patch": "@@ -326,6 +326,16 @@ pub fn binary_search<C, T>(mut lo: usize, mut hi: usize, callback: C) -> Option<\n     None\n }\n \n+#[inline]\n+pub fn colon_spaces(before: bool, after: bool) -> &'static str {\n+    match (before, after) {\n+        (true, true) => \" : \",\n+        (true, false) => \" :\",\n+        (false, true) => \": \",\n+        (false, false) => \":\",\n+    }\n+}\n+\n #[test]\n fn bin_search_test() {\n     let closure = |i| match i {"}]}