{"sha": "e5992e7ae9043217b507e465e9f0164db18fd517", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1OTkyZTdhZTkwNDMyMTdiNTA3ZTQ2NWU5ZjAxNjRkYjE4ZmQ1MTc=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-23T20:06:55Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-12-27T18:21:16Z"}, "message": "Fix `Sized` requirement for empty tuples in `program_clauses`", "tree": {"sha": "4232803e61fa98f81464628440198f0418b1b8b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4232803e61fa98f81464628440198f0418b1b8b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5992e7ae9043217b507e465e9f0164db18fd517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5992e7ae9043217b507e465e9f0164db18fd517", "html_url": "https://github.com/rust-lang/rust/commit/e5992e7ae9043217b507e465e9f0164db18fd517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5992e7ae9043217b507e465e9f0164db18fd517/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfcad8250946709e3e28311300057ada7bc98c33", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcad8250946709e3e28311300057ada7bc98c33", "html_url": "https://github.com/rust-lang/rust/commit/dfcad8250946709e3e28311300057ada7bc98c33"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "06da938ceaa4a4607d1ccb4fcaeca31c2bd6a7b9", "filename": "src/librustc_traits/chalk_context/program_clauses.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e5992e7ae9043217b507e465e9f0164db18fd517/src%2Flibrustc_traits%2Fchalk_context%2Fprogram_clauses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5992e7ae9043217b507e465e9f0164db18fd517/src%2Flibrustc_traits%2Fchalk_context%2Fprogram_clauses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk_context%2Fprogram_clauses.rs?ref=e5992e7ae9043217b507e465e9f0164db18fd517", "patch": "@@ -280,7 +280,10 @@ fn wf_clause_for_tuple<'tcx>(\n         Some(def_id) => def_id,\n         None => return ty::List::empty(),\n     };\n-    let sized_implemented = type_list[0..arity - 1].iter()\n+\n+    // If `arity == 0` (i.e. the unit type) or `arity == 1`, this list of\n+    // hypotheses is actually empty.\n+    let sized_implemented = type_list[0 .. std::cmp::max(arity, 1) - 1].iter()\n         .map(|ty| ty::TraitRef {\n             def_id: sized_trait,\n             substs: tcx.mk_substs_trait(*ty, ty::List::empty()),"}]}