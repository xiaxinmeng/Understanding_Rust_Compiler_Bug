{"sha": "ab223e06181434dd7b98fa27a8f902f2d15d7759", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMjIzZTA2MTgxNDM0ZGQ3Yjk4ZmEyN2E4ZjkwMmYyZDE1ZDc3NTk=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-01-25T22:33:10Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-01-25T22:33:10Z"}, "message": "Merge pull request #1627 from graydon/win32-quoting\n\nFix win32 command-line quoting on rust_run_program.", "tree": {"sha": "2cd0e1a73728d202ae73c1eeafe43388f4af7e0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cd0e1a73728d202ae73c1eeafe43388f4af7e0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab223e06181434dd7b98fa27a8f902f2d15d7759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab223e06181434dd7b98fa27a8f902f2d15d7759", "html_url": "https://github.com/rust-lang/rust/commit/ab223e06181434dd7b98fa27a8f902f2d15d7759", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab223e06181434dd7b98fa27a8f902f2d15d7759/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "746fa279889b3ce2ed671aa06d34f15c4f34e902", "url": "https://api.github.com/repos/rust-lang/rust/commits/746fa279889b3ce2ed671aa06d34f15c4f34e902", "html_url": "https://github.com/rust-lang/rust/commit/746fa279889b3ce2ed671aa06d34f15c4f34e902"}, {"sha": "7da3733c73e7a3ba4c18f3927bbbe185598ad233", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da3733c73e7a3ba4c18f3927bbbe185598ad233", "html_url": "https://github.com/rust-lang/rust/commit/7da3733c73e7a3ba4c18f3927bbbe185598ad233"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "df4714758dd94ad6fcd3c54d80863f4446b2f3a3", "filename": "src/rt/rust_run_program.cpp", "status": "modified", "additions": 62, "deletions": 4, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/ab223e06181434dd7b98fa27a8f902f2d15d7759/src%2Frt%2Frust_run_program.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ab223e06181434dd7b98fa27a8f902f2d15d7759/src%2Frt%2Frust_run_program.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_run_program.cpp?ref=ab223e06181434dd7b98fa27a8f902f2d15d7759", "patch": "@@ -5,6 +5,64 @@\n #include <process.h>\n #include <io.h>\n \n+bool backslash_run_ends_in_quote(char const *c) {\n+    while (*c == '\\\\') ++c;\n+    return *c == '\"';\n+}\n+\n+void append_first_char(char *&buf, char const *c) {\n+    switch (*c) {\n+\n+    case '\"':\n+        // Escape quotes.\n+        *buf++ = '\\\\';\n+        *buf++ = '\"';\n+        break;\n+\n+\n+    case '\\\\':\n+        if (backslash_run_ends_in_quote(c)) {\n+            // Double all backslashes that are in runs before quotes.\n+            *buf++ = '\\\\';\n+            *buf++ = '\\\\';\n+        } else {\n+            // Pass other backslashes through unescaped.\n+            *buf++ = '\\\\';\n+        }\n+        break;\n+\n+    default:\n+        *buf++ = *c;\n+    }\n+}\n+\n+bool contains_whitespace(char const *arg) {\n+    while (*arg) {\n+        switch (*arg++) {\n+        case ' ':\n+        case '\\t':\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void append_arg(char *& buf, char const *arg, bool last) {\n+    bool quote = contains_whitespace(arg);\n+    if (quote)\n+        *buf++ = '\"';\n+    while (*arg)\n+        append_first_char(buf, arg++);\n+    if (quote)\n+        *buf++ = '\"';\n+\n+    if (! last) {\n+        *buf++ = ' ';\n+    } else {\n+        *buf++ = '\\0';\n+    }\n+}\n+\n extern \"C\" CDECL int\n rust_run_program(const char* argv[], int in_fd, int out_fd, int err_fd) {\n     STARTUPINFO si;\n@@ -29,14 +87,14 @@ rust_run_program(const char* argv[], int in_fd, int out_fd, int err_fd) {\n     size_t cmd_len = 0;\n     for (const char** arg = argv; *arg; arg++) {\n         cmd_len += strlen(*arg);\n-        cmd_len++; // Space or \\0\n+        cmd_len += 3; // Two quotes plus trailing space or \\0\n     }\n+    cmd_len *= 2; // Potentially backslash-escape everything.\n+\n     char* cmd = (char*)malloc(cmd_len);\n     char* pos = cmd;\n     for (const char** arg = argv; *arg; arg++) {\n-        strcpy(pos, *arg);\n-        pos += strlen(*arg);\n-        if (*(arg+1)) *(pos++) = ' ';\n+        append_arg(pos, *arg, *(arg+1) == NULL);\n     }\n \n     PROCESS_INFORMATION pi;"}]}