{"sha": "e01d9415e26dfcdd31c182bec21049502f5477ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMWQ5NDE1ZTI2ZGZjZGQzMWMxODJiZWMyMTA0OTUwMmY1NDc3ZmY=", "commit": {"author": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-08T16:38:15Z"}, "committer": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-08T16:38:15Z"}, "message": "check for sould-ice either in compilefail or incremental cfail", "tree": {"sha": "419329fc4aa3b743aaf018d8a1eccd660008a28c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/419329fc4aa3b743aaf018d8a1eccd660008a28c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e01d9415e26dfcdd31c182bec21049502f5477ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e01d9415e26dfcdd31c182bec21049502f5477ff", "html_url": "https://github.com/rust-lang/rust/commit/e01d9415e26dfcdd31c182bec21049502f5477ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e01d9415e26dfcdd31c182bec21049502f5477ff/comments", "author": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5852a3f4e9f07d7cb2cc155fbb071ce97c377a6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5852a3f4e9f07d7cb2cc155fbb071ce97c377a6a", "html_url": "https://github.com/rust-lang/rust/commit/5852a3f4e9f07d7cb2cc155fbb071ce97c377a6a"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "1782074fc9234cd27719c28aea1e2fee3cf706ae", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e01d9415e26dfcdd31c182bec21049502f5477ff/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01d9415e26dfcdd31c182bec21049502f5477ff/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e01d9415e26dfcdd31c182bec21049502f5477ff", "patch": "@@ -298,6 +298,12 @@ impl<'test> TestCx<'test> {\n     /// Code executed for each revision in turn (or, if there are no\n     /// revisions, exactly once, with revision == None).\n     fn run_revision(&self) {\n+        if self.props.should_ice {\n+            if self.config.mode != CompileFail &&\n+                self.config.mode != Incremental {\n+                self.fatal(\"cannot use should-ice in a test that is not cfail\");\n+            }\n+        }\n         match self.config.mode {\n             CompileFail => self.run_cfail_test(),\n             RunFail => self.run_rfail_test(),\n@@ -2782,8 +2788,14 @@ impl<'test> TestCx<'test> {\n         }\n \n         if revision.starts_with(\"rpass\") {\n+            if revision_cx.props.should_ice {\n+                revision_cx.fatal(\"can only use should-ice in cfail tests\");\n+            }\n             revision_cx.run_rpass_test();\n         } else if revision.starts_with(\"rfail\") {\n+            if revision_cx.props.should_ice {\n+                revision_cx.fatal(\"can only use should-ice in cfail tests\");\n+            }\n             revision_cx.run_rfail_test();\n         } else if revision.starts_with(\"cfail\") {\n             revision_cx.run_cfail_test();"}]}