{"sha": "4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNGEyMzIwZWI5NjIwZGJjNjhhMjY0Y2U2NGVlMWYyMzNkZDk3N2Q=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-04T23:36:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T03:39:56Z"}, "message": "rt: Make rust_port_detach less contentious\n\nIt still utterly dominates some benchmarks with busy waiting, but at least it\ndoesn't create lock contention while doing so.", "tree": {"sha": "906d11b31ca849c4d4a6ef0ca176dd46118e84be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/906d11b31ca849c4d4a6ef0ca176dd46118e84be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "html_url": "https://github.com/rust-lang/rust/commit/4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a5603cb58bdc66ad6b6a030e4e98ebeb3c13721", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a5603cb58bdc66ad6b6a030e4e98ebeb3c13721", "html_url": "https://github.com/rust-lang/rust/commit/0a5603cb58bdc66ad6b6a030e4e98ebeb3c13721"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "c37944c376025693f2d76fed2058fa13daec941c", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "patch": "@@ -492,7 +492,7 @@ extern \"C\" CDECL void\n del_port(rust_port *port) {\n     rust_task *task = rust_task_thread::get_task();\n     LOG(task, comm, \"del_port(0x%\" PRIxPTR \")\", (uintptr_t) port);\n-    A(task->thread, port->ref_count == 1, \"Expected port ref_count == 1\");\n+    A(task->thread, port->get_ref_count() == 1, \"Expected port ref_count == 1\");\n     port->deref();\n }\n \n@@ -522,7 +522,6 @@ chan_id_send(type_desc *t, rust_task_id target_task_id,\n         rust_port *port = target_task->get_port_by_id(target_port_id);\n         if(port) {\n             port->send(sptr);\n-            scoped_lock with(target_task->port_lock);\n             port->deref();\n             sent = true;\n         } else {"}, {"sha": "5996c6391adf48fd7b31915b4cc5a5828cc5eb39", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "patch": "@@ -104,15 +104,20 @@ static size_t const BUF_BYTES = 2048;\n   void ref() { ++ref_count; } \\\n   void deref() { if (--ref_count == 0) { dtor; } }\n \n-#define RUST_ATOMIC_REFCOUNT()                                            \\\n-private:                                                                  \\\n-   intptr_t ref_count;                                                    \\\n-public:                                                                   \\\n-   void ref() {                                                           \\\n-       intptr_t old = sync::increment(ref_count);                         \\\n-       assert(old > 0);                                                   \\\n-   }                                                                      \\\n-   void deref() { if(0 == sync::decrement(ref_count)) { delete_this(); } }\n+#define RUST_ATOMIC_REFCOUNT()                                             \\\n+private:                                                                   \\\n+   intptr_t ref_count;                                                     \\\n+public:                                                                    \\\n+   void ref() {                                                            \\\n+       intptr_t old = sync::increment(ref_count);                          \\\n+       assert(old > 0);                                                    \\\n+   }                                                                       \\\n+   void deref() { if(0 == sync::decrement(ref_count)) { delete_this(); } } \\\n+   intptr_t get_ref_count() {                                              \\\n+      sync::increment(ref_count);                                          \\\n+      intptr_t current = sync::decrement(ref_count);                       \\\n+      return current;                                                      \\\n+   }\n \n template <typename T> struct task_owned {\n     inline void *operator new(size_t size, rust_task *task, const char *tag);"}, {"sha": "628d3d70d1888d97730bb90592eff6b679cc11bf", "filename": "src/rt/rust_port.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_port.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_port.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.cpp?ref=4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "patch": "@@ -25,8 +25,7 @@ void rust_port::detach() {\n     // FIXME: Busy waiting until we're the only ref\n     bool done = false;\n     while (!done) {\n-        scoped_lock with(task->port_lock);\n-        done = ref_count == 1;\n+        done = get_ref_count() == 1;\n     }\n }\n "}, {"sha": "e1eb8a7871b619493dba97bc9fc79b0824433929", "filename": "src/rt/rust_port.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_port.h", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_port.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.h?ref=4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "patch": "@@ -5,7 +5,7 @@\n \n class rust_port : public kernel_owned<rust_port>, public rust_cond {\n public:\n-    RUST_REFCOUNTED(rust_port)\n+    RUST_ATOMIC_REFCOUNT();\n \n     rust_port_id id;\n \n@@ -18,6 +18,8 @@ class rust_port : public kernel_owned<rust_port>, public rust_cond {\n \n     rust_port(rust_task *task, size_t unit_sz);\n     ~rust_port();\n+    void delete_this() { delete this; }\n+\n     void log_state();\n     void send(void *sptr);\n     void receive(void *dptr, uintptr_t *yield);"}, {"sha": "a06da53f02e29366b941024755604c406c13a7f8", "filename": "src/rt/rust_port_selector.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_port_selector.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_port_selector.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port_selector.cpp?ref=4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "patch": "@@ -69,7 +69,6 @@ void\n rust_port_selector::msg_sent_on(rust_port *port) {\n     rust_task *task = port->task;\n \n-    I(task->thread, !task->port_lock.lock_held_by_current_thread());\n     I(task->thread, !port->lock.lock_held_by_current_thread());\n     I(task->thread, !rendezvous_lock.lock_held_by_current_thread());\n "}, {"sha": "bb56b4dcb0a39093f9c815b1b2fcae7ec58ed032", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "patch": "@@ -516,7 +516,6 @@ rust_task::notify(bool success) {\n                 msg.result = !success ? tr_failure : tr_success;\n \n                 target_port->send(&msg);\n-                scoped_lock with(target_task->port_lock);\n                 target_port->deref();\n             }\n             target_task->deref();"}, {"sha": "ebc90d48024351907fa99bd3ed5956bad2f8cfec", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a2320eb9620dbc68a264ce64ee1f233dd977d/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=4c4a2320eb9620dbc68a264ce64ee1f233dd977d", "patch": "@@ -89,10 +89,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     bool propagate_failure;\n \n-    // Protects port_table\n-    lock_and_signal port_lock;\n-    hash_map<rust_port_id, rust_port *> port_table;\n-\n     rust_obstack dynastack;\n \n     uint32_t cc_counter;\n@@ -104,6 +100,10 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n private:\n \n+    // Protects port_table\n+    lock_and_signal port_lock;\n+    hash_map<rust_port_id, rust_port *> port_table;\n+\n     // Protects state, cond, cond_name\n     lock_and_signal state_lock;\n     rust_task_list *state;"}]}