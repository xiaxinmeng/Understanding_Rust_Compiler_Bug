{"sha": "3f90287bb607e5061350517c63240e14e0d25e46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmOTAyODdiYjYwN2U1MDYxMzUwNTE3YzYzMjQwZTE0ZTBkMjVlNDY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-07T00:45:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-07T00:45:17Z"}, "message": "Rollup merge of #73856 - pierwill:pierwill-lexer-doc, r=jonas-schievink\n\nEdit librustc_lexer top-level docs\n\nMinor edit, and adds link to librustc_parse::lexer.", "tree": {"sha": "038d89bd9f0563dff4b7ac8ecab400f83fad4395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/038d89bd9f0563dff4b7ac8ecab400f83fad4395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f90287bb607e5061350517c63240e14e0d25e46", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfA8WeCRBK7hj4Ov3rIwAAdHIIAFHCGIkBGovAmwsi8Bb3G55A\nr0c918vlfHTfgwfe9xIg8ybQoV+VtPFykwZLyPlHtWC+Bldq+Oo1agBWvj4eJhAJ\nzZnOO5Rq7Jm//LXGu8coe+rXaahX0823ky+SkpVOocJ1VLOBiRnoyWzYZMNZTVEi\nDARkrvWxN70inKmJ/2daRoR8Atjxtt6s7F25Ov0bOwlwBGAHQFNN4aNee2QbSF2Z\nhbPjLwHMQ+6XsTPknoPJw0mcDx8VpNqY7m6xbBmo2o8KnP1g/+VOIvIxqE8V8XNR\nYNZ/CgGh/zlGxOJcHMKGoBi7s5wD79txLYlArpmjMfdxpTa8cmlS0CANxMwpYJk=\n=yefo\n-----END PGP SIGNATURE-----\n", "payload": "tree 038d89bd9f0563dff4b7ac8ecab400f83fad4395\nparent 218d96ed6b7d57bd5d8c38f649a22b8d4ac31c25\nparent 36e50a0fb3e91552425bbae89aba411e46c4c27a\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594082717 -0700\ncommitter GitHub <noreply@github.com> 1594082717 -0700\n\nRollup merge of #73856 - pierwill:pierwill-lexer-doc, r=jonas-schievink\n\nEdit librustc_lexer top-level docs\n\nMinor edit, and adds link to librustc_parse::lexer.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f90287bb607e5061350517c63240e14e0d25e46", "html_url": "https://github.com/rust-lang/rust/commit/3f90287bb607e5061350517c63240e14e0d25e46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f90287bb607e5061350517c63240e14e0d25e46/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "218d96ed6b7d57bd5d8c38f649a22b8d4ac31c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/218d96ed6b7d57bd5d8c38f649a22b8d4ac31c25", "html_url": "https://github.com/rust-lang/rust/commit/218d96ed6b7d57bd5d8c38f649a22b8d4ac31c25"}, {"sha": "36e50a0fb3e91552425bbae89aba411e46c4c27a", "url": "https://api.github.com/repos/rust-lang/rust/commits/36e50a0fb3e91552425bbae89aba411e46c4c27a", "html_url": "https://github.com/rust-lang/rust/commit/36e50a0fb3e91552425bbae89aba411e46c4c27a"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "862ffd50d38f6a2e5df2f6b5641f0f245b6867ba", "filename": "src/librustc_lexer/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3f90287bb607e5061350517c63240e14e0d25e46/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f90287bb607e5061350517c63240e14e0d25e46/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Flib.rs?ref=3f90287bb607e5061350517c63240e14e0d25e46", "patch": "@@ -6,17 +6,18 @@\n //! produces simple tokens which are a pair of type-tag and a bit of original text,\n //! and does not report errors, instead storing them as flags on the token.\n //!\n-//! Tokens produced by this lexer are not yet ready for parsing the Rust syntax,\n-//! for that see `librustc_parse::lexer`, which converts this basic token stream\n+//! Tokens produced by this lexer are not yet ready for parsing the Rust syntax.\n+//! For that see [`librustc_parse::lexer`], which converts this basic token stream\n //! into wide tokens used by actual parser.\n //!\n //! The purpose of this crate is to convert raw sources into a labeled sequence\n //! of well-known token types, so building an actual Rust token stream will\n //! be easier.\n //!\n-//! Main entity of this crate is [`TokenKind`] enum which represents common\n+//! The main entity of this crate is the [`TokenKind`] enum which represents common\n //! lexeme types.\n-\n+//!\n+//! [`librustc_parse::lexer`]: ../rustc_parse/lexer/index.html\n // We want to be able to build this crate with a stable compiler, so no\n // `#![feature]` attributes should be added.\n "}]}