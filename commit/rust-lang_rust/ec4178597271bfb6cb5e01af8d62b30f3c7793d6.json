{"sha": "ec4178597271bfb6cb5e01af8d62b30f3c7793d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNDE3ODU5NzI3MWJmYjZjYjVlMDFhZjhkNjJiMzBmM2M3NzkzZDY=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2015-01-19T08:20:31Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2015-01-20T07:40:27Z"}, "message": "Remove unsupported test features from compiletest.\n\nRemoves test-shard, ratchet-metrics and save-metrics from Config in\ncompiletest/common.rs.", "tree": {"sha": "54385dbf88fb921544935d420d0a68d8c8a5343f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54385dbf88fb921544935d420d0a68d8c8a5343f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec4178597271bfb6cb5e01af8d62b30f3c7793d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec4178597271bfb6cb5e01af8d62b30f3c7793d6", "html_url": "https://github.com/rust-lang/rust/commit/ec4178597271bfb6cb5e01af8d62b30f3c7793d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec4178597271bfb6cb5e01af8d62b30f3c7793d6/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7b30f9c0a35a56dc77cbe79d950a7888522abf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b30f9c0a35a56dc77cbe79d950a7888522abf7", "html_url": "https://github.com/rust-lang/rust/commit/d7b30f9c0a35a56dc77cbe79d950a7888522abf7"}], "stats": {"total": 38, "additions": 4, "deletions": 34}, "files": [{"sha": "1058a489037568c6bc5aad6e6e3794bed08f56be", "filename": "src/compiletest/common.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ec4178597271bfb6cb5e01af8d62b30f3c7793d6/src%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec4178597271bfb6cb5e01af8d62b30f3c7793d6/src%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcommon.rs?ref=ec4178597271bfb6cb5e01af8d62b30f3c7793d6", "patch": "@@ -115,20 +115,6 @@ pub struct Config {\n     // Write out a parseable log of tests that were run\n     pub logfile: Option<Path>,\n \n-    // Write out a json file containing any metrics of the run\n-    pub save_metrics: Option<Path>,\n-\n-    // Write and ratchet a metrics file\n-    pub ratchet_metrics: Option<Path>,\n-\n-    // Percent change in metrics to consider noise\n-    pub ratchet_noise_percent: Option<f64>,\n-\n-    // \"Shard\" of the testsuite to pub run: this has the form of\n-    // two numbers (a,b), and causes only those tests with\n-    // positional order equal to a mod b to run.\n-    pub test_shard: Option<(uint,uint)>,\n-\n     // A command line to prefix program execution with,\n     // for running under valgrind\n     pub runtool: Option<String>,"}, {"sha": "17a39bc1c74d4af2c32ab94675e8751e81579b47", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ec4178597271bfb6cb5e01af8d62b30f3c7793d6/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec4178597271bfb6cb5e01af8d62b30f3c7793d6/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=ec4178597271bfb6cb5e01af8d62b30f3c7793d6", "patch": "@@ -77,10 +77,6 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n           optopt(\"\", \"target-rustcflags\", \"flags to pass to rustc for target\", \"FLAGS\"),\n           optflag(\"\", \"verbose\", \"run tests verbosely, showing all output\"),\n           optopt(\"\", \"logfile\", \"file to log test execution to\", \"FILE\"),\n-          optopt(\"\", \"save-metrics\", \"file to save metrics to\", \"FILE\"),\n-          optopt(\"\", \"ratchet-metrics\", \"file to ratchet metrics against\", \"FILE\"),\n-          optopt(\"\", \"ratchet-noise-percent\",\n-                 \"percent change in metrics to consider noise\", \"N\"),\n           optflag(\"\", \"jit\", \"run tests under the JIT\"),\n           optopt(\"\", \"target\", \"the target to build for\", \"TARGET\"),\n           optopt(\"\", \"host\", \"the host to build for\", \"HOST\"),\n@@ -90,7 +86,6 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n           optopt(\"\", \"adb-path\", \"path to the android debugger\", \"PATH\"),\n           optopt(\"\", \"adb-test-dir\", \"path to tests for the android debugger\", \"PATH\"),\n           optopt(\"\", \"lldb-python-dir\", \"directory containing LLDB's python module\", \"PATH\"),\n-          optopt(\"\", \"test-shard\", \"run shard A, of B shards, worth of the testsuite\", \"A.B\"),\n           optflag(\"h\", \"help\", \"show this message\"));\n \n     assert!(!args.is_empty());\n@@ -152,12 +147,6 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         filter: filter,\n         cfail_regex: Regex::new(errors::EXPECTED_PATTERN).unwrap(),\n         logfile: matches.opt_str(\"logfile\").map(|s| Path::new(s)),\n-        save_metrics: matches.opt_str(\"save-metrics\").map(|s| Path::new(s)),\n-        ratchet_metrics:\n-            matches.opt_str(\"ratchet-metrics\").map(|s| Path::new(s)),\n-        ratchet_noise_percent:\n-            matches.opt_str(\"ratchet-noise-percent\")\n-                   .and_then(|s| s.as_slice().parse::<f64>()),\n         runtool: matches.opt_str(\"runtool\"),\n         host_rustcflags: matches.opt_str(\"host-rustcflags\"),\n         target_rustcflags: matches.opt_str(\"target-rustcflags\"),\n@@ -176,7 +165,6 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n                 opt_str2(matches.opt_str(\"adb-test-dir\")).as_slice() &&\n             !opt_str2(matches.opt_str(\"adb-test-dir\")).is_empty(),\n         lldb_python_dir: matches.opt_str(\"lldb-python-dir\"),\n-        test_shard: test::opt_shard(matches.opt_str(\"test-shard\")),\n         verbose: matches.opt_present(\"verbose\"),\n     }\n }\n@@ -210,10 +198,6 @@ pub fn log_config(config: &Config) {\n     logv(c, format!(\"adb_test_dir: {:?}\", config.adb_test_dir));\n     logv(c, format!(\"adb_device_status: {}\",\n                     config.adb_device_status));\n-    match config.test_shard {\n-        None => logv(c, \"test_shard: (all)\".to_string()),\n-        Some((a,b)) => logv(c, format!(\"test_shard: {}.{}\", a, b))\n-    }\n     logv(c, format!(\"verbose: {}\", config.verbose));\n     logv(c, format!(\"\\n\"));\n }\n@@ -284,10 +268,10 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n         logfile: config.logfile.clone(),\n         run_tests: true,\n         run_benchmarks: true,\n-        ratchet_metrics: config.ratchet_metrics.clone(),\n-        ratchet_noise_percent: config.ratchet_noise_percent.clone(),\n-        save_metrics: config.save_metrics.clone(),\n-        test_shard: config.test_shard.clone(),\n+        ratchet_metrics: None,\n+        ratchet_noise_percent: None,\n+        save_metrics: None,\n+        test_shard: None,\n         nocapture: false,\n         color: test::AutoColor,\n         show_boxplot: false,"}]}