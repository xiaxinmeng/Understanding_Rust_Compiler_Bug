{"sha": "4edcf6147912e7e4c1f13208d830c3c25e544a8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZGNmNjE0NzkxMmU3ZTRjMWYxMzIwOGQ4MzBjM2MyNWU1NDRhOGM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-08T12:21:57Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-09T22:09:57Z"}, "message": "End toggle migration", "tree": {"sha": "deec1befa91c19abb28069441c535047248fa6ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/deec1befa91c19abb28069441c535047248fa6ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4edcf6147912e7e4c1f13208d830c3c25e544a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4edcf6147912e7e4c1f13208d830c3c25e544a8c", "html_url": "https://github.com/rust-lang/rust/commit/4edcf6147912e7e4c1f13208d830c3c25e544a8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4edcf6147912e7e4c1f13208d830c3c25e544a8c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f83d24aee866a14753a7cedbb4e301dfe5bef5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f83d24aee866a14753a7cedbb4e301dfe5bef5", "html_url": "https://github.com/rust-lang/rust/commit/e5f83d24aee866a14753a7cedbb4e301dfe5bef5"}], "stats": {"total": 285, "additions": 68, "deletions": 217}, "files": [{"sha": "5b54b32e4ddeaef06f1d49e032dc56b250cbc713", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=4edcf6147912e7e4c1f13208d830c3c25e544a8c", "patch": "@@ -509,7 +509,7 @@ fn document(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, parent: Option\n         info!(\"Documenting {}\", name);\n     }\n     document_item_info(w, cx, item, parent);\n-    document_full(w, item, cx);\n+    document_full_collapsible(w, item, cx);\n }\n \n /// Render md_text as markdown.\n@@ -561,10 +561,29 @@ fn document_short(\n     }\n }\n \n+fn document_full_collapsible(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>) {\n+    document_full_inner(w, item, cx, true);\n+}\n+\n fn document_full(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>) {\n+    document_full_inner(w, item, cx, false);\n+}\n+\n+fn document_full_inner(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>, is_collapsible: bool) {\n     if let Some(s) = cx.shared.maybe_collapsed_doc_value(item) {\n         debug!(\"Doc block: =====\\n{}\\n=====\", s);\n-        render_markdown(w, cx, &s, item.links(cx));\n+        if is_collapsible {\n+            w.write_str(\n+                \"<details class=\\\"rustdoc-toggle top-doc\\\" open>\\\n+                <summary class=\\\"hideme\\\">\\\n+                     <span>Expand description</span>\\\n+                </summary>\",\n+            );\n+            render_markdown(w, cx, &s, item.links(cx));\n+            w.write_str(\"</details>\");\n+        } else {\n+            render_markdown(w, cx, &s, item.links(cx));\n+        }\n     }\n }\n "}, {"sha": "ea97091ffcbf2c71c7e43ab0f90c7a37e145b898", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=4edcf6147912e7e4c1f13208d830c3c25e544a8c", "patch": "@@ -1464,17 +1464,23 @@ fn document_non_exhaustive_header(item: &clean::Item) -> &str {\n \n fn document_non_exhaustive(w: &mut Buffer, item: &clean::Item) {\n     if item.is_non_exhaustive() {\n-        write!(w, \"<div class=\\\"docblock non-exhaustive non-exhaustive-{}\\\">\", {\n-            if item.is_struct() {\n-                \"struct\"\n-            } else if item.is_enum() {\n-                \"enum\"\n-            } else if item.is_variant() {\n-                \"variant\"\n-            } else {\n-                \"type\"\n+        write!(\n+            w,\n+            \"<details class=\\\"rustdoc-toggle non-exhaustive\\\">\\\n+                 <summary class=\\\"hideme\\\"><span>{}</span></summary>\\\n+                 <div class=\\\"docblock\\\">\",\n+            {\n+                if item.is_struct() {\n+                    \"This struct is marked as non-exhaustive\"\n+                } else if item.is_enum() {\n+                    \"This enum is marked as non-exhaustive\"\n+                } else if item.is_variant() {\n+                    \"This variant is marked as non-exhaustive\"\n+                } else {\n+                    \"This type is marked as non-exhaustive\"\n+                }\n             }\n-        });\n+        );\n \n         if item.is_struct() {\n             w.write_str(\n@@ -1502,6 +1508,6 @@ fn document_non_exhaustive(w: &mut Buffer, item: &clean::Item) {\n             );\n         }\n \n-        w.write_str(\"</div>\");\n+        w.write_str(\"</div></details>\");\n     }\n }"}, {"sha": "a03d20c053dfd4172211db0a6a9988ad24c08734", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 18, "deletions": 204, "changes": 222, "blob_url": "https://github.com/rust-lang/rust/blob/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=4edcf6147912e7e4c1f13208d830c3c25e544a8c", "patch": "@@ -377,28 +377,7 @@ function hideThemeButtonState() {\n             if (savedHash.length === 0) {\n                 return;\n             }\n-            elem = document.getElementById(savedHash.slice(1)); // we remove the '#'\n-            if (!elem || !isHidden(elem)) {\n-                return;\n-            }\n-            var parent = elem.parentNode;\n-            if (parent && hasClass(parent, \"impl-items\")) {\n-                // In case this is a trait implementation item, we first need to toggle\n-                // the \"Show hidden undocumented items\".\n-                onEachLazy(parent.getElementsByClassName(\"collapsed\"), function(e) {\n-                    if (e.parentNode === parent) {\n-                        // Only click on the toggle we're looking for.\n-                        e.click();\n-                        return true;\n-                    }\n-                });\n-                if (isHidden(elem)) {\n-                    // The whole parent is collapsed. We need to click on its toggle as well!\n-                    if (hasClass(parent.lastElementChild, \"collapse-toggle\")) {\n-                        parent.lastElementChild.click();\n-                    }\n-                }\n-            }\n+            expandSection(savedHash.slice(1)); // we remove the '#'\n         }\n     }\n \n@@ -465,25 +444,7 @@ function hideThemeButtonState() {\n     }\n \n     function expandSection(id) {\n-        var elem = document.getElementById(id);\n-        if (elem && isHidden(elem)) {\n-            var h3 = elem.parentNode.previousElementSibling;\n-            if (h3 && h3.tagName !== \"H3\") {\n-                h3 = h3.previousElementSibling; // skip div.docblock\n-            }\n-\n-            if (h3) {\n-                var collapses = h3.getElementsByClassName(\"collapse-toggle\");\n-                if (collapses.length > 0) {\n-                    // The element is not visible, we need to make it appear!\n-                    collapseDocs(collapses[0], \"show\");\n-                }\n-                // Open all ancestor <details> to make this element visible.\n-                openParentDetails(h3.parentNode);\n-            } else {\n-                openParentDetails(elem.parentNode);\n-            }\n-        }\n+        openParentDetails(document.getElementById(id));\n     }\n \n     function getHelpElement(build) {\n@@ -678,10 +639,6 @@ function hideThemeButtonState() {\n         var helpElem = getHelpElement(false);\n         if (hasClass(ev.target, \"help-button\")) {\n             displayHelp(true, ev);\n-        } else if (hasClass(ev.target, \"collapse-toggle\")) {\n-            collapseDocs(ev.target, \"toggle\");\n-        } else if (hasClass(ev.target.parentNode, \"collapse-toggle\")) {\n-            collapseDocs(ev.target.parentNode, \"toggle\");\n         } else if (ev.target.tagName === \"SPAN\" && hasClass(ev.target.parentNode, \"line-numbers\")) {\n             handleSourceHighlight(ev);\n         } else if (helpElem && hasClass(helpElem, \"hidden\") === false) {\n@@ -898,72 +855,34 @@ function hideThemeButtonState() {\n         return \"\\u2212\"; // \"\\u2212\" is \"\u2212\" minus sign\n     }\n \n-    function onEveryMatchingChild(elem, className, func) {\n-        if (elem && className && func) {\n-            var length = elem.childNodes.length;\n-            var nodes = elem.childNodes;\n-            for (var i = 0; i < length; ++i) {\n-                if (hasClass(nodes[i], className)) {\n-                    func(nodes[i]);\n-                } else {\n-                    onEveryMatchingChild(nodes[i], className, func);\n-                }\n-            }\n-        }\n-    }\n-\n-    function toggleAllDocs(fromAutoCollapse) {\n+    function toggleAllDocs() {\n         var innerToggle = document.getElementById(toggleAllDocsId);\n         if (!innerToggle) {\n             return;\n         }\n+        var sectionIsCollapsed = false;\n         if (hasClass(innerToggle, \"will-expand\")) {\n             removeClass(innerToggle, \"will-expand\");\n-            onEachLazy(document.getElementsByTagName(\"details\"), function(e) {\n-                e.open = true;\n-            });\n-            onEveryMatchingChild(innerToggle, \"inner\", function(e) {\n-                e.innerHTML = labelForToggleButton(false);\n+            onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n+                if (!hasClass(e, \"type-contents-toggle\")) {\n+                    e.open = true;\n+                }\n             });\n             innerToggle.title = \"collapse all docs\";\n-            if (fromAutoCollapse !== true) {\n-                onEachLazy(document.getElementsByClassName(\"collapse-toggle\"), function(e) {\n-                    collapseDocs(e, \"show\");\n-                });\n-            }\n         } else {\n             addClass(innerToggle, \"will-expand\");\n-            onEachLazy(document.getElementsByTagName(\"details\"), function(e) {\n-                e.open = false;\n-            });\n-            onEveryMatchingChild(innerToggle, \"inner\", function(e) {\n-                var parent = e.parentNode;\n-                var superParent = null;\n-\n-                if (parent) {\n-                    superParent = parent.parentNode;\n-                }\n-                if (!parent || !superParent || superParent.id !== \"main\" ||\n-                    hasClass(parent, \"impl\") === false) {\n-                    e.innerHTML = labelForToggleButton(true);\n+            onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n+                if (e.parentNode.id !== \"main\" ||\n+                    (!hasClass(e, \"implementors-toggle\") &&\n+                     !hasClass(e, \"type-contents-toggle\")))\n+                {\n+                    e.open = false;\n                 }\n             });\n+            sectionIsCollapsed = true;\n             innerToggle.title = \"expand all docs\";\n-            if (fromAutoCollapse !== true) {\n-                onEachLazy(document.getElementsByClassName(\"collapse-toggle\"), function(e) {\n-                    var parent = e.parentNode;\n-                    var superParent = null;\n-\n-                    if (parent) {\n-                        superParent = parent.parentNode;\n-                    }\n-                    if (!parent || !superParent || superParent.id !== \"main\" ||\n-                        hasClass(parent, \"impl\") === false) {\n-                        collapseDocs(e, \"hide\");\n-                    }\n-                });\n-            }\n         }\n+        innerToggle.children[0].innerText = labelForToggleButton(sectionIsCollapsed);\n     }\n \n     function collapseDocs(toggle, mode) {\n@@ -1102,71 +1021,26 @@ function hideThemeButtonState() {\n         referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n     }\n \n-    function createSimpleToggle(sectionIsCollapsed) {\n-        var toggle = document.createElement(\"a\");\n-        toggle.href = \"javascript:void(0)\";\n-        toggle.className = \"collapse-toggle\";\n-        toggle.innerHTML = \"[<span class=\\\"inner\\\">\" + labelForToggleButton(sectionIsCollapsed) +\n-                           \"</span>]\";\n-        return toggle;\n-    }\n-\n-    function createToggle(toggle, otherMessage, fontSize, extraClass, show) {\n-        var span = document.createElement(\"span\");\n-        span.className = \"toggle-label\";\n-        if (show) {\n-            span.style.display = \"none\";\n-        }\n-        if (!otherMessage) {\n-            span.innerHTML = \"&nbsp;Expand&nbsp;description\";\n-        } else {\n-            span.innerHTML = otherMessage;\n-        }\n-\n-        if (fontSize) {\n-            span.style.fontSize = fontSize;\n-        }\n-\n-        var mainToggle = toggle.cloneNode(true);\n-        mainToggle.appendChild(span);\n-\n-        var wrapper = document.createElement(\"div\");\n-        wrapper.className = \"toggle-wrapper\";\n-        if (!show) {\n-            addClass(wrapper, \"collapsed\");\n-            var inner = mainToggle.getElementsByClassName(\"inner\");\n-            if (inner && inner.length > 0) {\n-                inner[0].innerHTML = \"+\";\n-            }\n-        }\n-        if (extraClass) {\n-            addClass(wrapper, extraClass);\n-        }\n-        wrapper.appendChild(mainToggle);\n-        return wrapper;\n-    }\n-\n     (function() {\n         var toggles = document.getElementById(toggleAllDocsId);\n         if (toggles) {\n             toggles.onclick = toggleAllDocs;\n         }\n \n-        var toggle = createSimpleToggle(false);\n         var hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n         var hideImplementors = getSettingValue(\"auto-collapse-implementors\") !== \"false\";\n         var hideLargeItemContents = getSettingValue(\"auto-hide-large-items\") !== \"false\";\n \n         var impl_list = document.getElementById(\"trait-implementations-list\");\n         if (impl_list !== null) {\n-            onEachLazy(impl_list.getElementsByClassName(\"collapse-toggle\"), function(e) {\n+            onEachLazy(impl_list.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n                 collapseNonInherent(e);\n             });\n         }\n \n         var blanket_list = document.getElementById(\"blanket-implementations-list\");\n         if (blanket_list !== null) {\n-            onEachLazy(blanket_list.getElementsByClassName(\"collapse-toggle\"), function(e) {\n+            onEachLazy(blanket_list.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n                 collapseNonInherent(e);\n             });\n         }\n@@ -1205,66 +1079,6 @@ function hideThemeButtonState() {\n             }\n         }\n \n-        function buildToggleWrapper(e) {\n-            if (hasClass(e, \"autohide\")) {\n-                var wrap = e.previousElementSibling;\n-                if (wrap && hasClass(wrap, \"toggle-wrapper\")) {\n-                    var inner_toggle = wrap.childNodes[0];\n-                    var extra = e.childNodes[0].tagName === \"H3\";\n-\n-                    e.style.display = \"none\";\n-                    addClass(wrap, \"collapsed\");\n-                    onEachLazy(inner_toggle.getElementsByClassName(\"inner\"), function(e) {\n-                        e.innerHTML = labelForToggleButton(true);\n-                    });\n-                    onEachLazy(inner_toggle.getElementsByClassName(\"toggle-label\"), function(e) {\n-                        e.style.display = \"inline-block\";\n-                        if (extra === true) {\n-                            e.innerHTML = \" Show \" + e.childNodes[0].innerHTML;\n-                        }\n-                    });\n-                }\n-            }\n-            if (e.parentNode.id === \"main\") {\n-                var otherMessage = \"\";\n-                var fontSize;\n-                var extraClass;\n-\n-                if (hasClass(e, \"type-decl\")) {\n-                    // We do something special for these\n-                    return;\n-                } else if (hasClass(e, \"non-exhaustive\")) {\n-                    otherMessage = \"&nbsp;This&nbsp;\";\n-                    if (hasClass(e, \"non-exhaustive-struct\")) {\n-                        otherMessage += \"struct\";\n-                    } else if (hasClass(e, \"non-exhaustive-enum\")) {\n-                        otherMessage += \"enum\";\n-                    } else if (hasClass(e, \"non-exhaustive-variant\")) {\n-                        otherMessage += \"enum variant\";\n-                    } else if (hasClass(e, \"non-exhaustive-type\")) {\n-                        otherMessage += \"type\";\n-                    }\n-                    otherMessage += \"&nbsp;is&nbsp;marked&nbsp;as&nbsp;non-exhaustive\";\n-                } else if (hasClass(e.childNodes[0], \"impl-items\")) {\n-                    extraClass = \"marg-left\";\n-                }\n-\n-                e.parentNode.insertBefore(\n-                    createToggle(\n-                        toggle,\n-                        otherMessage,\n-                        fontSize,\n-                        extraClass,\n-                        true),\n-                    e);\n-                if (hasClass(e, \"non-exhaustive\") === true) {\n-                    collapseDocs(e.previousSibling.childNodes[0], \"toggle\");\n-                }\n-            }\n-        }\n-\n-        onEachLazy(document.getElementsByClassName(\"docblock\"), buildToggleWrapper);\n-\n         var pageId = getPageId();\n         if (pageId !== null) {\n             expandSection(pageId);"}, {"sha": "42a85fcce030a831a49a507d7df5a83fc6c291d1", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/4edcf6147912e7e4c1f13208d830c3c25e544a8c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=4edcf6147912e7e4c1f13208d830c3c25e544a8c", "patch": "@@ -1790,6 +1790,18 @@ details.rustdoc-toggle > summary::before {\n \tcursor: pointer;\n }\n \n+details.rustdoc-toggle.top-doc > summary,\n+details.rustdoc-toggle.top-doc > summary::before,\n+details.rustdoc-toggle.non-exhaustive > summary,\n+details.rustdoc-toggle.non-exhaustive > summary::before {\n+\tfont-family: 'Fira Sans';\n+\tfont-size: 16px;\n+}\n+\n+details.non-exhaustive {\n+\tmargin-bottom: 8px;\n+}\n+\n details.rustdoc-toggle > summary.hideme::before {\n \tposition: relative;\n }"}]}