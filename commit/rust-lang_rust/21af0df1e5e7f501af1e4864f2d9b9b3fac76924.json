{"sha": "21af0df1e5e7f501af1e4864f2d9b9b3fac76924", "node_id": "C_kwDOAAsO6NoAKDIxYWYwZGYxZTVlN2Y1MDFhZjFlNDg2NGYyZDliOWIzZmFjNzY5MjQ", "commit": {"author": {"name": "Ayush Singh", "email": "ayushsingh1325@gmail.com", "date": "2022-11-15T16:45:55Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T00:22:27Z"}, "message": "Use custom entry name in gcc\n\nThis is a continuation of 9f0a8620bd7d325e6d42417b08daff3e55cb88f6 for\ngcc.\n\nSigned-off-by: Ayush Singh <ayushsingh1325@gmail.com>", "tree": {"sha": "8cdd3e8a93066b5969ec56d81ba45ecc43cf3525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cdd3e8a93066b5969ec56d81ba45ecc43cf3525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21af0df1e5e7f501af1e4864f2d9b9b3fac76924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21af0df1e5e7f501af1e4864f2d9b9b3fac76924", "html_url": "https://github.com/rust-lang/rust/commit/21af0df1e5e7f501af1e4864f2d9b9b3fac76924", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21af0df1e5e7f501af1e4864f2d9b9b3fac76924/comments", "author": {"login": "Ayush1325", "id": 22546812, "node_id": "MDQ6VXNlcjIyNTQ2ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/22546812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ayush1325", "html_url": "https://github.com/Ayush1325", "followers_url": "https://api.github.com/users/Ayush1325/followers", "following_url": "https://api.github.com/users/Ayush1325/following{/other_user}", "gists_url": "https://api.github.com/users/Ayush1325/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ayush1325/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ayush1325/subscriptions", "organizations_url": "https://api.github.com/users/Ayush1325/orgs", "repos_url": "https://api.github.com/users/Ayush1325/repos", "events_url": "https://api.github.com/users/Ayush1325/events{/privacy}", "received_events_url": "https://api.github.com/users/Ayush1325/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf4e1e49ea80d52ec6662938ce859de17fd831f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf4e1e49ea80d52ec6662938ce859de17fd831f4", "html_url": "https://github.com/rust-lang/rust/commit/bf4e1e49ea80d52ec6662938ce859de17fd831f4"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "29df1d2608a541323d417c3a09f20834d9776f7e", "filename": "src/context.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21af0df1e5e7f501af1e4864f2d9b9b3fac76924/src%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21af0df1e5e7f501af1e4864f2d9b9b3fac76924/src%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcontext.rs?ref=21af0df1e5e7f501af1e4864f2d9b9b3fac76924", "patch": "@@ -440,8 +440,9 @@ impl<'gcc, 'tcx> MiscMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n     }\n \n     fn declare_c_main(&self, fn_type: Self::Type) -> Option<Self::Function> {\n-        if self.get_declared_value(\"main\").is_none() {\n-            Some(self.declare_cfn(\"main\", fn_type))\n+        let entry_name = self.sess().target.entry_name.as_ref();\n+        if self.get_declared_value(entry_name).is_none() {\n+            Some(self.declare_entry_fn(entry_name, fn_type, ()))\n         }\n         else {\n             // If the symbol already exists, it is an error: for example, the user wrote"}, {"sha": "4748e7e4be2a3afe401ed49886cc7ae9a862c6b3", "filename": "src/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21af0df1e5e7f501af1e4864f2d9b9b3fac76924/src%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21af0df1e5e7f501af1e4864f2d9b9b3fac76924/src%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdeclare.rs?ref=21af0df1e5e7f501af1e4864f2d9b9b3fac76924", "patch": "@@ -63,13 +63,13 @@ impl<'gcc, 'tcx> CodegenCx<'gcc, 'tcx> {\n         global\n     }\n \n-    pub fn declare_cfn(&self, name: &str, _fn_type: Type<'gcc>) -> RValue<'gcc> {\n+    pub fn declare_entry_fn(&self, name: &str, _fn_type: Type<'gcc>, callconv: () /*llvm::CCallConv*/) -> RValue<'gcc> {\n         // TODO(antoyo): use the fn_type parameter.\n         let const_string = self.context.new_type::<u8>().make_pointer().make_pointer();\n         let return_type = self.type_i32();\n         let variadic = false;\n         self.linkage.set(FunctionType::Exported);\n-        let func = declare_raw_fn(self, name, () /*llvm::CCallConv*/, return_type, &[self.type_i32(), const_string], variadic);\n+        let func = declare_raw_fn(self, name, callconv, return_type, &[self.type_i32(), const_string], variadic);\n         // NOTE: it is needed to set the current_func here as well, because get_fn() is not called\n         // for the main function.\n         *self.current_func.borrow_mut() = Some(func);"}]}