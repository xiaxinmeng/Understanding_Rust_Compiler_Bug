{"sha": "e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYTc0ZWQyYjUxODVmYmNmNTVlZjgxNWYzYjczNjdkMTkyODlhNWY=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-22T13:24:38Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-22T13:25:44Z"}, "message": "Set mir_opt_level=0\n\nThis introduces some FNs. But a building Clippy is more important for now", "tree": {"sha": "220f00e5ca177761fe048ec198a5abaa44d44656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/220f00e5ca177761fe048ec198a5abaa44d44656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3X4dgACgkQaTCGhp1Q\nZjcqMQ//Tbjh1xL7pnteX9CN1sjj48hk2ZCOCU1bX/hBQLrxR3d8U3d9hfenGrpb\nt3goCcvc9Jcu5e8T8ijV909TI7K0rTmn7C5m0S8c2prZa74crcpK+2n8U9qRoxNo\ni4CzEg0Jj1LrVgIETJtENYiKFzR5UJ70iGp3eitnyUpJ2sxzBipMOnAF+t+NdRwn\n1Y8vmUJJQ3Z8R3Ac3TSPy+FtDNqO6jg7RvSgM9uLBBvr5n29s7knsr2LGIZYJiSX\n8PqiKiRlIfWxzL7rXI5l/Xp6+J6ONbfPIbKVlmn5ME8KDjNi5bloLx0kzaeweaEN\npjckmRYECF/uZJ2YMFUJkNxKoUnLtbeOCMblddFNg4YNbrHv+VgoZGzDv7FgTKmg\noqgtbhdY9NX73M/sm+bq++n+xT19jUAWN7d0zlpHgAonssYX9kgwiVCmFGXWjlrn\nq5yA2Oq+hEwJbYgd1eS1tdoCZU7z3bEdU23pKFUY6Kiw72MnHArkllcwLw5gbAbn\nQwzqLP5PrUmiOi2KMRaJehskaHeXf45QXnXyQw43VqRB+/4cQHBnYwr+/TVQPocc\nNx3g10xXgFVyIApQlpCW+vlZI3ArKHkJKZAPL2D0IYmU05kAvRB49rbX19M3//Es\nFfXhpKyPPy3j0T3kxD7K/OA9q0EU/X176/1rsZNKwQtT64KJxKw=\n=qR1s\n-----END PGP SIGNATURE-----", "payload": "tree 220f00e5ca177761fe048ec198a5abaa44d44656\nparent cadc35af5a3f05cc5b01efd4c16a480bea9e2a0b\nauthor flip1995 <hello@philkrones.com> 1574429078 +0100\ncommitter flip1995 <hello@philkrones.com> 1574429144 +0100\n\nSet mir_opt_level=0\n\nThis introduces some FNs. But a building Clippy is more important for now\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "html_url": "https://github.com/rust-lang/rust/commit/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cadc35af5a3f05cc5b01efd4c16a480bea9e2a0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cadc35af5a3f05cc5b01efd4c16a480bea9e2a0b", "html_url": "https://github.com/rust-lang/rust/commit/cadc35af5a3f05cc5b01efd4c16a480bea9e2a0b"}], "stats": {"total": 83, "additions": 27, "deletions": 56}, "files": [{"sha": "bd19127b3ce816113040e92e2ee200f7ac78d253", "filename": "src/driver.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "patch": "@@ -75,6 +75,8 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n             clippy_lints::register_pre_expansion_lints(&mut lint_store, &conf);\n             clippy_lints::register_renamed(&mut lint_store);\n         }));\n+\n+        config.opts.debugging_opts.mir_opt_level = 0;\n     }\n }\n "}, {"sha": "0744676d1399ab9ad58c281f5c90d26b7dae67e2", "filename": "tests/ui/indexing_slicing.stderr", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Findexing_slicing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Findexing_slicing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing.stderr?ref=e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "patch": "@@ -1,23 +1,3 @@\n-error: index out of bounds: the len is 4 but the index is 4\n-  --> $DIR/indexing_slicing.rs:18:5\n-   |\n-LL |     x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-   |     ^^^^\n-   |\n-   = note: `#[deny(const_err)]` on by default\n-\n-error: index out of bounds: the len is 4 but the index is 8\n-  --> $DIR/indexing_slicing.rs:19:5\n-   |\n-LL |     x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-   |     ^^^^^^^^^\n-\n-error: index out of bounds: the len is 4 but the index is 15\n-  --> $DIR/indexing_slicing.rs:54:5\n-   |\n-LL |     x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-   |     ^^^^\n-\n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:13:5\n    |\n@@ -209,5 +189,5 @@ LL |     v[M];\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n-error: aborting due to 27 previous errors\n+error: aborting due to 24 previous errors\n "}, {"sha": "f367279906fda13f992c8bd3bb715f556da6e7d6", "filename": "tests/ui/missing_const_for_fn/cant_be_const.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs?ref=e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "patch": "@@ -32,8 +32,11 @@ fn random_caller() -> u32 {\n \n static Y: u32 = 0;\n \n+// We should not suggest to make this function `const` because const functions are not allowed to\n+// refer to a static variable\n fn get_y() -> u32 {\n     Y\n+    //~^ ERROR E0013\n }\n \n // Don't lint entrypoint functions"}, {"sha": "e5e706e8483e6c43c459921b2427cf1651bd81f9", "filename": "tests/ui/redundant_clone.fixed", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fredundant_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fredundant_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.fixed?ref=e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "patch": "@@ -18,11 +18,11 @@ fn main() {\n \n     let _s = Path::new(\"/a/b/\").join(\"c\");\n \n-    let _s = Path::new(\"/a/b/\").join(\"c\");\n+    let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n \n     let _s = OsString::new();\n \n-    let _s = OsString::new();\n+    let _s = OsString::new().to_os_string();\n \n     // Check that lint level works\n     #[allow(clippy::redundant_clone)]\n@@ -47,6 +47,7 @@ fn main() {\n     let _ = Some(String::new()).unwrap_or_else(|| x.0.clone()); // ok; closure borrows `x`\n \n     with_branch(Alpha, true);\n+    cannot_double_move(Alpha);\n     cannot_move_from_type_with_drop();\n     borrower_propagation();\n }\n@@ -61,6 +62,10 @@ fn with_branch(a: Alpha, b: bool) -> (Alpha, Alpha) {\n     }\n }\n \n+fn cannot_double_move(a: Alpha) -> (Alpha, Alpha) {\n+    (a.clone(), a)\n+}\n+\n struct TypeWithDrop {\n     x: String,\n }"}, {"sha": "9ea2de9a3daac9fa5308b09c615a2abc853c6d05", "filename": "tests/ui/redundant_clone.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.rs?ref=e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "patch": "@@ -47,6 +47,7 @@ fn main() {\n     let _ = Some(String::new()).unwrap_or_else(|| x.0.clone()); // ok; closure borrows `x`\n \n     with_branch(Alpha, true);\n+    cannot_double_move(Alpha);\n     cannot_move_from_type_with_drop();\n     borrower_propagation();\n }\n@@ -61,6 +62,10 @@ fn with_branch(a: Alpha, b: bool) -> (Alpha, Alpha) {\n     }\n }\n \n+fn cannot_double_move(a: Alpha) -> (Alpha, Alpha) {\n+    (a.clone(), a)\n+}\n+\n struct TypeWithDrop {\n     x: String,\n }"}, {"sha": "62f4ce7645edaf7cfccc1e4cc8eee2df748427f4", "filename": "tests/ui/redundant_clone.stderr", "status": "modified", "additions": 9, "deletions": 33, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fredundant_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3a74ed2b5185fbcf55ef815f3b7367d19289a5f/tests%2Fui%2Fredundant_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.stderr?ref=e3a74ed2b5185fbcf55ef815f3b7367d19289a5f", "patch": "@@ -59,18 +59,6 @@ note: this value is dropped without further use\n LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_owned();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: redundant clone\n-  --> $DIR/redundant_clone.rs:21:42\n-   |\n-LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n-   |                                          ^^^^^^^^^^^^^^ help: remove this\n-   |\n-note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:21:14\n-   |\n-LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: redundant clone\n   --> $DIR/redundant_clone.rs:23:29\n    |\n@@ -83,18 +71,6 @@ note: this value is dropped without further use\n LL |     let _s = OsString::new().to_owned();\n    |              ^^^^^^^^^^^^^^^\n \n-error: redundant clone\n-  --> $DIR/redundant_clone.rs:25:29\n-   |\n-LL |     let _s = OsString::new().to_os_string();\n-   |                             ^^^^^^^^^^^^^^^ help: remove this\n-   |\n-note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:25:14\n-   |\n-LL |     let _s = OsString::new().to_os_string();\n-   |              ^^^^^^^^^^^^^^^\n-\n error: redundant clone\n   --> $DIR/redundant_clone.rs:32:19\n    |\n@@ -108,52 +84,52 @@ LL |     let _t = tup.0.clone();\n    |              ^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:58:22\n+  --> $DIR/redundant_clone.rs:59:22\n    |\n LL |         (a.clone(), a.clone())\n    |                      ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:58:21\n+  --> $DIR/redundant_clone.rs:59:21\n    |\n LL |         (a.clone(), a.clone())\n    |                     ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:114:15\n+  --> $DIR/redundant_clone.rs:119:15\n    |\n LL |     let _s = s.clone();\n    |               ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:114:14\n+  --> $DIR/redundant_clone.rs:119:14\n    |\n LL |     let _s = s.clone();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:115:15\n+  --> $DIR/redundant_clone.rs:120:15\n    |\n LL |     let _t = t.clone();\n    |               ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:115:14\n+  --> $DIR/redundant_clone.rs:120:14\n    |\n LL |     let _t = t.clone();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:125:19\n+  --> $DIR/redundant_clone.rs:130:19\n    |\n LL |         let _f = f.clone();\n    |                   ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:125:18\n+  --> $DIR/redundant_clone.rs:130:18\n    |\n LL |         let _f = f.clone();\n    |                  ^\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 11 previous errors\n "}]}