{"sha": "02c1d2ff52f872ea2c15f0892cdc56b356e59145", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYzFkMmZmNTJmODcyZWEyYzE1ZjA4OTJjZGM1NmIzNTZlNTkxNDU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T23:30:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T23:30:54Z"}, "message": "test: Make all the run-pass tests use `pub fn main`", "tree": {"sha": "944809710ebf30891688aea0c4f30d084fb5bb11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/944809710ebf30891688aea0c4f30d084fb5bb11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02c1d2ff52f872ea2c15f0892cdc56b356e59145", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02c1d2ff52f872ea2c15f0892cdc56b356e59145", "html_url": "https://github.com/rust-lang/rust/commit/02c1d2ff52f872ea2c15f0892cdc56b356e59145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02c1d2ff52f872ea2c15f0892cdc56b356e59145/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82a09b9a04cb72088e2ec0bd66810445efba5c2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/82a09b9a04cb72088e2ec0bd66810445efba5c2e", "html_url": "https://github.com/rust-lang/rust/commit/82a09b9a04cb72088e2ec0bd66810445efba5c2e"}], "stats": {"total": 146, "additions": 73, "deletions": 73}, "files": [{"sha": "10b5825cdd6242031a0ab653709f500785db090a", "filename": "src/test/run-pass/borrowck-assign-to-subfield.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fborrowck-assign-to-subfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fborrowck-assign-to-subfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-assign-to-subfield.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn main() {\n+pub fn main() {\n     struct A {\n         a: int,\n         w: B,"}, {"sha": "7402f0875086eb0699aa1c76e30c94ad912f4d27", "filename": "src/test/run-pass/borrowck-nested-calls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fborrowck-nested-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fborrowck-nested-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-nested-calls.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -24,7 +24,7 @@ impl Foo {\n     }\n }\n \n-fn main() {\n+pub fn main() {\n     let mut f = Foo {a: 22, b: 23};\n     f.inc_a(f.next_b());\n     assert_eq!(f.a, 22+23);"}, {"sha": "54c4e0dce8b9809868c5b70d07639810c5c0ea1e", "filename": "src/test/run-pass/builtin-superkinds-capabilities-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -28,7 +28,7 @@ fn foo<T: RequiresRequiresFreezeAndSend>(val: T, chan: Chan<T>) {\n     chan.send(val);\n }\n \n-fn main() {\n+pub fn main() {\n     let (p,c) = Chan::new();\n     foo(X(31337), c);\n     assert!(p.recv() == X(31337));"}, {"sha": "55edc1351902420a7a74203b9f89db9dfac06b57", "filename": "src/test/run-pass/builtin-superkinds-in-metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -26,4 +26,4 @@ impl <T:Freeze+Send> RequiresRequiresFreezeAndSend for X<T> { }\n \n impl <T:Pod> RequiresPod for X<T> { }\n \n-fn main() { }\n+pub fn main() { }"}, {"sha": "49e36ca5c63cdba6f28060a38121f5847d6ad9ac", "filename": "src/test/run-pass/cfg-macros-foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -32,6 +32,6 @@ mod foo {\n     }\n }\n \n-fn main() {\n+pub fn main() {\n     assert!(bar!())\n }"}, {"sha": "88244135ff73b9e2f7c29e7af4996f3b68df0a5f", "filename": "src/test/run-pass/cfg-macros-notfoo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -32,6 +32,6 @@ mod foo {\n     }\n }\n \n-fn main() {\n+pub fn main() {\n     assert!(!bar!())\n }"}, {"sha": "58f094c5987b57369d69752cac202585af22385e", "filename": "src/test/run-pass/cfg_inner_static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod cfg_inner_static;\n \n-fn main() {\n+pub fn main() {\n     cfg_inner_static::foo();\n }"}, {"sha": "496770bc325278bd6b31a2e5f7ecd42b2f0f86a5", "filename": "src/test/run-pass/cfgs-on-items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -25,7 +25,7 @@ fn foo2() -> int { 2 }\n fn foo2() -> int { 3 }\n \n \n-fn main() {\n+pub fn main() {\n     assert_eq!(1, foo1());\n     assert_eq!(3, foo2());\n }"}, {"sha": "54626f9ffffc9e0c00a7130613935eea350aa1b9", "filename": "src/test/run-pass/conditional-debug-macro-off.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -12,7 +12,7 @@\n // compile-flags: --cfg ndebug\n // exec-env:RUST_LOG=conditional-debug-macro-off=4\n \n-fn main() {\n+pub fn main() {\n     // only fails if debug! evaluates its argument.\n     debug!(\"{:?}\", { if true { fail!() } });\n }"}, {"sha": "0599d199dc09a40e4341c76e235aa97f301f567a", "filename": "src/test/run-pass/conditional-debug-macro-on.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -11,7 +11,7 @@\n // xfail-fast compile-flags directive doesn't work for check-fast\n // exec-env:RUST_LOG=conditional-debug-macro-on=4\n \n-fn main() {\n+pub fn main() {\n     // exits early if debug! evaluates its arguments, otherwise it\n     // will hit the fail.\n     debug!(\"{:?}\", { if true { return; } });"}, {"sha": "9d85689d4ad6144c8191c00cb3ee5184538d0fc7", "filename": "src/test/run-pass/const-cross-crate-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fconst-cross-crate-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fconst-cross-crate-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-cross-crate-const.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -16,7 +16,7 @@ static foo: &'static str = cci_const::foopy;\n static a: uint = cci_const::uint_val;\n static b: uint = cci_const::uint_expr + 5;\n \n-fn main() {\n+pub fn main() {\n     assert_eq!(a, 12);\n     let foo2 = a;\n     assert_eq!(foo2, cci_const::uint_val);"}, {"sha": "f6516d2b82615243fde24390cf293b73896ab84b", "filename": "src/test/run-pass/cross-crate-const-pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcross-crate-const-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcross-crate-const-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcross-crate-const-pat.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n \n extern mod cci_const;\n \n-fn main() {\n+pub fn main() {\n     let x = cci_const::uint_val;\n     match x {\n         cci_const::uint_val => {}"}, {"sha": "db767151bd492c754cc49cb6a2127b84b83b55a3", "filename": "src/test/run-pass/cross-crate-newtype-struct-pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcross-crate-newtype-struct-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fcross-crate-newtype-struct-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcross-crate-newtype-struct-pat.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n \n extern mod newtype_struct_xc;\n \n-fn main() {\n+pub fn main() {\n     let x = newtype_struct_xc::Au(21);\n     match x {\n         newtype_struct_xc::Au(n) => assert_eq!(n, 21)"}, {"sha": "ce51e2dcd7059b03e14496051d7f2c710b028366", "filename": "src/test/run-pass/deriving-global.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-global.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -39,4 +39,4 @@ mod submod {\n \n }\n \n-fn main() {}\n+pub fn main() {}"}, {"sha": "58ef613b7cd9ab9ec6121f91f919c8fb78df2052", "filename": "src/test/run-pass/deriving-rand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fderiving-rand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fderiving-rand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-rand.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -32,7 +32,7 @@ enum D {\n     D2 { x: (), y: () }\n }\n \n-fn main() {\n+pub fn main() {\n     // check there's no segfaults\n     20.times(|| {\n         rand::random::<A>();"}, {"sha": "c3c22cb26d27ab074fcd5fd7e6f6afe171238fa1", "filename": "src/test/run-pass/dupe-first-attr.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fdupe-first-attr.rc", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fdupe-first-attr.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdupe-first-attr.rc?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -26,4 +26,4 @@ mod hello;\n #[cfg(target_os = \"android\")]\n mod hello;\n \n-fn main() { }\n\\ No newline at end of file\n+pub fn main() { }"}, {"sha": "5a5ed2e02c126d841ec009f9566695e4deadf224", "filename": "src/test/run-pass/extern-calling-convention-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -15,6 +15,6 @@ extern mod extern_calling_convention;\n \n use extern_calling_convention::foo;\n \n-fn main() {\n+pub fn main() {\n     foo(1, 2, 3, 4);\n }"}, {"sha": "c1af0c2b3735bfc6a1d70cdf10a71122f621fc18", "filename": "src/test/run-pass/extern-fn-reachable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fextern-fn-reachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fextern-fn-reachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-fn-reachable.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -27,7 +27,7 @@ pub mod bar {\n \n #[no_mangle] pub fn fun5() {}\n \n-fn main() {\n+pub fn main() {\n     unsafe {\n         let a = DynamicLibrary::open(None).unwrap();\n         assert!(a.symbol::<int>(\"fun1\").is_ok());"}, {"sha": "17731d9ec9402d55813930385c8eb8baafb6ab36", "filename": "src/test/run-pass/extern-mod-ordering-exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -5,6 +5,6 @@ extern mod extern_mod_ordering_lib;\n \n use extern_mod_ordering_lib::extern_mod_ordering_lib;\n \n-fn main() {\n+pub fn main() {\n     extern_mod_ordering_lib::f();\n }"}, {"sha": "020db44bb87a612dca305faead033cae95c67068", "filename": "src/test/run-pass/issue-10626.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10626.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -16,7 +16,7 @@\n use std::os;\n use std::io::process;\n \n-fn main () {\n+pub fn main () {\n     let args = os::args();\n     if args.len() > 1 && args[1] == ~\"child\" {\n         for _ in range(0, 1000) {"}, {"sha": "046b2884a0e9cafd63befbbb478500db29294d04", "filename": "src/test/run-pass/issue-10806.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-10806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-10806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10806.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -38,7 +38,7 @@ pub mod waldo {\n     }\n }\n \n-fn main() {\n+pub fn main() {\n     let _x = baz::quux();\n     let _y = grault::garply();\n     let _z = waldo::plugh();"}, {"sha": "c0686d91fb90661b4390a87855709ff539de611e", "filename": "src/test/run-pass/issue-11085.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11085.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11085.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11085.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -43,7 +43,7 @@ enum Bar3 {\n     }\n }\n \n-fn main() {\n+pub fn main() {\n     let _f = Foo { foo: 3 };\n     let _f = Foo2 { foo: 3 };\n "}, {"sha": "da92428f25805149960227186727276f37ba52af", "filename": "src/test/run-pass/issue-11224.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11224.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,4 +13,4 @@\n \n extern mod unused = \"issue-11224\";\n \n-fn main() {}\n+pub fn main() {}"}, {"sha": "d8724b5ba8d907790cc32ceaa760c0c821ff2e02", "filename": "src/test/run-pass/issue-11225-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod foo = \"issue-11225-1\";\n \n-fn main() {\n+pub fn main() {\n     foo::foo(1);\n }"}, {"sha": "86e4232880cfbe22796c080ab9240cc5a73deaac", "filename": "src/test/run-pass/issue-11225-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod foo = \"issue-11225-2\";\n \n-fn main() {\n+pub fn main() {\n     foo::foo(1);\n }"}, {"sha": "c6b48ad636f11f5c26455c8b4e6d4d7a6fec8842", "filename": "src/test/run-pass/issue-3290.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-3290.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-3290.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3290.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // xfail-test FIXME #3290\n-fn main() {\n+pub fn main() {\n    let mut x = ~3;\n    x = x;\n    assert_eq!(*x, 3);"}, {"sha": "df8820c5623a285f0f75dc3290e1cb0050acd310", "filename": "src/test/run-pass/issue-3796.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-3796.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-3796.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3796.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -10,7 +10,7 @@\n \n // xfail-test FIXME #3796\n #[deny(dead_assignment)];\n-fn main() {\n+pub fn main() {\n     let mut x = 1;\n     let f: || -> int = || { x + 20 };\n     assert_eq!(f(), 21);"}, {"sha": "4a4c263f938f09b5bf88dd9715f004636108fad7", "filename": "src/test/run-pass/issue-4208.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4208.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4208.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4208.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -16,4 +16,4 @@ use numeric::{sin, Angle};\n \n fn foo<T, A:Angle<T>>(theta: A) -> T { sin(&theta) }\n \n-fn main() {}\n+pub fn main() {}"}, {"sha": "7a09741acb18059e97863220dc0abe9664de2fb7", "filename": "src/test/run-pass/issue-4241.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4241.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -127,5 +127,5 @@ fn query2(cmd: ~[~str]) -> Result {\n }\n \n \n-fn main() {\n+pub fn main() {\n }"}, {"sha": "9fd1a1c81ebc749975616925285221d6c34c51d2", "filename": "src/test/run-pass/issue-4252.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4252.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4252.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4252.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -31,7 +31,7 @@ impl<T: X> Drop for Z<T> {\n     }\n }\n \n-fn main() {\n+pub fn main() {\n     let y = Y;\n     let _z = Z{x: y};\n }"}, {"sha": "6c018b5cd2fa0f489839cbe5cab7456537a334a2", "filename": "src/test/run-pass/issue-4545.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4545.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -12,4 +12,4 @@\n // aux-build:issue-4545.rs\n \n extern mod somelib = \"issue-4545\";\n-fn main() { somelib::mk::<int>(); }\n+pub fn main() { somelib::mk::<int>(); }"}, {"sha": "9cef8b5685f42f11382590ba01a549c7a8918bd6", "filename": "src/test/run-pass/issue-5950.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-5950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-5950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5950.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -14,4 +14,4 @@ pub use local_alias = local;\n \n mod local { }\n \n-fn main() {}\n+pub fn main() {}"}, {"sha": "38934c6e7634dcd26abacd5f8cc32b3b0a83dabc", "filename": "src/test/run-pass/issue-6334.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-6334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-6334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6334.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -48,7 +48,7 @@ fn use_c<S:C, T:B+A>(s: &S, t: &T) -> uint {\n     s.combine(t)\n }\n \n-fn main() {\n+pub fn main() {\n     let foo = Foo;\n     let bar = Bar;\n     let r = use_c(&bar, &foo);"}, {"sha": "39afbd1c3ec55f54026d56991e1d734f73b0a086", "filename": "src/test/run-pass/issue-7178.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-7178.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-7178.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7178.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod cross_crate_self = \"issue-7178\";\n \n-fn main() {\n+pub fn main() {\n     let _ = cross_crate_self::Foo::new(&1i);\n }"}, {"sha": "5ad355dbd4c528cb3788f29d0c7a8d834b5eced6", "filename": "src/test/run-pass/issue-8044.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8044.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -14,6 +14,6 @@\n extern mod minimal = \"issue-8044\";\n use minimal::{BTree, leaf};\n \n-fn main() {\n+pub fn main() {\n     BTree::<int> { node: leaf(1) };\n }"}, {"sha": "3533f336b428d1e65dce0b01b23d9909b583ab1f", "filename": "src/test/run-pass/issue-8259.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8259.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -14,4 +14,4 @@\n extern mod other = \"issue-8259\";\n static a: other::Foo<'static> = other::A;\n \n-fn main() {}\n+pub fn main() {}"}, {"sha": "fc7e24ccd7afc5e8e523c53e2bcc0bfe32d899f6", "filename": "src/test/run-pass/issue-8498.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-8498.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-8498.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8498.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -10,7 +10,7 @@\n \n // xfail-test\n \n-fn main() {\n+pub fn main() {\n // This is ok\n     match &[(~5,~7)] {\n         ps => {"}, {"sha": "d3455af4e2c744d54eea8d58993b60843a92e672", "filename": "src/test/run-pass/issue-9188.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-9188.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-9188.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9188.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n \n extern mod issue_9188;\n \n-fn main() {\n+pub fn main() {\n     let a = issue_9188::bar();\n     let b = issue_9188::foo::<int>();\n     assert_eq!(*a, *b);"}, {"sha": "6a604058663e14494faa61d5170fcb9216a30ea4", "filename": "src/test/run-pass/issue-9906.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9906.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n \n extern mod testmod = \"issue-9906\";\n \n-fn main() {\n+pub fn main() {\n     testmod::foo();\n     testmod::FooBar::new(1);\n }"}, {"sha": "f23729537eb03deab7cb432d8279613997a2aa6e", "filename": "src/test/run-pass/issue-9968.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9968.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -15,7 +15,7 @@ extern mod lib = \"issue-9968\";\n \n use lib::{Trait, Struct};\n \n-fn main()\n+pub fn main()\n {\n     Struct::init().test();\n }"}, {"sha": "3fbdf57e3488fa2173ffe81e950fde03cf0379c1", "filename": "src/test/run-pass/issue_9155.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue_9155.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -15,6 +15,6 @@ extern mod issue_9155;\n \n struct Baz;\n \n-fn main() {\n+pub fn main() {\n     issue_9155::Foo::new(Baz);\n }"}, {"sha": "bbfbdb1cdf0e8ffc7cff3b9c90b39e9280344162", "filename": "src/test/run-pass/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -15,7 +15,7 @@\n \n extern mod foo = \"linkage-visibility\";\n \n-fn main() {\n+pub fn main() {\n     foo::test();\n     foo::foo2::<int>();\n     foo::foo();"}, {"sha": "98fe46357ba37727cd601a47259941256251cbf0", "filename": "src/test/run-pass/logging-enabled-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -14,7 +14,7 @@\n \n use std::logging;\n \n-fn main() {\n+pub fn main() {\n     if log_enabled!(logging::DEBUG) {\n         fail!(\"what?! debugging?\");\n     }"}, {"sha": "43f039569b2abe770dafc5689163b96a5987ed60", "filename": "src/test/run-pass/logging-enabled.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n \n use std::logging;\n \n-fn main() {\n+pub fn main() {\n     if log_enabled!(logging::DEBUG) {\n         fail!(\"what?! debugging?\");\n     }"}, {"sha": "3e6978a6fa73bc5a6817a116633bb1cf0c0e0825", "filename": "src/test/run-pass/logging-right-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -24,7 +24,7 @@\n \n extern mod logging_right_crate;\n \n-fn main() {\n+pub fn main() {\n     // this function fails if logging is turned on\n     logging_right_crate::foo::<int>();\n }"}, {"sha": "7bbe7f72a2c4814a395acd116cbb6a7c2c03bbda", "filename": "src/test/run-pass/logging_before_rt_started.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -17,4 +17,4 @@\n // this test will trigger \"output during runtime initialization\" to make sure\n // that the bug isn't re-introduced.\n \n-fn main() {}\n+pub fn main() {}"}, {"sha": "6d6d8f2cc21d986da64c50254c12a80cfe491215", "filename": "src/test/run-pass/macro-with-attrs1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -19,6 +19,6 @@ macro_rules! foo( () => (1) )\n #[cfg(not(foo))]\n macro_rules! foo( () => (2) )\n \n-fn main() {\n+pub fn main() {\n     assert_eq!(foo!(), 1);\n }"}, {"sha": "7dbd895b47693e06cf11893fd131f368fe1b6736", "filename": "src/test/run-pass/native-print-no-runtime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n #[no_uv];\n \n #[start]\n-fn main(_: int, _: **u8) -> int {\n+pub fn main(_: int, _: **u8) -> int {\n     println!(\"hello\");\n     0\n }"}, {"sha": "d4341ccf7dc6fde1339c95c86136ddcc48c1355e", "filename": "src/test/run-pass/no-std-xcrate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fno-std-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fno-std-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-std-xcrate.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -16,6 +16,6 @@\n \n extern mod no_std_crate;\n \n-fn main() {\n+pub fn main() {\n     no_std_crate::foo();\n }"}, {"sha": "f164d8609fcf8d403887cc574faba140688f079b", "filename": "src/test/run-pass/no-std-xcrate2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -29,7 +29,7 @@ pub mod linkhack {\n }\n \n #[start]\n-fn main(_: int, _: **u8, _: *u8) -> int {\n+pub fn main(_: int, _: **u8, _: *u8) -> int {\n     no_std_crate::foo();\n     0\n }"}, {"sha": "8c3f889c176cd97c4b59c9e8b4b12c323e11c293", "filename": "src/test/run-pass/once-move-out-on-heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -20,7 +20,7 @@ fn foo(blk: proc()) {\n     blk();\n }\n \n-fn main() {\n+pub fn main() {\n     let x = arc::Arc::new(true);\n     do foo {\n         assert!(*x.get());"}, {"sha": "07dd5175a0fae1ae50f328b87cbb754a9c0d1d4a", "filename": "src/test/run-pass/once-move-out-on-stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -20,7 +20,7 @@ fn foo(blk: once ||) {\n     blk();\n }\n \n-fn main() {\n+pub fn main() {\n     let x = arc::Arc::new(true);\n     foo(|| {\n         assert!(*x.get());"}, {"sha": "5e45386353b2bf08ab4e722816d21d95eb3f84ca", "filename": "src/test/run-pass/osx-frameworks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fosx-frameworks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fosx-frameworks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fosx-frameworks.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -17,7 +17,7 @@ extern {\n }\n \n #[cfg(target_os = \"macos\")]\n-fn main() {\n+pub fn main() {\n     unsafe { CFRunLoopGetTypeID(); }\n }\n "}, {"sha": "336df24586a9fbe84b46e44d8d4698dfda92cc54", "filename": "src/test/run-pass/packed-struct-size-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -5,6 +5,6 @@ extern mod packed;\n \n use std::mem;\n \n-fn main() {\n+pub fn main() {\n     assert_eq!(mem::size_of::<packed::S>(), 5);\n }"}, {"sha": "a61b30dd480e9588dbe3aeae4f4d0fe6763bb44b", "filename": "src/test/run-pass/priv-impl-prim-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n \n extern mod bar = \"priv-impl-prim-ty\";\n \n-fn main() {\n+pub fn main() {\n     bar::frob(1i);\n \n }"}, {"sha": "6e0e1d6ef9e2ea2da6afb5baa8b6b4c8354f1947", "filename": "src/test/run-pass/privacy-reexport.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fprivacy-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fprivacy-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprivacy-reexport.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod privacy_reexport;\n \n-fn main() {\n+pub fn main() {\n     privacy_reexport::bar::frob();\n }"}, {"sha": "1cd8e80ba93d78b816ee27187debbb4f776c9b40", "filename": "src/test/run-pass/reexport-should-still-link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod foo = \"reexport-should-still-link\";\n \n-fn main() {\n+pub fn main() {\n     foo::bar();\n }"}, {"sha": "1e5dfe21cbe8844d567f6c23ee6db0b8dcc359d0", "filename": "src/test/run-pass/rename-directory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Frename-directory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Frename-directory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frename-directory.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -55,4 +55,4 @@ fn rename_directory() {\n     }\n }\n \n-fn main() { rename_directory() }\n+pub fn main() { rename_directory() }"}, {"sha": "dc74e9fb47051ade83856c1f45cbae9e95aea7f0", "filename": "src/test/run-pass/signal-exit-status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,7 +13,7 @@\n use std::{os, run};\n use std::io::process;\n \n-fn main() {\n+pub fn main() {\n     let args = os::args();\n     if args.len() >= 2 && args[1] == ~\"signal\" {\n         // Raise a segfault."}, {"sha": "11cef9d480a4d5ad62b85fd03b082a26ca261270", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -32,7 +32,7 @@ extern \"rust-intrinsic\" {\n }\n \n #[start]\n-fn main(_: int, _: **u8, _: *u8) -> int {\n+pub fn main(_: int, _: **u8, _: *u8) -> int {\n     unsafe {\n         let (ptr, _): (*u8, uint) = transmute(\"Hello!\");\n         puts(ptr);"}, {"sha": "c14ef147bc726df45665ec9ffc23dd2b395308ca", "filename": "src/test/run-pass/spawning-with-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -15,7 +15,7 @@\n \n use std::task;\n \n-fn main() {\n+pub fn main() {\n     let mut t = task::task();\n     t.spawn(proc() ());\n }"}, {"sha": "4c72c3075ff8eaa8b1e24476760607b8397c9e49", "filename": "src/test/run-pass/static-function-pointer-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -14,7 +14,7 @@ extern mod aux = \"static-function-pointer-aux\";\n \n fn f(x: int) -> int { x }\n \n-fn main() {\n+pub fn main() {\n     assert_eq!(aux::F(42), -42);\n     unsafe {\n         assert_eq!(aux::MutF(42), -42);"}, {"sha": "dc56cdf3a34ea3136de81d26deb17f44d807d837", "filename": "src/test/run-pass/struct_variant_xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -14,6 +14,6 @@ extern mod struct_variant_xc_aux;\n \n use struct_variant_xc_aux::Variant;\n \n-fn main() {\n+pub fn main() {\n     let _ = Variant { arg: 1 };\n }"}, {"sha": "5f85ac1bd5577c326be094a82949bd6fbdffa419", "filename": "src/test/run-pass/syntax-extension-cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -11,7 +11,7 @@\n // xfail-fast compile-flags doesn't work with fast-check\n // compile-flags: --cfg foo --cfg bar(baz) --cfg qux=\"foo\"\n \n-fn main() {\n+pub fn main() {\n     // check\n     if ! cfg!(foo) { fail!() }\n     if   cfg!(not(foo)) { fail!() }"}, {"sha": "eb055342acd24ee52337c4b01552186ddce85882", "filename": "src/test/run-pass/tempfile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftempfile.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -141,7 +141,7 @@ fn in_tmpdir(f: ||) {\n     f();\n }\n \n-fn main() {\n+pub fn main() {\n     in_tmpdir(test_tempdir);\n     in_tmpdir(test_rm_tempdir);\n     in_tmpdir(recursive_mkdir_rel);"}, {"sha": "b99e6a03bcb3bae24ec5b5bd182c7ab635e2bbc8", "filename": "src/test/run-pass/trait-bounds-in-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -60,7 +60,7 @@ impl Pet for Goldfyshe {\n     fn of_good_pedigree(&self) -> bool { self.swim_speed >= 500 }\n }\n \n-fn main() {\n+pub fn main() {\n     let catte = Catte { num_whiskers: 7, name: ~\"alonzo_church\" };\n     let dogge1 = Dogge { bark_decibels: 100, tricks_known: 42, name: ~\"alan_turing\" };\n     let dogge2 = Dogge { bark_decibels: 55,  tricks_known: 11, name: ~\"albert_einstein\" };"}, {"sha": "58066adc4bd6f6b2c2bdf497c197771a4aa5a2e7", "filename": "src/test/run-pass/trait-default-method-xc-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -9,7 +9,7 @@ use aux::A;\n use aux2::{a_struct, welp};\n \n \n-fn main () {\n+pub fn main () {\n \n     let a = a_struct { x: 0 };\n     let b = a_struct { x: 1 };"}, {"sha": "3323b3c952ab9a75d309abe7747bb22f872097cb", "filename": "src/test/run-pass/trait-default-method-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -44,7 +44,7 @@ impl TestEquality for stuff::thing {\n }\n \n \n-fn main () {\n+pub fn main () {\n     // Some tests of random things\n     f(0);\n "}, {"sha": "55360608bca1d6970c9fc678291a9392b4bd42df", "filename": "src/test/run-pass/tydesc-name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftydesc-name.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -16,7 +16,7 @@ struct Foo<T> {\n     x: T\n }\n \n-fn main() {\n+pub fn main() {\n     unsafe {\n         assert_eq!((*get_tydesc::<int>()).name, \"int\");\n         assert_eq!((*get_tydesc::<~[int]>()).name, \"~[int]\");"}, {"sha": "d7feb4f4a012be5a2505114b1efa3cb87160dbea", "filename": "src/test/run-pass/typeid-intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -21,7 +21,7 @@ use std::unstable::intrinsics::TypeId;\n struct A;\n struct Test;\n \n-fn main() {\n+pub fn main() {\n     unsafe {\n         assert_eq!(intrinsics::type_id::<other1::A>(), other1::id_A());\n         assert_eq!(intrinsics::type_id::<other1::B>(), other1::id_B());"}, {"sha": "239416adfe0d4b2f38df226404f58a5f5b2bf588", "filename": "src/test/run-pass/use_inline_dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fuse_inline_dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fuse_inline_dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse_inline_dtor.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod inline_dtor;\n \n-fn main() {\n+pub fn main() {\n     let _x = inline_dtor::Foo;\n }"}, {"sha": "872c94e05fd55508f870ce10b641995b9e966add", "filename": "src/test/run-pass/xcrate-address-insignificant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -13,6 +13,6 @@\n \n extern mod foo = \"xcrate_address_insignificant\";\n \n-fn main() {\n+pub fn main() {\n     assert_eq!(foo::foo::<f64>(), foo::bar());\n }"}, {"sha": "10f3a2b037f2754489f0cf7f14d06f8c1ab381a9", "filename": "src/test/run-pass/xcrate-unit-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fxcrate-unit-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c1d2ff52f872ea2c15f0892cdc56b356e59145/src%2Ftest%2Frun-pass%2Fxcrate-unit-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fxcrate-unit-struct.rs?ref=02c1d2ff52f872ea2c15f0892cdc56b356e59145", "patch": "@@ -21,7 +21,7 @@ static s4: xcrate_unit_struct::Unit = xcrate_unit_struct::Argument(s1);\n fn f1(_: xcrate_unit_struct::Struct) {}\n fn f2(_: xcrate_unit_struct::Unit) {}\n \n-fn main() {\n+pub fn main() {\n     f1(xcrate_unit_struct::Struct);\n     f2(xcrate_unit_struct::Unit);\n     f2(xcrate_unit_struct::Argument(xcrate_unit_struct::Struct));"}]}