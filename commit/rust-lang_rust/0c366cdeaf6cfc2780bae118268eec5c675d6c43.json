{"sha": "0c366cdeaf6cfc2780bae118268eec5c675d6c43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMzY2Y2RlYWY2Y2ZjMjc4MGJhZTExODI2OGVlYzVjNjc1ZDZjNDM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2020-01-20T14:56:06Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2020-01-23T12:15:15Z"}, "message": "Make ExportedSymbols type more local because it's not supposed to be\nused outside of the LLVM backend.", "tree": {"sha": "a1ffc7588601ae9325df807bd8d6af1c57732778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1ffc7588601ae9325df807bd8d6af1c57732778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c366cdeaf6cfc2780bae118268eec5c675d6c43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c366cdeaf6cfc2780bae118268eec5c675d6c43", "html_url": "https://github.com/rust-lang/rust/commit/0c366cdeaf6cfc2780bae118268eec5c675d6c43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c366cdeaf6cfc2780bae118268eec5c675d6c43/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29951edbdfcb3e65e689e43c997a98d8aad5e273", "url": "https://api.github.com/repos/rust-lang/rust/commits/29951edbdfcb3e65e689e43c997a98d8aad5e273", "html_url": "https://github.com/rust-lang/rust/commit/29951edbdfcb3e65e689e43c997a98d8aad5e273"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "12b826332454ae5aeacd62ae1e5c56c2505e5287", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c366cdeaf6cfc2780bae118268eec5c675d6c43/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c366cdeaf6cfc2780bae118268eec5c675d6c43/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=0c366cdeaf6cfc2780bae118268eec5c675d6c43", "patch": "@@ -17,8 +17,6 @@ use rustc_hir::Node;\n use rustc_index::vec::IndexVec;\n use syntax::expand::allocator::ALLOCATOR_METHODS;\n \n-pub type ExportedSymbols = FxHashMap<CrateNum, Arc<Vec<(String, SymbolExportLevel)>>>;\n-\n pub fn threshold(tcx: TyCtxt<'_>) -> SymbolExportLevel {\n     crates_export_threshold(&tcx.sess.crate_types.borrow())\n }\n@@ -96,7 +94,7 @@ fn reachable_non_generics_provider(\n                     if !generics.requires_monomorphization(tcx) &&\n                         // Functions marked with #[inline] are only ever codegened\n                         // with \"internal\" linkage and are never exported.\n-                        !Instance::mono(tcx, def_id).def.requires_local(tcx)\n+                        !Instance::mono(tcx, def_id).def.generates_cgu_internal_copy(tcx)\n                     {\n                         Some(def_id)\n                     } else {"}, {"sha": "841827d15fef41c52d37affe57374f3055a447d1", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0c366cdeaf6cfc2780bae118268eec5c675d6c43/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c366cdeaf6cfc2780bae118268eec5c675d6c43/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=0c366cdeaf6cfc2780bae118268eec5c675d6c43", "patch": "@@ -2,7 +2,8 @@ use super::command::Command;\n use super::link::{self, get_linker, remove};\n use super::linker::LinkerInfo;\n use super::lto::{self, SerializedModule};\n-use super::symbol_export::{symbol_name_for_instance_in_crate, ExportedSymbols};\n+use super::symbol_export::symbol_name_for_instance_in_crate;\n+\n use crate::{\n     CachedModuleCodegen, CodegenResults, CompiledModule, CrateInfo, ModuleCodegen, ModuleKind,\n     RLIB_BYTECODE_EXTENSION,\n@@ -12,6 +13,7 @@ use crate::traits::*;\n use jobserver::{Acquired, Client};\n use rustc::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n use rustc::middle::cstore::EncodedMetadata;\n+use rustc::middle::exported_symbols::SymbolExportLevel;\n use rustc::session::config::{\n     self, Lto, OutputFilenames, OutputType, Passes, Sanitizer, SwitchWithOptPath,\n };\n@@ -205,6 +207,8 @@ impl<B: WriteBackendMethods> Clone for TargetMachineFactory<B> {\n     }\n }\n \n+pub type ExportedSymbols = FxHashMap<CrateNum, Arc<Vec<(String, SymbolExportLevel)>>>;\n+\n /// Additional resources used by optimize_and_codegen (not module specific)\n #[derive(Clone)]\n pub struct CodegenContext<B: WriteBackendMethods> {"}]}