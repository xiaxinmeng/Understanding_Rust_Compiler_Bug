{"sha": "3f92ff34b5a2fe8dd1a32aa27d437519e63782f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmOTJmZjM0YjVhMmZlOGRkMWEzMmFhMjdkNDM3NTE5ZTYzNzgyZjA=", "commit": {"author": {"name": "Mike Boutin", "email": "mike.boutin@gmail.com", "date": "2018-08-04T12:26:37Z"}, "committer": {"name": "Mike Boutin", "email": "mike.boutin@gmail.com", "date": "2018-08-05T14:43:04Z"}, "message": "Change rustdoc style so fully qualified names do not overlap src links\n\nA type's fully qualified name will now wrap once it gets to the\n`[-][src]` link aligned against the right edge of the content area.\nPreviously the two would overlap and the name would only wrap when\nhitting the edge of the content area. The `[-][src]` link will main at\nthe top of the header.", "tree": {"sha": "99ca159ec991b567d79483b49cfca5c094e5c611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ca159ec991b567d79483b49cfca5c094e5c611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0", "html_url": "https://github.com/rust-lang/rust/commit/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0/comments", "author": {"login": "iliekturtles", "id": 5081378, "node_id": "MDQ6VXNlcjUwODEzNzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5081378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iliekturtles", "html_url": "https://github.com/iliekturtles", "followers_url": "https://api.github.com/users/iliekturtles/followers", "following_url": "https://api.github.com/users/iliekturtles/following{/other_user}", "gists_url": "https://api.github.com/users/iliekturtles/gists{/gist_id}", "starred_url": "https://api.github.com/users/iliekturtles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iliekturtles/subscriptions", "organizations_url": "https://api.github.com/users/iliekturtles/orgs", "repos_url": "https://api.github.com/users/iliekturtles/repos", "events_url": "https://api.github.com/users/iliekturtles/events{/privacy}", "received_events_url": "https://api.github.com/users/iliekturtles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iliekturtles", "id": 5081378, "node_id": "MDQ6VXNlcjUwODEzNzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5081378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iliekturtles", "html_url": "https://github.com/iliekturtles", "followers_url": "https://api.github.com/users/iliekturtles/followers", "following_url": "https://api.github.com/users/iliekturtles/following{/other_user}", "gists_url": "https://api.github.com/users/iliekturtles/gists{/gist_id}", "starred_url": "https://api.github.com/users/iliekturtles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iliekturtles/subscriptions", "organizations_url": "https://api.github.com/users/iliekturtles/orgs", "repos_url": "https://api.github.com/users/iliekturtles/repos", "events_url": "https://api.github.com/users/iliekturtles/events{/privacy}", "received_events_url": "https://api.github.com/users/iliekturtles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f9ac89d11a2afaeaa029738b38142124684c89b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9ac89d11a2afaeaa029738b38142124684c89b", "html_url": "https://github.com/rust-lang/rust/commit/9f9ac89d11a2afaeaa029738b38142124684c89b"}], "stats": {"total": 67, "additions": 32, "deletions": 35}, "files": [{"sha": "470aa2c10e977898f31b54d6c95d3c17c68dc33c", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=3f92ff34b5a2fe8dd1a32aa27d437519e63782f0", "patch": "@@ -1613,14 +1613,14 @@ impl fmt::Display for AllTypes {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         write!(f,\n \"<h1 class='fqn'>\\\n-     <span class='in-band'>List of all items</span>\\\n      <span class='out-of-band'>\\\n          <span id='render-detail'>\\\n              <a id=\\\"toggle-all-docs\\\" href=\\\"javascript:void(0)\\\" title=\\\"collapse all docs\\\">\\\n                  [<span class='inner'>&#x2212;</span>]\\\n              </a>\\\n          </span>\n      </span>\n+     <span class='in-band'>List of all items</span>\\\n </h1>\")?;\n         print_entries(f, &self.structs, \"Structs\", \"structs\")?;\n         print_entries(f, &self.enums, \"Enums\", \"enums\")?;\n@@ -2068,7 +2068,34 @@ impl<'a> fmt::Display for Item<'a> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         debug_assert!(!self.item.is_stripped());\n         // Write the breadcrumb trail header for the top\n-        write!(fmt, \"<h1 class='fqn'><span class='in-band'>\")?;\n+        write!(fmt, \"<h1 class='fqn'><span class='out-of-band'>\")?;\n+        if let Some(version) = self.item.stable_since() {\n+            write!(fmt, \"<span class='since' title='Stable since Rust version {0}'>{0}</span>\",\n+                   version)?;\n+        }\n+        write!(fmt,\n+               \"<span id='render-detail'>\\\n+                   <a id=\\\"toggle-all-docs\\\" href=\\\"javascript:void(0)\\\" \\\n+                      title=\\\"collapse all docs\\\">\\\n+                       [<span class='inner'>&#x2212;</span>]\\\n+                   </a>\\\n+               </span>\")?;\n+\n+        // Write `src` tag\n+        //\n+        // When this item is part of a `pub use` in a downstream crate, the\n+        // [src] link in the downstream documentation will actually come back to\n+        // this page, and this link will be auto-clicked. The `id` attribute is\n+        // used to find the link to auto-click.\n+        if self.cx.shared.include_sources && !self.item.is_primitive() {\n+            if let Some(l) = self.src_href() {\n+                write!(fmt, \"<a class='srclink' href='{}' title='{}'>[src]</a>\",\n+                       l, \"goto source code\")?;\n+            }\n+        }\n+\n+        write!(fmt, \"</span>\")?; // out-of-band\n+        write!(fmt, \"<span class='in-band'>\")?;\n         match self.item.inner {\n             clean::ModuleItem(ref m) => if m.is_crate {\n                     write!(fmt, \"Crate \")?;\n@@ -2105,34 +2132,7 @@ impl<'a> fmt::Display for Item<'a> {\n         write!(fmt, \"<a class=\\\"{}\\\" href=''>{}</a>\",\n                self.item.type_(), self.item.name.as_ref().unwrap())?;\n \n-        write!(fmt, \"</span>\")?; // in-band\n-        write!(fmt, \"<span class='out-of-band'>\")?;\n-        if let Some(version) = self.item.stable_since() {\n-            write!(fmt, \"<span class='since' title='Stable since Rust version {0}'>{0}</span>\",\n-                   version)?;\n-        }\n-        write!(fmt,\n-               \"<span id='render-detail'>\\\n-                   <a id=\\\"toggle-all-docs\\\" href=\\\"javascript:void(0)\\\" \\\n-                      title=\\\"collapse all docs\\\">\\\n-                       [<span class='inner'>&#x2212;</span>]\\\n-                   </a>\\\n-               </span>\")?;\n-\n-        // Write `src` tag\n-        //\n-        // When this item is part of a `pub use` in a downstream crate, the\n-        // [src] link in the downstream documentation will actually come back to\n-        // this page, and this link will be auto-clicked. The `id` attribute is\n-        // used to find the link to auto-click.\n-        if self.cx.shared.include_sources && !self.item.is_primitive() {\n-            if let Some(l) = self.src_href() {\n-                write!(fmt, \"<a class='srclink' href='{}' title='{}'>[src]</a>\",\n-                       l, \"goto source code\")?;\n-            }\n-        }\n-\n-        write!(fmt, \"</span></h1>\")?; // out-of-band\n+        write!(fmt, \"</span></h1>\")?; // in-band\n \n         match self.item.inner {\n             clean::ModuleItem(ref m) =>"}, {"sha": "57a111daa897718b5920d831350a3a228f992716", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/3f92ff34b5a2fe8dd1a32aa27d437519e63782f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=3f92ff34b5a2fe8dd1a32aa27d437519e63782f0", "patch": "@@ -97,7 +97,7 @@ h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod):not(.important), h4\n h1.fqn {\n \tborder-bottom: 1px dashed;\n \tmargin-top: 0;\n-\tposition: relative;\n+\toverflow: auto;\n }\n h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n \tborder-bottom: 1px solid;\n@@ -352,14 +352,11 @@ nav.sub {\n }\n \n .content .out-of-band {\n+\tfloat: right;\n \tfont-size: 23px;\n \tmargin: 0px;\n \tpadding: 0px;\n-\ttext-align: right;\n-\tdisplay: inline-block;\n \tfont-weight: normal;\n-\tposition: absolute;\n-\tright: 0;\n }\n \n h3.impl > .out-of-band {"}]}