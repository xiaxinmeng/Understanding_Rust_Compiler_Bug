{"sha": "b06130762ed75f52da7c22979c61c597ced667c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNjEzMDc2MmVkNzVmNTJkYTdjMjI5NzljNjFjNTk3Y2VkNjY3YzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-10T17:15:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-10T17:15:31Z"}, "message": "Auto merge of #1849 - Aaron1011:rustup-track-caller, r=RalfJung\n\nRustup for `#[track_caller]` trait object changes\n\nChange test to assert that we get the correct location\neven through a trait object call.", "tree": {"sha": "35b80ded3a56a54ed14caaa14e3be8a1e5b3cba0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35b80ded3a56a54ed14caaa14e3be8a1e5b3cba0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b06130762ed75f52da7c22979c61c597ced667c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b06130762ed75f52da7c22979c61c597ced667c6", "html_url": "https://github.com/rust-lang/rust/commit/b06130762ed75f52da7c22979c61c597ced667c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b06130762ed75f52da7c22979c61c597ced667c6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cf6550cc158dfeb69440b84f80b65e0eca66082", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf6550cc158dfeb69440b84f80b65e0eca66082", "html_url": "https://github.com/rust-lang/rust/commit/3cf6550cc158dfeb69440b84f80b65e0eca66082"}, {"sha": "811423e76126c7c60651ced211241dd2cc796a05", "url": "https://api.github.com/repos/rust-lang/rust/commits/811423e76126c7c60651ced211241dd2cc796a05", "html_url": "https://github.com/rust-lang/rust/commit/811423e76126c7c60651ced211241dd2cc796a05"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "aee5d6ee3ba2e45bab6b15eef9edb84d78c4d092", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b06130762ed75f52da7c22979c61c597ced667c6/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/b06130762ed75f52da7c22979c61c597ced667c6/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=b06130762ed75f52da7c22979c61c597ced667c6", "patch": "@@ -1 +1 @@\n-c5e344f7747dbd7e7d4b209e3c480deb5979a56f\n+3982eb35cabe3a99194d768d34a92347967c3fa2"}, {"sha": "d1115faa8f756bd6750da15d1863397a94a4a6ad", "filename": "tests/run-pass/track-caller-attribute.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b06130762ed75f52da7c22979c61c597ced667c6/tests%2Frun-pass%2Ftrack-caller-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b06130762ed75f52da7c22979c61c597ced667c6/tests%2Frun-pass%2Ftrack-caller-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftrack-caller-attribute.rs?ref=b06130762ed75f52da7c22979c61c597ced667c6", "patch": "@@ -38,23 +38,31 @@ fn test_fn_ptr() {\n fn test_trait_obj() {\n     trait Tracked {\n         #[track_caller]\n-        fn handle(&self) { // `fn` here is what the `location` should point at.\n-            let location = std::panic::Location::caller();\n-            assert_eq!(location.file(), file!());\n-            // we only call this via trait object, so the def site should *always* be returned\n-            assert_eq!(location.line(), line!() - 4);\n-            assert_eq!(location.column(), 9);\n+        fn handle(&self) -> &'static Location<'static> {\n+            std::panic::Location::caller()\n         }\n     }\n \n     impl Tracked for () {}\n     impl Tracked for u8 {}\n \n+    // Test that we get the correct location\n+    // even with a call through a trait object\n+\n     let tracked: &dyn Tracked = &5u8;\n-    tracked.handle();\n+    let location = tracked.handle();\n+    let expected_line = line!() - 1;\n+    assert_eq!(location.file(), file!());\n+    assert_eq!(location.line(), expected_line);\n+    assert_eq!(location.column(), 28);\n \n     const TRACKED: &dyn Tracked = &();\n-    TRACKED.handle();\n+    let location = TRACKED.handle();\n+    let expected_line = line!() - 1;\n+    assert_eq!(location.file(), file!());\n+    assert_eq!(location.line(), expected_line);\n+    assert_eq!(location.column(), 28);\n+\n }\n \n fn main() {"}]}