{"sha": "aafe7d89f0643e40f6f60b4bd4dd742041120227", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZmU3ZDg5ZjA2NDNlNDBmNmY2MGI0YmQ0ZGQ3NDIwNDExMjAyMjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-19T07:49:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-19T07:49:32Z"}, "message": "Auto merge of #49108 - SimonSapin:sip, r=TimNN\n\nRemove or hide deprecated unstable SipHasher{13,24}\n\nDeprecated since Rust 1.13.0.", "tree": {"sha": "90ae2c3c599a1f22b95880cf941e05faa908361b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90ae2c3c599a1f22b95880cf941e05faa908361b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aafe7d89f0643e40f6f60b4bd4dd742041120227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aafe7d89f0643e40f6f60b4bd4dd742041120227", "html_url": "https://github.com/rust-lang/rust/commit/aafe7d89f0643e40f6f60b4bd4dd742041120227", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aafe7d89f0643e40f6f60b4bd4dd742041120227/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15add366faac554db51244d1e27e4d10a08ab6e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/15add366faac554db51244d1e27e4d10a08ab6e8", "html_url": "https://github.com/rust-lang/rust/commit/15add366faac554db51244d1e27e4d10a08ab6e8"}, {"sha": "89ecb0d5424f4eb72de70c0b7b0c3fb819273728", "url": "https://api.github.com/repos/rust-lang/rust/commits/89ecb0d5424f4eb72de70c0b7b0c3fb819273728", "html_url": "https://github.com/rust-lang/rust/commit/89ecb0d5424f4eb72de70c0b7b0c3fb819273728"}], "stats": {"total": 78, "additions": 23, "deletions": 55}, "files": [{"sha": "ab714645675af153fb5473534cb4a0177694319a", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=aafe7d89f0643e40f6f60b4bd4dd742041120227", "patch": "@@ -99,9 +99,10 @@ use mem;\n #[allow(deprecated)]\n pub use self::sip::SipHasher;\n \n-#[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n+#[unstable(feature = \"hashmap_internals\", issue = \"0\")]\n #[allow(deprecated)]\n-pub use self::sip::{SipHasher13, SipHasher24};\n+#[doc(hidden)]\n+pub use self::sip::SipHasher13;\n \n mod sip;\n "}, {"sha": "e3bdecdc4b1fd714ede210948c373d048bf30abe", "filename": "src/libcore/hash/sip.rs", "status": "modified", "additions": 12, "deletions": 44, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fsip.rs?ref=aafe7d89f0643e40f6f60b4bd4dd742041120227", "patch": "@@ -23,22 +23,23 @@ use mem;\n /// (eg. `collections::HashMap` uses it by default).\n ///\n /// See: <https://131002.net/siphash>\n-#[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n+#[unstable(feature = \"hashmap_internals\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.13.0\",\n                    reason = \"use `std::collections::hash_map::DefaultHasher` instead\")]\n #[derive(Debug, Clone, Default)]\n+#[doc(hidden)]\n pub struct SipHasher13 {\n     hasher: Hasher<Sip13Rounds>,\n }\n \n /// An implementation of SipHash 2-4.\n ///\n /// See: <https://131002.net/siphash/>\n-#[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n+#[unstable(feature = \"hashmap_internals\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.13.0\",\n                    reason = \"use `std::collections::hash_map::DefaultHasher` instead\")]\n #[derive(Debug, Clone, Default)]\n-pub struct SipHasher24 {\n+struct SipHasher24 {\n     hasher: Hasher<Sip24Rounds>,\n }\n \n@@ -156,14 +157,16 @@ impl SipHasher {\n     #[rustc_deprecated(since = \"1.13.0\",\n                        reason = \"use `std::collections::hash_map::DefaultHasher` instead\")]\n     pub fn new_with_keys(key0: u64, key1: u64) -> SipHasher {\n-        SipHasher(SipHasher24::new_with_keys(key0, key1))\n+        SipHasher(SipHasher24 {\n+            hasher: Hasher::new_with_keys(key0, key1)\n+        })\n     }\n }\n \n impl SipHasher13 {\n     /// Creates a new `SipHasher13` with the two initial keys set to 0.\n     #[inline]\n-    #[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n+    #[unstable(feature = \"hashmap_internals\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.13.0\",\n                        reason = \"use `std::collections::hash_map::DefaultHasher` instead\")]\n     pub fn new() -> SipHasher13 {\n@@ -172,7 +175,7 @@ impl SipHasher13 {\n \n     /// Creates a `SipHasher13` that is keyed off the provided keys.\n     #[inline]\n-    #[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n+    #[unstable(feature = \"hashmap_internals\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.13.0\",\n                        reason = \"use `std::collections::hash_map::DefaultHasher` instead\")]\n     pub fn new_with_keys(key0: u64, key1: u64) -> SipHasher13 {\n@@ -182,28 +185,6 @@ impl SipHasher13 {\n     }\n }\n \n-impl SipHasher24 {\n-    /// Creates a new `SipHasher24` with the two initial keys set to 0.\n-    #[inline]\n-    #[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n-    #[rustc_deprecated(since = \"1.13.0\",\n-                       reason = \"use `std::collections::hash_map::DefaultHasher` instead\")]\n-    pub fn new() -> SipHasher24 {\n-        SipHasher24::new_with_keys(0, 0)\n-    }\n-\n-    /// Creates a `SipHasher24` that is keyed off the provided keys.\n-    #[inline]\n-    #[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n-    #[rustc_deprecated(since = \"1.13.0\",\n-                       reason = \"use `std::collections::hash_map::DefaultHasher` instead\")]\n-    pub fn new_with_keys(key0: u64, key1: u64) -> SipHasher24 {\n-        SipHasher24 {\n-            hasher: Hasher::new_with_keys(key0, key1)\n-        }\n-    }\n-}\n-\n impl<S: Sip> Hasher<S> {\n     #[inline]\n     fn new_with_keys(key0: u64, key1: u64) -> Hasher<S> {\n@@ -271,16 +252,16 @@ impl<S: Sip> Hasher<S> {\n impl super::Hasher for SipHasher {\n     #[inline]\n     fn write(&mut self, msg: &[u8]) {\n-        self.0.write(msg)\n+        self.0.hasher.write(msg)\n     }\n \n     #[inline]\n     fn finish(&self) -> u64 {\n-        self.0.finish()\n+        self.0.hasher.finish()\n     }\n }\n \n-#[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n+#[unstable(feature = \"hashmap_internals\", issue = \"0\")]\n impl super::Hasher for SipHasher13 {\n     #[inline]\n     fn write(&mut self, msg: &[u8]) {\n@@ -293,19 +274,6 @@ impl super::Hasher for SipHasher13 {\n     }\n }\n \n-#[unstable(feature = \"sip_hash_13\", issue = \"34767\")]\n-impl super::Hasher for SipHasher24 {\n-    #[inline]\n-    fn write(&mut self, msg: &[u8]) {\n-        self.hasher.write(msg)\n-    }\n-\n-    #[inline]\n-    fn finish(&self) -> u64 {\n-        self.hasher.finish()\n-    }\n-}\n-\n impl<S: Sip> super::Hasher for Hasher<S> {\n     // see short_write comment for explanation\n     #[inline]"}, {"sha": "bad858011e960e4513fbe29a36ea5c9c4640de83", "filename": "src/libcore/tests/hash/sip.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Ftests%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Ftests%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fhash%2Fsip.rs?ref=aafe7d89f0643e40f6f60b4bd4dd742041120227", "patch": "@@ -11,7 +11,7 @@\n #![allow(deprecated)]\n \n use core::hash::{Hash, Hasher};\n-use core::hash::{SipHasher, SipHasher13, SipHasher24};\n+use core::hash::{SipHasher, SipHasher13};\n use core::{slice, mem};\n \n // Hash just the bytes of the slice, without length prefix\n@@ -224,14 +224,14 @@ fn test_siphash_2_4() {\n     let k1 = 0x_0f_0e_0d_0c_0b_0a_09_08;\n     let mut buf = Vec::new();\n     let mut t = 0;\n-    let mut state_inc = SipHasher24::new_with_keys(k0, k1);\n+    let mut state_inc = SipHasher::new_with_keys(k0, k1);\n \n     while t < 64 {\n         let vec = u8to64_le!(vecs[t], 0);\n-        let out = hash_with(SipHasher24::new_with_keys(k0, k1), &Bytes(&buf));\n+        let out = hash_with(SipHasher::new_with_keys(k0, k1), &Bytes(&buf));\n         assert_eq!(vec, out);\n \n-        let full = hash_with(SipHasher24::new_with_keys(k0, k1), &Bytes(&buf));\n+        let full = hash_with(SipHasher::new_with_keys(k0, k1), &Bytes(&buf));\n         let i = state_inc.finish();\n \n         assert_eq!(full, i);\n@@ -322,13 +322,13 @@ fn test_hash_no_concat_alias() {\n #[test]\n fn test_write_short_works() {\n     let test_usize = 0xd0c0b0a0usize;\n-    let mut h1 = SipHasher24::new();\n+    let mut h1 = SipHasher::new();\n     h1.write_usize(test_usize);\n     h1.write(b\"bytes\");\n     h1.write(b\"string\");\n     h1.write_u8(0xFFu8);\n     h1.write_u8(0x01u8);\n-    let mut h2 = SipHasher24::new();\n+    let mut h2 = SipHasher::new();\n     h2.write(unsafe {\n         slice::from_raw_parts(&test_usize as *const _ as *const u8,\n                               mem::size_of::<usize>())"}, {"sha": "1c876fa0bd7d05ed541e2d5f0c8c80494c806185", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=aafe7d89f0643e40f6f60b4bd4dd742041120227", "patch": "@@ -21,6 +21,7 @@\n #![feature(fixed_size_array)]\n #![feature(flt2dec)]\n #![feature(fmt_internals)]\n+#![feature(hashmap_internals)]\n #![feature(iterator_step_by)]\n #![feature(i128_type)]\n #![cfg_attr(stage0, feature(inclusive_range_syntax))]\n@@ -35,7 +36,6 @@\n #![feature(range_is_empty)]\n #![feature(raw)]\n #![feature(refcell_replace_swap)]\n-#![feature(sip_hash_13)]\n #![feature(slice_patterns)]\n #![feature(sort_internals)]\n #![feature(specialization)]"}, {"sha": "62bef4bc49913dd49371705c669322c95ebf4d53", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aafe7d89f0643e40f6f60b4bd4dd742041120227/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=aafe7d89f0643e40f6f60b4bd4dd742041120227", "patch": "@@ -267,7 +267,7 @@\n #![feature(fn_traits)]\n #![feature(fnbox)]\n #![feature(generic_param_attrs)]\n-#![feature(hashmap_hasher)]\n+#![feature(hashmap_internals)]\n #![feature(heap_api)]\n #![feature(i128)]\n #![feature(i128_type)]\n@@ -298,7 +298,6 @@\n #![feature(raw)]\n #![feature(rustc_attrs)]\n #![feature(stdsimd)]\n-#![feature(sip_hash_13)]\n #![feature(slice_bytes)]\n #![feature(slice_concat_ext)]\n #![feature(slice_internals)]"}]}