{"sha": "b86a47f860ff800eb9e9a46ca2b41eea20e97188", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NmE0N2Y4NjBmZjgwMGViOWU5YTQ2Y2EyYjQxZWVhMjBlOTcxODg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-01T17:39:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-01T17:39:00Z"}, "message": "Rollup merge of #46400 - michaelwoerister:vtable-encodable, r=eddyb\n\nincr.comp.: Make traits::VTable encodable and decodable.\n\nMake vtables encodable so we can cache the `trans_fulfill_obligation` query at some point.\n\nr? @eddyb", "tree": {"sha": "f6482d872db4a2bfcad78e858469f7cf1b8d7181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6482d872db4a2bfcad78e858469f7cf1b8d7181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b86a47f860ff800eb9e9a46ca2b41eea20e97188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b86a47f860ff800eb9e9a46ca2b41eea20e97188", "html_url": "https://github.com/rust-lang/rust/commit/b86a47f860ff800eb9e9a46ca2b41eea20e97188", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b86a47f860ff800eb9e9a46ca2b41eea20e97188/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edaec072b9cd1c7424d6ac6b5751798a0f751eb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/edaec072b9cd1c7424d6ac6b5751798a0f751eb3", "html_url": "https://github.com/rust-lang/rust/commit/edaec072b9cd1c7424d6ac6b5751798a0f751eb3"}, {"sha": "780f4ed882e7e6928210d300765c4836bcb49147", "url": "https://api.github.com/repos/rust-lang/rust/commits/780f4ed882e7e6928210d300765c4836bcb49147", "html_url": "https://github.com/rust-lang/rust/commit/780f4ed882e7e6928210d300765c4836bcb49147"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "8d1bba433227685fa8cb68710b42ed49207b575f", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b86a47f860ff800eb9e9a46ca2b41eea20e97188/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b86a47f860ff800eb9e9a46ca2b41eea20e97188/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=b86a47f860ff800eb9e9a46ca2b41eea20e97188", "patch": "@@ -282,7 +282,7 @@ pub type SelectionResult<'tcx, T> = Result<Option<T>, SelectionError<'tcx>>;\n /// ### The type parameter `N`\n ///\n /// See explanation on `VtableImplData`.\n-#[derive(Clone)]\n+#[derive(Clone, RustcEncodable, RustcDecodable)]\n pub enum Vtable<'tcx, N> {\n     /// Vtable identifying a particular impl.\n     VtableImpl(VtableImplData<'tcx, N>),\n@@ -327,14 +327,14 @@ pub enum Vtable<'tcx, N> {\n /// is `Obligation`, as one might expect. During trans, however, this\n /// is `()`, because trans only requires a shallow resolution of an\n /// impl, and nested obligations are satisfied later.\n-#[derive(Clone, PartialEq, Eq)]\n+#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n pub struct VtableImplData<'tcx, N> {\n     pub impl_def_id: DefId,\n     pub substs: &'tcx Substs<'tcx>,\n     pub nested: Vec<N>\n }\n \n-#[derive(Clone, PartialEq, Eq)]\n+#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n pub struct VtableGeneratorData<'tcx, N> {\n     pub closure_def_id: DefId,\n     pub substs: ty::ClosureSubsts<'tcx>,\n@@ -343,7 +343,7 @@ pub struct VtableGeneratorData<'tcx, N> {\n     pub nested: Vec<N>\n }\n \n-#[derive(Clone, PartialEq, Eq)]\n+#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n pub struct VtableClosureData<'tcx, N> {\n     pub closure_def_id: DefId,\n     pub substs: ty::ClosureSubsts<'tcx>,\n@@ -352,20 +352,20 @@ pub struct VtableClosureData<'tcx, N> {\n     pub nested: Vec<N>\n }\n \n-#[derive(Clone)]\n+#[derive(Clone, RustcEncodable, RustcDecodable)]\n pub struct VtableAutoImplData<N> {\n     pub trait_def_id: DefId,\n     pub nested: Vec<N>\n }\n \n-#[derive(Clone)]\n+#[derive(Clone, RustcEncodable, RustcDecodable)]\n pub struct VtableBuiltinData<N> {\n     pub nested: Vec<N>\n }\n \n /// A vtable for some object-safe trait `Foo` automatically derived\n /// for the object type `Foo`.\n-#[derive(PartialEq,Eq,Clone)]\n+#[derive(PartialEq, Eq, Clone, RustcEncodable, RustcDecodable)]\n pub struct VtableObjectData<'tcx, N> {\n     /// `Foo` upcast to the obligation trait. This will be some supertrait of `Foo`.\n     pub upcast_trait_ref: ty::PolyTraitRef<'tcx>,\n@@ -378,7 +378,7 @@ pub struct VtableObjectData<'tcx, N> {\n     pub nested: Vec<N>,\n }\n \n-#[derive(Clone, PartialEq, Eq)]\n+#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n pub struct VtableFnPointerData<'tcx, N> {\n     pub fn_ty: Ty<'tcx>,\n     pub nested: Vec<N>"}]}