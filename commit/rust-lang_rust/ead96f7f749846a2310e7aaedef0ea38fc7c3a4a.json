{"sha": "ead96f7f749846a2310e7aaedef0ea38fc7c3a4a", "node_id": "C_kwDOAAsO6NoAKGVhZDk2ZjdmNzQ5ODQ2YTIzMTBlN2FhZWRlZjBlYTM4ZmM3YzNhNGE", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-10-19T10:41:35Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-10-19T10:41:35Z"}, "message": "Allow #[unstable] impls for fn() with unstable abi.", "tree": {"sha": "e330b581169df21916fd0866a9f87e65db8d6719", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e330b581169df21916fd0866a9f87e65db8d6719"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ead96f7f749846a2310e7aaedef0ea38fc7c3a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ead96f7f749846a2310e7aaedef0ea38fc7c3a4a", "html_url": "https://github.com/rust-lang/rust/commit/ead96f7f749846a2310e7aaedef0ea38fc7c3a4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ead96f7f749846a2310e7aaedef0ea38fc7c3a4a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e60016eb55ec312dfac4b33cbb509435a05919ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e60016eb55ec312dfac4b33cbb509435a05919ed", "html_url": "https://github.com/rust-lang/rust/commit/e60016eb55ec312dfac4b33cbb509435a05919ed"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "78591e640e38f960ffd090b09440bd4db5441ba8", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ead96f7f749846a2310e7aaedef0ea38fc7c3a4a/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ead96f7f749846a2310e7aaedef0ea38fc7c3a4a/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=ead96f7f749846a2310e7aaedef0ea38fc7c3a4a", "patch": "@@ -888,10 +888,15 @@ impl<'tcx> Visitor<'tcx> for CheckTraitImplStable<'tcx> {\n     }\n \n     fn visit_ty(&mut self, t: &'tcx Ty<'tcx>) {\n-        if let TyKind::Never = t.kind {\n-            self.fully_stable = false;\n+        match t.kind {\n+            TyKind::Never => self.fully_stable = false,\n+            TyKind::BareFn(f) => {\n+                if rustc_target::spec::abi::is_stable(f.abi.name()).is_err() {\n+                    self.fully_stable = false;\n+                }\n+            }\n+            _ => intravisit::walk_ty(self, t),\n         }\n-        intravisit::walk_ty(self, t)\n     }\n }\n "}]}