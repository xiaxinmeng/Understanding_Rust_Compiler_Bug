{"sha": "b7bef4c8a4029d231fae492bb3cf5d334c19fd0a", "node_id": "C_kwDOAAsO6NoAKGI3YmVmNGM4YTQwMjlkMjMxZmFlNDkyYmIzY2Y1ZDMzNGMxOWZkMGE", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-09-16T20:01:29Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-09-16T20:01:29Z"}, "message": "Change method's name", "tree": {"sha": "8ccaa45704440087a3522c7d9964fad62460a797", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ccaa45704440087a3522c7d9964fad62460a797"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7bef4c8a4029d231fae492bb3cf5d334c19fd0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7bef4c8a4029d231fae492bb3cf5d334c19fd0a", "html_url": "https://github.com/rust-lang/rust/commit/b7bef4c8a4029d231fae492bb3cf5d334c19fd0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7bef4c8a4029d231fae492bb3cf5d334c19fd0a/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bfe3db531993eef4c5de43e48c40d55f803e94d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bfe3db531993eef4c5de43e48c40d55f803e94d", "html_url": "https://github.com/rust-lang/rust/commit/8bfe3db531993eef4c5de43e48c40d55f803e94d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d24c57c0a4b8a5ccdcb342a3b89850f9a42d70a0", "filename": "clippy_lints/src/operators/arithmetic_side_effects.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7bef4c8a4029d231fae492bb3cf5d334c19fd0a/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bef4c8a4029d231fae492bb3cf5d334c19fd0a/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs?ref=b7bef4c8a4029d231fae492bb3cf5d334c19fd0a", "patch": "@@ -42,9 +42,9 @@ impl ArithmeticSideEffects {\n         }\n     }\n \n-    /// Assuming that `expr` is a literal integer, checks assign operators (+=, -=, *=, /=) in a\n+    /// Assuming that `expr` is a literal integer, checks operators (+=, -=, *, /) in a\n     /// non-constant environment that won't overflow.\n-    fn has_valid_assign_op(op: &Spanned<hir::BinOpKind>, expr: &hir::Expr<'_>) -> bool {\n+    fn has_valid_op(op: &Spanned<hir::BinOpKind>, expr: &hir::Expr<'_>) -> bool {\n         if let hir::BinOpKind::Add | hir::BinOpKind::Sub = op.node\n             && let hir::ExprKind::Lit(ref lit) = expr.kind\n             && let ast::LitKind::Int(0, _) = lit.node\n@@ -124,8 +124,8 @@ impl ArithmeticSideEffects {\n             Self::is_literal_integer(rhs, cx.typeck_results().expr_ty(rhs).peel_refs()),\n         ) {\n             (true, true) => true,\n-            (true, false) => Self::has_valid_assign_op(op, lhs),\n-            (false, true) => Self::has_valid_assign_op(op, rhs),\n+            (true, false) => Self::has_valid_op(op, lhs),\n+            (false, true) => Self::has_valid_op(op, rhs),\n             (false, false) => false,\n         };\n         if !has_valid_op {"}]}