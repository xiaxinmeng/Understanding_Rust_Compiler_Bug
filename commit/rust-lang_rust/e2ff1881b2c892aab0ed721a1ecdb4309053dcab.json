{"sha": "e2ff1881b2c892aab0ed721a1ecdb4309053dcab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZmYxODgxYjJjODkyYWFiMGVkNzIxYTFlY2RiNDMwOTA1M2RjYWI=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-04-08T04:55:18Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-04-08T06:02:12Z"}, "message": "Address review comments", "tree": {"sha": "0ee9c27364373f243b3223f7adc8307b59fcec19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee9c27364373f243b3223f7adc8307b59fcec19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2ff1881b2c892aab0ed721a1ecdb4309053dcab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2ff1881b2c892aab0ed721a1ecdb4309053dcab", "html_url": "https://github.com/rust-lang/rust/commit/e2ff1881b2c892aab0ed721a1ecdb4309053dcab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2ff1881b2c892aab0ed721a1ecdb4309053dcab/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d18b405faf09514febc4163d96e85e57e137df81", "url": "https://api.github.com/repos/rust-lang/rust/commits/d18b405faf09514febc4163d96e85e57e137df81", "html_url": "https://github.com/rust-lang/rust/commit/d18b405faf09514febc4163d96e85e57e137df81"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "3773ff7078e9c33549a104effc70b8adf1b2be38", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2ff1881b2c892aab0ed721a1ecdb4309053dcab/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2ff1881b2c892aab0ed721a1ecdb4309053dcab/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=e2ff1881b2c892aab0ed721a1ecdb4309053dcab", "patch": "@@ -115,12 +115,12 @@ pub fn check_cast<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>, cast: &CastCheck<'tcx>) {\n     } else if t_1.sty == ty::ty_bool {\n         span_err!(fcx.tcx().sess, span, E0054,\n                   \"cannot cast as `bool`, compare with zero instead\");\n-    } else if t_e_is_float && (t_1_is_scalar || t_1_is_c_enum) && !(\n-        t_1_is_integral || t_1_is_float) {\n+    } else if t_e_is_float && (t_1_is_scalar || t_1_is_c_enum) &&\n+        !(t_1_is_integral || t_1_is_float) {\n         // Casts from float must go through an integer\n         cast_through_integer_err(fcx, span, t_1, t_e)\n-    } else if t_1_is_float && (t_e_is_scalar || t_e_is_c_enum) && !(\n-        t_e_is_integral || t_e_is_float || t_e.sty == ty::ty_bool) {\n+    } else if t_1_is_float && (t_e_is_scalar || t_e_is_c_enum) &&\n+        !(t_e_is_integral || t_e_is_float || t_e.sty == ty::ty_bool) {\n         // Casts to float must go through an integer or boolean\n         cast_through_integer_err(fcx, span, t_1, t_e)\n     } else if t_e_is_c_enum && t_1_is_trivial {"}, {"sha": "4ecef2235a911c6b8b2a33da8e362f16fd53443c", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e2ff1881b2c892aab0ed721a1ecdb4309053dcab/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2ff1881b2c892aab0ed721a1ecdb4309053dcab/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=e2ff1881b2c892aab0ed721a1ecdb4309053dcab", "patch": "@@ -1560,13 +1560,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     }\n \n     pub fn type_is_fat_ptr(&self, ty: Ty<'tcx>, span: Span) -> bool {\n-        match ty.sty {\n-            ty::ty_ptr(ty::mt { ty: t, .. }) |\n-            ty::ty_rptr(_, ty::mt { ty: t, .. }) => {\n-                !self.type_is_known_to_be_sized(t, span)\n-            }\n-            _ => false\n+        if let Some(mt) = ty::deref(ty, true) {\n+            return !self.type_is_known_to_be_sized(mt.ty, span);\n         }\n+        false\n     }\n \n     pub fn register_builtin_bound(&self,"}, {"sha": "ac5969410fc0122788afef4f00cf06380f97239d", "filename": "src/test/compile-fail/fat-ptr-cast.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2ff1881b2c892aab0ed721a1ecdb4309053dcab/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2ff1881b2c892aab0ed721a1ecdb4309053dcab/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs?ref=e2ff1881b2c892aab0ed721a1ecdb4309053dcab", "patch": "@@ -10,5 +10,10 @@\n \n fn main() {\n     let a: &[i32] = &[1, 2, 3];\n-    a as *const [i32] as usize; //~ ERROR cast from fat pointer\n+    let b: Box<[i32]> = Box::new([1, 2, 3]);\n+    let p = a as *const [i32];\n+\n+    a as usize; //~ ERROR cast from fat pointer\n+    b as usize; //~ ERROR cast from fat pointer\n+    p as usize; //~ ERROR cast from fat pointer\n }"}]}