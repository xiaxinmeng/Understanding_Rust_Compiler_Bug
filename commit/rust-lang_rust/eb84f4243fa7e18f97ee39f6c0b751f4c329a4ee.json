{"sha": "eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViODRmNDI0M2ZhN2UxOGY5N2VlMzlmNmMwYjc1MWY0YzMyOWE0ZWU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-24T22:12:35Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-12-07T22:56:21Z"}, "message": "fix markdown file differences", "tree": {"sha": "59789077a3e195107d1879f99e113d9c50ceda0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59789077a3e195107d1879f99e113d9c50ceda0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee", "html_url": "https://github.com/rust-lang/rust/commit/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b1fc4b842929961f2f6a09d7c44ec010150ed77", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b1fc4b842929961f2f6a09d7c44ec010150ed77", "html_url": "https://github.com/rust-lang/rust/commit/8b1fc4b842929961f2f6a09d7c44ec010150ed77"}], "stats": {"total": 47, "additions": 22, "deletions": 25}, "files": [{"sha": "f404aa046c1aecf52bb34b3e4d14d2eae7c9a8ce", "filename": "src/doc/not_found.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee/src%2Fdoc%2Fnot_found.md", "raw_url": "https://github.com/rust-lang/rust/raw/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee/src%2Fdoc%2Fnot_found.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnot_found.md?ref=eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee", "patch": "@@ -13,20 +13,20 @@ Some things that might be helpful to you though:\n \n # Search\n \n-* <form action=\"https://duckduckgo.com/\">\n+<form action=\"https://duckduckgo.com/\">\n     <input type=\"text\" id=\"site-search\" name=\"q\" size=\"80\"></input>\n-    <input type=\"submit\" value=\"Search DuckDuckGo\">\n-</form>\n-* Rust doc search: <span id=\"core-search\"></span>\n+    <input type=\"submit\" value=\"Search DuckDuckGo\"></form>\n+\n+Rust doc search: <span id=\"core-search\"></span>\n \n # Reference\n \n-* [The Rust official site](https://www.rust-lang.org)\n-* [The Rust reference](https://doc.rust-lang.org/reference/index.html)\n+ * [The Rust official site](https://www.rust-lang.org)\n+ * [The Rust reference](https://doc.rust-lang.org/reference/index.html)\n \n # Docs\n \n-* [The standard library](https://doc.rust-lang.org/std/)\n+[The standard library](https://doc.rust-lang.org/std/)\n \n <script>\n function get_url_fragments() {"}, {"sha": "5292e643b0a359d4a4defff882fe380706a009bd", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee", "patch": "@@ -424,6 +424,16 @@ thread_local!(pub static CURRENT_LOCATION_KEY: RefCell<Vec<String>> =\n thread_local!(pub static USED_ID_MAP: RefCell<FxHashMap<String, usize>> =\n                     RefCell::new(init_ids()));\n \n+pub fn render_text<F: FnMut(RenderType) -> String>(mut render: F) -> (String, String) {\n+    // Save the state of USED_ID_MAP so it only gets updated once even\n+    // though we're rendering twice.\n+    let orig_used_id_map = USED_ID_MAP.with(|map| map.borrow().clone());\n+    let hoedown_output = render(RenderType::Hoedown);\n+    USED_ID_MAP.with(|map| *map.borrow_mut() = orig_used_id_map);\n+    let pulldown_output = render(RenderType::Pulldown);\n+    (hoedown_output, pulldown_output)\n+}\n+\n fn init_ids() -> FxHashMap<String, usize> {\n     [\n      \"main\",\n@@ -1856,12 +1866,7 @@ fn render_markdown(w: &mut fmt::Formatter,\n                    prefix: &str,\n                    scx: &SharedContext)\n                    -> fmt::Result {\n-    // Save the state of USED_ID_MAP so it only gets updated once even\n-    // though we're rendering twice.\n-    let orig_used_id_map = USED_ID_MAP.with(|map| map.borrow().clone());\n-    let hoedown_output = format!(\"{}\", Markdown(md_text, RenderType::Hoedown));\n-    USED_ID_MAP.with(|map| *map.borrow_mut() = orig_used_id_map);\n-    let pulldown_output = format!(\"{}\", Markdown(md_text, RenderType::Pulldown));\n+    let (hoedown_output, pulldown_output) = render_text(|ty| format!(\"{}\", Markdown(md_text, ty)));\n     let mut differences = html_diff::get_differences(&pulldown_output, &hoedown_output);\n     differences.retain(|s| {\n         match *s {"}, {"sha": "9b94e9918f85096d6191383eda844c64d3169cdd", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=eb84f4243fa7e18f97ee39f6c0b751f4c329a4ee", "patch": "@@ -25,9 +25,9 @@ use externalfiles::{ExternalHtml, LoadStringError, load_string};\n \n use html_diff;\n \n-use html::render::reset_ids;\n+use html::render::{render_text, reset_ids};\n use html::escape::Escape;\n-use html::render::{USED_ID_MAP, render_difference};\n+use html::render::render_difference;\n use html::markdown;\n use html::markdown::{Markdown, MarkdownWithToc, find_testable_code, old_find_testable_code};\n use html::markdown::RenderType;\n@@ -101,19 +101,11 @@ pub fn render(input: &str, mut output: PathBuf, matches: &getopts::Matches,\n     let (hoedown_output, pulldown_output) = if include_toc {\n         // Save the state of USED_ID_MAP so it only gets updated once even\n         // though we're rendering twice.\n-        let orig_used_id_map = USED_ID_MAP.with(|map| map.borrow().clone());\n-        let hoedown_output = format!(\"{}\", MarkdownWithToc(text, RenderType::Hoedown));\n-        USED_ID_MAP.with(|map| *map.borrow_mut() = orig_used_id_map);\n-        let pulldown_output = format!(\"{}\", MarkdownWithToc(text, RenderType::Pulldown));\n-        (hoedown_output, pulldown_output)\n+        render_text(|ty| format!(\"{}\", MarkdownWithToc(text, ty)))\n     } else {\n         // Save the state of USED_ID_MAP so it only gets updated once even\n         // though we're rendering twice.\n-        let orig_used_id_map = USED_ID_MAP.with(|map| map.borrow().clone());\n-        let hoedown_output = format!(\"{}\", Markdown(text, RenderType::Hoedown));\n-        USED_ID_MAP.with(|map| *map.borrow_mut() = orig_used_id_map);\n-        let pulldown_output = format!(\"{}\", Markdown(text, RenderType::Pulldown));\n-        (hoedown_output, pulldown_output)\n+        render_text(|ty| format!(\"{}\", Markdown(text, ty)))\n     };\n \n     let mut differences = html_diff::get_differences(&pulldown_output, &hoedown_output);"}]}