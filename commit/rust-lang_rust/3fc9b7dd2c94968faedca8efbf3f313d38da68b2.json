{"sha": "3fc9b7dd2c94968faedca8efbf3f313d38da68b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYzliN2RkMmM5NDk2OGZhZWRjYThlZmJmM2YzMTNkMzhkYTY4YjI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T10:01:52Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T10:01:52Z"}, "message": "Make more MIR match statements exhaustive.", "tree": {"sha": "8c5074d9befb9a460bcda8d51828a917f5ade2c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c5074d9befb9a460bcda8d51828a917f5ade2c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fc9b7dd2c94968faedca8efbf3f313d38da68b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fc9b7dd2c94968faedca8efbf3f313d38da68b2", "html_url": "https://github.com/rust-lang/rust/commit/3fc9b7dd2c94968faedca8efbf3f313d38da68b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fc9b7dd2c94968faedca8efbf3f313d38da68b2/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f41facb94a1a848dd87e9a2ccfd5b12c03e98d", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f41facb94a1a848dd87e9a2ccfd5b12c03e98d", "html_url": "https://github.com/rust-lang/rust/commit/69f41facb94a1a848dd87e9a2ccfd5b12c03e98d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e5c45d99961d8d3b7ff0bb0e38eaf2320b25460b", "filename": "src/interpreter.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fc9b7dd2c94968faedca8efbf3f313d38da68b2/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fc9b7dd2c94968faedca8efbf3f313d38da68b2/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=3fc9b7dd2c94968faedca8efbf3f313d38da68b2", "patch": "@@ -655,7 +655,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                         try!(self.const_to_ptr(value)),\n                         self.ty_to_repr(ty),\n                     )),\n-                    ref l => panic!(\"can't handle item literal: {:?}\", l),\n+                    Item { .. } => unimplemented!(),\n                 }\n             }\n         }\n@@ -683,6 +683,8 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n             Var(i) => self.frame().locals[self.frame().var_offset + i as usize],\n             Temp(i) => self.frame().locals[self.frame().temp_offset + i as usize],\n \n+            Static(_def_id) => unimplemented!(),\n+\n             Projection(ref proj) => {\n                 let base_ptr = try!(self.eval_lvalue(&proj.base)).ptr;\n                 let base_repr = self.lvalue_repr(&proj.base);\n@@ -728,11 +730,9 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                         base_ptr.offset(n as isize * elem_size as isize)\n                     }\n \n-                    ref p => panic!(\"can't handle lvalue projection: {:?}\", p),\n+                    ConstantIndex { .. } => unimplemented!(),\n                 }\n             }\n-\n-            ref l => panic!(\"can't handle lvalue: {:?}\", l),\n         };\n \n         Ok(Lvalue { ptr: ptr, extra: LvalueExtra::None })"}]}