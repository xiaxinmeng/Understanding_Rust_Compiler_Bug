{"sha": "1089bfef608dc0f6d9efc57d8daa8da76db823a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwODliZmVmNjA4ZGMwZjZkOWVmYzU3ZDhkYWE4ZGE3NmRiODIzYTg=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-01-20T10:16:24Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-01-20T10:17:27Z"}, "message": "Fix documentation typos", "tree": {"sha": "94bf992b5215ba7781578169ee0e316b1990b651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94bf992b5215ba7781578169ee0e316b1990b651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1089bfef608dc0f6d9efc57d8daa8da76db823a8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1089bfef608dc0f6d9efc57d8daa8da76db823a8", "html_url": "https://github.com/rust-lang/rust/commit/1089bfef608dc0f6d9efc57d8daa8da76db823a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1089bfef608dc0f6d9efc57d8daa8da76db823a8/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "290c29c24cee74b3ffbd6a9d330b09d9d330d508", "url": "https://api.github.com/repos/rust-lang/rust/commits/290c29c24cee74b3ffbd6a9d330b09d9d330d508", "html_url": "https://github.com/rust-lang/rust/commit/290c29c24cee74b3ffbd6a9d330b09d9d330d508"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "04ce2b5846c811415b119c3cbfb3b25af4de2a7c", "filename": "src/librustc/middle/borrowck/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1089bfef608dc0f6d9efc57d8daa8da76db823a8/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1089bfef608dc0f6d9efc57d8daa8da76db823a8/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs?ref=1089bfef608dc0f6d9efc57d8daa8da76db823a8", "patch": "@@ -179,7 +179,7 @@ checker uses a data flow propagation to compute the full set of loans\n in scope at each expression and then uses that set to decide whether\n that expression is legal.  Remember that the scope of loan is defined\n by its lifetime LT.  We sometimes say that a loan which is in-scope at\n-a particular point is an \"outstanding loan\", aand the set of\n+a particular point is an \"outstanding loan\", and the set of\n restrictions included in those loans as the \"outstanding\n restrictions\".\n "}, {"sha": "e0146694881b7d5d04e61e201b390a1f327d85c9", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1089bfef608dc0f6d9efc57d8daa8da76db823a8/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1089bfef608dc0f6d9efc57d8daa8da76db823a8/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=1089bfef608dc0f6d9efc57d8daa8da76db823a8", "patch": "@@ -38,7 +38,7 @@ case, the value is read, and the container (`x`) is also read.\n In the second case, `y`, `x.b` is being assigned which has type\n `~int`.  Because this type moves by default, that will be a move\n reference.  Whenever we move from a compound expression like `x.b` (or\n-`x[b]` or `*x` or `{x)[b].c`, etc), this invalidates all containing\n+`x[b]` or `*x` or `{x}[b].c`, etc), this invalidates all containing\n expressions since we do not currently permit \"incomplete\" variables\n where part of them has been moved and part has not.  In this case,\n this means that the reference to `x` is also a move.  We'll see later,\n@@ -56,7 +56,7 @@ For each binding in a match or let pattern, we also compute a read\n or move designation.  A move binding means that the value will be\n moved from the value being matched.  As a result, the expression\n being matched (aka, the 'discriminant') is either moved or read\n-depending on whethe the bindings move the value they bind to out of\n+depending on whether the bindings move the value they bind to out of\n the discriminant.\n \n For examples, consider this match expression:"}]}