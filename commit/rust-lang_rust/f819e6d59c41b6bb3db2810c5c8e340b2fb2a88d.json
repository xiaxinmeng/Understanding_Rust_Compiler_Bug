{"sha": "f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "node_id": "C_kwDOAAsO6NoAKGY4MTllNmQ1OWM0MWI2YmIzZGIyODEwYzVjOGUzNDBiMmZiMmE4OGQ", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-09-29T04:55:24Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-10-13T03:17:02Z"}, "message": "suggestion for typoed crate or module\n\navoid suggesting the same name\n\nsort candidates\n\nfix a message\n\nuse `opt_def_id` instead of `def_id`\n\nmove `find_similarly_named_module_or_crate` to rustc_resolve/src/diagnostics.rs", "tree": {"sha": "574e3ecd2b8c3aa878307061db9de08289d8281e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/574e3ecd2b8c3aa878307061db9de08289d8281e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "html_url": "https://github.com/rust-lang/rust/commit/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7539a6af09e5889ed9bcb8b49571b7a59c32e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7539a6af09e5889ed9bcb8b49571b7a59c32e65", "html_url": "https://github.com/rust-lang/rust/commit/d7539a6af09e5889ed9bcb8b49571b7a59c32e65"}], "stats": {"total": 110, "additions": 109, "deletions": 1}, "files": [{"sha": "e3970038a33b03dad9fbe195ecae9fd23a49add1", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "patch": "@@ -1277,6 +1277,34 @@ impl<'a> Resolver<'a> {\n \n         err.emit();\n     }\n+\n+    crate fn find_similarly_named_module_or_crate(\n+        &mut self,\n+        ident: Symbol,\n+        current_module: &Module<'a>,\n+    ) -> Option<Symbol> {\n+        let mut candidates = self\n+            .extern_prelude\n+            .iter()\n+            .map(|(ident, _)| ident.name)\n+            .chain(\n+                self.module_map\n+                    .iter()\n+                    .filter(|(_, module)| {\n+                        current_module.is_ancestor_of(module) && !ptr::eq(current_module, *module)\n+                    })\n+                    .map(|(_, module)| module.kind.name())\n+                    .flatten(),\n+            )\n+            .filter(|c| !c.to_string().is_empty())\n+            .collect::<Vec<_>>();\n+        candidates.sort();\n+        candidates.dedup();\n+        match find_best_match_for_name(&candidates, ident, None) {\n+            Some(sugg) if sugg == ident => None,\n+            sugg => sugg,\n+        }\n+    }\n }\n \n impl<'a, 'b> ImportResolver<'a, 'b> {"}, {"sha": "9652c483686f06558438b529328e8abe289e4393", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "patch": "@@ -2555,7 +2555,22 @@ impl<'a> Resolver<'a> {\n \n                             (format!(\"use of undeclared type `{}`\", ident), suggestion)\n                         } else {\n-                            (format!(\"use of undeclared crate or module `{}`\", ident), None)\n+                            (\n+                                format!(\"use of undeclared crate or module `{}`\", ident),\n+                                self.find_similarly_named_module_or_crate(\n+                                    ident.name,\n+                                    &parent_scope.module,\n+                                )\n+                                .map(|sugg| {\n+                                    (\n+                                        vec![(ident.span, sugg.to_string())],\n+                                        String::from(\n+                                            \"there is a crate or module with a similar name\",\n+                                        ),\n+                                        Applicability::MaybeIncorrect,\n+                                    )\n+                                }),\n+                            )\n                         }\n                     } else {\n                         let parent = path[i - 1].ident.name;"}, {"sha": "77b6486155cd2eb44f139a32ae1aecc10f871c2f", "filename": "src/test/ui/macros/macro-inner-attributes.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr?ref=f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "patch": "@@ -3,6 +3,11 @@ error[E0433]: failed to resolve: use of undeclared crate or module `a`\n    |\n LL |     a::bar();\n    |     ^ use of undeclared crate or module `a`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL |     b::bar();\n+   |     ~\n \n error: aborting due to previous error\n "}, {"sha": "2471b11c61efd1106cb2baa901448131ca235ac6", "filename": "src/test/ui/suggestions/crate-or-module-typo.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.rs?ref=f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+\n+use st::cell::Cell; //~ ERROR failed to resolve: use of undeclared crate or module `st`\n+\n+mod bar {\n+    pub fn bar() { bar::baz(); } //~ ERROR failed to resolve: use of undeclared crate or module `bar`\n+\n+    fn baz() {}\n+}\n+\n+use bas::bar; //~ ERROR unresolved import `bas`\n+\n+struct Foo {\n+    bar: st::cell::Cell<bool> //~ ERROR failed to resolve: use of undeclared crate or module `st`\n+}\n+\n+fn main() {}"}, {"sha": "e8250c9fa5ff49971a87e91409bdb89320602937", "filename": "src/test/ui/suggestions/crate-or-module-typo.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.stderr?ref=f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "patch": "@@ -0,0 +1,43 @@\n+error[E0433]: failed to resolve: use of undeclared crate or module `st`\n+  --> $DIR/crate-or-module-typo.rs:3:5\n+   |\n+LL | use st::cell::Cell;\n+   |     ^^ use of undeclared crate or module `st`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL | use std::cell::Cell;\n+   |     ~~~\n+\n+error[E0432]: unresolved import `bas`\n+  --> $DIR/crate-or-module-typo.rs:11:5\n+   |\n+LL | use bas::bar;\n+   |     ^^^ use of undeclared crate or module `bas`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL | use bar::bar;\n+   |     ~~~\n+\n+error[E0433]: failed to resolve: use of undeclared crate or module `bar`\n+  --> $DIR/crate-or-module-typo.rs:6:20\n+   |\n+LL |     pub fn bar() { bar::baz(); }\n+   |                    ^^^ use of undeclared crate or module `bar`\n+\n+error[E0433]: failed to resolve: use of undeclared crate or module `st`\n+  --> $DIR/crate-or-module-typo.rs:14:10\n+   |\n+LL |     bar: st::cell::Cell<bool>\n+   |          ^^ use of undeclared crate or module `st`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL |     bar: std::cell::Cell<bool>\n+   |          ~~~\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0432, E0433.\n+For more information about an error, try `rustc --explain E0432`."}]}