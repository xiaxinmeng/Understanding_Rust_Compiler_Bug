{"sha": "3d6c4c143b4b4c74810318eca1b5493e43535fff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNmM0YzE0M2I0YjRjNzQ4MTAzMThlY2ExYjU0OTNlNDM1MzVmZmY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-26T16:36:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-26T16:36:44Z"}, "message": "Merge #5894\n\n5894: Cleanup hover links tests\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b6a26405a93554c3b2508f36f34735dedeb4d8a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6a26405a93554c3b2508f36f34735dedeb4d8a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d6c4c143b4b4c74810318eca1b5493e43535fff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRo+cCRBK7hj4Ov3rIwAAdHIIAG+eRBgR8aMHvc1vihZpGu6W\nxRuVyPmaByPGy8HJugXxXNXcGKAeIBKykuVSp/Ow7VNDxHExSztgdFwSnsN7BqMf\nNnbkx8QTDYbziGpX4ejzTuukFdEk3jwHGydb26WaxxOHlKhXoIZK38r3S2OR6MxB\n+PrzUsKxwPQmRTF6+rjgk8v7PAFtWqWAB9ra4cM4KfxE2QkvMFy+ONS8tfICrZd7\nj8ef7RUBckVHt4JxeMNtI7o0/ypT+bUi+M6lSkhACBu5GyY1Xv6JnwqvKl7pVjo7\nlaC7eLjCEsBfHA4hnkqwINhX2ShJSsN26BBlmPOLCj5zEEFgYLwATzCVX8YBffU=\n=xxWy\n-----END PGP SIGNATURE-----\n", "payload": "tree b6a26405a93554c3b2508f36f34735dedeb4d8a9\nparent 84acd56e978de792db278b624458b96d52fa7b73\nparent 1c0ac2b9b473b16ab427e2f4d1144029a79c1827\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598459804 +0000\ncommitter GitHub <noreply@github.com> 1598459804 +0000\n\nMerge #5894\n\n5894: Cleanup hover links tests\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d6c4c143b4b4c74810318eca1b5493e43535fff", "html_url": "https://github.com/rust-lang/rust/commit/3d6c4c143b4b4c74810318eca1b5493e43535fff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d6c4c143b4b4c74810318eca1b5493e43535fff/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84acd56e978de792db278b624458b96d52fa7b73", "url": "https://api.github.com/repos/rust-lang/rust/commits/84acd56e978de792db278b624458b96d52fa7b73", "html_url": "https://github.com/rust-lang/rust/commit/84acd56e978de792db278b624458b96d52fa7b73"}, {"sha": "1c0ac2b9b473b16ab427e2f4d1144029a79c1827", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c0ac2b9b473b16ab427e2f4d1144029a79c1827", "html_url": "https://github.com/rust-lang/rust/commit/1c0ac2b9b473b16ab427e2f4d1144029a79c1827"}], "stats": {"total": 162, "additions": 74, "deletions": 88}, "files": [{"sha": "53641170481fccac78925bc719b442a257a1b920", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 74, "deletions": 88, "changes": 162, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c4c143b4b4c74810318eca1b5493e43535fff/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c4c143b4b4c74810318eca1b5493e43535fff/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=3d6c4c143b4b4c74810318eca1b5493e43535fff", "patch": "@@ -1407,12 +1407,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_path_link() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [Foo](struct.Foo.html)\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [Foo](struct.Foo.html)\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1434,12 +1433,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_path_link_no_strip() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [struct Foo](struct.Foo.html)\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [struct Foo](struct.Foo.html)\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1462,14 +1460,13 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_path_link_field() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            pub struct Bar {\n-                /// [Foo](struct.Foo.html)\n-                fie<|>ld: ()\n-            }\n-            \",\n+            r#\"\n+pub struct Foo;\n+pub struct Bar {\n+    /// [Foo](struct.Foo.html)\n+    fie<|>ld: ()\n+}\n+\"#,\n             expect![[r#\"\n                 *field*\n \n@@ -1491,14 +1488,13 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_intra_link() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub mod foo {\n-                pub struct Foo;\n-            }\n-            /// [Foo](foo::Foo)\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub mod foo {\n+    pub struct Foo;\n+}\n+/// [Foo](foo::Foo)\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1521,16 +1517,14 @@ fn foo() { let bar = Ba<|>r; }\n     fn test_hover_intra_link_html_root_url() {\n         check(\n             r#\"\n-            //- /lib.rs\n-\n-            #![doc(arbitrary_attribute = \"test\", html_root_url = \"https:/example.com\", arbitrary_attribute2)]\n+#![doc(arbitrary_attribute = \"test\", html_root_url = \"https:/example.com\", arbitrary_attribute2)]\n \n-            pub mod foo {\n-                pub struct Foo;\n-            }\n-            /// [Foo](foo::Foo)\n-            pub struct B<|>ar\n-            \"#,\n+pub mod foo {\n+    pub struct Foo;\n+}\n+/// [Foo](foo::Foo)\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1552,12 +1546,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_intra_link_shortlink() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [Foo]\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [Foo]\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1579,12 +1572,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_intra_link_shortlink_code() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [`Foo`]\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [`Foo`]\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1606,13 +1598,12 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_intra_link_namespaced() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            fn Foo() {}\n-            /// [Foo()]\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+fn Foo() {}\n+/// [Foo()]\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1634,12 +1625,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_intra_link_shortlink_namspaced_code() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [`struct Foo`]\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [`struct Foo`]\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1661,12 +1651,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_intra_link_shortlink_namspaced_code_with_at() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [`struct@Foo`]\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [`struct@Foo`]\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1688,14 +1677,13 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_intra_link_reference() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [my Foo][foo]\n-            ///\n-            /// [foo]: Foo\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [my Foo][foo]\n+///\n+/// [foo]: Foo\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1717,12 +1705,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_external_url() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [external](https://www.google.com)\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [external](https://www.google.com)\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n \n@@ -1745,12 +1732,11 @@ fn foo() { let bar = Ba<|>r; }\n     #[test]\n     fn test_hover_unknown_target() {\n         check(\n-            r\"\n-            //- /lib.rs\n-            pub struct Foo;\n-            /// [baz](Baz)\n-            pub struct B<|>ar\n-            \",\n+            r#\"\n+pub struct Foo;\n+/// [baz](Baz)\n+pub struct B<|>ar\n+\"#,\n             expect![[r#\"\n                 *Bar*\n "}]}