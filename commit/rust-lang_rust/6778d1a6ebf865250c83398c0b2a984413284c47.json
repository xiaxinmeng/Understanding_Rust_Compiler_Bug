{"sha": "6778d1a6ebf865250c83398c0b2a984413284c47", "node_id": "C_kwDOAAsO6NoAKDY3NzhkMWE2ZWJmODY1MjUwYzgzMzk4YzBiMmE5ODQ0MTMyODRjNDc", "commit": {"author": {"name": "feniljain", "email": "fkjainco@gmail.com", "date": "2023-03-16T17:22:35Z"}, "committer": {"name": "feniljain", "email": "fkjainco@gmail.com", "date": "2023-03-16T17:24:12Z"}, "message": "feat: do not remove other variants, just push them down in list", "tree": {"sha": "51c50d4d7ff65aa31397f4e70c6ecc79c5691d1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51c50d4d7ff65aa31397f4e70c6ecc79c5691d1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6778d1a6ebf865250c83398c0b2a984413284c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6778d1a6ebf865250c83398c0b2a984413284c47", "html_url": "https://github.com/rust-lang/rust/commit/6778d1a6ebf865250c83398c0b2a984413284c47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6778d1a6ebf865250c83398c0b2a984413284c47/comments", "author": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d03c78979810ba7da446480f43b4893fcacdd317", "url": "https://api.github.com/repos/rust-lang/rust/commits/d03c78979810ba7da446480f43b4893fcacdd317", "html_url": "https://github.com/rust-lang/rust/commit/d03c78979810ba7da446480f43b4893fcacdd317"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "50be5c788fb2ea662149cdf6efc38f78b9cc25fb", "filename": "crates/ide-completion/src/completions.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions.rs?ref=6778d1a6ebf865250c83398c0b2a984413284c47", "patch": "@@ -536,7 +536,6 @@ fn enum_variants_with_paths(\n     enum_: hir::Enum,\n     impl_: &Option<ast::Impl>,\n     cb: impl Fn(&mut Completions, &CompletionContext<'_>, hir::Variant, hir::ModPath),\n-    missing_variants: Option<Vec<Variant>>,\n ) {\n     let mut process_variant = |variant: Variant| {\n         let self_path = hir::ModPath::from_segments(\n@@ -547,10 +546,7 @@ fn enum_variants_with_paths(\n         cb(acc, ctx, variant, self_path);\n     };\n \n-    let variants = match missing_variants {\n-        Some(missing_variants) => missing_variants,\n-        None => enum_.variants(ctx.db),\n-    };\n+    let variants = enum_.variants(ctx.db);\n \n     if let Some(impl_) = impl_.as_ref().and_then(|impl_| ctx.sema.to_def(impl_)) {\n         if impl_.self_ty(ctx.db).as_adt() == Some(hir::Adt::Enum(enum_)) {"}, {"sha": "3192b21cfb2e2da3ae3bd49b5e560c561fa58fd1", "filename": "crates/ide-completion/src/completions/expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fexpr.rs?ref=6778d1a6ebf865250c83398c0b2a984413284c47", "patch": "@@ -208,7 +208,6 @@ pub(crate) fn complete_expr_path(\n                             |acc, ctx, variant, path| {\n                                 acc.add_qualified_enum_variant(ctx, path_ctx, variant, path)\n                             },\n-                            None,\n                         );\n                     }\n                 }"}, {"sha": "58d5bf114cca4abfbee7ae0f200c92e9c1780a0a", "filename": "crates/ide-completion/src/completions/pattern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpattern.rs?ref=6778d1a6ebf865250c83398c0b2a984413284c47", "patch": "@@ -58,7 +58,6 @@ pub(crate) fn complete_pattern(\n                 |acc, ctx, variant, path| {\n                     acc.add_qualified_variant_pat(ctx, pattern_ctx, variant, path);\n                 },\n-                Some(pattern_ctx.missing_variants.clone()),\n             );\n         }\n     }"}, {"sha": "eb2df395c4d56ddd43753ee434fe03fa5910d638", "filename": "crates/ide-completion/src/render.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender.rs?ref=6778d1a6ebf865250c83398c0b2a984413284c47", "patch": "@@ -32,11 +32,22 @@ pub(crate) struct RenderContext<'a> {\n     completion: &'a CompletionContext<'a>,\n     is_private_editable: bool,\n     import_to_add: Option<LocatedImport>,\n+    // For variants which are missing\n+    // in match completion context\n+    //\n+    // Option -> only applicable for enums\n+    // bool -> is enum variant missing or not?\n+    is_variant_missing: Option<bool>,\n }\n \n impl<'a> RenderContext<'a> {\n     pub(crate) fn new(completion: &'a CompletionContext<'a>) -> RenderContext<'a> {\n-        RenderContext { completion, is_private_editable: false, import_to_add: None }\n+        RenderContext {\n+            completion,\n+            is_private_editable: false,\n+            import_to_add: None,\n+            is_variant_missing: None,\n+        }\n     }\n \n     pub(crate) fn private_editable(mut self, private_editable: bool) -> Self {"}, {"sha": "d70f02127d5c04dcd7f621da5a011d11fbce2aeb", "filename": "crates/ide-completion/src/render/pattern.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs?ref=6778d1a6ebf865250c83398c0b2a984413284c47", "patch": "@@ -43,7 +43,7 @@ pub(crate) fn render_struct_pat(\n }\n \n pub(crate) fn render_variant_pat(\n-    ctx: RenderContext<'_>,\n+    mut ctx: RenderContext<'_>,\n     pattern_ctx: &PatternContext,\n     path_ctx: Option<&PathCompletionCtx>,\n     variant: hir::Variant,\n@@ -56,6 +56,11 @@ pub(crate) fn render_variant_pat(\n     let (visible_fields, fields_omitted) = visible_fields(ctx.completion, &fields, variant)?;\n     let enum_ty = variant.parent_enum(ctx.db()).ty(ctx.db());\n \n+    // Missing in context of match statement completions\n+    if pattern_ctx.missing_variants.contains(&variant) {\n+        ctx.is_variant_missing = Some(true);\n+    }\n+\n     let (name, escaped_name) = match path {\n         Some(path) => (path.unescaped().to_string().into(), path.to_string().into()),\n         None => {\n@@ -97,7 +102,9 @@ fn build_completion(\n ) -> CompletionItem {\n     let mut relevance = ctx.completion_relevance();\n \n-    relevance.type_match = super::compute_type_match(ctx.completion, &adt_ty);\n+    if let Some(true) = ctx.is_variant_missing {\n+        relevance.type_match = super::compute_type_match(ctx.completion, &adt_ty);\n+    }\n \n     let mut item = CompletionItem::new(CompletionItemKind::Binding, ctx.source_range(), label);\n     item.set_documentation(ctx.docs(def))"}, {"sha": "2de42e8435e42018a385be609788249f4e2a11e0", "filename": "crates/ide-completion/src/tests/record.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Ftests%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6778d1a6ebf865250c83398c0b2a984413284c47/crates%2Fide-completion%2Fsrc%2Ftests%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Frecord.rs?ref=6778d1a6ebf865250c83398c0b2a984413284c47", "patch": "@@ -67,6 +67,7 @@ fn foo(baz: Baz) {\n             ev Err\n             ev Ok\n             bn Baz::Bar Baz::Bar$0\n+            bn Baz::Foo Baz::Foo$0\n             bn Err(\u2026)   Err($1)$0\n             bn Ok(\u2026)    Ok($1)$0\n             kw mut\n@@ -93,6 +94,7 @@ fn foo(baz: Baz) {\n          ev Err\n          ev Ok\n          bn Baz::Bar Baz::Bar$0\n+         bn Baz::Foo Baz::Foo$0\n          bn Err(\u2026)   Err($1)$0\n          bn Ok(\u2026)    Ok($1)$0\n          kw mut"}]}