{"sha": "de8a4d5d46f6f270ea35192a03d701230d0552e8", "node_id": "C_kwDOAAsO6NoAKGRlOGE0ZDVkNDZmNmYyNzBlYTM1MTkyYTAzZDcwMTIzMGQwNTUyZTg", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-10T09:45:50Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-22T17:10:55Z"}, "message": "Remove all implicit \"rustc\" from rustc_info.rs", "tree": {"sha": "15c2015c711f45a82467981a1e7870a8b5cce28f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15c2015c711f45a82467981a1e7870a8b5cce28f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de8a4d5d46f6f270ea35192a03d701230d0552e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de8a4d5d46f6f270ea35192a03d701230d0552e8", "html_url": "https://github.com/rust-lang/rust/commit/de8a4d5d46f6f270ea35192a03d701230d0552e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de8a4d5d46f6f270ea35192a03d701230d0552e8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6900c9943d7b43692da6e54cb07821ea48fa8804", "url": "https://api.github.com/repos/rust-lang/rust/commits/6900c9943d7b43692da6e54cb07821ea48fa8804", "html_url": "https://github.com/rust-lang/rust/commit/6900c9943d7b43692da6e54cb07821ea48fa8804"}], "stats": {"total": 46, "additions": 28, "deletions": 18}, "files": [{"sha": "d24803eb7c6d775ff4f35bf7f39cb3bc20839353", "filename": "build_system/bench.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fbench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fbench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbench.rs?ref=de8a4d5d46f6f270ea35192a03d701230d0552e8", "patch": "@@ -4,7 +4,7 @@ use std::path::Path;\n use super::path::{Dirs, RelPath};\n use super::prepare::GitRepo;\n use super::rustc_info::get_file_name;\n-use super::utils::{hyperfine_command, spawn_and_wait};\n+use super::utils::{hyperfine_command, spawn_and_wait, Compiler};\n \n static SIMPLE_RAYTRACER_REPO: GitRepo = GitRepo::github(\n     \"ebobby\",\n@@ -13,11 +13,11 @@ static SIMPLE_RAYTRACER_REPO: GitRepo = GitRepo::github(\n     \"<none>\",\n );\n \n-pub(crate) fn benchmark(dirs: &Dirs) {\n-    benchmark_simple_raytracer(dirs);\n+pub(crate) fn benchmark(dirs: &Dirs, bootstrap_host_compiler: &Compiler) {\n+    benchmark_simple_raytracer(dirs, bootstrap_host_compiler);\n }\n \n-fn benchmark_simple_raytracer(dirs: &Dirs) {\n+fn benchmark_simple_raytracer(dirs: &Dirs, bootstrap_host_compiler: &Compiler) {\n     if std::process::Command::new(\"hyperfine\").output().is_err() {\n         eprintln!(\"Hyperfine not installed\");\n         eprintln!(\"Hint: Try `cargo install hyperfine` to install hyperfine\");\n@@ -31,8 +31,9 @@ fn benchmark_simple_raytracer(dirs: &Dirs) {\n     let bench_runs = env::var(\"BENCH_RUNS\").unwrap_or_else(|_| \"10\".to_string()).parse().unwrap();\n \n     eprintln!(\"[BENCH COMPILE] ebobby/simple-raytracer\");\n-    let cargo_clif =\n-        RelPath::DIST.to_path(dirs).join(get_file_name(\"cargo_clif\", \"bin\").replace('_', \"-\"));\n+    let cargo_clif = RelPath::DIST\n+        .to_path(dirs)\n+        .join(get_file_name(&bootstrap_host_compiler.rustc, \"cargo_clif\", \"bin\").replace('_', \"-\"));\n     let manifest_path = SIMPLE_RAYTRACER_REPO.source_dir().to_path(dirs).join(\"Cargo.toml\");\n     let target_dir = RelPath::BUILD.join(\"simple_raytracer\").to_path(dirs);\n \n@@ -75,9 +76,18 @@ fn benchmark_simple_raytracer(dirs: &Dirs) {\n         bench_runs,\n         None,\n         &[\n-            Path::new(\".\").join(get_file_name(\"raytracer_cg_llvm\", \"bin\")).to_str().unwrap(),\n-            Path::new(\".\").join(get_file_name(\"raytracer_cg_clif\", \"bin\")).to_str().unwrap(),\n-            Path::new(\".\").join(get_file_name(\"raytracer_cg_clif_opt\", \"bin\")).to_str().unwrap(),\n+            Path::new(\".\")\n+                .join(get_file_name(&bootstrap_host_compiler.rustc, \"raytracer_cg_llvm\", \"bin\"))\n+                .to_str()\n+                .unwrap(),\n+            Path::new(\".\")\n+                .join(get_file_name(&bootstrap_host_compiler.rustc, \"raytracer_cg_clif\", \"bin\"))\n+                .to_str()\n+                .unwrap(),\n+            Path::new(\".\")\n+                .join(get_file_name(&bootstrap_host_compiler.rustc, \"raytracer_cg_clif_opt\", \"bin\"))\n+                .to_str()\n+                .unwrap(),\n         ],\n     );\n     bench_run.current_dir(RelPath::BUILD.to_path(dirs));"}, {"sha": "fc0965999e3812c6cbe02fd1dfcbbedb4582c492", "filename": "build_system/build_backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fbuild_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fbuild_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_backend.rs?ref=de8a4d5d46f6f270ea35192a03d701230d0552e8", "patch": "@@ -52,5 +52,5 @@ pub(crate) fn build_backend(\n         .target_dir(dirs)\n         .join(&bootstrap_host_compiler.triple)\n         .join(channel)\n-        .join(get_file_name(\"rustc_codegen_cranelift\", \"dylib\"))\n+        .join(get_file_name(&bootstrap_host_compiler.rustc, \"rustc_codegen_cranelift\", \"dylib\"))\n }"}, {"sha": "67c4cfa44177fc2299ff7dc6f51e0dd8af796477", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=de8a4d5d46f6f270ea35192a03d701230d0552e8", "patch": "@@ -40,7 +40,7 @@ pub(crate) fn build_sysroot(\n     try_hard_link(cg_clif_dylib_src, &cg_clif_dylib_path);\n \n     // Build and copy rustc and cargo wrappers\n-    let wrapper_base_name = get_file_name(\"____\", \"bin\");\n+    let wrapper_base_name = get_file_name(&bootstrap_host_compiler.rustc, \"____\", \"bin\");\n     let toolchain_name = get_toolchain_name();\n     for wrapper in [\"rustc-clif\", \"rustdoc-clif\", \"cargo-clif\"] {\n         let wrapper_name = wrapper_base_name.replace(\"____\", wrapper);"}, {"sha": "0a83ea937788b7633bb206d4cebad694004eb44c", "filename": "build_system/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmod.rs?ref=de8a4d5d46f6f270ea35192a03d701230d0552e8", "patch": "@@ -1,5 +1,5 @@\n use std::env;\n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n use std::process;\n \n use self::utils::{is_ci, is_ci_opt, Compiler};\n@@ -105,7 +105,7 @@ pub(crate) fn main() {\n         std::env::var(\"HOST_TRIPLE\")\n             .ok()\n             .or_else(|| config::get_value(\"host\"))\n-            .unwrap_or_else(|| rustc_info::get_host_triple()),\n+            .unwrap_or_else(|| rustc_info::get_host_triple(Path::new(\"rustc\"))),\n     );\n     let target_triple = std::env::var(\"TARGET_TRIPLE\")\n         .ok()\n@@ -187,7 +187,7 @@ pub(crate) fn main() {\n                 &bootstrap_host_compiler,\n                 target_triple,\n             );\n-            bench::benchmark(&dirs);\n+            bench::benchmark(&dirs, &bootstrap_host_compiler);\n         }\n     }\n }"}, {"sha": "63f41ad5662debecd71fb0411f5ac46d9f352b54", "filename": "build_system/rustc_info.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Frustc_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de8a4d5d46f6f270ea35192a03d701230d0552e8/build_system%2Frustc_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Frustc_info.rs?ref=de8a4d5d46f6f270ea35192a03d701230d0552e8", "patch": "@@ -7,9 +7,9 @@ pub(crate) fn get_rustc_version(rustc: &Path) -> String {\n     String::from_utf8(version_info).unwrap()\n }\n \n-pub(crate) fn get_host_triple() -> String {\n+pub(crate) fn get_host_triple(rustc: &Path) -> String {\n     let version_info =\n-        Command::new(\"rustc\").stderr(Stdio::inherit()).args(&[\"-vV\"]).output().unwrap().stdout;\n+        Command::new(rustc).stderr(Stdio::inherit()).args(&[\"-vV\"]).output().unwrap().stdout;\n     String::from_utf8(version_info)\n         .unwrap()\n         .lines()\n@@ -73,8 +73,8 @@ pub(crate) fn get_default_sysroot(rustc: &Path) -> PathBuf {\n     Path::new(String::from_utf8(default_sysroot).unwrap().trim()).to_owned()\n }\n \n-pub(crate) fn get_file_name(crate_name: &str, crate_type: &str) -> String {\n-    let file_name = Command::new(\"rustc\")\n+pub(crate) fn get_file_name(rustc: &Path, crate_name: &str, crate_type: &str) -> String {\n+    let file_name = Command::new(rustc)\n         .stderr(Stdio::inherit())\n         .args(&[\n             \"--crate-name\","}]}