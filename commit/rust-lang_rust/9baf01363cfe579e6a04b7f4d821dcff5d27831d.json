{"sha": "9baf01363cfe579e6a04b7f4d821dcff5d27831d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYWYwMTM2M2NmZTU3OWU2YTA0YjdmNGQ4MjFkY2ZmNWQyNzgzMWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-26T12:19:21Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-31T00:31:41Z"}, "message": "assert no region obligations on entering custom type op\n\nFixes #51649", "tree": {"sha": "97fe9363eb0a59a004e783284dfc7aa4ae87438a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97fe9363eb0a59a004e783284dfc7aa4ae87438a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9baf01363cfe579e6a04b7f4d821dcff5d27831d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9baf01363cfe579e6a04b7f4d821dcff5d27831d", "html_url": "https://github.com/rust-lang/rust/commit/9baf01363cfe579e6a04b7f4d821dcff5d27831d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9baf01363cfe579e6a04b7f4d821dcff5d27831d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68c2a39a720163db2e6b586aad2fb7d96040beda", "url": "https://api.github.com/repos/rust-lang/rust/commits/68c2a39a720163db2e6b586aad2fb7d96040beda", "html_url": "https://github.com/rust-lang/rust/commit/68c2a39a720163db2e6b586aad2fb7d96040beda"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "cc752d21ab2b8ade98969e8abe70f03128c1772e", "filename": "src/librustc/traits/query/type_op/custom.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9baf01363cfe579e6a04b7f4d821dcff5d27831d/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9baf01363cfe579e6a04b7f4d821dcff5d27831d/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs?ref=9baf01363cfe579e6a04b7f4d821dcff5d27831d", "patch": "@@ -75,6 +75,19 @@ fn scrape_region_constraints<'gcx, 'tcx, R>(\n ) -> Fallible<(R, Option<Rc<Vec<QueryRegionConstraint<'tcx>>>>)> {\n     let mut fulfill_cx = TraitEngine::new(infcx.tcx);\n     let dummy_body_id = ObligationCause::dummy().body_id;\n+\n+    // During NLL, we expect that nobody will register region\n+    // obligations **except** as part of a custom type op (and, at the\n+    // end of each custom type op, we scrape out the region\n+    // obligations that resulted). So this vector should be empty on\n+    // entry.\n+    let pre_obligations = infcx.take_registered_region_obligations();\n+    assert!(\n+        pre_obligations.is_empty(),\n+        \"scrape_region_constraints: incoming region obligations = {:#?}\",\n+        pre_obligations,\n+    );\n+\n     let InferOk { value, obligations } = infcx.commit_if_ok(|_| op())?;\n     debug_assert!(obligations.iter().all(|o| o.cause.body_id == dummy_body_id));\n     fulfill_cx.register_predicate_obligations(infcx, obligations);"}]}