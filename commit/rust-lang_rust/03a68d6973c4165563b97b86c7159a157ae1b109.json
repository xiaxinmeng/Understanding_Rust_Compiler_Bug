{"sha": "03a68d6973c4165563b97b86c7159a157ae1b109", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYTY4ZDY5NzNjNDE2NTU2M2I5N2I4NmM3MTU5YTE1N2FlMWIxMDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-14T05:25:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-14T05:25:08Z"}, "message": "Auto merge of #62331 - wesleywiser:fix_early_return_leak, r=matthewjasper\n\nFix leak when early returning out of `box` syntax\n\nFixes #62289\n\nr? @matthewjasper", "tree": {"sha": "e3385c32a302fffa95c8d116232504ff56fbfbeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3385c32a302fffa95c8d116232504ff56fbfbeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03a68d6973c4165563b97b86c7159a157ae1b109", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03a68d6973c4165563b97b86c7159a157ae1b109", "html_url": "https://github.com/rust-lang/rust/commit/03a68d6973c4165563b97b86c7159a157ae1b109", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03a68d6973c4165563b97b86c7159a157ae1b109/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa6b70658e76ca47e1627308c736edab63a17dc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6b70658e76ca47e1627308c736edab63a17dc8", "html_url": "https://github.com/rust-lang/rust/commit/fa6b70658e76ca47e1627308c736edab63a17dc8"}, {"sha": "aabaf121550dd3743f12ff30bab625d6f2d6f89c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aabaf121550dd3743f12ff30bab625d6f2d6f89c", "html_url": "https://github.com/rust-lang/rust/commit/aabaf121550dd3743f12ff30bab625d6f2d6f89c"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "56c518a6d57a8231489b817e72d2436a46299a13", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03a68d6973c4165563b97b86c7159a157ae1b109/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03a68d6973c4165563b97b86c7159a157ae1b109/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=03a68d6973c4165563b97b86c7159a157ae1b109", "patch": "@@ -128,7 +128,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         expr_span,\n                         scope,\n                         result,\n-                        value.ty,\n+                        expr.ty,\n                     );\n                 }\n "}, {"sha": "a3b517e9bca87bfa0cf295af84a7496c3ad5fe65", "filename": "src/test/mir-opt/issue-62289.rs", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/03a68d6973c4165563b97b86c7159a157ae1b109/src%2Ftest%2Fmir-opt%2Fissue-62289.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03a68d6973c4165563b97b86c7159a157ae1b109/src%2Ftest%2Fmir-opt%2Fissue-62289.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-62289.rs?ref=03a68d6973c4165563b97b86c7159a157ae1b109", "patch": "@@ -0,0 +1,91 @@\n+// check that we don't forget to drop the Box if we early return before\n+// initializing it\n+// ignore-tidy-linelength\n+// ignore-wasm32-bare compiled with panic=abort by default\n+\n+#![feature(box_syntax)]\n+\n+fn test() -> Option<Box<u32>> {\n+    Some(box (None?))\n+}\n+\n+fn main() {\n+    test();\n+}\n+\n+// END RUST SOURCE\n+// START rustc.test.ElaborateDrops.before.mir\n+// fn test() -> std::option::Option<std::boxed::Box<u32>> {\n+//     ...\n+//     bb0: {\n+//         StorageLive(_1);\n+//         StorageLive(_2);\n+//         _2 = Box(u32);\n+//         StorageLive(_3);\n+//         StorageLive(_4);\n+//         _4 = std::option::Option::<u32>::None;\n+//         _3 = const <std::option::Option<u32> as std::ops::Try>::into_result(move _4) -> [return: bb2, unwind: bb3];\n+//     }\n+//     bb1 (cleanup): {\n+//         resume;\n+//     }\n+//     bb2: {\n+//         StorageDead(_4);\n+//         _5 = discriminant(_3);\n+//         switchInt(move _5) -> [0isize: bb10, 1isize: bb5, otherwise: bb4];\n+//     }\n+//     bb3 (cleanup): {\n+//         drop(_2) -> bb1;\n+//     }\n+//     bb4: {\n+//         unreachable;\n+//     }\n+//     bb5: {\n+//         StorageLive(_6);\n+//         _6 = ((_3 as Err).0: std::option::NoneError);\n+//         StorageLive(_8);\n+//         StorageLive(_9);\n+//         _9 = _6;\n+//         _8 = const <std::option::NoneError as std::convert::From<std::option::NoneError>>::from(move _9) -> [return: bb7, unwind: bb3];\n+//     }\n+//     bb6: {\n+//         return;\n+//     }\n+//     bb7: {\n+//         StorageDead(_9);\n+//         _0 = const <std::option::Option<std::boxed::Box<u32>> as std::ops::Try>::from_error(move _8) -> [return: bb8, unwind: bb3];\n+//     }\n+//     bb8: {\n+//         StorageDead(_8);\n+//         StorageDead(_6);\n+//         drop(_2) -> bb9;\n+//     }\n+//     bb9: {\n+//         StorageDead(_2);\n+//         StorageDead(_1);\n+//         StorageDead(_3);\n+//         goto -> bb6;\n+//     }\n+//     bb10: {\n+//         StorageLive(_10);\n+//         _10 = ((_3 as Ok).0: u32);\n+//         (*_2) = _10;\n+//         StorageDead(_10);\n+//         _1 = move _2;\n+//         drop(_2) -> [return: bb12, unwind: bb11];\n+//     }\n+//     bb11 (cleanup): {\n+//         drop(_1) -> bb1;\n+//     }\n+//     bb12: {\n+//         StorageDead(_2);\n+//         _0 = std::option::Option::<std::boxed::Box<u32>>::Some(move _1,);\n+//         drop(_1) -> bb13;\n+//     }\n+//     bb13: {\n+//         StorageDead(_1);\n+//         StorageDead(_3);\n+//         goto -> bb6;\n+//     }\n+// }\n+// END rustc.test.ElaborateDrops.before.mir"}]}