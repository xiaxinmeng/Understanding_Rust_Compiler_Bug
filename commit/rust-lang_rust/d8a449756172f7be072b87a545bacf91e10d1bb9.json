{"sha": "d8a449756172f7be072b87a545bacf91e10d1bb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YTQ0OTc1NjE3MmY3YmUwNzJiODdhNTQ1YmFjZjkxZTEwZDFiYjk=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-10-13T17:52:43Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-10-28T17:54:07Z"}, "message": "rustdoc: Provide a general --default-setting SETTING[=VALUE] option\n\nWe just plumb through what the user tells us.\n\nThis is flagged as unstable, mostly because I don't understand the\ncompatibility rules that rustdoc obeys for local storage data, and how\nerror handling of invalid data works.\n\nWe collect() the needed HashMap from Vec of Vecs of (key, value)\npairs, so that there is a nice place to add new more-specific options.\nIt would have been possible to use Extend::extend but doing it this\nway ensures that all the used inputs are (and will stay) right next to\neach other.\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "d801717af0cd7fbdc1c8eb87d48eed28f1114851", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d801717af0cd7fbdc1c8eb87d48eed28f1114851"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8a449756172f7be072b87a545bacf91e10d1bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a449756172f7be072b87a545bacf91e10d1bb9", "html_url": "https://github.com/rust-lang/rust/commit/d8a449756172f7be072b87a545bacf91e10d1bb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8a449756172f7be072b87a545bacf91e10d1bb9/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cd96d638c37dc7f92cb8b2fc84a3f7bfe7b7960", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cd96d638c37dc7f92cb8b2fc84a3f7bfe7b7960", "html_url": "https://github.com/rust-lang/rust/commit/5cd96d638c37dc7f92cb8b2fc84a3f7bfe7b7960"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "45106c5dbf6a12a963357478fc9ae6f7b331f7d2", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d8a449756172f7be072b87a545bacf91e10d1bb9/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a449756172f7be072b87a545bacf91e10d1bb9/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=d8a449756172f7be072b87a545bacf91e10d1bb9", "patch": "@@ -377,6 +377,20 @@ impl Options {\n             }\n         };\n \n+        let mut default_settings: Vec<Vec<(String, String)>> = vec![\n+            matches\n+                .opt_strs(\"default-setting\")\n+                .iter()\n+                .map(|s| {\n+                    let mut kv = s.splitn(2, '=');\n+                    let k = kv.next().unwrap().to_string();\n+                    let v = kv.next().unwrap_or(\"true\").to_string();\n+                    (k, v)\n+                })\n+                .collect(),\n+        ];\n+        let default_settings = default_settings.drain(..).flatten().collect();\n+\n         let test_args = matches.opt_strs(\"test-args\");\n         let test_args: Vec<String> =\n             test_args.iter().flat_map(|s| s.split_whitespace()).map(|s| s.to_string()).collect();\n@@ -599,7 +613,7 @@ impl Options {\n                 themes,\n                 extension_css,\n                 extern_html_root_urls,\n-                default_settings: Default::default(),\n+                default_settings,\n                 resource_suffix,\n                 enable_minification,\n                 enable_index_page,"}, {"sha": "29e44922c76a20e9c282c92fc3b4e779340522bc", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8a449756172f7be072b87a545bacf91e10d1bb9/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a449756172f7be072b87a545bacf91e10d1bb9/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=d8a449756172f7be072b87a545bacf91e10d1bb9", "patch": "@@ -178,7 +178,7 @@ pub fn render<T: Print, S: Print>(\n         default_settings = layout\n             .default_settings\n             .iter()\n-            .map(|(k, v)| format!(r#\" data-{}=\"{}\"\"#, k.replace('-',\"_\"), Escape(v),))\n+            .map(|(k, v)| format!(r#\" data-{}=\"{}\"\"#, k.replace('-', \"_\"), Escape(v),))\n             .collect::<String>(),\n         style_files = style_files\n             .iter()"}, {"sha": "90c77488ee94554e6a8f669f953c72e6add7b0df", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d8a449756172f7be072b87a545bacf91e10d1bb9/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a449756172f7be072b87a545bacf91e10d1bb9/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=d8a449756172f7be072b87a545bacf91e10d1bb9", "patch": "@@ -269,6 +269,16 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"sort modules by where they appear in the program, rather than alphabetically\",\n             )\n         }),\n+        unstable(\"default-setting\", |o| {\n+            o.optmulti(\n+                \"\",\n+                \"default-setting\",\n+                \"Default value for a rustdoc setting (used when \\\"rustdoc-SETTING\\\" is absent \\\n+                 from web browser Local Storage).    If VALUE is not supplied, \\\"true\\\" is used. \\\n+                 Supported SETTINGs and VALUEs are not documented and not stable.\",\n+                \"SETTING[=VALUE]\",\n+            )\n+        }),\n         stable(\"theme\", |o| {\n             o.optmulti(\n                 \"\","}]}