{"sha": "31594bcd0196fbd2bff510bbe3d40678b390e696", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNTk0YmNkMDE5NmZiZDJiZmY1MTBiYmUzZDQwNjc4YjM5MGU2OTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-13T12:13:35Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-13T12:13:35Z"}, "message": "decl_check: follow test style guide", "tree": {"sha": "0a01c57a30739fc9bb9b8217c1ce9f7f0b851739", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a01c57a30739fc9bb9b8217c1ce9f7f0b851739"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31594bcd0196fbd2bff510bbe3d40678b390e696", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31594bcd0196fbd2bff510bbe3d40678b390e696", "html_url": "https://github.com/rust-lang/rust/commit/31594bcd0196fbd2bff510bbe3d40678b390e696", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31594bcd0196fbd2bff510bbe3d40678b390e696/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9beed98f2ab15f6d62283d09b6b96fa5f57a78d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9beed98f2ab15f6d62283d09b6b96fa5f57a78d1", "html_url": "https://github.com/rust-lang/rust/commit/9beed98f2ab15f6d62283d09b6b96fa5f57a78d1"}], "stats": {"total": 119, "additions": 59, "deletions": 60}, "files": [{"sha": "075dc4131fa01779a24b6700ba784fba5219e8d9", "filename": "crates/hir_ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 59, "deletions": 60, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/31594bcd0196fbd2bff510bbe3d40678b390e696/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31594bcd0196fbd2bff510bbe3d40678b390e696/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=31594bcd0196fbd2bff510bbe3d40678b390e696", "patch": "@@ -899,44 +899,44 @@ fn main() {\n     fn allow_attributes() {\n         check_diagnostics(\n             r#\"\n-            #[allow(non_snake_case)]\n-    fn NonSnakeCaseName(SOME_VAR: u8) -> u8{\n-        // cov_flags generated output from elsewhere in this file\n-        extern \"C\" {\n-            #[no_mangle]\n-            static lower_case: u8;\n-        }\n-\n-        let OtherVar = SOME_VAR + 1;\n-        OtherVar\n+#[allow(non_snake_case)]\n+fn NonSnakeCaseName(SOME_VAR: u8) -> u8{\n+    // cov_flags generated output from elsewhere in this file\n+    extern \"C\" {\n+        #[no_mangle]\n+        static lower_case: u8;\n     }\n \n-    #[allow(nonstandard_style)]\n-    mod CheckNonstandardStyle {\n-        fn HiImABadFnName() {}\n-    }\n+    let OtherVar = SOME_VAR + 1;\n+    OtherVar\n+}\n \n-    #[allow(bad_style)]\n-    mod CheckBadStyle {\n-        fn HiImABadFnName() {}\n-    }\n+#[allow(nonstandard_style)]\n+mod CheckNonstandardStyle {\n+    fn HiImABadFnName() {}\n+}\n \n-    mod F {\n-        #![allow(non_snake_case)]\n-        fn CheckItWorksWithModAttr(BAD_NAME_HI: u8) {}\n-    }\n+#[allow(bad_style)]\n+mod CheckBadStyle {\n+    fn HiImABadFnName() {}\n+}\n \n-    #[allow(non_snake_case, non_camel_case_types)]\n-    pub struct some_type {\n-        SOME_FIELD: u8,\n-        SomeField: u16,\n-    }\n+mod F {\n+    #![allow(non_snake_case)]\n+    fn CheckItWorksWithModAttr(BAD_NAME_HI: u8) {}\n+}\n \n-    #[allow(non_upper_case_globals)]\n-    pub const some_const: u8 = 10;\n+#[allow(non_snake_case, non_camel_case_types)]\n+pub struct some_type {\n+    SOME_FIELD: u8,\n+    SomeField: u16,\n+}\n \n-    #[allow(non_upper_case_globals)]\n-    pub static SomeStatic: u8 = 10;\n+#[allow(non_upper_case_globals)]\n+pub const some_const: u8 = 10;\n+\n+#[allow(non_upper_case_globals)]\n+pub static SomeStatic: u8 = 10;\n     \"#,\n         );\n     }\n@@ -945,12 +945,11 @@ fn main() {\n     fn allow_attributes_crate_attr() {\n         check_diagnostics(\n             r#\"\n-    #![allow(non_snake_case)]\n-\n-    mod F {\n-        fn CheckItWorksWithCrateAttr(BAD_NAME_HI: u8) {}\n-    }\n+#![allow(non_snake_case)]\n \n+mod F {\n+    fn CheckItWorksWithCrateAttr(BAD_NAME_HI: u8) {}\n+}\n     \"#,\n         );\n     }\n@@ -976,22 +975,22 @@ fn main() {\n \n         check_diagnostics(\n             r#\"\n-    trait T { fn a(); }\n-    struct U {}\n-    impl T for U {\n-        fn a() {\n-            // this comes out of bitflags, mostly\n-            #[allow(non_snake_case)]\n-            trait __BitFlags {\n-                const HiImAlsoBad: u8 = 2;\n-                #[inline]\n-                fn Dirty(&self) -> bool {\n-                    false\n-                }\n+trait T { fn a(); }\n+struct U {}\n+impl T for U {\n+    fn a() {\n+        // this comes out of bitflags, mostly\n+        #[allow(non_snake_case)]\n+        trait __BitFlags {\n+            const HiImAlsoBad: u8 = 2;\n+            #[inline]\n+            fn Dirty(&self) -> bool {\n+                false\n             }\n-\n         }\n+\n     }\n+}\n     \"#,\n         );\n     }\n@@ -1003,13 +1002,13 @@ fn main() {\n         // r-a, even though rustc will complain about them.\n         check_diagnostics(\n             r#\"\n-    trait BAD_TRAIT {\n-       // ^^^^^^^^^ Trait `BAD_TRAIT` should have CamelCase name, e.g. `BadTrait`\n-        fn BAD_FUNCTION();\n-        // ^^^^^^^^^^^^ Function `BAD_FUNCTION` should have snake_case name, e.g. `bad_function`\n-        fn BadFunction();\n-        // ^^^^^^^^^^^^ Function `BadFunction` should have snake_case name, e.g. `bad_function`\n-    }\n+trait BAD_TRAIT {\n+    // ^^^^^^^^^ Trait `BAD_TRAIT` should have CamelCase name, e.g. `BadTrait`\n+    fn BAD_FUNCTION();\n+    // ^^^^^^^^^^^^ Function `BAD_FUNCTION` should have snake_case name, e.g. `bad_function`\n+    fn BadFunction();\n+    // ^^^^^^^^^^^^ Function `BadFunction` should have snake_case name, e.g. `bad_function`\n+}\n     \"#,\n         );\n     }\n@@ -1020,10 +1019,10 @@ fn main() {\n         cov_mark::check!(extern_static_incorrect_case_ignored);\n         check_diagnostics(\n             r#\"\n-    extern {\n-        fn NonSnakeCaseName(SOME_VAR: u8) -> u8;\n-        pub static SomeStatic: u8 = 10;\n-    }\n+extern {\n+    fn NonSnakeCaseName(SOME_VAR: u8) -> u8;\n+    pub static SomeStatic: u8 = 10;\n+}\n             \"#,\n         );\n     }"}]}