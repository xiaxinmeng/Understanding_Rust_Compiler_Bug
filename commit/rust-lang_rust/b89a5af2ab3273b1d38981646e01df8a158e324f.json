{"sha": "b89a5af2ab3273b1d38981646e01df8a158e324f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4OWE1YWYyYWIzMjczYjFkMzg5ODE2NDZlMDFkZjhhMTU4ZTMyNGY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-26T10:54:06Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-26T10:54:06Z"}, "message": "Check in a forgotten new file", "tree": {"sha": "bb3d6b32bb6907a662b1e7ede34118cf4ba58523", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb3d6b32bb6907a662b1e7ede34118cf4ba58523"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b89a5af2ab3273b1d38981646e01df8a158e324f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b89a5af2ab3273b1d38981646e01df8a158e324f", "html_url": "https://github.com/rust-lang/rust/commit/b89a5af2ab3273b1d38981646e01df8a158e324f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b89a5af2ab3273b1d38981646e01df8a158e324f/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87e097a85346c947cea60b000677bae10409b804", "url": "https://api.github.com/repos/rust-lang/rust/commits/87e097a85346c947cea60b000677bae10409b804", "html_url": "https://github.com/rust-lang/rust/commit/87e097a85346c947cea60b000677bae10409b804"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "9f570cb924bf1e9410a774df5906328ce1df48b3", "filename": "src/rustc/middle/check_loop.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/b89a5af2ab3273b1d38981646e01df8a158e324f/src%2Frustc%2Fmiddle%2Fcheck_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b89a5af2ab3273b1d38981646e01df8a158e324f/src%2Frustc%2Fmiddle%2Fcheck_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fcheck_loop.rs?ref=b89a5af2ab3273b1d38981646e01df8a158e324f", "patch": "@@ -0,0 +1,54 @@\n+import syntax::ast::*;\n+import syntax::visit;\n+import driver::session::session;\n+\n+type ctx = {in_loop: bool, can_ret: bool};\n+\n+fn check_crate(sess: session, crate: @crate) {\n+    visit::visit_crate(*crate, {in_loop: false,can_ret: true}, visit::mk_vt(@{\n+        visit_item: {|i, _cx, v|\n+            visit::visit_item(i, {in_loop: false, can_ret: true}, v);\n+        },\n+        visit_expr: {|e: @expr, cx: ctx, v: visit::vt<ctx>|\n+            alt e.node {\n+              expr_for(_, e, b) | expr_while(e, b) | expr_do_while(b, e) {\n+                v.visit_expr(e, cx, v);\n+                v.visit_block(b, {in_loop: true with cx}, v);\n+              }\n+              expr_loop(b) {\n+                v.visit_block(b, {in_loop: true with cx}, v);\n+              }\n+              expr_fn(_, _, _, _) {\n+                visit::visit_expr(e, {in_loop: false, can_ret: true}, v);\n+              }\n+              expr_fn_block(fn_decl, blk) {\n+                visit::visit_expr(e, {in_loop: false, can_ret: false}, v);\n+              }\n+              expr_break {\n+                if !cx.in_loop {\n+                    sess.span_err(e.span, \"`break` outside of loop\");\n+                }\n+              }\n+              expr_cont {\n+                if !cx.in_loop {\n+                    sess.span_err(e.span, \"`cont` outside of loop\");\n+                }\n+              }\n+              expr_ret(oe) {\n+                if !cx.can_ret {\n+                    sess.span_err(e.span, \"`ret` in block function\");\n+                }\n+                visit::visit_expr_opt(oe, cx, v);\n+              }\n+              expr_be(re) {\n+                if !cx.can_ret {\n+                    sess.span_err(e.span, \"`be` in block function\");\n+                }\n+                v.visit_expr(re, cx, v);\n+              }\n+              _ { visit::visit_expr(e, cx, v); }\n+            }\n+        }\n+        with *visit::default_visitor()\n+    }));\n+}\n\\ No newline at end of file"}]}