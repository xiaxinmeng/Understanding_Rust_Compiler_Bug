{"sha": "b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "node_id": "C_kwDOAAsO6NoAKGIxZDhiNzE4NmNjZWUyZWY1Nzg4NmRjM2JmMTcyMjVkMTFhMzkzNWY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-12T14:16:48Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-22T17:17:05Z"}, "message": "Only pass --frozen to cargo when it is passed to y.rs", "tree": {"sha": "4813b568202c6e8911662ffd9b7da2b004dc96ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4813b568202c6e8911662ffd9b7da2b004dc96ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "html_url": "https://github.com/rust-lang/rust/commit/b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2155c0350081ae159e37aa25cfd829da950bb282", "url": "https://api.github.com/repos/rust-lang/rust/commits/2155c0350081ae159e37aa25cfd829da950bb282", "html_url": "https://github.com/rust-lang/rust/commit/2155c0350081ae159e37aa25cfd829da950bb282"}], "stats": {"total": 48, "additions": 16, "deletions": 32}, "files": [{"sha": "5b49a2e01d008009a455604966e9da5f9ce7d7ef", "filename": "build_system/abi_cafe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fabi_cafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fabi_cafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fabi_cafe.rs?ref=b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "patch": "@@ -19,7 +19,6 @@ pub(crate) fn run(\n     bootstrap_host_compiler: &Compiler,\n ) {\n     ABI_CAFE_REPO.fetch(dirs);\n-    spawn_and_wait(ABI_CAFE.fetch(\"cargo\", &bootstrap_host_compiler.rustc, dirs));\n \n     eprintln!(\"Building sysroot for abi-cafe\");\n     build_sysroot::build_sysroot("}, {"sha": "2f8550dbf0e90d8552de9a0aa915dd6cef05078d", "filename": "build_system/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmod.rs?ref=b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "patch": "@@ -78,6 +78,7 @@ pub(crate) fn main() {\n     let mut channel = \"release\";\n     let mut sysroot_kind = SysrootKind::Clif;\n     let mut use_unstable_features = true;\n+    let mut frozen = false;\n     while let Some(arg) = args.next().as_deref() {\n         match arg {\n             \"--out-dir\" => {\n@@ -96,6 +97,7 @@ pub(crate) fn main() {\n                 }\n             }\n             \"--no-unstable-features\" => use_unstable_features = false,\n+            \"--frozen\" => frozen = true,\n             flag if flag.starts_with(\"-\") => arg_error!(\"Unknown flag {}\", flag),\n             arg => arg_error!(\"Unexpected argument {}\", arg),\n         }\n@@ -132,6 +134,7 @@ pub(crate) fn main() {\n         download_dir: out_dir.join(\"download\"),\n         build_dir: out_dir.join(\"build\"),\n         dist_dir: out_dir.join(\"dist\"),\n+        frozen,\n     };\n \n     path::RelPath::BUILD.ensure_exists(&dirs);"}, {"sha": "4f86c0fd29d6a39204c4a325758954b01936e3e0", "filename": "build_system/path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fpath.rs?ref=b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "patch": "@@ -9,6 +9,7 @@ pub(crate) struct Dirs {\n     pub(crate) download_dir: PathBuf,\n     pub(crate) build_dir: PathBuf,\n     pub(crate) dist_dir: PathBuf,\n+    pub(crate) frozen: bool,\n }\n \n #[doc(hidden)]"}, {"sha": "2754b167850fa9e7a6e37adc25c027d701aacfbb", "filename": "build_system/prepare.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "patch": "@@ -12,20 +12,12 @@ use super::utils::{copy_dir_recursively, git_command, retry_spawn_and_wait, spaw\n pub(crate) fn prepare(dirs: &Dirs) {\n     RelPath::DOWNLOAD.ensure_fresh(dirs);\n \n-    spawn_and_wait(super::build_backend::CG_CLIF.fetch(\"cargo\", \"rustc\", dirs));\n-\n     prepare_stdlib(dirs);\n-    spawn_and_wait(super::build_sysroot::STANDARD_LIBRARY.fetch(\"cargo\", \"rustc\", dirs));\n-\n     prepare_coretests(dirs);\n-    spawn_and_wait(super::tests::LIBCORE_TESTS.fetch(\"cargo\", \"rustc\", dirs));\n \n     super::tests::RAND_REPO.fetch(dirs);\n-    spawn_and_wait(super::tests::RAND.fetch(\"cargo\", \"rustc\", dirs));\n     super::tests::REGEX_REPO.fetch(dirs);\n-    spawn_and_wait(super::tests::REGEX.fetch(\"cargo\", \"rustc\", dirs));\n     super::tests::PORTABLE_SIMD_REPO.fetch(dirs);\n-    spawn_and_wait(super::tests::PORTABLE_SIMD.fetch(\"cargo\", \"rustc\", dirs));\n }\n \n fn prepare_stdlib(dirs: &Dirs) {"}, {"sha": "e7b4f0af2d94128d6b544cdeb99239cf889346f7", "filename": "build_system/usage.txt", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fusage.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Fusage.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fusage.txt?ref=b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "patch": "@@ -2,10 +2,10 @@ The build system of cg_clif.\n \n USAGE:\n     ./y.rs prepare [--out-dir DIR]\n-    ./y.rs build [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features]\n-    ./y.rs test [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features]\n-    ./y.rs abi-cafe [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features]\n-    ./y.rs bench [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features]\n+    ./y.rs build [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features] [--frozen]\n+    ./y.rs test [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features] [--frozen]\n+    ./y.rs abi-cafe [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features] [--frozen]\n+    ./y.rs bench [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--no-unstable-features] [--frozen]\n \n OPTIONS:\n     --debug\n@@ -26,6 +26,9 @@ OPTIONS:\n             Some features are not yet ready for production usage. This option will disable these\n             features. This includes the JIT mode and inline assembly support.\n \n+    --frozen\n+            Require Cargo.lock and cache are up to date\n+\n REQUIREMENTS:\n     * Rustup: The build system has a hard coded dependency on rustup to install the right nightly\n       version and make sure it is used where necessary."}, {"sha": "3e12ed22ef6d8b49bdd5e2bf8863927c0c055827", "filename": "build_system/utils.rs", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d8b7186ccee2ef57886dc3bf17225d11a3935f/build_system%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Futils.rs?ref=b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "patch": "@@ -81,8 +81,11 @@ impl CargoProject {\n             .arg(\"--manifest-path\")\n             .arg(self.manifest_path(dirs))\n             .arg(\"--target-dir\")\n-            .arg(self.target_dir(dirs))\n-            .arg(\"--frozen\");\n+            .arg(self.target_dir(dirs));\n+\n+        if dirs.frozen {\n+            cmd.arg(\"--frozen\");\n+        }\n \n         cmd\n     }\n@@ -107,23 +110,6 @@ impl CargoProject {\n         cmd\n     }\n \n-    #[must_use]\n-    pub(crate) fn fetch(\n-        &self,\n-        cargo: impl AsRef<Path>,\n-        rustc: impl AsRef<Path>,\n-        dirs: &Dirs,\n-    ) -> Command {\n-        let mut cmd = Command::new(cargo.as_ref());\n-\n-        cmd.env(\"RUSTC\", rustc.as_ref())\n-            .arg(\"fetch\")\n-            .arg(\"--manifest-path\")\n-            .arg(self.manifest_path(dirs));\n-\n-        cmd\n-    }\n-\n     pub(crate) fn clean(&self, dirs: &Dirs) {\n         let _ = fs::remove_dir_all(self.target_dir(dirs));\n     }"}]}