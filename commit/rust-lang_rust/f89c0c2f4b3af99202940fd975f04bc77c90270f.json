{"sha": "f89c0c2f4b3af99202940fd975f04bc77c90270f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OWMwYzJmNGIzYWY5OTIwMjk0MGZkOTc1ZjA0YmM3N2M5MDI3MGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-28T03:45:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-28T03:45:46Z"}, "message": "Auto merge of #33800 - nrc:save-fn-name, r=eddyb\n\nsave-analysis: use a function's short name", "tree": {"sha": "a516a8a394234de294f4a9245330def769572aad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a516a8a394234de294f4a9245330def769572aad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f89c0c2f4b3af99202940fd975f04bc77c90270f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f89c0c2f4b3af99202940fd975f04bc77c90270f", "html_url": "https://github.com/rust-lang/rust/commit/f89c0c2f4b3af99202940fd975f04bc77c90270f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f89c0c2f4b3af99202940fd975f04bc77c90270f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b012ed142f03c9082773f5091c58c82d47cae79", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b012ed142f03c9082773f5091c58c82d47cae79", "html_url": "https://github.com/rust-lang/rust/commit/8b012ed142f03c9082773f5091c58c82d47cae79"}, {"sha": "5106ce7bfb9f13c16fa424de9712c876a5cc813c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5106ce7bfb9f13c16fa424de9712c876a5cc813c", "html_url": "https://github.com/rust-lang/rust/commit/5106ce7bfb9f13c16fa424de9712c876a5cc813c"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "05de5d2770d2722350c5819e9d56cbbb2c1b6258", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f89c0c2f4b3af99202940fd975f04bc77c90270f/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f89c0c2f4b3af99202940fd975f04bc77c90270f/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=f89c0c2f4b3af99202940fd975f04bc77c90270f", "patch": "@@ -123,15 +123,14 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n     pub fn get_item_data(&self, item: &ast::Item) -> Option<Data> {\n         match item.node {\n             ast::ItemKind::Fn(ref decl, _, _, _, ref generics, _) => {\n-                let name = self.tcx.node_path_str(item.id);\n-                let qualname = format!(\"::{}\", name);\n+                let qualname = format!(\"::{}\", self.tcx.node_path_str(item.id));\n                 let sub_span = self.span_utils.sub_span_after_keyword(item.span, keywords::Fn);\n                 filter!(self.span_utils, sub_span, item.span, None);\n \n \n                 Some(Data::FunctionData(FunctionData {\n                     id: item.id,\n-                    name: name,\n+                    name: item.ident.to_string(),\n                     qualname: qualname,\n                     declaration: None,\n                     span: sub_span.unwrap(),"}]}