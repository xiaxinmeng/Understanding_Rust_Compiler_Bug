{"sha": "c825bc431ee5b815847b9bab693c59c43986fc4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MjViYzQzMWVlNWI4MTU4NDdiOWJhYjY5M2M1OWM0Mzk4NmZjNGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-03T10:56:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-03T10:56:15Z"}, "message": "Auto merge of #83312 - petrochenkov:noinner, r=Aaron1011\n\nparser: Remove support for inner attributes on non-block expressions\n\nRemove support for attributes like\n```rust\nfn attrs() {\n    (#![print_target_and_args(fifth)] 1, 2);\n\n    [#![print_target_and_args(sixth)] 1 , 2];\n    [#![print_target_and_args(seventh)] true ; 5];\n\n    match 0 {\n        #![print_target_and_args(eighth)]\n        _ => {}\n    }\n\n    MyStruct { #![print_target_and_args(ninth)] field: true };\n}\n```\nThey are\n- useless\n- unstable (modulo holes like https://github.com/rust-lang/rust/issues/65860)\n- pessimize compiler performance, namely token collection for macros (cc https://github.com/rust-lang/rust/pull/82608)\n\nI still want to run crater on this to check whether the stability holes are exploited in practice, and whether such attributes are used at all.", "tree": {"sha": "cf73ba71c11ff4aafcc88db6efb49209cf564cbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf73ba71c11ff4aafcc88db6efb49209cf564cbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c825bc431ee5b815847b9bab693c59c43986fc4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c825bc431ee5b815847b9bab693c59c43986fc4b", "html_url": "https://github.com/rust-lang/rust/commit/c825bc431ee5b815847b9bab693c59c43986fc4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c825bc431ee5b815847b9bab693c59c43986fc4b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e327a823d8b64e294e490efeca7829f383aa119d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e327a823d8b64e294e490efeca7829f383aa119d", "html_url": "https://github.com/rust-lang/rust/commit/e327a823d8b64e294e490efeca7829f383aa119d"}, {"sha": "1443c7646d37eb69c434268ec8b27cd0cf82d9f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1443c7646d37eb69c434268ec8b27cd0cf82d9f2", "html_url": "https://github.com/rust-lang/rust/commit/1443c7646d37eb69c434268ec8b27cd0cf82d9f2"}], "stats": {"total": 953, "additions": 316, "deletions": 637}, "files": [{"sha": "fdcb68cf421c1e058d10459fda8d2878d1189c39", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -366,10 +366,6 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n         self.print_either_attributes(attrs, ast::AttrStyle::Inner, false, true)\n     }\n \n-    fn print_inner_attributes_no_trailing_hardbreak(&mut self, attrs: &[ast::Attribute]) {\n-        self.print_either_attributes(attrs, ast::AttrStyle::Inner, false, false)\n-    }\n-\n     fn print_outer_attributes(&mut self, attrs: &[ast::Attribute]) {\n         self.print_either_attributes(attrs, ast::AttrStyle::Outer, false, true)\n     }\n@@ -1675,32 +1671,24 @@ impl<'a> State<'a> {\n         }\n     }\n \n-    fn print_expr_vec(&mut self, exprs: &[P<ast::Expr>], attrs: &[ast::Attribute]) {\n+    fn print_expr_vec(&mut self, exprs: &[P<ast::Expr>]) {\n         self.ibox(INDENT_UNIT);\n         self.s.word(\"[\");\n-        self.print_inner_attributes_inline(attrs);\n         self.commasep_exprs(Inconsistent, exprs);\n         self.s.word(\"]\");\n         self.end();\n     }\n \n-    fn print_expr_anon_const(&mut self, expr: &ast::AnonConst, attrs: &[ast::Attribute]) {\n+    fn print_expr_anon_const(&mut self, expr: &ast::AnonConst) {\n         self.ibox(INDENT_UNIT);\n         self.s.word(\"const\");\n-        self.print_inner_attributes_inline(attrs);\n         self.print_expr(&expr.value);\n         self.end();\n     }\n \n-    fn print_expr_repeat(\n-        &mut self,\n-        element: &ast::Expr,\n-        count: &ast::AnonConst,\n-        attrs: &[ast::Attribute],\n-    ) {\n+    fn print_expr_repeat(&mut self, element: &ast::Expr, count: &ast::AnonConst) {\n         self.ibox(INDENT_UNIT);\n         self.s.word(\"[\");\n-        self.print_inner_attributes_inline(attrs);\n         self.print_expr(element);\n         self.word_space(\";\");\n         self.print_expr(&count.value);\n@@ -1713,11 +1701,9 @@ impl<'a> State<'a> {\n         path: &ast::Path,\n         fields: &[ast::ExprField],\n         rest: &ast::StructRest,\n-        attrs: &[ast::Attribute],\n     ) {\n         self.print_path(path, true, 0);\n         self.s.word(\"{\");\n-        self.print_inner_attributes_inline(attrs);\n         self.commasep_cmnt(\n             Consistent,\n             fields,\n@@ -1752,9 +1738,8 @@ impl<'a> State<'a> {\n         self.s.word(\"}\");\n     }\n \n-    fn print_expr_tup(&mut self, exprs: &[P<ast::Expr>], attrs: &[ast::Attribute]) {\n+    fn print_expr_tup(&mut self, exprs: &[P<ast::Expr>]) {\n         self.popen();\n-        self.print_inner_attributes_inline(attrs);\n         self.commasep_exprs(Inconsistent, exprs);\n         if exprs.len() == 1 {\n             self.s.word(\",\");\n@@ -1865,19 +1850,19 @@ impl<'a> State<'a> {\n                 self.print_expr_maybe_paren(expr, parser::PREC_PREFIX);\n             }\n             ast::ExprKind::Array(ref exprs) => {\n-                self.print_expr_vec(&exprs[..], attrs);\n+                self.print_expr_vec(exprs);\n             }\n             ast::ExprKind::ConstBlock(ref anon_const) => {\n-                self.print_expr_anon_const(anon_const, attrs);\n+                self.print_expr_anon_const(anon_const);\n             }\n             ast::ExprKind::Repeat(ref element, ref count) => {\n-                self.print_expr_repeat(element, count, attrs);\n+                self.print_expr_repeat(element, count);\n             }\n             ast::ExprKind::Struct(ref se) => {\n-                self.print_expr_struct(&se.path, &se.fields, &se.rest, attrs);\n+                self.print_expr_struct(&se.path, &se.fields, &se.rest);\n             }\n             ast::ExprKind::Tup(ref exprs) => {\n-                self.print_expr_tup(&exprs[..], attrs);\n+                self.print_expr_tup(exprs);\n             }\n             ast::ExprKind::Call(ref func, ref args) => {\n                 self.print_expr_call(func, &args[..]);\n@@ -1955,7 +1940,6 @@ impl<'a> State<'a> {\n                 self.print_expr_as_cond(expr);\n                 self.s.space();\n                 self.bopen();\n-                self.print_inner_attributes_no_trailing_hardbreak(attrs);\n                 for arm in arms {\n                     self.print_arm(arm);\n                 }\n@@ -2253,7 +2237,6 @@ impl<'a> State<'a> {\n             ast::ExprKind::MacCall(ref m) => self.print_mac(m),\n             ast::ExprKind::Paren(ref e) => {\n                 self.popen();\n-                self.print_inner_attributes_inline(attrs);\n                 self.print_expr(e);\n                 self.pclose();\n             }"}, {"sha": "56c97b5947682c3f9d868cfda7a6daa17937c4e0", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -1216,10 +1216,9 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    fn parse_tuple_parens_expr(&mut self, mut attrs: AttrVec) -> PResult<'a, P<Expr>> {\n+    fn parse_tuple_parens_expr(&mut self, attrs: AttrVec) -> PResult<'a, P<Expr>> {\n         let lo = self.token.span;\n         self.expect(&token::OpenDelim(token::Paren))?;\n-        attrs.extend(self.parse_inner_attributes()?); // `(#![foo] a, b, ...)` is OK.\n         let (es, trailing_comma) = match self.parse_seq_to_end(\n             &token::CloseDelim(token::Paren),\n             SeqSep::trailing_allowed(token::Comma),\n@@ -1239,12 +1238,10 @@ impl<'a> Parser<'a> {\n         self.maybe_recover_from_bad_qpath(expr, true)\n     }\n \n-    fn parse_array_or_repeat_expr(&mut self, mut attrs: AttrVec) -> PResult<'a, P<Expr>> {\n+    fn parse_array_or_repeat_expr(&mut self, attrs: AttrVec) -> PResult<'a, P<Expr>> {\n         let lo = self.token.span;\n         self.bump(); // `[`\n \n-        attrs.extend(self.parse_inner_attributes()?);\n-\n         let close = &token::CloseDelim(token::Bracket);\n         let kind = if self.eat(close) {\n             // Empty vector\n@@ -1950,7 +1947,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses a `match ... { ... }` expression (`match` token already eaten).\n-    fn parse_match_expr(&mut self, mut attrs: AttrVec) -> PResult<'a, P<Expr>> {\n+    fn parse_match_expr(&mut self, attrs: AttrVec) -> PResult<'a, P<Expr>> {\n         let match_span = self.prev_token.span;\n         let lo = self.prev_token.span;\n         let scrutinee = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n@@ -1965,7 +1962,6 @@ impl<'a> Parser<'a> {\n             }\n             return Err(e);\n         }\n-        attrs.extend(self.parse_inner_attributes()?);\n \n         let mut arms: Vec<Arm> = Vec::new();\n         while self.token != token::CloseDelim(token::Brace) {\n@@ -2293,15 +2289,13 @@ impl<'a> Parser<'a> {\n     pub(super) fn parse_struct_expr(\n         &mut self,\n         pth: ast::Path,\n-        mut attrs: AttrVec,\n+        attrs: AttrVec,\n         recover: bool,\n     ) -> PResult<'a, P<Expr>> {\n         let mut fields = Vec::new();\n         let mut base = ast::StructRest::None;\n         let mut recover_async = false;\n \n-        attrs.extend(self.parse_inner_attributes()?);\n-\n         let mut async_block_err = |e: &mut DiagnosticBuilder<'_>, span: Span| {\n             recover_async = true;\n             e.span_label(span, \"`async` blocks are only allowed in Rust 2018 or later\");"}, {"sha": "de42a8c4ed5eda23a7695394fb1f8333fb07b072", "filename": "src/test/pretty/ast-stmt-expr-attr.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fpretty%2Fast-stmt-expr-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fpretty%2Fast-stmt-expr-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fast-stmt-expr-attr.rs?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -5,15 +5,15 @@ fn main() { }\n #[cfg(FALSE)]\n fn syntax() {\n     let _ = #[attr] box 0;\n-    let _ = #[attr] [#![attr] ];\n-    let _ = #[attr] [#![attr] 0];\n-    let _ = #[attr] [#![attr] 0; 0];\n-    let _ = #[attr] [#![attr] 0, 0, 0];\n+    let _ = #[attr] [];\n+    let _ = #[attr] [0];\n+    let _ = #[attr] [0; 0];\n+    let _ = #[attr] [0, 0, 0];\n     let _ = #[attr] foo();\n     let _ = #[attr] x.foo();\n-    let _ = #[attr] (#![attr] );\n-    let _ = #[attr] (#![attr] #[attr] 0,);\n-    let _ = #[attr] (#![attr] #[attr] 0, 0);\n+    let _ = #[attr] ();\n+    let _ = #[attr] (#[attr] 0,);\n+    let _ = #[attr] (#[attr] 0, 0);\n     let _ = #[attr] 0 + #[attr] 0;\n     let _ = #[attr] 0 / #[attr] 0;\n     let _ = #[attr] 0 & #[attr] 0;\n@@ -43,10 +43,10 @@ fn syntax() {\n                     #![attr]\n                 };\n     let _ =\n-        #[attr] match true {\n-                    #![attr]\n-                            #[attr]\n-                            _ => false,\n+        #[attr] match true\n+                    {\n+                     #[attr]\n+                     _ => false,\n                 };\n     let _ = #[attr] || #[attr] foo;\n     let _ = #[attr] move || #[attr] foo;\n@@ -119,10 +119,10 @@ fn syntax() {\n     let _ = #[attr] foo![# ! [attr]];\n     let _ = #[attr] foo! { };\n     let _ = #[attr] foo! { # ! [attr] };\n-    let _ = #[attr] Foo{#![attr] bar: baz,};\n-    let _ = #[attr] Foo{#![attr] ..foo};\n-    let _ = #[attr] Foo{#![attr] bar: baz, ..foo};\n-    let _ = #[attr] (#![attr] 0);\n+    let _ = #[attr] Foo{bar: baz,};\n+    let _ = #[attr] Foo{..foo};\n+    let _ = #[attr] Foo{bar: baz, ..foo};\n+    let _ = #[attr] (0);\n \n     {\n         #[attr]"}, {"sha": "54a8438f1d0414df175f5c036cf8adec33a5275d", "filename": "src/test/pretty/stmt_expr_attributes.rs", "status": "modified", "additions": 24, "deletions": 35, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -41,16 +41,9 @@ fn _3() {\n fn _4() {\n \n     #[rustc_dummy]\n-    match () {\n-        #![rustc_dummy]\n-        _ => (),\n-    }\n+    match () { _ => (), }\n \n-    let _ =\n-        #[rustc_dummy] match () {\n-                           #![rustc_dummy]\n-                           () => (),\n-                       };\n+    let _ = #[rustc_dummy] match () { () => (), };\n }\n \n fn _5() {\n@@ -71,14 +64,14 @@ fn _5() {\n fn _6() {\n \n     #[rustc_dummy]\n-    [#![rustc_dummy] 1, 2, 3];\n+    [1, 2, 3];\n \n-    let _ = #[rustc_dummy] [#![rustc_dummy] 1, 2, 3];\n+    let _ = #[rustc_dummy] [1, 2, 3];\n \n     #[rustc_dummy]\n-    [#![rustc_dummy] 1; 4];\n+    [1; 4];\n \n-    let _ = #[rustc_dummy] [#![rustc_dummy] 1; 4];\n+    let _ = #[rustc_dummy] [1; 4];\n }\n \n struct Foo {\n@@ -90,24 +83,24 @@ struct Bar(());\n fn _7() {\n \n     #[rustc_dummy]\n-    Foo{#![rustc_dummy] data: (),};\n+    Foo{data: (),};\n \n-    let _ = #[rustc_dummy] Foo{#![rustc_dummy] data: (),};\n+    let _ = #[rustc_dummy] Foo{data: (),};\n }\n \n fn _8() {\n \n     #[rustc_dummy]\n-    (#![rustc_dummy] );\n+    ();\n \n     #[rustc_dummy]\n-    (#![rustc_dummy] 0);\n+    (0);\n \n     #[rustc_dummy]\n-    (#![rustc_dummy] 0,);\n+    (0,);\n \n     #[rustc_dummy]\n-    (#![rustc_dummy] 0, 1);\n+    (0, 1);\n }\n \n fn _9() {\n@@ -138,15 +131,15 @@ fn _10() {\n \n fn _11() {\n     let _ = #[rustc_dummy] box 0;\n-    let _: [(); 0] = #[rustc_dummy] [#![rustc_dummy] ];\n-    let _ = #[rustc_dummy] [#![rustc_dummy] 0, 0];\n-    let _ = #[rustc_dummy] [#![rustc_dummy] 0; 0];\n+    let _: [(); 0] = #[rustc_dummy] [];\n+    let _ = #[rustc_dummy] [0, 0];\n+    let _ = #[rustc_dummy] [0; 0];\n     let _ = #[rustc_dummy] foo();\n     let _ = #[rustc_dummy] 1i32.clone();\n-    let _ = #[rustc_dummy] (#![rustc_dummy] );\n-    let _ = #[rustc_dummy] (#![rustc_dummy] 0);\n-    let _ = #[rustc_dummy] (#![rustc_dummy] 0,);\n-    let _ = #[rustc_dummy] (#![rustc_dummy] 0, 0);\n+    let _ = #[rustc_dummy] ();\n+    let _ = #[rustc_dummy] (0);\n+    let _ = #[rustc_dummy] (0,);\n+    let _ = #[rustc_dummy] (0, 0);\n     let _ = #[rustc_dummy] 0 + #[rustc_dummy] 0;\n     let _ = #[rustc_dummy] !0;\n     let _ = #[rustc_dummy] -0i32;\n@@ -171,11 +164,7 @@ fn _11() {\n         #[rustc_dummy] loop  {\n                            #![rustc_dummy]\n                        };\n-    let _ =\n-        #[rustc_dummy] match false {\n-                           #![rustc_dummy]\n-                           _ => (),\n-                       };\n+    let _ = #[rustc_dummy] match false { _ => (), };\n     let _ = #[rustc_dummy] || #[rustc_dummy] ();\n     let _ = #[rustc_dummy] move || #[rustc_dummy] ();\n     let _ =\n@@ -237,10 +226,10 @@ fn _11() {\n     let _ = #[rustc_dummy] expr_mac!();\n     let _ = #[rustc_dummy] expr_mac![];\n     let _ = #[rustc_dummy] expr_mac! { };\n-    let _ = #[rustc_dummy] Foo{#![rustc_dummy] data: (),};\n-    let _ = #[rustc_dummy] Foo{#![rustc_dummy] ..s};\n-    let _ = #[rustc_dummy] Foo{#![rustc_dummy] data: (), ..s};\n-    let _ = #[rustc_dummy] (#![rustc_dummy] 0);\n+    let _ = #[rustc_dummy] Foo{data: (),};\n+    let _ = #[rustc_dummy] Foo{..s};\n+    let _ = #[rustc_dummy] Foo{data: (), ..s};\n+    let _ = #[rustc_dummy] (0);\n }\n \n fn _12() {"}, {"sha": "e1ec2e951cfec93ada6dc0d31c32e63a95406f60", "filename": "src/test/ui/lint/expr_attr_paren_order.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Flint%2Fexpr_attr_paren_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Flint%2Fexpr_attr_paren_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fexpr_attr_paren_order.rs?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -5,16 +5,14 @@ fn main() {\n     // Test that attributes on parens get concatenated\n     // in the expected order in the hir folder.\n \n-    #[deny(non_snake_case)] (\n-        #![allow(non_snake_case)]\n+    #[deny(non_snake_case)] #[allow(non_snake_case)] (\n         {\n             let X = 0;\n             let _ = X;\n         }\n     );\n \n-    #[allow(non_snake_case)] (\n-        #![deny(non_snake_case)]\n+    #[allow(non_snake_case)] #[deny(non_snake_case)] (\n         {\n             let X = 0; //~ ERROR snake case name\n             let _ = X;"}, {"sha": "42beed10c19fd4ee9547a13c665e49d3759ed857", "filename": "src/test/ui/lint/expr_attr_paren_order.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Flint%2Fexpr_attr_paren_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Flint%2Fexpr_attr_paren_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fexpr_attr_paren_order.stderr?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -1,14 +1,14 @@\n error: variable `X` should have a snake case name\n-  --> $DIR/expr_attr_paren_order.rs:19:17\n+  --> $DIR/expr_attr_paren_order.rs:17:17\n    |\n LL |             let X = 0;\n    |                 ^ help: convert the identifier to snake case (notice the capitalization): `x`\n    |\n note: the lint level is defined here\n-  --> $DIR/expr_attr_paren_order.rs:17:17\n+  --> $DIR/expr_attr_paren_order.rs:15:37\n    |\n-LL |         #![deny(non_snake_case)]\n-   |                 ^^^^^^^^^^^^^^\n+LL |     #[allow(non_snake_case)] #[deny(non_snake_case)] (\n+   |                                     ^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "d488cd0c2d3f864560957c1e40f02790b00fe5be", "filename": "src/test/ui/parser/stmt_expr_attrs_placement.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fparser%2Fstmt_expr_attrs_placement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fparser%2Fstmt_expr_attrs_placement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstmt_expr_attrs_placement.rs?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -8,15 +8,31 @@ fn main() {\n     //~^ ERROR an inner attribute is not permitted in this context\n \n     let b = (#![allow(warnings)] 1, 2);\n+    //~^ ERROR an inner attribute is not permitted in this context\n \n     let c = {\n         #![allow(warnings)]\n         (#![allow(warnings)] 1, 2)\n+        //~^ ERROR an inner attribute is not permitted in this context\n     };\n \n     let d = {\n         #![allow(warnings)]\n         let e = (#![allow(warnings)] 1, 2);\n+        //~^ ERROR an inner attribute is not permitted in this context\n         e\n     };\n+\n+    let e = [#![allow(warnings)] 1, 2];\n+    //~^ ERROR an inner attribute is not permitted in this context\n+\n+    let f = [#![allow(warnings)] 1; 0];\n+    //~^ ERROR an inner attribute is not permitted in this context\n+\n+    let g = match true { #![allow(warnings)] _ => {} };\n+    //~^ ERROR an inner attribute is not permitted in this context\n+\n+    struct MyStruct { field: u8 }\n+    let h = MyStruct { #![allow(warnings)] field: 0 };\n+    //~^ ERROR an inner attribute is not permitted in this context\n }"}, {"sha": "185cc0096407e3973022e39c62def87b9a41dd81", "filename": "src/test/ui/parser/stmt_expr_attrs_placement.stderr", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fparser%2Fstmt_expr_attrs_placement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fparser%2Fstmt_expr_attrs_placement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstmt_expr_attrs_placement.stderr?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -6,5 +6,61 @@ LL |     let a = #![allow(warnings)] (1, 2);\n    |\n    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n \n-error: aborting due to previous error\n+error: an inner attribute is not permitted in this context\n+  --> $DIR/stmt_expr_attrs_placement.rs:10:14\n+   |\n+LL |     let b = (#![allow(warnings)] 1, 2);\n+   |              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n+\n+error: an inner attribute is not permitted in this context\n+  --> $DIR/stmt_expr_attrs_placement.rs:15:10\n+   |\n+LL |         (#![allow(warnings)] 1, 2)\n+   |          ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n+\n+error: an inner attribute is not permitted in this context\n+  --> $DIR/stmt_expr_attrs_placement.rs:21:18\n+   |\n+LL |         let e = (#![allow(warnings)] 1, 2);\n+   |                  ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n+\n+error: an inner attribute is not permitted in this context\n+  --> $DIR/stmt_expr_attrs_placement.rs:26:14\n+   |\n+LL |     let e = [#![allow(warnings)] 1, 2];\n+   |              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n+\n+error: an inner attribute is not permitted in this context\n+  --> $DIR/stmt_expr_attrs_placement.rs:29:14\n+   |\n+LL |     let f = [#![allow(warnings)] 1; 0];\n+   |              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n+\n+error: an inner attribute is not permitted in this context\n+  --> $DIR/stmt_expr_attrs_placement.rs:32:26\n+   |\n+LL |     let g = match true { #![allow(warnings)] _ => {} };\n+   |                          ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n+\n+error: an inner attribute is not permitted in this context\n+  --> $DIR/stmt_expr_attrs_placement.rs:36:24\n+   |\n+LL |     let h = MyStruct { #![allow(warnings)] field: 0 };\n+   |                        ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n+\n+error: aborting due to 8 previous errors\n "}, {"sha": "2e3c704da43924cfdea8bf27a712641e77cc2c7f", "filename": "src/test/ui/proc-macro/inner-attrs.rs", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.rs?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -1,6 +1,7 @@\n // compile-flags: -Z span-debug --error-format human\n // aux-build:test-macros.rs\n // edition:2018\n+\n #![feature(custom_inner_attributes)]\n #![feature(proc_macro_hygiene)]\n #![feature(stmt_expr_attributes)]\n@@ -34,8 +35,6 @@ struct MyStruct {\n struct MyDerivePrint {\n     field: [u8; {\n         match true {\n-            #![cfg_attr(not(FALSE), rustc_dummy(first))]\n-            #![cfg_attr(not(FALSE), rustc_dummy(second))]\n             _ => {\n                 #![cfg_attr(not(FALSE), rustc_dummy(third))]\n                 true\n@@ -46,49 +45,20 @@ struct MyDerivePrint {\n }\n \n fn bar() {\n-    (#![print_target_and_args(fifth)] 1, 2);\n-    //~^ ERROR expected non-macro inner attribute, found attribute macro\n-\n     #[print_target_and_args(tuple_attrs)] (\n-        #![cfg_attr(FALSE, rustc_dummy)]\n         3, 4, {\n             #![cfg_attr(not(FALSE), rustc_dummy(innermost))]\n             5\n         }\n     );\n \n-    #[print_target_and_args(array_attrs)] [\n-        #![rustc_dummy(inner)]\n-        true; 0\n-    ];\n-\n     #[print_target_and_args(tuple_attrs)] (\n-        #![cfg_attr(FALSE, rustc_dummy)]\n         3, 4, {\n             #![cfg_attr(not(FALSE), rustc_dummy(innermost))]\n             5\n         }\n     );\n \n-    #[print_target_and_args(array_attrs)] [\n-        #![rustc_dummy(inner)]\n-        true; 0\n-    ];\n-\n-    [#![print_target_and_args(sixth)] 1 , 2];\n-    //~^ ERROR expected non-macro inner attribute, found attribute macro\n-    [#![print_target_and_args(seventh)] true ; 5];\n-    //~^ ERROR expected non-macro inner attribute, found attribute macro\n-\n-    match 0 {\n-        #![print_target_and_args(eighth)]\n-        //~^ ERROR expected non-macro inner attribute, found attribute macro\n-        _ => {}\n-    }\n-\n-    MyStruct { #![print_target_and_args(ninth)] field: true };\n-    //~^ ERROR expected non-macro inner attribute, found attribute macro\n-\n     for _ in &[true] {\n         #![print_attr] //~ ERROR expected non-macro inner attribute\n     }"}, {"sha": "4da8751ef7fe904f96374e03b8c031e9be105ece", "filename": "src/test/ui/proc-macro/inner-attrs.stderr", "status": "modified", "additions": 5, "deletions": 35, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stderr?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -1,56 +1,26 @@\n-error: expected non-macro inner attribute, found attribute macro `print_target_and_args`\n-  --> $DIR/inner-attrs.rs:49:9\n-   |\n-LL |     (#![print_target_and_args(fifth)] 1, 2);\n-   |         ^^^^^^^^^^^^^^^^^^^^^ not a non-macro inner attribute\n-\n-error: expected non-macro inner attribute, found attribute macro `print_target_and_args`\n-  --> $DIR/inner-attrs.rs:78:9\n-   |\n-LL |     [#![print_target_and_args(sixth)] 1 , 2];\n-   |         ^^^^^^^^^^^^^^^^^^^^^ not a non-macro inner attribute\n-\n-error: expected non-macro inner attribute, found attribute macro `print_target_and_args`\n-  --> $DIR/inner-attrs.rs:80:9\n-   |\n-LL |     [#![print_target_and_args(seventh)] true ; 5];\n-   |         ^^^^^^^^^^^^^^^^^^^^^ not a non-macro inner attribute\n-\n-error: expected non-macro inner attribute, found attribute macro `print_target_and_args`\n-  --> $DIR/inner-attrs.rs:84:12\n-   |\n-LL |         #![print_target_and_args(eighth)]\n-   |            ^^^^^^^^^^^^^^^^^^^^^ not a non-macro inner attribute\n-\n-error: expected non-macro inner attribute, found attribute macro `print_target_and_args`\n-  --> $DIR/inner-attrs.rs:89:19\n-   |\n-LL |     MyStruct { #![print_target_and_args(ninth)] field: true };\n-   |                   ^^^^^^^^^^^^^^^^^^^^^ not a non-macro inner attribute\n-\n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:93:12\n+  --> $DIR/inner-attrs.rs:63:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute\n \n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:97:12\n+  --> $DIR/inner-attrs.rs:67:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute\n \n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:101:12\n+  --> $DIR/inner-attrs.rs:71:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute\n \n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:105:12\n+  --> $DIR/inner-attrs.rs:75:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "77f423704933c4fae354b00629f753fe5a315c18", "filename": "src/test/ui/proc-macro/inner-attrs.stdout", "status": "modified", "additions": 179, "deletions": 378, "changes": 557, "blob_url": "https://github.com/rust-lang/rust/blob/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c825bc431ee5b815847b9bab693c59c43986fc4b/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout?ref=c825bc431ee5b815847b9bab693c59c43986fc4b", "patch": "@@ -2,7 +2,7 @@ PRINT-ATTR_ARGS INPUT (DISPLAY): first\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"first\",\n-        span: $DIR/inner-attrs.rs:15:25: 15:30 (#0),\n+        span: $DIR/inner-attrs.rs:16:25: 16:30 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): #[print_target_and_args(second)] fn foo()\n@@ -11,290 +11,290 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:16:1: 16:2 (#0),\n+        span: $DIR/inner-attrs.rs:17:1: 17:2 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"print_target_and_args\",\n-                span: $DIR/inner-attrs.rs:16:3: 16:24 (#0),\n+                span: $DIR/inner-attrs.rs:17:3: 17:24 (#0),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"second\",\n-                        span: $DIR/inner-attrs.rs:16:25: 16:31 (#0),\n+                        span: $DIR/inner-attrs.rs:17:25: 17:31 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:16:24: 16:32 (#0),\n+                span: $DIR/inner-attrs.rs:17:24: 17:32 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:16:2: 16:33 (#0),\n+        span: $DIR/inner-attrs.rs:17:2: 17:33 (#0),\n     },\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:17:1: 17:3 (#0),\n+        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:17:4: 17:7 (#0),\n+        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:17:7: 17:9 (#0),\n+        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:18:5: 18:6 (#0),\n+                span: $DIR/inner-attrs.rs:19:5: 19:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:18:6: 18:7 (#0),\n+                span: $DIR/inner-attrs.rs:19:6: 19:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:18:8: 18:29 (#0),\n+                        span: $DIR/inner-attrs.rs:19:8: 19:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"third\",\n-                                span: $DIR/inner-attrs.rs:18:30: 18:35 (#0),\n+                                span: $DIR/inner-attrs.rs:19:30: 19:35 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:18:29: 18:36 (#0),\n+                        span: $DIR/inner-attrs.rs:19:29: 19:36 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:18:7: 18:37 (#0),\n+                span: $DIR/inner-attrs.rs:19:7: 19:37 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:19:5: 19:6 (#0),\n+                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:19:6: 19:7 (#0),\n+                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:19:8: 19:29 (#0),\n+                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"fourth\",\n-                                span: $DIR/inner-attrs.rs:19:30: 19:36 (#0),\n+                                span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:19:29: 19:37 (#0),\n+                        span: $DIR/inner-attrs.rs:20:29: 20:37 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:19:7: 19:38 (#0),\n+                span: $DIR/inner-attrs.rs:20:7: 20:38 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:17:10: 20:2 (#0),\n+        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): second\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"second\",\n-        span: $DIR/inner-attrs.rs:16:25: 16:31 (#0),\n+        span: $DIR/inner-attrs.rs:17:25: 17:31 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn foo()\n { # ! [print_target_and_args(third)] # ! [print_target_and_args(fourth)] }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:17:1: 17:3 (#0),\n+        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:17:4: 17:7 (#0),\n+        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:17:7: 17:9 (#0),\n+        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:18:5: 18:6 (#0),\n+                span: $DIR/inner-attrs.rs:19:5: 19:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:18:6: 18:7 (#0),\n+                span: $DIR/inner-attrs.rs:19:6: 19:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:18:8: 18:29 (#0),\n+                        span: $DIR/inner-attrs.rs:19:8: 19:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"third\",\n-                                span: $DIR/inner-attrs.rs:18:30: 18:35 (#0),\n+                                span: $DIR/inner-attrs.rs:19:30: 19:35 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:18:29: 18:36 (#0),\n+                        span: $DIR/inner-attrs.rs:19:29: 19:36 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:18:7: 18:37 (#0),\n+                span: $DIR/inner-attrs.rs:19:7: 19:37 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:19:5: 19:6 (#0),\n+                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:19:6: 19:7 (#0),\n+                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:19:8: 19:29 (#0),\n+                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"fourth\",\n-                                span: $DIR/inner-attrs.rs:19:30: 19:36 (#0),\n+                                span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:19:29: 19:37 (#0),\n+                        span: $DIR/inner-attrs.rs:20:29: 20:37 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:19:7: 19:38 (#0),\n+                span: $DIR/inner-attrs.rs:20:7: 20:38 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:17:10: 20:2 (#0),\n+        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): third\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"third\",\n-        span: $DIR/inner-attrs.rs:18:30: 18:35 (#0),\n+        span: $DIR/inner-attrs.rs:19:30: 19:35 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn foo() { # ! [print_target_and_args(fourth)] }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:17:1: 17:3 (#0),\n+        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:17:4: 17:7 (#0),\n+        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:17:7: 17:9 (#0),\n+        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:19:5: 19:6 (#0),\n+                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:19:6: 19:7 (#0),\n+                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:19:8: 19:29 (#0),\n+                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"fourth\",\n-                                span: $DIR/inner-attrs.rs:19:30: 19:36 (#0),\n+                                span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:19:29: 19:37 (#0),\n+                        span: $DIR/inner-attrs.rs:20:29: 20:37 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:19:7: 19:38 (#0),\n+                span: $DIR/inner-attrs.rs:20:7: 20:38 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:17:10: 20:2 (#0),\n+        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): fourth\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fourth\",\n-        span: $DIR/inner-attrs.rs:19:30: 19:36 (#0),\n+        span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn foo() { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:17:1: 17:3 (#0),\n+        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:17:4: 17:7 (#0),\n+        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:17:7: 17:9 (#0),\n+        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:17:10: 20:2 (#0),\n+        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_first\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_first\",\n-        span: $DIR/inner-attrs.rs:22:25: 22:34 (#0),\n+        span: $DIR/inner-attrs.rs:23:25: 23:34 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): #[print_target_and_args(mod_second)] mod inline_mod\n@@ -306,108 +306,108 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:23:1: 23:2 (#0),\n+        span: $DIR/inner-attrs.rs:24:1: 24:2 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"print_target_and_args\",\n-                span: $DIR/inner-attrs.rs:23:3: 23:24 (#0),\n+                span: $DIR/inner-attrs.rs:24:3: 24:24 (#0),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"mod_second\",\n-                        span: $DIR/inner-attrs.rs:23:25: 23:35 (#0),\n+                        span: $DIR/inner-attrs.rs:24:25: 24:35 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:23:24: 23:36 (#0),\n+                span: $DIR/inner-attrs.rs:24:24: 24:36 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:23:2: 23:37 (#0),\n+        span: $DIR/inner-attrs.rs:24:2: 24:37 (#0),\n     },\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:24:1: 24:4 (#0),\n+        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:24:5: 24:15 (#0),\n+        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:25:5: 25:6 (#0),\n+                span: $DIR/inner-attrs.rs:26:5: 26:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:25:6: 25:7 (#0),\n+                span: $DIR/inner-attrs.rs:26:6: 26:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:25:8: 25:29 (#0),\n+                        span: $DIR/inner-attrs.rs:26:8: 26:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_third\",\n-                                span: $DIR/inner-attrs.rs:25:30: 25:39 (#0),\n+                                span: $DIR/inner-attrs.rs:26:30: 26:39 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:25:29: 25:40 (#0),\n+                        span: $DIR/inner-attrs.rs:26:29: 26:40 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:25:7: 25:41 (#0),\n+                span: $DIR/inner-attrs.rs:26:7: 26:41 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:26:5: 26:6 (#0),\n+                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:26:6: 26:7 (#0),\n+                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:26:8: 26:29 (#0),\n+                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_fourth\",\n-                                span: $DIR/inner-attrs.rs:26:30: 26:40 (#0),\n+                                span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:26:29: 26:41 (#0),\n+                        span: $DIR/inner-attrs.rs:27:29: 27:41 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:26:7: 26:42 (#0),\n+                span: $DIR/inner-attrs.rs:27:7: 27:42 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:24:16: 27:2 (#0),\n+        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_second\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_second\",\n-        span: $DIR/inner-attrs.rs:23:25: 23:35 (#0),\n+        span: $DIR/inner-attrs.rs:24:25: 24:35 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): mod inline_mod\n@@ -418,358 +418,291 @@ PRINT-ATTR INPUT (DISPLAY): mod inline_mod\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:24:1: 24:4 (#0),\n+        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:24:5: 24:15 (#0),\n+        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:25:5: 25:6 (#0),\n+                span: $DIR/inner-attrs.rs:26:5: 26:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:25:6: 25:7 (#0),\n+                span: $DIR/inner-attrs.rs:26:6: 26:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:25:8: 25:29 (#0),\n+                        span: $DIR/inner-attrs.rs:26:8: 26:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_third\",\n-                                span: $DIR/inner-attrs.rs:25:30: 25:39 (#0),\n+                                span: $DIR/inner-attrs.rs:26:30: 26:39 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:25:29: 25:40 (#0),\n+                        span: $DIR/inner-attrs.rs:26:29: 26:40 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:25:7: 25:41 (#0),\n+                span: $DIR/inner-attrs.rs:26:7: 26:41 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:26:5: 26:6 (#0),\n+                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:26:6: 26:7 (#0),\n+                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:26:8: 26:29 (#0),\n+                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_fourth\",\n-                                span: $DIR/inner-attrs.rs:26:30: 26:40 (#0),\n+                                span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:26:29: 26:41 (#0),\n+                        span: $DIR/inner-attrs.rs:27:29: 27:41 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:26:7: 26:42 (#0),\n+                span: $DIR/inner-attrs.rs:27:7: 27:42 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:24:16: 27:2 (#0),\n+        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_third\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_third\",\n-        span: $DIR/inner-attrs.rs:25:30: 25:39 (#0),\n+        span: $DIR/inner-attrs.rs:26:30: 26:39 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): mod inline_mod { # ! [print_target_and_args(mod_fourth)] }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:24:1: 24:4 (#0),\n+        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:24:5: 24:15 (#0),\n+        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:26:5: 26:6 (#0),\n+                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:26:6: 26:7 (#0),\n+                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:26:8: 26:29 (#0),\n+                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_fourth\",\n-                                span: $DIR/inner-attrs.rs:26:30: 26:40 (#0),\n+                                span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:26:29: 26:41 (#0),\n+                        span: $DIR/inner-attrs.rs:27:29: 27:41 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:26:7: 26:42 (#0),\n+                span: $DIR/inner-attrs.rs:27:7: 27:42 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:24:16: 27:2 (#0),\n+        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_fourth\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_fourth\",\n-        span: $DIR/inner-attrs.rs:26:30: 26:40 (#0),\n+        span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): mod inline_mod { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:24:1: 24:4 (#0),\n+        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:24:5: 24:15 (#0),\n+        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:24:16: 27:2 (#0),\n+        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct MyDerivePrint\n {\n     field :\n-    [u8 ;\n-     {\n-         match true\n-         {\n-             # ! [rustc_dummy(first)] # ! [rustc_dummy(second)] _ =>\n-             { # ! [rustc_dummy(third)] true }\n-         } ; 0\n-     }]\n+    [u8 ; { match true { _ => { # ! [rustc_dummy(third)] true } } ; 0 }]\n }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/inner-attrs.rs:34:1: 34:7 (#0),\n+        span: $DIR/inner-attrs.rs:35:1: 35:7 (#0),\n     },\n     Ident {\n         ident: \"MyDerivePrint\",\n-        span: $DIR/inner-attrs.rs:34:8: 34:21 (#0),\n+        span: $DIR/inner-attrs.rs:35:8: 35:21 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Ident {\n                 ident: \"field\",\n-                span: $DIR/inner-attrs.rs:35:5: 35:10 (#0),\n+                span: $DIR/inner-attrs.rs:36:5: 36:10 (#0),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:35:10: 35:11 (#0),\n+                span: $DIR/inner-attrs.rs:36:10: 36:11 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"u8\",\n-                        span: $DIR/inner-attrs.rs:35:13: 35:15 (#0),\n+                        span: $DIR/inner-attrs.rs:36:13: 36:15 (#0),\n                     },\n                     Punct {\n                         ch: ';',\n                         spacing: Alone,\n-                        span: $DIR/inner-attrs.rs:35:15: 35:16 (#0),\n+                        span: $DIR/inner-attrs.rs:36:15: 36:16 (#0),\n                     },\n                     Group {\n                         delimiter: Brace,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"match\",\n-                                span: $DIR/inner-attrs.rs:36:9: 36:14 (#0),\n+                                span: $DIR/inner-attrs.rs:37:9: 37:14 (#0),\n                             },\n                             Ident {\n                                 ident: \"true\",\n-                                span: $DIR/inner-attrs.rs:36:15: 36:19 (#0),\n+                                span: $DIR/inner-attrs.rs:37:15: 37:19 (#0),\n                             },\n                             Group {\n                                 delimiter: Brace,\n                                 stream: TokenStream [\n-                                    Punct {\n-                                        ch: '#',\n-                                        spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:37:13: 37:14 (#0),\n-                                    },\n-                                    Punct {\n-                                        ch: '!',\n-                                        spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:37:14: 37:15 (#0),\n-                                    },\n-                                    Group {\n-                                        delimiter: Bracket,\n-                                        stream: TokenStream [\n-                                            Ident {\n-                                                ident: \"rustc_dummy\",\n-                                                span: $DIR/inner-attrs.rs:37:37: 37:48 (#0),\n-                                            },\n-                                            Group {\n-                                                delimiter: Parenthesis,\n-                                                stream: TokenStream [\n-                                                    Ident {\n-                                                        ident: \"first\",\n-                                                        span: $DIR/inner-attrs.rs:37:49: 37:54 (#0),\n-                                                    },\n-                                                ],\n-                                                span: $DIR/inner-attrs.rs:37:48: 37:55 (#0),\n-                                            },\n-                                        ],\n-                                        span: $DIR/inner-attrs.rs:37:13: 37:14 (#0),\n-                                    },\n-                                    Punct {\n-                                        ch: '#',\n-                                        spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:38:13: 38:14 (#0),\n-                                    },\n-                                    Punct {\n-                                        ch: '!',\n-                                        spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:38:14: 38:15 (#0),\n-                                    },\n-                                    Group {\n-                                        delimiter: Bracket,\n-                                        stream: TokenStream [\n-                                            Ident {\n-                                                ident: \"rustc_dummy\",\n-                                                span: $DIR/inner-attrs.rs:38:37: 38:48 (#0),\n-                                            },\n-                                            Group {\n-                                                delimiter: Parenthesis,\n-                                                stream: TokenStream [\n-                                                    Ident {\n-                                                        ident: \"second\",\n-                                                        span: $DIR/inner-attrs.rs:38:49: 38:55 (#0),\n-                                                    },\n-                                                ],\n-                                                span: $DIR/inner-attrs.rs:38:48: 38:56 (#0),\n-                                            },\n-                                        ],\n-                                        span: $DIR/inner-attrs.rs:38:13: 38:14 (#0),\n-                                    },\n                                     Ident {\n                                         ident: \"_\",\n-                                        span: $DIR/inner-attrs.rs:39:13: 39:14 (#0),\n+                                        span: $DIR/inner-attrs.rs:38:13: 38:14 (#0),\n                                     },\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/inner-attrs.rs:39:15: 39:17 (#0),\n+                                        span: $DIR/inner-attrs.rs:38:15: 38:17 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:39:15: 39:17 (#0),\n+                                        span: $DIR/inner-attrs.rs:38:15: 38:17 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,\n                                         stream: TokenStream [\n                                             Punct {\n                                                 ch: '#',\n                                                 spacing: Alone,\n-                                                span: $DIR/inner-attrs.rs:40:17: 40:18 (#0),\n+                                                span: $DIR/inner-attrs.rs:39:17: 39:18 (#0),\n                                             },\n                                             Punct {\n                                                 ch: '!',\n                                                 spacing: Alone,\n-                                                span: $DIR/inner-attrs.rs:40:18: 40:19 (#0),\n+                                                span: $DIR/inner-attrs.rs:39:18: 39:19 (#0),\n                                             },\n                                             Group {\n                                                 delimiter: Bracket,\n                                                 stream: TokenStream [\n                                                     Ident {\n                                                         ident: \"rustc_dummy\",\n-                                                        span: $DIR/inner-attrs.rs:40:41: 40:52 (#0),\n+                                                        span: $DIR/inner-attrs.rs:39:41: 39:52 (#0),\n                                                     },\n                                                     Group {\n                                                         delimiter: Parenthesis,\n                                                         stream: TokenStream [\n                                                             Ident {\n                                                                 ident: \"third\",\n-                                                                span: $DIR/inner-attrs.rs:40:53: 40:58 (#0),\n+                                                                span: $DIR/inner-attrs.rs:39:53: 39:58 (#0),\n                                                             },\n                                                         ],\n-                                                        span: $DIR/inner-attrs.rs:40:52: 40:59 (#0),\n+                                                        span: $DIR/inner-attrs.rs:39:52: 39:59 (#0),\n                                                     },\n                                                 ],\n-                                                span: $DIR/inner-attrs.rs:40:17: 40:18 (#0),\n+                                                span: $DIR/inner-attrs.rs:39:17: 39:18 (#0),\n                                             },\n                                             Ident {\n                                                 ident: \"true\",\n-                                                span: $DIR/inner-attrs.rs:41:17: 41:21 (#0),\n+                                                span: $DIR/inner-attrs.rs:40:17: 40:21 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:39:18: 42:14 (#0),\n+                                        span: $DIR/inner-attrs.rs:38:18: 41:14 (#0),\n                                     },\n                                 ],\n-                                span: $DIR/inner-attrs.rs:36:20: 43:10 (#0),\n+                                span: $DIR/inner-attrs.rs:37:20: 42:10 (#0),\n                             },\n                             Punct {\n                                 ch: ';',\n                                 spacing: Alone,\n-                                span: $DIR/inner-attrs.rs:43:10: 43:11 (#0),\n+                                span: $DIR/inner-attrs.rs:42:10: 42:11 (#0),\n                             },\n                             Literal {\n                                 kind: Integer,\n                                 symbol: \"0\",\n                                 suffix: None,\n-                                span: $DIR/inner-attrs.rs:44:9: 44:10 (#0),\n+                                span: $DIR/inner-attrs.rs:43:9: 43:10 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:35:17: 45:6 (#0),\n+                        span: $DIR/inner-attrs.rs:36:17: 44:6 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:35:12: 45:7 (#0),\n+                span: $DIR/inner-attrs.rs:36:12: 44:7 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:34:22: 46:2 (#0),\n+        span: $DIR/inner-attrs.rs:35:22: 45:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): tuple_attrs\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"tuple_attrs\",\n-        span: $DIR/inner-attrs.rs:52:29: 52:40 (#0),\n+        span: $DIR/inner-attrs.rs:48:29: 48:40 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): (3, 4, { # ! [cfg_attr(not(FALSE), rustc_dummy(innermost))] 5 }) ;\n@@ -781,175 +714,109 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                 kind: Integer,\n                 symbol: \"3\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:54:9: 54:10 (#0),\n+                span: $DIR/inner-attrs.rs:49:9: 49:10 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:54:10: 54:11 (#0),\n+                span: $DIR/inner-attrs.rs:49:10: 49:11 (#0),\n             },\n             Literal {\n                 kind: Integer,\n                 symbol: \"4\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:54:12: 54:13 (#0),\n+                span: $DIR/inner-attrs.rs:49:12: 49:13 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:54:13: 54:14 (#0),\n+                span: $DIR/inner-attrs.rs:49:13: 49:14 (#0),\n             },\n             Group {\n                 delimiter: Brace,\n                 stream: TokenStream [\n                     Punct {\n                         ch: '#',\n                         spacing: Joint,\n-                        span: $DIR/inner-attrs.rs:55:13: 55:14 (#0),\n+                        span: $DIR/inner-attrs.rs:50:13: 50:14 (#0),\n                     },\n                     Punct {\n                         ch: '!',\n                         spacing: Alone,\n-                        span: $DIR/inner-attrs.rs:55:14: 55:15 (#0),\n+                        span: $DIR/inner-attrs.rs:50:14: 50:15 (#0),\n                     },\n                     Group {\n                         delimiter: Bracket,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"cfg_attr\",\n-                                span: $DIR/inner-attrs.rs:55:16: 55:24 (#0),\n+                                span: $DIR/inner-attrs.rs:50:16: 50:24 (#0),\n                             },\n                             Group {\n                                 delimiter: Parenthesis,\n                                 stream: TokenStream [\n                                     Ident {\n                                         ident: \"not\",\n-                                        span: $DIR/inner-attrs.rs:55:25: 55:28 (#0),\n+                                        span: $DIR/inner-attrs.rs:50:25: 50:28 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"FALSE\",\n-                                                span: $DIR/inner-attrs.rs:55:29: 55:34 (#0),\n+                                                span: $DIR/inner-attrs.rs:50:29: 50:34 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:55:28: 55:35 (#0),\n+                                        span: $DIR/inner-attrs.rs:50:28: 50:35 (#0),\n                                     },\n                                     Punct {\n                                         ch: ',',\n                                         spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:55:35: 55:36 (#0),\n+                                        span: $DIR/inner-attrs.rs:50:35: 50:36 (#0),\n                                     },\n                                     Ident {\n                                         ident: \"rustc_dummy\",\n-                                        span: $DIR/inner-attrs.rs:55:37: 55:48 (#0),\n+                                        span: $DIR/inner-attrs.rs:50:37: 50:48 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"innermost\",\n-                                                span: $DIR/inner-attrs.rs:55:49: 55:58 (#0),\n+                                                span: $DIR/inner-attrs.rs:50:49: 50:58 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:55:48: 55:59 (#0),\n+                                        span: $DIR/inner-attrs.rs:50:48: 50:59 (#0),\n                                     },\n                                 ],\n-                                span: $DIR/inner-attrs.rs:55:24: 55:60 (#0),\n+                                span: $DIR/inner-attrs.rs:50:24: 50:60 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:55:15: 55:61 (#0),\n+                        span: $DIR/inner-attrs.rs:50:15: 50:61 (#0),\n                     },\n                     Literal {\n                         kind: Integer,\n                         symbol: \"5\",\n                         suffix: None,\n-                        span: $DIR/inner-attrs.rs:56:13: 56:14 (#0),\n+                        span: $DIR/inner-attrs.rs:51:13: 51:14 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:54:15: 57:10 (#0),\n+                span: $DIR/inner-attrs.rs:49:15: 52:10 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:52:43: 58:6 (#0),\n+        span: $DIR/inner-attrs.rs:48:43: 53:6 (#0),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:58:6: 58:7 (#0),\n-    },\n-]\n-PRINT-ATTR_ARGS INPUT (DISPLAY): array_attrs\n-PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n-    Ident {\n-        ident: \"array_attrs\",\n-        span: $DIR/inner-attrs.rs:60:29: 60:40 (#0),\n-    },\n-]\n-PRINT-ATTR INPUT (DISPLAY): [# ! [rustc_dummy(inner)] true ; 0] ;\n-PRINT-ATTR INPUT (DEBUG): TokenStream [\n-    Group {\n-        delimiter: Bracket,\n-        stream: TokenStream [\n-            Punct {\n-                ch: '#',\n-                spacing: Joint,\n-                span: $DIR/inner-attrs.rs:61:9: 61:10 (#0),\n-            },\n-            Punct {\n-                ch: '!',\n-                spacing: Alone,\n-                span: $DIR/inner-attrs.rs:61:10: 61:11 (#0),\n-            },\n-            Group {\n-                delimiter: Bracket,\n-                stream: TokenStream [\n-                    Ident {\n-                        ident: \"rustc_dummy\",\n-                        span: $DIR/inner-attrs.rs:61:12: 61:23 (#0),\n-                    },\n-                    Group {\n-                        delimiter: Parenthesis,\n-                        stream: TokenStream [\n-                            Ident {\n-                                ident: \"inner\",\n-                                span: $DIR/inner-attrs.rs:61:24: 61:29 (#0),\n-                            },\n-                        ],\n-                        span: $DIR/inner-attrs.rs:61:23: 61:30 (#0),\n-                    },\n-                ],\n-                span: $DIR/inner-attrs.rs:61:11: 61:31 (#0),\n-            },\n-            Ident {\n-                ident: \"true\",\n-                span: $DIR/inner-attrs.rs:62:9: 62:13 (#0),\n-            },\n-            Punct {\n-                ch: ';',\n-                spacing: Alone,\n-                span: $DIR/inner-attrs.rs:62:13: 62:14 (#0),\n-            },\n-            Literal {\n-                kind: Integer,\n-                symbol: \"0\",\n-                suffix: None,\n-                span: $DIR/inner-attrs.rs:62:15: 62:16 (#0),\n-            },\n-        ],\n-        span: $DIR/inner-attrs.rs:60:43: 63:6 (#0),\n-    },\n-    Punct {\n-        ch: ';',\n-        spacing: Alone,\n-        span: $DIR/inner-attrs.rs:63:6: 63:7 (#0),\n+        span: $DIR/inner-attrs.rs:53:6: 53:7 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): tuple_attrs\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"tuple_attrs\",\n-        span: $DIR/inner-attrs.rs:65:29: 65:40 (#0),\n+        span: $DIR/inner-attrs.rs:55:29: 55:40 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): (3, 4, { # ! [cfg_attr(not(FALSE), rustc_dummy(innermost))] 5 }) ;\n@@ -961,195 +828,129 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                 kind: Integer,\n                 symbol: \"3\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:67:9: 67:10 (#0),\n+                span: $DIR/inner-attrs.rs:56:9: 56:10 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:67:10: 67:11 (#0),\n+                span: $DIR/inner-attrs.rs:56:10: 56:11 (#0),\n             },\n             Literal {\n                 kind: Integer,\n                 symbol: \"4\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:67:12: 67:13 (#0),\n+                span: $DIR/inner-attrs.rs:56:12: 56:13 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:67:13: 67:14 (#0),\n+                span: $DIR/inner-attrs.rs:56:13: 56:14 (#0),\n             },\n             Group {\n                 delimiter: Brace,\n                 stream: TokenStream [\n                     Punct {\n                         ch: '#',\n                         spacing: Joint,\n-                        span: $DIR/inner-attrs.rs:68:13: 68:14 (#0),\n+                        span: $DIR/inner-attrs.rs:57:13: 57:14 (#0),\n                     },\n                     Punct {\n                         ch: '!',\n                         spacing: Alone,\n-                        span: $DIR/inner-attrs.rs:68:14: 68:15 (#0),\n+                        span: $DIR/inner-attrs.rs:57:14: 57:15 (#0),\n                     },\n                     Group {\n                         delimiter: Bracket,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"cfg_attr\",\n-                                span: $DIR/inner-attrs.rs:68:16: 68:24 (#0),\n+                                span: $DIR/inner-attrs.rs:57:16: 57:24 (#0),\n                             },\n                             Group {\n                                 delimiter: Parenthesis,\n                                 stream: TokenStream [\n                                     Ident {\n                                         ident: \"not\",\n-                                        span: $DIR/inner-attrs.rs:68:25: 68:28 (#0),\n+                                        span: $DIR/inner-attrs.rs:57:25: 57:28 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"FALSE\",\n-                                                span: $DIR/inner-attrs.rs:68:29: 68:34 (#0),\n+                                                span: $DIR/inner-attrs.rs:57:29: 57:34 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:68:28: 68:35 (#0),\n+                                        span: $DIR/inner-attrs.rs:57:28: 57:35 (#0),\n                                     },\n                                     Punct {\n                                         ch: ',',\n                                         spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:68:35: 68:36 (#0),\n+                                        span: $DIR/inner-attrs.rs:57:35: 57:36 (#0),\n                                     },\n                                     Ident {\n                                         ident: \"rustc_dummy\",\n-                                        span: $DIR/inner-attrs.rs:68:37: 68:48 (#0),\n+                                        span: $DIR/inner-attrs.rs:57:37: 57:48 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"innermost\",\n-                                                span: $DIR/inner-attrs.rs:68:49: 68:58 (#0),\n+                                                span: $DIR/inner-attrs.rs:57:49: 57:58 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:68:48: 68:59 (#0),\n+                                        span: $DIR/inner-attrs.rs:57:48: 57:59 (#0),\n                                     },\n                                 ],\n-                                span: $DIR/inner-attrs.rs:68:24: 68:60 (#0),\n+                                span: $DIR/inner-attrs.rs:57:24: 57:60 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:68:15: 68:61 (#0),\n+                        span: $DIR/inner-attrs.rs:57:15: 57:61 (#0),\n                     },\n                     Literal {\n                         kind: Integer,\n                         symbol: \"5\",\n                         suffix: None,\n-                        span: $DIR/inner-attrs.rs:69:13: 69:14 (#0),\n-                    },\n-                ],\n-                span: $DIR/inner-attrs.rs:67:15: 70:10 (#0),\n-            },\n-        ],\n-        span: $DIR/inner-attrs.rs:65:43: 71:6 (#0),\n-    },\n-    Punct {\n-        ch: ';',\n-        spacing: Alone,\n-        span: $DIR/inner-attrs.rs:71:6: 71:7 (#0),\n-    },\n-]\n-PRINT-ATTR_ARGS INPUT (DISPLAY): array_attrs\n-PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n-    Ident {\n-        ident: \"array_attrs\",\n-        span: $DIR/inner-attrs.rs:73:29: 73:40 (#0),\n-    },\n-]\n-PRINT-ATTR INPUT (DISPLAY): [# ! [rustc_dummy(inner)] true ; 0] ;\n-PRINT-ATTR INPUT (DEBUG): TokenStream [\n-    Group {\n-        delimiter: Bracket,\n-        stream: TokenStream [\n-            Punct {\n-                ch: '#',\n-                spacing: Joint,\n-                span: $DIR/inner-attrs.rs:74:9: 74:10 (#0),\n-            },\n-            Punct {\n-                ch: '!',\n-                spacing: Alone,\n-                span: $DIR/inner-attrs.rs:74:10: 74:11 (#0),\n-            },\n-            Group {\n-                delimiter: Bracket,\n-                stream: TokenStream [\n-                    Ident {\n-                        ident: \"rustc_dummy\",\n-                        span: $DIR/inner-attrs.rs:74:12: 74:23 (#0),\n-                    },\n-                    Group {\n-                        delimiter: Parenthesis,\n-                        stream: TokenStream [\n-                            Ident {\n-                                ident: \"inner\",\n-                                span: $DIR/inner-attrs.rs:74:24: 74:29 (#0),\n-                            },\n-                        ],\n-                        span: $DIR/inner-attrs.rs:74:23: 74:30 (#0),\n+                        span: $DIR/inner-attrs.rs:58:13: 58:14 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:74:11: 74:31 (#0),\n-            },\n-            Ident {\n-                ident: \"true\",\n-                span: $DIR/inner-attrs.rs:75:9: 75:13 (#0),\n-            },\n-            Punct {\n-                ch: ';',\n-                spacing: Alone,\n-                span: $DIR/inner-attrs.rs:75:13: 75:14 (#0),\n-            },\n-            Literal {\n-                kind: Integer,\n-                symbol: \"0\",\n-                suffix: None,\n-                span: $DIR/inner-attrs.rs:75:15: 75:16 (#0),\n+                span: $DIR/inner-attrs.rs:56:15: 59:10 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:73:43: 76:6 (#0),\n+        span: $DIR/inner-attrs.rs:55:43: 60:6 (#0),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:76:6: 76:7 (#0),\n+        span: $DIR/inner-attrs.rs:60:6: 60:7 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): tenth\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"tenth\",\n-        span: $DIR/inner-attrs.rs:112:42: 112:47 (#0),\n+        span: $DIR/inner-attrs.rs:82:42: 82:47 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn weird_extern() { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:111:5: 111:7 (#0),\n+        span: $DIR/inner-attrs.rs:81:5: 81:7 (#0),\n     },\n     Ident {\n         ident: \"weird_extern\",\n-        span: $DIR/inner-attrs.rs:111:8: 111:20 (#0),\n+        span: $DIR/inner-attrs.rs:81:8: 81:20 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:111:20: 111:22 (#0),\n+        span: $DIR/inner-attrs.rs:81:20: 81:22 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:111:23: 113:6 (#0),\n+        span: $DIR/inner-attrs.rs:81:23: 83:6 (#0),\n     },\n ]"}, {"sha": "c94c5877e2240560bdfb240e229326d1c43ac60e", "filename": "src/test/ui/proc-macro/simple-tuple.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e327a823d8b64e294e490efeca7829f383aa119d/src%2Ftest%2Fui%2Fproc-macro%2Fsimple-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e327a823d8b64e294e490efeca7829f383aa119d/src%2Ftest%2Fui%2Fproc-macro%2Fsimple-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fsimple-tuple.rs?ref=e327a823d8b64e294e490efeca7829f383aa119d", "patch": "@@ -1,19 +0,0 @@\n-// check-pass\n-// compile-flags: -Z span-debug --error-format human\n-// aux-build:test-macros.rs\n-// edition:2018\n-\n-#![feature(proc_macro_hygiene)]\n-\n-#![no_std] // Don't load unnecessary hygiene information from std\n-extern crate std;\n-\n-#[macro_use]\n-extern crate test_macros;\n-\n-fn main() {\n-    #[print_target_and_args(my_arg)] (\n-        #![cfg_attr(not(FALSE), allow(unused))]\n-        1, 2, 3\n-    );\n-}"}, {"sha": "1cc8579a4675ad91987adf14455bb5f4ccac3f46", "filename": "src/test/ui/proc-macro/simple-tuple.stdout", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/e327a823d8b64e294e490efeca7829f383aa119d/src%2Ftest%2Fui%2Fproc-macro%2Fsimple-tuple.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e327a823d8b64e294e490efeca7829f383aa119d/src%2Ftest%2Fui%2Fproc-macro%2Fsimple-tuple.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fsimple-tuple.stdout?ref=e327a823d8b64e294e490efeca7829f383aa119d", "patch": "@@ -1,79 +0,0 @@\n-PRINT-ATTR_ARGS INPUT (DISPLAY): my_arg\n-PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n-    Ident {\n-        ident: \"my_arg\",\n-        span: $DIR/simple-tuple.rs:15:29: 15:35 (#0),\n-    },\n-]\n-PRINT-ATTR INPUT (DISPLAY): (# ! [allow(unused)] 1, 2, 3) ;\n-PRINT-ATTR INPUT (DEBUG): TokenStream [\n-    Group {\n-        delimiter: Parenthesis,\n-        stream: TokenStream [\n-            Punct {\n-                ch: '#',\n-                spacing: Alone,\n-                span: $DIR/simple-tuple.rs:16:9: 16:10 (#0),\n-            },\n-            Punct {\n-                ch: '!',\n-                spacing: Alone,\n-                span: $DIR/simple-tuple.rs:16:10: 16:11 (#0),\n-            },\n-            Group {\n-                delimiter: Bracket,\n-                stream: TokenStream [\n-                    Ident {\n-                        ident: \"allow\",\n-                        span: $DIR/simple-tuple.rs:16:33: 16:38 (#0),\n-                    },\n-                    Group {\n-                        delimiter: Parenthesis,\n-                        stream: TokenStream [\n-                            Ident {\n-                                ident: \"unused\",\n-                                span: $DIR/simple-tuple.rs:16:39: 16:45 (#0),\n-                            },\n-                        ],\n-                        span: $DIR/simple-tuple.rs:16:38: 16:46 (#0),\n-                    },\n-                ],\n-                span: $DIR/simple-tuple.rs:16:9: 16:10 (#0),\n-            },\n-            Literal {\n-                kind: Integer,\n-                symbol: \"1\",\n-                suffix: None,\n-                span: $DIR/simple-tuple.rs:17:9: 17:10 (#0),\n-            },\n-            Punct {\n-                ch: ',',\n-                spacing: Alone,\n-                span: $DIR/simple-tuple.rs:17:10: 17:11 (#0),\n-            },\n-            Literal {\n-                kind: Integer,\n-                symbol: \"2\",\n-                suffix: None,\n-                span: $DIR/simple-tuple.rs:17:12: 17:13 (#0),\n-            },\n-            Punct {\n-                ch: ',',\n-                spacing: Alone,\n-                span: $DIR/simple-tuple.rs:17:13: 17:14 (#0),\n-            },\n-            Literal {\n-                kind: Integer,\n-                symbol: \"3\",\n-                suffix: None,\n-                span: $DIR/simple-tuple.rs:17:15: 17:16 (#0),\n-            },\n-        ],\n-        span: $DIR/simple-tuple.rs:15:38: 18:6 (#0),\n-    },\n-    Punct {\n-        ch: ';',\n-        spacing: Alone,\n-        span: $DIR/simple-tuple.rs:18:6: 18:7 (#0),\n-    },\n-]"}]}