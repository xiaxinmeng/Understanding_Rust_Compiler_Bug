{"sha": "dabd3f6935771ef26131b06c29f7937f9c561b38", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYmQzZjY5MzU3NzFlZjI2MTMxYjA2YzI5Zjc5MzdmOWM1NjFiMzg=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-05-04T02:00:11Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-05T10:47:00Z"}, "message": "split IntoWellFormedGoal", "tree": {"sha": "86a5423cd620f55787f92bddf2bc79b6f8b178e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86a5423cd620f55787f92bddf2bc79b6f8b178e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dabd3f6935771ef26131b06c29f7937f9c561b38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dabd3f6935771ef26131b06c29f7937f9c561b38", "html_url": "https://github.com/rust-lang/rust/commit/dabd3f6935771ef26131b06c29f7937f9c561b38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dabd3f6935771ef26131b06c29f7937f9c561b38/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "329d03ac1f1aef856dbd872468816be57f6b87ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/329d03ac1f1aef856dbd872468816be57f6b87ea", "html_url": "https://github.com/rust-lang/rust/commit/329d03ac1f1aef856dbd872468816be57f6b87ea"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c8192f2141867aeeca9abb13ea096d568b22a1ab", "filename": "src/librustc_traits/lowering.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dabd3f6935771ef26131b06c29f7937f9c561b38/src%2Flibrustc_traits%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabd3f6935771ef26131b06c29f7937f9c561b38/src%2Flibrustc_traits%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering.rs?ref=dabd3f6935771ef26131b06c29f7937f9c561b38", "patch": "@@ -121,11 +121,11 @@ trait IntoFromEnvGoal {\n }\n \n trait IntoWellFormedGoal {\n+    // Transforms an existing goal into a WellFormed goal.\n     fn into_wellformed_goal(self) -> Self;\n }\n \n-impl<'tcx> IntoGoal for DomainGoal<'tcx> {\n-    // Transforms an existing goal into a WellFormed goal.\n+impl<'tcx> IntoFromEnvGoal for DomainGoal<'tcx> {\n     fn into_from_env_goal(self) -> DomainGoal<'tcx> {\n         use self::WhereClause::*;\n \n@@ -138,7 +138,7 @@ impl<'tcx> IntoGoal for DomainGoal<'tcx> {\n     }\n }\n \n-impl<'tcx> IntoFromEnvGoal for DomainGoal<'tcx> {\n+impl<'tcx> IntoWellFormedGoal for DomainGoal<'tcx> {\n     fn into_wellformed_goal(self) -> DomainGoal<'tcx> {\n         use self::DomainGoal::*;\n         match self {\n@@ -302,7 +302,7 @@ fn wellformed_from_bound<'a, 'tcx>(\n \n     // WellFormed(Self: Trait<P1..Pn>)\n     let wellformed_trait = DomainGoal::WellFormed(WhereClauseAtom::Implemented(trait_pred));\n-    // Impemented(Self: Trait<P1..Pn>)\n+    // Implemented(Self: Trait<P1..Pn>)\n     let impl_trait = ty::Binder::dummy(DomainGoal::Holds(WhereClauseAtom::Implemented(trait_pred)));\n     // WellFormed(WC)\n     let wellformed_wc = where_clause"}]}