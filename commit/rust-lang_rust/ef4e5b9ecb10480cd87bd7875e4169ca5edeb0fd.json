{"sha": "ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNGU1YjllY2IxMDQ4MGNkODdiZDc4NzVlNDE2OWNhNWVkZWIwZmQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-28T03:35:02Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-05T08:13:34Z"}, "message": "Rename non_autolinks -> bare_urls", "tree": {"sha": "7849b50f935a5dc1b7fda7b1103ca509ac63e367", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7849b50f935a5dc1b7fda7b1103ca509ac63e367"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "html_url": "https://github.com/rust-lang/rust/commit/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "html_url": "https://github.com/rust-lang/rust/commit/6f89468fc513eb12ef8a1137a70fab8bb9f50f14"}], "stats": {"total": 101, "additions": 56, "deletions": 45}, "files": [{"sha": "760b8d8cbb06068c87adf42b8006dc6966574aef", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -298,7 +298,8 @@ pub mod primitive;\n     unused_imports,\n     unsafe_op_in_unsafe_fn\n )]\n-#[allow(rustdoc::non_autolinks)]\n+#[cfg_attr(bootstrap, allow(rustdoc::non_autolinks))]\n+#[cfg_attr(not(bootstrap), allow(rustdoc::bare_urls))]\n // FIXME: This annotation should be moved into rust-lang/stdarch after clashing_extern_declarations is\n // merged. It currently cannot because bootstrap fails as the lint hasn't been defined yet.\n #[allow(clashing_extern_declarations)]"}, {"sha": "7a3afb2cfb848931dbab2711902f52be43a05ffb", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -294,40 +294,33 @@ warning: unclosed HTML tag `h1`\n warning: 2 warnings emitted\n ```\n \n-## non_autolinks\n+## bare_urls\n \n-This lint is **nightly-only** and **warns by default**. It detects links which\n-could use the \"automatic\" link syntax. For example:\n+This lint is **nightly-only** and **warns by default**. It detects URLs which are not links.\n+For example:\n \n ```rust\n /// http://example.org\n-/// [http://example.com](http://example.com)\n /// [http://example.net]\n-///\n-/// [http://example.com]: http://example.com\n pub fn foo() {}\n ```\n \n Which will give:\n \n ```text\n warning: this URL is not a hyperlink\n- --> foo.rs:1:5\n+ --> links.rs:1:5\n   |\n 1 | /// http://example.org\n   |     ^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.org>`\n   |\n-  = note: `#[warn(rustdoc::non_autolinks)]` on by default\n-\n-warning: unneeded long form for URL\n- --> foo.rs:2:5\n-  |\n-2 | /// [http://example.com](http://example.com)\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.com>`\n+  = note: `#[warn(rustdoc::bare_urls)]` on by default\n \n warning: this URL is not a hyperlink\n- --> foo.rs:3:6\n+ --> links.rs:3:6\n   |\n 3 | /// [http://example.net]\n   |      ^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.net>`\n+\n+warning: 2 warnings emitted\n ```"}, {"sha": "fe3102e94f865e9c4ccf9325ede4b2bb41be5db8", "filename": "src/librustdoc/lint.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Flibrustdoc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Flibrustdoc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flint.rs?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -148,14 +148,13 @@ declare_rustdoc_lint! {\n }\n \n declare_rustdoc_lint! {\n-    /// The `non_autolinks` lint detects when a URL could be written using\n-    /// only angle brackets. This is a `rustdoc` only lint, see the\n-    /// documentation in the [rustdoc book].\n+    /// The `non_autolinks` lint detects when a URL is not a hyperlink.\n+    /// This is a `rustdoc` only lint, see the documentation in the [rustdoc book].\n     ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#non_autolinks\n-    NON_AUTOLINKS,\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#bare_urls\n+    BARE_URLS,\n     Warn,\n-    \"detects URLs that could be written using only angle brackets\"\n+    \"detects URLs that are not hyperlinks\"\n }\n \n crate static RUSTDOC_LINTS: Lazy<Vec<&'static Lint>> = Lazy::new(|| {\n@@ -166,7 +165,7 @@ crate static RUSTDOC_LINTS: Lazy<Vec<&'static Lint>> = Lazy::new(|| {\n         PRIVATE_DOC_TESTS,\n         INVALID_CODEBLOCK_ATTRIBUTES,\n         INVALID_HTML_TAGS,\n-        NON_AUTOLINKS,\n+        BARE_URLS,\n         MISSING_CRATE_LEVEL_DOCS,\n     ]\n });\n@@ -185,4 +184,6 @@ crate fn register_lints(_sess: &Session, lint_store: &mut LintStore) {\n     }\n     lint_store\n         .register_renamed(\"intra_doc_link_resolution_failure\", \"rustdoc::broken_intra_doc_links\");\n+    lint_store.register_renamed(\"non_autolinks\", \"rustdoc::bare_urls\");\n+    lint_store.register_renamed(\"rustdoc::non_autolinks\", \"rustdoc::bare_urls\");\n }"}, {"sha": "3f2e1c68c55ababeb5f5d475440de53516052572", "filename": "src/librustdoc/passes/bare_urls.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -10,10 +10,10 @@ use rustc_errors::Applicability;\n use std::lazy::SyncLazy;\n use std::mem;\n \n-crate const CHECK_NON_AUTOLINKS: Pass = Pass {\n-    name: \"check-non-autolinks\",\n-    run: check_non_autolinks,\n-    description: \"detects URLs that could be linkified\",\n+crate const CHECK_BARE_URLS: Pass = Pass {\n+    name: \"check-bare-urls\",\n+    run: check_bare_urls,\n+    description: \"detects URLs that are not hyperlinks\",\n };\n \n const URL_REGEX: SyncLazy<Regex> = SyncLazy::new(|| {\n@@ -26,11 +26,11 @@ const URL_REGEX: SyncLazy<Regex> = SyncLazy::new(|| {\n     .expect(\"failed to build regex\")\n });\n \n-struct NonAutolinksLinter<'a, 'tcx> {\n+struct BareUrlsLinter<'a, 'tcx> {\n     cx: &'a mut DocContext<'tcx>,\n }\n \n-impl<'a, 'tcx> NonAutolinksLinter<'a, 'tcx> {\n+impl<'a, 'tcx> BareUrlsLinter<'a, 'tcx> {\n     fn find_raw_urls(\n         &self,\n         text: &str,\n@@ -52,11 +52,11 @@ impl<'a, 'tcx> NonAutolinksLinter<'a, 'tcx> {\n     }\n }\n \n-crate fn check_non_autolinks(krate: Crate, cx: &mut DocContext<'_>) -> Crate {\n-    NonAutolinksLinter { cx }.fold_crate(krate)\n+crate fn check_bare_urls(krate: Crate, cx: &mut DocContext<'_>) -> Crate {\n+    BareUrlsLinter { cx }.fold_crate(krate)\n }\n \n-impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n+impl<'a, 'tcx> DocFolder for BareUrlsLinter<'a, 'tcx> {\n     fn fold_item(&mut self, item: Item) -> Option<Item> {\n         let hir_id = match DocContext::as_local_hir_id(self.cx.tcx, item.def_id) {\n             Some(hir_id) => hir_id,\n@@ -71,7 +71,7 @@ impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n                 let sp = super::source_span_for_markdown_range(cx.tcx, &dox, &range, &item.attrs)\n                     .or_else(|| span_of_attrs(&item.attrs))\n                     .unwrap_or(item.span.inner());\n-                cx.tcx.struct_span_lint_hir(crate::lint::NON_AUTOLINKS, hir_id, sp, |lint| {\n+                cx.tcx.struct_span_lint_hir(crate::lint::BARE_URLS, hir_id, sp, |lint| {\n                     lint.build(msg)\n                         .span_suggestion(\n                             sp,", "previous_filename": "src/librustdoc/passes/non_autolinks.rs"}, {"sha": "4cc2f7120a03ab094e78181c8bb3733b580c8e01", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -12,8 +12,8 @@ use crate::core::DocContext;\n mod stripper;\n crate use stripper::*;\n \n-mod non_autolinks;\n-crate use self::non_autolinks::CHECK_NON_AUTOLINKS;\n+mod bare_urls;\n+crate use self::bare_urls::CHECK_BARE_URLS;\n \n mod strip_hidden;\n crate use self::strip_hidden::STRIP_HIDDEN;\n@@ -90,7 +90,7 @@ crate const PASSES: &[Pass] = &[\n     COLLECT_TRAIT_IMPLS,\n     CALCULATE_DOC_COVERAGE,\n     CHECK_INVALID_HTML_TAGS,\n-    CHECK_NON_AUTOLINKS,\n+    CHECK_BARE_URLS,\n ];\n \n /// The list of passes run by default.\n@@ -105,7 +105,7 @@ crate const DEFAULT_PASSES: &[ConditionalPass] = &[\n     ConditionalPass::always(CHECK_CODE_BLOCK_SYNTAX),\n     ConditionalPass::always(CHECK_INVALID_HTML_TAGS),\n     ConditionalPass::always(PROPAGATE_DOC_CFG),\n-    ConditionalPass::always(CHECK_NON_AUTOLINKS),\n+    ConditionalPass::always(CHECK_BARE_URLS),\n ];\n \n /// The list of default passes run when `--doc-coverage` is passed to rustdoc."}, {"sha": "9096cce127658d93169762c999f749b8d5fe28e4", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -8,8 +8,12 @@\n //~^ ERROR unknown lint: `rustdoc::x`\n #![deny(intra_doc_link_resolution_failure)]\n //~^ ERROR renamed to `rustdoc::broken_intra_doc_links`\n-\n #![deny(non_autolinks)]\n+//~^ ERROR renamed to `rustdoc::bare_urls`\n+#![deny(rustdoc::non_autolinks)]\n+//~^ ERROR renamed to `rustdoc::bare_urls`\n+\n+#![deny(private_doc_tests)]\n // FIXME: the old names for rustdoc lints should warn by default once `rustdoc::` makes it to the\n // stable channel.\n "}, {"sha": "51e06821cf7ab824b184b4c972e06e2f4b1d6d00", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -28,19 +28,31 @@ note: the lint level is defined here\n LL | #![deny(renamed_and_removed_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error: lint `non_autolinks` has been renamed to `rustdoc::bare_urls`\n+  --> $DIR/unknown-renamed-lints.rs:11:9\n+   |\n+LL | #![deny(non_autolinks)]\n+   |         ^^^^^^^^^^^^^ help: use the new name: `rustdoc::bare_urls`\n+\n+error: lint `rustdoc::non_autolinks` has been renamed to `rustdoc::bare_urls`\n+  --> $DIR/unknown-renamed-lints.rs:13:9\n+   |\n+LL | #![deny(rustdoc::non_autolinks)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `rustdoc::bare_urls`\n+\n error: lint `rustdoc` has been removed: use `rustdoc::all` instead\n-  --> $DIR/unknown-renamed-lints.rs:16:9\n+  --> $DIR/unknown-renamed-lints.rs:20:9\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n \n error: unknown lint: `rustdoc::intra_doc_link_resolution_failure`\n-  --> $DIR/unknown-renamed-lints.rs:20:9\n+  --> $DIR/unknown-renamed-lints.rs:24:9\n    |\n LL | #![deny(rustdoc::intra_doc_link_resolution_failure)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Compilation failed, aborting rustdoc\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "43a13b02d0ab614a5dfaeb19147e90a14d1088a4", "filename": "src/test/rustdoc-ui/url-improvements.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -1,4 +1,4 @@\n-#![deny(rustdoc::non_autolinks)]\n+#![deny(rustdoc::bare_urls)]\n \n /// https://somewhere.com\n //~^ ERROR this URL is not a hyperlink\n@@ -51,7 +51,7 @@ pub fn c() {}\n /// [should_not.lint](should_not.lint)\n pub fn everything_is_fine_here() {}\n \n-#[allow(rustdoc::non_autolinks)]\n+#[allow(rustdoc::bare_urls)]\n pub mod foo {\n     /// https://somewhere.com/a?hello=12&bye=11#xyz\n     pub fn bar() {}"}, {"sha": "3d5ebd8be6b677bd318cb9a7d7dbb32f6f144403", "filename": "src/test/rustdoc-ui/url-improvements.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr?ref=ef4e5b9ecb10480cd87bd7875e4169ca5edeb0fd", "patch": "@@ -7,8 +7,8 @@ LL | /// https://somewhere.com\n note: the lint level is defined here\n   --> $DIR/url-improvements.rs:1:9\n    |\n-LL | #![deny(rustdoc::non_autolinks)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::bare_urls)]\n+   |         ^^^^^^^^^^^^^^^^^^\n \n error: this URL is not a hyperlink\n   --> $DIR/url-improvements.rs:5:5"}]}