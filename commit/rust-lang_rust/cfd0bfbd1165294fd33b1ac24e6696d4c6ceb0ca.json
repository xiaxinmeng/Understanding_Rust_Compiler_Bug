{"sha": "cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmZDBiZmJkMTE2NTI5NGZkMzNiMWFjMjRlNjY5NmQ0YzZjZWIwY2E=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-08-24T12:49:03Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-08-24T12:49:03Z"}, "message": "rustllvm: Specify hard floats for gnueabihf.", "tree": {"sha": "6450ddd329b32e2826bf7915d23e9f72a364b276", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6450ddd329b32e2826bf7915d23e9f72a364b276"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca", "html_url": "https://github.com/rust-lang/rust/commit/cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb9c71fe82005d2d85f459988d9986f7c817717e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb9c71fe82005d2d85f459988d9986f7c817717e", "html_url": "https://github.com/rust-lang/rust/commit/bb9c71fe82005d2d85f459988d9986f7c817717e"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "5b8c6bc883fb58816048478556e8d66da2e39303", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=cfd0bfbd1165294fd33b1ac24e6696d4c6ceb0ca", "patch": "@@ -391,19 +391,23 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n     cl::ParseCommandLineOptions(argc, argv);\n   }\n \n+  Triple Trip(Triple::normalize(triple));\n+\n   TargetOptions Options;\n   Options.EnableSegmentedStacks = EnableSegmentedStacks;\n   Options.FixedStackSegmentSize = 2 * 1024 * 1024;  // XXX: This is too big.\n+  Options.FloatABIType =\n+      (Trip.getEnvironment() == Triple::GNUEABIHF) ? FloatABI::Hard :\n+                                                     FloatABI::Default;\n \n   PassManager *PM = unwrap<PassManager>(PMR);\n \n   std::string Err;\n-  std::string Trip(Triple::normalize(triple));\n   std::string FeaturesStr(feature);\n   std::string CPUStr(cpu);\n-  const Target *TheTarget = TargetRegistry::lookupTarget(Trip, Err);\n+  const Target *TheTarget = TargetRegistry::lookupTarget(Trip.getTriple(), Err);\n   TargetMachine *Target =\n-    TheTarget->createTargetMachine(Trip, CPUStr, FeaturesStr,\n+    TheTarget->createTargetMachine(Trip.getTriple(), CPUStr, FeaturesStr,\n            Options, Reloc::PIC_,\n            CodeModel::Default, OptLevel);\n   Target->addAnalysisPasses(*PM);"}]}