{"sha": "655d6e82e3f89e1c26c4519134013f335d8880eb", "node_id": "C_kwDOAAsO6NoAKDY1NWQ2ZTgyZTNmODllMWMyNmM0NTE5MTM0MDEzZjMzNWQ4ODgwZWI", "commit": {"author": {"name": "Jane Losare-Lusby", "email": "jlusby@yaah.dev", "date": "2022-07-11T19:18:56Z"}, "committer": {"name": "Jane Losare-Lusby", "email": "jlusby@yaah.dev", "date": "2022-07-11T19:18:56Z"}, "message": "apply suggestions from code review", "tree": {"sha": "cae1cdae967fbeb567b125565c9730e51264c667", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cae1cdae967fbeb567b125565c9730e51264c667"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/655d6e82e3f89e1c26c4519134013f335d8880eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/655d6e82e3f89e1c26c4519134013f335d8880eb", "html_url": "https://github.com/rust-lang/rust/commit/655d6e82e3f89e1c26c4519134013f335d8880eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/655d6e82e3f89e1c26c4519134013f335d8880eb/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7", "html_url": "https://github.com/rust-lang/rust/commit/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "57f16f9517f201adaee0ac72c80cd0a17c1e2da8", "filename": "library/std/src/error.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/655d6e82e3f89e1c26c4519134013f335d8880eb/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/655d6e82e3f89e1c26c4519134013f335d8880eb/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=655d6e82e3f89e1c26c4519134013f335d8880eb", "patch": "@@ -365,7 +365,8 @@ pub trait Error: Debug + Display {\n     /// }\n     /// ```\n     #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n-    fn provide<'a>(&'a self, _req: &mut Demand<'a>) {}\n+    #[allow(unused_variables)]\n+    fn provide<'a>(&'a self, req: &mut Demand<'a>) {}\n }\n \n #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n@@ -910,13 +911,13 @@ impl dyn Error + 'static {\n         }\n     }\n \n-    /// Request a reference to context of type `T`.\n+    /// Request a reference of type `T` as context about this error.\n     #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         core::any::request_ref(self)\n     }\n \n-    /// Request a value to context of type `T`.\n+    /// Request a value of type `T` as context about this error.\n     #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         core::any::request_value(self)\n@@ -945,13 +946,13 @@ impl dyn Error + 'static + Send {\n         <dyn Error + 'static>::downcast_mut::<T>(self)\n     }\n \n-    /// Request a reference to context of type `T`.\n+    /// Request a reference of type `T` as context about this error.\n     #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         <dyn Error + 'static>::request_ref(self)\n     }\n \n-    /// Request a value to context of type `T`.\n+    /// Request a value of type `T` as context about this error.\n     #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         <dyn Error + 'static>::request_value(self)\n@@ -980,13 +981,13 @@ impl dyn Error + 'static + Send + Sync {\n         <dyn Error + 'static>::downcast_mut::<T>(self)\n     }\n \n-    /// Request a reference to context of type `T`.\n+    /// Request a reference of type `T` as context about this error.\n     #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         <dyn Error + 'static>::request_ref(self)\n     }\n \n-    /// Request a value to context of type `T`.\n+    /// Request a value of type `T` as context about this error.\n     #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         <dyn Error + 'static>::request_value(self)"}]}