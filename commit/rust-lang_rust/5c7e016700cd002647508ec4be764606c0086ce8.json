{"sha": "5c7e016700cd002647508ec4be764606c0086ce8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjN2UwMTY3MDBjZDAwMjY0NzUwOGVjNGJlNzY0NjA2YzAwODZjZTg=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2013-07-28T08:26:29Z"}, "committer": {"name": "James Miller", "email": "james@aatch.net", "date": "2013-07-28T08:26:49Z"}, "message": "Add static initializers for atomics", "tree": {"sha": "2017ee88c7dbb5e0d20a900213dcd9abfd1c207a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2017ee88c7dbb5e0d20a900213dcd9abfd1c207a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c7e016700cd002647508ec4be764606c0086ce8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7e016700cd002647508ec4be764606c0086ce8", "html_url": "https://github.com/rust-lang/rust/commit/5c7e016700cd002647508ec4be764606c0086ce8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c7e016700cd002647508ec4be764606c0086ce8/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a1a0fbed5a57958eb7b658bbe3e5257872ae99f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a1a0fbed5a57958eb7b658bbe3e5257872ae99f", "html_url": "https://github.com/rust-lang/rust/commit/4a1a0fbed5a57958eb7b658bbe3e5257872ae99f"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "14ee6c1fd07ddafa363dadd206e8ebb6bb09ee2f", "filename": "src/libstd/unstable/atomics.rs", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5c7e016700cd002647508ec4be764606c0086ce8/src%2Flibstd%2Funstable%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7e016700cd002647508ec4be764606c0086ce8/src%2Flibstd%2Funstable%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fatomics.rs?ref=5c7e016700cd002647508ec4be764606c0086ce8", "patch": "@@ -75,6 +75,10 @@ pub enum Ordering {\n     SeqCst\n }\n \n+pub static INIT_ATOMIC_FLAG : AtomicFlag = AtomicFlag { v: 0 };\n+pub static INIT_ATOMIC_BOOL : AtomicBool = AtomicBool { v: 0 };\n+pub static INIT_ATOMIC_INT  : AtomicInt  = AtomicInt  { v: 0 };\n+pub static INIT_ATOMIC_UINT : AtomicUint = AtomicUint { v: 0 };\n \n impl AtomicFlag {\n \n@@ -589,11 +593,13 @@ pub unsafe fn atomic_umin<T>(dst: &mut T, val: T, order: Ordering) -> T {\n  */\n #[inline] #[cfg(not(stage0))]\n pub fn fence(order: Ordering) {\n-    match order {\n-        Acquire => intrinsics::atomic_fence_acq(),\n-        Release => intrinsics::atomic_fence_rel(),\n-        AcqRel  => intrinsics::atomic_fence_rel(),\n-        _       => intrinsics::atomic_fence(),\n+    unsafe {\n+        match order {\n+            Acquire => intrinsics::atomic_fence_acq(),\n+            Release => intrinsics::atomic_fence_rel(),\n+            AcqRel  => intrinsics::atomic_fence_rel(),\n+            _       => intrinsics::atomic_fence(),\n+        }\n     }\n }\n \n@@ -657,4 +663,19 @@ mod test {\n         assert_eq!(a.fetch_and(false, SeqCst),true);\n         assert_eq!(a.load(SeqCst),false);\n     }\n+\n+    static mut S_FLAG : AtomicFlag = INIT_ATOMIC_FLAG;\n+    static mut S_BOOL : AtomicBool = INIT_ATOMIC_BOOL;\n+    static mut S_INT  : AtomicInt  = INIT_ATOMIC_INT;\n+    static mut S_UINT : AtomicUint = INIT_ATOMIC_UINT;\n+\n+    #[test]\n+    fn static_init() {\n+        unsafe {\n+            assert!(!S_FLAG.test_and_set(SeqCst));\n+            assert!(!S_BOOL.load(SeqCst));\n+            assert!(S_INT.load(SeqCst) == 0);\n+            assert!(S_UINT.load(SeqCst) == 0);\n+        }\n+    }\n }"}]}