{"sha": "0482ac88f4da28fb49abe05da11e5535f5aac9a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ODJhYzg4ZjRkYTI4ZmI0OWFiZTA1ZGExMWU1NTM1ZjVhYWM5YTg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-05-20T07:46:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-20T07:46:52Z"}, "message": "Merge pull request #3548 from bash/normalize-multiline-doc-attributes\n\nFix normalisation of multiline doc attributes", "tree": {"sha": "e1d59e1268ffbb5a6e64730c8346cc08f5448969", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1d59e1268ffbb5a6e64730c8346cc08f5448969"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0482ac88f4da28fb49abe05da11e5535f5aac9a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc4ltsCRBK7hj4Ov3rIwAAdHIIABcleqyK9npnslUeUY+UfG4D\n0gr+zdolBsbREgMtXFJYT7JtGtvVJ7Ju31zZOubAFdjUhFLus4cdpKYs5DTFqeww\nxIwjwr3Ry1HqKYU4tXrFYb1qHpDlesLnoHWbQUDJM7E4FbwhpDpCW0xnqT+Mv5Kk\nLn2Rzxh2vHRKIho5gb4BJuFG3WwzDYWapa4Ro2EG4sdycM0e+xgpsUquQOCpS9Mc\n05aNiXlVJyxmCRLlovyjtz4zR8uHV8jS7CLqIQeMAP/oh5cYazAgH74dvknEPW8w\n31j+aL0Tx4WsKv1bagwMR3L+XJ5ZTrJ5AtIlm4BdJSNat196qQTJ+Cn9vsiazUU=\n=GNYf\n-----END PGP SIGNATURE-----\n", "payload": "tree e1d59e1268ffbb5a6e64730c8346cc08f5448969\nparent 421ed946bfc52738dd13931cddb12c87b34e34b9\nparent 1ba35fc9b52587f5ff01e188e7ae3d12e078765b\nauthor Seiichi Uchida <seuchida@gmail.com> 1558338412 +0900\ncommitter GitHub <noreply@github.com> 1558338412 +0900\n\nMerge pull request #3548 from bash/normalize-multiline-doc-attributes\n\nFix normalisation of multiline doc attributes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0482ac88f4da28fb49abe05da11e5535f5aac9a8", "html_url": "https://github.com/rust-lang/rust/commit/0482ac88f4da28fb49abe05da11e5535f5aac9a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0482ac88f4da28fb49abe05da11e5535f5aac9a8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "421ed946bfc52738dd13931cddb12c87b34e34b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/421ed946bfc52738dd13931cddb12c87b34e34b9", "html_url": "https://github.com/rust-lang/rust/commit/421ed946bfc52738dd13931cddb12c87b34e34b9"}, {"sha": "1ba35fc9b52587f5ff01e188e7ae3d12e078765b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba35fc9b52587f5ff01e188e7ae3d12e078765b", "html_url": "https://github.com/rust-lang/rust/commit/1ba35fc9b52587f5ff01e188e7ae3d12e078765b"}], "stats": {"total": 102, "additions": 97, "deletions": 5}, "files": [{"sha": "1fb4ef407eb0618fe470515dc9bf29a6f6b803a0", "filename": "src/attr.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0482ac88f4da28fb49abe05da11e5535f5aac9a8/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0482ac88f4da28fb49abe05da11e5535f5aac9a8/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=0482ac88f4da28fb49abe05da11e5535f5aac9a8", "patch": "@@ -3,6 +3,7 @@\n use syntax::ast;\n use syntax::source_map::{BytePos, Span, DUMMY_SP};\n \n+use self::doc_comment::DocCommentFormatter;\n use crate::comment::{contains_comment, rewrite_doc_comment, CommentStyle};\n use crate::config::lists::*;\n use crate::config::IndentStyle;\n@@ -14,6 +15,8 @@ use crate::shape::Shape;\n use crate::types::{rewrite_path, PathContext};\n use crate::utils::{count_newlines, mk_sp};\n \n+mod doc_comment;\n+\n /// Returns attributes on the given statement.\n pub(crate) fn get_attrs_from_stmt(stmt: &ast::Stmt) -> &[ast::Attribute] {\n     match stmt.node {\n@@ -330,11 +333,9 @@ impl Rewrite for ast::Attribute {\n                             ast::AttrStyle::Outer => CommentStyle::TripleSlash,\n                         };\n \n-                        // Remove possible whitespace from the `CommentStyle::opener()` so that\n-                        // the literal itself has control over the comment's leading spaces.\n-                        let opener = comment_style.opener().trim_end();\n-\n-                        let doc_comment = format!(\"{}{}\", opener, literal);\n+                        let doc_comment_formatter =\n+                            DocCommentFormatter::new(literal.as_str().get(), comment_style);\n+                        let doc_comment = format!(\"{}\", doc_comment_formatter);\n                         return rewrite_doc_comment(\n                             &doc_comment,\n                             shape.comment(context.config),"}, {"sha": "00185425d6a5b9124deebf472909a5e42866cbb9", "filename": "src/attr/doc_comment.rs", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/0482ac88f4da28fb49abe05da11e5535f5aac9a8/src%2Fattr%2Fdoc_comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0482ac88f4da28fb49abe05da11e5535f5aac9a8/src%2Fattr%2Fdoc_comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr%2Fdoc_comment.rs?ref=0482ac88f4da28fb49abe05da11e5535f5aac9a8", "patch": "@@ -0,0 +1,77 @@\n+use crate::comment::CommentStyle;\n+use std::fmt::{self, Display};\n+\n+/// Formats a string as a doc comment using the given [`CommentStyle`].\n+#[derive(new)]\n+pub(super) struct DocCommentFormatter<'a> {\n+    literal: &'a str,\n+    style: CommentStyle<'a>,\n+}\n+\n+impl Display for DocCommentFormatter<'_> {\n+    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let opener = self.style.opener().trim_end();\n+        let mut lines = self.literal.lines().peekable();\n+        while let Some(line) = lines.next() {\n+            let is_last_line = lines.peek().is_none();\n+            if is_last_line {\n+                write!(formatter, \"{}{}\", opener, line)?;\n+            } else {\n+                writeln!(formatter, \"{}{}\", opener, line)?;\n+            }\n+        }\n+        Ok(())\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn literal_controls_leading_spaces() {\n+        test_doc_comment_is_formatted_correctly(\n+            \"    Lorem ipsum\",\n+            \"///    Lorem ipsum\",\n+            CommentStyle::TripleSlash,\n+        );\n+    }\n+\n+    #[test]\n+    fn single_line_doc_comment_is_formatted_correctly() {\n+        test_doc_comment_is_formatted_correctly(\n+            \"Lorem ipsum\",\n+            \"///Lorem ipsum\",\n+            CommentStyle::TripleSlash,\n+        );\n+    }\n+\n+    #[test]\n+    fn multi_line_doc_comment_is_formatted_correctly() {\n+        test_doc_comment_is_formatted_correctly(\n+            \"Lorem ipsum\\nDolor sit amet\",\n+            \"///Lorem ipsum\\n///Dolor sit amet\",\n+            CommentStyle::TripleSlash,\n+        );\n+    }\n+\n+    #[test]\n+    fn whitespace_within_lines_is_preserved() {\n+        test_doc_comment_is_formatted_correctly(\n+            \" Lorem ipsum \\n Dolor sit amet \",\n+            \"/// Lorem ipsum \\n/// Dolor sit amet \",\n+            CommentStyle::TripleSlash,\n+        );\n+    }\n+\n+    fn test_doc_comment_is_formatted_correctly(\n+        literal: &str,\n+        expected_comment: &str,\n+        style: CommentStyle<'_>,\n+    ) {\n+        assert_eq!(\n+            expected_comment,\n+            format!(\"{}\", DocCommentFormatter::new(&literal, style))\n+        );\n+    }\n+}"}, {"sha": "91d9309124446cc8c528608002e227379ed4aa68", "filename": "tests/source/normalize_multiline_doc_attribute.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0482ac88f4da28fb49abe05da11e5535f5aac9a8/tests%2Fsource%2Fnormalize_multiline_doc_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0482ac88f4da28fb49abe05da11e5535f5aac9a8/tests%2Fsource%2Fnormalize_multiline_doc_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnormalize_multiline_doc_attribute.rs?ref=0482ac88f4da28fb49abe05da11e5535f5aac9a8", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-unstable: true\n+// rustfmt-normalize_doc_attributes: true\n+\n+#[doc = \"This comment\n+is split\n+on multiple lines\"]\n+fn foo() {}"}, {"sha": "3b30525cacef86e5c0fab6aff1354c2b132b7a68", "filename": "tests/target/normalize_multiline_doc_attribute.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0482ac88f4da28fb49abe05da11e5535f5aac9a8/tests%2Ftarget%2Fnormalize_multiline_doc_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0482ac88f4da28fb49abe05da11e5535f5aac9a8/tests%2Ftarget%2Fnormalize_multiline_doc_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnormalize_multiline_doc_attribute.rs?ref=0482ac88f4da28fb49abe05da11e5535f5aac9a8", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-unstable: true\n+// rustfmt-normalize_doc_attributes: true\n+\n+///This comment\n+///is split\n+///on multiple lines\n+fn foo() {}"}]}