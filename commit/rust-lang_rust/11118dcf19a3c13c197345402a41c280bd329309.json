{"sha": "11118dcf19a3c13c197345402a41c280bd329309", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMTE4ZGNmMTlhM2MxM2MxOTczNDU0MDJhNDFjMjgwYmQzMjkzMDk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-09-28T17:39:43Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-02T21:46:45Z"}, "message": "add some better debugs", "tree": {"sha": "16a2079c91e95c620c92d33e998118302f13596f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16a2079c91e95c620c92d33e998118302f13596f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11118dcf19a3c13c197345402a41c280bd329309", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11118dcf19a3c13c197345402a41c280bd329309", "html_url": "https://github.com/rust-lang/rust/commit/11118dcf19a3c13c197345402a41c280bd329309", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11118dcf19a3c13c197345402a41c280bd329309/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e340996ff5faa77b72d9b859aff34211033c1b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/e340996ff5faa77b72d9b859aff34211033c1b68", "html_url": "https://github.com/rust-lang/rust/commit/e340996ff5faa77b72d9b859aff34211033c1b68"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "6736751a5a2c225065b2c6baf966de387474a60a", "filename": "src/librustc/infer/higher_ranked/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11118dcf19a3c13c197345402a41c280bd329309/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11118dcf19a3c13c197345402a41c280bd329309/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=11118dcf19a3c13c197345402a41c280bd329309", "patch": "@@ -155,7 +155,10 @@ impl<'a, 'gcx, 'tcx> CombineFields<'a, 'gcx, 'tcx> {\n                                .filter(|&&r| !skol_resolution_map.contains_key(r))\n                                .cloned()\n                                .next()\n-                               .expect(\"no representative region\");\n+                               .unwrap_or_else(|| {\n+                                   bug!(\"no representative region for `{:?}` in `{:?}`\",\n+                                        skol, regions)\n+                               });\n \n                     (skol, representative)\n                 })"}, {"sha": "7cc8e067132f878257772434afd4ab46d0f30412", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/11118dcf19a3c13c197345402a41c280bd329309/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11118dcf19a3c13c197345402a41c280bd329309/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=11118dcf19a3c13c197345402a41c280bd329309", "patch": "@@ -1226,7 +1226,12 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n                     None\n                 }\n             });\n-            self.ty_of_arg(a, expected_arg_ty)\n+\n+            let input_ty = self.ty_of_arg(a, expected_arg_ty);\n+            debug!(\"ty_of_closure: i={} input_ty={:?} expected_arg_ty={:?}\",\n+                   i, input_ty, expected_arg_ty);\n+\n+            input_ty\n         });\n \n         let expected_ret_ty = expected_sig.as_ref().map(|e| e.output());"}, {"sha": "077050167db287bda9a2caa0da23686d2d8683a8", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/11118dcf19a3c13c197345402a41c280bd329309/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11118dcf19a3c13c197345402a41c280bd329309/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=11118dcf19a3c13c197345402a41c280bd329309", "patch": "@@ -51,7 +51,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                      body: &'gcx hir::Body,\n                      expected_sig: Option<ty::FnSig<'tcx>>)\n                      -> Ty<'tcx> {\n-        debug!(\"check_closure opt_kind={:?} expected_sig={:?}\",\n+        debug!(\"check_closure(opt_kind={:?}, expected_sig={:?})\",\n                opt_kind,\n                expected_sig);\n \n@@ -61,10 +61,15 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                          decl,\n                                          Abi::RustCall,\n                                          expected_sig);\n+\n+        debug!(\"check_closure: ty_of_closure returns {:?}\", sig);\n+\n         // `deduce_expectations_from_expected_type` introduces late-bound\n         // lifetimes defined elsewhere, which we need to anonymize away.\n         let sig = self.tcx.anonymize_late_bound_regions(&sig);\n \n+        debug!(\"check_closure: anonymized sig={:?}\", sig);\n+\n         // Create type variables (for now) to represent the transformed\n         // types of upvars. These will be unified during the upvar\n         // inference phase (`upvar.rs`).\n@@ -104,7 +109,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             sig.abi\n         ));\n \n-        debug!(\"closure for {:?} --> sig={:?} opt_kind={:?}\",\n+        debug!(\"check_closure: expr_def_id={:?}, sig={:?}, opt_kind={:?}\",\n                expr_def_id,\n                sig,\n                opt_kind);"}]}