{"sha": "a0fc649269bda6c01f1b22d233ebb49cb34925a3", "node_id": "C_kwDOAAsO6NoAKGEwZmM2NDkyNjliZGE2YzAxZjFiMjJkMjMzZWJiNDljYjM0OTI1YTM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-07T13:08:33Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-07T13:50:01Z"}, "message": "fix unreachable pub", "tree": {"sha": "a1b9074dd93f0314e7b01b6a177bc406010d0fce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1b9074dd93f0314e7b01b6a177bc406010d0fce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0fc649269bda6c01f1b22d233ebb49cb34925a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0fc649269bda6c01f1b22d233ebb49cb34925a3", "html_url": "https://github.com/rust-lang/rust/commit/a0fc649269bda6c01f1b22d233ebb49cb34925a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0fc649269bda6c01f1b22d233ebb49cb34925a3/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44c3cc100b826afcfd0afef4d16bd47195a62f94", "url": "https://api.github.com/repos/rust-lang/rust/commits/44c3cc100b826afcfd0afef4d16bd47195a62f94", "html_url": "https://github.com/rust-lang/rust/commit/44c3cc100b826afcfd0afef4d16bd47195a62f94"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "827d9f85efbbb8e4c8af6b1cceaaf88d794d156f", "filename": "crates/ide-completion/src/completions/mod_.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0fc649269bda6c01f1b22d233ebb49cb34925a3/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0fc649269bda6c01f1b22d233ebb49cb34925a3/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs?ref=a0fc649269bda6c01f1b22d233ebb49cb34925a3", "patch": "@@ -14,7 +14,7 @@ use crate::{\n     CompletionItem, Completions,\n };\n \n-/// Complete mod declaration, i.e. `mod ;`\n+/// Complete mod declaration, i.e. `mod $0;`\n pub(crate) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let mod_under_caret = match ctx.name_ctx() {\n         Some(NameContext { kind: NameKind::Module(mod_under_caret), .. })\n@@ -28,7 +28,7 @@ pub(crate) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Op\n     let _p = profile::span(\"completion::complete_mod\");\n \n     let mut current_module = ctx.module;\n-    // For `mod `, `ctx.module` is its parent, but for `mod f`, it's `mod f` itself, but we're\n+    // For `mod $0`, `ctx.module` is its parent, but for `mod f$0`, it's `mod f` itself, but we're\n     // interested in its parent.\n     if ctx.original_token.kind() == SyntaxKind::IDENT {\n         if let Some(module) = ctx.original_token.ancestors().nth(1).and_then(ast::Module::cast) {"}, {"sha": "5342c481e3651a0c26ef02e8aa6ee97eacdf5142", "filename": "crates/ide-completion/src/context.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a0fc649269bda6c01f1b22d233ebb49cb34925a3/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0fc649269bda6c01f1b22d233ebb49cb34925a3/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext.rs?ref=a0fc649269bda6c01f1b22d233ebb49cb34925a3", "patch": "@@ -123,15 +123,15 @@ pub(super) struct LifetimeContext {\n }\n \n #[derive(Debug)]\n-pub enum LifetimeKind {\n+pub(super) enum LifetimeKind {\n     LifetimeParam { is_decl: bool, param: ast::LifetimeParam },\n     Lifetime,\n     LabelRef,\n     LabelDef,\n }\n \n #[derive(Debug)]\n-pub struct NameContext {\n+pub(super) struct NameContext {\n     #[allow(dead_code)]\n     pub(super) name: Option<ast::Name>,\n     pub(super) kind: NameKind,\n@@ -534,9 +534,7 @@ impl<'a> CompletionContext<'a> {\n             file_with_fake_ident.syntax().token_at_offset(offset).right_biased()?;\n \n         let original_token = original_file.syntax().token_at_offset(offset).left_biased()?;\n-        dbg!(&original_token);\n         let token = sema.descend_into_macros_single(original_token.clone());\n-        dbg!(&token);\n         let scope = sema.scope_at_offset(&token.parent()?, offset)?;\n         let krate = scope.krate();\n         let module = scope.module();"}]}