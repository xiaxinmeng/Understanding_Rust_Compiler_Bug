{"sha": "77de724f92ab111b9cbf48b968552a974168d983", "node_id": "C_kwDOAAsO6NoAKDc3ZGU3MjRmOTJhYjExMWI5Y2JmNDhiOTY4NTUyYTk3NDE2OGQ5ODM", "commit": {"author": {"name": "Chris Denton", "email": "chris@chrisdenton.dev", "date": "2023-02-20T09:45:55Z"}, "committer": {"name": "Chris Denton", "email": "chris@chrisdenton.dev", "date": "2023-02-20T10:05:45Z"}, "message": "Distribute libntdll.a with windows-gnu toolchains\n\nThis allows loading some essential functions (e.g. read/write file) at load time instead of lazily.", "tree": {"sha": "75eff09f37592aadaacf25a0969f2d66118b6f3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75eff09f37592aadaacf25a0969f2d66118b6f3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77de724f92ab111b9cbf48b968552a974168d983", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmPzRfsACgkQcTRy8vRW\nJ95GWg/+LNoeDHPpOK5D6Ubb+qro5ThiS1j66ezSOaA+hzA3HmnssHrPkne9gDJv\nv+9zikaoN083VXZnPzu+1t+gEoH3GoMB5NYombu3/lMKxoMBAEcowUgTz1O2mrvA\n28oHRSfOLTwMULa5N0AvCWkTP4mwg39HUe4Y/w6JgwYPd3xrFc6syZh0Ux6Jprhq\n1Du7nSGxAPKri3SaTUOEgJKEbVQBjYFhavugzPc5Td8ISo3wVedWnDD3+xYUEJKZ\nKgEbqwTsJA83oeSNEduLTRQX0++yLKyX3j42cejl6xXTCeA8KanvUBljkAIU4J5E\nNrMnAVnb8VjkGelSQFpBTTul5xXkje2x5UcQGUqndt/ksEFZvsDcch05c0RIPZqb\nugcx6rcbDf5tcXsKPm/rheM5N2r4LmTzs2q1oJ8kJAYGyF90d44usKNpUns6vpKn\n7GA47NkMIo1pHBjB1Cl5xmx14+dckw3IkiuwC/CCk+7D+8yICzuiorHXkFnLPNm7\nhZT5njo/O2CY6oVVYS1k2PvbxSu1/UhLXpb1M0qXsi0i5vR5n9ScuuLKd664QWSo\npTLLQZbdQP3RcmMzSBWr8EFKwgGQdQ1sUnWt3SB3snwgaVpanSx0tSRFoFZDTJq+\np3GqKrMPZQX6/2qMijD0hNHHtURsca5epd59R+KU1d9GdnoElF0=\n=0dHQ\n-----END PGP SIGNATURE-----", "payload": "tree 75eff09f37592aadaacf25a0969f2d66118b6f3c\nparent 7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb\nauthor Chris Denton <chris@chrisdenton.dev> 1676886355 +0000\ncommitter Chris Denton <chris@chrisdenton.dev> 1676887545 +0000\n\nDistribute libntdll.a with windows-gnu toolchains\n\nThis allows loading some essential functions (e.g. read/write file) at load time instead of lazily.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77de724f92ab111b9cbf48b968552a974168d983", "html_url": "https://github.com/rust-lang/rust/commit/77de724f92ab111b9cbf48b968552a974168d983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77de724f92ab111b9cbf48b968552a974168d983/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "html_url": "https://github.com/rust-lang/rust/commit/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb"}], "stats": {"total": 88, "additions": 41, "deletions": 47}, "files": [{"sha": "15ffa257d5728a34ab21c9d5bcf7aa48b731a8f8", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 40, "deletions": 47, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/77de724f92ab111b9cbf48b968552a974168d983/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77de724f92ab111b9cbf48b968552a974168d983/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=77de724f92ab111b9cbf48b968552a974168d983", "patch": "@@ -287,7 +287,6 @@ pub const STATUS_INVALID_PARAMETER: NTSTATUS = 0xc000000d_u32 as _;\n \n pub const STATUS_PENDING: NTSTATUS = 0x103 as _;\n pub const STATUS_END_OF_FILE: NTSTATUS = 0xC0000011_u32 as _;\n-pub const STATUS_NOT_IMPLEMENTED: NTSTATUS = 0xC0000002_u32 as _;\n \n // Equivalent to the `NT_SUCCESS` C preprocessor macro.\n // See: https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/using-ntstatus-values\n@@ -1262,6 +1261,46 @@ extern \"system\" {\n     ) -> NTSTATUS;\n }\n \n+#[link(name = \"ntdll\")]\n+extern \"system\" {\n+    pub fn NtCreateFile(\n+        FileHandle: *mut HANDLE,\n+        DesiredAccess: ACCESS_MASK,\n+        ObjectAttributes: *const OBJECT_ATTRIBUTES,\n+        IoStatusBlock: *mut IO_STATUS_BLOCK,\n+        AllocationSize: *mut i64,\n+        FileAttributes: ULONG,\n+        ShareAccess: ULONG,\n+        CreateDisposition: ULONG,\n+        CreateOptions: ULONG,\n+        EaBuffer: *mut c_void,\n+        EaLength: ULONG,\n+    ) -> NTSTATUS;\n+    pub fn NtReadFile(\n+        FileHandle: BorrowedHandle<'_>,\n+        Event: HANDLE,\n+        ApcRoutine: Option<IO_APC_ROUTINE>,\n+        ApcContext: *mut c_void,\n+        IoStatusBlock: &mut IO_STATUS_BLOCK,\n+        Buffer: *mut crate::mem::MaybeUninit<u8>,\n+        Length: ULONG,\n+        ByteOffset: Option<&LARGE_INTEGER>,\n+        Key: Option<&ULONG>,\n+    ) -> NTSTATUS;\n+    pub fn NtWriteFile(\n+        FileHandle: BorrowedHandle<'_>,\n+        Event: HANDLE,\n+        ApcRoutine: Option<IO_APC_ROUTINE>,\n+        ApcContext: *mut c_void,\n+        IoStatusBlock: &mut IO_STATUS_BLOCK,\n+        Buffer: *const u8,\n+        Length: ULONG,\n+        ByteOffset: Option<&LARGE_INTEGER>,\n+        Key: Option<&ULONG>,\n+    ) -> NTSTATUS;\n+    pub fn RtlNtStatusToDosError(Status: NTSTATUS) -> ULONG;\n+}\n+\n // Functions that aren't available on every version of Windows that we support,\n // but we still use them and just provide some form of a fallback implementation.\n compat_fn_with_fallback! {\n@@ -1302,52 +1341,6 @@ compat_fn_optional! {\n compat_fn_with_fallback! {\n     pub static NTDLL: &CStr = ansi_str!(\"ntdll\");\n \n-    pub fn NtCreateFile(\n-        FileHandle: *mut HANDLE,\n-        DesiredAccess: ACCESS_MASK,\n-        ObjectAttributes: *const OBJECT_ATTRIBUTES,\n-        IoStatusBlock: *mut IO_STATUS_BLOCK,\n-        AllocationSize: *mut i64,\n-        FileAttributes: ULONG,\n-        ShareAccess: ULONG,\n-        CreateDisposition: ULONG,\n-        CreateOptions: ULONG,\n-        EaBuffer: *mut c_void,\n-        EaLength: ULONG\n-    ) -> NTSTATUS {\n-        STATUS_NOT_IMPLEMENTED\n-    }\n-    pub fn NtReadFile(\n-        FileHandle: BorrowedHandle<'_>,\n-        Event: HANDLE,\n-        ApcRoutine: Option<IO_APC_ROUTINE>,\n-        ApcContext: *mut c_void,\n-        IoStatusBlock: &mut IO_STATUS_BLOCK,\n-        Buffer: *mut crate::mem::MaybeUninit<u8>,\n-        Length: ULONG,\n-        ByteOffset: Option<&LARGE_INTEGER>,\n-        Key: Option<&ULONG>\n-    ) -> NTSTATUS {\n-        STATUS_NOT_IMPLEMENTED\n-    }\n-    pub fn NtWriteFile(\n-        FileHandle: BorrowedHandle<'_>,\n-        Event: HANDLE,\n-        ApcRoutine: Option<IO_APC_ROUTINE>,\n-        ApcContext: *mut c_void,\n-        IoStatusBlock: &mut IO_STATUS_BLOCK,\n-        Buffer: *const u8,\n-        Length: ULONG,\n-        ByteOffset: Option<&LARGE_INTEGER>,\n-        Key: Option<&ULONG>\n-    ) -> NTSTATUS {\n-        STATUS_NOT_IMPLEMENTED\n-    }\n-    pub fn RtlNtStatusToDosError(\n-        Status: NTSTATUS\n-    ) -> ULONG {\n-        Status as ULONG\n-    }\n     pub fn NtCreateKeyedEvent(\n         KeyedEventHandle: LPHANDLE,\n         DesiredAccess: ACCESS_MASK,"}, {"sha": "c7c967b3e2e624812cb53f5c7aae3347f2e8a0af", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77de724f92ab111b9cbf48b968552a974168d983/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77de724f92ab111b9cbf48b968552a974168d983/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=77de724f92ab111b9cbf48b968552a974168d983", "patch": "@@ -234,6 +234,7 @@ fn make_win_dist(\n         \"libkernel32.a\",\n         \"libmsimg32.a\",\n         \"libmsvcrt.a\",\n+        \"libntdll.a\",\n         \"libodbc32.a\",\n         \"libole32.a\",\n         \"liboleaut32.a\","}]}