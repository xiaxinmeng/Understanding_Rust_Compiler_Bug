{"sha": "ec616d584676e5083c68ed1367b94e9e824d8945", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNjE2ZDU4NDY3NmU1MDgzYzY4ZWQxMzY3Yjk0ZTllODI0ZDg5NDU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-05-05T03:15:47Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-05-05T03:15:47Z"}, "message": "refactor: if -> match", "tree": {"sha": "a60e9838e5e8d9cd4a8e019419f513fdae3e0e76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a60e9838e5e8d9cd4a8e019419f513fdae3e0e76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec616d584676e5083c68ed1367b94e9e824d8945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec616d584676e5083c68ed1367b94e9e824d8945", "html_url": "https://github.com/rust-lang/rust/commit/ec616d584676e5083c68ed1367b94e9e824d8945", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec616d584676e5083c68ed1367b94e9e824d8945/comments", "author": null, "committer": null, "parents": [{"sha": "59435072f58e1d622e1664f0a7e44830891c958f", "url": "https://api.github.com/repos/rust-lang/rust/commits/59435072f58e1d622e1664f0a7e44830891c958f", "html_url": "https://github.com/rust-lang/rust/commit/59435072f58e1d622e1664f0a7e44830891c958f"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "d7c68d9f2a98da8bdb921eebda1357bcf470dbeb", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ec616d584676e5083c68ed1367b94e9e824d8945/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec616d584676e5083c68ed1367b94e9e824d8945/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=ec616d584676e5083c68ed1367b94e9e824d8945", "patch": "@@ -69,19 +69,18 @@ macro_rules! supported_targets {\n         /// List of supported targets\n         pub const TARGETS: &'static [&'static str] = &[$($triple),*];\n \n-        // this would use a match if stringify! were allowed in pattern position\n         fn load_specific(target: &str) -> Option<Target> {\n-            if false { }\n-            $(\n-                else if target == $triple {\n-                    let mut t = $module::target();\n-                    t.options.is_builtin = true;\n-                    debug!(\"Got builtin target: {:?}\", t);\n-                    return Some(t);\n-                }\n-            )*\n-\n-            None\n+            match target {\n+                $(\n+                    $triple => {\n+                        let mut t = $module::target();\n+                        t.options.is_builtin = true;\n+                        debug!(\"Got builtin target: {:?}\", t);\n+                        Some(t)\n+                    },\n+                )+\n+                _ => None\n+            }\n         }\n     )\n }"}]}