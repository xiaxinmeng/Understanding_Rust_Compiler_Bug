{"sha": "0a605d33cdd2acccbe46141086fce0c500281a6f", "node_id": "C_kwDOAAsO6NoAKDBhNjA1ZDMzY2RkMmFjY2NiZTQ2MTQxMDg2ZmNlMGM1MDAyODFhNmY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-09T03:10:06Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-12T02:00:20Z"}, "message": "No more ret_type_span", "tree": {"sha": "c674d6de96be8769b407106ab004451d6adb41b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c674d6de96be8769b407106ab004451d6adb41b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a605d33cdd2acccbe46141086fce0c500281a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a605d33cdd2acccbe46141086fce0c500281a6f", "html_url": "https://github.com/rust-lang/rust/commit/0a605d33cdd2acccbe46141086fce0c500281a6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a605d33cdd2acccbe46141086fce0c500281a6f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98e1f041b6e33598a18edb928ec9db93a850c6cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/98e1f041b6e33598a18edb928ec9db93a850c6cb", "html_url": "https://github.com/rust-lang/rust/commit/98e1f041b6e33598a18edb928ec9db93a850c6cb"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "c98caafa6d9d49a490785a1e80abc062dbaba717", "filename": "compiler/rustc_typeck/src/check/_match.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0a605d33cdd2acccbe46141086fce0c500281a6f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a605d33cdd2acccbe46141086fce0c500281a6f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs?ref=0a605d33cdd2acccbe46141086fce0c500281a6f", "patch": "@@ -137,9 +137,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 Some(&arm.body),\n                 arm_ty,\n                 Some(&mut |err| {\n-                    let Some(ret) = self.ret_type_span else {\n-                        return;\n-                    };\n+                    let Some(ret) = self\n+                        .tcx\n+                        .hir()\n+                        .find_by_def_id(self.body_id.owner)\n+                        .and_then(|owner| owner.fn_decl())\n+                        .map(|decl| decl.output.span())\n+                        else { return; };\n                     let Expectation::IsLast(stmt) = orig_expected else {\n                         return\n                     };\n@@ -517,9 +521,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         }\n                     }\n                 }\n-                // If all the obligations hold (or there are no obligations) the tail expression\n-                // we can suggest to return a boxed trait object instead of an opaque type.\n-                if suggest_box { self.ret_type_span } else { None }\n+                if suggest_box {\n+                    self.tcx\n+                        .hir()\n+                        .find_by_def_id(self.body_id.owner)\n+                        .and_then(|owner| owner.fn_decl())\n+                        .map(|decl| decl.output.span())\n+                } else {\n+                    None\n+                }\n             }\n             _ => None,\n         }"}, {"sha": "d6fa74c87309cd92a0e0a6f59be1275fca43b25e", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a605d33cdd2acccbe46141086fce0c500281a6f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a605d33cdd2acccbe46141086fce0c500281a6f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=0a605d33cdd2acccbe46141086fce0c500281a6f", "patch": "@@ -106,7 +106,6 @@ pub(super) fn check_fn<'a, 'tcx>(\n     fcx.return_type_has_opaque = ret_ty != declared_ret_ty;\n \n     fcx.ret_coercion = Some(RefCell::new(CoerceMany::new(ret_ty)));\n-    fcx.ret_type_span = Some(decl.output.span());\n \n     let span = body.value.span;\n "}, {"sha": "0e22971d3aabd2982ca5231c3ebbed8caff617b2", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0a605d33cdd2acccbe46141086fce0c500281a6f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a605d33cdd2acccbe46141086fce0c500281a6f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs?ref=0a605d33cdd2acccbe46141086fce0c500281a6f", "patch": "@@ -68,8 +68,6 @@ pub struct FnCtxt<'a, 'tcx> {\n     /// any).\n     pub(super) ret_coercion: Option<RefCell<DynamicCoerceMany<'tcx>>>,\n \n-    pub(super) ret_type_span: Option<Span>,\n-\n     /// Used exclusively to reduce cost of advanced evaluation used for\n     /// more helpful diagnostics.\n     pub(super) in_tail_expr: bool,\n@@ -142,7 +140,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             param_env,\n             err_count_on_creation: inh.tcx.sess.err_count(),\n             ret_coercion: None,\n-            ret_type_span: None,\n             in_tail_expr: false,\n             ret_coercion_span: Cell::new(None),\n             resume_yield_tys: None,"}]}