{"sha": "a16a4173c96a669412b3740dd7acba7d41b66b39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNmE0MTczYzk2YTY2OTQxMmIzNzQwZGQ3YWNiYTdkNDFiNjZiMzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-13T09:15:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-13T09:15:12Z"}, "message": "Auto merge of #26990 - rwz:patch-1, r=alexcrichton\n\nThe current example does not illustrate threaded behavior imo.", "tree": {"sha": "70d4c2107f474c023d9da04eecbef24ce81fcfb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70d4c2107f474c023d9da04eecbef24ce81fcfb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a16a4173c96a669412b3740dd7acba7d41b66b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a16a4173c96a669412b3740dd7acba7d41b66b39", "html_url": "https://github.com/rust-lang/rust/commit/a16a4173c96a669412b3740dd7acba7d41b66b39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a16a4173c96a669412b3740dd7acba7d41b66b39/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f552a5da53e8164a13c337b6cbe39c3f20f35ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f552a5da53e8164a13c337b6cbe39c3f20f35ff", "html_url": "https://github.com/rust-lang/rust/commit/5f552a5da53e8164a13c337b6cbe39c3f20f35ff"}, {"sha": "49e45833f8a2a97a753a4229ffc84f8a746e8f3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/49e45833f8a2a97a753a4229ffc84f8a746e8f3b", "html_url": "https://github.com/rust-lang/rust/commit/49e45833f8a2a97a753a4229ffc84f8a746e8f3b"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "9539cd3447cb9f023bec1813c475871ea9da438b", "filename": "src/doc/trpl/dining-philosophers.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a16a4173c96a669412b3740dd7acba7d41b66b39/src%2Fdoc%2Ftrpl%2Fdining-philosophers.md", "raw_url": "https://github.com/rust-lang/rust/raw/a16a4173c96a669412b3740dd7acba7d41b66b39/src%2Fdoc%2Ftrpl%2Fdining-philosophers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fdining-philosophers.md?ref=a16a4173c96a669412b3740dd7acba7d41b66b39", "patch": "@@ -151,15 +151,15 @@ look at `main()` again:\n # struct Philosopher {\n #     name: String,\n # }\n-# \n+#\n # impl Philosopher {\n #     fn new(name: &str) -> Philosopher {\n #         Philosopher {\n #             name: name.to_string(),\n #         }\n #     }\n # }\n-# \n+#\n fn main() {\n     let p1 = Philosopher::new(\"Judith Butler\");\n     let p2 = Philosopher::new(\"Gilles Deleuze\");\n@@ -197,15 +197,15 @@ a method, and then loop through all the philosophers, calling it:\n ```rust\n struct Philosopher {\n     name: String,\n-}   \n+}\n \n-impl Philosopher { \n+impl Philosopher {\n     fn new(name: &str) -> Philosopher {\n         Philosopher {\n             name: name.to_string(),\n         }\n     }\n-    \n+\n     fn eat(&self) {\n         println!(\"{} is done eating.\", self.name);\n     }\n@@ -267,15 +267,15 @@ use std::thread;\n \n struct Philosopher {\n     name: String,\n-}   \n+}\n \n-impl Philosopher { \n+impl Philosopher {\n     fn new(name: &str) -> Philosopher {\n         Philosopher {\n             name: name.to_string(),\n         }\n     }\n-    \n+\n     fn eat(&self) {\n         println!(\"{} is eating.\", self.name);\n \n@@ -348,9 +348,9 @@ use std::thread;\n \n struct Philosopher {\n     name: String,\n-}   \n+}\n \n-impl Philosopher { \n+impl Philosopher {\n     fn new(name: &str) -> Philosopher {\n         Philosopher {\n             name: name.to_string(),\n@@ -401,7 +401,7 @@ let handles: Vec<_> = philosophers.into_iter().map(|p| {\n While this is only five lines, they\u2019re a dense five. Let\u2019s break it down.\n \n ```rust,ignore\n-let handles: Vec<_> = \n+let handles: Vec<_> =\n ```\n \n We introduce a new binding, called `handles`. We\u2019ve given it this name because\n@@ -460,15 +460,15 @@ If you run this program, you\u2019ll see that the philosophers eat out of order!\n We have multi-threading!\n \n ```text\n+Judith Butler is eating.\n Gilles Deleuze is eating.\n-Gilles Deleuze is done eating.\n+Karl Marx is eating.\n Emma Goldman is eating.\n-Emma Goldman is done eating.\n Michel Foucault is eating.\n-Judith Butler is eating.\n Judith Butler is done eating.\n-Karl Marx is eating.\n+Gilles Deleuze is done eating.\n Karl Marx is done eating.\n+Emma Goldman is done eating.\n Michel Foucault is done eating.\n ```\n "}]}