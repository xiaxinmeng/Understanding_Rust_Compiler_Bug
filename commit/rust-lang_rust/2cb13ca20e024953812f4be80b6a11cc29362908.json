{"sha": "2cb13ca20e024953812f4be80b6a11cc29362908", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYjEzY2EyMGUwMjQ5NTM4MTJmNGJlODBiNmExMWNjMjkzNjI5MDg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-06T10:20:12Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-06T10:20:12Z"}, "message": "Sync from rust 354cc751b74e813f180755fa67bebcb669825755", "tree": {"sha": "1e7387f77a3295c3571c0d7a2585926983e55782", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e7387f77a3295c3571c0d7a2585926983e55782"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cb13ca20e024953812f4be80b6a11cc29362908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb13ca20e024953812f4be80b6a11cc29362908", "html_url": "https://github.com/rust-lang/rust/commit/2cb13ca20e024953812f4be80b6a11cc29362908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cb13ca20e024953812f4be80b6a11cc29362908/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab425a4bca1d6df234596a1621c4cabcc73bb272", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab425a4bca1d6df234596a1621c4cabcc73bb272", "html_url": "https://github.com/rust-lang/rust/commit/ab425a4bca1d6df234596a1621c4cabcc73bb272"}, {"sha": "6e799438b72a40e3212805e357201ca8b3f03553", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e799438b72a40e3212805e357201ca8b3f03553", "html_url": "https://github.com/rust-lang/rust/commit/6e799438b72a40e3212805e357201ca8b3f03553"}], "stats": {"total": 32, "additions": 4, "deletions": 28}, "files": [{"sha": "dc1cd336e1599e65c65a0becbfaee6a8b4dfb99d", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2cb13ca20e024953812f4be80b6a11cc29362908/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2cb13ca20e024953812f4be80b6a11cc29362908/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2cb13ca20e024953812f4be80b6a11cc29362908", "patch": "@@ -240,15 +240,6 @@ dependencies = [\n  \"libc\",\n ]\n \n-[[package]]\n-name = \"memmap2\"\n-version = \"0.2.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"04e3e85b970d650e2ae6d70592474087051c11c54da7f7b4949725c5735fbcc6\"\n-dependencies = [\n- \"libc\",\n-]\n-\n [[package]]\n name = \"object\"\n version = \"0.23.0\"\n@@ -319,7 +310,6 @@ dependencies = [\n  \"gimli\",\n  \"indexmap\",\n  \"libloading\",\n- \"memmap2\",\n  \"object\",\n  \"smallvec\",\n  \"target-lexicon\","}, {"sha": "60946ab28085854440b9db785bf5b59f23a94302", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2cb13ca20e024953812f4be80b6a11cc29362908/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2cb13ca20e024953812f4be80b6a11cc29362908/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=2cb13ca20e024953812f4be80b6a11cc29362908", "patch": "@@ -22,7 +22,6 @@ ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg\n indexmap = \"1.0.2\"\n libloading = { version = \"0.6.0\", optional = true }\n smallvec = \"1.6.1\"\n-memmap2 = \"0.2.1\"\n \n # Uncomment to use local checkout of cranelift\n #[patch.\"https://github.com/bytecodealliance/wasmtime/\"]"}, {"sha": "dbdc8cbad44c45aea7ad1c22e410aac69945f16d", "filename": "src/metadata.rs", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2cb13ca20e024953812f4be80b6a11cc29362908/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb13ca20e024953812f4be80b6a11cc29362908/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=2cb13ca20e024953812f4be80b6a11cc29362908", "patch": "@@ -1,11 +1,11 @@\n //! Reading and writing of the rustc metadata for rlibs and dylibs\n \n use std::fs::File;\n-use std::ops::Deref;\n use std::path::Path;\n \n use rustc_codegen_ssa::METADATA_FILENAME;\n-use rustc_data_structures::owning_ref::{OwningRef, StableAddress};\n+use rustc_data_structures::memmap::Mmap;\n+use rustc_data_structures::owning_ref::OwningRef;\n use rustc_data_structures::rustc_erase_owner;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoader};\n@@ -17,26 +17,13 @@ use crate::backend::WriteMetadata;\n \n pub(crate) struct CraneliftMetadataLoader;\n \n-struct StableMmap(memmap2::Mmap);\n-\n-impl Deref for StableMmap {\n-    type Target = [u8];\n-\n-    fn deref(&self) -> &[u8] {\n-        &*self.0\n-    }\n-}\n-\n-unsafe impl StableAddress for StableMmap {}\n-\n fn load_metadata_with(\n     path: &Path,\n     f: impl for<'a> FnOnce(&'a [u8]) -> Result<&'a [u8], String>,\n ) -> Result<MetadataRef, String> {\n     let file = File::open(path).map_err(|e| format!(\"{:?}\", e))?;\n-    let data = unsafe { memmap2::MmapOptions::new().map_copy_read_only(&file) }\n-        .map_err(|e| format!(\"{:?}\", e))?;\n-    let metadata = OwningRef::new(StableMmap(data)).try_map(f)?;\n+    let data = unsafe { Mmap::map(file) }.map_err(|e| format!(\"{:?}\", e))?;\n+    let metadata = OwningRef::new(data).try_map(f)?;\n     return Ok(rustc_erase_owner!(metadata.map_owner_box()));\n }\n "}]}