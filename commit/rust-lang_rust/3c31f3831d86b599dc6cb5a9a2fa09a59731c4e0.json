{"sha": "3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMzFmMzgzMWQ4NmI1OTlkYzZjYjVhOWEyZmEwOWE1OTczMWM0ZTA=", "commit": {"author": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-08-08T13:14:05Z"}, "committer": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-08-09T16:36:24Z"}, "message": "One assist for function and method generation", "tree": {"sha": "a72e586136ed08e85e76b719410033962bd0d62b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a72e586136ed08e85e76b719410033962bd0d62b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0", "html_url": "https://github.com/rust-lang/rust/commit/3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0/comments", "author": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02f5b5e0e253e61744e726ff3f190d2d1671f16e", "url": "https://api.github.com/repos/rust-lang/rust/commits/02f5b5e0e253e61744e726ff3f190d2d1671f16e", "html_url": "https://github.com/rust-lang/rust/commit/02f5b5e0e253e61744e726ff3f190d2d1671f16e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "50d3a74f2768cbd0b29e5664b175be19589936d9", "filename": "crates/ide_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=3c31f3831d86b599dc6cb5a9a2fa09a59731c4e0", "patch": "@@ -131,8 +131,8 @@ pub(crate) fn generate_method(acc: &mut Assists, ctx: &AssistContext) -> Option<\n     let target = call.syntax().text_range();\n \n     acc.add(\n-        AssistId(\"generate_method\", AssistKind::Generate),\n-        format!(\"Generate `{}` method\", function_builder.fn_name),\n+        AssistId(\"generate_function\", AssistKind::Generate),\n+        format!(\"Generate `{}` function\", function_builder.fn_name),\n         target,\n         |builder| {\n             let function_template = function_builder.render();"}]}