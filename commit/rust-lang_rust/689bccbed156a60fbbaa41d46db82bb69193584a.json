{"sha": "689bccbed156a60fbbaa41d46db82bb69193584a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4OWJjY2JlZDE1NmE2MGZiYmFhNDFkNDZkYjgyYmI2OTE5MzU4NGE=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-19T10:49:21Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-19T10:49:21Z"}, "message": "Fix comment typo.", "tree": {"sha": "7b1bcdfdb855b39e8aab334f6c0420ede58ccaf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b1bcdfdb855b39e8aab334f6c0420ede58ccaf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/689bccbed156a60fbbaa41d46db82bb69193584a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/689bccbed156a60fbbaa41d46db82bb69193584a", "html_url": "https://github.com/rust-lang/rust/commit/689bccbed156a60fbbaa41d46db82bb69193584a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/689bccbed156a60fbbaa41d46db82bb69193584a/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e5bdbe57703708e91cd37b707c75a20498ef4b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5bdbe57703708e91cd37b707c75a20498ef4b8", "html_url": "https://github.com/rust-lang/rust/commit/6e5bdbe57703708e91cd37b707c75a20498ef4b8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "179c2fc608bfec1b5c42ee84d64c9e9ea9ffa4c6", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/689bccbed156a60fbbaa41d46db82bb69193584a/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/689bccbed156a60fbbaa41d46db82bb69193584a/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=689bccbed156a60fbbaa41d46db82bb69193584a", "patch": "@@ -105,7 +105,7 @@ pub struct Frame<'a, 'tcx: 'a> {\n /// value held directly, outside of any allocation (`ByVal`).\n ///\n /// For optimization of a few very common cases, there is also a representation for a pair of\n-/// primitive values (`ByValPair`). It allows Miri to avoid making allocations for check binary\n+/// primitive values (`ByValPair`). It allows Miri to avoid making allocations for checked binary\n /// operations and fat pointers. This idea was taken from rustc's trans.\n #[derive(Clone, Copy, Debug, PartialEq)]\n enum Value {"}]}