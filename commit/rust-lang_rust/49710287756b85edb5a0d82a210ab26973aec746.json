{"sha": "49710287756b85edb5a0d82a210ab26973aec746", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5NzEwMjg3NzU2Yjg1ZWRiNWEwZDgyYTIxMGFiMjY5NzNhZWM3NDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-16T07:35:48Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-16T07:35:48Z"}, "message": "Rustup to rustc 1.49.0-nightly (dd7fc54eb 2020-10-15)", "tree": {"sha": "c88a59b75e66fea7a4d9b001aeff55273cb8763b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c88a59b75e66fea7a4d9b001aeff55273cb8763b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49710287756b85edb5a0d82a210ab26973aec746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49710287756b85edb5a0d82a210ab26973aec746", "html_url": "https://github.com/rust-lang/rust/commit/49710287756b85edb5a0d82a210ab26973aec746", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49710287756b85edb5a0d82a210ab26973aec746/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c7c591cb8a656b08edd4dacf86323d0db5b8684", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c7c591cb8a656b08edd4dacf86323d0db5b8684", "html_url": "https://github.com/rust-lang/rust/commit/1c7c591cb8a656b08edd4dacf86323d0db5b8684"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "d9ac9c12a101da897e39b8ca895e85260dfe63d1", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -1 +1 @@\n-nightly-2020-10-15\n+nightly-2020-10-16"}, {"sha": "6382f8df3446b149218d0bef1f40f26614550ad4", "filename": "src/archive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -63,9 +63,9 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n             sess,\n             dst: output.to_path_buf(),\n             lib_search_paths: archive_search_paths(sess),\n-            use_gnu_style_archive: sess.target.target.options.archive_format == \"gnu\",\n+            use_gnu_style_archive: sess.target.options.archive_format == \"gnu\",\n             // FIXME fix builtin ranlib on macOS\n-            no_builtin_ranlib: sess.target.target.options.is_like_osx,\n+            no_builtin_ranlib: sess.target.options.is_like_osx,\n \n             src_archives,\n             entries,"}, {"sha": "13c62add41a3b520bee56d4daac980f0c05a0a97", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -352,7 +352,7 @@ impl<'tcx, M: Module> layout::HasParamEnv<'tcx> for FunctionCx<'_, 'tcx, M> {\n \n impl<'tcx, M: Module> HasTargetSpec for FunctionCx<'_, 'tcx, M> {\n     fn target_spec(&self) -> &Target {\n-        &self.tcx.sess.target.target\n+        &self.tcx.sess.target\n     }\n }\n "}, {"sha": "cbf9522b1d774752e8ca40910bdd8fe26d28ba97", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -50,7 +50,7 @@ impl<'tcx> DebugContext<'tcx> {\n             // TODO: this should be configurable\n             // macOS doesn't seem to support DWARF > 3\n             // 5 version is required for md5 file hash\n-            version: if tcx.sess.target.target.options.is_like_osx {\n+            version: if tcx.sess.target.options.is_like_osx {\n                 3\n             } else {\n                 // FIXME change to version 5 once the gdb and lldb shipping with the latest debian"}, {"sha": "ff0b994c9a9f43950302313b310aefea92ed8c9d", "filename": "src/driver/aot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -320,8 +320,8 @@ fn codegen_global_asm(tcx: TyCtxt<'_>, cgu_name: &str, global_asm: &str) {\n     }\n \n     if cfg!(not(feature = \"inline_asm\"))\n-        || tcx.sess.target.target.options.is_like_osx\n-        || tcx.sess.target.target.options.is_like_windows\n+        || tcx.sess.target.options.is_like_osx\n+        || tcx.sess.target.options.is_like_windows\n     {\n         if global_asm.contains(\"__rust_probestack\") {\n             return;"}, {"sha": "fd00a2e00a6a4457cce0ab897e64b04b6803fb80", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -246,7 +246,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n }\n \n fn target_triple(sess: &Session) -> target_lexicon::Triple {\n-    sess.target.target.llvm_target.parse().unwrap()\n+    sess.target.llvm_target.parse().unwrap()\n }\n \n fn build_isa(sess: &Session, enable_pic: bool) -> Box<dyn isa::TargetIsa + 'static> {"}, {"sha": "04369bf89fd2d81ac03171bd7ad4ede3ddeba434", "filename": "src/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -101,7 +101,7 @@ pub(crate) fn write_metadata<P: WriteMetadata>(\n     product.add_rustc_section(\n         rustc_middle::middle::exported_symbols::metadata_symbol_name(tcx),\n         compressed,\n-        tcx.sess.target.target.options.is_like_osx,\n+        tcx.sess.target.options.is_like_osx,\n     );\n \n     metadata"}, {"sha": "26407e25bc6e882de4269c40f2dfc1ebe9e0b99e", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -226,9 +226,7 @@ pub(crate) fn write_clif_file<'tcx>(\n             .expect(\"value location ranges\")\n     });\n \n-    let clif_output_dir = tcx\n-        .output_filenames(LOCAL_CRATE)\n-        .with_extension(\"clif\");\n+    let clif_output_dir = tcx.output_filenames(LOCAL_CRATE).with_extension(\"clif\");\n \n     match std::fs::create_dir(&clif_output_dir) {\n         Ok(()) => {}"}, {"sha": "463afaf7cc50cd66c6b773f1bdc3b65f126f76bd", "filename": "src/toolchain.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/49710287756b85edb5a0d82a210ab26973aec746/src%2Ftoolchain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49710287756b85edb5a0d82a210ab26973aec746/src%2Ftoolchain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftoolchain.rs?ref=49710287756b85edb5a0d82a210ab26973aec746", "patch": "@@ -91,10 +91,10 @@ fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n                 } else if stem == \"link\" || stem == \"lld-link\" {\n                     LinkerFlavor::Msvc\n                 } else if stem == \"lld\" || stem == \"rust-lld\" {\n-                    LinkerFlavor::Lld(sess.target.target.options.lld_flavor)\n+                    LinkerFlavor::Lld(sess.target.options.lld_flavor)\n                 } else {\n                     // fall back to the value in the target spec\n-                    sess.target.target.linker_flavor\n+                    sess.target.linker_flavor\n                 };\n \n                 Some((linker, flavor))\n@@ -115,8 +115,8 @@ fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n \n     if let Some(ret) = infer_from(\n         sess,\n-        sess.target.target.options.linker.clone().map(PathBuf::from),\n-        Some(sess.target.target.linker_flavor),\n+        sess.target.options.linker.clone().map(PathBuf::from),\n+        Some(sess.target.linker_flavor),\n     ) {\n         return ret;\n     }"}]}