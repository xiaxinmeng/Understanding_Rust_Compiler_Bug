{"sha": "cb8bd83888cddc37c912be648ce5a814b08ceb25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiOGJkODM4ODhjZGRjMzdjOTEyYmU2NDhjZTVhODE0YjA4Y2ViMjU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-08-06T02:51:02Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-08-06T03:20:54Z"}, "message": "rustdoc: Run all work in a separate task\n\nThere's a good long comment explaining why. The tl;dr; is that I have no idea\nwhy this is necessary, but it gets --test to work on windows which is something,\nright?\n\ncc #13259\ncc #16275\ncc rust-lang/cargo#302", "tree": {"sha": "0ab991763ef2ac05476dc000240f85757df69aaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab991763ef2ac05476dc000240f85757df69aaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb8bd83888cddc37c912be648ce5a814b08ceb25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8bd83888cddc37c912be648ce5a814b08ceb25", "html_url": "https://github.com/rust-lang/rust/commit/cb8bd83888cddc37c912be648ce5a814b08ceb25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb8bd83888cddc37c912be648ce5a814b08ceb25/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5ac41185a821681f4bfaf93ef0569955d24ef4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5ac41185a821681f4bfaf93ef0569955d24ef4a", "html_url": "https://github.com/rust-lang/rust/commit/f5ac41185a821681f4bfaf93ef0569955d24ef4a"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "fb974403858a09bd5b9c714bf4af227842650a68", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/cb8bd83888cddc37c912be648ce5a814b08ceb25/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb8bd83888cddc37c912be648ce5a814b08ceb25/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=cb8bd83888cddc37c912be648ce5a814b08ceb25", "patch": "@@ -89,7 +89,40 @@ local_data_key!(pub analysiskey: core::CrateAnalysis)\n type Output = (clean::Crate, Vec<plugins::PluginJson> );\n \n pub fn main() {\n-    std::os::set_exit_status(main_args(std::os::args().as_slice()));\n+    // Why run rustdoc in a separate task? That's a good question!\n+    //\n+    // We first begin our adventure at the ancient commit of e7c4fb69. In this\n+    // commit it was discovered that the stack limit frobbing on windows ended\n+    // up causing some syscalls to fail. This was worked around manually in the\n+    // relevant location.\n+    //\n+    // Our journey now continues with #13259 where it was discovered that this\n+    // stack limit frobbing has the ability to affect nearly any syscall. Note\n+    // that the key idea here is that there is currently no knowledge as to why\n+    // this is happening or how to preserve it, fun times!\n+    //\n+    // Now we continue along to #16275 where it was discovered that --test on\n+    // windows didn't work at all! Yet curiously rustdoc worked without --test.\n+    // The exact reason that #16275 cropped up is that during the expansion\n+    // phase the compiler attempted to open libstd to read out its macros. This\n+    // invoked the LLVMRustOpenArchive shim which in turned went to LLVM to go\n+    // open a file and read it. Lo and behold this function returned an error!\n+    // It was then discovered that when the same fix mentioned in #13259 was\n+    // applied, the error went away. The plot thickens!\n+    //\n+    // Remember that rustdoc works without --test, which raises the question of\n+    // how because the --test and non --test paths are almost identical. The\n+    // first thing both paths do is parse and expand a crate! It turns out that\n+    // the difference is that --test runs on the *main task* while the normal\n+    // path runs in subtask. It turns out that running --test in a sub task also\n+    // fixes the problem!\n+    //\n+    // So, in summary, it is unknown why this is necessary, what it is\n+    // preventing, or what the actual bug is. In the meantime, this allows\n+    // --test to work on windows, which seems good, right? Fun times.\n+    spawn(proc() {\n+        std::os::set_exit_status(main_args(std::os::args().as_slice()));\n+    });\n }\n \n pub fn opts() -> Vec<getopts::OptGroup> {"}]}