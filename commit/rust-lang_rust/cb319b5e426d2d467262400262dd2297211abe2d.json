{"sha": "cb319b5e426d2d467262400262dd2297211abe2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMzE5YjVlNDI2ZDJkNDY3MjYyNDAwMjYyZGQyMjk3MjExYWJlMmQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-05T13:41:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-05T13:41:06Z"}, "message": "Merge pull request #596 from RalfJung/backtrace\n\nmove env var stuff out of the miri lib", "tree": {"sha": "37406bfc92b8de4bf9a2977068d97543685e0b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37406bfc92b8de4bf9a2977068d97543685e0b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb319b5e426d2d467262400262dd2297211abe2d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcMLPyCRBK7hj4Ov3rIwAAdHIIAKYlZyiNjQlaBIq96Y2+9jHy\nECECaiTQQzAM4ojVWOwsSq7nX6HZF4Hu/gO91MupRNlDN/UF3Ns7Q9wQAl1gRSwN\nolDSlM5ieoiHMrO8W0l1Yp0h5PkC5VmgBsQThfIpQQoeuaA3ph64gqDjuZlTwFsn\nYUDdUgfFGbRkAoG7+0mbRxvTfacOihN2PCm178AZnG+gd1CP68pc3ZYMm38CNC/Z\nRh168JuQdbC1SZx8yHiOttJ/VXI74ZJn0WXXZUx/CkHsAHKR16fjKUKo1J9666uz\nk8FlNQyTnS7PQ/pbUmirLMXoI0Y9y49G1tdoc5AYD/m3nSbmITd+bMbTB0Mzu/k=\n=BmJI\n-----END PGP SIGNATURE-----\n", "payload": "tree 37406bfc92b8de4bf9a2977068d97543685e0b7b\nparent 3f7626c8319a6eba900e2319d19a1daa8202d108\nparent 0019d6f01f623fc53f0ce1b54be994897af74fea\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1546695666 +0100\ncommitter GitHub <noreply@github.com> 1546695666 +0100\n\nMerge pull request #596 from RalfJung/backtrace\n\nmove env var stuff out of the miri lib"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb319b5e426d2d467262400262dd2297211abe2d", "html_url": "https://github.com/rust-lang/rust/commit/cb319b5e426d2d467262400262dd2297211abe2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb319b5e426d2d467262400262dd2297211abe2d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f7626c8319a6eba900e2319d19a1daa8202d108", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f7626c8319a6eba900e2319d19a1daa8202d108", "html_url": "https://github.com/rust-lang/rust/commit/3f7626c8319a6eba900e2319d19a1daa8202d108"}, {"sha": "0019d6f01f623fc53f0ce1b54be994897af74fea", "url": "https://api.github.com/repos/rust-lang/rust/commits/0019d6f01f623fc53f0ce1b54be994897af74fea", "html_url": "https://github.com/rust-lang/rust/commit/0019d6f01f623fc53f0ce1b54be994897af74fea"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "d8d7cfe0702e5673ede65541f458a20cba639199", "filename": "src/bin/miri.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cb319b5e426d2d467262400262dd2297211abe2d/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb319b5e426d2d467262400262dd2297211abe2d/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=cb319b5e426d2d467262400262dd2297211abe2d", "patch": "@@ -154,6 +154,14 @@ fn init_late_loggers() {\n             rustc_driver::init_rustc_env_logger();\n         }\n     }\n+\n+    // If MIRI_BACKTRACE is set and RUST_CTFE_BACKTRACE is not, set RUST_CTFE_BACKTRACE.\n+    // Do this late, so we really only apply this to miri's errors.\n+    if let Ok(var) = env::var(\"MIRI_BACKTRACE\") {\n+        if env::var(\"RUST_CTFE_BACKTRACE\") == Err(env::VarError::NotPresent) {\n+            env::set_var(\"RUST_CTFE_BACKTRACE\", &var);\n+        }\n+    }\n }\n \n fn find_sysroot() -> String {"}, {"sha": "bb6c9e3ca503fb27b4f495bd17d4b9b3a773e5a4", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cb319b5e426d2d467262400262dd2297211abe2d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb319b5e426d2d467262400262dd2297211abe2d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=cb319b5e426d2d467262400262dd2297211abe2d", "patch": "@@ -15,7 +15,6 @@ extern crate rustc_target;\n \n use std::collections::HashMap;\n use std::borrow::Cow;\n-use std::env;\n \n use rustc::ty::{self, TyCtxt, query::TyCtxtAt};\n use rustc::ty::layout::{TyLayout, LayoutOf, Size, Align};\n@@ -184,14 +183,6 @@ pub fn eval_main<'a, 'tcx: 'a>(\n ) {\n     let mut ecx = create_ecx(tcx, main_id, validate).expect(\"Couldn't create ecx\");\n \n-    // If MIRI_BACKTRACE is set and RUST_CTFE_BACKTRACE is not, set RUST_CTFE_BACKTRACE.\n-    // Do this late, so we really only apply this to miri's errors.\n-    if let Ok(var) = env::var(\"MIRI_BACKTRACE\") {\n-        if env::var(\"RUST_CTFE_BACKTRACE\") == Err(env::VarError::NotPresent) {\n-            env::set_var(\"RUST_CTFE_BACKTRACE\", &var);\n-        }\n-    }\n-\n     // Run! The main execution.\n     let res: EvalResult = (|| {\n         ecx.run()?;"}]}