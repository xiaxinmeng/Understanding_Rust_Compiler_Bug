{"sha": "d5ef542d376877380fda93ac7c457b5b8ba66833", "node_id": "C_kwDOAAsO6NoAKGQ1ZWY1NDJkMzc2ODc3MzgwZmRhOTNhYzdjNDU3YjViOGJhNjY4MzM", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-04-03T12:51:17Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-04-04T02:52:42Z"}, "message": "Generate renamed lint test", "tree": {"sha": "071fffc1a4b2a29d6bcc144e393494ea9654fcd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/071fffc1a4b2a29d6bcc144e393494ea9654fcd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ef542d376877380fda93ac7c457b5b8ba66833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ef542d376877380fda93ac7c457b5b8ba66833", "html_url": "https://github.com/rust-lang/rust/commit/d5ef542d376877380fda93ac7c457b5b8ba66833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ef542d376877380fda93ac7c457b5b8ba66833/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422741151359b8ad4b4f1f4a545aef27f5722c82", "url": "https://api.github.com/repos/rust-lang/rust/commits/422741151359b8ad4b4f1f4a545aef27f5722c82", "html_url": "https://github.com/rust-lang/rust/commit/422741151359b8ad4b4f1f4a545aef27f5722c82"}], "stats": {"total": 212, "additions": 135, "deletions": 77}, "files": [{"sha": "f15b00ecad1e6d8597f50e5582f504db2d37d536", "filename": "clippy_dev/src/update_lints.rs", "status": "modified", "additions": 64, "deletions": 9, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef542d376877380fda93ac7c457b5b8ba66833/clippy_dev%2Fsrc%2Fupdate_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef542d376877380fda93ac7c457b5b8ba66833/clippy_dev%2Fsrc%2Fupdate_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fupdate_lints.rs?ref=d5ef542d376877380fda93ac7c457b5b8ba66833", "patch": "@@ -1,7 +1,7 @@\n use core::fmt::Write;\n use itertools::Itertools;\n use rustc_lexer::{tokenize, unescape, LiteralKind, TokenKind};\n-use std::collections::HashMap;\n+use std::collections::{HashMap, HashSet};\n use std::ffi::OsStr;\n use std::fs;\n use std::path::Path;\n@@ -32,7 +32,7 @@ pub enum UpdateMode {\n /// Panics if a file path could not read from or then written to\n #[allow(clippy::too_many_lines)]\n pub fn run(update_mode: UpdateMode) {\n-    let (lints, deprecated_lints) = gather_all();\n+    let (lints, deprecated_lints, renamed_lints) = gather_all();\n \n     let internal_lints = Lint::internal_lints(&lints);\n     let usable_lints = Lint::usable_lints(&lints);\n@@ -110,10 +110,13 @@ pub fn run(update_mode: UpdateMode) {\n \n     let content = gen_deprecated_lints_test(&deprecated_lints);\n     process_file(\"tests/ui/deprecated.rs\", update_mode, &content);\n+\n+    let content = gen_renamed_lints_test(&renamed_lints);\n+    process_file(\"tests/ui/rename.rs\", update_mode, &content);\n }\n \n pub fn print_lints() {\n-    let (lint_list, _) = gather_all();\n+    let (lint_list, _, _) = gather_all();\n     let usable_lints = Lint::usable_lints(&lint_list);\n     let usable_lint_count = usable_lints.len();\n     let grouped_by_lint_group = Lint::by_lint_group(usable_lints.into_iter());\n@@ -213,6 +216,19 @@ impl DeprecatedLint {\n     }\n }\n \n+struct RenamedLint {\n+    old_name: String,\n+    new_name: String,\n+}\n+impl RenamedLint {\n+    fn new(old_name: &str, new_name: &str) -> Self {\n+        Self {\n+            old_name: remove_line_splices(old_name),\n+            new_name: remove_line_splices(new_name),\n+        }\n+    }\n+}\n+\n /// Generates the code for registering a group\n fn gen_lint_group_list<'a>(group_name: &str, lints: impl Iterator<Item = &'a Lint>) -> String {\n     let mut details: Vec<_> = lints.map(|l| (&l.module, l.name.to_uppercase())).collect();\n@@ -288,10 +304,30 @@ fn gen_deprecated_lints_test(lints: &[DeprecatedLint]) -> String {\n     res\n }\n \n+fn gen_renamed_lints_test(lints: &[RenamedLint]) -> String {\n+    let mut seen_lints = HashSet::new();\n+    let mut res: String = GENERATED_FILE_COMMENT.into();\n+    res.push_str(\"// run-rustfix\\n\\n\");\n+    for lint in lints {\n+        if seen_lints.insert(&lint.new_name) {\n+            writeln!(res, \"#![allow({})]\", lint.new_name).unwrap();\n+        }\n+    }\n+    seen_lints.clear();\n+    for lint in lints {\n+        if seen_lints.insert(&lint.old_name) {\n+            writeln!(res, \"#![warn({})]\", lint.old_name).unwrap();\n+        }\n+    }\n+    res.push_str(\"\\nfn main() {}\\n\");\n+    res\n+}\n+\n /// Gathers all lints defined in `clippy_lints/src`\n-fn gather_all() -> (Vec<Lint>, Vec<DeprecatedLint>) {\n+fn gather_all() -> (Vec<Lint>, Vec<DeprecatedLint>, Vec<RenamedLint>) {\n     let mut lints = Vec::with_capacity(1000);\n     let mut deprecated_lints = Vec::with_capacity(50);\n+    let mut renamed_lints = Vec::with_capacity(50);\n     let root_path = clippy_project_root().join(\"clippy_lints/src\");\n \n     for (rel_path, file) in WalkDir::new(&root_path)\n@@ -317,13 +353,13 @@ fn gather_all() -> (Vec<Lint>, Vec<DeprecatedLint>) {\n             module.strip_suffix(\".rs\").unwrap_or(&module)\n         };\n \n-        if module == \"deprecated_lints\" {\n-            parse_deprecated_contents(&contents, &mut deprecated_lints);\n-        } else {\n-            parse_contents(&contents, module, &mut lints);\n+        match module {\n+            \"deprecated_lints\" => parse_deprecated_contents(&contents, &mut deprecated_lints),\n+            \"renamed_lints\" => parse_renamed_contents(&contents, &mut renamed_lints),\n+            _ => parse_contents(&contents, module, &mut lints),\n         }\n     }\n-    (lints, deprecated_lints)\n+    (lints, deprecated_lints, renamed_lints)\n }\n \n macro_rules! match_tokens {\n@@ -406,6 +442,25 @@ fn parse_deprecated_contents(contents: &str, lints: &mut Vec<DeprecatedLint>) {\n     }\n }\n \n+fn parse_renamed_contents(contents: &str, lints: &mut Vec<RenamedLint>) {\n+    for line in contents.lines() {\n+        let mut offset = 0usize;\n+        let mut iter = tokenize(line).map(|t| {\n+            let range = offset..offset + t.len;\n+            offset = range.end;\n+            (t.kind, &line[range])\n+        });\n+        let (old_name, new_name) = match_tokens!(\n+            iter,\n+            // (\"old_name\",\n+            Whitespace OpenParen Literal{kind: LiteralKind::Str{..},..}(old_name) Comma\n+            // \"new_name\"),\n+            Whitespace Literal{kind: LiteralKind::Str{..},..}(new_name) CloseParen Comma\n+        );\n+        lints.push(RenamedLint::new(old_name, new_name));\n+    }\n+}\n+\n /// Removes the line splices and surrounding quotes from a string literal\n fn remove_line_splices(s: &str) -> String {\n     let s = s"}, {"sha": "9812cfde3ec780a812107c04c2ffe467760e3fcf", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 37, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef542d376877380fda93ac7c457b5b8ba66833/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef542d376877380fda93ac7c457b5b8ba66833/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=d5ef542d376877380fda93ac7c457b5b8ba66833", "patch": "@@ -162,6 +162,8 @@ mod deprecated_lints;\n #[cfg_attr(feature = \"internal\", allow(clippy::missing_clippy_version_attribute))]\n mod utils;\n \n+mod renamed_lints;\n+\n // begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n mod absurd_extreme_comparisons;\n mod approx_const;\n@@ -920,43 +922,9 @@ fn register_removed_non_tool_lints(store: &mut rustc_lint::LintStore) {\n ///\n /// Used in `./src/driver.rs`.\n pub fn register_renamed(ls: &mut rustc_lint::LintStore) {\n-    // NOTE: when renaming a lint, add a corresponding test to tests/ui/rename.rs\n-    ls.register_renamed(\"clippy::stutter\", \"clippy::module_name_repetitions\");\n-    ls.register_renamed(\"clippy::new_without_default_derive\", \"clippy::new_without_default\");\n-    ls.register_renamed(\"clippy::cyclomatic_complexity\", \"clippy::cognitive_complexity\");\n-    ls.register_renamed(\"clippy::const_static_lifetime\", \"clippy::redundant_static_lifetimes\");\n-    ls.register_renamed(\"clippy::option_and_then_some\", \"clippy::bind_instead_of_map\");\n-    ls.register_renamed(\"clippy::box_vec\", \"clippy::box_collection\");\n-    ls.register_renamed(\"clippy::block_in_if_condition_expr\", \"clippy::blocks_in_if_conditions\");\n-    ls.register_renamed(\"clippy::block_in_if_condition_stmt\", \"clippy::blocks_in_if_conditions\");\n-    ls.register_renamed(\"clippy::option_map_unwrap_or\", \"clippy::map_unwrap_or\");\n-    ls.register_renamed(\"clippy::option_map_unwrap_or_else\", \"clippy::map_unwrap_or\");\n-    ls.register_renamed(\"clippy::result_map_unwrap_or_else\", \"clippy::map_unwrap_or\");\n-    ls.register_renamed(\"clippy::option_unwrap_used\", \"clippy::unwrap_used\");\n-    ls.register_renamed(\"clippy::result_unwrap_used\", \"clippy::unwrap_used\");\n-    ls.register_renamed(\"clippy::option_expect_used\", \"clippy::expect_used\");\n-    ls.register_renamed(\"clippy::result_expect_used\", \"clippy::expect_used\");\n-    ls.register_renamed(\"clippy::for_loop_over_option\", \"clippy::for_loops_over_fallibles\");\n-    ls.register_renamed(\"clippy::for_loop_over_result\", \"clippy::for_loops_over_fallibles\");\n-    ls.register_renamed(\"clippy::identity_conversion\", \"clippy::useless_conversion\");\n-    ls.register_renamed(\"clippy::zero_width_space\", \"clippy::invisible_characters\");\n-    ls.register_renamed(\"clippy::single_char_push_str\", \"clippy::single_char_add_str\");\n-    ls.register_renamed(\"clippy::if_let_some_result\", \"clippy::match_result_ok\");\n-    ls.register_renamed(\"clippy::disallowed_type\", \"clippy::disallowed_types\");\n-    ls.register_renamed(\"clippy::disallowed_method\", \"clippy::disallowed_methods\");\n-    ls.register_renamed(\"clippy::ref_in_deref\", \"clippy::needless_borrow\");\n-    ls.register_renamed(\"clippy::to_string_in_display\", \"clippy::recursive_format_impl\");\n-\n-    // uplifted lints\n-    ls.register_renamed(\"clippy::invalid_ref\", \"invalid_value\");\n-    ls.register_renamed(\"clippy::into_iter_on_array\", \"array_into_iter\");\n-    ls.register_renamed(\"clippy::unused_label\", \"unused_labels\");\n-    ls.register_renamed(\"clippy::drop_bounds\", \"drop_bounds\");\n-    ls.register_renamed(\"clippy::temporary_cstring_as_ptr\", \"temporary_cstring_as_ptr\");\n-    ls.register_renamed(\"clippy::panic_params\", \"non_fmt_panics\");\n-    ls.register_renamed(\"clippy::unknown_clippy_lints\", \"unknown_lints\");\n-    ls.register_renamed(\"clippy::invalid_atomic_ordering\", \"invalid_atomic_ordering\");\n-    ls.register_renamed(\"clippy::mem_discriminant_non_enum\", \"enum_intrinsics_non_enums\");\n+    for (old_name, new_name) in renamed_lints::RENAMED_LINTS {\n+        ls.register_renamed(old_name, new_name);\n+    }\n }\n \n // only exists to let the dogfood integration test works."}, {"sha": "e10dc0e1bfeb71d3ec7995175c9cca0361c5b2ab", "filename": "clippy_lints/src/renamed_lints.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef542d376877380fda93ac7c457b5b8ba66833/clippy_lints%2Fsrc%2Frenamed_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef542d376877380fda93ac7c457b5b8ba66833/clippy_lints%2Fsrc%2Frenamed_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frenamed_lints.rs?ref=d5ef542d376877380fda93ac7c457b5b8ba66833", "patch": "@@ -0,0 +1,37 @@\n+pub static RENAMED_LINTS: &[(&str, &str)] = &[\n+    (\"clippy::stutter\", \"clippy::module_name_repetitions\"),\n+    (\"clippy::new_without_default_derive\", \"clippy::new_without_default\"),\n+    (\"clippy::cyclomatic_complexity\", \"clippy::cognitive_complexity\"),\n+    (\"clippy::const_static_lifetime\", \"clippy::redundant_static_lifetimes\"),\n+    (\"clippy::option_and_then_some\", \"clippy::bind_instead_of_map\"),\n+    (\"clippy::box_vec\", \"clippy::box_collection\"),\n+    (\"clippy::block_in_if_condition_expr\", \"clippy::blocks_in_if_conditions\"),\n+    (\"clippy::block_in_if_condition_stmt\", \"clippy::blocks_in_if_conditions\"),\n+    (\"clippy::option_map_unwrap_or\", \"clippy::map_unwrap_or\"),\n+    (\"clippy::option_map_unwrap_or_else\", \"clippy::map_unwrap_or\"),\n+    (\"clippy::result_map_unwrap_or_else\", \"clippy::map_unwrap_or\"),\n+    (\"clippy::option_unwrap_used\", \"clippy::unwrap_used\"),\n+    (\"clippy::result_unwrap_used\", \"clippy::unwrap_used\"),\n+    (\"clippy::option_expect_used\", \"clippy::expect_used\"),\n+    (\"clippy::result_expect_used\", \"clippy::expect_used\"),\n+    (\"clippy::for_loop_over_option\", \"clippy::for_loops_over_fallibles\"),\n+    (\"clippy::for_loop_over_result\", \"clippy::for_loops_over_fallibles\"),\n+    (\"clippy::identity_conversion\", \"clippy::useless_conversion\"),\n+    (\"clippy::zero_width_space\", \"clippy::invisible_characters\"),\n+    (\"clippy::single_char_push_str\", \"clippy::single_char_add_str\"),\n+    (\"clippy::if_let_some_result\", \"clippy::match_result_ok\"),\n+    (\"clippy::disallowed_type\", \"clippy::disallowed_types\"),\n+    (\"clippy::disallowed_method\", \"clippy::disallowed_methods\"),\n+    (\"clippy::ref_in_deref\", \"clippy::needless_borrow\"),\n+    (\"clippy::to_string_in_display\", \"clippy::recursive_format_impl\"),\n+    // uplifted lints\n+    (\"clippy::invalid_ref\", \"invalid_value\"),\n+    (\"clippy::into_iter_on_array\", \"array_into_iter\"),\n+    (\"clippy::unused_label\", \"unused_labels\"),\n+    (\"clippy::drop_bounds\", \"drop_bounds\"),\n+    (\"clippy::temporary_cstring_as_ptr\", \"temporary_cstring_as_ptr\"),\n+    (\"clippy::panic_params\", \"non_fmt_panics\"),\n+    (\"clippy::unknown_clippy_lints\", \"unknown_lints\"),\n+    (\"clippy::invalid_atomic_ordering\", \"invalid_atomic_ordering\"),\n+    (\"clippy::mem_discriminant_non_enum\", \"enum_intrinsics_non_enums\"),\n+];"}, {"sha": "325f63a64dd90ed63a2542c0374bad75a709267e", "filename": "tests/ui/rename.fixed", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef542d376877380fda93ac7c457b5b8ba66833/tests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef542d376877380fda93ac7c457b5b8ba66833/tests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.fixed?ref=d5ef542d376877380fda93ac7c457b5b8ba66833", "patch": "@@ -1,12 +1,13 @@\n-//! Test for Clippy lint renames.\n+// This file was generated by `cargo dev update_lints`.\n+// Use that command to update this file and do not edit by hand.\n+// Manual edits will be overwritten.\n+\n // run-rustfix\n \n-#![allow(dead_code)]\n-// allow the new lint name here, to test if the new name works\n #![allow(clippy::module_name_repetitions)]\n #![allow(clippy::new_without_default)]\n-#![allow(clippy::redundant_static_lifetimes)]\n #![allow(clippy::cognitive_complexity)]\n+#![allow(clippy::redundant_static_lifetimes)]\n #![allow(clippy::bind_instead_of_map)]\n #![allow(clippy::box_collection)]\n #![allow(clippy::blocks_in_if_conditions)]\n@@ -20,8 +21,8 @@\n #![allow(clippy::match_result_ok)]\n #![allow(clippy::disallowed_types)]\n #![allow(clippy::disallowed_methods)]\n+#![allow(clippy::needless_borrow)]\n #![allow(clippy::recursive_format_impl)]\n-// uplifted lints\n #![allow(invalid_value)]\n #![allow(array_into_iter)]\n #![allow(unused_labels)]\n@@ -31,11 +32,10 @@\n #![allow(unknown_lints)]\n #![allow(invalid_atomic_ordering)]\n #![allow(enum_intrinsics_non_enums)]\n-// warn for the old lint name here, to test if the renaming worked\n #![warn(clippy::module_name_repetitions)]\n #![warn(clippy::new_without_default)]\n-#![warn(clippy::redundant_static_lifetimes)]\n #![warn(clippy::cognitive_complexity)]\n+#![warn(clippy::redundant_static_lifetimes)]\n #![warn(clippy::bind_instead_of_map)]\n #![warn(clippy::box_collection)]\n #![warn(clippy::blocks_in_if_conditions)]\n@@ -57,7 +57,6 @@\n #![warn(clippy::disallowed_methods)]\n #![warn(clippy::needless_borrow)]\n #![warn(clippy::recursive_format_impl)]\n-// uplifted lints\n #![warn(invalid_value)]\n #![warn(array_into_iter)]\n #![warn(unused_labels)]"}, {"sha": "a21b4a242880b6225c92927536e1d3d016d4a180", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef542d376877380fda93ac7c457b5b8ba66833/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef542d376877380fda93ac7c457b5b8ba66833/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=d5ef542d376877380fda93ac7c457b5b8ba66833", "patch": "@@ -1,12 +1,13 @@\n-//! Test for Clippy lint renames.\n+// This file was generated by `cargo dev update_lints`.\n+// Use that command to update this file and do not edit by hand.\n+// Manual edits will be overwritten.\n+\n // run-rustfix\n \n-#![allow(dead_code)]\n-// allow the new lint name here, to test if the new name works\n #![allow(clippy::module_name_repetitions)]\n #![allow(clippy::new_without_default)]\n-#![allow(clippy::redundant_static_lifetimes)]\n #![allow(clippy::cognitive_complexity)]\n+#![allow(clippy::redundant_static_lifetimes)]\n #![allow(clippy::bind_instead_of_map)]\n #![allow(clippy::box_collection)]\n #![allow(clippy::blocks_in_if_conditions)]\n@@ -20,8 +21,8 @@\n #![allow(clippy::match_result_ok)]\n #![allow(clippy::disallowed_types)]\n #![allow(clippy::disallowed_methods)]\n+#![allow(clippy::needless_borrow)]\n #![allow(clippy::recursive_format_impl)]\n-// uplifted lints\n #![allow(invalid_value)]\n #![allow(array_into_iter)]\n #![allow(unused_labels)]\n@@ -31,11 +32,10 @@\n #![allow(unknown_lints)]\n #![allow(invalid_atomic_ordering)]\n #![allow(enum_intrinsics_non_enums)]\n-// warn for the old lint name here, to test if the renaming worked\n #![warn(clippy::stutter)]\n #![warn(clippy::new_without_default_derive)]\n-#![warn(clippy::const_static_lifetime)]\n #![warn(clippy::cyclomatic_complexity)]\n+#![warn(clippy::const_static_lifetime)]\n #![warn(clippy::option_and_then_some)]\n #![warn(clippy::box_vec)]\n #![warn(clippy::block_in_if_condition_expr)]\n@@ -57,7 +57,6 @@\n #![warn(clippy::disallowed_method)]\n #![warn(clippy::ref_in_deref)]\n #![warn(clippy::to_string_in_display)]\n-// uplifted lints\n #![warn(clippy::invalid_ref)]\n #![warn(clippy::into_iter_on_array)]\n #![warn(clippy::unused_label)]"}, {"sha": "54e12d5fae5eaa1a21dea4784a38bafd1f9bc932", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef542d376877380fda93ac7c457b5b8ba66833/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef542d376877380fda93ac7c457b5b8ba66833/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=d5ef542d376877380fda93ac7c457b5b8ba66833", "patch": "@@ -12,17 +12,17 @@ error: lint `clippy::new_without_default_derive` has been renamed to `clippy::ne\n LL | #![warn(clippy::new_without_default_derive)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n-error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n+error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n   --> $DIR/rename.rs:37:9\n    |\n-LL | #![warn(clippy::const_static_lifetime)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n+LL | #![warn(clippy::cyclomatic_complexity)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n \n-error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n+error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n   --> $DIR/rename.rs:38:9\n    |\n-LL | #![warn(clippy::cyclomatic_complexity)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n+LL | #![warn(clippy::const_static_lifetime)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::option_and_then_some` has been renamed to `clippy::bind_instead_of_map`\n   --> $DIR/rename.rs:39:9\n@@ -151,55 +151,55 @@ LL | #![warn(clippy::to_string_in_display)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::recursive_format_impl`\n \n error: lint `clippy::invalid_ref` has been renamed to `invalid_value`\n-  --> $DIR/rename.rs:61:9\n+  --> $DIR/rename.rs:60:9\n    |\n LL | #![warn(clippy::invalid_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_value`\n \n error: lint `clippy::into_iter_on_array` has been renamed to `array_into_iter`\n-  --> $DIR/rename.rs:62:9\n+  --> $DIR/rename.rs:61:9\n    |\n LL | #![warn(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `array_into_iter`\n \n error: lint `clippy::unused_label` has been renamed to `unused_labels`\n-  --> $DIR/rename.rs:63:9\n+  --> $DIR/rename.rs:62:9\n    |\n LL | #![warn(clippy::unused_label)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unused_labels`\n \n error: lint `clippy::drop_bounds` has been renamed to `drop_bounds`\n-  --> $DIR/rename.rs:64:9\n+  --> $DIR/rename.rs:63:9\n    |\n LL | #![warn(clippy::drop_bounds)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `drop_bounds`\n \n error: lint `clippy::temporary_cstring_as_ptr` has been renamed to `temporary_cstring_as_ptr`\n-  --> $DIR/rename.rs:65:9\n+  --> $DIR/rename.rs:64:9\n    |\n LL | #![warn(clippy::temporary_cstring_as_ptr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `temporary_cstring_as_ptr`\n \n error: lint `clippy::panic_params` has been renamed to `non_fmt_panics`\n-  --> $DIR/rename.rs:66:9\n+  --> $DIR/rename.rs:65:9\n    |\n LL | #![warn(clippy::panic_params)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `non_fmt_panics`\n \n error: lint `clippy::unknown_clippy_lints` has been renamed to `unknown_lints`\n-  --> $DIR/rename.rs:67:9\n+  --> $DIR/rename.rs:66:9\n    |\n LL | #![warn(clippy::unknown_clippy_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unknown_lints`\n \n error: lint `clippy::invalid_atomic_ordering` has been renamed to `invalid_atomic_ordering`\n-  --> $DIR/rename.rs:68:9\n+  --> $DIR/rename.rs:67:9\n    |\n LL | #![warn(clippy::invalid_atomic_ordering)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_atomic_ordering`\n \n error: lint `clippy::mem_discriminant_non_enum` has been renamed to `enum_intrinsics_non_enums`\n-  --> $DIR/rename.rs:69:9\n+  --> $DIR/rename.rs:68:9\n    |\n LL | #![warn(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `enum_intrinsics_non_enums`"}]}