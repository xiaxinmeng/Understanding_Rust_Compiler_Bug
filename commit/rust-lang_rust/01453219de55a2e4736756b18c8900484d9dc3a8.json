{"sha": "01453219de55a2e4736756b18c8900484d9dc3a8", "node_id": "C_kwDOAAsO6NoAKDAxNDUzMjE5ZGU1NWEyZTQ3MzY3NTZiMThjODkwMDQ4NGQ5ZGMzYTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-04T21:42:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-04T21:42:02Z"}, "message": "Rollup merge of #97707 - Nilstrieb:data-structures-ub, r=cjgillot\n\nImprove soundness of rustc_data_structures\n\nMake it runnable in miri by adding some ignores and changing N in miri. Also fix a stacked borrows issue in sip128.", "tree": {"sha": "a89a70d31e63abd709c9a483e52e981a9057a296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a89a70d31e63abd709c9a483e52e981a9057a296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01453219de55a2e4736756b18c8900484d9dc3a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJim9GqCRBK7hj4Ov3rIwAAtIgIACKTYiQTJrFZI0/ueDpe/dws\nunHSyVYY28sdj4bytEDgxMQ9I94MwufxBXHJoZLQ5352zHz7gVF0nt53dHZXjpJJ\nBk4dHwhmmvLvxNVqCShbGSXd/MP2N3kApWkX5+LBBiWYhwpipSa+9kyogpfQXN2k\nDVWsqbThmVhXrIoCYi0XLufGLVDeuIknwSexv73wwp/tB8ukiuu38uX+SEiBV6zL\n78DOI7fya+yzlLxBW6xhHhi5yT04X8nQmy59xlqU4XLXdKYiXKkh4tGUgkJ2ishB\nGAU9d/ErC5ODMkc41xhQGm98RIfZcthwi11quaivKto7KL/ywB2kldhvKBLFI1c=\n=c+un\n-----END PGP SIGNATURE-----\n", "payload": "tree a89a70d31e63abd709c9a483e52e981a9057a296\nparent 36a16be35aa1fb545b07ee46cebf1f4c1bdfa933\nparent 7e3bee6d8ecf2bd1270b99ea1425f594d6adaf54\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1654378922 +0200\ncommitter GitHub <noreply@github.com> 1654378922 +0200\n\nRollup merge of #97707 - Nilstrieb:data-structures-ub, r=cjgillot\n\nImprove soundness of rustc_data_structures\n\nMake it runnable in miri by adding some ignores and changing N in miri. Also fix a stacked borrows issue in sip128.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01453219de55a2e4736756b18c8900484d9dc3a8", "html_url": "https://github.com/rust-lang/rust/commit/01453219de55a2e4736756b18c8900484d9dc3a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01453219de55a2e4736756b18c8900484d9dc3a8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "url": "https://api.github.com/repos/rust-lang/rust/commits/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "html_url": "https://github.com/rust-lang/rust/commit/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933"}, {"sha": "7e3bee6d8ecf2bd1270b99ea1425f594d6adaf54", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3bee6d8ecf2bd1270b99ea1425f594d6adaf54", "html_url": "https://github.com/rust-lang/rust/commit/7e3bee6d8ecf2bd1270b99ea1425f594d6adaf54"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "2be2f0532c99ca321ff590931fadb700ce0bc5ef", "filename": "compiler/rustc_data_structures/src/base_n/tests.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fbase_n%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fbase_n%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fbase_n%2Ftests.rs?ref=01453219de55a2e4736756b18c8900484d9dc3a8", "patch": "@@ -15,7 +15,9 @@ fn test_encode() {\n         test(u64::MAX as u128, base);\n         test(u128::MAX, base);\n \n-        for i in 0..1_000 {\n+        const N: u128 = if cfg!(miri) { 10 } else { 1000 };\n+\n+        for i in 0..N {\n             test(i * 983, base);\n         }\n     }"}, {"sha": "9940fee60d7d8209a56a988a0bb52278d434302b", "filename": "compiler/rustc_data_structures/src/graph/scc/tests.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fscc%2Ftests.rs?ref=01453219de55a2e4736756b18c8900484d9dc3a8", "patch": "@@ -156,7 +156,10 @@ fn test_deep_linear() {\n     v\n     \u2026\n      */\n+    #[cfg(not(miri))]\n     const NR_NODES: usize = 1 << 14;\n+    #[cfg(miri)]\n+    const NR_NODES: usize = 1 << 3;\n     let mut nodes = vec![];\n     for i in 1..NR_NODES {\n         nodes.push((i - 1, i));"}, {"sha": "320c03d5139f4ba0985dbaae066f61c3b92c0fe8", "filename": "compiler/rustc_data_structures/src/owning_ref/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fowning_ref%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fowning_ref%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fowning_ref%2Ftests.rs?ref=01453219de55a2e4736756b18c8900484d9dc3a8", "patch": "@@ -1,3 +1,5 @@\n+// FIXME: owning_ref is not sound under stacked borrows. Preferably, get rid of it.\n+#[cfg(not(miri))]\n mod owning_ref {\n     use super::super::OwningRef;\n     use super::super::{BoxRef, Erased, ErasedBoxRef, RcRef};\n@@ -361,6 +363,8 @@ mod owning_handle {\n     }\n }\n \n+// FIXME: owning_ref is not sound under stacked borrows. Preferably, get rid of it.\n+#[cfg(not(miri))]\n mod owning_ref_mut {\n     use super::super::BoxRef;\n     use super::super::{BoxRefMut, Erased, ErasedBoxRefMut, OwningRefMut};"}, {"sha": "90793a97ed0d894d5422403ea241a1d8db7072c7", "filename": "compiler/rustc_data_structures/src/sip128.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fsip128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01453219de55a2e4736756b18c8900484d9dc3a8/compiler%2Frustc_data_structures%2Fsrc%2Fsip128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsip128.rs?ref=01453219de55a2e4736756b18c8900484d9dc3a8", "patch": "@@ -255,8 +255,9 @@ impl SipHasher128 {\n         // elements from spill (at most LEN - 1 bytes could have overflowed\n         // into the spill). The memcpy call is optimized away because the size\n         // is known. And the whole copy is optimized away for LEN == 1.\n+        let dst = self.buf.as_mut_ptr() as *mut u8;\n         let src = self.buf.get_unchecked(BUFFER_SPILL_INDEX) as *const _ as *const u8;\n-        ptr::copy_nonoverlapping(src, self.buf.as_mut_ptr() as *mut u8, LEN - 1);\n+        ptr::copy_nonoverlapping(src, dst, LEN - 1);\n \n         // This function should only be called when the write fills the buffer.\n         // Therefore, when LEN == 1, the new `self.nbuf` must be zero."}]}