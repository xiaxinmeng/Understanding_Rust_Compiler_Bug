{"sha": "00d500052c72775ab994b5634195976f85b4e0d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZDUwMDA1MmM3Mjc3NWFiOTk0YjU2MzQxOTU5NzZmODViNGUwZDY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@commure.com", "date": "2018-07-21T22:50:46Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@commure.com", "date": "2018-07-21T22:50:46Z"}, "message": "Gate `format_args_nll` behind feature flag", "tree": {"sha": "09fe2165eefbbe1b7ff0e249cc56ebc9538142cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09fe2165eefbbe1b7ff0e249cc56ebc9538142cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00d500052c72775ab994b5634195976f85b4e0d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00d500052c72775ab994b5634195976f85b4e0d6", "html_url": "https://github.com/rust-lang/rust/commit/00d500052c72775ab994b5634195976f85b4e0d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00d500052c72775ab994b5634195976f85b4e0d6/comments", "author": null, "committer": null, "parents": [{"sha": "83a8af50bbf704b5cdf2cbbab481e0e936ed03a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/83a8af50bbf704b5cdf2cbbab481e0e936ed03a8", "html_url": "https://github.com/rust-lang/rust/commit/83a8af50bbf704b5cdf2cbbab481e0e936ed03a8"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "49de9f8027164ac443238299e6d3dd0bbc4f008c", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=00d500052c72775ab994b5634195976f85b4e0d6", "patch": "@@ -413,7 +413,7 @@ pub mod builtin {\n     ///\n     /// [`format_args`]: ../std/macro.format_args.html\n     #[doc(hidden)]\n-    #[unstable(feature = \"println_format_args\", issue=\"0\")]\n+    #[unstable(feature = \"format_args_nl\", issue=\"0\")]\n     #[macro_export]\n     macro_rules! format_args_nl {\n         ($fmt:expr) => ({ /* compiler built-in */ });"}, {"sha": "4d1ca50a89375cce324f7e9fb040ed7200790ce9", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=00d500052c72775ab994b5634195976f85b4e0d6", "patch": "@@ -1592,6 +1592,7 @@ impl<'feat> ExpansionConfig<'feat> {\n         fn enable_trace_macros = trace_macros,\n         fn enable_allow_internal_unstable = allow_internal_unstable,\n         fn enable_custom_derive = custom_derive,\n+        fn enable_format_args_nl = format_args_nl,\n         fn use_extern_macros_enabled = use_extern_macros,\n         fn macros_in_extern_enabled = macros_in_extern,\n         fn proc_macro_mod = proc_macro_mod,"}, {"sha": "5b5453d5502abf124ee3011007c3e7e7cf03d35a", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=00d500052c72775ab994b5634195976f85b4e0d6", "patch": "@@ -129,6 +129,7 @@ declare_features! (\n     // rustc internal, for now:\n     (active, intrinsics, \"1.0.0\", None, None),\n     (active, lang_items, \"1.0.0\", None, None),\n+    (active, format_args_nl, \"1.29.0\", None, None),\n \n     (active, link_llvm_intrinsics, \"1.0.0\", Some(29602), None),\n     (active, linkage, \"1.0.0\", Some(29603), None),\n@@ -1327,6 +1328,9 @@ pub const EXPLAIN_LOG_SYNTAX: &'static str =\n pub const EXPLAIN_CONCAT_IDENTS: &'static str =\n     \"`concat_idents` is not stable enough for use and is subject to change\";\n \n+pub const EXPLAIN_FORMAT_ARGS_NL: &'static str =\n+    \"`format_args_nl` is only for internal language use and is subject to change\";\n+\n pub const EXPLAIN_TRACE_MACROS: &'static str =\n     \"`trace_macros` is not stable enough for use and is subject to change\";\n pub const EXPLAIN_ALLOW_INTERNAL_UNSTABLE: &'static str ="}, {"sha": "5b8f059fd141b8bda2048525c0475c4348b09626", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d500052c72775ab994b5634195976f85b4e0d6/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=00d500052c72775ab994b5634195976f85b4e0d6", "patch": "@@ -17,6 +17,7 @@ use syntax::ast;\n use syntax::ext::base::*;\n use syntax::ext::base;\n use syntax::ext::build::AstBuilder;\n+use syntax::feature_gate;\n use syntax::parse::token;\n use syntax::ptr::P;\n use syntax::symbol::Symbol;\n@@ -693,6 +694,20 @@ pub fn expand_format_args_nl<'cx>(ecx: &'cx mut ExtCtxt,\n                                   mut sp: Span,\n                                   tts: &[tokenstream::TokenTree])\n                                   -> Box<dyn base::MacResult + 'cx> {\n+    //if !ecx.ecfg.enable_allow_internal_unstable() {\n+\n+    // For some reason, the only one that actually works for `println` is the first check\n+    if !sp.allows_unstable()   // the enclosing span is marked as `#[allow_insternal_unsable]`\n+        || !ecx.ecfg.enable_allow_internal_unstable()  // NOTE: when is this enabled?\n+        || !ecx.ecfg.enable_format_args_nl()  // enabled using `#[feature(format_args_nl]`\n+    {\n+        feature_gate::emit_feature_err(&ecx.parse_sess,\n+                                       \"format_args_nl\",\n+                                       sp,\n+                                       feature_gate::GateIssue::Language,\n+                                       feature_gate::EXPLAIN_FORMAT_ARGS_NL);\n+        return base::DummyResult::expr(sp);\n+    }\n     sp = sp.apply_mark(ecx.current_expansion.mark);\n     match parse_args(ecx, sp, tts) {\n         Some((efmt, args, names)) => {"}]}