{"sha": "4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNGFjMWQ0ZmEwYWJhMTA3YTI3ZDNmZDJkMjA5MzA0ZGZlNjliOWY=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-03-01T12:27:07Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-03-08T21:59:20Z"}, "message": "Profile import_assets better", "tree": {"sha": "b361024860a0d6d85d93ec77e6b04b89fb6871dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b361024860a0d6d85d93ec77e6b04b89fb6871dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f", "html_url": "https://github.com/rust-lang/rust/commit/4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "821e8369d994ebca39ccbf9b449c604d0c910efc", "url": "https://api.github.com/repos/rust-lang/rust/commits/821e8369d994ebca39ccbf9b449c604d0c910efc", "html_url": "https://github.com/rust-lang/rust/commit/821e8369d994ebca39ccbf9b449c604d0c910efc"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "a30a4dd9debe980246f8e3ea65edb9a9d3dddc34", "filename": "crates/ide_db/src/helpers/import_assets.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs?ref=4d4ac1d4fa0aba107a27d3fd2d209304dfe69b9f", "patch": "@@ -244,6 +244,7 @@ impl<'a> ImportAssets<'a> {\n         prefixed: Option<PrefixKind>,\n         defs_for_candidate_name: impl Iterator<Item = Either<ModuleDef, MacroDef>>,\n     ) -> FxHashSet<LocatedImport> {\n+        let _p = profile::span(\"import_assets::applicable_defs\");\n         let current_crate = self.module_with_candidate.krate();\n \n         let mod_path = |item| get_mod_path(db, item, &self.module_with_candidate, prefixed);\n@@ -278,6 +279,8 @@ fn path_applicable_imports(\n     mod_path: impl Fn(ItemInNs) -> Option<ModPath> + Copy,\n     defs_for_candidate_name: impl Iterator<Item = Either<ModuleDef, MacroDef>>,\n ) -> FxHashSet<LocatedImport> {\n+    let _p = profile::span(\"import_assets::path_applicable_imports\");\n+\n     let items_for_candidate_name =\n         defs_for_candidate_name.map(|def| def.either(ItemInNs::from, ItemInNs::from));\n \n@@ -306,6 +309,7 @@ fn import_for_item(\n     unresolved_qualifier: &str,\n     original_item: ItemInNs,\n ) -> Option<LocatedImport> {\n+    let _p = profile::span(\"import_assets::import_for_item\");\n     let (item_candidate, trait_to_import) = match original_item.as_module_def_id() {\n         Some(module_def_id) => {\n             match ModuleDef::from(module_def_id).as_assoc_item(db).map(|assoc| assoc.container(db))\n@@ -397,6 +401,7 @@ fn trait_applicable_items(\n     mod_path: impl Fn(ItemInNs) -> Option<ModPath>,\n     defs_for_candidate_name: impl Iterator<Item = Either<ModuleDef, MacroDef>>,\n ) -> FxHashSet<LocatedImport> {\n+    let _p = profile::span(\"import_assets::trait_applicable_items\");\n     let mut required_assoc_items = FxHashSet::default();\n \n     let trait_candidates = defs_for_candidate_name"}]}