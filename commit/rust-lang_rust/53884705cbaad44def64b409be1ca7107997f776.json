{"sha": "53884705cbaad44def64b409be1ca7107997f776", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzODg0NzA1Y2JhYWQ0NGRlZjY0YjQwOWJlMWNhNzEwNzk5N2Y3NzY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-07-24T23:39:41Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-07-24T23:39:41Z"}, "message": "Fix the spans of catch blocks to include the `do`", "tree": {"sha": "0f39acb47f2b867c3647897f97c6e6570e6cf658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f39acb47f2b867c3647897f97c6e6570e6cf658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53884705cbaad44def64b409be1ca7107997f776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53884705cbaad44def64b409be1ca7107997f776", "html_url": "https://github.com/rust-lang/rust/commit/53884705cbaad44def64b409be1ca7107997f776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53884705cbaad44def64b409be1ca7107997f776/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b80e946101dd49dd1864b6229f9430c55036c7ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/b80e946101dd49dd1864b6229f9430c55036c7ce", "html_url": "https://github.com/rust-lang/rust/commit/b80e946101dd49dd1864b6229f9430c55036c7ce"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2cd84d202ffc989b62ffab9c5750eccbe8d5304a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53884705cbaad44def64b409be1ca7107997f776/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53884705cbaad44def64b409be1ca7107997f776/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=53884705cbaad44def64b409be1ca7107997f776", "patch": "@@ -2243,9 +2243,9 @@ impl<'a> Parser<'a> {\n                         attrs);\n                 }\n                 if self.is_catch_expr() {\n+                    let lo = self.span;\n                     assert!(self.eat_keyword(keywords::Do));\n                     assert!(self.eat_keyword(keywords::Catch));\n-                    let lo = self.prev_span;\n                     return self.parse_catch_expr(lo, attrs);\n                 }\n                 if self.eat_keyword(keywords::Return) {"}]}