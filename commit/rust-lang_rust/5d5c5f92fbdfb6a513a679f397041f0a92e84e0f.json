{"sha": "5d5c5f92fbdfb6a513a679f397041f0a92e84e0f", "node_id": "C_kwDOAAsO6NoAKDVkNWM1ZjkyZmJkZmI2YTUxM2E2NzlmMzk3MDQxZjBhOTJlODRlMGY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-01T16:45:07Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T00:13:19Z"}, "message": "Remove several unused methods from MiscMethods", "tree": {"sha": "7f8f1b35183f8675dfcda5599736b7dc515f4c2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f8f1b35183f8675dfcda5599736b7dc515f4c2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d5c5f92fbdfb6a513a679f397041f0a92e84e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5c5f92fbdfb6a513a679f397041f0a92e84e0f", "html_url": "https://github.com/rust-lang/rust/commit/5d5c5f92fbdfb6a513a679f397041f0a92e84e0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d5c5f92fbdfb6a513a679f397041f0a92e84e0f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5943166b299ba66d26fa343b06d72b567e82ce1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5943166b299ba66d26fa343b06d72b567e82ce1b", "html_url": "https://github.com/rust-lang/rust/commit/5943166b299ba66d26fa343b06d72b567e82ce1b"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "a4c63c0be1f92ae77e64d4f5eefe83d1a52f8463", "filename": "src/context.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5d5c5f92fbdfb6a513a679f397041f0a92e84e0f/src%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d5c5f92fbdfb6a513a679f397041f0a92e84e0f/src%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcontext.rs?ref=5d5c5f92fbdfb6a513a679f397041f0a92e84e0f", "patch": "@@ -431,10 +431,6 @@ impl<'gcc, 'tcx> MiscMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n         self.codegen_unit\n     }\n \n-    fn used_statics(&self) -> &RefCell<Vec<RValue<'gcc>>> {\n-        unimplemented!();\n-    }\n-\n     fn set_frame_pointer_type(&self, _llfn: RValue<'gcc>) {\n         // TODO(antoyo)\n     }\n@@ -443,10 +439,6 @@ impl<'gcc, 'tcx> MiscMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n         // TODO(antoyo)\n     }\n \n-    fn create_used_variable(&self) {\n-        unimplemented!();\n-    }\n-\n     fn declare_c_main(&self, fn_type: Self::Type) -> Option<Self::Function> {\n         if self.get_declared_value(\"main\").is_none() {\n             Some(self.declare_cfn(\"main\", fn_type))\n@@ -458,14 +450,6 @@ impl<'gcc, 'tcx> MiscMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n             None\n         }\n     }\n-\n-    fn compiler_used_statics(&self) -> &RefCell<Vec<RValue<'gcc>>> {\n-        unimplemented!()\n-    }\n-\n-    fn create_compiler_used_variable(&self) {\n-        unimplemented!()\n-    }\n }\n \n impl<'gcc, 'tcx> HasTyCtxt<'tcx> for CodegenCx<'gcc, 'tcx> {"}]}