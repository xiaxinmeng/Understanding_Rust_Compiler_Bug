{"sha": "2baeabddd98d38497780bcc2271b71ee693680df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYWVhYmRkZDk4ZDM4NDk3NzgwYmNjMjI3MWI3MWVlNjkzNjgwZGY=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-04-29T21:24:44Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-04-29T21:24:44Z"}, "message": "Improve libstd/net/addr.rs documentation.\n\nThis adds some missing punctuation and converts uses of \"Gets\" to\n\"Returns\". This sounds better to my ear, but more importantly is\nmore consistent with the documentation from other files.", "tree": {"sha": "3c5229d9de32f44f2c95641838bb162c327d5298", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c5229d9de32f44f2c95641838bb162c327d5298"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2baeabddd98d38497780bcc2271b71ee693680df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2baeabddd98d38497780bcc2271b71ee693680df", "html_url": "https://github.com/rust-lang/rust/commit/2baeabddd98d38497780bcc2271b71ee693680df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2baeabddd98d38497780bcc2271b71ee693680df/comments", "author": null, "committer": null, "parents": [{"sha": "a237ceb030700792cd2e0895a0839bbf5e7b60a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a237ceb030700792cd2e0895a0839bbf5e7b60a4", "html_url": "https://github.com/rust-lang/rust/commit/a237ceb030700792cd2e0895a0839bbf5e7b60a4"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b0bf9d0f8062674785c21a37fdb27c82ca530cfe", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2baeabddd98d38497780bcc2271b71ee693680df/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2baeabddd98d38497780bcc2271b71ee693680df/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=2baeabddd98d38497780bcc2271b71ee693680df", "patch": "@@ -41,7 +41,7 @@ pub enum SocketAddr {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SocketAddrV4 { inner: libc::sockaddr_in }\n \n-/// An IPv6 socket address\n+/// An IPv6 socket address.\n #[derive(Copy)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SocketAddrV6 { inner: libc::sockaddr_in6 }\n@@ -56,7 +56,7 @@ impl SocketAddr {\n         }\n     }\n \n-    /// Gets the IP address associated with this socket address.\n+    /// Returns the IP address associated with this socket address.\n     #[unstable(feature = \"ip_addr\", reason = \"recent addition\")]\n     pub fn ip(&self) -> IpAddr {\n         match *self {\n@@ -65,7 +65,7 @@ impl SocketAddr {\n         }\n     }\n \n-    /// Gets the port number associated with this socket address\n+    /// Returns the port number associated with this socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 {\n         match *self {\n@@ -89,15 +89,15 @@ impl SocketAddrV4 {\n         }\n     }\n \n-    /// Gets the IP address associated with this socket address.\n+    /// Returns the IP address associated with this socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn ip(&self) -> &Ipv4Addr {\n         unsafe {\n             &*(&self.inner.sin_addr as *const libc::in_addr as *const Ipv4Addr)\n         }\n     }\n \n-    /// Gets the port number associated with this socket address\n+    /// Returns the port number associated with this socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 { ntoh(self.inner.sin_port) }\n }\n@@ -120,24 +120,24 @@ impl SocketAddrV6 {\n         }\n     }\n \n-    /// Gets the IP address associated with this socket address.\n+    /// Returns the IP address associated with this socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn ip(&self) -> &Ipv6Addr {\n         unsafe {\n             &*(&self.inner.sin6_addr as *const libc::in6_addr as *const Ipv6Addr)\n         }\n     }\n \n-    /// Gets the port number associated with this socket address\n+    /// Returns the port number associated with this socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 { ntoh(self.inner.sin6_port) }\n \n-    /// Gets scope ID associated with this address, corresponding to the\n+    /// Returns scope ID associated with this address, corresponding to the\n     /// `sin6_flowinfo` field in C.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn flowinfo(&self) -> u32 { ntoh(self.inner.sin6_flowinfo) }\n \n-    /// Gets scope ID associated with this address, corresponding to the\n+    /// Returns scope ID associated with this address, corresponding to the\n     /// `sin6_scope_id` field in C.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn scope_id(&self) -> u32 { ntoh(self.inner.sin6_scope_id) }"}]}