{"sha": "9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc", "node_id": "C_kwDOAAsO6NoAKDllN2EzMTlmMDEzN2JkMmZmZWM1NWNjNTdmNGRlNWExN2YwY2VmZmM", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-04-17T20:51:13Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-04-17T20:55:33Z"}, "message": "Replace u8to64_le macro with u64::from_le_bytes\n\nThe macro was a reimplementation of the function.", "tree": {"sha": "c2066ce480337330b2322146b15c2eed4db1aaf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2066ce480337330b2322146b15c2eed4db1aaf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc", "html_url": "https://github.com/rust-lang/rust/commit/9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8422403f775126c40d558838d321c063554c822", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8422403f775126c40d558838d321c063554c822", "html_url": "https://github.com/rust-lang/rust/commit/c8422403f775126c40d558838d321c063554c822"}], "stats": {"total": 26, "additions": 2, "deletions": 24}, "files": [{"sha": "877d0841830551b0b104f0f3d5967e553007278f", "filename": "library/core/tests/hash/sip.rs", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc/library%2Fcore%2Ftests%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc/library%2Fcore%2Ftests%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fhash%2Fsip.rs?ref=9e7a319f0137bd2ffec55cc57f4de5a17f0ceffc", "patch": "@@ -15,28 +15,6 @@ impl<'a> Hash for Bytes<'a> {\n     }\n }\n \n-macro_rules! u8to64_le {\n-    ($buf:expr, $i:expr) => {\n-        $buf[0 + $i] as u64\n-            | ($buf[1 + $i] as u64) << 8\n-            | ($buf[2 + $i] as u64) << 16\n-            | ($buf[3 + $i] as u64) << 24\n-            | ($buf[4 + $i] as u64) << 32\n-            | ($buf[5 + $i] as u64) << 40\n-            | ($buf[6 + $i] as u64) << 48\n-            | ($buf[7 + $i] as u64) << 56\n-    };\n-    ($buf:expr, $i:expr, $len:expr) => {{\n-        let mut t = 0;\n-        let mut out = 0;\n-        while t < $len {\n-            out |= ($buf[t + $i] as u64) << t * 8;\n-            t += 1;\n-        }\n-        out\n-    }};\n-}\n-\n fn hash_with<H: Hasher, T: Hash>(mut st: H, x: &T) -> u64 {\n     x.hash(&mut st);\n     st.finish()\n@@ -123,7 +101,7 @@ fn test_siphash_1_3() {\n     let mut state_inc = SipHasher13::new_with_keys(k0, k1);\n \n     while t < 64 {\n-        let vec = u8to64_le!(vecs[t], 0);\n+        let vec = u64::from_le_bytes(vecs[t]);\n         let out = hash_with(SipHasher13::new_with_keys(k0, k1), &Bytes(&buf));\n         assert_eq!(vec, out);\n \n@@ -217,7 +195,7 @@ fn test_siphash_2_4() {\n     let mut state_inc = SipHasher::new_with_keys(k0, k1);\n \n     while t < 64 {\n-        let vec = u8to64_le!(vecs[t], 0);\n+        let vec = u64::from_le_bytes(vecs[t]);\n         let out = hash_with(SipHasher::new_with_keys(k0, k1), &Bytes(&buf));\n         assert_eq!(vec, out);\n "}]}