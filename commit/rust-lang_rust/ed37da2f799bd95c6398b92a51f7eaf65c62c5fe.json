{"sha": "ed37da2f799bd95c6398b92a51f7eaf65c62c5fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMzdkYTJmNzk5YmQ5NWM2Mzk4YjkyYTUxZjdlYWY2NWM2MmM1ZmU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-10T09:24:04Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-10T09:25:10Z"}, "message": "middle/entry.rs Visitor refactoring (#7081): unify Entry{Context,Visitor}.", "tree": {"sha": "253464ed3f679bc9096a34c22527532ceda9acab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/253464ed3f679bc9096a34c22527532ceda9acab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed37da2f799bd95c6398b92a51f7eaf65c62c5fe", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed37da2f799bd95c6398b92a51f7eaf65c62c5fe", "html_url": "https://github.com/rust-lang/rust/commit/ed37da2f799bd95c6398b92a51f7eaf65c62c5fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed37da2f799bd95c6398b92a51f7eaf65c62c5fe/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6724317dad11856d6467ca2374e8c8bb6e749612", "url": "https://api.github.com/repos/rust-lang/rust/commits/6724317dad11856d6467ca2374e8c8bb6e749612", "html_url": "https://github.com/rust-lang/rust/commit/6724317dad11856d6467ca2374e8c8bb6e749612"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "4f9c9bdc62b02ce142d47f1efc3fab3411adc435", "filename": "src/librustc/middle/entry.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ed37da2f799bd95c6398b92a51f7eaf65c62c5fe/src%2Flibrustc%2Fmiddle%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed37da2f799bd95c6398b92a51f7eaf65c62c5fe/src%2Flibrustc%2Fmiddle%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fentry.rs?ref=ed37da2f799bd95c6398b92a51f7eaf65c62c5fe", "patch": "@@ -39,11 +39,9 @@ struct EntryContext {\n     non_main_fns: ~[(NodeId, Span)],\n }\n \n-struct EntryVisitor;\n-\n-impl Visitor<@mut EntryContext> for EntryVisitor {\n-    fn visit_item(&mut self, item:@item, ctxt:@mut EntryContext) {\n-        find_item(item, ctxt, self);\n+impl Visitor<()> for EntryContext {\n+    fn visit_item(&mut self, item:@item, _:()) {\n+        find_item(item, self);\n     }\n }\n \n@@ -62,7 +60,7 @@ pub fn find_entry_point(session: Session, crate: &Crate, ast_map: ast_map::map)\n         return\n     }\n \n-    let ctxt = @mut EntryContext {\n+    let mut ctxt = EntryContext {\n         session: session,\n         ast_map: ast_map,\n         main_fn: None,\n@@ -71,14 +69,12 @@ pub fn find_entry_point(session: Session, crate: &Crate, ast_map: ast_map::map)\n         non_main_fns: ~[],\n     };\n \n-    let mut v = EntryVisitor;\n-\n-    visit::walk_crate(&mut v, crate, ctxt);\n+    visit::walk_crate(&mut ctxt, crate, ());\n \n-    configure_main(ctxt);\n+    configure_main(&mut ctxt);\n }\n \n-fn find_item(item: @item, ctxt: @mut EntryContext, visitor: &mut EntryVisitor) {\n+fn find_item(item: @item, ctxt: &mut EntryContext) {\n     match item.node {\n         item_fn(*) => {\n             if item.ident.name == special_idents::main.name {\n@@ -125,11 +121,10 @@ fn find_item(item: @item, ctxt: @mut EntryContext, visitor: &mut EntryVisitor) {\n         _ => ()\n     }\n \n-    visit::walk_item(visitor, item, ctxt);\n+    visit::walk_item(ctxt, item, ());\n }\n \n-fn configure_main(ctxt: @mut EntryContext) {\n-    let this = &mut *ctxt;\n+fn configure_main(this: &mut EntryContext) {\n     if this.start_fn.is_some() {\n         *this.session.entry_fn = this.start_fn;\n         *this.session.entry_type = Some(session::EntryStart);"}]}