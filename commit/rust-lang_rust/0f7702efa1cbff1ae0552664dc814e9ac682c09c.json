{"sha": "0f7702efa1cbff1ae0552664dc814e9ac682c09c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNzcwMmVmYTFjYmZmMWFlMDU1MjY2NGRjODE0ZTlhYzY4MmMwOWM=", "commit": {"author": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-08-23T07:32:19Z"}, "committer": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-08-23T07:32:19Z"}, "message": "Pass -fuse-ld=/path/to/ld64 if -Z gcc-ld and the lld_flavor for the target is Ld64", "tree": {"sha": "86c4f269761cede8d1776208004031f662dfeb85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86c4f269761cede8d1776208004031f662dfeb85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f7702efa1cbff1ae0552664dc814e9ac682c09c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f7702efa1cbff1ae0552664dc814e9ac682c09c", "html_url": "https://github.com/rust-lang/rust/commit/0f7702efa1cbff1ae0552664dc814e9ac682c09c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f7702efa1cbff1ae0552664dc814e9ac682c09c/comments", "author": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5190950546c1d62b5a1b476daae3a28f412df05", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5190950546c1d62b5a1b476daae3a28f412df05", "html_url": "https://github.com/rust-lang/rust/commit/a5190950546c1d62b5a1b476daae3a28f412df05"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "08c6a951ffb9b0b97dde76a6133c63f54247937a", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/0f7702efa1cbff1ae0552664dc814e9ac682c09c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f7702efa1cbff1ae0552664dc814e9ac682c09c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=0f7702efa1cbff1ae0552664dc814e9ac682c09c", "patch": "@@ -2485,20 +2485,39 @@ fn add_gcc_ld_path(cmd: &mut dyn Linker, sess: &Session, flavor: LinkerFlavor) {\n         if let LinkerFlavor::Gcc = flavor {\n             match ld_impl {\n                 LdImpl::Lld => {\n-                    let tools_path =\n-                        sess.host_filesearch(PathKind::All).get_tools_search_paths(false);\n-                    let lld_path = tools_path\n-                        .into_iter()\n-                        .map(|p| p.join(\"gcc-ld\"))\n-                        .find(|p| {\n-                            p.join(if sess.host.is_like_windows { \"ld.exe\" } else { \"ld\" }).exists()\n-                        })\n-                        .unwrap_or_else(|| sess.fatal(\"rust-lld (as ld) not found\"));\n-                    cmd.cmd().arg({\n-                        let mut arg = OsString::from(\"-B\");\n-                        arg.push(lld_path);\n-                        arg\n-                    });\n+                    if sess.target.lld_flavor == LldFlavor::Ld64 {\n+                        let tools_path =\n+                            sess.host_filesearch(PathKind::All).get_tools_search_paths(false);\n+                        let ld64_exe = tools_path\n+                            .into_iter()\n+                            .map(|p| p.join(\"gcc-ld\"))\n+                            .map(|p| {\n+                                p.join(if sess.host.is_like_windows { \"ld64.exe\" } else { \"ld64\" })\n+                            })\n+                            .find(|p| p.exists())\n+                            .unwrap_or_else(|| sess.fatal(\"rust-lld (as ld64) not found\"));\n+                        cmd.cmd().arg({\n+                            let mut arg = OsString::from(\"-fuse-ld=\");\n+                            arg.push(ld64_exe);\n+                            arg\n+                        });\n+                    } else {\n+                        let tools_path =\n+                            sess.host_filesearch(PathKind::All).get_tools_search_paths(false);\n+                        let lld_path = tools_path\n+                            .into_iter()\n+                            .map(|p| p.join(\"gcc-ld\"))\n+                            .find(|p| {\n+                                p.join(if sess.host.is_like_windows { \"ld.exe\" } else { \"ld\" })\n+                                    .exists()\n+                            })\n+                            .unwrap_or_else(|| sess.fatal(\"rust-lld (as ld) not found\"));\n+                        cmd.cmd().arg({\n+                            let mut arg = OsString::from(\"-B\");\n+                            arg.push(lld_path);\n+                            arg\n+                        });\n+                    }\n                 }\n             }\n         } else {"}]}