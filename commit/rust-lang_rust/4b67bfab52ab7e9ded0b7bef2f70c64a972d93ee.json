{"sha": "4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNjdiZmFiNTJhYjdlOWRlZDBiN2JlZjJmNzBjNjRhOTcyZDkzZWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-29T15:31:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-29T15:31:38Z"}, "message": "Merge pull request #322 from RalfJung/rc-tests\n\ntest new From instances for Rc", "tree": {"sha": "e7a8992d0982a981e229c32def70312f1b855e68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7a8992d0982a981e229c32def70312f1b855e68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee", "html_url": "https://github.com/rust-lang/rust/commit/4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33bfb64e6d7a94db6db024a6069b7d4a7e116603", "url": "https://api.github.com/repos/rust-lang/rust/commits/33bfb64e6d7a94db6db024a6069b7d4a7e116603", "html_url": "https://github.com/rust-lang/rust/commit/33bfb64e6d7a94db6db024a6069b7d4a7e116603"}, {"sha": "e6a874b0bf35b7f5fadfc63f18be45ecc30579e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a874b0bf35b7f5fadfc63f18be45ecc30579e7", "html_url": "https://github.com/rust-lang/rust/commit/e6a874b0bf35b7f5fadfc63f18be45ecc30579e7"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "0bf707503112049b7ce706f3949a7ea096188a51", "filename": "tests/run-pass/rc.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee/tests%2Frun-pass%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee/tests%2Frun-pass%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frc.rs?ref=4b67bfab52ab7e9ded0b7bef2f70c64a972d93ee", "patch": "@@ -1,11 +1,11 @@\n use std::cell::RefCell;\n use std::rc::Rc;\n \n-fn rc_refcell() -> i32 {\n+fn rc_refcell() {\n     let r = Rc::new(RefCell::new(42));\n     *r.borrow_mut() += 10;\n     let x = *r.borrow();\n-    x\n+    assert_eq!(x, 52);\n }\n \n fn rc_raw() {\n@@ -17,7 +17,23 @@ fn rc_raw() {\n     assert!(Rc::try_unwrap(r2).is_ok());\n }\n \n+// Make sure this Rc doesn't fall apart when touched\n+fn check_unique_rc<T: ?Sized>(mut r: Rc<T>) {\n+    let r2 = r.clone();\n+    assert!(Rc::get_mut(&mut r).is_none());\n+    drop(r2);\n+    assert!(Rc::get_mut(&mut r).is_some());\n+}\n+\n+fn rc_from() {\n+    check_unique_rc::<[_]>(Rc::from(&[1,2,3] as &[_]));\n+    check_unique_rc::<[_]>(Rc::from(vec![1,2,3]));\n+    check_unique_rc::<[_]>(Rc::from(Box::new([1,2,3]) as Box<[_]>));\n+    check_unique_rc::<str>(Rc::from(\"Hello, World!\"));\n+}\n+\n fn main() {\n     rc_refcell();\n     rc_raw();\n+    rc_from();\n }"}]}