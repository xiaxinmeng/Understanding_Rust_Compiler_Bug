{"sha": "3c24fea882b9152f8b84ac9d5fa63da8ae831ade", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMjRmZWE4ODJiOTE1MmY4Yjg0YWM5ZDVmYTYzZGE4YWU4MzFhZGU=", "commit": {"author": {"name": "Matthew Hammer", "email": "matthew.hammer@colorado.edu", "date": "2017-07-21T22:14:34Z"}, "committer": {"name": "Matthew Hammer", "email": "matthew.hammer@colorado.edu", "date": "2017-08-23T15:26:48Z"}, "message": "-Z profile-queries: remove panic when channel is unset", "tree": {"sha": "41231671cc6301aa0466b44bd582fd9ca4f7aab8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41231671cc6301aa0466b44bd582fd9ca4f7aab8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c24fea882b9152f8b84ac9d5fa63da8ae831ade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c24fea882b9152f8b84ac9d5fa63da8ae831ade", "html_url": "https://github.com/rust-lang/rust/commit/3c24fea882b9152f8b84ac9d5fa63da8ae831ade", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c24fea882b9152f8b84ac9d5fa63da8ae831ade/comments", "author": null, "committer": null, "parents": [{"sha": "28cb03d4e1fe230496ff097798881f06c326ba67", "url": "https://api.github.com/repos/rust-lang/rust/commits/28cb03d4e1fe230496ff097798881f06c326ba67", "html_url": "https://github.com/rust-lang/rust/commit/28cb03d4e1fe230496ff097798881f06c326ba67"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "b8972a615681d688f4fd6a800e7801f2f252d9c2", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3c24fea882b9152f8b84ac9d5fa63da8ae831ade/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c24fea882b9152f8b84ac9d5fa63da8ae831ade/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=3c24fea882b9152f8b84ac9d5fa63da8ae831ade", "patch": "@@ -75,7 +75,12 @@ pub fn profq_msg(msg: ProfileQueriesMsg) {\n         if let Some(s) = sender.borrow().as_ref() {\n             s.send(msg).unwrap()\n         } else {\n-            panic!(\"no channel on which to send profq_msg: {:?}\", msg)\n+            // Do nothing.\n+            //\n+            // FIXME(matthewhammer): Multi-threaded translation phase triggers the panic below.\n+            // From backtrace: rustc_trans::back::write::spawn_work::{{closure}}.\n+            //\n+            // panic!(\"no channel on which to send profq_msg: {:?}\", msg)\n         }\n     })\n }"}, {"sha": "e75e40b22b4547a1a9b2077b24b9b0e032bd5ce3", "filename": "src/librustc_driver/profile/trace.rs", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3c24fea882b9152f8b84ac9d5fa63da8ae831ade/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c24fea882b9152f8b84ac9d5fa63da8ae831ade/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs?ref=3c24fea882b9152f8b84ac9d5fa63da8ae831ade", "patch": "@@ -137,9 +137,15 @@ fn write_traces_rec(file: &mut File, traces: &Vec<Rec>, total: Duration, depth:\n fn compute_counts_rec(counts: &mut HashMap<String,QueryMetric>, traces: &Vec<Rec>) {\n     for t in traces.iter() {\n         match t.effect {\n-            Effect::TimeBegin(ref _msg) => {\n-                // dont count time-begin effects\n-            }\n+            Effect::TimeBegin(ref msg) => {\n+                let qm = match counts.get(msg) {\n+                    Some(_qm) => { panic!(\"TimeBegin with non-unique, repeat message\") }\n+                    None => QueryMetric{\n+                        count: 1,\n+                        duration: t.duration\n+                    }};\n+                counts.insert(msg.clone(), qm);\n+            },\n             Effect::QueryBegin(ref qmsg, ref _cc) => {\n                 let qcons = cons_of_query_msg(qmsg);\n                 let qm = match counts.get(&qcons) {\n@@ -239,29 +245,29 @@ body {\n   display: none\n }\n .frac-50 {\n-  padding: 4px;\n+  padding: 10px;\n   border-width: 10px;\n-  font-size: 16px;\n+  font-size: 32px;\n }\n .frac-40 {\n-  padding: 4px;\n+  padding: 8px;\n   border-width: 8px;\n-  font-size: 16px;\n+  font-size: 24px;\n }\n .frac-30 {\n-  padding: 3px;\n+  padding: 6px;\n   border-width: 6px;\n-  font-size: 16px;\n+  font-size: 18px;\n }\n .frac-20 {\n-  padding: 3px;\n+  padding: 4px;\n   border-width: 6px;\n   font-size: 16px;\n }\n .frac-10 {\n-  padding: 3px;\n+  padding: 2px;\n   border-width: 6px;\n-  font-size: 16px;\n+  font-size: 14px;\n }\n \").unwrap();\n }"}]}