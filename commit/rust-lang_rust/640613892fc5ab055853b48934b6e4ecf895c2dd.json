{"sha": "640613892fc5ab055853b48934b6e4ecf895c2dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MDYxMzg5MmZjNWFiMDU1ODUzYjQ4OTM0YjZlNGVjZjg5NWMyZGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-15T08:27:38Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-15T08:47:02Z"}, "message": "Fix expand_stmt as well as expand_expr to use the correct span\n\nThe same fix as before is still relevant, I just forgot to update the\nexpand_stmt macro expansion site. The tests for format!() suffice as tests for\nthis change.", "tree": {"sha": "187f30d8b9ae662bc385558473e1c9c1fa5b6424", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/187f30d8b9ae662bc385558473e1c9c1fa5b6424"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/640613892fc5ab055853b48934b6e4ecf895c2dd", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/640613892fc5ab055853b48934b6e4ecf895c2dd", "html_url": "https://github.com/rust-lang/rust/commit/640613892fc5ab055853b48934b6e4ecf895c2dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/640613892fc5ab055853b48934b6e4ecf895c2dd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd8c05ccc99642ed6be3516f24c8d876f2046eb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8c05ccc99642ed6be3516f24c8d876f2046eb4", "html_url": "https://github.com/rust-lang/rust/commit/fd8c05ccc99642ed6be3516f24c8d876f2046eb4"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "ac094c27a8119780debbf58de5afefbd413d7dd4", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/640613892fc5ab055853b48934b6e4ecf895c2dd/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640613892fc5ab055853b48934b6e4ecf895c2dd/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=640613892fc5ab055853b48934b6e4ecf895c2dd", "patch": "@@ -81,20 +81,10 @@ pub fn expand_expr(extsbox: @mut SyntaxEnv,\n                             // be the root of the call stack. That's the most\n                             // relevant span and it's the actual invocation of\n                             // the macro.\n-                            let mut relevant_info = cx.backtrace();\n-                            let mut einfo = relevant_info.unwrap();\n-                            loop {\n-                                match relevant_info {\n-                                    None => { break }\n-                                    Some(e) => {\n-                                        einfo = e;\n-                                        relevant_info = einfo.call_site.expn_info;\n-                                    }\n-                                }\n-                            }\n+                            let mac_span = original_span(cx);\n \n                             let expanded =\n-                                match expandfun(cx, einfo.call_site,\n+                                match expandfun(cx, mac_span.call_site,\n                                                 marked_before, marked_ctxt) {\n                                     MRExpr(e) => e,\n                                     MRAny(expr_maker,_,_) => expr_maker(),\n@@ -400,11 +390,11 @@ pub fn expand_stmt(extsbox: @mut SyntaxEnv,\n                 -> (Option<Stmt_>, Span) {\n     // why the copying here and not in expand_expr?\n     // looks like classic changed-in-only-one-place\n-    let (mac, pth, tts, semi, ctxt) = match *s {\n+    let (pth, tts, semi, ctxt) = match *s {\n         StmtMac(ref mac, semi) => {\n             match mac.node {\n                 mac_invoc_tt(ref pth, ref tts, ctxt) => {\n-                    ((*mac).clone(), pth, (*tts).clone(), semi, ctxt)\n+                    (pth, (*tts).clone(), semi, ctxt)\n                 }\n             }\n         }\n@@ -431,7 +421,13 @@ pub fn expand_stmt(extsbox: @mut SyntaxEnv,\n             // mark before expansion:\n             let marked_tts = mark_tts(tts,fm);\n             let marked_ctxt = new_mark(fm,ctxt);\n-            let expanded = match expandfun(cx, mac.span, marked_tts, marked_ctxt) {\n+\n+            // See the comment in expand_expr for why we want the original span,\n+            // not the current mac.span.\n+            let mac_span = original_span(cx);\n+\n+            let expanded = match expandfun(cx, mac_span.call_site,\n+                                           marked_tts, marked_ctxt) {\n                 MRExpr(e) =>\n                     @codemap::Spanned { node: StmtExpr(e, ast::DUMMY_NODE_ID),\n                                         span: e.span},\n@@ -1270,6 +1266,20 @@ pub fn mtwt_cancel_outer_mark(tts: &[ast::token_tree], ctxt: ast::SyntaxContext)\n     mark_tts(tts,outer_mark)\n }\n \n+fn original_span(cx: @ExtCtxt) -> @codemap::ExpnInfo {\n+    let mut relevant_info = cx.backtrace();\n+    let mut einfo = relevant_info.unwrap();\n+    loop {\n+        match relevant_info {\n+            None => { break }\n+            Some(e) => {\n+                einfo = e;\n+                relevant_info = einfo.call_site.expn_info;\n+            }\n+        }\n+    }\n+    return einfo;\n+}\n \n #[cfg(test)]\n mod test {"}]}