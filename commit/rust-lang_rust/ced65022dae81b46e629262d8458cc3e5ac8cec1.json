{"sha": "ced65022dae81b46e629262d8458cc3e5ac8cec1", "node_id": "C_kwDOAAsO6NoAKGNlZDY1MDIyZGFlODFiNDZlNjI5MjYyZDg0NThjYzNlNWFjOGNlYzE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-03-29T05:29:59Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-05-20T09:50:07Z"}, "message": "update error message", "tree": {"sha": "113fda828b7d75e68d4083d0fc33bcd8115cfd8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/113fda828b7d75e68d4083d0fc33bcd8115cfd8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ced65022dae81b46e629262d8458cc3e5ac8cec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ced65022dae81b46e629262d8458cc3e5ac8cec1", "html_url": "https://github.com/rust-lang/rust/commit/ced65022dae81b46e629262d8458cc3e5ac8cec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ced65022dae81b46e629262d8458cc3e5ac8cec1/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fcf43f67cd5be83bbb72a1cbf76bdfc95d7c83b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fcf43f67cd5be83bbb72a1cbf76bdfc95d7c83b", "html_url": "https://github.com/rust-lang/rust/commit/4fcf43f67cd5be83bbb72a1cbf76bdfc95d7c83b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "41b895f3bbf1f15ec9175b1ff08829e67c90366a", "filename": "compiler/rustc_typeck/src/check/dropck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ced65022dae81b46e629262d8458cc3e5ac8cec1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ced65022dae81b46e629262d8458cc3e5ac8cec1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs?ref=ced65022dae81b46e629262d8458cc3e5ac8cec1", "patch": "@@ -86,7 +86,7 @@ fn ensure_drop_params_and_item_params_correspond<'tcx>(\n     err.span_note(\n         item_span,\n         &format!(\n-            \"use the same sequence of generic type, lifetime and const parameters \\\n+            \"use the same sequence of generic lifetime, type and const parameters \\\n                      as the {self_descr} definition\",\n         ),\n     );"}, {"sha": "f267abc0bfa7989c07012fad855d747287123219", "filename": "src/test/ui/dropck/issue-38868.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ced65022dae81b46e629262d8458cc3e5ac8cec1/src%2Ftest%2Fui%2Fdropck%2Fissue-38868.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ced65022dae81b46e629262d8458cc3e5ac8cec1/src%2Ftest%2Fui%2Fdropck%2Fissue-38868.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fissue-38868.stderr?ref=ced65022dae81b46e629262d8458cc3e5ac8cec1", "patch": "@@ -9,7 +9,7 @@ LL | | }\n    | |_^\n    |\n    = note: `i32` is not a generic parameter\n-note: use the same sequence of generic type, lifetime and const parameters as the struct definition\n+note: use the same sequence of generic lifetime, type and const parameters as the struct definition\n   --> $DIR/issue-38868.rs:1:1\n    |\n LL | / pub struct List<T> {"}, {"sha": "7f50cf5ab15d27bfb6d1464da69161116d20a24f", "filename": "src/test/ui/dropck/reject-specialized-drops-8142.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ced65022dae81b46e629262d8458cc3e5ac8cec1/src%2Ftest%2Fui%2Fdropck%2Freject-specialized-drops-8142.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ced65022dae81b46e629262d8458cc3e5ac8cec1/src%2Ftest%2Fui%2Fdropck%2Freject-specialized-drops-8142.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Freject-specialized-drops-8142.stderr?ref=ced65022dae81b46e629262d8458cc3e5ac8cec1", "patch": "@@ -29,7 +29,7 @@ LL | impl                    Drop for N<'static>     { fn drop(&mut self) { } }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `'static` is not a generic parameter\n-note: use the same sequence of generic type, lifetime and const parameters as the struct definition\n+note: use the same sequence of generic lifetime, type and const parameters as the struct definition\n   --> $DIR/reject-specialized-drops-8142.rs:7:1\n    |\n LL | struct N<'n> { x: &'n i8 }\n@@ -42,7 +42,7 @@ LL | impl              Drop for P<i8>          { fn drop(&mut self) { } } // REJ\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `i8` is not a generic parameter\n-note: use the same sequence of generic type, lifetime and const parameters as the struct definition\n+note: use the same sequence of generic lifetime, type and const parameters as the struct definition\n   --> $DIR/reject-specialized-drops-8142.rs:9:1\n    |\n LL | struct P<Tp> { x: *const Tp }\n@@ -79,7 +79,7 @@ LL | impl<One>         Drop for V<One,One>     { fn drop(&mut self) { } } // REJ\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `One` is mentioned multiple times\n-note: use the same sequence of generic type, lifetime and const parameters as the struct definition\n+note: use the same sequence of generic lifetime, type and const parameters as the struct definition\n   --> $DIR/reject-specialized-drops-8142.rs:15:1\n    |\n LL | struct V<Tva, Tvb> { x: *const Tva, y: *const Tvb }\n@@ -92,7 +92,7 @@ LL | impl<'lw>         Drop for W<'lw,'lw>     { fn drop(&mut self) { } } // REJ\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `'lw` is mentioned multiple times\n-note: use the same sequence of generic type, lifetime and const parameters as the struct definition\n+note: use the same sequence of generic lifetime, type and const parameters as the struct definition\n   --> $DIR/reject-specialized-drops-8142.rs:16:1\n    |\n LL | struct W<'l1, 'l2> { x: &'l1 i8, y: &'l2 u8 }\n@@ -105,7 +105,7 @@ LL | impl              Drop for X<3>           { fn drop(&mut self) { } } // REJ\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `3_usize` is not a generic parameter\n-note: use the same sequence of generic type, lifetime and const parameters as the struct definition\n+note: use the same sequence of generic lifetime, type and const parameters as the struct definition\n   --> $DIR/reject-specialized-drops-8142.rs:17:1\n    |\n LL | struct X<const Ca: usize>;\n@@ -118,7 +118,7 @@ LL | impl<const Ca: usize> Drop for Y<Ca, Ca>     { fn drop(&mut self) { } } //\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `Ca` is mentioned multiple times\n-note: use the same sequence of generic type, lifetime and const parameters as the struct definition\n+note: use the same sequence of generic lifetime, type and const parameters as the struct definition\n   --> $DIR/reject-specialized-drops-8142.rs:18:1\n    |\n LL | struct Y<const Ca: usize, const Cb: usize>;"}]}