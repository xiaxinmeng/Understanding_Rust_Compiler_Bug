{"sha": "e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZDMzZDczZGMzZjlkMGRhZjliM2FmZmU2NWEyNDMxZjVhM2UxM2E=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2020-08-23T05:50:59Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2020-08-23T05:50:59Z"}, "message": "Fix `let_and_return` bad suggestion\n\nAdd a cast to the suggestion when the return expression has adjustments.\nThese adjustments are lost when the suggestion is applied.\n\nThis is similar to the problem in issue #4437.\n\nCloses #5729", "tree": {"sha": "b0bc083d86082b8bf05ee732574c15839736e443", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0bc083d86082b8bf05ee732574c15839736e443"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a", "html_url": "https://github.com/rust-lang/rust/commit/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a/comments", "author": null, "committer": null, "parents": [{"sha": "dd07860b839a46782e3750a8924ecf380486c460", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd07860b839a46782e3750a8924ecf380486c460", "html_url": "https://github.com/rust-lang/rust/commit/dd07860b839a46782e3750a8924ecf380486c460"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "a6e4252a0c82579b2c332cf8a31c2279ed9fcfcc", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a", "patch": "@@ -99,7 +99,10 @@ impl<'tcx> LateLintPass<'tcx> for Return {\n                     |err| {\n                         err.span_label(local.span, \"unnecessary `let` binding\");\n \n-                        if let Some(snippet) = snippet_opt(cx, initexpr.span) {\n+                        if let Some(mut snippet) = snippet_opt(cx, initexpr.span) {\n+                            if !cx.typeck_results().expr_adjustments(&retexpr).is_empty() {\n+                                snippet.push_str(\" as _\");\n+                            }\n                             err.multipart_suggestion(\n                                 \"return the expression directly\",\n                                 vec!["}, {"sha": "73e550b3df891864fac7c2cd2a46920efbf890f9", "filename": "tests/ui/let_and_return.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a/tests%2Fui%2Flet_and_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a/tests%2Fui%2Flet_and_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_and_return.rs?ref=e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a", "patch": "@@ -135,4 +135,25 @@ mod no_lint_if_stmt_borrows {\n     }\n }\n \n+mod issue_5729 {\n+    use std::sync::Arc;\n+\n+    trait Foo {}\n+\n+    trait FooStorage {\n+        fn foo_cloned(&self) -> Arc<dyn Foo>;\n+    }\n+\n+    struct FooStorageImpl<T: Foo> {\n+        foo: Arc<T>,\n+    }\n+\n+    impl<T: Foo + 'static> FooStorage for FooStorageImpl<T> {\n+        fn foo_cloned(&self) -> Arc<dyn Foo> {\n+            let clone = Arc::clone(&self.foo);\n+            clone\n+        }\n+    }\n+}\n+\n fn main() {}"}, {"sha": "fe878e5f20601ff68d80908aaf95711f52463d9e", "filename": "tests/ui/let_and_return.stderr", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a/tests%2Fui%2Flet_and_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a/tests%2Fui%2Flet_and_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_and_return.stderr?ref=e8d33d73dc3f9d0daf9b3affe65a2431f5a3e13a", "patch": "@@ -27,5 +27,19 @@ LL |\n LL |         5\n    |\n \n-error: aborting due to 2 previous errors\n+error: returning the result of a `let` binding from a block\n+  --> $DIR/let_and_return.rs:154:13\n+   |\n+LL |             let clone = Arc::clone(&self.foo);\n+   |             ---------------------------------- unnecessary `let` binding\n+LL |             clone\n+   |             ^^^^^\n+   |\n+help: return the expression directly\n+   |\n+LL |             \n+LL |             Arc::clone(&self.foo) as _\n+   |\n+\n+error: aborting due to 3 previous errors\n "}]}