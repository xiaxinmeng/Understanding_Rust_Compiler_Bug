{"sha": "92fbb80097bf172339b11a6387edacbc87c8dc07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyZmJiODAwOTdiZjE3MjMzOWIxMWE2Mzg3ZWRhY2JjODdjOGRjMDc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-23T20:36:21Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-26T01:48:02Z"}, "message": "Formatting of some types\n\nCloses #341", "tree": {"sha": "c2404141534065e47a50b32fc926cdfc1945a28f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2404141534065e47a50b32fc926cdfc1945a28f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92fbb80097bf172339b11a6387edacbc87c8dc07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92fbb80097bf172339b11a6387edacbc87c8dc07", "html_url": "https://github.com/rust-lang/rust/commit/92fbb80097bf172339b11a6387edacbc87c8dc07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92fbb80097bf172339b11a6387edacbc87c8dc07/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c14cfca0e3de3dfa5fd91d39a85c5b452e7756e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c14cfca0e3de3dfa5fd91d39a85c5b452e7756e3", "html_url": "https://github.com/rust-lang/rust/commit/c14cfca0e3de3dfa5fd91d39a85c5b452e7756e3"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "284654049887f53c983d19785bcf90e75811622d", "filename": "src/types.rs", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/92fbb80097bf172339b11a6387edacbc87c8dc07/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fbb80097bf172339b11a6387edacbc87c8dc07/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=92fbb80097bf172339b11a6387edacbc87c8dc07", "patch": "@@ -15,7 +15,7 @@ use syntax::codemap::{self, Span, BytePos, CodeMap};\n use Indent;\n use lists::{itemize_list, write_list, ListFormatting};\n use rewrite::{Rewrite, RewriteContext};\n-use utils::{extra_offset, span_after};\n+use utils::{extra_offset, span_after, format_mutability};\n \n impl Rewrite for ast::Path {\n     fn rewrite(&self, context: &RewriteContext, width: usize, offset: Indent) -> Option<String> {\n@@ -437,9 +437,39 @@ impl Rewrite for ast::Ty {\n                 p.rewrite(context, width, offset)\n             }\n             ast::TyObjectSum(ref ty, ref bounds) => {\n+                let ty_str = try_opt!(ty.rewrite(context, width, offset));\n+                let overhead = ty_str.len() + 3;\n                 Some(format!(\"{} + {}\",\n-                             try_opt!(ty.rewrite(context, width, offset)),\n-                             try_opt!(bounds.rewrite(context, width, offset))))\n+                             ty_str,\n+                             try_opt!(bounds.rewrite(context,\n+                                                     try_opt!(width.checked_sub(overhead)),\n+                                                     offset + overhead))))\n+            }\n+            ast::TyRptr(ref lifetime, ref mt) => {\n+                let mut_str = format_mutability(mt.mutbl);\n+                let mut_len = mut_str.len();\n+                Some(match lifetime {\n+                    &Some(ref lifetime) => {\n+                        let lt_str = pprust::lifetime_to_string(lifetime);\n+                        let lt_len = lt_str.len();\n+                        format!(\"&{} {}{}\",\n+                                lt_str,\n+                                mut_str,\n+                                try_opt!(mt.ty.rewrite(context,\n+                                                       width - (2 + mut_len + lt_len),\n+                                                       offset + 2 + mut_len + lt_len)))\n+                    }\n+                    &None => {\n+                        format!(\"&{}{}\",\n+                                mut_str,\n+                                try_opt!(mt.ty.rewrite(context,\n+                                                       width - (1 + mut_len),\n+                                                       offset + 1 + mut_len)))\n+                    }\n+                })\n+            }\n+            ast::TyParen(ref ty) => {\n+                ty.rewrite(context, width - 2, offset + 1).map(|ty_str| format!(\"({})\", ty_str))\n             }\n             _ => Some(pprust::ty_to_string(self)),\n         }"}, {"sha": "a0a3f2599e8dbca8f4e50280f0b8f4a56a98198f", "filename": "tests/source/multiple.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92fbb80097bf172339b11a6387edacbc87c8dc07/tests%2Fsource%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fbb80097bf172339b11a6387edacbc87c8dc07/tests%2Fsource%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmultiple.rs?ref=92fbb80097bf172339b11a6387edacbc87c8dc07", "patch": "@@ -92,6 +92,8 @@ pub struct Foo<'a, Y: Baz>\n     f: SomeType, // Comment beside a field\n }\n \n+fn foo(ann: &'a (PpAnn+'a)) {}\n+\n fn main() {\n     for i in 0i32..4 {\n         println!(\"{}\", i);"}, {"sha": "c2e2a471afc5c5753c3877499a093cc6ff75054b", "filename": "tests/target/multiple.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/92fbb80097bf172339b11a6387edacbc87c8dc07/tests%2Ftarget%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fbb80097bf172339b11a6387edacbc87c8dc07/tests%2Ftarget%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiple.rs?ref=92fbb80097bf172339b11a6387edacbc87c8dc07", "patch": "@@ -117,6 +117,9 @@ pub struct Foo<'a, Y: Baz>\n     f: SomeType, // Comment beside a field\n }\n \n+fn foo(ann: &'a (PpAnn + 'a)) {\n+}\n+\n fn main() {\n     for i in 0i32..4 {\n         println!(\"{}\", i);"}]}