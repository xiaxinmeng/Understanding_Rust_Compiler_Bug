{"sha": "8c0b4d7f65802031f0131bc56de8fb8b275d70d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMGI0ZDdmNjU4MDIwMzFmMDEzMWJjNTZkZThmYjhiMjc1ZDcwZDc=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-02-26T20:29:55Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-04-05T11:35:51Z"}, "message": "Only running shared_code_in_if_blocks only for if statements", "tree": {"sha": "1cb436450985e75a4b1f4741084eb6c108774290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cb436450985e75a4b1f4741084eb6c108774290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c0b4d7f65802031f0131bc56de8fb8b275d70d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c0b4d7f65802031f0131bc56de8fb8b275d70d7", "html_url": "https://github.com/rust-lang/rust/commit/8c0b4d7f65802031f0131bc56de8fb8b275d70d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c0b4d7f65802031f0131bc56de8fb8b275d70d7/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "617c65baa90cdbd9228cacad4f2079a9d868d070", "url": "https://api.github.com/repos/rust-lang/rust/commits/617c65baa90cdbd9228cacad4f2079a9d868d070", "html_url": "https://github.com/rust-lang/rust/commit/617c65baa90cdbd9228cacad4f2079a9d868d070"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "ff99a9a09b3a269bd66a986fae1864c37f2f7aa6", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8c0b4d7f65802031f0131bc56de8fb8b275d70d7/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c0b4d7f65802031f0131bc56de8fb8b275d70d7/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=8c0b4d7f65802031f0131bc56de8fb8b275d70d7", "patch": "@@ -156,23 +156,25 @@ declare_lint_pass!(CopyAndPaste => [\n impl<'tcx> LateLintPass<'tcx> for CopyAndPaste {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n         if !expr.span.from_expansion() {\n-            // skip ifs directly in else, it will be checked in the parent if\n-            if let Some(&Expr {\n-                kind: ExprKind::If(_, _, Some(ref else_expr)),\n-                ..\n-            }) = get_parent_expr(cx, expr)\n-            {\n-                if else_expr.hir_id == expr.hir_id {\n-                    return;\n+            if let ExprKind::If(_, _, _) = expr.kind {\n+                // skip ifs directly in else, it will be checked in the parent if\n+                if let Some(&Expr {\n+                    kind: ExprKind::If(_, _, Some(ref else_expr)),\n+                    ..\n+                }) = get_parent_expr(cx, expr)\n+                {\n+                    if else_expr.hir_id == expr.hir_id {\n+                        return;\n+                    }\n                 }\n-            }\n \n-            let (conds, blocks) = if_sequence(expr);\n-            // Conditions\n-            lint_same_cond(cx, &conds);\n-            lint_same_fns_in_if_cond(cx, &conds);\n-            // Block duplication\n-            lint_same_then_else(cx, &blocks, conds.len() != blocks.len(), expr);\n+                let (conds, blocks) = if_sequence(expr);\n+                // Conditions\n+                lint_same_cond(cx, &conds);\n+                lint_same_fns_in_if_cond(cx, &conds);\n+                // Block duplication\n+                lint_same_then_else(cx, &blocks, conds.len() != blocks.len(), expr);\n+            }\n         }\n     }\n }"}]}