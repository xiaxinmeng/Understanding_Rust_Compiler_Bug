{"sha": "26d2653dd64f139c89449cf4bab8bac737e930a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZDI2NTNkZDY0ZjEzOWM4OTQ0OWNmNGJhYjhiYWM3MzdlOTMwYTU=", "commit": {"author": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-04-13T08:20:00Z"}, "committer": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-04-13T08:21:03Z"}, "message": "address review feedback", "tree": {"sha": "df85311acf42a395feb34cfde63c8dded2ab1f5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df85311acf42a395feb34cfde63c8dded2ab1f5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26d2653dd64f139c89449cf4bab8bac737e930a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26d2653dd64f139c89449cf4bab8bac737e930a5", "html_url": "https://github.com/rust-lang/rust/commit/26d2653dd64f139c89449cf4bab8bac737e930a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26d2653dd64f139c89449cf4bab8bac737e930a5/comments", "author": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4529f1be81b3b1424447908f2446776f44748fcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4529f1be81b3b1424447908f2446776f44748fcd", "html_url": "https://github.com/rust-lang/rust/commit/4529f1be81b3b1424447908f2446776f44748fcd"}], "stats": {"total": 56, "additions": 35, "deletions": 21}, "files": [{"sha": "fb0fc4c91e01da953bb18babdeba2f6b82d93948", "filename": "crates/hir_ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 35, "deletions": 21, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/26d2653dd64f139c89449cf4bab8bac737e930a5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d2653dd64f139c89449cf4bab8bac737e930a5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=26d2653dd64f139c89449cf4bab8bac737e930a5", "patch": "@@ -926,11 +926,6 @@ fn main() {\n         fn CheckItWorksWithModAttr(BAD_NAME_HI: u8) {}\n     }\n \n-    trait BAD_TRAIT {\n-        fn BAD_FUNCTION();\n-        fn BadFunction();\n-    }\n-\n     #[allow(non_snake_case, non_camel_case_types)]\n     pub struct some_type {\n         SOME_FIELD: u8,\n@@ -981,22 +976,41 @@ fn main() {\n \n         check_diagnostics(\n             r#\"\n-trait T { fn a(); }\n-struct U {}\n-impl T for U {\n-    fn a() {\n-        // this comes out of bitflags, mostly\n-        #[allow(non_snake_case)]\n-        trait __BitFlags {\n-            const HiImAlsoBad: u8 = 2;\n-            #[inline]\n-            fn Dirty(&self) -> bool {\n-                false\n+    trait T { fn a(); }\n+    struct U {}\n+    impl T for U {\n+        fn a() {\n+            // this comes out of bitflags, mostly\n+            #[allow(non_snake_case)]\n+            trait __BitFlags {\n+                const HiImAlsoBad: u8 = 2;\n+                #[inline]\n+                fn Dirty(&self) -> bool {\n+                    false\n+                }\n             }\n+\n         }\n+    }\n+    \"#,\n+        );\n+    }\n \n+    #[test]\n+    #[ignore]\n+    fn bug_traits_arent_checked() {\n+        // FIXME: Traits and functions in traits aren't currently checked by\n+        // r-a, even though rustc will complain about them.\n+        check_diagnostics(\n+            r#\"\n+    trait BAD_TRAIT {\n+       // ^^^^^^^^^ Trait `BAD_TRAIT` should have CamelCase name, e.g. `BadTrait`\n+        fn BAD_FUNCTION();\n+        // ^^^^^^^^^^^^ Function `BAD_FUNCTION` should have snake_case name, e.g. `bad_function`\n+        fn BadFunction();\n+        // ^^^^^^^^^^^^ Function `BadFunction` should have snake_case name, e.g. `bad_function`\n     }\n-}\"#,\n+    \"#,\n         );\n     }\n \n@@ -1006,10 +1020,10 @@ impl T for U {\n         cov_mark::check!(extern_static_incorrect_case_ignored);\n         check_diagnostics(\n             r#\"\n-extern {\n-    fn NonSnakeCaseName(SOME_VAR: u8) -> u8;\n-    pub static SomeStatic: u8 = 10;\n-}\n+    extern {\n+        fn NonSnakeCaseName(SOME_VAR: u8) -> u8;\n+        pub static SomeStatic: u8 = 10;\n+    }\n             \"#,\n         );\n     }"}]}