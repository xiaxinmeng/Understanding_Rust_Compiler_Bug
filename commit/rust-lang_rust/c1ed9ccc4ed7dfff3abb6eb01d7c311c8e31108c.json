{"sha": "c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZWQ5Y2NjNGVkN2RmZmYzYWJiNmViMDFkN2MzMTFjOGUzMTEwOGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-30T14:40:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-30T15:04:24Z"}, "message": "fix compilation", "tree": {"sha": "dc95229fc0863b46fe3d60cf25c2a56cdc4c8b39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc95229fc0863b46fe3d60cf25c2a56cdc4c8b39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "html_url": "https://github.com/rust-lang/rust/commit/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5300ad3baf80c9903235a98a12b6cfd409e9f10", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5300ad3baf80c9903235a98a12b6cfd409e9f10", "html_url": "https://github.com/rust-lang/rust/commit/e5300ad3baf80c9903235a98a12b6cfd409e9f10"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "ebfd970ebc44787ae290b08ac7e860c97891655b", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "patch": "@@ -23,7 +23,10 @@ use crate::{\n     Struct, StructField, Trait, TypeAlias,\n };\n \n-pub use hir_def::db::{InternDatabase, InternDatabaseStorage};\n+pub use hir_def::db::{\n+    DefDatabase2, DefDatabase2Storage, InternDatabase, InternDatabaseStorage, RawItemsQuery,\n+    RawItemsWithSourceMapQuery,\n+};\n pub use hir_expand::db::{\n     AstDatabase, AstDatabaseStorage, AstIdMapQuery, MacroArgQuery, MacroDefQuery, MacroExpandQuery,\n     ParseMacroQuery,\n@@ -32,7 +35,7 @@ pub use hir_expand::db::{\n // This database uses `AstDatabase` internally,\n #[salsa::query_group(DefDatabaseStorage)]\n #[salsa::requires(AstDatabase)]\n-pub trait DefDatabase: HirDebugDatabase + hir_def::db::DefDatabase2 {\n+pub trait DefDatabase: HirDebugDatabase + DefDatabase2 {\n     #[salsa::invoke(crate::adt::StructData::struct_data_query)]\n     fn struct_data(&self, s: Struct) -> Arc<StructData>;\n "}, {"sha": "44498dd388c4fbb605642dd459dd66c7468381b2", "filename": "crates/ra_hir/src/either.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Feither.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -1 +0,0 @@\n-pub use hir_def::either::*;"}, {"sha": "fabe6eff66fabcbc19836f71d7e9236302e05079", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "patch": "@@ -26,7 +26,6 @@ macro_rules! impl_froms {\n     }\n }\n \n-mod either;\n pub mod debug;\n \n pub mod db;\n@@ -62,7 +61,6 @@ use crate::{ids::MacroFileKind, resolve::Resolver};\n \n pub use crate::{\n     adt::VariantDef,\n-    either::Either,\n     expr::ExprScopes,\n     from_source::FromSource,\n     generics::{GenericDef, GenericParam, GenericParams, HasGenericParams},\n@@ -85,6 +83,7 @@ pub use self::code_model::{\n };\n \n pub use hir_def::{\n+    either::Either,\n     name::Name,\n     path::{Path, PathKind},\n     type_ref::Mutability,"}, {"sha": "35dfaf3bad0e78ce234a407173fd50d6582671c5", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "patch": "@@ -17,12 +17,12 @@ use crate::{db, debug::HirDebugHelper, diagnostics::DiagnosticSink};\n pub const WORKSPACE: SourceRootId = SourceRootId(0);\n \n #[salsa::database(\n-    hir_def::db::DefDatabase2Storage,\n     ra_db::SourceDatabaseExtStorage,\n     ra_db::SourceDatabaseStorage,\n     db::InternDatabaseStorage,\n     db::AstDatabaseStorage,\n     db::DefDatabaseStorage,\n+    db::DefDatabase2Storage,\n     db::HirDatabaseStorage\n )]\n #[derive(Debug)]"}, {"sha": "5893708e8ba0ef98ce996d1241bc417d0212af53", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "patch": "@@ -1 +1,3 @@\n+//! FIXME: write short doc here\n+\n pub mod raw;"}, {"sha": "86b4fef9659b66416aa989001a30b2fe69c8e1f0", "filename": "crates/ra_hir_def/src/nameres/raw.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs?ref=c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "patch": "@@ -8,7 +8,6 @@ use ra_syntax::{\n     ast::{self, AttrsOwner, NameOwner},\n     AstNode, AstPtr, SourceFile,\n };\n-use test_utils::tested_by;\n \n use crate::{\n     attr::Attr,\n@@ -301,7 +300,8 @@ impl<DB: AstDatabase> RawItemsCollector<&DB> {\n             self.push_item(current_module, attrs, RawItemKind::Module(item));\n             return;\n         }\n-        tested_by!(name_res_works_for_broken_modules);\n+        // FIXME: restore this mark once we complete hir splitting\n+        // tested_by!(name_res_works_for_broken_modules);\n     }\n \n     fn add_use_item(&mut self, current_module: Option<Module>, use_item: ast::UseItem) {"}, {"sha": "785e71808b7c400d9d6fd9bfa1b6061aed4b0aec", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=c1ed9ccc4ed7dfff3abb6eb01d7c311c8e31108c", "patch": "@@ -23,6 +23,7 @@ use crate::{\n     hir::db::InternDatabaseStorage,\n     hir::db::AstDatabaseStorage,\n     hir::db::DefDatabaseStorage,\n+    hir::db::DefDatabase2Storage,\n     hir::db::HirDatabaseStorage\n )]\n #[derive(Debug)]"}]}