{"sha": "52cc0d5360622fe505b4f25973e06b1c9600f07c", "node_id": "C_kwDOAAsO6NoAKDUyY2MwZDUzNjA2MjJmZTUwNWI0ZjI1OTczZTA2YjFjOTYwMGYwN2M", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-19T14:35:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-19T14:35:18Z"}, "message": "Rollup merge of #103117 - joshtriplett:use-is-terminal, r=eholk\n\nUse `IsTerminal` in place of `atty`\n\nIn any crate that can use nightly features, use `IsTerminal` rather than\n`atty`:\n\n- Use `IsTerminal` in `rustc_errors`\n- Use `IsTerminal` in `rustc_driver`\n- Use `IsTerminal` in `rustc_log`\n- Use `IsTerminal` in `librustdoc`", "tree": {"sha": "a077b00ac9ce7ef3bba9f837a9e0402950a84ab8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a077b00ac9ce7ef3bba9f837a9e0402950a84ab8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52cc0d5360622fe505b4f25973e06b1c9600f07c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjeOmmCRBK7hj4Ov3rIwAAgHMIACTAELWGGKwAtnfjXv+vlY4i\ne1kexdREXQbubNY+6XRrg3iy2sC5Fu9NnvWr04//sv6sPtAkwQB28OydE8ognPl+\nIe+iaEtHP8f9DLI1Zk+ensxjSMTRCHAwjSp1btP7P6O0gJWOEb/KodHHiGqiBFIu\nPjxhukm5vnegPVJ2Pc7eqP5/x/dX7DFazRHftkkzcwWa2fjgT1o8Q9zSPWESP6Vx\nDwALkofYKxwAE/rYpDxk4pHMZNQeLKgaQPojMUjBrVzAwTBiDnVs+jX/Pd7VA8lo\ncqK5l9+o9xq1qDsDEpPEb+IyqOSrXa/Pc/gTJAVYT1XFWHz5CsPfGpNG1zB1yek=\n=+Mna\n-----END PGP SIGNATURE-----\n", "payload": "tree a077b00ac9ce7ef3bba9f837a9e0402950a84ab8\nparent 5e6de2369c82ed0b36e6b651b041bad5cb5e1ef8\nparent e3d44dd4bdd901d284ec47a29e0bb7d825f9786b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668868518 +0100\ncommitter GitHub <noreply@github.com> 1668868518 +0100\n\nRollup merge of #103117 - joshtriplett:use-is-terminal, r=eholk\n\nUse `IsTerminal` in place of `atty`\n\nIn any crate that can use nightly features, use `IsTerminal` rather than\n`atty`:\n\n- Use `IsTerminal` in `rustc_errors`\n- Use `IsTerminal` in `rustc_driver`\n- Use `IsTerminal` in `rustc_log`\n- Use `IsTerminal` in `librustdoc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52cc0d5360622fe505b4f25973e06b1c9600f07c", "html_url": "https://github.com/rust-lang/rust/commit/52cc0d5360622fe505b4f25973e06b1c9600f07c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52cc0d5360622fe505b4f25973e06b1c9600f07c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e6de2369c82ed0b36e6b651b041bad5cb5e1ef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e6de2369c82ed0b36e6b651b041bad5cb5e1ef8", "html_url": "https://github.com/rust-lang/rust/commit/5e6de2369c82ed0b36e6b651b041bad5cb5e1ef8"}, {"sha": "e3d44dd4bdd901d284ec47a29e0bb7d825f9786b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d44dd4bdd901d284ec47a29e0bb7d825f9786b", "html_url": "https://github.com/rust-lang/rust/commit/e3d44dd4bdd901d284ec47a29e0bb7d825f9786b"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "83d12d710eda2f933e9f7394f5ca007f56c26058", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -3535,7 +3535,6 @@ name = \"rustc_errors\"\n version = \"0.0.0\"\n dependencies = [\n  \"annotate-snippets\",\n- \"atty\",\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n@@ -3834,7 +3833,6 @@ dependencies = [\n name = \"rustc_log\"\n version = \"0.0.0\"\n dependencies = [\n- \"atty\",\n  \"rustc_span\",\n  \"tracing\",\n  \"tracing-subscriber\",\n@@ -4389,7 +4387,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"arrayvec\",\n  \"askama\",\n- \"atty\",\n  \"expect-test\",\n  \"itertools\",\n  \"minifier\","}, {"sha": "8a712cec85211b0a9c1936c83b586350a74537dd", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -5,6 +5,7 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n+#![feature(is_terminal)]\n #![feature(once_cell)]\n #![feature(decl_macro)]\n #![recursion_limit = \"256\"]\n@@ -27,7 +28,6 @@ use rustc_feature::find_gated_cfg;\n use rustc_interface::util::{self, collect_crate_types, get_codegen_backend};\n use rustc_interface::{interface, Queries};\n use rustc_lint::LintStore;\n-use rustc_log::stdout_isatty;\n use rustc_metadata::locator;\n use rustc_save_analysis as save;\n use rustc_save_analysis::DumpHandler;\n@@ -48,7 +48,7 @@ use std::default::Default;\n use std::env;\n use std::ffi::OsString;\n use std::fs;\n-use std::io::{self, Read, Write};\n+use std::io::{self, IsTerminal, Read, Write};\n use std::panic::{self, catch_unwind};\n use std::path::PathBuf;\n use std::process::{self, Command, Stdio};\n@@ -515,7 +515,7 @@ fn handle_explain(registry: Registry, code: &str, output: ErrorOutputType) {\n                 }\n                 text.push('\\n');\n             }\n-            if stdout_isatty() {\n+            if io::stdout().is_terminal() {\n                 show_content_with_pager(&text);\n             } else {\n                 print!(\"{}\", text);"}, {"sha": "dee7a31ec2028287b06304fdb3b0b68f377a631e", "filename": "compiler/rustc_errors/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_errors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_errors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2FCargo.toml?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -18,7 +18,6 @@ rustc_target = { path = \"../rustc_target\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_lint_defs = { path = \"../rustc_lint_defs\" }\n unicode-width = \"0.1.4\"\n-atty = \"0.2\"\n termcolor = \"1.0\"\n annotate-snippets = \"0.9\"\n termize = \"0.1.1\""}, {"sha": "bc136aea44d4cf59a97f30c8e8e5cdc89dab565a", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -28,8 +28,8 @@ use rustc_error_messages::FluentArgs;\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n use std::borrow::Cow;\n use std::cmp::{max, min, Reverse};\n-use std::io;\n use std::io::prelude::*;\n+use std::io::{self, IsTerminal};\n use std::iter;\n use std::path::Path;\n use termcolor::{Ansi, BufferWriter, ColorChoice, ColorSpec, StandardStream};\n@@ -619,14 +619,14 @@ impl ColorConfig {\n     fn to_color_choice(self) -> ColorChoice {\n         match self {\n             ColorConfig::Always => {\n-                if atty::is(atty::Stream::Stderr) {\n+                if io::stderr().is_terminal() {\n                     ColorChoice::Always\n                 } else {\n                     ColorChoice::AlwaysAnsi\n                 }\n             }\n             ColorConfig::Never => ColorChoice::Never,\n-            ColorConfig::Auto if atty::is(atty::Stream::Stderr) => ColorChoice::Auto,\n+            ColorConfig::Auto if io::stderr().is_terminal() => ColorChoice::Auto,\n             ColorConfig::Auto => ColorChoice::Never,\n         }\n     }"}, {"sha": "f3f1c7534b0a305c816b16fd1d89595044693e2b", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -5,6 +5,7 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(drain_filter)]\n #![feature(if_let_guard)]\n+#![feature(is_terminal)]\n #![feature(adt_const_params)]\n #![feature(let_chains)]\n #![feature(never_type)]"}, {"sha": "3c50827c1abc33abba077405029d7a91aaa61e2c", "filename": "compiler/rustc_log/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_log%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_log%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_log%2FCargo.toml?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -4,7 +4,6 @@ version = \"0.0.0\"\n edition = \"2021\"\n \n [dependencies]\n-atty = \"0.2\"\n tracing = \"0.1.28\"\n tracing-subscriber = { version = \"0.3.3\", default-features = false, features = [\"fmt\", \"env-filter\", \"smallvec\", \"parking_lot\", \"ansi\"] }\n tracing-tree = \"0.2.0\""}, {"sha": "ddf29c488c933284433fd2f63376c2d7367e28cf", "filename": "compiler/rustc_log/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_log%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/compiler%2Frustc_log%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_log%2Fsrc%2Flib.rs?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -40,10 +40,11 @@\n \n #![deny(rustc::untranslatable_diagnostic)]\n #![deny(rustc::diagnostic_outside_of_impl)]\n+#![feature(is_terminal)]\n \n use std::env::{self, VarError};\n use std::fmt::{self, Display};\n-use std::io;\n+use std::io::{self, IsTerminal};\n use tracing_subscriber::filter::{Directive, EnvFilter, LevelFilter};\n use tracing_subscriber::layer::SubscriberExt;\n \n@@ -93,11 +94,11 @@ pub fn init_env_logger(env: &str) -> Result<(), Error> {\n }\n \n pub fn stdout_isatty() -> bool {\n-    atty::is(atty::Stream::Stdout)\n+    io::stdout().is_terminal()\n }\n \n pub fn stderr_isatty() -> bool {\n-    atty::is(atty::Stream::Stderr)\n+    io::stderr().is_terminal()\n }\n \n #[derive(Debug)]"}, {"sha": "1e7b4fe15b68cad5c59d74e96df437a4d4cf57d9", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -9,7 +9,6 @@ path = \"lib.rs\"\n [dependencies]\n arrayvec = { version = \"0.7\", default-features = false }\n askama = { version = \"0.11\", default-features = false, features = [\"config\"] }\n-atty = \"0.2\"\n itertools = \"0.10.1\"\n minifier = \"0.2.2\"\n once_cell = \"1.10.0\""}, {"sha": "1a84ec650474d28b916f4c62cfab234515490f81", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/52cc0d5360622fe505b4f25973e06b1c9600f07c/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc0d5360622fe505b4f25973e06b1c9600f07c/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=52cc0d5360622fe505b4f25973e06b1c9600f07c", "patch": "@@ -8,6 +8,7 @@\n #![feature(box_patterns)]\n #![feature(control_flow_enum)]\n #![feature(drain_filter)]\n+#![feature(is_terminal)]\n #![feature(let_chains)]\n #![feature(test)]\n #![feature(never_type)]\n@@ -69,7 +70,7 @@ extern crate jemalloc_sys;\n \n use std::default::Default;\n use std::env::{self, VarError};\n-use std::io;\n+use std::io::{self, IsTerminal};\n use std::process;\n \n use rustc_driver::abort_on_err;\n@@ -179,7 +180,7 @@ fn init_logging() {\n     let color_logs = match std::env::var(\"RUSTDOC_LOG_COLOR\").as_deref() {\n         Ok(\"always\") => true,\n         Ok(\"never\") => false,\n-        Ok(\"auto\") | Err(VarError::NotPresent) => atty::is(atty::Stream::Stdout),\n+        Ok(\"auto\") | Err(VarError::NotPresent) => io::stdout().is_terminal(),\n         Ok(value) => early_error(\n             ErrorOutputType::default(),\n             &format!(\"invalid log color value '{}': expected one of always, never, or auto\", value),"}]}