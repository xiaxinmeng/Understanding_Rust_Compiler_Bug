{"sha": "595dd976bdcf54f9de336fcf4665d87e426ffc35", "node_id": "C_kwDOAAsO6NoAKDU5NWRkOTc2YmRjZjU0ZjlkZTMzNmZjZjQ2NjVkODdlNDI2ZmZjMzU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-28T15:39:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-03T13:56:31Z"}, "message": "interpret: don't rely on ScalarPair for overflowed arithmetic", "tree": {"sha": "b00a3c1b7efb0091ce4825d2c27aaffbcd28e40f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b00a3c1b7efb0091ce4825d2c27aaffbcd28e40f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/595dd976bdcf54f9de336fcf4665d87e426ffc35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/595dd976bdcf54f9de336fcf4665d87e426ffc35", "html_url": "https://github.com/rust-lang/rust/commit/595dd976bdcf54f9de336fcf4665d87e426ffc35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/595dd976bdcf54f9de336fcf4665d87e426ffc35/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf382e63c023259fa1f9042f8f479f183ca6ed3", "url": "https://api.github.com/repos/rust-lang/rust/commits/baf382e63c023259fa1f9042f8f479f183ca6ed3", "html_url": "https://github.com/rust-lang/rust/commit/baf382e63c023259fa1f9042f8f479f183ca6ed3"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "5d044a7fcd169ac1d8b39480365aa5d4122ece6e", "filename": "compiler/rustc_const_eval/src/interpret/operator.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/595dd976bdcf54f9de336fcf4665d87e426ffc35/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595dd976bdcf54f9de336fcf4665d87e426ffc35/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs?ref=595dd976bdcf54f9de336fcf4665d87e426ffc35", "patch": "@@ -5,6 +5,7 @@ use rustc_middle::mir;\n use rustc_middle::mir::interpret::{InterpResult, Scalar};\n use rustc_middle::ty::layout::{LayoutOf, TyAndLayout};\n use rustc_middle::ty::{self, FloatTy, Ty};\n+use rustc_target::abi::Abi;\n \n use super::{ImmTy, Immediate, InterpCx, Machine, PlaceTy};\n \n@@ -25,8 +26,21 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             \"type mismatch for result of {:?}\",\n             op,\n         );\n-        let val = Immediate::ScalarPair(val.into(), Scalar::from_bool(overflowed).into());\n-        self.write_immediate(val, dest)\n+        if let Abi::ScalarPair(..) = dest.layout.abi {\n+            // We can use the optimized path and avoid `place_field` (which might do\n+            // `force_allocation`).\n+            let pair = Immediate::ScalarPair(val.into(), Scalar::from_bool(overflowed).into());\n+            self.write_immediate(pair, dest)?;\n+        } else {\n+            // With randomized layout, `(int, bool)` might cease to be a `ScalarPair`, so we have to\n+            // do a component-wise write here. This code path is slower than the above because\n+            // `place_field` will have to `force_allocate` locals here.\n+            let val_field = self.place_field(&dest, 0)?;\n+            self.write_scalar(val, &val_field)?;\n+            let overflowed_field = self.place_field(&dest, 1)?;\n+            self.write_scalar(Scalar::from_bool(overflowed), &overflowed_field)?;\n+        }\n+        Ok(())\n     }\n \n     /// Applies the binary operation `op` to the arguments and writes the result to the"}]}