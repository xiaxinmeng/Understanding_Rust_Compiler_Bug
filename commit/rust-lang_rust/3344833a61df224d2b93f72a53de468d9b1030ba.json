{"sha": "3344833a61df224d2b93f72a53de468d9b1030ba", "node_id": "C_kwDOAAsO6NoAKDMzNDQ4MzNhNjFkZjIyNGQyYjkzZjcyYTUzZGU0NjhkOWIxMDMwYmE", "commit": {"author": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-10-28T00:29:53Z"}, "committer": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2022-03-12T20:02:42Z"}, "message": "Add unstable struct fields to ui tests", "tree": {"sha": "f652c29bfdb5edc92bac33c3e65e1685960b9b90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f652c29bfdb5edc92bac33c3e65e1685960b9b90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3344833a61df224d2b93f72a53de468d9b1030ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3344833a61df224d2b93f72a53de468d9b1030ba", "html_url": "https://github.com/rust-lang/rust/commit/3344833a61df224d2b93f72a53de468d9b1030ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3344833a61df224d2b93f72a53de468d9b1030ba/comments", "author": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8663ee19e45f6d6cd61fa6fe7ea1b2c33a85a46e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8663ee19e45f6d6cd61fa6fe7ea1b2c33a85a46e", "html_url": "https://github.com/rust-lang/rust/commit/8663ee19e45f6d6cd61fa6fe7ea1b2c33a85a46e"}], "stats": {"total": 64, "additions": 62, "deletions": 2}, "files": [{"sha": "11df44461e36bb36a1f5fc698db649c9b7453c2d", "filename": "src/test/ui/rfc-2008-non-exhaustive/auxiliary/unstable.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3344833a61df224d2b93f72a53de468d9b1030ba/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Funstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3344833a61df224d2b93f72a53de468d9b1030ba/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Funstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Funstable.rs?ref=3344833a61df224d2b93f72a53de468d9b1030ba", "patch": "@@ -27,3 +27,34 @@ impl OnlyUnstableEnum {\n         Self::Unstable\n     }\n }\n+\n+#[derive(Default)]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+#[non_exhaustive]\n+pub struct UnstableStruct {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    pub stable: bool,\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    pub stable2: usize,\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n+    pub unstable: u8,\n+}\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+#[non_exhaustive]\n+pub struct OnlyUnstableStruct {\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n+    pub unstable: u8,\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n+    pub unstable2: bool,\n+}\n+\n+impl OnlyUnstableStruct {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    pub fn new() -> Self {\n+        Self {\n+            unstable: 0,\n+            unstable2: false,\n+        }\n+    }\n+}"}, {"sha": "d8f07bb8f24d1b44f165421fc86739b09884c772", "filename": "src/test/ui/rfc-2008-non-exhaustive/omitted-patterns.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3344833a61df224d2b93f72a53de468d9b1030ba/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fomitted-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3344833a61df224d2b93f72a53de468d9b1030ba/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fomitted-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fomitted-patterns.rs?ref=3344833a61df224d2b93f72a53de468d9b1030ba", "patch": "@@ -13,7 +13,7 @@ use enums::{\n     EmptyNonExhaustiveEnum, NestedNonExhaustive, NonExhaustiveEnum, NonExhaustiveSingleVariant,\n     VariantNonExhaustive,\n };\n-use unstable::{UnstableEnum, OnlyUnstableEnum};\n+use unstable::{UnstableEnum, OnlyUnstableEnum, UnstableStruct, OnlyUnstableStruct};\n use structs::{FunctionalRecord, MixedVisFields, NestedStruct, NormalStruct};\n \n #[non_exhaustive]\n@@ -145,6 +145,7 @@ fn main() {\n     }\n     //~^^ some variants are not matched explicitly\n \n+    // Ok: the feature is on and all variants are matched\n     #[deny(non_exhaustive_omitted_patterns)]\n     match UnstableEnum::Stable {\n         UnstableEnum::Stable => {}\n@@ -167,4 +168,20 @@ fn main() {\n         _ => {}\n     }\n     //~^^ some variants are not matched explicitly\n+\n+    #[warn(non_exhaustive_omitted_patterns)]\n+    let OnlyUnstableStruct { unstable, .. } = OnlyUnstableStruct::new();\n+    //~^ some fields are not explicitly listed\n+\n+    // OK: both unstable fields are matched with feature on\n+    #[warn(non_exhaustive_omitted_patterns)]\n+    let OnlyUnstableStruct { unstable, unstable2, .. } = OnlyUnstableStruct::new();\n+\n+    #[warn(non_exhaustive_omitted_patterns)]\n+    let UnstableStruct { stable, stable2, .. } = UnstableStruct::default();\n+    //~^ some fields are not explicitly listed\n+\n+    // OK: both unstable and stable fields are matched with feature on\n+    #[warn(non_exhaustive_omitted_patterns)]\n+    let UnstableStruct { stable, stable2, unstable, .. } = UnstableStruct::default();\n }"}, {"sha": "82ee68687ed00b12127aeb4a13ce707f080f1e4f", "filename": "src/test/ui/rfc-2008-non-exhaustive/stable-omitted-patterns.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3344833a61df224d2b93f72a53de468d9b1030ba/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstable-omitted-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3344833a61df224d2b93f72a53de468d9b1030ba/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstable-omitted-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstable-omitted-patterns.rs?ref=3344833a61df224d2b93f72a53de468d9b1030ba", "patch": "@@ -6,7 +6,7 @@\n // aux-build:unstable.rs\n extern crate unstable;\n \n-use unstable::{UnstableEnum, OnlyUnstableEnum};\n+use unstable::{UnstableEnum, OnlyUnstableEnum, UnstableStruct, OnlyUnstableStruct};\n \n fn main() {\n     // OK: this matches all the stable variants\n@@ -30,4 +30,16 @@ fn main() {\n     match OnlyUnstableEnum::new() {\n         _ => {}\n     }\n+\n+    // Ok: Same as the above enum (no fields can be matched on)\n+    #[warn(non_exhaustive_omitted_patterns)]\n+    let OnlyUnstableStruct { .. } = OnlyUnstableStruct::new();\n+\n+    #[warn(non_exhaustive_omitted_patterns)]\n+    let UnstableStruct { stable, .. } = UnstableStruct::default();\n+    //~^ some fields are not explicitly listed\n+\n+    // OK: stable field is matched\n+    #[warn(non_exhaustive_omitted_patterns)]\n+    let UnstableStruct { stable, stable2, .. } = UnstableStruct::default();\n }"}]}