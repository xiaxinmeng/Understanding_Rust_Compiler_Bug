{"sha": "542fbcbaed489d4f68ede5e3a9ab036c0f585156", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MmZiY2JhZWQ0ODlkNGY2OGVkZTVlM2E5YWIwMzZjMGY1ODUxNTY=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-31T18:05:14Z"}, "committer": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-31T18:05:14Z"}, "message": "Fix typo", "tree": {"sha": "891aa9a88e07cefc7694cf76eb35b346af01340f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/891aa9a88e07cefc7694cf76eb35b346af01340f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/542fbcbaed489d4f68ede5e3a9ab036c0f585156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/542fbcbaed489d4f68ede5e3a9ab036c0f585156", "html_url": "https://github.com/rust-lang/rust/commit/542fbcbaed489d4f68ede5e3a9ab036c0f585156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/542fbcbaed489d4f68ede5e3a9ab036c0f585156/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3068af79ffd23656ff2d46ac92d9192ce6c813fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3068af79ffd23656ff2d46ac92d9192ce6c813fb", "html_url": "https://github.com/rust-lang/rust/commit/3068af79ffd23656ff2d46ac92d9192ce6c813fb"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "20af55ef287c57f2aa29ee1d8f95c868e904d3fe", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/542fbcbaed489d4f68ede5e3a9ab036c0f585156/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/542fbcbaed489d4f68ede5e3a9ab036c0f585156/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=542fbcbaed489d4f68ede5e3a9ab036c0f585156", "patch": "@@ -54,7 +54,7 @@ salsa::database_storage! {\n             fn file_text() for crate::input::FileTextQuery;\n             fn file_source_root() for crate::input::FileSourceRootQuery;\n             fn source_root() for crate::input::SourceRootQuery;\n-            fn libraries() for crate::input::LibrarieseQuery;\n+            fn libraries() for crate::input::LibrariesQuery;\n             fn library_symbols() for crate::input::LibrarySymbolsQuery;\n             fn crate_graph() for crate::input::CrateGraphQuery;\n         }"}, {"sha": "69a3e8dfb0b9a9411039c9f511b15150c7b1d907", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/542fbcbaed489d4f68ede5e3a9ab036c0f585156/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/542fbcbaed489d4f68ede5e3a9ab036c0f585156/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=542fbcbaed489d4f68ede5e3a9ab036c0f585156", "patch": "@@ -163,7 +163,7 @@ impl AnalysisHostImpl {\n                     .set(source_root_id, Arc::new(library.symbol_index));\n             }\n             self.db\n-                .query(crate::input::LibrarieseQuery)\n+                .query(crate::input::LibrariesQuery)\n                 .set((), Arc::new(libraries));\n         }\n         if let Some(crate_graph) = change.crate_graph {"}, {"sha": "fd63182c7047e00687418a9b048a4cce0c126a21", "filename": "crates/ra_analysis/src/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/542fbcbaed489d4f68ede5e3a9ab036c0f585156/crates%2Fra_analysis%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/542fbcbaed489d4f68ede5e3a9ab036c0f585156/crates%2Fra_analysis%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Finput.rs?ref=542fbcbaed489d4f68ede5e3a9ab036c0f585156", "patch": "@@ -53,7 +53,7 @@ salsa::query_group! {\n             storage input;\n         }\n         fn libraries() -> Arc<Vec<SourceRootId>> {\n-            type LibrarieseQuery;\n+            type LibrariesQuery;\n             storage input;\n         }\n         fn library_symbols(id: SourceRootId) -> Arc<SymbolIndex> {"}]}