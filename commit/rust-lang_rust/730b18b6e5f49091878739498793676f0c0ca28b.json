{"sha": "730b18b6e5f49091878739498793676f0c0ca28b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMGIxOGI2ZTVmNDkwOTE4Nzg3Mzk0OTg3OTM2NzZmMGMwY2EyOGI=", "commit": {"author": {"name": "Wim Looman", "email": "wim@nemo157.com", "date": "2018-11-04T21:07:55Z"}, "committer": {"name": "Wim Looman", "email": "wim@nemo157.com", "date": "2019-01-27T21:58:59Z"}, "message": "Mark static generators as !Unpin", "tree": {"sha": "f85101bc7d386d65de278c8e8917a744d99dc85f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f85101bc7d386d65de278c8e8917a744d99dc85f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/730b18b6e5f49091878739498793676f0c0ca28b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/730b18b6e5f49091878739498793676f0c0ca28b", "html_url": "https://github.com/rust-lang/rust/commit/730b18b6e5f49091878739498793676f0c0ca28b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/730b18b6e5f49091878739498793676f0c0ca28b/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3fdee9a7523a72a5ee72cdb4c1cf3c2cec444bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3fdee9a7523a72a5ee72cdb4c1cf3c2cec444bc", "html_url": "https://github.com/rust-lang/rust/commit/a3fdee9a7523a72a5ee72cdb4c1cf3c2cec444bc"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "457d556e4fa6d2db6fbc33233ded1bbe5a3c838d", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730b18b6e5f49091878739498793676f0c0ca28b/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730b18b6e5f49091878739498793676f0c0ca28b/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=730b18b6e5f49091878739498793676f0c0ca28b", "patch": "@@ -627,6 +627,7 @@ unsafe impl<T: ?Sized> Freeze for &mut T {}\n /// [`Pin`]: ../pin/struct.Pin.html\n /// [`pin module`]: ../../std/pin/index.html\n #[stable(feature = \"pin\", since = \"1.33.0\")]\n+#[cfg_attr(not(stage0), lang = \"unpin\")]\n pub auto trait Unpin {}\n \n /// A marker type which does not implement `Unpin`."}, {"sha": "e324bde1f17bfb38f4d021774cec5d788f6e5f38", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730b18b6e5f49091878739498793676f0c0ca28b/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730b18b6e5f49091878739498793676f0c0ca28b/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=730b18b6e5f49091878739498793676f0c0ca28b", "patch": "@@ -299,6 +299,7 @@ language_item_table! {\n \n     GeneratorStateLangItem,      \"generator_state\",    gen_state,               Target::Enum;\n     GeneratorTraitLangItem,      \"generator\",          gen_trait,               Target::Trait;\n+    UnpinTraitLangItem,          \"unpin\",              unpin_trait,             Target::Trait;\n \n     EqTraitLangItem,             \"eq\",                 eq_trait,                Target::Trait;\n     PartialOrdTraitLangItem,     \"partial_ord\",        partial_ord_trait,       Target::Trait;"}, {"sha": "7a244b7e80e6afc9f9655a880c346b2fdca0bf33", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/730b18b6e5f49091878739498793676f0c0ca28b/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730b18b6e5f49091878739498793676f0c0ca28b/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=730b18b6e5f49091878739498793676f0c0ca28b", "patch": "@@ -2017,6 +2017,12 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                     // the auto impl might apply, we don't know\n                     candidates.ambiguous = true;\n                 }\n+                ty::Generator(_, _, hir::GeneratorMovability::Static)\n+                    if self.tcx().lang_items().unpin_trait() == Some(def_id) =>\n+                {\n+                    // Immovable generators are never `Unpin`, so suppress the\n+                    // normal auto-impl candidate for it.\n+                }\n                 _ => candidates.vec.push(AutoImplCandidate(def_id.clone())),\n             }\n         }"}, {"sha": "7586faf1842ba57ed592155e442f3222b69c12f6", "filename": "src/test/ui/generator/static-not-unpin.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/730b18b6e5f49091878739498793676f0c0ca28b/src%2Ftest%2Fui%2Fgenerator%2Fstatic-not-unpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730b18b6e5f49091878739498793676f0c0ca28b/src%2Ftest%2Fui%2Fgenerator%2Fstatic-not-unpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fstatic-not-unpin.rs?ref=730b18b6e5f49091878739498793676f0c0ca28b", "patch": "@@ -0,0 +1,13 @@\n+#![feature(generators)]\n+\n+use std::marker::Unpin;\n+\n+fn assert_unpin<T: Unpin>(_: T) {\n+}\n+\n+fn main() {\n+    let mut generator = static || {\n+        yield;\n+    };\n+    assert_unpin(generator); //~ ERROR std::marker::Unpin` is not satisfied\n+}"}, {"sha": "7a1243f5783d4b916592a64ac71fa36269e04d2d", "filename": "src/test/ui/generator/static-not-unpin.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/730b18b6e5f49091878739498793676f0c0ca28b/src%2Ftest%2Fui%2Fgenerator%2Fstatic-not-unpin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/730b18b6e5f49091878739498793676f0c0ca28b/src%2Ftest%2Fui%2Fgenerator%2Fstatic-not-unpin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fstatic-not-unpin.stderr?ref=730b18b6e5f49091878739498793676f0c0ca28b", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the trait bound `[static generator@$DIR/static-not-unpin.rs:9:25: 11:6 _]: std::marker::Unpin` is not satisfied\n+  --> $DIR/static-not-unpin.rs:12:5\n+   |\n+LL |     assert_unpin(generator); //~ ERROR std::marker::Unpin` is not satisfied\n+   |     ^^^^^^^^^^^^ the trait `std::marker::Unpin` is not implemented for `[static generator@$DIR/static-not-unpin.rs:9:25: 11:6 _]`\n+   |\n+note: required by `assert_unpin`\n+  --> $DIR/static-not-unpin.rs:5:1\n+   |\n+LL | fn assert_unpin<T: Unpin>(_: T) {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}