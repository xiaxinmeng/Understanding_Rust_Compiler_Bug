{"sha": "6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOWJkN2JkZDI3MTJhN2U4NWQ2YmZjNzBjMjMxZGJlMzZjMmU1ODU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-17T20:14:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-17T20:14:31Z"}, "message": "Merge #2032\n\n2032: rename tools -> xtask r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "890a88741ef83c5ca0a57006c1972d0870fd86a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890a88741ef83c5ca0a57006c1972d0870fd86a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdqMunCRBK7hj4Ov3rIwAAdHIIAASPr2NB/C5MGP17WjZUo2Cd\n86XveZWgidx9qWK6jzCUTdieqhaJYQyHTDpJByAUsatj/IbT+kHRrAsofbSjbNW+\nvVF81dNiRTfYc3Q6F6/WwfbSRAJ9dLvd803NdFSdxkak3KutsvCQOeec0pkTIsQ/\nhQua3/STgPAmfMwUOHrHBHGmV4UUQnQkasgQkeBekIq8oQGx91wbMNtKEQ+TaTqY\nu/JxJU2yy6ZXefLmPM3LlC3u1J2Fsi7jo7fydBJLyPzO2SFDbhvpr9VQzGkVYtCN\nSeP5VCK4Zq4ciUhnJvLovSuDzxSpQoVJJ5CJOfEtb1IvvruAL8vVnbztobJz9vo=\n=QX25\n-----END PGP SIGNATURE-----\n", "payload": "tree 890a88741ef83c5ca0a57006c1972d0870fd86a4\nparent 65ab81e35868c09ac9c93cf1d53a607f5caede53\nparent 5376c769f0cb6076c4862e728af042bb563a5051\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1571343271 +0000\ncommitter GitHub <noreply@github.com> 1571343271 +0000\n\nMerge #2032\n\n2032: rename tools -> xtask r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "html_url": "https://github.com/rust-lang/rust/commit/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65ab81e35868c09ac9c93cf1d53a607f5caede53", "url": "https://api.github.com/repos/rust-lang/rust/commits/65ab81e35868c09ac9c93cf1d53a607f5caede53", "html_url": "https://github.com/rust-lang/rust/commit/65ab81e35868c09ac9c93cf1d53a607f5caede53"}, {"sha": "5376c769f0cb6076c4862e728af042bb563a5051", "url": "https://api.github.com/repos/rust-lang/rust/commits/5376c769f0cb6076c4862e728af042bb563a5051", "html_url": "https://github.com/rust-lang/rust/commit/5376c769f0cb6076c4862e728af042bb563a5051"}], "stats": {"total": 132, "additions": 50, "deletions": 82}, "files": [{"sha": "3812e1e2d1e4b6327707422dcd51a8c6d93e7cbb", "filename": ".cargo/config", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -1,23 +1,4 @@\n [alias]\n-# Automatically generates the ast and syntax kinds files\n-gen-syntax   = \"run --package ra_tools --bin ra_tools -- gen-syntax\"\n+xtask = \"run --package xtask --bin xtask --\"\n \n-# Extracts the tests from\n-gen-tests    = \"run --package ra_tools --bin ra_tools -- gen-tests\"\n-\n-# Installs the visual studio code extension\n-install-ra   = \"run --package ra_tools --bin ra_tools -- install-ra\"\n-install-code = \"run --package ra_tools --bin ra_tools -- install-ra\" # just an alias\n-\n-# Formats the full repository or installs the git hook to do it automatically.\n-format       = \"run --package ra_tools --bin ra_tools -- format\"\n-format-hook  = \"run --package ra_tools --bin ra_tools -- format-hook\"\n-\n-# Run clippy\n-lint         = \"run --package ra_tools --bin ra_tools -- lint\"\n-\n-# Runs the fuzzing test suite (currently only parser)\n-fuzz-tests   = \"run --package ra_tools --bin ra_tools -- fuzz-tests\"\n-\n-# Parse a file. This should be piped the file contents\n-parse        = \"run --package ra_cli -- parse\"\n+install-ra = \"run --package xtask --bin xtask -- install\" # for backwards compat"}, {"sha": "ea6521333bf7476fd39c4d56579c9877d81aad84", "filename": "Cargo.lock", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -1139,19 +1139,6 @@ dependencies = [\n  \"text_unit 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"ra_tools\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"pico-args 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"proc-macro2 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ron 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.101 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"walkdir 2.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"ra_tt\"\n version = \"0.1.0\"\n@@ -1731,13 +1718,6 @@ name = \"wasi\"\n version = \"0.7.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"website-gen\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"walkdir 2.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"winapi\"\n version = \"0.2.8\"\n@@ -1784,6 +1764,19 @@ dependencies = [\n  \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"xtask\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"pico-args 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ron 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.101 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 2.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"yaml-rust\"\n version = \"0.4.3\""}, {"sha": "97c02b40f4fa9045e5e442c4f42c5c180644b266", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -1,5 +1,5 @@\n [workspace]\n-members = [ \"crates/*\" ]\n+members = [ \"crates/*\", \"xtask/\" ]\n \n [profile.dev]\n debug = 1 # only line info"}, {"sha": "f5ee4263da22214fc0809687fc6420248a6ace88", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -33,10 +33,10 @@ To quickly install rust-analyzer with VS Code extension with standard setup\n $ git clone https://github.com/rust-analyzer/rust-analyzer && cd rust-analyzer\n \n # install both the language server and VS Code extension\n-$ cargo install-ra\n+$ cargo xtask install\n \n # alternatively, install only the server. Binary name is `ra_lsp_server`.\n-$ cargo install-ra --server\n+$ cargo xtask install --server\n ```\n \n For non-standard setup of VS Code and other editors, see [./docs/user](./docs/user)."}, {"sha": "0a8fd06121cc7c549a821259ac596f6a42962b49", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -1,5 +1,5 @@\n // Stores definitions which must be used in multiple places\n-// See `cargo gen-syntax` (defined in crates/ra_tools/src/main.rs)\n+// See `cargo xtask codegen` (defined in xtasks/src/main.rs)\n Grammar(\n     punct: [\n         (\";\", \"SEMI\"),"}, {"sha": "e5a7ea5f6f07b9bfe0732dbec0bdb01fff268465", "filename": "docs/dev/README.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -65,8 +65,8 @@ integrating with editors. Currently, it contains plugins for VS Code (in\n typescript) and Emacs (in elisp). The `docs` top-level directory contains both\n developer and user documentation.\n \n-We have some automation infra in Rust in the `crates/tool` package. It contains\n-stuff like formatting checking, code generation and powers `cargo install-ra`.\n+We have some automation infra in Rust in the `xtask` package. It contains\n+stuff like formatting checking, code generation and powers `cargo xtask install`.\n The latter syntax is achieved with the help of cargo aliases (see `.cargo`\n directory).\n \n@@ -84,7 +84,7 @@ However, launching a VS Code instance with locally build language server is\n possible. There's even a VS Code task for this, so just <kbd>F5</kbd> should\n work (thanks, [@andrew-w-ross](https://github.com/andrew-w-ross)!).\n \n-I often just install development version with `cargo install-ra --server --jemalloc` and\n+I often just install development version with `cargo xtask install --server --jemalloc` and\n restart the host VS Code.\n \n See [./debugging.md](./debugging.md) for how to attach to rust-analyzer with\n@@ -116,7 +116,7 @@ Due to the requirements of running the tests inside VS Code they are **not run\n on CI**. When making changes to the extension please ensure the tests are not\n broken locally before opening a Pull Request.\n \n-To install **only** the VS Code extension, use `cargo install-ra --client-code`.\n+To install **only** the VS Code extension, use `cargo xtask install --client-code`.\n \n # Logging\n \n@@ -153,7 +153,7 @@ There's also two VS Code commands which might be of interest:\n   $ cargo install --path crates/ra_lsp_server --force --features jemalloc\n   ```\n \n-  There's an alias for this: `cargo install-ra --server --jemalloc`.\n+  There's an alias for this: `cargo xtask install --server --jemalloc`.\n \n * `Rust Analyzer: Syntax Tree` shows syntax tree of the current file/selection.\n "}, {"sha": "5ec5352e7137b8f91e011e2b69ba6eb220723a67", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -45,21 +45,15 @@ can be quickly updated for small modifications.\n Some of the components of this repository are generated through automatic\n processes. These are outlined below:\n \n-- `gen-syntax`: The kinds of tokens that are reused in several places, so a generator\n-  is used. We use tera templates to generate the files listed below, based on\n+- `cargo xtask codegen`: The kinds of tokens that are reused in several places, so a generator\n+  is used. We use `quote!` macro to generate the files listed below, based on\n   the grammar described in [grammar.ron]:\n-  - [ast/generated.rs][ast generated] in `ra_syntax` based on\n-    [ast/generated.tera.rs][ast source]\n-  - [syntax_kind/generated.rs][syntax_kind generated] in `ra_syntax` based on\n-    [syntax_kind/generated.tera.rs][syntax_kind source]\n+  - [ast/generated.rs][ast generated]\n+  - [syntax_kind/generated.rs][syntax_kind generated]\n \n-[tera]: https://tera.netlify.com/\n [grammar.ron]: ../../crates/ra_syntax/src/grammar.ron\n [ast generated]: ../../crates/ra_syntax/src/ast/generated.rs\n-[ast source]: ../../crates/ra_syntax/src/ast/generated.rs.tera\n [syntax_kind generated]: ../../crates/ra_parser/src/syntax_kind/generated.rs\n-[syntax_kind source]: ../../crates/ra_parser/src/syntax_kind/generated.rs.tera\n-\n \n ## Code Walk-Through\n \n@@ -77,7 +71,7 @@ Rust syntax tree structure and parser. See\n   This is the thing that turns a flat list of events into a tree (see `EventProcessor`)\n - `ast` provides a type safe API on top of the raw `rowan` tree.\n - `grammar.ron` RON description of the grammar, which is used to\n-  generate `syntax_kinds` and `ast` modules, using `cargo gen-syntax` command.\n+  generate `syntax_kinds` and `ast` modules, using `cargo xtask codegen` command.\n - `algo`: generic tree algorithms, including `walk` for O(1) stack\n   space tree traversal (this is cool).\n "}, {"sha": "f45c0d7d15f4809ff0a91adc91feeeb4b590c629", "filename": "docs/user/README.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -1,6 +1,6 @@\n The main interface to rust-analyzer is the\n [LSP](https://microsoft.github.io/language-server-protocol/) implementation. To\n-install lsp server, use `cargo install-ra --server`, which is a shorthand for `cargo\n+install lsp server, use `cargo xtask install --server`, which is a shorthand for `cargo\n install --package ra_lsp_server`. The binary is named `ra_lsp_server`, you\n should be able to use it with any LSP-compatible editor. We use custom\n extensions to LSP, so special client-side support is required to take full\n@@ -33,7 +33,7 @@ following commands:\n ```\n $ git clone https://github.com/rust-analyzer/rust-analyzer.git --depth 1\n $ cd rust-analyzer\n-$ cargo install-ra\n+$ cargo xtask install\n ```\n \n The automatic installation is expected to *just work* for common cases, if it\n@@ -58,7 +58,7 @@ Beyond basic LSP features, there are some extension commands which you can\n invoke via <kbd>Ctrl+Shift+P</kbd> or bind to a shortcut. See [./features.md](./features.md)\n for details.\n \n-For updates, pull the latest changes from the master branch, run `cargo install-ra` again, and **restart** VS Code instance.\n+For updates, pull the latest changes from the master branch, run `cargo xtask install` again, and **restart** VS Code instance.\n See [microsoft/vscode#72308](https://github.com/microsoft/vscode/issues/72308) for why a full restart is needed.\n \n ### Settings"}, {"sha": "4fc1c744bf9a1f36a0d6a5fa59432896edf50e5e", "filename": "xtask/Cargo.toml", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2FCargo.toml?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -1,6 +1,6 @@\n [package]\n edition = \"2018\"\n-name = \"ra_tools\"\n+name = \"xtask\"\n version = \"0.1.0\"\n authors = [\"rust-analyzer developers\"]\n publish = false", "previous_filename": "crates/ra_tools/Cargo.toml"}, {"sha": "4ee864756d2df1813dd77b0c7882c7f942dc2b8f", "filename": "xtask/src/bin/pre-commit.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fbin%2Fpre-commit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fbin%2Fpre-commit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fbin%2Fpre-commit.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -2,7 +2,7 @@\n \n use std::process::Command;\n \n-use ra_tools::{project_root, run, run_rustfmt, Overwrite, Result};\n+use xtask::{project_root, run, run_rustfmt, Overwrite, Result};\n \n fn main() -> Result<()> {\n     run_rustfmt(Overwrite)?;", "previous_filename": "crates/ra_tools/src/bin/pre-commit.rs"}, {"sha": "39f1cae665235e51f1c62aa91f884892f177a4ba", "filename": "xtask/src/boilerplate_gen.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fboilerplate_gen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fboilerplate_gen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fboilerplate_gen.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "previous_filename": "crates/ra_tools/src/boilerplate_gen.rs"}, {"sha": "4c6bf6b53c9c3172870a007e2d61d48d2bf9247b", "filename": "xtask/src/help.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fhelp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fhelp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fhelp.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -12,15 +12,15 @@ SUBCOMMANDS:\n     format\n     format-hook\n     fuzz-tests\n-    gen-syntax\n+    codegen\n     gen-tests\n-    install-ra\n+    install\n     lint\";\n \n-pub const INSTALL_RA_HELP: &str = \"ra_tools-install-ra\n+pub const INSTALL_HELP: &str = \"ra_tools-install\n \n USAGE:\n-    ra_tools.exe install-ra [FLAGS]\n+    ra_tools.exe install [FLAGS]\n \n FLAGS:\n         --client-code\n@@ -43,5 +43,5 @@ FLAGS:\n \n pub const INSTALL_RA_CONFLICT: &str =\n     \"error: The argument `--server` cannot be used with `--client-code`\n-                    \n+\n For more information try --help\";", "previous_filename": "crates/ra_tools/src/help.rs"}, {"sha": "a8685f5677148ddad7d855dc426c52dc6587a8ff", "filename": "xtask/src/lib.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -78,7 +78,7 @@ pub fn collect_tests(s: &str) -> Vec<(usize, Test)> {\n }\n \n pub fn project_root() -> PathBuf {\n-    Path::new(&env!(\"CARGO_MANIFEST_DIR\")).ancestors().nth(2).unwrap().to_path_buf()\n+    Path::new(&env!(\"CARGO_MANIFEST_DIR\")).ancestors().nth(1).unwrap().to_path_buf()\n }\n \n pub struct Cmd<'a> {\n@@ -146,7 +146,7 @@ pub fn install_format_hook() -> Result<()> {\n         \"./.git/hooks/pre-commit\"\n     });\n     if !result_path.exists() {\n-        run(\"cargo build --package ra_tools --bin pre-commit\", \".\")?;\n+        run(\"cargo build --package xtask --bin pre-commit\", \".\")?;\n         if cfg!(windows) {\n             fs::copy(\"./target/debug/pre-commit.exe\", result_path)?;\n         } else {", "previous_filename": "crates/ra_tools/src/lib.rs"}, {"sha": "623058436817adb14270780a6a9456721ee0864c", "filename": "xtask/src/main.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -5,11 +5,11 @@ mod help;\n use core::fmt::Write;\n use core::str;\n use pico_args::Arguments;\n-use ra_tools::{\n+use std::{env, path::PathBuf};\n+use xtask::{\n     gen_tests, generate_boilerplate, install_format_hook, run, run_clippy, run_fuzzer, run_rustfmt,\n     Cmd, Overwrite, Result,\n };\n-use std::{env, path::PathBuf};\n \n struct InstallOpt {\n     client: Option<ClientOpt>,\n@@ -35,9 +35,9 @@ fn main() -> Result<()> {\n     let mut matches = Arguments::from_vec(std::env::args_os().skip(2).collect());\n     let subcommand = &*subcommand.to_string_lossy();\n     match subcommand {\n-        \"install-ra\" | \"install-code\" => {\n+        \"install\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::INSTALL_RA_HELP);\n+                eprintln!(\"{}\", help::INSTALL_HELP);\n                 return Ok(());\n             }\n             let server = matches.contains(\"--server\");\n@@ -61,7 +61,7 @@ fn main() -> Result<()> {\n             }\n             gen_tests(Overwrite)?\n         }\n-        \"gen-syntax\" => {\n+        \"codegen\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n                 help::print_no_param_subcommand_help(&subcommand);\n                 return Ok(());", "previous_filename": "crates/ra_tools/src/main.rs"}, {"sha": "5d8ddea836c304bef25191872ca853ccc16a3c3c", "filename": "xtask/tests/tidy-tests/cli.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Ftests%2Ftidy-tests%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Ftests%2Ftidy-tests%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy-tests%2Fcli.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -1,17 +1,17 @@\n-use ra_tools::{gen_tests, generate_boilerplate, project_root, run_rustfmt, Verify};\n use walkdir::WalkDir;\n+use xtask::{gen_tests, generate_boilerplate, project_root, run_rustfmt, Verify};\n \n #[test]\n fn generated_grammar_is_fresh() {\n     if let Err(error) = generate_boilerplate(Verify) {\n-        panic!(\"{}. Please update it by running `cargo gen-syntax`\", error);\n+        panic!(\"{}. Please update it by running `cargo xtask codegen`\", error);\n     }\n }\n \n #[test]\n fn generated_tests_are_fresh() {\n     if let Err(error) = gen_tests(Verify) {\n-        panic!(\"{}. Please update tests by running `cargo gen-tests`\", error);\n+        panic!(\"{}. Please update tests by running `cargo xtask gen-tests`\", error);\n     }\n }\n ", "previous_filename": "crates/ra_tools/tests/cli.rs"}, {"sha": "fe5852bc62811d8fe9b33c6ba27718a3aaed0acc", "filename": "xtask/tests/tidy-tests/docs.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "patch": "@@ -5,7 +5,7 @@ use std::path::Path;\n \n use walkdir::{DirEntry, WalkDir};\n \n-use ra_tools::project_root;\n+use xtask::project_root;\n \n fn is_exclude_dir(p: &Path) -> bool {\n     let exclude_dirs = [\"tests\", \"test_data\"];", "previous_filename": "crates/ra_tools/tests/docs.rs"}, {"sha": "56d1318d6251449773895ee57190bde4e3060905", "filename": "xtask/tests/tidy-tests/main.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Ftests%2Ftidy-tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585/xtask%2Ftests%2Ftidy-tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy-tests%2Fmain.rs?ref=6b9bd7bdd2712a7e85d6bfc70c231dbe36c2e585", "previous_filename": "crates/ra_tools/tests/main.rs"}]}