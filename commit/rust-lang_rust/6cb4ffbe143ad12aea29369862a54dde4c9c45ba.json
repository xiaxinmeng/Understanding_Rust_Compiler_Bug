{"sha": "6cb4ffbe143ad12aea29369862a54dde4c9c45ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYjRmZmJlMTQzYWQxMmFlYTI5MzY5ODYyYTU0ZGRlNGM5YzQ1YmE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-02-19T23:38:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-02-21T16:32:17Z"}, "message": "reintroduce `commit_if_ok` call into `higher_ranked_sub`", "tree": {"sha": "b1c03897e8a774bc9b5b4cd689ac358d128ec7b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1c03897e8a774bc9b5b4cd689ac358d128ec7b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cb4ffbe143ad12aea29369862a54dde4c9c45ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb4ffbe143ad12aea29369862a54dde4c9c45ba", "html_url": "https://github.com/rust-lang/rust/commit/6cb4ffbe143ad12aea29369862a54dde4c9c45ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cb4ffbe143ad12aea29369862a54dde4c9c45ba/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cd286bac2122d1369c611dff29ad00c2835e7dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cd286bac2122d1369c611dff29ad00c2835e7dd", "html_url": "https://github.com/rust-lang/rust/commit/3cd286bac2122d1369c611dff29ad00c2835e7dd"}], "stats": {"total": 51, "additions": 25, "deletions": 26}, "files": [{"sha": "28bcae424809015064d3dac77e1b3ac721b7aeca", "filename": "src/librustc/infer/higher_ranked/mod.rs", "status": "modified", "additions": 25, "deletions": 26, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/6cb4ffbe143ad12aea29369862a54dde4c9c45ba/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb4ffbe143ad12aea29369862a54dde4c9c45ba/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=6cb4ffbe143ad12aea29369862a54dde4c9c45ba", "patch": "@@ -29,27 +29,29 @@ impl<'a, 'gcx, 'tcx> CombineFields<'a, 'gcx, 'tcx> {\n \n         let span = self.trace.cause.span;\n \n-        // First, we instantiate each bound region in the supertype with a\n-        // fresh placeholder region.\n-        let (b_prime, _) = self.infcx.replace_bound_vars_with_placeholders(b);\n+        return self.infcx.commit_if_ok(|_snapshot| {\n+            // First, we instantiate each bound region in the supertype with a\n+            // fresh placeholder region.\n+            let (b_prime, _) = self.infcx.replace_bound_vars_with_placeholders(b);\n \n-        // Next, we instantiate each bound region in the subtype\n-        // with a fresh region variable. These region variables --\n-        // but no other pre-existing region variables -- can name\n-        // the placeholders.\n-        let (a_prime, _) =\n-            self.infcx\n-                .replace_bound_vars_with_fresh_vars(span, HigherRankedType, a);\n+            // Next, we instantiate each bound region in the subtype\n+            // with a fresh region variable. These region variables --\n+            // but no other pre-existing region variables -- can name\n+            // the placeholders.\n+            let (a_prime, _) =\n+                self.infcx\n+                    .replace_bound_vars_with_fresh_vars(span, HigherRankedType, a);\n \n-        debug!(\"a_prime={:?}\", a_prime);\n-        debug!(\"b_prime={:?}\", b_prime);\n+            debug!(\"a_prime={:?}\", a_prime);\n+            debug!(\"b_prime={:?}\", b_prime);\n \n-        // Compare types now that bound regions have been replaced.\n-        let result = self.sub(a_is_expected).relate(&a_prime, &b_prime)?;\n+            // Compare types now that bound regions have been replaced.\n+            let result = self.sub(a_is_expected).relate(&a_prime, &b_prime)?;\n \n-        debug!(\"higher_ranked_sub: OK result={:?}\", result);\n+            debug!(\"higher_ranked_sub: OK result={:?}\", result);\n \n-        Ok(ty::Binder::bind(result))\n+            Ok(ty::Binder::bind(result))\n+        });\n     }\n }\n \n@@ -72,10 +74,10 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     /// [rustc guide]: https://rust-lang.github.io/rustc-guide/traits/hrtb.html\n     pub fn replace_bound_vars_with_placeholders<T>(\n         &self,\n-        binder: &ty::Binder<T>\n+        binder: &ty::Binder<T>,\n     ) -> (T, PlaceholderMap<'tcx>)\n     where\n-        T: TypeFoldable<'tcx>\n+        T: TypeFoldable<'tcx>,\n     {\n         let next_universe = self.create_next_universe();\n \n@@ -97,14 +99,11 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n \n         debug!(\n             \"replace_bound_vars_with_placeholders(\\\n-                next_universe={:?}, \\\n-                binder={:?}, \\\n-                result={:?}, \\\n-                map={:?})\",\n-            next_universe,\n-            binder,\n-            result,\n-            map,\n+             next_universe={:?}, \\\n+             binder={:?}, \\\n+             result={:?}, \\\n+             map={:?})\",\n+            next_universe, binder, result, map,\n         );\n \n         (result, map)"}]}