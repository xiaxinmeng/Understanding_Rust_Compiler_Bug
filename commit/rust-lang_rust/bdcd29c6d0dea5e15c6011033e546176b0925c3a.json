{"sha": "bdcd29c6d0dea5e15c6011033e546176b0925c3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkY2QyOWM2ZDBkZWE1ZTE1YzYwMTEwMzNlNTQ2MTc2YjA5MjVjM2E=", "commit": {"author": {"name": "chitra", "email": "chitra@chitra-HP-Pavilion-g6-Notebook-PC.(none)", "date": "2013-10-18T18:48:17Z"}, "committer": {"name": "chitra", "email": "chitra@chitra-HP-Pavilion-g6-Notebook-PC.(none)", "date": "2013-10-18T18:48:17Z"}, "message": "Make fields in std::comm private", "tree": {"sha": "51561a4c7a42dd30e1620cb6e1d7e2a7307b50fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51561a4c7a42dd30e1620cb6e1d7e2a7307b50fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdcd29c6d0dea5e15c6011033e546176b0925c3a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdcd29c6d0dea5e15c6011033e546176b0925c3a", "html_url": "https://github.com/rust-lang/rust/commit/bdcd29c6d0dea5e15c6011033e546176b0925c3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdcd29c6d0dea5e15c6011033e546176b0925c3a/comments", "author": null, "committer": null, "parents": [{"sha": "fa03c9454640032bb1b6a33f996eee0f39e2b946", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa03c9454640032bb1b6a33f996eee0f39e2b946", "html_url": "https://github.com/rust-lang/rust/commit/fa03c9454640032bb1b6a33f996eee0f39e2b946"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "7212635233faf8426e24d8e7448b13cc5e85be19", "filename": "src/libstd/comm.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bdcd29c6d0dea5e15c6011033e546176b0925c3a/src%2Flibstd%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdcd29c6d0dea5e15c6011033e546176b0925c3a/src%2Flibstd%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm.rs?ref=bdcd29c6d0dea5e15c6011033e546176b0925c3a", "patch": "@@ -50,16 +50,16 @@ pub trait Peekable<T> {\n     fn peek(&self) -> bool;\n }\n \n-pub struct PortOne<T> { x: rtcomm::PortOne<T> }\n-pub struct ChanOne<T> { x: rtcomm::ChanOne<T> }\n+pub struct PortOne<T> { priv x: rtcomm::PortOne<T> }\n+pub struct ChanOne<T> { priv x: rtcomm::ChanOne<T> }\n \n pub fn oneshot<T: Send>() -> (PortOne<T>, ChanOne<T>) {\n     let (p, c) = rtcomm::oneshot();\n     (PortOne { x: p }, ChanOne { x: c })\n }\n \n-pub struct Port<T> { x: rtcomm::Port<T> }\n-pub struct Chan<T> { x: rtcomm::Chan<T> }\n+pub struct Port<T> { priv x: rtcomm::Port<T> }\n+pub struct Chan<T> { priv x: rtcomm::Chan<T> }\n \n pub fn stream<T: Send>() -> (Port<T>, Chan<T>) {\n     let (p, c) = rtcomm::stream();\n@@ -153,7 +153,7 @@ impl<T: Send> Peekable<T> for Port<T> {\n }\n \n \n-pub struct SharedChan<T> { x: rtcomm::SharedChan<T> }\n+pub struct SharedChan<T> { priv x: rtcomm::SharedChan<T> }\n \n impl<T: Send> SharedChan<T> {\n     pub fn new(c: Chan<T>) -> SharedChan<T> {\n@@ -195,7 +195,7 @@ impl<T> Clone for SharedChan<T> {\n     }\n }\n \n-pub struct SharedPort<T> { x: rtcomm::SharedPort<T> }\n+pub struct SharedPort<T> { priv x: rtcomm::SharedPort<T> }\n \n impl<T: Send> SharedPort<T> {\n     pub fn new(p: Port<T>) -> SharedPort<T> {"}]}