{"sha": "35ee6bd59b20954bfee4e8c02ea16fedb6faca04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZWU2YmQ1OWIyMDk1NGJmZWU0ZThjMDJlYTE2ZmVkYjZmYWNhMDQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-24T10:26:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-24T10:26:07Z"}, "message": "panicking comments", "tree": {"sha": "aa411bae5dbd0dc97741e05e99d277a352ee90cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa411bae5dbd0dc97741e05e99d277a352ee90cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35ee6bd59b20954bfee4e8c02ea16fedb6faca04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35ee6bd59b20954bfee4e8c02ea16fedb6faca04", "html_url": "https://github.com/rust-lang/rust/commit/35ee6bd59b20954bfee4e8c02ea16fedb6faca04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35ee6bd59b20954bfee4e8c02ea16fedb6faca04/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f", "html_url": "https://github.com/rust-lang/rust/commit/e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9940303ff32e729c5405fdc78fed734cd42de9b3", "filename": "src/libcore/panicking.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35ee6bd59b20954bfee4e8c02ea16fedb6faca04/src%2Flibcore%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35ee6bd59b20954bfee4e8c02ea16fedb6faca04/src%2Flibcore%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanicking.rs?ref=35ee6bd59b20954bfee4e8c02ea16fedb6faca04", "patch": "@@ -7,7 +7,7 @@\n //!\n //! ```\n //! # use std::fmt;\n-//! fn panic_impl(fmt: fmt::Arguments, file_line_col: &(&'static str, u32, u32)) -> !\n+//! fn panic_impl(pi: &PanicInfo<'_>) -> !\n //! # { loop {} }\n //! ```\n //!\n@@ -35,7 +35,7 @@ use crate::panic::{Location, PanicInfo};\n // never inline unless panic_immediate_abort to avoid code\n // bloat at the call sites as much as possible\n #[cfg_attr(not(feature=\"panic_immediate_abort\"),inline(never))]\n-#[lang = \"panic\"]\n+#[lang = \"panic\"] // needed by codegen for panic on overflow and other `Assert` MIR terminators\n pub fn panic(expr: &str, location: &Location<'_>) -> ! {\n     if cfg!(feature = \"panic_immediate_abort\") {\n         unsafe { super::intrinsics::abort() }\n@@ -52,7 +52,7 @@ pub fn panic(expr: &str, location: &Location<'_>) -> ! {\n \n #[cold]\n #[cfg_attr(not(feature=\"panic_immediate_abort\"),inline(never))]\n-#[lang = \"panic_bounds_check\"]\n+#[lang = \"panic_bounds_check\"] // needed by codegen for panic on OOB array/slice access\n fn panic_bounds_check(location: &Location<'_>, index: usize, len: usize) -> ! {\n     if cfg!(feature = \"panic_immediate_abort\") {\n         unsafe { super::intrinsics::abort() }"}, {"sha": "62cd190cf7ae7a8e8682e1e618517dd5ee4074e6", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35ee6bd59b20954bfee4e8c02ea16fedb6faca04/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35ee6bd59b20954bfee4e8c02ea16fedb6faca04/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=35ee6bd59b20954bfee4e8c02ea16fedb6faca04", "patch": "@@ -294,7 +294,7 @@ pub fn panicking() -> bool {\n     update_panic_count(0) != 0\n }\n \n-/// Entry point of panic from the libcore crate.\n+/// Entry point of panic from the libcore crate (`panic_impl` lang item).\n #[cfg(not(test))]\n #[panic_handler]\n #[unwind(allowed)]\n@@ -380,7 +380,7 @@ fn continue_panic_fmt(info: &PanicInfo<'_>) -> ! {\n #[unstable(feature = \"libstd_sys_internals\",\n            reason = \"used by the panic! macro\",\n            issue = \"0\")]\n-#[cfg_attr(not(test), lang = \"begin_panic\")]\n+#[cfg_attr(not(test), lang = \"begin_panic\")] // lang item for CTFE panic support\n // never inline unless panic_immediate_abort to avoid code\n // bloat at the call sites as much as possible\n #[cfg_attr(not(feature=\"panic_immediate_abort\"),inline(never))]"}]}