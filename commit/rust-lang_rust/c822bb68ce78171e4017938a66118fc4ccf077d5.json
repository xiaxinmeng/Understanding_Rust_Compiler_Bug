{"sha": "c822bb68ce78171e4017938a66118fc4ccf077d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MjJiYjY4Y2U3ODE3MWU0MDE3OTM4YTY2MTE4ZmM0Y2NmMDc3ZDU=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-08-17T17:27:12Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-08-17T17:27:12Z"}, "message": "Fix missing match arm false error on unknown type", "tree": {"sha": "a73e2ad5d033c6f53357d3895b73b6a810e4a94c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a73e2ad5d033c6f53357d3895b73b6a810e4a94c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c822bb68ce78171e4017938a66118fc4ccf077d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c822bb68ce78171e4017938a66118fc4ccf077d5", "html_url": "https://github.com/rust-lang/rust/commit/c822bb68ce78171e4017938a66118fc4ccf077d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c822bb68ce78171e4017938a66118fc4ccf077d5/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2eaf79cfbb447156151cb5435eff5f14f41c40f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eaf79cfbb447156151cb5435eff5f14f41c40f7", "html_url": "https://github.com/rust-lang/rust/commit/2eaf79cfbb447156151cb5435eff5f14f41c40f7"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "278a4b94726aca5bcd31aaf860a3b99a7d94019f", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c822bb68ce78171e4017938a66118fc4ccf077d5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c822bb68ce78171e4017938a66118fc4ccf077d5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=c822bb68ce78171e4017938a66118fc4ccf077d5", "patch": "@@ -223,10 +223,10 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n             db.body_with_source_map(self.owner.into());\n \n         let match_expr_ty = match infer.type_of_expr.get(match_expr) {\n-            Some(ty) => ty,\n             // If we can't resolve the type of the match expression\n             // we cannot perform exhaustiveness checks.\n-            None => return,\n+            None | Some(Ty::Unknown) => return,\n+            Some(ty) => ty,\n         };\n \n         let cx = MatchCheckCtx { match_expr, body, infer: infer.clone(), db };"}, {"sha": "5bd03f2ac00d1c6046ded5f1960a0c8773c3d4b0", "filename": "crates/hir_ty/src/diagnostics/match_check.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c822bb68ce78171e4017938a66118fc4ccf077d5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c822bb68ce78171e4017938a66118fc4ccf077d5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs?ref=c822bb68ce78171e4017938a66118fc4ccf077d5", "patch": "@@ -1342,12 +1342,10 @@ fn panic(a: Category, b: Category) {\n enum Option<T> { Some(T), None }\n \n fn main() {\n-    // FIXME: This is a false positive, as the `Never` type is not known here.\n     // `Never` is deliberately not defined so that it's an uninferred type.\n     match Option::<Never>::None {\n         None => (),\n         Some(never) => match never {},\n-        //                   ^^^^^ Missing match arm\n     }\n }\n \"#,"}]}