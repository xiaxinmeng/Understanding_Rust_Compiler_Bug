{"sha": "e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a", "node_id": "C_kwDOAAsO6NoAKGUwYTJlMmQ4OTIyNTJlZDZlNjI2NGNlNWNjOGRhZTNkZDI4MDBmNGE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-21T12:31:48Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-21T12:31:48Z"}, "message": "Deduplicate two functions that would soon have been three", "tree": {"sha": "63dd0711721d0f198d972d86c22e6b5777118804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63dd0711721d0f198d972d86c22e6b5777118804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a", "html_url": "https://github.com/rust-lang/rust/commit/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de00d1ac5247a02184ef7ad044f6521ade7e0cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de00d1ac5247a02184ef7ad044f6521ade7e0cc", "html_url": "https://github.com/rust-lang/rust/commit/1de00d1ac5247a02184ef7ad044f6521ade7e0cc"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "680dbf7037fad501467923c117155c71b818ccb7", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a", "patch": "@@ -717,27 +717,13 @@ impl<'cx, 'tcx> Resolver<'cx, 'tcx> {\n         Resolver { tcx: fcx.tcx, infcx: fcx, span, body, replaced_with_error: false }\n     }\n \n-    fn report_type_error(&self, t: Ty<'tcx>) {\n+    fn report_error(&self, p: impl Into<ty::GenericArg<'tcx>>) {\n         if !self.tcx.sess.has_errors().is_some() {\n             self.infcx\n                 .emit_inference_failure_err(\n                     Some(self.body.id()),\n                     self.span.to_span(self.tcx),\n-                    t.into(),\n-                    E0282,\n-                    false,\n-                )\n-                .emit();\n-        }\n-    }\n-\n-    fn report_const_error(&self, c: ty::Const<'tcx>) {\n-        if self.tcx.sess.has_errors().is_none() {\n-            self.infcx\n-                .emit_inference_failure_err(\n-                    Some(self.body.id()),\n-                    self.span.to_span(self.tcx),\n-                    c.into(),\n+                    p.into(),\n                     E0282,\n                     false,\n                 )\n@@ -782,7 +768,7 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Resolver<'cx, 'tcx> {\n             }\n             Err(_) => {\n                 debug!(\"Resolver::fold_ty: input type `{:?}` not fully resolvable\", t);\n-                self.report_type_error(t);\n+                self.report_error(t);\n                 self.replaced_with_error = true;\n                 self.tcx().ty_error()\n             }\n@@ -799,7 +785,7 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Resolver<'cx, 'tcx> {\n             Ok(ct) => self.tcx.erase_regions(ct),\n             Err(_) => {\n                 debug!(\"Resolver::fold_const: input const `{:?}` not fully resolvable\", ct);\n-                self.report_const_error(ct);\n+                self.report_error(ct);\n                 self.replaced_with_error = true;\n                 self.tcx().const_error(ct.ty())\n             }"}]}