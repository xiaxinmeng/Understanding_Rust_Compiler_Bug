{"sha": "93e5a74c87a5278d76050708bd59731c7f8fb5bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZTVhNzRjODdhNTI3OGQ3NjA1MDcwOGJkNTk3MzFjN2Y4ZmI1YmI=", "commit": {"author": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-07-19T22:09:12Z"}, "committer": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-07-21T19:59:57Z"}, "message": "Avoid repeated trait bounds in derived impls", "tree": {"sha": "5f8335670c4e232f71977d7e1c4a68dd96fb617d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f8335670c4e232f71977d7e1c4a68dd96fb617d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93e5a74c87a5278d76050708bd59731c7f8fb5bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93e5a74c87a5278d76050708bd59731c7f8fb5bb", "html_url": "https://github.com/rust-lang/rust/commit/93e5a74c87a5278d76050708bd59731c7f8fb5bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93e5a74c87a5278d76050708bd59731c7f8fb5bb/comments", "author": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a41178e8582001d7075d14699542e671c78badef", "url": "https://api.github.com/repos/rust-lang/rust/commits/a41178e8582001d7075d14699542e671c78badef", "html_url": "https://github.com/rust-lang/rust/commit/a41178e8582001d7075d14699542e671c78badef"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "8f9e0279b29a12262aef345d11302a89dd0e9498", "filename": "src/libsyntax/ext/deriving/generic/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/93e5a74c87a5278d76050708bd59731c7f8fb5bb/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e5a74c87a5278d76050708bd59731c7f8fb5bb/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs?ref=93e5a74c87a5278d76050708bd59731c7f8fb5bb", "patch": "@@ -188,6 +188,7 @@ pub use self::SubstructureFields::*;\n use self::StructType::*;\n \n use std::cell::RefCell;\n+use std::collections::HashSet;\n use std::vec;\n \n use abi::Abi;\n@@ -549,10 +550,20 @@ impl<'a> TraitDef<'a> {\n                 .map(|ty_param| ty_param.ident.name)\n                 .collect();\n \n+            let mut processed_field_types = HashSet::new();\n             for field_ty in field_tys {\n                 let tys = find_type_parameters(&*field_ty, &ty_param_names);\n \n                 for ty in tys {\n+                    // if we have already handled this type, skip it\n+                    if let ast::TyPath(_, ref p) = ty.node {\n+                        if p.segments.len() == 1\n+                            && ty_param_names.contains(&p.segments[0].identifier.name)\n+                            || processed_field_types.contains(&p.segments) {\n+                            continue;\n+                        };\n+                        processed_field_types.insert(p.segments.clone());\n+                    }\n                     let mut bounds: Vec<_> = self.additional_bounds.iter().map(|p| {\n                         cx.typarambound(p.to_path(cx, self.span, type_ident, generics))\n                     }).collect();"}]}