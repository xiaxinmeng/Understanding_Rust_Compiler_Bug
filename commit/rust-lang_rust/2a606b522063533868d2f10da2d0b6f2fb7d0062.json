{"sha": "2a606b522063533868d2f10da2d0b6f2fb7d0062", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNjA2YjUyMjA2MzUzMzg2OGQyZjEwZGEyZDBiNmYyZmI3ZDAwNjI=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-05-14T17:24:31Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-05-29T16:18:49Z"}, "message": "Don't lint lifetime-only transmutes", "tree": {"sha": "4aaeab34fb2937aed3c4e34b15f985f740878d9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aaeab34fb2937aed3c4e34b15f985f740878d9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a606b522063533868d2f10da2d0b6f2fb7d0062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a606b522063533868d2f10da2d0b6f2fb7d0062", "html_url": "https://github.com/rust-lang/rust/commit/2a606b522063533868d2f10da2d0b6f2fb7d0062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a606b522063533868d2f10da2d0b6f2fb7d0062/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "400aab92325de2aa65a2c724c3b5f4337bca11c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/400aab92325de2aa65a2c724c3b5f4337bca11c0", "html_url": "https://github.com/rust-lang/rust/commit/400aab92325de2aa65a2c724c3b5f4337bca11c0"}], "stats": {"total": 47, "additions": 28, "deletions": 19}, "files": [{"sha": "cd9f5f754710e1d62291e6340a9adb964d9d3526", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/2a606b522063533868d2f10da2d0b6f2fb7d0062/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a606b522063533868d2f10da2d0b6f2fb7d0062/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=2a606b522063533868d2f10da2d0b6f2fb7d0062", "patch": "@@ -192,7 +192,7 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     pub TRANSMUTE_PTR_TO_PTR,\n     complexity,\n-    \"transmutes from a pointer to a reference type\"\n+    \"transmutes from a pointer to a pointer / a reference to a reference\"\n }\n \n pub struct Transmute;\n@@ -363,23 +363,26 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Transmute {\n                                             }\n                                         )\n                                     } else {\n-                                        span_lint_and_then(\n-                                            cx,\n-                                            TRANSMUTE_PTR_TO_PTR,\n-                                            e.span,\n-                                            \"transmute from a reference to a reference\",\n-                                            |db| if let Some(arg) = sugg::Sugg::hir_opt(cx, &args[0]) {\n-                                                let ty_from_and_mut = ty::TypeAndMut { ty: ty_from, mutbl: from_mutbl };\n-                                                let ty_to_and_mut = ty::TypeAndMut { ty: ty_to, mutbl: to_mutbl };\n-                                                let sugg_paren = arg.as_ty(cx.tcx.mk_ptr(ty_from_and_mut)).as_ty(cx.tcx.mk_ptr(ty_to_and_mut));\n-                                                let sugg = if to_mutbl == Mutability::MutMutable {\n-                                                    sugg_paren.mut_addr_deref()\n-                                                } else {\n-                                                    sugg_paren.addr_deref()\n-                                                };\n-                                                db.span_suggestion(e.span, \"try\", sugg.to_string());\n-                                            },\n-                                        )\n+                                        // In this case they differ only in lifetime\n+                                        if ty_from != ty_to {\n+                                            span_lint_and_then(\n+                                                cx,\n+                                                TRANSMUTE_PTR_TO_PTR,\n+                                                e.span,\n+                                                \"transmute from a reference to a reference\",\n+                                                |db| if let Some(arg) = sugg::Sugg::hir_opt(cx, &args[0]) {\n+                                                    let ty_from_and_mut = ty::TypeAndMut { ty: ty_from, mutbl: from_mutbl };\n+                                                    let ty_to_and_mut = ty::TypeAndMut { ty: ty_to, mutbl: to_mutbl };\n+                                                    let sugg_paren = arg.as_ty(cx.tcx.mk_ptr(ty_from_and_mut)).as_ty(cx.tcx.mk_ptr(ty_to_and_mut));\n+                                                    let sugg = if to_mutbl == Mutability::MutMutable {\n+                                                        sugg_paren.mut_addr_deref()\n+                                                    } else {\n+                                                        sugg_paren.addr_deref()\n+                                                    };\n+                                                    db.span_suggestion(e.span, \"try\", sugg.to_string());\n+                                                },\n+                                            )\n+                                        }\n                                     }\n                                 }\n                             },"}, {"sha": "ff389ad20a8c9bbfb82cc8096c01c7b177476315", "filename": "tests/ui/transmute.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a606b522063533868d2f10da2d0b6f2fb7d0062/tests%2Fui%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a606b522063533868d2f10da2d0b6f2fb7d0062/tests%2Fui%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.rs?ref=2a606b522063533868d2f10da2d0b6f2fb7d0062", "patch": "@@ -152,11 +152,17 @@ fn transmute_ptr_to_ptr() {\n         let _: &f32 = std::mem::transmute(&1u32);\n         let _: &mut f32 = std::mem::transmute(&mut 1u32);\n     }\n-    // These should be fine\n+    // These should be fine:\n+    // Recommendations for solving the above; if these break we need to update\n+    // those suggestions\n     let _ = ptr as *const f32;\n     let _ = mut_ptr as *mut f32;\n     let _ = unsafe { &*(&1u32 as *const u32 as *const f32) };\n     let _ = unsafe { &mut *(&mut 1u32 as *mut u32 as *mut f32) };\n+    // This is just modifying the lifetime, and is one of the recommended uses\n+    // of transmute\n+    let n = 1u32;\n+    let _ = unsafe { std::mem::transmute::<&'_ u32, &'static u32>(&n) };\n }\n \n fn main() { }"}]}