{"sha": "50b802ade0d9aecf3a781c98c8f051b3714db3ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYjgwMmFkZTBkOWFlY2YzYTc4MWM5OGM4ZjA1MWIzNzE0ZGIzZWE=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-19T05:42:53Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-19T19:00:30Z"}, "message": "Add error explanations for E0185, E0186.", "tree": {"sha": "8785c27fad0fd9efbe655d7ecbb8b78b3c140c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8785c27fad0fd9efbe655d7ecbb8b78b3c140c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50b802ade0d9aecf3a781c98c8f051b3714db3ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50b802ade0d9aecf3a781c98c8f051b3714db3ea", "html_url": "https://github.com/rust-lang/rust/commit/50b802ade0d9aecf3a781c98c8f051b3714db3ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50b802ade0d9aecf3a781c98c8f051b3714db3ea/comments", "author": null, "committer": null, "parents": [{"sha": "35d979d8f8bb63b6063e30954c7c71ddf863b380", "url": "https://api.github.com/repos/rust-lang/rust/commits/35d979d8f8bb63b6063e30954c7c71ddf863b380", "html_url": "https://github.com/rust-lang/rust/commit/35d979d8f8bb63b6063e30954c7c71ddf863b380"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "549478e4153af69c66a32d53a8ab665e8036214d", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 42, "deletions": 2, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/50b802ade0d9aecf3a781c98c8f051b3714db3ea/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50b802ade0d9aecf3a781c98c8f051b3714db3ea/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=50b802ade0d9aecf3a781c98c8f051b3714db3ea", "patch": "@@ -443,6 +443,48 @@ it has been disabled for now.\n [iss20126]: https://github.com/rust-lang/rust/issues/20126\n \"##,\n \n+E0185: r##\"\n+An associated function for a trait was defined to be static, but an\n+implementation of the trait declared the same function to be a method (i.e. to\n+take a `self` parameter).\n+\n+Here's an example of this error:\n+\n+```\n+trait Foo {\n+    fn foo();\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    // error, method `foo` has a `&self` declaration in the impl, but not in\n+    // the trait\n+    fn foo(&self) {}\n+}\n+\"##,\n+\n+E0186: r##\"\n+An associated function for a trait was defined to be a method (i.e. to take a\n+`self` parameter), but an implementation of the trait declared the same function\n+to be static.\n+\n+Here's an example of this error:\n+\n+```\n+trait Foo {\n+    fn foo(&self);\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    // error, method `foo` has a `&self` declaration in the trait, but not in\n+    // the impl\n+    fn foo() {}\n+}\n+\"##,\n+\n E0197: r##\"\n Inherent implementations (one that do not implement a trait but provide\n methods associated with a type) are always safe because they are not\n@@ -828,8 +870,6 @@ register_diagnostics! {\n     E0174, // explicit use of unboxed closure methods are experimental\n     E0182,\n     E0183,\n-    E0185,\n-    E0186,\n     E0187, // can't infer the kind of the closure\n     E0188, // types differ in mutability\n     E0189, // can only cast a boxed pointer to a boxed object"}]}