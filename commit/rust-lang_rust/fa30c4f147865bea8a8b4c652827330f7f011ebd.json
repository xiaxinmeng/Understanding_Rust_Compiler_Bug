{"sha": "fa30c4f147865bea8a8b4c652827330f7f011ebd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMzBjNGYxNDc4NjViZWE4YThiNGM2NTI4MjczMzBmN2YwMTFlYmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-18T22:31:21Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-18T22:31:21Z"}, "message": "rollup merge of #21886: dotdash/fast_slice_iter\n\nThe data pointer used in the slice is never null, using assume() to tell\nLLVM about it gets rid of various unneeded null checks when iterating\nover the slice.\n\nSince the snapshot compiler is still using an older LLVM version, omit\nthe call in stage0, because compile times explode otherwise.\n\nBenchmarks from #18193\n````\nrunning 5 tests\ntest _range    ... bench:     33329 ns/iter (+/- 417)\ntest assembly  ... bench:     33299 ns/iter (+/- 58)\ntest enumerate ... bench:     33318 ns/iter (+/- 83)\ntest iter      ... bench:     33311 ns/iter (+/- 130)\ntest position  ... bench:     33300 ns/iter (+/- 47)\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 5 measured\n````\n\nFixes #18193", "tree": {"sha": "28ada1feea39cb5f455b30ab44d0438600020909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28ada1feea39cb5f455b30ab44d0438600020909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa30c4f147865bea8a8b4c652827330f7f011ebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa30c4f147865bea8a8b4c652827330f7f011ebd", "html_url": "https://github.com/rust-lang/rust/commit/fa30c4f147865bea8a8b4c652827330f7f011ebd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa30c4f147865bea8a8b4c652827330f7f011ebd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5", "html_url": "https://github.com/rust-lang/rust/commit/dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5"}, {"sha": "7412d1b2eff1c77241c54fa39508e7049d71ec7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7412d1b2eff1c77241c54fa39508e7049d71ec7e", "html_url": "https://github.com/rust-lang/rust/commit/7412d1b2eff1c77241c54fa39508e7049d71ec7e"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "25226afd8c9b72b771c049b1e757a25fcd51170e", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fa30c4f147865bea8a8b4c652827330f7f011ebd/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa30c4f147865bea8a8b4c652827330f7f011ebd/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=fa30c4f147865bea8a8b4c652827330f7f011ebd", "patch": "@@ -56,6 +56,7 @@ use core::cmp::{Ordering};\n use core::default::Default;\n use core::fmt;\n use core::hash::{self, Hash};\n+use core::intrinsics::assume;\n use core::iter::{repeat, FromIterator, IntoIterator};\n use core::marker::{self, ContravariantLifetime, InvariantType};\n use core::mem;\n@@ -1587,8 +1588,12 @@ impl<T> AsSlice<T> for Vec<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn as_slice(&self) -> &[T] {\n         unsafe {\n+            let p = *self.ptr;\n+            if cfg!(not(stage0)) { // NOTE remove cfg after next snapshot\n+                assume(p != 0 as *mut T);\n+            }\n             mem::transmute(RawSlice {\n-                data: *self.ptr,\n+                data: p,\n                 len: self.len\n             })\n         }"}, {"sha": "2779e67c74300dff2efa4eecdc220bc73681910e", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa30c4f147865bea8a8b4c652827330f7f011ebd/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa30c4f147865bea8a8b4c652827330f7f011ebd/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=fa30c4f147865bea8a8b4c652827330f7f011ebd", "patch": "@@ -303,7 +303,7 @@ impl<T> PtrExt for *const T {\n \n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    fn is_null(self) -> bool { self as usize == 0 }\n+    fn is_null(self) -> bool { self == 0 as *const T }\n \n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -330,7 +330,7 @@ impl<T> PtrExt for *mut T {\n \n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    fn is_null(self) -> bool { self as usize == 0 }\n+    fn is_null(self) -> bool { self == 0 as *mut T }\n \n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}