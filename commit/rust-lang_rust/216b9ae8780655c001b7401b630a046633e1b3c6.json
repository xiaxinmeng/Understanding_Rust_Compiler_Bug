{"sha": "216b9ae8780655c001b7401b630a046633e1b3c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNmI5YWU4NzgwNjU1YzAwMWI3NDAxYjYzMGEwNDY2MzNlMWIzYzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-13T12:13:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-13T12:13:37Z"}, "message": "be explicit that mem::uninitialized is the same as MaybeUninit::uninit().assume_init()", "tree": {"sha": "6f3ad35cde3f4779fb337d4a57d145db824ff4f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f3ad35cde3f4779fb337d4a57d145db824ff4f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/216b9ae8780655c001b7401b630a046633e1b3c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/216b9ae8780655c001b7401b630a046633e1b3c6", "html_url": "https://github.com/rust-lang/rust/commit/216b9ae8780655c001b7401b630a046633e1b3c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/216b9ae8780655c001b7401b630a046633e1b3c6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9409c208a9a70eb6194c7502979843f42d6fed1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9409c208a9a70eb6194c7502979843f42d6fed1a", "html_url": "https://github.com/rust-lang/rust/commit/9409c208a9a70eb6194c7502979843f42d6fed1a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "ec926aa6c2308842d1a8028e5258865099f683ed", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/216b9ae8780655c001b7401b630a046633e1b3c6/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216b9ae8780655c001b7401b630a046633e1b3c6/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=216b9ae8780655c001b7401b630a046633e1b3c6", "patch": "@@ -510,7 +510,9 @@ pub unsafe fn zeroed<T>() -> T {\n /// **This function is deprecated.** Use [`MaybeUninit<T>`] instead.\n ///\n /// The reason for deprecation is that the function basically cannot be used\n-/// correctly: [the Rust compiler assumes][inv] that values are properly initialized.\n+/// correctly: it has the same effect as [`MaybeUninit::uninit().assume_init()`][uninit].\n+/// As the [`assume_init` documentation][assume_init] explains,\n+/// [the Rust compiler assumes][inv] that values are properly initialized.\n /// As a consequence, calling e.g. `mem::uninitialized::<bool>()` causes immediate\n /// undefined behavior for returning a `bool` that is not definitely either `true`\n /// or `false`. Worse, truly uninitialized memory like what gets returned here\n@@ -521,6 +523,8 @@ pub unsafe fn zeroed<T>() -> T {\n /// until they are, it is advisable to avoid them.)\n ///\n /// [`MaybeUninit<T>`]: union.MaybeUninit.html\n+/// [uninit]: union.MaybeUninit.html#method.uninit\n+/// [assume_init]: union.MaybeUninit.html#method.assume_init\n /// [inv]: union.MaybeUninit.html#initialization-invariant\n #[inline]\n #[rustc_deprecated(since = \"1.39.0\", reason = \"use `mem::MaybeUninit` instead\")]"}]}