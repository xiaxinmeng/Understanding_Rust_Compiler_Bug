{"sha": "5243ae96fe6e82a6a03041d798fae59b5c0c3886", "node_id": "C_kwDOAAsO6NoAKDUyNDNhZTk2ZmU2ZTgyYTZhMDMwNDFkNzk4ZmFlNTliNWMwYzM4ODY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-08T07:04:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-08T08:16:59Z"}, "message": "bless cargo-miri output\n\nI think cargo has a bug here: https://github.com/rust-lang/cargo/issues/11191\nbut for now we bless its output so that we can keep CI green", "tree": {"sha": "dacc22d30607e6b9d91d7dabccb16cfa77881e2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dacc22d30607e6b9d91d7dabccb16cfa77881e2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5243ae96fe6e82a6a03041d798fae59b5c0c3886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5243ae96fe6e82a6a03041d798fae59b5c0c3886", "html_url": "https://github.com/rust-lang/rust/commit/5243ae96fe6e82a6a03041d798fae59b5c0c3886", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5243ae96fe6e82a6a03041d798fae59b5c0c3886/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58b13b7b882da8785fbadada06a2c5dc714cf6e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/58b13b7b882da8785fbadada06a2c5dc714cf6e8", "html_url": "https://github.com/rust-lang/rust/commit/58b13b7b882da8785fbadada06a2c5dc714cf6e8"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "7ad51520a4287e97758b8c6306066303f5983e66", "filename": "src/tools/miri/README.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FREADME.md?ref=5243ae96fe6e82a6a03041d798fae59b5c0c3886", "patch": "@@ -435,11 +435,10 @@ Moreover, Miri recognizes some environment variables:\n   purpose.\n * `MIRI_NO_STD` (recognized by `cargo miri` and the test suite) makes sure that the target's\n   sysroot is built without libstd. This allows testing and running no_std programs.\n-* `MIRI_BLESS` (recognized by the test suite) overwrite all `stderr` and `stdout` files\n-  instead of checking whether the output matches.\n-* `MIRI_SKIP_UI_CHECKS` (recognized by the test suite) don't check whether the\n-  `stderr` or `stdout` files match the actual output. Useful for the rustc test suite\n-  which has subtle differences that we don't care about.\n+* `MIRI_BLESS` (recognized by the test suite and `cargo-miri-test/run-test.py`): overwrite all\n+  `stderr` and `stdout` files instead of checking whether the output matches.\n+* `MIRI_SKIP_UI_CHECKS` (recognized by the test suite): don't check whether the\n+  `stderr` or `stdout` files match the actual output.\n \n The following environment variables are *internal* and must not be used by\n anyone but Miri itself. They are used to communicate between different Miri"}, {"sha": "c611b9c44be9df792b13dede1a94fe61d262d680", "filename": "src/tools/miri/test-cargo-miri/run-test.py", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Frun-test.py?ref=5243ae96fe6e82a6a03041d798fae59b5c0c3886", "patch": "@@ -33,10 +33,13 @@ def normalize_stderr(str):\n     return str\n \n def check_output(actual, path, name):\n+    if 'MIRI_BLESS' in os.environ:\n+        open(path, mode='w').write(actual)\n+        return True\n     expected = open(path).read()\n     if expected == actual:\n         return True\n-    print(f\"{path} did not match reference!\")\n+    print(f\"{name} output did not match reference in {path}!\")\n     print(f\"--- BEGIN diff {name} ---\")\n     for text in difflib.unified_diff(expected.split(\"\\n\"), actual.split(\"\\n\")):\n         print(text)"}, {"sha": "39e1857060d041b5b489fc858c635b09588c3b12", "filename": "src/tools/miri/test-cargo-miri/test.filter.cross-target.stdout.ref", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Ftest.filter.cross-target.stdout.ref", "raw_url": "https://github.com/rust-lang/rust/raw/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Ftest.filter.cross-target.stdout.ref", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Ftest.filter.cross-target.stdout.ref?ref=5243ae96fe6e82a6a03041d798fae59b5c0c3886", "patch": "@@ -1,4 +1,9 @@\n \n+running 0 tests\n+\n+test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n+\n+\n running 0 tests\n \n test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out"}, {"sha": "39e1857060d041b5b489fc858c635b09588c3b12", "filename": "src/tools/miri/test-cargo-miri/test.filter.stdout.ref", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Ftest.filter.stdout.ref", "raw_url": "https://github.com/rust-lang/rust/raw/5243ae96fe6e82a6a03041d798fae59b5c0c3886/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Ftest.filter.stdout.ref", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftest-cargo-miri%2Ftest.filter.stdout.ref?ref=5243ae96fe6e82a6a03041d798fae59b5c0c3886", "patch": "@@ -1,4 +1,9 @@\n \n+running 0 tests\n+\n+test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n+\n+\n running 0 tests\n \n test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out\n@@ -10,8 +15,3 @@ test simple ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 5 filtered out\n \n-\n-running 0 tests\n-\n-test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in $TIME\n-"}]}