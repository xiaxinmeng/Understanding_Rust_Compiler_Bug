{"sha": "033924464fedf2c68abd4605930a81569a02cbf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMzkyNDQ2NGZlZGYyYzY4YWJkNDYwNTkzMGE4MTU2OWEwMmNiZjk=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-12T07:33:33Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-14T05:23:32Z"}, "message": "Deny bare trait objects in src/librustc_errors\n\nEnforce `#![deny(bare_trait_objects)]` in `src/librustc_errors`.", "tree": {"sha": "413ff941249d39d160da7ecfe186801010473d67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413ff941249d39d160da7ecfe186801010473d67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/033924464fedf2c68abd4605930a81569a02cbf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/033924464fedf2c68abd4605930a81569a02cbf9", "html_url": "https://github.com/rust-lang/rust/commit/033924464fedf2c68abd4605930a81569a02cbf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/033924464fedf2c68abd4605930a81569a02cbf9/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c946c2539e9690fab5dbf7ac217ec696ac263cf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c946c2539e9690fab5dbf7ac217ec696ac263cf3", "html_url": "https://github.com/rust-lang/rust/commit/c946c2539e9690fab5dbf7ac217ec696ac263cf3"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "d079102a4ba0003e4b362217075c0816b00a6180", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=033924464fedf2c68abd4605930a81569a02cbf9", "patch": "@@ -121,7 +121,7 @@ impl Diagnostic {\n     }\n \n     pub fn note_expected_found(&mut self,\n-                               label: &fmt::Display,\n+                               label: &dyn fmt::Display,\n                                expected: DiagnosticStyledString,\n                                found: DiagnosticStyledString)\n                                -> &mut Self\n@@ -130,11 +130,11 @@ impl Diagnostic {\n     }\n \n     pub fn note_expected_found_extra(&mut self,\n-                                     label: &fmt::Display,\n+                                     label: &dyn fmt::Display,\n                                      expected: DiagnosticStyledString,\n                                      found: DiagnosticStyledString,\n-                                     expected_extra: &fmt::Display,\n-                                     found_extra: &fmt::Display)\n+                                     expected_extra: &dyn fmt::Display,\n+                                     found_extra: &dyn fmt::Display)\n                                      -> &mut Self\n     {\n         let mut msg: Vec<_> = vec![(format!(\"expected {} `\", label), Style::NoStyle)];"}, {"sha": "9c7b7ea3395402dc715ba030e55d3706fb1064ac", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=033924464fedf2c68abd4605930a81569a02cbf9", "patch": "@@ -148,17 +148,17 @@ impl<'a> DiagnosticBuilder<'a> {\n     }\n \n     forward!(pub fn note_expected_found(&mut self,\n-                                        label: &fmt::Display,\n+                                        label: &dyn fmt::Display,\n                                         expected: DiagnosticStyledString,\n                                         found: DiagnosticStyledString)\n                                         -> &mut Self);\n \n     forward!(pub fn note_expected_found_extra(&mut self,\n-                                              label: &fmt::Display,\n+                                              label: &dyn fmt::Display,\n                                               expected: DiagnosticStyledString,\n                                               found: DiagnosticStyledString,\n-                                              expected_extra: &fmt::Display,\n-                                              found_extra: &fmt::Display)\n+                                              expected_extra: &dyn fmt::Display,\n+                                              found_extra: &dyn fmt::Display)\n                                               -> &mut Self);\n \n     forward!(pub fn note(&mut self, msg: &str) -> &mut Self);"}, {"sha": "2f71c3a7232de9238df1d7455488a17825322bc4", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=033924464fedf2c68abd4605930a81569a02cbf9", "patch": "@@ -148,7 +148,7 @@ impl EmitterWriter {\n         }\n     }\n \n-    pub fn new(dst: Box<Write + Send>,\n+    pub fn new(dst: Box<dyn Write + Send>,\n                code_map: Option<Lrc<CodeMapperDyn>>,\n                short_message: bool,\n                teach: bool)\n@@ -1469,13 +1469,13 @@ fn emit_to_destination(rendered_buffer: &Vec<Vec<StyledString>>,\n pub enum Destination {\n     Terminal(StandardStream),\n     Buffered(BufferWriter),\n-    Raw(Box<Write + Send>),\n+    Raw(Box<dyn Write + Send>),\n }\n \n pub enum WritableDst<'a> {\n     Terminal(&'a mut StandardStream),\n     Buffered(&'a mut BufferWriter, Buffer),\n-    Raw(&'a mut Box<Write + Send>),\n+    Raw(&'a mut Box<dyn Write + Send>),\n }\n \n impl Destination {"}, {"sha": "f18a7bd9136a209b9e994055a6ee76c20eca405b", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=033924464fedf2c68abd4605930a81569a02cbf9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![deny(bare_trait_objects)]\n+\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n@@ -110,7 +112,7 @@ pub struct SubstitutionPart {\n     pub snippet: String,\n }\n \n-pub type CodeMapperDyn = CodeMapper + sync::Send + sync::Sync;\n+pub type CodeMapperDyn = dyn CodeMapper + sync::Send + sync::Sync;\n \n pub trait CodeMapper {\n     fn lookup_char_pos(&self, pos: BytePos) -> Loc;\n@@ -270,7 +272,7 @@ pub struct Handler {\n     pub flags: HandlerFlags,\n \n     err_count: AtomicUsize,\n-    emitter: Lock<Box<Emitter + sync::Send>>,\n+    emitter: Lock<Box<dyn Emitter + sync::Send>>,\n     continue_after_error: LockCell<bool>,\n     delayed_span_bug: Lock<Option<Diagnostic>>,\n \n@@ -326,7 +328,7 @@ impl Handler {\n \n     pub fn with_emitter(can_emit_warnings: bool,\n                         treat_err_as_bug: bool,\n-                        e: Box<Emitter + sync::Send>)\n+                        e: Box<dyn Emitter + sync::Send>)\n                         -> Handler {\n         Handler::with_emitter_and_flags(\n             e,\n@@ -337,7 +339,8 @@ impl Handler {\n             })\n     }\n \n-    pub fn with_emitter_and_flags(e: Box<Emitter + sync::Send>, flags: HandlerFlags) -> Handler {\n+    pub fn with_emitter_and_flags(e: Box<dyn Emitter + sync::Send>, flags: HandlerFlags) -> Handler\n+    {\n         Handler {\n             flags,\n             err_count: AtomicUsize::new(0),"}, {"sha": "dff8d53986db598a204fba5e6c32b355e8bc71cb", "filename": "src/librustc_errors/lock.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Flock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033924464fedf2c68abd4605930a81569a02cbf9/src%2Flibrustc_errors%2Flock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flock.rs?ref=033924464fedf2c68abd4605930a81569a02cbf9", "patch": "@@ -23,7 +23,7 @@ use std::any::Any;\n \n #[cfg(windows)]\n #[allow(bad_style)]\n-pub fn acquire_global_lock(name: &str) -> Box<Any> {\n+pub fn acquire_global_lock(name: &str) -> Box<dyn Any> {\n     use std::ffi::CString;\n     use std::io;\n \n@@ -110,6 +110,6 @@ pub fn acquire_global_lock(name: &str) -> Box<Any> {\n }\n \n #[cfg(unix)]\n-pub fn acquire_global_lock(_name: &str) -> Box<Any> {\n+pub fn acquire_global_lock(_name: &str) -> Box<dyn Any> {\n     Box::new(())\n }"}]}