{"sha": "a24a020e6d926dffe6b472fc647978f92269504e", "node_id": "C_kwDOAAsO6NoAKGEyNGEwMjBlNmQ5MjZkZmZlNmI0NzJmYzY0Nzk3OGY5MjI2OTUwNGU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-18T16:32:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-18T16:32:41Z"}, "message": "Auto merge of #102418 - citrus-it:illumos-strip-debug, r=nagisa\n\nThe illumos linker does not support --strip-debug\n\nWhen building and testing rust 1.64.0 on illumos, we saw a large number of failing tests associated with:\n\n```\n   = note: ld: fatal: unrecognized option '--strip-debug'\n           ld: fatal: use the -z help option for usage information\n           collect2: error: ld returned 1 exit status\n```\n\nThe illumos linker does not support the `--strip-debug` option (although it does support `--strip-all`).", "tree": {"sha": "0a79b8937f297e7f7a93bff967d1c67762d33050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a79b8937f297e7f7a93bff967d1c67762d33050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a24a020e6d926dffe6b472fc647978f92269504e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a24a020e6d926dffe6b472fc647978f92269504e", "html_url": "https://github.com/rust-lang/rust/commit/a24a020e6d926dffe6b472fc647978f92269504e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a24a020e6d926dffe6b472fc647978f92269504e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e94827e5b09b5b098ea10d0c57a84892fc73b5a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e94827e5b09b5b098ea10d0c57a84892fc73b5a7", "html_url": "https://github.com/rust-lang/rust/commit/e94827e5b09b5b098ea10d0c57a84892fc73b5a7"}, {"sha": "f3deac2559e2354599db4c7a1c546fedd288ba9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3deac2559e2354599db4c7a1c546fedd288ba9f", "html_url": "https://github.com/rust-lang/rust/commit/f3deac2559e2354599db4c7a1c546fedd288ba9f"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "751007c7eb38c1da17f35271ff2768af50f4efd9", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a24a020e6d926dffe6b472fc647978f92269504e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24a020e6d926dffe6b472fc647978f92269504e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=a24a020e6d926dffe6b472fc647978f92269504e", "patch": "@@ -1011,16 +1011,36 @@ fn link_natively<'a>(\n \n     if sess.target.is_like_osx {\n         match (strip, crate_type) {\n-            (Strip::Debuginfo, _) => strip_symbols_in_osx(sess, &out_filename, Some(\"-S\")),\n+            (Strip::Debuginfo, _) => {\n+                strip_symbols_with_external_utility(sess, \"strip\", &out_filename, Some(\"-S\"))\n+            }\n             // Per the manpage, `-x` is the maximum safe strip level for dynamic libraries. (#93988)\n             (Strip::Symbols, CrateType::Dylib | CrateType::Cdylib | CrateType::ProcMacro) => {\n-                strip_symbols_in_osx(sess, &out_filename, Some(\"-x\"))\n+                strip_symbols_with_external_utility(sess, \"strip\", &out_filename, Some(\"-x\"))\n+            }\n+            (Strip::Symbols, _) => {\n+                strip_symbols_with_external_utility(sess, \"strip\", &out_filename, None)\n             }\n-            (Strip::Symbols, _) => strip_symbols_in_osx(sess, &out_filename, None),\n             (Strip::None, _) => {}\n         }\n     }\n \n+    if sess.target.os == \"illumos\" {\n+        // Many illumos systems will have both the native 'strip' utility and\n+        // the GNU one. Use the native version explicitly and do not rely on\n+        // what's in the path.\n+        let stripcmd = \"/usr/bin/strip\";\n+        match strip {\n+            // Always preserve the symbol table (-x).\n+            Strip::Debuginfo => {\n+                strip_symbols_with_external_utility(sess, stripcmd, &out_filename, Some(\"-x\"))\n+            }\n+            // Strip::Symbols is handled via the --strip-all linker option.\n+            Strip::Symbols => {}\n+            Strip::None => {}\n+        }\n+    }\n+\n     Ok(())\n }\n \n@@ -1032,8 +1052,13 @@ fn strip_value(sess: &Session) -> Strip {\n     }\n }\n \n-fn strip_symbols_in_osx<'a>(sess: &'a Session, out_filename: &Path, option: Option<&str>) {\n-    let mut cmd = Command::new(\"strip\");\n+fn strip_symbols_with_external_utility<'a>(\n+    sess: &'a Session,\n+    util: &str,\n+    out_filename: &Path,\n+    option: Option<&str>,\n+) {\n+    let mut cmd = Command::new(util);\n     if let Some(option) = option {\n         cmd.arg(option);\n     }\n@@ -1044,14 +1069,14 @@ fn strip_symbols_in_osx<'a>(sess: &'a Session, out_filename: &Path, option: Opti\n                 let mut output = prog.stderr.clone();\n                 output.extend_from_slice(&prog.stdout);\n                 sess.struct_warn(&format!(\n-                    \"stripping debug info with `strip` failed: {}\",\n-                    prog.status\n+                    \"stripping debug info with `{}` failed: {}\",\n+                    util, prog.status\n                 ))\n                 .note(&escape_string(&output))\n                 .emit();\n             }\n         }\n-        Err(e) => sess.fatal(&format!(\"unable to run `strip`: {}\", e)),\n+        Err(e) => sess.fatal(&format!(\"unable to run `{}`: {}\", util, e)),\n     }\n }\n "}, {"sha": "c49b19bdf0094b9b39663c59b35d96007a7e2d6b", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a24a020e6d926dffe6b472fc647978f92269504e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24a020e6d926dffe6b472fc647978f92269504e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=a24a020e6d926dffe6b472fc647978f92269504e", "patch": "@@ -610,7 +610,13 @@ impl<'a> Linker for GccLinker<'a> {\n         match strip {\n             Strip::None => {}\n             Strip::Debuginfo => {\n-                self.linker_arg(\"--strip-debug\");\n+                // The illumos linker does not support --strip-debug although\n+                // it does support --strip-all as a compatibility alias for -s.\n+                // The --strip-debug case is handled by running an external\n+                // `strip` utility as a separate step after linking.\n+                if self.sess.target.os != \"illumos\" {\n+                    self.linker_arg(\"--strip-debug\");\n+                }\n             }\n             Strip::Symbols => {\n                 self.linker_arg(\"--strip-all\");"}]}