{"sha": "a7fe4df04a095bad08a4158ce0cabed632a16828", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZmU0ZGYwNGEwOTViYWQwOGE0MTU4Y2UwY2FiZWQ2MzJhMTY4Mjg=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-08T08:35:58Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-15T10:58:33Z"}, "message": "update promoted_mir", "tree": {"sha": "36258fdc7bc764967b0c7e31471b0e4a9f1cf565", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36258fdc7bc764967b0c7e31471b0e4a9f1cf565"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7fe4df04a095bad08a4158ce0cabed632a16828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7fe4df04a095bad08a4158ce0cabed632a16828", "html_url": "https://github.com/rust-lang/rust/commit/a7fe4df04a095bad08a4158ce0cabed632a16828", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7fe4df04a095bad08a4158ce0cabed632a16828/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae80d7e012e6b0efcacc7b648690a9257445afd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae80d7e012e6b0efcacc7b648690a9257445afd7", "html_url": "https://github.com/rust-lang/rust/commit/ae80d7e012e6b0efcacc7b648690a9257445afd7"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "884067347a68d4c7253d4c81f26560e9c7dc62be", "filename": "src/librustc_middle/mir/query.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_middle%2Fmir%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_middle%2Fmir%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fquery.rs?ref=a7fe4df04a095bad08a4158ce0cabed632a16828", "patch": "@@ -1,5 +1,6 @@\n //! Values computed by queries that use MIR.\n \n+use crate::mir::{Body, Promoted};\n use crate::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n@@ -343,4 +344,15 @@ impl<'tcx> TyCtxt<'tcx> {\n             self.mir_const_qualif(def.did)\n         }\n     }\n+\n+    pub fn promoted_mir_of_opt_const_arg(\n+        self,\n+        def: ty::WithOptParam<DefId>,\n+    ) -> &'tcx IndexVec<Promoted, Body<'tcx>> {\n+        if let Some((did, param_did)) = def.as_const_arg() {\n+            self.promoted_mir_of_const_arg((did, param_did))\n+        } else {\n+            self.promoted_mir(def.did)\n+        }\n+    }\n }"}, {"sha": "8c4b8cd1c8f65f492fef491d0c5aa9ab69fb6f0f", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=a7fe4df04a095bad08a4158ce0cabed632a16828", "patch": "@@ -277,11 +277,11 @@ rustc_queries! {\n             cache_on_disk_if { key.is_local() }\n         }\n         query promoted_mir_of_const_arg(\n-            key: ty::WithOptParam<LocalDefId>\n+            key: (LocalDefId, DefId)\n         ) -> &'tcx IndexVec<mir::Promoted, mir::Body<'tcx>> {\n             desc {\n                 |tcx| \"optimizing promoted MIR for the const argument `{}`\",\n-                tcx.def_path_str(key.did.to_def_id()),\n+                tcx.def_path_str(key.0.to_def_id()),\n             }\n         }\n     }"}, {"sha": "cec7f1bcb9d9bb40ff3783293fc2cd87aa4e9edf", "filename": "src/librustc_mir/const_eval/eval_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs?ref=a7fe4df04a095bad08a4158ce0cabed632a16828", "patch": "@@ -360,7 +360,7 @@ pub fn const_eval_raw_provider<'tcx>(\n                     // deny-by-default lint\n                     _ => {\n                         if let Some(p) = cid.promoted {\n-                            let span = tcx.promoted_mir_of_const_arg(def)[p].span;\n+                            let span = tcx.promoted_mir_of_opt_const_arg(def.to_global())[p].span;\n                             if let err_inval!(ReferencedConstant) = err.error {\n                                 err.report_as_error(\n                                     tcx.at(span),"}, {"sha": "c59b7c98e982b022fbfc37919a9b6d5ec8fda533", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=a7fe4df04a095bad08a4158ce0cabed632a16828", "patch": "@@ -406,11 +406,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         }\n         trace!(\"load mir(instance={:?}, promoted={:?})\", instance, promoted);\n         if let Some(promoted) = promoted {\n-            return if let Some(def) = def.as_local() {\n-                Ok(&self.tcx.promoted_mir_of_const_arg(def)[promoted])\n-            } else {\n-                Ok(&self.tcx.promoted_mir(def.did)[promoted])\n-            };\n+            return Ok(&self.tcx.promoted_mir_of_opt_const_arg(def)[promoted]);\n         }\n         match instance {\n             ty::InstanceDef::Item(def) => {"}, {"sha": "f2d6efae0192a77d6eaeb566660f30df68871b83", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe4df04a095bad08a4158ce0cabed632a16828/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=a7fe4df04a095bad08a4158ce0cabed632a16828", "patch": "@@ -62,12 +62,8 @@ pub(crate) fn provide(providers: &mut Providers) {\n         promoted_mir: |tcx, def_id| {\n             promoted_mir(tcx, ty::WithOptParam::dummy(def_id.expect_local()))\n         },\n-        promoted_mir_of_const_arg: |tcx, def| {\n-            if def.param_did.is_none() {\n-                tcx.promoted_mir(def.did.to_def_id())\n-            } else {\n-                promoted_mir(tcx, def)\n-            }\n+        promoted_mir_of_const_arg: |tcx, (did, param_did)| {\n+            promoted_mir(tcx, ty::WithOptParam { did, param_did: Some(param_did) })\n         },\n         ..*providers\n     };\n@@ -525,8 +521,8 @@ fn promoted_mir<'tcx>(\n     def: ty::WithOptParam<LocalDefId>,\n ) -> &'tcx IndexVec<Promoted, Body<'tcx>> {\n     if def.param_did.is_none() {\n-        if let param_did @ Some(_) = tcx.opt_const_param_of(def.did) {\n-            return tcx.promoted_mir_of_const_arg(ty::WithOptParam { param_did, ..def });\n+        if let Some(param_did) = tcx.opt_const_param_of(def.did) {\n+            return tcx.promoted_mir_of_const_arg((def.did, param_did));\n         }\n     }\n "}]}