{"sha": "977b688144fb997fdf5dd5bdb587e4f357d853f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3N2I2ODgxNDRmYjk5N2ZkZjVkZDViZGI1ODdlNGYzNTdkODUzZjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-01T08:37:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-01T08:44:16Z"}, "message": "Don't fail tests when updating snapshot", "tree": {"sha": "f0fc4901a4fbe04cf07723d2f37eda8c7dc074cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0fc4901a4fbe04cf07723d2f37eda8c7dc074cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/977b688144fb997fdf5dd5bdb587e4f357d853f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/977b688144fb997fdf5dd5bdb587e4f357d853f2", "html_url": "https://github.com/rust-lang/rust/commit/977b688144fb997fdf5dd5bdb587e4f357d853f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/977b688144fb997fdf5dd5bdb587e4f357d853f2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "686e115e7397028a94bde57df1acf0f066651285", "url": "https://api.github.com/repos/rust-lang/rust/commits/686e115e7397028a94bde57df1acf0f066651285", "html_url": "https://github.com/rust-lang/rust/commit/686e115e7397028a94bde57df1acf0f066651285"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "d678b1817823d0d1418a46dcd264685ed7fae876", "filename": "crates/expect/src/lib.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/977b688144fb997fdf5dd5bdb587e4f357d853f2/crates%2Fexpect%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/977b688144fb997fdf5dd5bdb587e4f357d853f2/crates%2Fexpect%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fexpect%2Fsrc%2Flib.rs?ref=977b688144fb997fdf5dd5bdb587e4f357d853f2", "patch": "@@ -2,7 +2,7 @@\n //! https://github.com/rust-analyzer/rust-analyzer/pull/5101\n use std::{\n     collections::HashMap,\n-    env, fmt, fs,\n+    env, fmt, fs, mem,\n     ops::Range,\n     panic,\n     path::{Path, PathBuf},\n@@ -97,24 +97,25 @@ static RT: Lazy<Mutex<Runtime>> = Lazy::new(Default::default);\n impl Runtime {\n     fn fail(expect: &Expect, expected: &str, actual: &str) {\n         let mut rt = RT.lock().unwrap_or_else(|poisoned| poisoned.into_inner());\n-        let mut updated = \"\";\n         if update_expect() {\n-            updated = \" (updated)\";\n+            println!(\n+                \"\\x1b[1m\\x1b[92mupdating\\x1b[0m: {}:{}:{}\",\n+                expect.file, expect.line, expect.column\n+            );\n             rt.per_file\n                 .entry(expect.file)\n                 .or_insert_with(|| FileRuntime::new(expect))\n                 .update(expect, actual);\n+            return;\n         }\n-        let print_help = !rt.help_printed && !update_expect();\n-        rt.help_printed = true;\n-\n+        let print_help = !mem::replace(&mut rt.help_printed, true);\n         let help = if print_help { HELP } else { \"\" };\n \n         let diff = Changeset::new(actual, expected, \"\\n\");\n \n         println!(\n             \"\\n\n-\\x1b[1m\\x1b[91merror\\x1b[97m: expect test failed\\x1b[0m{}\n+\\x1b[1m\\x1b[91merror\\x1b[97m: expect test failed\\x1b[0m\n    \\x1b[1m\\x1b[34m-->\\x1b[0m {}:{}:{}\n {}\n \\x1b[1mExpect\\x1b[0m:\n@@ -132,7 +133,7 @@ impl Runtime {\n {}\n ----\n \",\n-            updated, expect.file, expect.line, expect.column, help, expected, actual, diff\n+            expect.file, expect.line, expect.column, help, expected, actual, diff\n         );\n         // Use resume_unwind instead of panic!() to prevent a backtrace, which is unnecessary noise.\n         panic::resume_unwind(Box::new(()));"}]}