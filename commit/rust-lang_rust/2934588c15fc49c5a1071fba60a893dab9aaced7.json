{"sha": "2934588c15fc49c5a1071fba60a893dab9aaced7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MzQ1ODhjMTVmYzQ5YzVhMTA3MWZiYTYwYTg5M2RhYjlhYWNlZDc=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2017-09-17T11:19:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-17T11:19:01Z"}, "message": "Rollup merge of #44381 - jessicah:haiku-ci, r=alexcrichton\n\nci: introduce haiku x86_64 builder", "tree": {"sha": "d00db80e239935b76c69d2872ec0bba6894efff4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d00db80e239935b76c69d2872ec0bba6894efff4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2934588c15fc49c5a1071fba60a893dab9aaced7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2934588c15fc49c5a1071fba60a893dab9aaced7", "html_url": "https://github.com/rust-lang/rust/commit/2934588c15fc49c5a1071fba60a893dab9aaced7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2934588c15fc49c5a1071fba60a893dab9aaced7/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc638b8635a1a6183d891f28d1edb573efb8e4d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc638b8635a1a6183d891f28d1edb573efb8e4d0", "html_url": "https://github.com/rust-lang/rust/commit/bc638b8635a1a6183d891f28d1edb573efb8e4d0"}, {"sha": "3443dd880114ea6ae67ccaac75a1854330168663", "url": "https://api.github.com/repos/rust-lang/rust/commits/3443dd880114ea6ae67ccaac75a1854330168663", "html_url": "https://github.com/rust-lang/rust/commit/3443dd880114ea6ae67ccaac75a1854330168663"}], "stats": {"total": 208, "additions": 208, "deletions": 0}, "files": [{"sha": "621976b5cbe3dd8db0d4ca0bb14974fcbaf60f72", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/Dockerfile", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2FDockerfile?ref=2934588c15fc49c5a1071fba60a893dab9aaced7", "patch": "@@ -0,0 +1,49 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  autoconf \\\n+  automake \\\n+  bison \\\n+  bzip2 \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n+  flex \\\n+  g++ \\\n+  gawk \\\n+  git \\\n+  libcurl4-openssl-dev \\\n+  libssl-dev \\\n+  make \\\n+  nasm \\\n+  pkg-config \\\n+  python2.7 \\\n+  sudo \\\n+  texinfo \\\n+  wget \\\n+  xz-utils \\\n+  zlib1g-dev\n+\n+COPY dist-x86_64-haiku/llvm-config.sh /bin/llvm-config-haiku\n+\n+ENV ARCH=x86_64\n+\n+WORKDIR /tmp\n+COPY dist-x86_64-haiku/build-toolchain.sh /tmp/\n+RUN /tmp/build-toolchain.sh $ARCH\n+\n+COPY dist-x86_64-haiku/fetch-packages.sh /tmp/\n+RUN /tmp/fetch-packages.sh\n+\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+ENV HOST=x86_64-unknown-haiku\n+ENV TARGET=target.$HOST\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOST --target=$HOST --disable-jemalloc \\\n+  --set=$TARGET.cc=x86_64-unknown-haiku-gcc \\\n+  --set=$TARGET.cxx=x86_64-unknown-haiku-g++ \\\n+  --set=$TARGET.llvm-config=/bin/llvm-config-haiku\n+ENV SCRIPT python2.7 ../x.py dist"}, {"sha": "0776d448984eed7bb3b3e6a7da18b97976be0de8", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/build-toolchain.sh", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh?ref=2934588c15fc49c5a1071fba60a893dab9aaced7", "patch": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+ARCH=$1\n+\n+TOP=$(pwd)\n+\n+BUILDTOOLS=$TOP/buildtools\n+HAIKU=$TOP/haiku\n+OUTPUT=/tools\n+SYSROOT=$OUTPUT/cross-tools-$ARCH/sysroot\n+PACKAGE_ROOT=/system\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+# First up, build a cross-compiler\n+git clone --depth=1 https://git.haiku-os.org/haiku\n+git clone --depth=1 https://git.haiku-os.org/buildtools\n+cd $BUILDTOOLS/jam\n+hide_output make\n+hide_output ./jam0 install\n+mkdir -p $OUTPUT\n+cd $OUTPUT\n+hide_output $HAIKU/configure --build-cross-tools $ARCH $TOP/buildtools\n+\n+# Set up sysroot to redirect to /system\n+mkdir -p $SYSROOT/boot\n+mkdir -p $PACKAGE_ROOT\n+ln -s $PACKAGE_ROOT $SYSROOT/boot/system\n+\n+# Build needed packages and tools for the cross-compiler\n+hide_output jam -q haiku.hpkg haiku_devel.hpkg '<build>package'\n+\n+# Set up our sysroot\n+cp $OUTPUT/objects/linux/lib/*.so /lib/x86_64-linux-gnu\n+cp $OUTPUT/objects/linux/x86_64/release/tools/package/package /bin/\n+find $SYSROOT/../bin/ -type f -exec ln -s {} /bin/ \\;\n+\n+# Extract packages\n+package extract -C $PACKAGE_ROOT $OUTPUT/objects/haiku/$ARCH/packaging/packages/haiku.hpkg\n+package extract -C $PACKAGE_ROOT $OUTPUT/objects/haiku/$ARCH/packaging/packages/haiku_devel.hpkg\n+find $OUTPUT/download/ -name '*.hpkg' -exec package extract -C $PACKAGE_ROOT {} \\;\n+\n+# Fix libgcc_s so we can link to it\n+cd $PACKAGE_ROOT/develop/lib\n+ln -s ../../lib/libgcc_s.so libgcc_s.so\n+\n+# Clean up\n+rm -rf $BUILDTOOLS $HAIKU $OUTPUT/Jamfile $OUTPUT/attributes $OUTPUT/build \\\n+  $OUTPUT/build_packages $OUTPUT/download $OUTPUT/objects"}, {"sha": "0f6034cdb8620949f3b9244f2bfda6a5eb35b352", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/fetch-packages.sh", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh?ref=2934588c15fc49c5a1071fba60a893dab9aaced7", "patch": "@@ -0,0 +1,18 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+wget http://packages.haiku-os.org/haikuports/master/hpkg/llvm-4.0.1-2-x86_64.hpkg\n+wget http://packages.haiku-os.org/haikuports/master/hpkg/llvm_libs-4.0.1-2-x86_64.hpkg\n+\n+package extract -C /system llvm-4.0.1-2-x86_64.hpkg\n+package extract -C /system llvm_libs-4.0.1-2-x86_64.hpkg\n+\n+rm -f *.hpkg"}, {"sha": "fb5206bed225882b271994cb7c38b0616c4190ac", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/llvm-config.sh", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fllvm-config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2934588c15fc49c5a1071fba60a893dab9aaced7/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fllvm-config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fllvm-config.sh?ref=2934588c15fc49c5a1071fba60a893dab9aaced7", "patch": "@@ -0,0 +1,67 @@\n+#!/bin/sh\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+case $1 in\n+--version) echo  4.0.1;;\n+--prefix) echo  $SCRATCH/haiku-cross/sysroot/boot/system;;\n+--bindir) echo  $SCRATCH/haiku-cross/sysroot/boot/system/bin;;\n+--includedir) echo  $SCRATCH/haiku-cross/sysroot/boot/system/develop/headers;;\n+--libdir) echo  $SCRATCH/haiku-/cross/sysroot/boot/system/develop/lib;;\n+--cmakedir) echo  $SCRATCH/haiku-/cross/sysroot/boot/system/develop/lib/cmake/llvm;;\n+--cppflags) echo  -I$SCRATCH/haiku-/cross/sysroot/boot/system/develop/headers \\\n+                  -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS;;\n+--cflags) echo  -I$SCRATCH/haiku-cross/sysroot/boot/system/develop/headers \\\n+                -fPIC -Wall -W -Wno-unused-parameter -Wwrite-strings \\\n+                -Wno-missing-field-initializers -pedantic -Wno-long-long -Wno-comment \\\n+                -Werror=date-time -ffunction-sections -fdata-sections -O3 -DNDEBUG \\\n+                -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS;;\n+--cxxflags) echo  -I/$SCRATCH/haiku-cross/sysroot/boot/system/develop/headers \\\n+                  -fPIC -fvisibility-inlines-hidden -Wall -W -Wno-unused-parameter \\\n+                  -Wwrite-strings -Wcast-qual -Wno-missing-field-initializers -pedantic \\\n+                  -Wno-long-long -Wno-maybe-uninitialized -Wdelete-non-virtual-dtor \\\n+                  -Wno-comment -Werror=date-time -std=c++11 -ffunction-sections \\\n+                  -fdata-sections -O3 -DNDEBUG  -fno-exceptions \\\n+                  -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS;;\n+--ldflags) echo  -L$SCRATCH/haiku-cross/sysroot/boot/system/develop/lib ;;\n+--system-libs) echo ;;\n+--libs) echo  -lLLVM-4.0;;\n+--libfiles) echo  $SCRATCH/haiku-cross/sysroot/boot/system/develop/lib/libLLVM-4.0.so;;\n+--components) echo  aarch64 aarch64asmparser aarch64asmprinter aarch64codegen \\\n+                    aarch64desc aarch64disassembler aarch64info aarch64utils all \\\n+                    all-targets amdgpu amdgpuasmparser amdgpuasmprinter amdgpucodegen \\\n+                    amdgpudesc amdgpudisassembler amdgpuinfo amdgpuutils analysis arm \\\n+                    armasmparser armasmprinter armcodegen armdesc armdisassembler \\\n+                    arminfo asmparser asmprinter bitreader bitwriter bpf bpfasmprinter \\\n+                    bpfcodegen bpfdesc bpfdisassembler bpfinfo codegen core coroutines \\\n+                    coverage debuginfocodeview debuginfodwarf debuginfomsf debuginfopdb \\\n+                    demangle engine executionengine globalisel hexagon hexagonasmparser \\\n+                    hexagoncodegen hexagondesc hexagondisassembler hexagoninfo \\\n+                    instcombine instrumentation interpreter ipo irreader lanai \\\n+                    lanaiasmparser lanaicodegen lanaidesc lanaidisassembler lanaiinfo \\\n+                    lanaiinstprinter libdriver lineeditor linker lto mc mcdisassembler \\\n+                    mcjit mcparser mips mipsasmparser mipsasmprinter mipscodegen \\\n+                    mipsdesc mipsdisassembler mipsinfo mirparser msp430 msp430asmprinter \\\n+                    msp430codegen msp430desc msp430info native nativecodegen nvptx \\\n+                    nvptxasmprinter nvptxcodegen nvptxdesc nvptxinfo objcarcopts object \\\n+                    objectyaml option orcjit passes powerpc powerpcasmparser \\\n+                    powerpcasmprinter powerpccodegen powerpcdesc powerpcdisassembler \\\n+                    powerpcinfo profiledata riscv riscvcodegen riscvdesc riscvinfo \\\n+                    runtimedyld scalaropts selectiondag sparc sparcasmparser \\\n+                    sparcasmprinter sparccodegen sparcdesc sparcdisassembler sparcinfo \\\n+                    support symbolize systemz systemzasmparser systemzasmprinter \\\n+                    systemzcodegen systemzdesc systemzdisassembler systemzinfo tablegen \\\n+                    target transformutils vectorize x86 x86asmparser x86asmprinter \\\n+                    x86codegen x86desc x86disassembler x86info x86utils xcore \\\n+                    xcoreasmprinter xcorecodegen xcoredesc xcoredisassembler xcoreinfo;;\n+--host-target) echo  x86_64-unknown-haiku;;\n+--has-rtti) echo  YES;;\n+--shared-mode) echo  shared;;\n+esac"}]}