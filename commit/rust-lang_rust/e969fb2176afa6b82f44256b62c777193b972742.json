{"sha": "e969fb2176afa6b82f44256b62c777193b972742", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NjlmYjIxNzZhZmE2YjgyZjQ0MjU2YjYyYzc3NzE5M2I5NzI3NDI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-19T18:25:19Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-21T22:20:00Z"}, "message": "Don't transform short-circuiting logic if `const_if_match` enabled", "tree": {"sha": "7113483102bc63b2df8aa57dbd535499186a9a65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7113483102bc63b2df8aa57dbd535499186a9a65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e969fb2176afa6b82f44256b62c777193b972742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e969fb2176afa6b82f44256b62c777193b972742", "html_url": "https://github.com/rust-lang/rust/commit/e969fb2176afa6b82f44256b62c777193b972742", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e969fb2176afa6b82f44256b62c777193b972742/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "365d1236890469cff1a55a28eeb9befaf516d552", "url": "https://api.github.com/repos/rust-lang/rust/commits/365d1236890469cff1a55a28eeb9befaf516d552", "html_url": "https://github.com/rust-lang/rust/commit/365d1236890469cff1a55a28eeb9befaf516d552"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "12b3108c5f2de9932f0d106b5d08e755d4c9dcdc", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e969fb2176afa6b82f44256b62c777193b972742/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e969fb2176afa6b82f44256b62c777193b972742/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=e969fb2176afa6b82f44256b62c777193b972742", "patch": "@@ -341,9 +341,10 @@ fn make_mirror_unadjusted<'a, 'tcx>(\n             } else {\n                 // FIXME overflow\n                 match (op.node, cx.constness) {\n-                    // FIXME(eddyb) use logical ops in constants when\n-                    // they can handle that kind of control-flow.\n-                    (hir::BinOpKind::And, hir::Constness::Const) => {\n+                    // Destroy control flow if `#![feature(const_if_match)]` is not enabled.\n+                    (hir::BinOpKind::And, hir::Constness::Const)\n+                        if !cx.tcx.features().const_if_match =>\n+                    {\n                         cx.control_flow_destroyed.push((\n                             op.span,\n                             \"`&&` operator\".into(),\n@@ -354,7 +355,9 @@ fn make_mirror_unadjusted<'a, 'tcx>(\n                             rhs: rhs.to_ref(),\n                         }\n                     }\n-                    (hir::BinOpKind::Or, hir::Constness::Const) => {\n+                    (hir::BinOpKind::Or, hir::Constness::Const)\n+                        if !cx.tcx.features().const_if_match =>\n+                    {\n                         cx.control_flow_destroyed.push((\n                             op.span,\n                             \"`||` operator\".into(),\n@@ -366,14 +369,14 @@ fn make_mirror_unadjusted<'a, 'tcx>(\n                         }\n                     }\n \n-                    (hir::BinOpKind::And, hir::Constness::NotConst) => {\n+                    (hir::BinOpKind::And, _) => {\n                         ExprKind::LogicalOp {\n                             op: LogicalOp::And,\n                             lhs: lhs.to_ref(),\n                             rhs: rhs.to_ref(),\n                         }\n                     }\n-                    (hir::BinOpKind::Or, hir::Constness::NotConst) => {\n+                    (hir::BinOpKind::Or, _) => {\n                         ExprKind::LogicalOp {\n                             op: LogicalOp::Or,\n                             lhs: lhs.to_ref(),"}]}