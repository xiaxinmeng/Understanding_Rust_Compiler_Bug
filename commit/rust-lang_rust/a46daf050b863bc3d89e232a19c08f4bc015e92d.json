{"sha": "a46daf050b863bc3d89e232a19c08f4bc015e92d", "node_id": "C_kwDOAAsO6NoAKGE0NmRhZjA1MGI4NjNiYzNkODllMjMyYTE5YzA4ZjRiYzAxNWU5MmQ", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2021-10-24T18:57:45Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2021-10-25T21:56:21Z"}, "message": "make thiscall on unsupported platforms an error", "tree": {"sha": "30a26f2194bfe83bb52a112bca0f48c39b45ea60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30a26f2194bfe83bb52a112bca0f48c39b45ea60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a46daf050b863bc3d89e232a19c08f4bc015e92d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a46daf050b863bc3d89e232a19c08f4bc015e92d", "html_url": "https://github.com/rust-lang/rust/commit/a46daf050b863bc3d89e232a19c08f4bc015e92d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a46daf050b863bc3d89e232a19c08f4bc015e92d/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd0483949496b067cd5f7569d1b28cd3d5d3c72", "url": "https://api.github.com/repos/rust-lang/rust/commits/efd0483949496b067cd5f7569d1b28cd3d5d3c72", "html_url": "https://github.com/rust-lang/rust/commit/efd0483949496b067cd5f7569d1b28cd3d5d3c72"}], "stats": {"total": 77, "additions": 32, "deletions": 45}, "files": [{"sha": "537a190211e553bb85a0ce2953266eb78b50ef3c", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a46daf050b863bc3d89e232a19c08f4bc015e92d/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46daf050b863bc3d89e232a19c08f4bc015e92d/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=a46daf050b863bc3d89e232a19c08f4bc015e92d", "patch": "@@ -1522,6 +1522,7 @@ impl Target {\n             AmdGpuKernel => self.arch == \"amdgcn\",\n             AvrInterrupt | AvrNonBlockingInterrupt => self.arch == \"avr\",\n             Wasm => [\"wasm32\", \"wasm64\"].contains(&&self.arch[..]),\n+            Thiscall { .. } => self.arch == \"x86\",\n             // On windows these fall-back to platform native calling convention (C) when the\n             // architecture is not supported.\n             //\n@@ -1552,15 +1553,13 @@ impl Target {\n             // > convention is used.\n             //\n             // -- https://docs.microsoft.com/en-us/cpp/cpp/argument-passing-and-naming-conventions\n-            Stdcall { .. } | Fastcall | Thiscall { .. } | Vectorcall if self.is_like_windows => {\n-                true\n-            }\n+            Stdcall { .. } | Fastcall | Vectorcall if self.is_like_windows => true,\n             // Outside of Windows we want to only support these calling conventions for the\n             // architectures for which these calling conventions are actually well defined.\n-            Stdcall { .. } | Fastcall | Thiscall { .. } if self.arch == \"x86\" => true,\n+            Stdcall { .. } | Fastcall if self.arch == \"x86\" => true,\n             Vectorcall if [\"x86\", \"x86_64\"].contains(&&self.arch[..]) => true,\n             // Return a `None` for other cases so that we know to emit a future compat lint.\n-            Stdcall { .. } | Fastcall | Thiscall { .. } | Vectorcall => return None,\n+            Stdcall { .. } | Fastcall | Vectorcall => return None,\n         })\n     }\n "}, {"sha": "a948947dbdb610df2e36d4d6193f6fc70f03d107", "filename": "src/test/ui/abi/unsupported.aarch64.stderr", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.aarch64.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.aarch64.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.aarch64.stderr?ref=a46daf050b863bc3d89e232a19c08f4bc015e92d", "patch": "@@ -40,25 +40,22 @@ error[E0570]: `\"x86-interrupt\"` is not a supported ABI for the current target\n LL | extern \"x86-interrupt\" fn x86() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: use of calling convention not supported on this target\n+error[E0570]: `\"thiscall\"` is not a supported ABI for the current target\n   --> $DIR/unsupported.rs:43:1\n    |\n-LL | extern \"stdcall\" fn stdcall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unsupported_calling_conventions)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n+LL | extern \"thiscall\" fn thiscall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of calling convention not supported on this target\n-  --> $DIR/unsupported.rs:50:1\n+  --> $DIR/unsupported.rs:47:1\n    |\n-LL | extern \"thiscall\" fn thiscall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | extern \"stdcall\" fn stdcall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n+   = note: `#[warn(unsupported_calling_conventions)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n \n-error: aborting due to 7 previous errors; 2 warnings emitted\n+error: aborting due to 8 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0570`."}, {"sha": "297354c28289569d064fd1e0f42fd81e4b522aab", "filename": "src/test/ui/abi/unsupported.arm.stderr", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.arm.stderr?ref=a46daf050b863bc3d89e232a19c08f4bc015e92d", "patch": "@@ -34,25 +34,22 @@ error[E0570]: `\"x86-interrupt\"` is not a supported ABI for the current target\n LL | extern \"x86-interrupt\" fn x86() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: use of calling convention not supported on this target\n+error[E0570]: `\"thiscall\"` is not a supported ABI for the current target\n   --> $DIR/unsupported.rs:43:1\n    |\n-LL | extern \"stdcall\" fn stdcall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unsupported_calling_conventions)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n+LL | extern \"thiscall\" fn thiscall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of calling convention not supported on this target\n-  --> $DIR/unsupported.rs:50:1\n+  --> $DIR/unsupported.rs:47:1\n    |\n-LL | extern \"thiscall\" fn thiscall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | extern \"stdcall\" fn stdcall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n+   = note: `#[warn(unsupported_calling_conventions)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n \n-error: aborting due to 6 previous errors; 2 warnings emitted\n+error: aborting due to 7 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0570`."}, {"sha": "6427a5695c0297c032f5d2601da51e91654b60cc", "filename": "src/test/ui/abi/unsupported.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.rs?ref=a46daf050b863bc3d89e232a19c08f4bc015e92d", "patch": "@@ -40,14 +40,11 @@ extern \"avr-interrupt\" fn avr() {}\n extern \"x86-interrupt\" fn x86() {}\n //[aarch64]~^ ERROR is not a supported ABI\n //[arm]~^^ ERROR is not a supported ABI\n-extern \"stdcall\" fn stdcall() {}\n-//[x64]~^ WARN use of calling convention not supported\n-//[x64]~^^ WARN this was previously accepted\n-//[aarch64]~^^^ WARN use of calling convention not supported\n-//[aarch64]~^^^^ WARN this was previously accepted\n-//[arm]~^^^^^ WARN use of calling convention not supported\n-//[arm]~^^^^^^ WARN this was previously accepted\n extern \"thiscall\" fn thiscall() {}\n+//[x64]~^ ERROR is not a supported ABI\n+//[aarch64]~^^ ERROR is not a supported ABI\n+//[arm]~^^^ ERROR is not a supported ABI\n+extern \"stdcall\" fn stdcall() {}\n //[x64]~^ WARN use of calling convention not supported\n //[x64]~^^ WARN this was previously accepted\n //[aarch64]~^^^ WARN use of calling convention not supported"}, {"sha": "49b88cd3fac939c559b2bfda5d4ad4fba8024aa3", "filename": "src/test/ui/abi/unsupported.x64.stderr", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.x64.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a46daf050b863bc3d89e232a19c08f4bc015e92d/src%2Ftest%2Fui%2Fabi%2Funsupported.x64.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.x64.stderr?ref=a46daf050b863bc3d89e232a19c08f4bc015e92d", "patch": "@@ -34,25 +34,22 @@ error[E0570]: `\"avr-interrupt\"` is not a supported ABI for the current target\n LL | extern \"avr-interrupt\" fn avr() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: use of calling convention not supported on this target\n+error[E0570]: `\"thiscall\"` is not a supported ABI for the current target\n   --> $DIR/unsupported.rs:43:1\n    |\n-LL | extern \"stdcall\" fn stdcall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unsupported_calling_conventions)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n+LL | extern \"thiscall\" fn thiscall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of calling convention not supported on this target\n-  --> $DIR/unsupported.rs:50:1\n+  --> $DIR/unsupported.rs:47:1\n    |\n-LL | extern \"thiscall\" fn thiscall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | extern \"stdcall\" fn stdcall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n+   = note: `#[warn(unsupported_calling_conventions)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n \n-error: aborting due to 6 previous errors; 2 warnings emitted\n+error: aborting due to 7 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0570`."}]}