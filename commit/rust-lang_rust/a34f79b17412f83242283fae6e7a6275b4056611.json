{"sha": "a34f79b17412f83242283fae6e7a6275b4056611", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNGY3OWIxNzQxMmY4MzI0MjI4M2ZhZTZlN2E2Mjc1YjQwNTY2MTE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-14T07:05:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T07:05:43Z"}, "message": "Merge #5357\n\n5357: Use relaxed ordering for marks r=matklad a=matklad\n\nWe dont' need this for perf. `Relaxed` ordering is enough here, as we\nonly have one location. I prefer to use minimal ordering, because that\nmakes it easier to reason about the code.\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d1626f115ca07b35238968a836173a0711be6ecb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1626f115ca07b35238968a836173a0711be6ecb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a34f79b17412f83242283fae6e7a6275b4056611", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDVlHCRBK7hj4Ov3rIwAAdHIIAD3XfUaE1HPGTyKHH14fWRVC\nj/aolRdyINtNurzzhPcRvXgkHvMtSHHiiPCu9ASgAxxp5oLpQyUYrw13UYb34lUU\ndtWZxhFfn4kAAJ6u/sr11avacmN+A8VcY6I0rjP4iFMuKNOypc2c+pZeAcVpCLjd\n5Res1II9gTKwMO6pOvVg7+c5LA6hrzh+uamUYXqHmm7CqP2gliQdAMTmcPh9E1zo\nBI3ntTqi9GuEcvFH2CKp0nfHVEbS87A/1RdrUSP5KehomzcYEUioYEfhKu44wiPb\n2lWwtiwUlnhuBJK1fjoGjvv0vUcGas5IckgW7awcQFQRNJi8tMzai8ciYBmFj08=\n=0aEB\n-----END PGP SIGNATURE-----\n", "payload": "tree d1626f115ca07b35238968a836173a0711be6ecb\nparent 46d4487b8900324fc6a523c8b6ebe036d28fd0fb\nparent c6f35401219e32c7d62e106a45637e7f5304723c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1594710343 +0000\ncommitter GitHub <noreply@github.com> 1594710343 +0000\n\nMerge #5357\n\n5357: Use relaxed ordering for marks r=matklad a=matklad\n\nWe dont' need this for perf. `Relaxed` ordering is enough here, as we\nonly have one location. I prefer to use minimal ordering, because that\nmakes it easier to reason about the code.\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a34f79b17412f83242283fae6e7a6275b4056611", "html_url": "https://github.com/rust-lang/rust/commit/a34f79b17412f83242283fae6e7a6275b4056611", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a34f79b17412f83242283fae6e7a6275b4056611/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46d4487b8900324fc6a523c8b6ebe036d28fd0fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/46d4487b8900324fc6a523c8b6ebe036d28fd0fb", "html_url": "https://github.com/rust-lang/rust/commit/46d4487b8900324fc6a523c8b6ebe036d28fd0fb"}, {"sha": "c6f35401219e32c7d62e106a45637e7f5304723c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6f35401219e32c7d62e106a45637e7f5304723c", "html_url": "https://github.com/rust-lang/rust/commit/c6f35401219e32c7d62e106a45637e7f5304723c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "97f5a93ad9345a71ac01e81944b0a221574bab44", "filename": "crates/test_utils/src/mark.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a34f79b17412f83242283fae6e7a6275b4056611/crates%2Ftest_utils%2Fsrc%2Fmark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a34f79b17412f83242283fae6e7a6275b4056611/crates%2Ftest_utils%2Fsrc%2Fmark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Fmark.rs?ref=a34f79b17412f83242283fae6e7a6275b4056611", "patch": "@@ -62,7 +62,7 @@ pub struct MarkChecker {\n \n impl MarkChecker {\n     pub fn new(mark: &'static AtomicUsize) -> MarkChecker {\n-        let value_on_entry = mark.load(Ordering::SeqCst);\n+        let value_on_entry = mark.load(Ordering::Relaxed);\n         MarkChecker { mark, value_on_entry }\n     }\n }\n@@ -72,7 +72,7 @@ impl Drop for MarkChecker {\n         if std::thread::panicking() {\n             return;\n         }\n-        let value_on_exit = self.mark.load(Ordering::SeqCst);\n+        let value_on_exit = self.mark.load(Ordering::Relaxed);\n         assert!(value_on_exit > self.value_on_entry, \"mark was not hit\")\n     }\n }"}]}