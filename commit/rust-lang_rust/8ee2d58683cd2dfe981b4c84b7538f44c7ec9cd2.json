{"sha": "8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZTJkNTg2ODNjZDJkZmU5ODFiNGM4NGI3NTM4ZjQ0YzdlYzljZDI=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-02-19T19:57:23Z"}, "committer": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-02-19T19:57:23Z"}, "message": "Give the rust tool an own section in the tutorial.", "tree": {"sha": "4aea89660190a8fea14b3afcf5c721a970df8c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aea89660190a8fea14b3afcf5c721a970df8c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2", "html_url": "https://github.com/rust-lang/rust/commit/8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f684a8a56be054997c1df8807eac9d5cad221979", "url": "https://api.github.com/repos/rust-lang/rust/commits/f684a8a56be054997c1df8807eac9d5cad221979", "html_url": "https://github.com/rust-lang/rust/commit/f684a8a56be054997c1df8807eac9d5cad221979"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "ed6d3c9c7a047f8f345ee58fb2309d3f0a02a5c5", "filename": "doc/tutorial.md", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=8ee2d58683cd2dfe981b4c84b7538f44c7ec9cd2", "patch": "@@ -115,8 +115,8 @@ for more information on them.\n When complete, `make install` will place several programs into\n `/usr/local/bin`: `rustc`, the Rust compiler; `rustdoc`, the\n API-documentation tool; `rustpkg`, the Rust package manager;\n-`rusti`, the Rust REPL; and `rust`, a tool which acts as a unified way to\n-call them, either directly or with common command line arguments.\n+`rusti`, the Rust REPL; and `rust`, a tool which acts both as a unified\n+interface for them, and for a few common command line scenarios.\n \n [wiki-start]: https://github.com/mozilla/rust/wiki/Note-getting-started-developing-Rust\n [tarball]: http://static.rust-lang.org/dist/rust-0.5.tar.gz\n@@ -155,6 +155,25 @@ declaration to appear at the top level of the file: all statements must\n live inside a function.  Rust programs can also be compiled as\n libraries, and included in other programs.\n \n+## Using the rust tool\n+\n+While using `rustc` directly to generate your executables, and then\n+running them manually is a perfectly valid way to test your code,\n+for smaller projects, prototypes, or if you're a beginner, it might be\n+more convenient to use the `rust` tool.\n+\n+You use it by calling it with one of the supported commands, followed by\n+arguments for that command. For example `rust build foo.rs` calls the\n+`build` command with the argument `foo.rs`.\n+\n+The commands are:\n+  - `build`, `doc`, `pkg` and `sketch`, which simply forward all arguments\n+     to the included programs `rustc`, `rustdoc`, `rustpkg` and `rusti`.\n+  - `run` and `test`, which both accept one source file and, using `rustc`,\n+    produce either a normal or a test executable in the current working\n+    directory and run it.\n+  - `help`, which prints out the usage text of one of the commands.\n+\n ## Editing Rust code\n \n There are vim highlighting and indentation scripts in the Rust source"}]}