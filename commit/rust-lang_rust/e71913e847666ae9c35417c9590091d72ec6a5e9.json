{"sha": "e71913e847666ae9c35417c9590091d72ec6a5e9", "node_id": "C_kwDOAAsO6NoAKGU3MTkxM2U4NDc2NjZhZTljMzU0MTdjOTU5MDA5MWQ3MmVjNmE1ZTk", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-05-11T21:27:06Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-05-30T15:36:14Z"}, "message": "validate derefer, run derefer inside generator", "tree": {"sha": "bbed4b28c823d7cfdffe0b3e0ff7e1281b0e59db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbed4b28c823d7cfdffe0b3e0ff7e1281b0e59db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e71913e847666ae9c35417c9590091d72ec6a5e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e71913e847666ae9c35417c9590091d72ec6a5e9", "html_url": "https://github.com/rust-lang/rust/commit/e71913e847666ae9c35417c9590091d72ec6a5e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e71913e847666ae9c35417c9590091d72ec6a5e9/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abc7681a76c7aa5adef896b85c3894047a4492d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/abc7681a76c7aa5adef896b85c3894047a4492d4", "html_url": "https://github.com/rust-lang/rust/commit/abc7681a76c7aa5adef896b85c3894047a4492d4"}], "stats": {"total": 358, "additions": 299, "deletions": 59}, "files": [{"sha": "665b07c9f89ce1e102b5530a45e96941f2250631", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -4,6 +4,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_index::bit_set::BitSet;\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::mir::interpret::Scalar;\n+use rustc_middle::mir::visit::NonUseContext::VarDebugInfo;\n use rustc_middle::mir::visit::{PlaceContext, Visitor};\n use rustc_middle::mir::{\n     traversal, AggregateKind, BasicBlock, BinOp, Body, BorrowKind, Local, Location, MirPass,\n@@ -302,9 +303,17 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n         self.super_projection_elem(local, proj_base, elem, context, location);\n     }\n \n-    fn visit_place(&mut self, place: &Place<'tcx>, _: PlaceContext, _: Location) {\n+    fn visit_place(&mut self, place: &Place<'tcx>, cntxt: PlaceContext, location: Location) {\n         // Set off any `bug!`s in the type computation code\n         let _ = place.ty(&self.body.local_decls, self.tcx);\n+\n+        if self.mir_phase >= MirPhase::Derefered\n+            && place.projection.len() > 1\n+            && cntxt != PlaceContext::NonUse(VarDebugInfo)\n+            && place.projection[1..].contains(&ProjectionElem::Deref)\n+        {\n+            self.fail(location, format!(\"{:?}, has deref at the wrong place\", place));\n+        }\n     }\n \n     fn visit_rvalue(&mut self, rvalue: &Rvalue<'tcx>, location: Location) {"}, {"sha": "b09d39996f4dea0ed72c48e572528ba416ba3d2e", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -172,12 +172,14 @@ pub enum MirPhase {\n     /// terminator means that the auto-generated drop glue will be invoked. Also, `Copy` operands\n     /// are allowed for non-`Copy` types.\n     DropsLowered = 3,\n+    /// After this projections may only contain deref projections as the first element.\n+    Derefered = 4,\n     /// Beginning with this phase, the following variant is disallowed:\n     /// * [`Rvalue::Aggregate`] for any `AggregateKind` except `Array`\n     ///\n     /// And the following variant is allowed:\n     /// * [`StatementKind::SetDiscriminant`]\n-    Deaggregated = 4,\n+    Deaggregated = 5,\n     /// Before this phase, generators are in the \"source code\" form, featuring `yield` statements\n     /// and such. With this phase change, they are transformed into a proper state machine. Running\n     /// optimizations before this change can be potentially dangerous because the source code is to\n@@ -191,8 +193,8 @@ pub enum MirPhase {\n     /// Beginning with this phase, the following variants are disallowed:\n     /// * [`TerminatorKind::Yield`](terminator::TerminatorKind::Yield)\n     /// * [`TerminatorKind::GeneratorDrop`](terminator::TerminatorKind::GeneratorDrop)\n-    GeneratorsLowered = 5,\n-    Optimized = 6,\n+    GeneratorsLowered = 6,\n+    Optimized = 7,\n }\n \n impl MirPhase {"}, {"sha": "bfb3ad1be2734039046f574b6003bb454fda9d33", "filename": "compiler/rustc_mir_transform/src/deref_separator.rs", "status": "modified", "additions": 59, "deletions": 51, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -1,9 +1,11 @@\n use crate::MirPass;\n use rustc_index::vec::IndexVec;\n use rustc_middle::mir::patch::MirPatch;\n+use rustc_middle::mir::visit::NonUseContext::VarDebugInfo;\n use rustc_middle::mir::visit::{MutVisitor, PlaceContext};\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n+\n pub struct Derefer;\n \n pub struct DerefChecker<'tcx> {\n@@ -17,63 +19,68 @@ impl<'tcx> MutVisitor<'tcx> for DerefChecker<'tcx> {\n         self.tcx\n     }\n \n-    fn visit_place(&mut self, place: &mut Place<'tcx>, _: PlaceContext, loc: Location) {\n-        let mut place_local = place.local;\n-        let mut last_len = 0;\n-        let mut last_deref_idx = 0;\n+    fn visit_place(&mut self, place: &mut Place<'tcx>, cntxt: PlaceContext, loc: Location) {\n+        if !place.projection.is_empty()\n+            && cntxt != PlaceContext::NonUse(VarDebugInfo)\n+            && place.projection[1..].contains(&ProjectionElem::Deref)\n+        {\n+            let mut place_local = place.local;\n+            let mut last_len = 0;\n+            let mut last_deref_idx = 0;\n \n-        let mut prev_temp: Option<Local> = None;\n+            let mut prev_temp: Option<Local> = None;\n \n-        for (idx, (p_ref, p_elem)) in place.iter_projections().enumerate() {\n-            if p_elem == ProjectionElem::Deref && !p_ref.projection.is_empty() {\n-                last_deref_idx = idx;\n-            }\n-        }\n-\n-        for (idx, (p_ref, p_elem)) in place.iter_projections().enumerate() {\n-            if p_elem == ProjectionElem::Deref && !p_ref.projection.is_empty() {\n-                let ty = p_ref.ty(&self.local_decls, self.tcx).ty;\n-                let temp = self.patcher.new_local_with_info(\n-                    ty,\n-                    self.local_decls[p_ref.local].source_info.span,\n-                    Some(Box::new(LocalInfo::DerefTemp)),\n-                );\n-\n-                self.patcher.add_statement(loc, StatementKind::StorageLive(temp));\n-\n-                // We are adding current p_ref's projections to our\n-                // temp value, excluding projections we already covered.\n-                let deref_place = Place::from(place_local)\n-                    .project_deeper(&p_ref.projection[last_len..], self.tcx);\n-\n-                self.patcher.add_assign(\n-                    loc,\n-                    Place::from(temp),\n-                    Rvalue::Use(Operand::Move(deref_place)),\n-                );\n-                place_local = temp;\n-                last_len = p_ref.projection.len();\n-\n-                // Change `Place` only if we are actually at the Place's last deref\n-                if idx == last_deref_idx {\n-                    let temp_place =\n-                        Place::from(temp).project_deeper(&place.projection[idx..], self.tcx);\n-                    *place = temp_place;\n+            for (idx, elem) in place.projection[0..].iter().enumerate() {\n+                if *elem == ProjectionElem::Deref {\n+                    last_deref_idx = idx;\n                 }\n-\n-                // We are destroying the previous temp since it's no longer used.\n-                if let Some(prev_temp) = prev_temp {\n-                    self.patcher.add_statement(loc, StatementKind::StorageDead(prev_temp));\n+            }\n+            for (idx, (p_ref, p_elem)) in place.iter_projections().enumerate() {\n+                if !p_ref.projection.is_empty() && p_elem == ProjectionElem::Deref {\n+                    let ty = p_ref.ty(&self.local_decls, self.tcx).ty;\n+                    let temp = self.patcher.new_local_with_info(\n+                        ty,\n+                        self.local_decls[p_ref.local].source_info.span,\n+                        Some(Box::new(LocalInfo::DerefTemp)),\n+                    );\n+\n+                    self.patcher.add_statement(loc, StatementKind::StorageLive(temp));\n+\n+                    // We are adding current p_ref's projections to our\n+                    // temp value, excluding projections we already covered.\n+                    let deref_place = Place::from(place_local)\n+                        .project_deeper(&p_ref.projection[last_len..], self.tcx);\n+\n+                    self.patcher.add_assign(\n+                        loc,\n+                        Place::from(temp),\n+                        Rvalue::Use(Operand::Move(deref_place)),\n+                    );\n+                    place_local = temp;\n+                    last_len = p_ref.projection.len();\n+\n+                    // Change `Place` only if we are actually at the Place's last deref\n+                    if idx == last_deref_idx {\n+                        let temp_place =\n+                            Place::from(temp).project_deeper(&place.projection[idx..], self.tcx);\n+                        *place = temp_place;\n+                    }\n+\n+                    // We are destroying the previous temp since it's no longer used.\n+                    if let Some(prev_temp) = prev_temp {\n+                        self.patcher.add_statement(loc, StatementKind::StorageDead(prev_temp));\n+                    }\n+\n+                    prev_temp = Some(temp);\n                 }\n-\n-                prev_temp = Some(temp);\n             }\n-        }\n \n-        // Since we won't be able to reach final temp, we destroy it outside the loop.\n-        if let Some(prev_temp) = prev_temp {\n-            let last_loc = Location { block: loc.block, statement_index: loc.statement_index + 1 };\n-            self.patcher.add_statement(last_loc, StatementKind::StorageDead(prev_temp));\n+            // Since we won't be able to reach final temp, we destroy it outside the loop.\n+            if let Some(prev_temp) = prev_temp {\n+                let last_loc =\n+                    Location { block: loc.block, statement_index: loc.statement_index + 1 };\n+                self.patcher.add_statement(last_loc, StatementKind::StorageDead(prev_temp));\n+            }\n         }\n     }\n }\n@@ -92,5 +99,6 @@ pub fn deref_finder<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n impl<'tcx> MirPass<'tcx> for Derefer {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         deref_finder(tcx, body);\n+        body.phase = MirPhase::Derefered;\n     }\n }"}, {"sha": "9eb77f6021373e2dd34eb095a8ca1bdb01a50b7b", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -49,6 +49,7 @@\n //! For generators with state 1 (returned) and state 2 (poisoned) it does nothing.\n //! Otherwise it drops all the values in scope at the last suspension point.\n \n+use crate::deref_separator::deref_finder;\n use crate::simplify;\n use crate::util::expand_aggregate;\n use crate::MirPass;\n@@ -1368,6 +1369,9 @@ impl<'tcx> MirPass<'tcx> for StateTransform {\n \n         // Create the Generator::resume function\n         create_generator_resume_function(tcx, transform, body, can_return);\n+\n+        // Run derefer to fix Derefs that are not in the first place\n+        deref_finder(tcx, body);\n     }\n }\n "}, {"sha": "9526c0acc66d6fdfe22fac72eaba026dc1c994e7", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -1,5 +1,5 @@\n //! Inlining pass for MIR functions\n-\n+use crate::deref_separator::deref_finder;\n use rustc_attr::InlineAttr;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::Idx;\n@@ -53,6 +53,7 @@ impl<'tcx> MirPass<'tcx> for Inline {\n             debug!(\"running simplify cfg on {:?}\", body.source);\n             CfgSimplifier::new(body).simplify();\n             remove_dead_blocks(tcx, body);\n+            deref_finder(tcx, body);\n         }\n     }\n }"}, {"sha": "e131adae2b683c731c91f0195d5d672c71874caf", "filename": "src/test/mir-opt/derefer_inline_test.main.Derefer.diff", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fderefer_inline_test.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fderefer_inline_test.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_inline_test.main.Derefer.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -0,0 +1,69 @@\n+- // MIR for `main` before Derefer\n++ // MIR for `main` after Derefer\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/derefer_inline_test.rs:9:11: 9:11\n+      let _1: std::boxed::Box<std::boxed::Box<u32>>; // in scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+      let mut _2: usize;                   // in scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+      let mut _3: usize;                   // in scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+      let mut _4: *mut u8;                 // in scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+      let mut _5: std::boxed::Box<std::boxed::Box<u32>>; // in scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+      let mut _6: ();                      // in scope 0 at $DIR/derefer_inline_test.rs:10:11: 10:12\n+      scope 1 {\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+          _2 = SizeOf(std::boxed::Box<u32>); // scope 1 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+          _3 = AlignOf(std::boxed::Box<u32>); // scope 1 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+          _4 = alloc::alloc::exchange_malloc(move _2, move _3) -> bb1; // scope 1 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_inline_test.rs:10:5: 10:12\n+                                           // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageLive(_5);                 // scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+          _5 = ShallowInitBox(move _4, std::boxed::Box<u32>); // scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+          (*_5) = f() -> [return: bb2, unwind: bb5]; // scope 0 at $DIR/derefer_inline_test.rs:10:9: 10:12\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_inline_test.rs:10:9: 10:10\n+                                           // + literal: Const { ty: fn() -> Box<u32> {f}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb2: {\n+          _1 = move _5;                    // scope 0 at $DIR/derefer_inline_test.rs:10:5: 10:12\n+          goto -> bb3;                     // scope 0 at $DIR/derefer_inline_test.rs:10:11: 10:12\n+      }\n+  \n+      bb3: {\n+          StorageDead(_5);                 // scope 0 at $DIR/derefer_inline_test.rs:10:11: 10:12\n+          drop(_1) -> [return: bb4, unwind: bb6]; // scope 0 at $DIR/derefer_inline_test.rs:10:12: 10:13\n+      }\n+  \n+      bb4: {\n+          StorageDead(_1);                 // scope 0 at $DIR/derefer_inline_test.rs:10:12: 10:13\n+          _0 = const ();                   // scope 0 at $DIR/derefer_inline_test.rs:9:11: 11:2\n+          return;                          // scope 0 at $DIR/derefer_inline_test.rs:11:2: 11:2\n+      }\n+  \n+      bb5 (cleanup): {\n+          goto -> bb8;                     // scope 0 at $DIR/derefer_inline_test.rs:10:11: 10:12\n+      }\n+  \n+      bb6 (cleanup): {\n+          resume;                          // scope 0 at $DIR/derefer_inline_test.rs:9:1: 11:2\n+      }\n+  \n+      bb7 (cleanup): {\n+          _6 = alloc::alloc::box_free::<Box<u32>, std::alloc::Global>(move (_5.0: std::ptr::Unique<std::boxed::Box<u32>>), move (_5.1: std::alloc::Global)) -> bb6; // scope 0 at $DIR/derefer_inline_test.rs:10:11: 10:12\n+                                           // mir::Constant\n+                                           // + span: $DIR/derefer_inline_test.rs:10:11: 10:12\n+                                           // + literal: Const { ty: unsafe fn(Unique<Box<u32>>, std::alloc::Global) {alloc::alloc::box_free::<Box<u32>, std::alloc::Global>}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb8 (cleanup): {\n+          goto -> bb7;                     // scope 0 at $DIR/derefer_inline_test.rs:10:11: 10:12\n+      }\n+  }\n+  "}, {"sha": "191a8cbbef40a521955d12c538cbcf143fc26aa7", "filename": "src/test/mir-opt/derefer_inline_test.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fderefer_inline_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fderefer_inline_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_inline_test.rs?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -0,0 +1,11 @@\n+// EMIT_MIR derefer_inline_test.main.Derefer.diff\n+// ignore-wasm32 compiled with panic=abort by default\n+\n+#![feature(box_syntax)]\n+#[inline]\n+fn f() -> Box<u32> {\n+    box 0\n+}\n+fn main() {\n+    box f();\n+}"}, {"sha": "d1ab29b8a21ab4534b2a2bbaa8cce3575d50020c", "filename": "src/test/mir-opt/inline/dyn_trait.get_query.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fdyn_trait.get_query.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fdyn_trait.get_query.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fdyn_trait.get_query.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -57,6 +57,10 @@\n           StorageDead(_4);                 // scope 1 at $DIR/dyn-trait.rs:34:24: 34:25\n           StorageDead(_2);                 // scope 0 at $DIR/dyn-trait.rs:35:1: 35:2\n           return;                          // scope 0 at $DIR/dyn-trait.rs:35:2: 35:2\n++     }\n++ \n++     bb3 (cleanup): {\n++         resume;                          // scope 0 at $DIR/dyn-trait.rs:32:1: 35:2\n       }\n   }\n   "}, {"sha": "0c44c3ada0f8c7379efb4ecba6019c94723cfe41", "filename": "src/test/mir-opt/inline/dyn_trait.try_execute_query.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fdyn_trait.try_execute_query.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fdyn_trait.try_execute_query.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fdyn_trait.try_execute_query.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -32,6 +32,10 @@\n +         StorageDead(_4);                 // scope 1 at $DIR/dyn-trait.rs:21:21: 21:22\n           StorageDead(_2);                 // scope 0 at $DIR/dyn-trait.rs:27:15: 27:16\n           return;                          // scope 0 at $DIR/dyn-trait.rs:28:2: 28:2\n++     }\n++ \n++     bb2 (cleanup): {\n++         resume;                          // scope 0 at $DIR/dyn-trait.rs:26:1: 28:2\n       }\n   }\n   "}, {"sha": "ade6ccfc7f144ba534c55b4612fb18beeb0cfaca", "filename": "src/test/mir-opt/inline/inline_any_operand.bar.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_any_operand.bar.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_any_operand.bar.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_any_operand.bar.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -41,4 +41,8 @@ fn bar() -> bool {\n         StorageDead(_1);                 // scope 0 at $DIR/inline-any-operand.rs:13:1: 13:2\n         return;                          // scope 0 at $DIR/inline-any-operand.rs:13:2: 13:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/inline-any-operand.rs:10:1: 13:2\n+    }\n }"}, {"sha": "66fc5fa80ea269abb1b44cd590327354729ffad7", "filename": "src/test/mir-opt/inline/inline_closure.foo.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure.foo.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure.foo.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure.foo.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -46,4 +46,8 @@ fn foo(_1: T, _2: i32) -> i32 {\n         StorageDead(_3);                 // scope 0 at $DIR/inline-closure.rs:13:1: 13:2\n         return;                          // scope 0 at $DIR/inline-closure.rs:13:2: 13:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/inline-closure.rs:10:1: 13:2\n+    }\n }"}, {"sha": "7bb17dab061ad98bb7fb45c3e426269717cb5391", "filename": "src/test/mir-opt/inline/inline_closure_borrows_arg.foo.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_borrows_arg.foo.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_borrows_arg.foo.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_borrows_arg.foo.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -53,4 +53,8 @@ fn foo(_1: T, _2: &i32) -> i32 {\n         StorageDead(_3);                 // scope 0 at $DIR/inline-closure-borrows-arg.rs:17:1: 17:2\n         return;                          // scope 0 at $DIR/inline-closure-borrows-arg.rs:17:2: 17:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/inline-closure-borrows-arg.rs:11:1: 17:2\n+    }\n }"}, {"sha": "c6b49b66dc5c0b7174745308dacf36ef92d0002b", "filename": "src/test/mir-opt/inline/inline_closure_captures.foo.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_captures.foo.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_captures.foo.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_captures.foo.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -66,4 +66,8 @@ fn foo(_1: T, _2: i32) -> (i32, T) {\n         StorageDead(_3);                 // scope 0 at $DIR/inline-closure-captures.rs:13:1: 13:2\n         return;                          // scope 0 at $DIR/inline-closure-captures.rs:13:2: 13:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/inline-closure-captures.rs:10:1: 13:2\n+    }\n }"}, {"sha": "fd9a540ca16e29610722e63865f3c5f1535acc4c", "filename": "src/test/mir-opt/inline/inline_compatibility.inlined_no_sanitize.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_no_sanitize.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_no_sanitize.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_no_sanitize.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -19,6 +19,10 @@\n           StorageDead(_1);                 // scope 0 at $DIR/inline-compatibility.rs:24:18: 24:19\n           _0 = const ();                   // scope 0 at $DIR/inline-compatibility.rs:23:37: 25:2\n           return;                          // scope 0 at $DIR/inline-compatibility.rs:25:2: 25:2\n++     }\n++ \n++     bb1 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-compatibility.rs:23:1: 25:2\n       }\n   }\n   "}, {"sha": "e7db7aa382faee44079726dcd5f5aae838121a3e", "filename": "src/test/mir-opt/inline/inline_compatibility.inlined_target_feature.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_target_feature.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_target_feature.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_target_feature.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -19,6 +19,10 @@\n           StorageDead(_1);                 // scope 0 at $DIR/inline-compatibility.rs:13:21: 13:22\n           _0 = const ();                   // scope 0 at $DIR/inline-compatibility.rs:12:40: 14:2\n           return;                          // scope 0 at $DIR/inline-compatibility.rs:14:2: 14:2\n++     }\n++ \n++     bb1 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-compatibility.rs:12:1: 14:2\n       }\n   }\n   "}, {"sha": "b732e7cdb9bf8f05cf26755873a3df7cf724aa3f", "filename": "src/test/mir-opt/inline/inline_cycle.one.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_cycle.one.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_cycle.one.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_cycle.one.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -22,6 +22,10 @@\n           StorageDead(_1);                 // scope 0 at $DIR/inline-cycle.rs:14:24: 14:25\n           _0 = const ();                   // scope 0 at $DIR/inline-cycle.rs:13:10: 15:2\n           return;                          // scope 0 at $DIR/inline-cycle.rs:15:2: 15:2\n++     }\n++ \n++     bb2 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-cycle.rs:13:1: 15:2\n       }\n   }\n   "}, {"sha": "eac5bf8edec4bb0c9471bf9f1d9e78fbf15ed452", "filename": "src/test/mir-opt/inline/inline_cycle.two.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_cycle.two.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_cycle.two.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_cycle.two.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -41,6 +41,10 @@\n           StorageDead(_1);                 // scope 0 at $DIR/inline-cycle.rs:49:12: 49:13\n           _0 = const ();                   // scope 0 at $DIR/inline-cycle.rs:48:10: 50:2\n           return;                          // scope 0 at $DIR/inline-cycle.rs:50:2: 50:2\n++     }\n++ \n++     bb2 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-cycle.rs:48:1: 50:2\n       }\n   }\n   "}, {"sha": "ff25c5b4bc337f4c0aba72f830f16a33d900e839", "filename": "src/test/mir-opt/inline/inline_diverging.f.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.f.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.f.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.f.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -19,6 +19,10 @@\n + \n +     bb1: {\n +         goto -> bb1;                     // scope 1 at $DIR/inline-diverging.rs:39:5: 39:12\n++     }\n++ \n++     bb2 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-diverging.rs:7:1: 9:2\n       }\n   }\n   "}, {"sha": "da55260e284ea645f42788a5cbcdc7f525b47d5d", "filename": "src/test/mir-opt/inline/inline_diverging.g.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -44,6 +44,10 @@\n +                                          // mir::Constant\n +                                          // + span: $SRC_DIR/std/src/panic.rs:LL:COL\n +                                          // + literal: Const { ty: &str, val: Value(Slice(..)) }\n++     }\n++ \n++     bb3 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-diverging.rs:12:1: 18:2\n       }\n   }\n   "}, {"sha": "0a19daa5045c9e31c0fcec07235217a8b7c583f7", "filename": "src/test/mir-opt/inline/inline_diverging.h.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.h.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.h.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.h.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -52,6 +52,10 @@\n + \n +     bb1: {\n +         goto -> bb1;                     // scope 5 at $DIR/inline-diverging.rs:39:5: 39:12\n++     }\n++ \n++     bb2 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-diverging.rs:21:1: 23:2\n       }\n   }\n   "}, {"sha": "3e1c4a4670143e3f0da0c595ad4cc8291942f8a0", "filename": "src/test/mir-opt/inline/inline_generator.main.Inline.diff", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -30,6 +30,9 @@\n +         let mut _10: bool;               // in scope 6 at $DIR/inline-generator.rs:15:9: 15:9\n +         let _11: bool;                   // in scope 6 at $DIR/inline-generator.rs:15:6: 15:7\n +         let mut _12: u32;                // in scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n++         let mut _13: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]; // in scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n++         let mut _14: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]; // in scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n++         let mut _15: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]; // in scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n +     }\n   \n       bb0: {\n@@ -73,7 +76,10 @@\n +         StorageLive(_10);                // scope 0 at $DIR/inline-generator.rs:9:14: 9:46\n +         StorageLive(_11);                // scope 0 at $DIR/inline-generator.rs:9:14: 9:46\n +         StorageLive(_12);                // scope 0 at $DIR/inline-generator.rs:9:14: 9:46\n-+         _12 = discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]))); // scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n++         StorageLive(_13);                // scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n++         _13 = move (_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]); // scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n++         _12 = discriminant((*_13));      // scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n++         StorageDead(_13);                // scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n +         switchInt(move _12) -> [0_u32: bb3, 1_u32: bb8, 3_u32: bb7, otherwise: bb9]; // scope 6 at $DIR/inline-generator.rs:15:5: 15:41\n       }\n   \n@@ -118,7 +124,10 @@\n +         Deinit(_1);                      // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n +         ((_1 as Yielded).0: i32) = move _8; // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n +         discriminant(_1) = 0;            // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n-+         discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]))) = 3; // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n++         StorageLive(_14);                // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n++         _14 = move (_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]); // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n++         discriminant((*_14)) = 3;        // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n++         StorageDead(_14);                // scope 6 at $DIR/inline-generator.rs:15:11: 15:39\n +         goto -> bb1;                     // scope 0 at $DIR/inline-generator.rs:15:11: 15:39\n +     }\n + \n@@ -129,7 +138,10 @@\n +         Deinit(_1);                      // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n +         ((_1 as Complete).0: bool) = move _10; // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n +         discriminant(_1) = 1;            // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n-+         discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]))) = 1; // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n++         StorageLive(_15);                // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n++         _15 = move (_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]); // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n++         discriminant((*_15)) = 1;        // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n++         StorageDead(_15);                // scope 6 at $DIR/inline-generator.rs:15:41: 15:41\n +         goto -> bb1;                     // scope 0 at $DIR/inline-generator.rs:15:41: 15:41\n +     }\n + "}, {"sha": "65891cbb660e11cafc20d8642749c53d49e0a9b9", "filename": "src/test/mir-opt/inline/inline_instruction_set.default.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_instruction_set.default.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_instruction_set.default.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_instruction_set.default.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -39,6 +39,10 @@\n           StorageDead(_3);                 // scope 0 at $DIR/inline-instruction-set.rs:53:30: 53:31\n           _0 = const ();                   // scope 0 at $DIR/inline-instruction-set.rs:50:18: 54:2\n           return;                          // scope 0 at $DIR/inline-instruction-set.rs:54:2: 54:2\n++     }\n++ \n++     bb3 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-instruction-set.rs:50:1: 54:2\n       }\n   }\n   "}, {"sha": "20e1d0ae4d5da6254cbe7d72241c012695aa2cd1", "filename": "src/test/mir-opt/inline/inline_instruction_set.t32.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_instruction_set.t32.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_instruction_set.t32.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_instruction_set.t32.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -41,6 +41,10 @@\n           StorageDead(_3);                 // scope 0 at $DIR/inline-instruction-set.rs:46:30: 46:31\n           _0 = const ();                   // scope 0 at $DIR/inline-instruction-set.rs:41:14: 47:2\n           return;                          // scope 0 at $DIR/inline-instruction-set.rs:47:2: 47:2\n++     }\n++ \n++     bb3 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-instruction-set.rs:41:1: 47:2\n       }\n   }\n   "}, {"sha": "eca76df576bf6f5caa1376e6ef616738c4e29a77", "filename": "src/test/mir-opt/inline/inline_options.main.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_options.main.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_options.main.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_options.main.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -52,4 +52,8 @@ fn main() -> () {\n         _0 = const ();                   // scope 0 at $DIR/inline-options.rs:8:11: 11:2\n         return;                          // scope 0 at $DIR/inline-options.rs:11:2: 11:2\n     }\n+\n+    bb5 (cleanup): {\n+        resume;                          // scope 0 at $DIR/inline-options.rs:8:1: 11:2\n+    }\n }"}, {"sha": "2d85ff9a0cbc229609c31f820e99f2b11072d328", "filename": "src/test/mir-opt/inline/inline_retag.bar.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_retag.bar.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_retag.bar.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_retag.bar.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -69,4 +69,8 @@ fn bar() -> bool {\n         StorageDead(_4);                 // scope 0 at $DIR/inline-retag.rs:13:1: 13:2\n         return;                          // scope 0 at $DIR/inline-retag.rs:13:2: 13:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/inline-retag.rs:10:1: 13:2\n+    }\n }"}, {"sha": "7170cd4057200196a2c4ccc817783feb97bd67a0", "filename": "src/test/mir-opt/inline/inline_shims.clone.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.clone.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.clone.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.clone.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -21,6 +21,10 @@\n +         _0 = (*_2);                      // scope 1 at $SRC_DIR/core/src/clone.rs:LL:COL\n           StorageDead(_2);                 // scope 0 at $DIR/inline-shims.rs:6:13: 6:14\n           return;                          // scope 0 at $DIR/inline-shims.rs:7:2: 7:2\n++     }\n++ \n++     bb1 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-shims.rs:5:1: 7:2\n       }\n   }\n   "}, {"sha": "aa55c90fcfb556b8197a40b2744d786cdf43a6cb", "filename": "src/test/mir-opt/inline/inline_shims.drop.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.drop.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.drop.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.drop.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -51,6 +51,10 @@\n + \n +     bb3: {\n +         drop((((*_5) as Some).0: B)) -> bb2; // scope 3 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n++     }\n++ \n++     bb4 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-shims.rs:10:1: 13:2\n       }\n   }\n   "}, {"sha": "8e93baf6a7050b7b6e181d1e32d4761299c9c02e", "filename": "src/test/mir-opt/inline/inline_specialization.main.Inline.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_specialization.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_specialization.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_specialization.main.Inline.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -23,6 +23,10 @@\n           _0 = const ();                   // scope 0 at $DIR/inline-specialization.rs:4:11: 6:2\n           StorageDead(_1);                 // scope 0 at $DIR/inline-specialization.rs:6:1: 6:2\n           return;                          // scope 0 at $DIR/inline-specialization.rs:6:2: 6:2\n++     }\n++ \n++     bb1 (cleanup): {\n++         resume;                          // scope 0 at $DIR/inline-specialization.rs:4:1: 6:2\n       }\n   }\n   "}, {"sha": "64375b6edc93e0c50a218f14c0def727b70f6ab3", "filename": "src/test/mir-opt/inline/inline_trait_method_2.test2.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_trait_method_2.test2.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Finline_trait_method_2.test2.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_trait_method_2.test2.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -29,4 +29,8 @@ fn test2(_1: &dyn X) -> bool {\n         StorageDead(_2);                 // scope 0 at $DIR/inline-trait-method_2.rs:5:11: 5:12\n         return;                          // scope 0 at $DIR/inline-trait-method_2.rs:6:2: 6:2\n     }\n+\n+    bb2 (cleanup): {\n+        resume;                          // scope 0 at $DIR/inline-trait-method_2.rs:4:1: 6:2\n+    }\n }"}, {"sha": "56a23cde0c7e1c2909daf10ad84c1bf6223df252", "filename": "src/test/mir-opt/inline/issue_58867_inline_as_ref_as_mut.a.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.a.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.a.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.a.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -27,4 +27,8 @@ fn a(_1: &mut [T]) -> &mut [T] {\n         StorageDead(_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:1: 4:2\n         return;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:2: 4:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:2:1: 4:2\n+    }\n }"}, {"sha": "0bb3445a2d0d298ef8e2608c8ccd61034bc8091b", "filename": "src/test/mir-opt/inline/issue_58867_inline_as_ref_as_mut.b.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.b.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.b.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.b.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -35,4 +35,8 @@ fn b(_1: &mut Box<T>) -> &mut T {\n         StorageDead(_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:9:1: 9:2\n         return;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:9:2: 9:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:7:1: 9:2\n+    }\n }"}, {"sha": "326b2ad71c0e54da28fbddf31b44a8d5ff50fb8e", "filename": "src/test/mir-opt/inline/issue_58867_inline_as_ref_as_mut.c.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.c.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.c.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.c.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -19,4 +19,8 @@ fn c(_1: &[T]) -> &[T] {\n         StorageDead(_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:14:1: 14:2\n         return;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:14:2: 14:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:12:1: 14:2\n+    }\n }"}, {"sha": "c22852b99f4e9150326069e8a129de60bfbf4114", "filename": "src/test/mir-opt/inline/issue_58867_inline_as_ref_as_mut.d.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.d.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.d.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.d.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -23,4 +23,8 @@ fn d(_1: &Box<T>) -> &T {\n         StorageDead(_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:19:1: 19:2\n         return;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:19:2: 19:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:17:1: 19:2\n+    }\n }"}, {"sha": "7c3048a69af615602d0ec7fe000e358902ad3b98", "filename": "src/test/mir-opt/inline/issue_76997_inline_scopes_parenting.main.Inline.after.mir", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -39,4 +39,8 @@ fn main() -> () {\n         StorageDead(_1);                 // scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:7:1: 7:2\n         return;                          // scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:7:2: 7:2\n     }\n+\n+    bb1 (cleanup): {\n+        resume;                          // scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:4:1: 7:2\n+    }\n }"}, {"sha": "447fe654c0cca41475569bc6f8aaceb502402338", "filename": "src/test/mir-opt/remove_storage_markers.main.RemoveStorageMarkers.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -96,5 +96,9 @@\n           _10 = discriminant(_7);          // scope 2 at $DIR/remove_storage_markers.rs:8:14: 8:19\n           switchInt(move _10) -> [0_isize: bb3, otherwise: bb2]; // scope 2 at $DIR/remove_storage_markers.rs:8:14: 8:19\n       }\n+  \n+      bb5 (cleanup): {\n+          resume;                          // scope 0 at $DIR/remove_storage_markers.rs:6:1: 11:2\n+      }\n   }\n   "}, {"sha": "44eda308bdf9020f0bb79119961c7c94cfb2c803", "filename": "src/test/mir-opt/remove_unneeded_drops.opt.RemoveUnneededDrops.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -22,6 +22,10 @@\n           StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:4:12: 4:13\n -         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:3:17: 5:2\n           return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:5:2: 5:2\n+-     }\n+- \n+-     bb2 (cleanup): {\n+-         resume;                          // scope 0 at $DIR/remove_unneeded_drops.rs:3:1: 5:2\n       }\n   }\n   "}, {"sha": "85de00e7001a7c5a7e4e2e29cde2803cbf8071b4", "filename": "src/test/mir-opt/remove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -22,6 +22,10 @@\n           StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:14:12: 14:13\n -         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:13:36: 15:2\n           return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:15:2: 15:2\n+-     }\n+- \n+-     bb2 (cleanup): {\n+-         resume;                          // scope 0 at $DIR/remove_unneeded_drops.rs:13:1: 15:2\n       }\n   }\n   "}, {"sha": "d2dbfbe1093a85fbb2c45a91a093cd25ba7768e4", "filename": "src/test/mir-opt/simplify_arm.id_try.SimplifyArmIdentity.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id_try.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id_try.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id_try.SimplifyArmIdentity.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -85,5 +85,9 @@\n       bb4: {\n           return;                          // scope 0 at $DIR/simplify-arm.rs:41:2: 41:2\n       }\n+  \n+      bb5 (cleanup): {\n+          resume;                          // scope 0 at $DIR/simplify-arm.rs:35:1: 41:2\n+      }\n   }\n   "}, {"sha": "a993ea73665c4882abc5d621a485a60021a37c4b", "filename": "src/test/mir-opt/simplify_arm.id_try.SimplifyBranchSame.diff", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id_try.SimplifyBranchSame.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e71913e847666ae9c35417c9590091d72ec6a5e9/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id_try.SimplifyBranchSame.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id_try.SimplifyBranchSame.diff?ref=e71913e847666ae9c35417c9590091d72ec6a5e9", "patch": "@@ -85,5 +85,9 @@\n       bb4: {\n           return;                          // scope 0 at $DIR/simplify-arm.rs:41:2: 41:2\n       }\n+  \n+      bb5 (cleanup): {\n+          resume;                          // scope 0 at $DIR/simplify-arm.rs:35:1: 41:2\n+      }\n   }\n   "}]}