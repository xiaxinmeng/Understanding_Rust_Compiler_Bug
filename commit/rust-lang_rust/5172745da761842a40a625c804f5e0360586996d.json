{"sha": "5172745da761842a40a625c804f5e0360586996d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNzI3NDVkYTc2MTg0MmE0MGE2MjVjODA0ZjVlMDM2MDU4Njk5NmQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-12T06:42:44Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-24T01:34:39Z"}, "message": "Warn instead of error when using an inaccessable extern crate", "tree": {"sha": "eef3f332eadeaa93984c816548abac601e6f43d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef3f332eadeaa93984c816548abac601e6f43d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5172745da761842a40a625c804f5e0360586996d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5172745da761842a40a625c804f5e0360586996d", "html_url": "https://github.com/rust-lang/rust/commit/5172745da761842a40a625c804f5e0360586996d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5172745da761842a40a625c804f5e0360586996d/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "html_url": "https://github.com/rust-lang/rust/commit/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "4bb69a2688a41ded0c12a090929b61d422f093e5", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5172745da761842a40a625c804f5e0360586996d/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5172745da761842a40a625c804f5e0360586996d/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=5172745da761842a40a625c804f5e0360586996d", "patch": "@@ -124,6 +124,12 @@ declare_lint! {\n     \"detect private items in public interfaces not caught by the old implementation\"\n }\n \n+declare_lint! {\n+    pub INACCESSIBLE_EXTERN_CRATE,\n+    Warn,\n+    \"use of inaccessible extern crate erroneously allowed\"\n+}\n+\n declare_lint! {\n     pub INVALID_TYPE_PARAM_DEFAULT,\n     Warn,\n@@ -167,6 +173,7 @@ impl LintPass for HardwiredLints {\n             TRIVIAL_CASTS,\n             TRIVIAL_NUMERIC_CASTS,\n             PRIVATE_IN_PUBLIC,\n+            INACCESSIBLE_EXTERN_CRATE,\n             INVALID_TYPE_PARAM_DEFAULT,\n             MATCH_OF_UNIT_VARIANT_VIA_PAREN_DOTDOT,\n             CONST_ERR,"}, {"sha": "1cf0339c086e5137269a141fe784d630e033f1b9", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5172745da761842a40a625c804f5e0360586996d/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5172745da761842a40a625c804f5e0360586996d/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=5172745da761842a40a625c804f5e0360586996d", "patch": "@@ -158,6 +158,10 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             id: LintId::of(PRIVATE_IN_PUBLIC),\n             reference: \"the explanation for E0446 (`--explain E0446`)\",\n         },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(INACCESSIBLE_EXTERN_CRATE),\n+            reference: \"PR 31362 <https://github.com/rust-lang/rust/pull/31362>\",\n+        },\n         FutureIncompatibleInfo {\n             id: LintId::of(INVALID_TYPE_PARAM_DEFAULT),\n             reference: \"PR 30742 <https://github.com/rust-lang/rust/pull/30724>\","}, {"sha": "8908dac7a36dd72c9cd355cd6e94e3da09c9a13a", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5172745da761842a40a625c804f5e0360586996d/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5172745da761842a40a625c804f5e0360586996d/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=5172745da761842a40a625c804f5e0360586996d", "patch": "@@ -743,6 +743,7 @@ impl<'a, 'tcx> PrivacyVisitor<'a, 'tcx> {\n                      source_did: Option<DefId>,\n                      msg: &str)\n                      -> CheckResult {\n+        use rustc_front::hir::Item_::ItemExternCrate;\n         debug!(\"ensure_public(span={:?}, to_check={:?}, source_did={:?}, msg={:?})\",\n                span, to_check, source_did, msg);\n         let def_privacy = self.def_privacy(to_check);\n@@ -763,6 +764,21 @@ impl<'a, 'tcx> PrivacyVisitor<'a, 'tcx> {\n         // be local.)\n         let def_id = source_did.unwrap_or(to_check);\n         let node_id = self.tcx.map.as_local_node_id(def_id);\n+\n+        // Warn when using a inaccessible extern crate.\n+        if let Some(node_id) = self.tcx.map.as_local_node_id(to_check) {\n+            match self.tcx.map.get(node_id) {\n+                ast_map::Node::NodeItem(&hir::Item { node: ItemExternCrate(_), name, .. }) => {\n+                    self.tcx.sess.add_lint(lint::builtin::INACCESSIBLE_EXTERN_CRATE,\n+                                           node_id,\n+                                           span,\n+                                           format!(\"extern crate `{}` is private\", name));\n+                    return None;\n+                }\n+                _ => {}\n+            }\n+        }\n+\n         let (err_span, err_msg) = if Some(id) == node_id {\n             return Some((span, format!(\"{} is private\", msg), None));\n         } else {"}, {"sha": "56a41a15ab3c0b63317895c62c3295fd3c884779", "filename": "src/test/compile-fail/extern-crate-visibility.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5172745da761842a40a625c804f5e0360586996d/src%2Ftest%2Fcompile-fail%2Fextern-crate-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5172745da761842a40a625c804f5e0360586996d/src%2Ftest%2Fcompile-fail%2Fextern-crate-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextern-crate-visibility.rs?ref=5172745da761842a40a625c804f5e0360586996d", "patch": "@@ -8,16 +8,27 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+#![allow(unused_imports)]\n+\n mod foo {\n     extern crate core;\n-    pub use self::core as reexported_core; // Check that private extern crates can be reexported\n }\n \n-// Check that private crates cannot be used from outside their modules\n-use foo::core; //~ ERROR module `core` is inaccessible\n-use foo::core::cell; //~ ERROR\n+// Check that private crates can be used from outside their modules, albeit with warnings\n+use foo::core; //~ WARN extern crate `core` is private\n+//~^ WARN this was previously accepted by the compiler but is being phased out\n+use foo::core::cell; //~ WARN extern crate `core` is private\n+//~^ WARN this was previously accepted by the compiler but is being phased out\n+\n+fn f() {\n+    foo::core::cell::Cell::new(0); //~ WARN extern crate `core` is private\n+    //~^ WARN this was previously accepted by the compiler but is being phased out\n \n-fn main() {\n     use foo::*;\n     mod core {} // Check that private crates are not glob imported\n }\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}