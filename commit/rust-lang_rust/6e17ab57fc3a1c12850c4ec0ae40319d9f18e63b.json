{"sha": "6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMTdhYjU3ZmMzYTFjMTI4NTBjNGVjMGFlNDAzMTlkOWYxOGU2M2I=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-15T19:29:01Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-23T17:55:59Z"}, "message": "Lower `if let` before the arms.", "tree": {"sha": "fa3a06e64392d5f91160eb10548e0f623a7b1fb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa3a06e64392d5f91160eb10548e0f623a7b1fb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b", "html_url": "https://github.com/rust-lang/rust/commit/6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae6aa22cf26fede2177abe4ff974030058885b7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6aa22cf26fede2177abe4ff974030058885b7a", "html_url": "https://github.com/rust-lang/rust/commit/ae6aa22cf26fede2177abe4ff974030058885b7a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "314e5103cc2de3f5ac42868c69d76a626806d9f3", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=6e17ab57fc3a1c12850c4ec0ae40319d9f18e63b", "patch": "@@ -353,7 +353,6 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         let else_arm = self.arm(else_pat, else_expr);\n \n         // Handle then + scrutinee:\n-        let then_expr = self.lower_block_expr(then);\n         let (then_pat, scrutinee, desugar) = match cond.kind {\n             // `<pat> => <then>`:\n             ExprKind::Let(ref pat, ref scrutinee) => {\n@@ -375,6 +374,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 (pat, cond, hir::MatchSource::IfDesugar { contains_else_clause })\n             }\n         };\n+        let then_expr = self.lower_block_expr(then);\n         let then_arm = self.arm(then_pat, self.arena.alloc(then_expr));\n \n         hir::ExprKind::Match(scrutinee, arena_vec![self; then_arm, else_arm], desugar)\n@@ -400,7 +400,6 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         };\n \n         // Handle then + scrutinee:\n-        let then_expr = self.lower_block_expr(body);\n         let (then_pat, scrutinee, desugar, source) = match cond.kind {\n             ExprKind::Let(ref pat, ref scrutinee) => {\n                 // to:\n@@ -440,6 +439,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 (pat, cond, hir::MatchSource::WhileDesugar, hir::LoopSource::While)\n             }\n         };\n+        let then_expr = self.lower_block_expr(body);\n         let then_arm = self.arm(then_pat, self.arena.alloc(then_expr));\n \n         // `match <scrutinee> { ... }`"}]}