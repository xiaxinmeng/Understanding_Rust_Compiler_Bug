{"sha": "b10b8c3ee41447299504127c341bc363d180356c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMGI4YzNlZTQxNDQ3Mjk5NTA0MTI3YzM0MWJjMzYzZDE4MDM1NmM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T07:13:01Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:04:11Z"}, "message": "std: Add tests for json decoding options", "tree": {"sha": "8b72db30a91c3610b90bc130358709f58ef8a7e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b72db30a91c3610b90bc130358709f58ef8a7e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b10b8c3ee41447299504127c341bc363d180356c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b10b8c3ee41447299504127c341bc363d180356c", "html_url": "https://github.com/rust-lang/rust/commit/b10b8c3ee41447299504127c341bc363d180356c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b10b8c3ee41447299504127c341bc363d180356c/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9188c83015e25978b9c6c4864040dd958bc54b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9188c83015e25978b9c6c4864040dd958bc54b1", "html_url": "https://github.com/rust-lang/rust/commit/c9188c83015e25978b9c6c4864040dd958bc54b1"}], "stats": {"total": 55, "additions": 42, "deletions": 13}, "files": [{"sha": "3868b689a3f35d47429380055b13e812d79466b6", "filename": "src/libstd/json.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b10b8c3ee41447299504127c341bc363d180356c/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b10b8c3ee41447299504127c341bc363d180356c/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=b10b8c3ee41447299504127c341bc363d180356c", "patch": "@@ -1236,6 +1236,8 @@ mod tests {\n     use core::prelude::*;\n     use core::hashmap::linear::LinearMap;\n \n+    use std::serialize::Decodable;\n+\n     fn mk_object(items: &[(~str, Json)]) -> Json {\n         let mut d = ~LinearMap::new();\n \n@@ -1389,6 +1391,8 @@ mod tests {\n     }\n \n     #[auto_encode]\n+    #[auto_decode]\n+    #[deriving(Eq)]\n     enum Animal {\n         Dog,\n         Frog(~str, int)\n@@ -1706,6 +1710,20 @@ mod tests {\n                   ]));\n     }\n \n+    #[test]\n+    fn test_read_none() {\n+        let decoder = Decoder(from_str(~\"null\").unwrap());\n+        let value: Option<~str> = Decodable::decode(&decoder);\n+        assert_eq!(value, None);\n+    }\n+\n+    #[test]\n+    fn test_read_some() {\n+        let decoder = Decoder(from_str(~\"\\\"jodhpurs\\\"\").unwrap());\n+        let value: Option<~str> = Decodable::decode(&decoder);\n+        assert_eq!(value, Some(~\"jodhpurs\"));\n+    }\n+\n     #[test]\n     fn test_multiline_errors() {\n         assert_eq!(from_str(~\"{\\n  \\\"foo\\\":\\n \\\"bar\\\"\"),"}, {"sha": "7f6b511f9f02acf20cda7fdda24ee3b9c4c2026a", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/b10b8c3ee41447299504127c341bc363d180356c/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b10b8c3ee41447299504127c341bc363d180356c/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=b10b8c3ee41447299504127c341bc363d180356c", "patch": "@@ -326,19 +326,30 @@ mod test {\n             @~\"fn foo (x : int) { x; }\",\n             ~[],\n             new_parse_sess(None));\n-        assert_eq!(to_json_str(@tts),\n-                    ~\"[[\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"fn\\\",false]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"foo\\\",false]]]],\\\n-                      [\\\"tt_delim\\\",[[[\\\"tt_tok\\\",[null,[\\\"LPAREN\\\",[]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"x\\\",false]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"COLON\\\",[]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"int\\\",false]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"RPAREN\\\",[]]]]]]],\\\n-                      [\\\"tt_delim\\\",[[[\\\"tt_tok\\\",[null,[\\\"LBRACE\\\",[]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"x\\\",false]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"SEMI\\\",[]]]],\\\n-                      [\\\"tt_tok\\\",[null,[\\\"RBRACE\\\",[]]]]]]]]\"\n-                   );\n+        assert_eq!(\n+            to_json_str(@tts),\n+            ~\"[\\\n+                [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"fn\\\",false]]]],\\\n+                [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"foo\\\",false]]]],\\\n+                [\\\"tt_delim\\\",[\\\n+                    [\\\n+                        [\\\"tt_tok\\\",[null,[\\\"LPAREN\\\",[]]]],\\\n+                        [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"x\\\",false]]]],\\\n+                        [\\\"tt_tok\\\",[null,[\\\"COLON\\\",[]]]],\\\n+                        [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"int\\\",false]]]],\\\n+                        [\\\"tt_tok\\\",[null,[\\\"RPAREN\\\",[]]]]\\\n+                    ]\\\n+                ]],\\\n+                [\\\"tt_delim\\\",[\\\n+                    [\\\n+                        [\\\"tt_tok\\\",[null,[\\\"LBRACE\\\",[]]]],\\\n+                        [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"x\\\",false]]]],\\\n+                        [\\\"tt_tok\\\",[null,[\\\"SEMI\\\",[]]]],\\\n+                        [\\\"tt_tok\\\",[null,[\\\"RBRACE\\\",[]]]]\\\n+                    ]\\\n+                ]]\\\n+            ]\"\n+        );\n         let ast1 = new_parser_from_tts(new_parse_sess(None),~[],tts)\n             .parse_item(~[]);\n         let ast2 = parse_item_from_source_str("}]}