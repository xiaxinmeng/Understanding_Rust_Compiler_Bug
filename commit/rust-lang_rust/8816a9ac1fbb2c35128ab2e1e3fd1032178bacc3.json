{"sha": "8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4MTZhOWFjMWZiYjJjMzUxMjhhYjJlMWUzZmQxMDMyMTc4YmFjYzM=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-04-09T21:00:23Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-04-10T03:43:31Z"}, "message": "allow multiple args to `dbg!(..)`", "tree": {"sha": "9a1865ecc0e02acb3f564103707c4b7fb6f0ef5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a1865ecc0e02acb3f564103707c4b7fb6f0ef5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3", "html_url": "https://github.com/rust-lang/rust/commit/8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3750348daff89741e3153e0e120aa70a45ff5b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3750348daff89741e3153e0e120aa70a45ff5b68", "html_url": "https://github.com/rust-lang/rust/commit/3750348daff89741e3153e0e120aa70a45ff5b68"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c1cd6b8429b5c522e20025d255aad816c23d41d1", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=8816a9ac1fbb2c35128ab2e1e3fd1032178bacc3", "patch": "@@ -314,6 +314,13 @@ macro_rules! eprintln {\n /// You can also use `dbg!()` without a value to just print the\n /// file and line whenever it's reached.\n ///\n+/// Finally, if you want to `dbg!(..)` multiple values, it will treat them as\n+/// a tuple (and return it, too):\n+///\n+/// ```\n+/// assert_eq!(dbg!(1usize, 2u32), (1, 2));\n+/// ```\n+///\n /// [stderr]: https://en.wikipedia.org/wiki/Standard_streams#Standard_error_(stderr)\n /// [`debug!`]: https://docs.rs/log/*/log/macro.debug.html\n /// [`log`]: https://crates.io/crates/log\n@@ -333,6 +340,9 @@ macro_rules! dbg {\n                 tmp\n             }\n         }\n+    };\n+    ($val:expr, $($more:expr),+) => {\n+        dbg!(($val, $($more),*))\n     }\n }\n "}]}