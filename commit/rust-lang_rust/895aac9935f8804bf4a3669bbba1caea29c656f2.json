{"sha": "895aac9935f8804bf4a3669bbba1caea29c656f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NWFhYzk5MzVmODgwNGJmNGEzNjY5YmJiYTFjYWVhMjljNjU2ZjI=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-10-02T09:35:24Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-10-08T06:24:49Z"}, "message": "debuginfo: Add LLDB version handling to test infrastructure.", "tree": {"sha": "57b958dafd2fa1c958e0509698659986f7ddfed6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57b958dafd2fa1c958e0509698659986f7ddfed6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/895aac9935f8804bf4a3669bbba1caea29c656f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/895aac9935f8804bf4a3669bbba1caea29c656f2", "html_url": "https://github.com/rust-lang/rust/commit/895aac9935f8804bf4a3669bbba1caea29c656f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/895aac9935f8804bf4a3669bbba1caea29c656f2/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "593174b42d522f7c5e90ea18402cf67306e2481d", "url": "https://api.github.com/repos/rust-lang/rust/commits/593174b42d522f7c5e90ea18402cf67306e2481d", "html_url": "https://github.com/rust-lang/rust/commit/593174b42d522f7c5e90ea18402cf67306e2481d"}], "stats": {"total": 98, "additions": 95, "deletions": 3}, "files": [{"sha": "aced2fd64dbb28106be16ad47bff25b64e1e47e6", "filename": "configure", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/895aac9935f8804bf4a3669bbba1caea29c656f2/configure", "raw_url": "https://github.com/rust-lang/rust/raw/895aac9935f8804bf4a3669bbba1caea29c656f2/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=895aac9935f8804bf4a3669bbba1caea29c656f2", "patch": "@@ -535,13 +535,17 @@ probe CFG_LLDB             lldb\n \n if [ ! -z \"$CFG_GDB\" ]\n then\n-    # Extract the version\n+    # Store GDB's version\n     CFG_GDB_VERSION=$($CFG_GDB --version 2>/dev/null | head -1)\n     putvar CFG_GDB_VERSION\n fi\n \n if [ ! -z \"$CFG_LLDB\" ]\n then\n+    # Store LLDB's version\n+    CFG_LLDB_VERSION=$($CFG_LLDB --version 2>/dev/null | head -1)\n+    putvar CFG_LLDB_VERSION\n+\n     # If CFG_LLDB_PYTHON_DIR is not already set from the outside and valid, try to read it from\n     # LLDB via the -P commandline options.\n     if [ -z \"$CFG_LLDB_PYTHON_DIR\" ] || [ ! -d \"$CFG_LLDB_PYTHON_DIR\" ]"}, {"sha": "04be295c27136193aabae39594bf7b5ae67490b8", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/895aac9935f8804bf4a3669bbba1caea29c656f2/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/895aac9935f8804bf4a3669bbba1caea29c656f2/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=895aac9935f8804bf4a3669bbba1caea29c656f2", "patch": "@@ -625,6 +625,7 @@ CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) := \\\n         --target $(2) \\\n         --host $(3) \\\n         --gdb-version=\"$(CFG_GDB_VERSION)\" \\\n+        --lldb-version=\"$(CFG_LLDB_VERSION)\" \\\n         --android-cross-path=$(CFG_ANDROID_CROSS_PATH) \\\n         --adb-path=$(CFG_ADB) \\\n         --adb-test-dir=$(CFG_ADB_TEST_DIR) \\"}, {"sha": "4c602b8e1a3a5ac2e49391c338d551c56cc8be2a", "filename": "src/compiletest/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcommon.rs?ref=895aac9935f8804bf4a3669bbba1caea29c656f2", "patch": "@@ -133,6 +133,9 @@ pub struct Config {\n     // Version of GDB\n     pub gdb_version: Option<String>,\n \n+    // Version of LLDB\n+    pub lldb_version: Option<String>,\n+\n     // Path to the android tools\n     pub android_cross_path: Path,\n "}, {"sha": "95bc79f1208ca843ea1505710e9ca1b64061a032", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=895aac9935f8804bf4a3669bbba1caea29c656f2", "patch": "@@ -71,7 +71,8 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n           optflag(\"\", \"jit\", \"run tests under the JIT\"),\n           optopt(\"\", \"target\", \"the target to build for\", \"TARGET\"),\n           optopt(\"\", \"host\", \"the host to build for\", \"HOST\"),\n-          optopt(\"\", \"gdb-version\", \"the version of GDB used\", \"MAJOR.MINOR\"),\n+          optopt(\"\", \"gdb-version\", \"the version of GDB used\", \"VERSION STRING\"),\n+          optopt(\"\", \"lldb-version\", \"the version of LLDB used\", \"VERSION STRING\"),\n           optopt(\"\", \"android-cross-path\", \"Android NDK standalone path\", \"PATH\"),\n           optopt(\"\", \"adb-path\", \"path to the android debugger\", \"PATH\"),\n           optopt(\"\", \"adb-test-dir\", \"path to tests for the android debugger\", \"PATH\"),\n@@ -149,6 +150,7 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         target: opt_str2(matches.opt_str(\"target\")),\n         host: opt_str2(matches.opt_str(\"host\")),\n         gdb_version: extract_gdb_version(matches.opt_str(\"gdb-version\")),\n+        lldb_version: extract_lldb_version(matches.opt_str(\"lldb-version\")),\n         android_cross_path: opt_path(matches, \"android-cross-path\"),\n         adb_path: opt_str2(matches.opt_str(\"adb-path\")),\n         adb_test_dir: opt_str2(matches.opt_str(\"adb-test-dir\")),\n@@ -391,3 +393,37 @@ fn extract_gdb_version(full_version_line: Option<String>) -> Option<String> {\n         _ => None\n     }\n }\n+\n+fn extract_lldb_version(full_version_line: Option<String>) -> Option<String> {\n+    // Extract the major LLDB version from the given version string.\n+    // LLDB version strings are different for Apple and non-Apple platforms.\n+    // At the moment, this function only supports the Apple variant, which looks\n+    // like this:\n+    //\n+    // LLDB-179.5 (older versions)\n+    // lldb-300.2.51 (new versions)\n+    //\n+    // We are only interested in the major version number, so this function\n+    // will return `Some(\"179\")` and `Some(\"300\")` respectively.\n+\n+    match full_version_line {\n+        Some(ref full_version_line)\n+          if full_version_line.as_slice().trim().len() > 0 => {\n+            let full_version_line = full_version_line.as_slice().trim();\n+\n+            let re = Regex::new(r\"[Ll][Ll][Dd][Bb]-([0-9]+)\").unwrap();\n+\n+            match re.captures(full_version_line) {\n+                Some(captures) => {\n+                    Some(captures.at(1).to_string())\n+                }\n+                None => {\n+                    println!(\"Could not extract LLDB version from line '{}'\",\n+                             full_version_line);\n+                    None\n+                }\n+            }\n+        },\n+        _ => None\n+    }\n+}"}, {"sha": "a9c984d8061df8f6d97feee053cfd47eeb3f3cee", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=895aac9935f8804bf4a3669bbba1caea29c656f2", "patch": "@@ -181,14 +181,42 @@ pub fn is_test_ignored(config: &Config, testfile: &Path) -> bool {\n         }\n     }\n \n+    fn ignore_lldb(config: &Config, line: &str) -> bool {\n+        if config.mode != common::DebugInfoLldb {\n+            return false;\n+        }\n+\n+        if parse_name_directive(line, \"ignore-lldb\") {\n+            return true;\n+        }\n+\n+        match config.lldb_version {\n+            Some(ref actual_version) => {\n+                if line.contains(\"min-lldb-version\") {\n+                    let min_version = line.trim()\n+                                          .split(' ')\n+                                          .last()\n+                                          .expect(\"Malformed lldb version directive\");\n+                    // Ignore if actual version is smaller the minimum required\n+                    // version\n+                    lldb_version_to_int(actual_version.as_slice()) <\n+                        lldb_version_to_int(min_version.as_slice())\n+                } else {\n+                    false\n+                }\n+            }\n+            None => false\n+        }\n+    }\n+\n     let val = iter_header(testfile, |ln| {\n         !parse_name_directive(ln, \"ignore-test\") &&\n         !parse_name_directive(ln, ignore_target(config).as_slice()) &&\n         !parse_name_directive(ln, ignore_stage(config).as_slice()) &&\n         !(config.mode == common::Pretty && parse_name_directive(ln, \"ignore-pretty\")) &&\n         !(config.target != config.host && parse_name_directive(ln, \"ignore-cross-compile\")) &&\n         !ignore_gdb(config, ln) &&\n-        !(config.mode == common::DebugInfoLldb && parse_name_directive(ln, \"ignore-lldb\"))\n+        !ignore_lldb(config, ln)\n     });\n \n     !val\n@@ -330,3 +358,12 @@ pub fn gdb_version_to_int(version_string: &str) -> int {\n \n     return major * 1000 + minor;\n }\n+\n+pub fn lldb_version_to_int(version_string: &str) -> int {\n+    let error_string = format!(\n+        \"Encountered LLDB version string with unexpected format: {}\",\n+        version_string);\n+    let error_string = error_string.as_slice();\n+    let major: int = FromStr::from_str(version_string).expect(error_string);\n+    return major;\n+}"}, {"sha": "2b52ac65e4788b66621c544874e77371b34fc7fd", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895aac9935f8804bf4a3669bbba1caea29c656f2/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=895aac9935f8804bf4a3669bbba1caea29c656f2", "patch": "@@ -626,6 +626,17 @@ fn run_debuginfo_lldb_test(config: &Config, props: &TestProps, testfile: &Path)\n \n     let exe_file = make_exe_name(config, testfile);\n \n+    match config.lldb_version {\n+        Some(ref version) => {\n+            println!(\"NOTE: compiletest thinks it is using LLDB version {}\",\n+                     version.as_slice());\n+        }\n+        _ => {\n+            println!(\"NOTE: compiletest does not know which version of \\\n+                      LLDB it is using\");\n+        }\n+    }\n+\n     // Parse debugger commands etc from test files\n     let DebuggerCommands {\n         commands,"}]}