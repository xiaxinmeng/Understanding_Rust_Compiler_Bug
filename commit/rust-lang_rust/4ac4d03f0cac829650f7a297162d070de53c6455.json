{"sha": "4ac4d03f0cac829650f7a297162d070de53c6455", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYzRkMDNmMGNhYzgyOTY1MGY3YTI5NzE2MmQwNzBkZTUzYzY0NTU=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-02-28T15:37:49Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-02-28T15:37:49Z"}, "message": "Update the function declarations with rust abi. A cdecl\n\nfn write(int fd, rustrt.vbuf buf, uint count) -> int;\n\ncompiles to\n\ndeclare i32 @write(i32, i8*, i32)\n\nand a rust\n\nfn vec_buf[T](vec[T] v, uint offset) -> vbuf;\n\ncompiles to\n\ndeclare i8* @vec_buf(%task*, %tydesc*, %\"vec[<P0:2>]\", i32)\n\nwhich I think is the correct declaration for both :-)", "tree": {"sha": "d52a1e7aab87fcc466fa29ad2d28d0b57332dfd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d52a1e7aab87fcc466fa29ad2d28d0b57332dfd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ac4d03f0cac829650f7a297162d070de53c6455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ac4d03f0cac829650f7a297162d070de53c6455", "html_url": "https://github.com/rust-lang/rust/commit/4ac4d03f0cac829650f7a297162d070de53c6455", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ac4d03f0cac829650f7a297162d070de53c6455/comments", "author": null, "committer": null, "parents": [{"sha": "0120571e90a68befb03892c63c470d0923d425c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0120571e90a68befb03892c63c470d0923d425c4", "html_url": "https://github.com/rust-lang/rust/commit/0120571e90a68befb03892c63c470d0923d425c4"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "3564b1b36d0af4aaa010cec67693af95dd6e73df", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4ac4d03f0cac829650f7a297162d070de53c6455/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac4d03f0cac829650f7a297162d070de53c6455/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=4ac4d03f0cac829650f7a297162d070de53c6455", "patch": "@@ -513,7 +513,18 @@ fn type_of_fn(@crate_ctxt cx,\n fn type_of_native_fn(@crate_ctxt cx, ast.native_abi abi,\n                      vec[ty.arg] inputs,\n                      @ty.t output) -> TypeRef {\n-    let vec[TypeRef] atys = type_of_explicit_args(cx, inputs);\n+    let vec[TypeRef] atys = vec();\n+    if (abi == ast.native_abi_rust) {\n+        atys += T_taskptr(cx.tn);\n+        auto t = ty.ty_native_fn(abi, inputs, output);\n+        auto ty_param_count = ty.count_ty_params(plain_ty(t));\n+        auto i = 0u;\n+        while (i < ty_param_count) {\n+            atys += T_ptr(T_tydesc(cx.tn));\n+            i += 1u;\n+        }\n+    }\n+    atys += type_of_explicit_args(cx, inputs);\n     ret T_fn(atys, type_of_inner(cx, output));\n }\n "}]}