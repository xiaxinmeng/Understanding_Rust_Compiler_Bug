{"sha": "95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YmJjN2VmMzNhZTg0MzZhMDU4YTUxYTJlYzhjNWM0Y2M2ZGE4ZDY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-04T20:56:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-04T20:56:27Z"}, "message": "Rollup merge of #76716 - GuillaumeGomez:stop-complains-on-doc-hidden, r=jyn514\n\nDon't warn for `missing_doc_examples` when item is #[doc(hidden)]\n\nr? `@jyn514`", "tree": {"sha": "275ad55a44363070231ace7e721b1b974f3544e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/275ad55a44363070231ace7e721b1b974f3544e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQUl7CRBK7hj4Ov3rIwAAdHIIAIl44ZQHrmH/bPhIe9EaUSSS\nKxiQzwqAWEnEJ7NB0tEg2g+ZVPCpNE5/V6yUQ2hEZTikCgnSezFD9yx06CZMSFJP\nmkA5YeJPJQnmVWWNgtFMsOxUvXlloS9UdKmJrSj0H03DBekPv1n0qwEwFQsduT2x\npgvLeOvJFS/eAoJxgeo0onMXiRIYnwcQsDXjieiJMELqXIqQ00Tza44r+J8+/g3J\njuIeIhCCGbhPyKaq2p3jJkEr3WGvKxWSDB/U47w+8XdKD6XMnjQXX90MUK9Q6gE4\nvcl5zOiWjh72aY/ezh0t8UiC/W1rc4xZ8tvJYSdQjxUW7xsQFIMIKY8z+j6JO2g=\n=gbol\n-----END PGP SIGNATURE-----\n", "payload": "tree 275ad55a44363070231ace7e721b1b974f3544e0\nparent 409920873cf8a95739a55dc5fe5adb05e1b4758e\nparent 1683cb12e44e433bc75ab3ffa2cfc65c6d0bdd24\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1614891387 +0100\ncommitter GitHub <noreply@github.com> 1614891387 +0100\n\nRollup merge of #76716 - GuillaumeGomez:stop-complains-on-doc-hidden, r=jyn514\n\nDon't warn for `missing_doc_examples` when item is #[doc(hidden)]\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "html_url": "https://github.com/rust-lang/rust/commit/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409920873cf8a95739a55dc5fe5adb05e1b4758e", "url": "https://api.github.com/repos/rust-lang/rust/commits/409920873cf8a95739a55dc5fe5adb05e1b4758e", "html_url": "https://github.com/rust-lang/rust/commit/409920873cf8a95739a55dc5fe5adb05e1b4758e"}, {"sha": "1683cb12e44e433bc75ab3ffa2cfc65c6d0bdd24", "url": "https://api.github.com/repos/rust-lang/rust/commits/1683cb12e44e433bc75ab3ffa2cfc65c6d0bdd24", "html_url": "https://github.com/rust-lang/rust/commit/1683cb12e44e433bc75ab3ffa2cfc65c6d0bdd24"}], "stats": {"total": 85, "additions": 52, "deletions": 33}, "files": [{"sha": "ede9e18a511a8ed0871167a595b8707d27102548", "filename": "src/librustdoc/passes/doc_test_lints.rs", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs?ref=95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "patch": "@@ -9,8 +9,10 @@ use crate::clean::*;\n use crate::core::DocContext;\n use crate::fold::DocFolder;\n use crate::html::markdown::{find_testable_code, ErrorCodes, Ignore, LangString};\n+use crate::visit_ast::inherits_doc_hidden;\n use rustc_middle::lint::LintLevelSource;\n use rustc_session::lint;\n+use rustc_span::symbol::sym;\n \n crate const CHECK_PRIVATE_ITEMS_DOC_TESTS: Pass = Pass {\n     name: \"check-private-items-doc-tests\",\n@@ -51,23 +53,30 @@ impl crate::doctest::Tester for Tests {\n }\n \n crate fn should_have_doc_example(cx: &DocContext<'_>, item: &clean::Item) -> bool {\n-    if matches!(\n-        *item.kind,\n-        clean::StructFieldItem(_)\n-            | clean::VariantItem(_)\n-            | clean::AssocConstItem(_, _)\n-            | clean::AssocTypeItem(_, _)\n-            | clean::TypedefItem(_, _)\n-            | clean::StaticItem(_)\n-            | clean::ConstantItem(_)\n-            | clean::ExternCrateItem(_, _)\n-            | clean::ImportItem(_)\n-            | clean::PrimitiveItem(_)\n-            | clean::KeywordItem(_)\n-    ) {\n+    if !cx.cache.access_levels.is_public(item.def_id)\n+        || matches!(\n+            *item.kind,\n+            clean::StructFieldItem(_)\n+                | clean::VariantItem(_)\n+                | clean::AssocConstItem(_, _)\n+                | clean::AssocTypeItem(_, _)\n+                | clean::TypedefItem(_, _)\n+                | clean::StaticItem(_)\n+                | clean::ConstantItem(_)\n+                | clean::ExternCrateItem(_, _)\n+                | clean::ImportItem(_)\n+                | clean::PrimitiveItem(_)\n+                | clean::KeywordItem(_)\n+        )\n+    {\n         return false;\n     }\n     let hir_id = cx.tcx.hir().local_def_id_to_hir_id(item.def_id.expect_local());\n+    if cx.tcx.hir().attrs(hir_id).lists(sym::doc).has_word(sym::hidden)\n+        || inherits_doc_hidden(cx.tcx, hir_id)\n+    {\n+        return false;\n+    }\n     let (level, source) = cx.tcx.lint_level_at_node(crate::lint::MISSING_DOC_CODE_EXAMPLES, hir_id);\n     level != lint::Level::Allow || matches!(source, LintLevelSource::Default)\n }"}, {"sha": "ba6bb359b9135664aa8d8fa983a26f7beeff568c", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "patch": "@@ -29,6 +29,16 @@ fn def_id_to_path(tcx: TyCtxt<'_>, did: DefId) -> Vec<String> {\n     std::iter::once(crate_name).chain(relative).collect()\n }\n \n+crate fn inherits_doc_hidden(tcx: TyCtxt<'_>, mut node: hir::HirId) -> bool {\n+    while let Some(id) = tcx.hir().get_enclosing_scope(node) {\n+        node = id;\n+        if tcx.hir().attrs(node).lists(sym::doc).has_word(sym::hidden) {\n+            return true;\n+        }\n+    }\n+    false\n+}\n+\n // Also, is there some reason that this doesn't use the 'visit'\n // framework from syntax?.\n \n@@ -158,19 +168,6 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         om: &mut Module<'tcx>,\n         please_inline: bool,\n     ) -> bool {\n-        fn inherits_doc_hidden(cx: &core::DocContext<'_>, mut node: hir::HirId) -> bool {\n-            while let Some(id) = cx.tcx.hir().get_enclosing_scope(node) {\n-                node = id;\n-                if cx.tcx.hir().attrs(node).lists(sym::doc).has_word(sym::hidden) {\n-                    return true;\n-                }\n-                if node == hir::CRATE_HIR_ID {\n-                    break;\n-                }\n-            }\n-            false\n-        }\n-\n         debug!(\"maybe_inline_local res: {:?}\", res);\n \n         let tcx = self.cx.tcx;\n@@ -212,7 +209,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         };\n \n         let is_private = !self.cx.cache.access_levels.is_public(res_did);\n-        let is_hidden = inherits_doc_hidden(self.cx, res_hir_id);\n+        let is_hidden = inherits_doc_hidden(self.cx.tcx, res_hir_id);\n \n         // Only inline if requested or if the item would otherwise be stripped.\n         if (!please_inline && !is_private && !is_hidden) || is_no_inline {"}, {"sha": "41e8847792694635d97ecdfe1a6b70ff75ffb870", "filename": "src/test/rustdoc-ui/lint-missing-doc-code-example.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.rs?ref=95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "patch": "@@ -12,16 +12,16 @@\n /// ```\n /// println!(\"hello\");\n /// ```\n-fn test() {\n+pub fn test() {\n }\n \n #[allow(missing_docs)]\n-mod module1 { //~ ERROR\n+pub mod module1 { //~ ERROR\n }\n \n #[allow(rustdoc::missing_doc_code_examples)]\n /// doc\n-mod module2 {\n+pub mod module2 {\n \n   /// doc\n   pub fn test() {}\n@@ -63,9 +63,22 @@ pub enum Enum {\n /// Doc\n //~^ ERROR\n #[repr(C)]\n-union Union {\n+pub union Union {\n     /// Doc, but no code example and it's fine!\n     a: i32,\n     /// Doc, but no code example and it's fine!\n     b: f32,\n }\n+\n+\n+#[doc(hidden)]\n+pub mod foo {\n+    pub fn bar() {}\n+}\n+\n+fn babar() {}\n+\n+\n+mod fofoo {\n+    pub fn tadam() {}\n+}"}, {"sha": "371579785428168088b70c5615341c8287ba992a", "filename": "src/test/rustdoc-ui/lint-missing-doc-code-example.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr?ref=95bbc7ef33ae8436a058a51a2ec8c5c4cc6da8d6", "patch": "@@ -1,7 +1,7 @@\n error: missing code example in this documentation\n   --> $DIR/lint-missing-doc-code-example.rs:19:1\n    |\n-LL | / mod module1 {\n+LL | / pub mod module1 {\n LL | | }\n    | |_^\n    |"}]}