{"sha": "6f7b4ce65a286aa2a99d6028ce4b08889907a0c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmN2I0Y2U2NWEyODZhYTJhOTlkNjAyOGNlNGIwODg4OTkwN2EwYzU=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-06-22T12:36:14Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-06-22T12:36:14Z"}, "message": "Do not consider fields matched by wildcard patterns to be used", "tree": {"sha": "43b1e6269ff848adaa1a1be8df84ea0b670c5aa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43b1e6269ff848adaa1a1be8df84ea0b670c5aa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5", "html_url": "https://github.com/rust-lang/rust/commit/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2287b4b628cb6f4d66578e1298cd9f34e9ef77db", "url": "https://api.github.com/repos/rust-lang/rust/commits/2287b4b628cb6f4d66578e1298cd9f34e9ef77db", "html_url": "https://github.com/rust-lang/rust/commit/2287b4b628cb6f4d66578e1298cd9f34e9ef77db"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "fd810429c86e03dc79fb4250ed5a50457ed5d2fc", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=6f7b4ce65a286aa2a99d6028ce4b08889907a0c5", "patch": "@@ -172,6 +172,9 @@ impl<'a, 'tcx> MarkSymbolVisitor<'a, 'tcx> {\n         };\n         let fields = ty::lookup_struct_fields(self.tcx, id);\n         for pat in pats {\n+            if let ast::PatWild(ast::PatWildSingle) = pat.node.pat.node {\n+                continue;\n+            }\n             let field_id = fields.iter()\n                 .find(|field| field.name == pat.node.ident.name).unwrap().id;\n             self.live_symbols.insert(field_id.node);"}, {"sha": "8e37dd805d56d14fdee1a6f7d8fdee4afcbd1eda", "filename": "src/test/compile-fail/lint-dead-code-4.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5/src%2Ftest%2Fcompile-fail%2Flint-dead-code-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7b4ce65a286aa2a99d6028ce4b08889907a0c5/src%2Ftest%2Fcompile-fail%2Flint-dead-code-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-dead-code-4.rs?ref=6f7b4ce65a286aa2a99d6028ce4b08889907a0c5", "patch": "@@ -25,21 +25,23 @@ enum XYZ {\n     X, //~ ERROR variant is never used\n     Y { //~ ERROR variant is never used\n         a: String,\n-        b: isize //~ ERROR: struct field is never used\n+        b: i32, //~ ERROR: struct field is never used\n+        c: i32, //~ ERROR: struct field is never used\n     },\n     Z\n }\n \n fn field_match_in_patterns(b: XYZ) -> String {\n     match b {\n-        XYZ::Y { a, .. } => a,\n+        XYZ::Y { a, b: _, .. } => a,\n         _ => \"\".to_string()\n     }\n }\n \n struct Bar {\n     x: usize, //~ ERROR: struct field is never used\n     b: bool,\n+    c: bool, //~ ERROR: struct field is never used\n     _guard: ()\n }\n \n@@ -49,13 +51,13 @@ struct Baz {\n }\n \n fn field_match_in_let(f: Bar) -> bool {\n-    let Bar { b, .. } = f;\n+    let Bar { b, c: _, .. } = f;\n     b\n }\n \n fn main() {\n     field_read(Foo { x: 1, b: false });\n     field_match_in_patterns(XYZ::Z);\n-    field_match_in_let(Bar { x: 42, b: true, _guard: () });\n+    field_match_in_let(Bar { x: 42, b: true, c: false, _guard: () });\n     let _ = Baz { x: 0 };\n }"}]}