{"sha": "4e8c853c9e419d70c3017683816af41db2f7a580", "node_id": "C_kwDOAAsO6NoAKDRlOGM4NTNjOWU0MTlkNzBjMzAxNzY4MzgxNmFmNDFkYjJmN2E1ODA", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-05T19:52:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-05T19:52:46Z"}, "message": "Rollup merge of #89502 - FabianWolff:issue-89493, r=joshtriplett\n\nFix Lower/UpperExp formatting for integers and precision zero\n\nFixes the integer part of #89493 (I daren't touch the floating-point formatting code). The issue is that the \"subtracted\" precision essentially behaves like extra trailing zeros, but this is not currently reflected in the code properly.", "tree": {"sha": "955c7df62ad5c8385b9798b7e758d1099dd6f1a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/955c7df62ad5c8385b9798b7e758d1099dd6f1a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e8c853c9e419d70c3017683816af41db2f7a580", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhXK0PCRBK7hj4Ov3rIwAATAYIAKCPLKvtAdiVkCUelIxQdi/y\nGtiG/BUGqdEYRk4Y2nsA4iM/VVJZvrUba4lK1BRH2SoqkVD2n58LX+z7S/SwK0fg\n9BcVcmzb00eibyaGjRt99t/nUUNhZZn97q10cQ1g8ws6bttelhD60ukUHfbgmV7w\nwEZ0o5c34g238yuIgtZ6HHDJsX90orG0w99YLQ6DeT3f/0pNJrMCOAR7Cr+t0yLV\nFMd6Qgr+FF3R3kY8pXdVSJF7+pJruVqEsg5kDSskVeK6O3xAHGY3ky1vkr2e1w7D\n758XzFMWOoLTvYSEdZNNzacmBdUDT6WTo6lSu6h2P2R1rkiZwcfIguO9Nejsj5o=\n=mRY5\n-----END PGP SIGNATURE-----\n", "payload": "tree 955c7df62ad5c8385b9798b7e758d1099dd6f1a4\nparent 80f1f0d1690344b402762a76205c11fd08d9b593\nparent 199b33f0d77c3fae1c2c982029df7168899f8aba\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633463566 -0700\ncommitter GitHub <noreply@github.com> 1633463566 -0700\n\nRollup merge of #89502 - FabianWolff:issue-89493, r=joshtriplett\n\nFix Lower/UpperExp formatting for integers and precision zero\n\nFixes the integer part of #89493 (I daren't touch the floating-point formatting code). The issue is that the \"subtracted\" precision essentially behaves like extra trailing zeros, but this is not currently reflected in the code properly.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8c853c9e419d70c3017683816af41db2f7a580", "html_url": "https://github.com/rust-lang/rust/commit/4e8c853c9e419d70c3017683816af41db2f7a580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e8c853c9e419d70c3017683816af41db2f7a580/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80f1f0d1690344b402762a76205c11fd08d9b593", "url": "https://api.github.com/repos/rust-lang/rust/commits/80f1f0d1690344b402762a76205c11fd08d9b593", "html_url": "https://github.com/rust-lang/rust/commit/80f1f0d1690344b402762a76205c11fd08d9b593"}, {"sha": "199b33f0d77c3fae1c2c982029df7168899f8aba", "url": "https://api.github.com/repos/rust-lang/rust/commits/199b33f0d77c3fae1c2c982029df7168899f8aba", "html_url": "https://github.com/rust-lang/rust/commit/199b33f0d77c3fae1c2c982029df7168899f8aba"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "05ca50a97a644e8661bce742e7b4a757824da861", "filename": "library/core/src/fmt/num.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e8c853c9e419d70c3017683816af41db2f7a580/library%2Fcore%2Fsrc%2Ffmt%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8c853c9e419d70c3017683816af41db2f7a580/library%2Fcore%2Fsrc%2Ffmt%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fnum.rs?ref=4e8c853c9e419d70c3017683816af41db2f7a580", "patch": "@@ -305,7 +305,6 @@ macro_rules! impl_Exp {\n                     n /= 10;\n                     exponent += 1;\n                 }\n-                let trailing_zeros = exponent;\n \n                 let (added_precision, subtracted_precision) = match f.precision() {\n                     Some(fmt_prec) => {\n@@ -333,7 +332,7 @@ macro_rules! impl_Exp {\n                         n += 1;\n                     }\n                 }\n-                (n, exponent, trailing_zeros, added_precision)\n+                (n, exponent, exponent, added_precision)\n             };\n \n             // 39 digits (worst case u128) + . = 40"}, {"sha": "b958422d14f84b6e7c39543e7857e56e34a300ee", "filename": "library/core/tests/fmt/num.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4e8c853c9e419d70c3017683816af41db2f7a580/library%2Fcore%2Ftests%2Ffmt%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8c853c9e419d70c3017683816af41db2f7a580/library%2Fcore%2Ftests%2Ffmt%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Ffmt%2Fnum.rs?ref=4e8c853c9e419d70c3017683816af41db2f7a580", "patch": "@@ -146,6 +146,7 @@ fn test_format_int_exp_precision() {\n     assert_eq!(format!(\"{:.1000e}\", 1), format!(\"1.{}e0\", \"0\".repeat(1000)));\n     //test zero precision\n     assert_eq!(format!(\"{:.0e}\", 1), format!(\"1e0\",));\n+    assert_eq!(format!(\"{:.0e}\", 35), format!(\"4e1\",));\n \n     //test padding with precision (and sign)\n     assert_eq!(format!(\"{:+10.3e}\", 1), \"  +1.000e0\");"}]}