{"sha": "faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZjQ1YjNhODAyOGNmNDBkN2JmZWIwNzNlM2RmN2UyYTQ4ZjgzMTg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T15:16:31Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T15:42:00Z"}, "message": "Remove old heuristics from legacy style", "tree": {"sha": "e0fa4738e056c9d5ddeddbcd4857aaf07e3dc540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0fa4738e056c9d5ddeddbcd4857aaf07e3dc540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "html_url": "https://github.com/rust-lang/rust/commit/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9777c0de93d79485b93e276eb783fa2b5edd7905", "url": "https://api.github.com/repos/rust-lang/rust/commits/9777c0de93d79485b93e276eb783fa2b5edd7905", "html_url": "https://github.com/rust-lang/rust/commit/9777c0de93d79485b93e276eb783fa2b5edd7905"}], "stats": {"total": 41, "additions": 2, "deletions": 39}, "files": [{"sha": "c2205f4ea747a5882d5ad523c2b11e5e37679344", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "patch": "@@ -876,14 +876,7 @@ fn rewrite_block_with_visitor(\n     }\n \n     visitor.visit_block(block);\n-    if visitor.failed && shape.indent.alignment != 0 {\n-        block.rewrite(\n-            context,\n-            Shape::indented(shape.indent.block_only(), context.config),\n-        )\n-    } else {\n-        Some(format!(\"{}{}\", prefix, visitor.buffer))\n-    }\n+    Some(format!(\"{}{}\", prefix, visitor.buffer))\n }\n \n impl Rewrite for ast::Block {\n@@ -2075,23 +2068,7 @@ where\n         one_line_width,\n         args_max_width,\n         force_trailing_comma,\n-    ).or_else(|| if context.use_block_indent() {\n-        rewrite_call_args(\n-            context,\n-            args,\n-            args_span,\n-            Shape::indented(\n-                shape.block().indent.block_indent(context.config),\n-                context.config,\n-            ),\n-            0,\n-            0,\n-            force_trailing_comma,\n-        )\n-    } else {\n-        None\n-    })\n-        .ok_or(Ordering::Less)?;\n+    ).ok_or(Ordering::Less)?;\n \n     if !context.use_block_indent() && need_block_indent(&list_str, nested_shape) && !extendable {\n         let mut new_context = context.clone();"}, {"sha": "9ee7136bb63e895f9b8d42a516bd92962f20e377", "filename": "src/visitor.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "patch": "@@ -56,7 +56,6 @@ pub struct FmtVisitor<'a> {\n     // FIXME: use an RAII util or closure for indenting\n     pub block_indent: Indent,\n     pub config: &'a Config,\n-    pub failed: bool,\n     pub is_if_else_block: bool,\n }\n \n@@ -558,18 +557,6 @@ impl<'a> FmtVisitor<'a> {\n \n     fn push_rewrite(&mut self, span: Span, rewrite: Option<String>) {\n         self.format_missing_with_indent(source!(self, span).lo);\n-        self.failed = match rewrite {\n-            Some(ref s)\n-                if s.rewrite(\n-                    &self.get_context(),\n-                    Shape::indented(self.block_indent, self.config),\n-                ).is_none() =>\n-            {\n-                true\n-            }\n-            None => true,\n-            _ => self.failed,\n-        };\n         let result = rewrite.unwrap_or_else(|| self.snippet(span));\n         self.buffer.push_str(&result);\n         self.last_pos = source!(self, span).hi;\n@@ -583,7 +570,6 @@ impl<'a> FmtVisitor<'a> {\n             last_pos: BytePos(0),\n             block_indent: Indent::empty(),\n             config: config,\n-            failed: false,\n             is_if_else_block: false,\n         }\n     }"}]}