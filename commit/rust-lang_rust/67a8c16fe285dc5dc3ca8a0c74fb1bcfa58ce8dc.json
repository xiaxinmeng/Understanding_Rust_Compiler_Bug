{"sha": "67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc", "node_id": "C_kwDOAAsO6NoAKDY3YThjMTZmZTI4NWRjNWRjM2NhOGEwYzc0ZmIxYmNmYTU4Y2U4ZGM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-30T17:37:56Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-06T22:01:07Z"}, "message": "Complete for_each_aliasing_place.", "tree": {"sha": "7fba5ca12c864fecfe89e8c47564dda981605f87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fba5ca12c864fecfe89e8c47564dda981605f87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc", "html_url": "https://github.com/rust-lang/rust/commit/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9af191f86f2c81ec5613ae35ab1a3b2ac3edbdee", "url": "https://api.github.com/repos/rust-lang/rust/commits/9af191f86f2c81ec5613ae35ab1a3b2ac3edbdee", "html_url": "https://github.com/rust-lang/rust/commit/9af191f86f2c81ec5613ae35ab1a3b2ac3edbdee"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "e272c90e0cdaf7de3a997f9ed82bcd9c600a5075", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc", "patch": "@@ -1640,6 +1640,14 @@ impl<'tcx> PlaceRef<'tcx> {\n         }\n     }\n \n+    /// Returns `true` if this `Place` contains a `Deref` projection.\n+    ///\n+    /// If `Place::is_indirect` returns false, the caller knows that the `Place` refers to the\n+    /// same region of memory as its base.\n+    pub fn is_indirect(&self) -> bool {\n+        self.projection.iter().any(|elem| elem.is_indirect())\n+    }\n+\n     /// If MirPhase >= Derefered and if projection contains Deref,\n     /// It's guaranteed to be in the first place\n     pub fn has_deref(&self) -> bool {"}, {"sha": "f24280e218716bd6562fc32c103e5d038c05bcdc", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=67a8c16fe285dc5dc3ca8a0c74fb1bcfa58ce8dc", "patch": "@@ -780,6 +780,10 @@ impl Map {\n         tail_elem: Option<TrackElem>,\n         f: &mut impl FnMut(PlaceIndex),\n     ) {\n+        if place.is_indirect() {\n+            // We do not track indirect places.\n+            return;\n+        }\n         let Some(&Some(mut index)) = self.locals.get(place.local) else {\n             // The local is not tracked at all, so it does not alias anything.\n             return;\n@@ -790,6 +794,9 @@ impl Map {\n             .map(|&elem| elem.try_into())\n             .chain(tail_elem.map(Ok).into_iter());\n         for elem in elems {\n+            // A field aliases the parent place.\n+            f(index);\n+\n             let Ok(elem) = elem else { return };\n             let sub = self.apply(index, elem);\n             if let TrackElem::Variant(..) | TrackElem::Discriminant = elem {"}]}