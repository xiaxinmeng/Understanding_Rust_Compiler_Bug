{"sha": "b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MDM2YjY5MDg2YzZhNDNjODZhMjBmMGFjNWUwYmJjMmQwM2ZiOWQ=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-01-27T02:36:12Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-01-27T02:36:12Z"}, "message": "Fix another endian-ness issue in i128 trans\n\nApparently LLVMArbitraryPrecisionInteger demands integers to be in low-endian 64-bytes, rather than\nhost-endian 64-bytes. This is weird, and obviously, not documented. Also, fixed now. And rustc now\nworks a teeny bit more on big endians.", "tree": {"sha": "2178b38fb0bddb7cbb06abe0843045d6c0786eb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2178b38fb0bddb7cbb06abe0843045d6c0786eb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d", "html_url": "https://github.com/rust-lang/rust/commit/b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07fe04c1e2d66cfc351ffa69157facc7d8a819cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/07fe04c1e2d66cfc351ffa69157facc7d8a819cd", "html_url": "https://github.com/rust-lang/rust/commit/07fe04c1e2d66cfc351ffa69157facc7d8a819cd"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "0ba94fdfe635cf5aca3968f15e836fa18597e319", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=b8036b69086c6a43c86a20f0ac5e0bbc2d03fb9d", "patch": "@@ -234,7 +234,8 @@ pub fn C_integral(t: Type, u: u64, sign_extend: bool) -> ValueRef {\n pub fn C_big_integral(t: Type, u: u128, sign_extend: bool) -> ValueRef {\n     if ::std::mem::size_of::<u128>() == 16 {\n         unsafe {\n-            llvm::LLVMConstIntOfArbitraryPrecision(t.to_ref(), 2, &u as *const u128 as *const u64)\n+            let words = [u as u64, u.wrapping_shr(64) as u64];\n+            llvm::LLVMConstIntOfArbitraryPrecision(t.to_ref(), 2, words.as_ptr())\n         }\n     } else {\n         // SNAP: remove after snapshot"}]}