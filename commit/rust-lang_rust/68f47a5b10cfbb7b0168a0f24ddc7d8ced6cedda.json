{"sha": "68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZjQ3YTViMTBjZmJiN2IwMTY4YTBmMjRkZGM3ZDhjZWQ2Y2VkZGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T18:12:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T18:12:49Z"}, "message": "Cleanup", "tree": {"sha": "f0681bafda5b8c281622e6d036352a64800d4210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0681bafda5b8c281622e6d036352a64800d4210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda", "html_url": "https://github.com/rust-lang/rust/commit/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "260df66b7742e76c76184388253552c5055b1945", "url": "https://api.github.com/repos/rust-lang/rust/commits/260df66b7742e76c76184388253552c5055b1945", "html_url": "https://github.com/rust-lang/rust/commit/260df66b7742e76c76184388253552c5055b1945"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "e680179ae7d575bb7d534ff2dee973735de0bb44", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda", "patch": "@@ -1,8 +1,8 @@\n import * as vscode from 'vscode';\n \n import { Ctx, Cmd } from '../ctx';\n-// Shows status of rust-analyzer (for debugging)\n \n+// Shows status of rust-analyzer (for debugging)\n export function analyzerStatus(ctx: Ctx): Cmd {\n     let poller: NodeJS.Timer | null = null;\n     const tdcp = new TextDocumentContentProvider(ctx);"}, {"sha": "9831c2a2e4a756f8359447e35d79f99ab4da485a", "filename": "editors/code/src/commands/syntax_tree.ts", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts", "raw_url": "https://github.com/rust-lang/rust/raw/68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts?ref=68f47a5b10cfbb7b0168a0f24ddc7d8ced6cedda", "patch": "@@ -7,28 +7,28 @@ import { Ctx, Cmd } from '../ctx';\n //\n // The contents of the file come from the `TextDocumentContentProvider`\n export function syntaxTree(ctx: Ctx): Cmd {\n-    const stcp = new SyntaxTreeContentProvider(ctx);\n+    const tdcp = new TextDocumentContentProvider(ctx);\n \n     ctx.pushCleanup(\n         vscode.workspace.registerTextDocumentContentProvider(\n             'rust-analyzer',\n-            stcp,\n+            tdcp,\n         ),\n     );\n \n     vscode.workspace.onDidChangeTextDocument(\n         (event: vscode.TextDocumentChangeEvent) => {\n             const doc = event.document;\n             if (doc.languageId !== 'rust') return;\n-            afterLs(() => stcp.eventEmitter.fire(stcp.uri));\n+            afterLs(() => tdcp.eventEmitter.fire(tdcp.uri));\n         },\n         ctx.subscriptions,\n     );\n \n     vscode.window.onDidChangeActiveTextEditor(\n         (editor: vscode.TextEditor | undefined) => {\n             if (!editor || editor.document.languageId !== 'rust') return;\n-            stcp.eventEmitter.fire(stcp.uri);\n+            tdcp.eventEmitter.fire(tdcp.uri);\n         },\n         ctx.subscriptions,\n     );\n@@ -38,12 +38,12 @@ export function syntaxTree(ctx: Ctx): Cmd {\n         const rangeEnabled = !!(editor && !editor.selection.isEmpty);\n \n         const uri = rangeEnabled\n-            ? vscode.Uri.parse(`${stcp.uri.toString()}?range=true`)\n-            : stcp.uri;\n+            ? vscode.Uri.parse(`${tdcp.uri.toString()}?range=true`)\n+            : tdcp.uri;\n \n         const document = await vscode.workspace.openTextDocument(uri);\n \n-        stcp.eventEmitter.fire(uri);\n+        tdcp.eventEmitter.fire(uri);\n \n         return vscode.window.showTextDocument(\n             document,\n@@ -64,7 +64,7 @@ interface SyntaxTreeParams {\n     range?: lc.Range;\n }\n \n-export class SyntaxTreeContentProvider\n+class TextDocumentContentProvider\n     implements vscode.TextDocumentContentProvider {\n     ctx: Ctx;\n     uri = vscode.Uri.parse('rust-analyzer://syntaxtree');\n@@ -86,8 +86,8 @@ export class SyntaxTreeContentProvider\n             range = editor.selection.isEmpty\n                 ? undefined\n                 : this.ctx.client.code2ProtocolConverter.asRange(\n-                      editor.selection,\n-                  );\n+                    editor.selection,\n+                );\n         }\n \n         const request: SyntaxTreeParams = {"}]}