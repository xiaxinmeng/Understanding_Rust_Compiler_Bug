{"sha": "e91f889ed3a7ced584e90cf7b05e2c0ac476f900", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MWY4ODllZDNhN2NlZDU4NGU5MGNmN2IwNWUyYzBhYzQ3NmY5MDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-03T21:37:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-03T21:37:18Z"}, "message": "Auto merge of #31671 - ranma42:printcfg, r=alexcrichton\n\nShow `cfg` as possible argument to `--print` and make it so that `--print cfg` also outputs the `target_feature`s.\n\nShould I also extend `src/test/run-make/print-cfg/Makefile` to check that `target_feature`s are actually printed?", "tree": {"sha": "866ed07fc3a5ea4a3104c7f5f8c524fa70fa4f28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/866ed07fc3a5ea4a3104c7f5f8c524fa70fa4f28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e91f889ed3a7ced584e90cf7b05e2c0ac476f900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e91f889ed3a7ced584e90cf7b05e2c0ac476f900", "html_url": "https://github.com/rust-lang/rust/commit/e91f889ed3a7ced584e90cf7b05e2c0ac476f900", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e91f889ed3a7ced584e90cf7b05e2c0ac476f900/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "809b14acf10fa717716c054a3d1dd4d400784d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/809b14acf10fa717716c054a3d1dd4d400784d19", "html_url": "https://github.com/rust-lang/rust/commit/809b14acf10fa717716c054a3d1dd4d400784d19"}, {"sha": "4e46eee110b739ab415affc8f9b524d6b4be8554", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e46eee110b739ab415affc8f9b524d6b4be8554", "html_url": "https://github.com/rust-lang/rust/commit/4e46eee110b739ab415affc8f9b524d6b4be8554"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "679da4abf5f9f3e3b2109ab3fe7d4ecf7b17cba6", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e91f889ed3a7ced584e90cf7b05e2c0ac476f900/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91f889ed3a7ced584e90cf7b05e2c0ac476f900/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=e91f889ed3a7ced584e90cf7b05e2c0ac476f900", "patch": "@@ -887,7 +887,7 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n                  \"[asm|llvm-bc|llvm-ir|obj|link|dep-info]\"),\n         opt::multi_s(\"\", \"print\", \"Comma separated list of compiler information to \\\n                                print on stdout\",\n-                 \"[crate-name|file-names|sysroot|target-list]\"),\n+                 \"[crate-name|file-names|sysroot|cfg|target-list]\"),\n         opt::flagmulti_s(\"g\",  \"\",  \"Equivalent to -C debuginfo=2\"),\n         opt::flagmulti_s(\"O\", \"\", \"Equivalent to -C opt-level=2\"),\n         opt::opt_s(\"o\", \"\", \"Write output to <filename>\", \"FILENAME\"),"}, {"sha": "da565856a9f5a7e59bf757e0ffb5adfad0147e76", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e91f889ed3a7ced584e90cf7b05e2c0ac476f900/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91f889ed3a7ced584e90cf7b05e2c0ac476f900/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=e91f889ed3a7ced584e90cf7b05e2c0ac476f900", "patch": "@@ -94,7 +94,7 @@ use syntax::errors;\n use syntax::errors::emitter::Emitter;\n use syntax::diagnostics;\n use syntax::parse::token;\n-use syntax::feature_gate::UnstableFeatures;\n+use syntax::feature_gate::{GatedCfg, UnstableFeatures};\n \n #[cfg(test)]\n pub mod test;\n@@ -565,7 +565,18 @@ impl RustcDefaultCalls {\n                     }\n                 }\n                 PrintRequest::Cfg => {\n-                    for cfg in config::build_configuration(sess) {\n+                    let mut cfg = config::build_configuration(&sess);\n+                    target_features::add_configuration(&mut cfg, &sess);\n+\n+                    let allow_unstable_cfg = match get_unstable_features_setting() {\n+                        UnstableFeatures::Disallow => false,\n+                        _ => true,\n+                    };\n+\n+                    for cfg in cfg {\n+                        if !allow_unstable_cfg && GatedCfg::gate(&*cfg).is_some() {\n+                            continue;\n+                        }\n                         match cfg.node {\n                             ast::MetaItemKind::Word(ref word) => println!(\"{}\", word),\n                             ast::MetaItemKind::NameValue(ref name, ref value) => {"}]}