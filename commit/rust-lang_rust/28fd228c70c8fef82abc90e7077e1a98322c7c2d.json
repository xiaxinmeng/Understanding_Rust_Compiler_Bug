{"sha": "28fd228c70c8fef82abc90e7077e1a98322c7c2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZmQyMjhjNzBjOGZlZjgyYWJjOTBlNzA3N2UxYTk4MzIyYzdjMmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-11T14:44:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-11T14:44:54Z"}, "message": "remove query_definitions", "tree": {"sha": "0114f822b36c5b898aba873af277a33b5f4bbc04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0114f822b36c5b898aba873af277a33b5f4bbc04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28fd228c70c8fef82abc90e7077e1a98322c7c2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28fd228c70c8fef82abc90e7077e1a98322c7c2d", "html_url": "https://github.com/rust-lang/rust/commit/28fd228c70c8fef82abc90e7077e1a98322c7c2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28fd228c70c8fef82abc90e7077e1a98322c7c2d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6596793c0ce24b10c599b7d8b34483595d9a4511", "url": "https://api.github.com/repos/rust-lang/rust/commits/6596793c0ce24b10c599b7d8b34483595d9a4511", "html_url": "https://github.com/rust-lang/rust/commit/6596793c0ce24b10c599b7d8b34483595d9a4511"}], "stats": {"total": 54, "additions": 20, "deletions": 34}, "files": [{"sha": "740a7be7aa7642ad365e975303dde106bc94940c", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/28fd228c70c8fef82abc90e7077e1a98322c7c2d/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fd228c70c8fef82abc90e7077e1a98322c7c2d/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=28fd228c70c8fef82abc90e7077e1a98322c7c2d", "patch": "@@ -6,7 +6,6 @@ use ra_db::{SourceDatabase, salsa};\n use crate::{\n     MacroCallId, HirFileId,\n     SourceFileItems, SourceItemId, Crate, Module, HirInterner,\n-    query_definitions,\n     Function, FnSignature, ExprScopes,\n     Struct, Enum, StructField,\n     macros::MacroExpansion,\n@@ -33,10 +32,10 @@ pub trait PersistentHirDatabase: SourceDatabase + AsRef<HirInterner> {\n     #[salsa::invoke(crate::adt::EnumData::enum_data_query)]\n     fn enum_data(&self, e: Enum) -> Arc<EnumData>;\n \n-    #[salsa::invoke(query_definitions::file_items)]\n+    #[salsa::invoke(crate::ids::SourceFileItems::file_items_query)]\n     fn file_items(&self, file_id: HirFileId) -> Arc<SourceFileItems>;\n \n-    #[salsa::invoke(query_definitions::file_item)]\n+    #[salsa::invoke(crate::ids::SourceFileItems::file_item_query)]\n     fn file_item(&self, source_item_id: SourceItemId) -> TreeArc<SyntaxNode>;\n \n     #[salsa::invoke(crate::module_tree::Submodule::submodules_query)]"}, {"sha": "d3fa7d266403f07890ddefcc07bfe9012e402f44", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/28fd228c70c8fef82abc90e7077e1a98322c7c2d/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fd228c70c8fef82abc90e7077e1a98322c7c2d/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=28fd228c70c8fef82abc90e7077e1a98322c7c2d", "patch": "@@ -1,6 +1,7 @@\n use std::{\n     marker::PhantomData,\n     hash::{Hash, Hasher},\n+    sync::Arc,\n };\n \n use ra_db::{LocationIntener, FileId};\n@@ -301,10 +302,24 @@ pub struct SourceFileItems {\n }\n \n impl SourceFileItems {\n-    pub(crate) fn new(file_id: HirFileId, source_file: &SourceFile) -> SourceFileItems {\n+    pub(crate) fn file_items_query(\n+        db: &impl PersistentHirDatabase,\n+        file_id: HirFileId,\n+    ) -> Arc<SourceFileItems> {\n+        let source_file = db.hir_parse(file_id);\n         let mut res = SourceFileItems { file_id, arena: Arena::default() };\n-        res.init(source_file);\n-        res\n+        res.init(&source_file);\n+        Arc::new(res)\n+    }\n+\n+    pub(crate) fn file_item_query(\n+        db: &impl PersistentHirDatabase,\n+        source_item_id: SourceItemId,\n+    ) -> TreeArc<SyntaxNode> {\n+        let source_file = db.hir_parse(source_item_id.file_id);\n+        db.file_items(source_item_id.file_id)[source_item_id.item_id]\n+            .to_node(&source_file)\n+            .to_owned()\n     }\n \n     fn init(&mut self, source_file: &SourceFile) {"}, {"sha": "b212c3399ab2b4e65a6f1e90405f193a5bda41ea", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28fd228c70c8fef82abc90e7077e1a98322c7c2d/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fd228c70c8fef82abc90e7077e1a98322c7c2d/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=28fd228c70c8fef82abc90e7077e1a98322c7c2d", "patch": "@@ -20,7 +20,6 @@ macro_rules! impl_froms {\n pub mod db;\n #[macro_use]\n pub mod mock;\n-mod query_definitions;\n mod path;\n pub mod source_binder;\n "}, {"sha": "03113e7cc217bcd7824c250c6c33f47821b99727", "filename": "crates/ra_hir/src/query_definitions.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6596793c0ce24b10c599b7d8b34483595d9a4511/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6596793c0ce24b10c599b7d8b34483595d9a4511/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs?ref=6596793c0ce24b10c599b7d8b34483595d9a4511", "patch": "@@ -1,27 +0,0 @@\n-use std::sync::Arc;\n-\n-use ra_syntax::{\n-    SyntaxNode, TreeArc,\n-};\n-\n-use crate::{\n-    SourceFileItems, SourceItemId, HirFileId,\n-    PersistentHirDatabase,\n-};\n-\n-pub(super) fn file_items(\n-    db: &impl PersistentHirDatabase,\n-    file_id: HirFileId,\n-) -> Arc<SourceFileItems> {\n-    let source_file = db.hir_parse(file_id);\n-    let res = SourceFileItems::new(file_id, &source_file);\n-    Arc::new(res)\n-}\n-\n-pub(super) fn file_item(\n-    db: &impl PersistentHirDatabase,\n-    source_item_id: SourceItemId,\n-) -> TreeArc<SyntaxNode> {\n-    let source_file = db.hir_parse(source_item_id.file_id);\n-    db.file_items(source_item_id.file_id)[source_item_id.item_id].to_node(&source_file).to_owned()\n-}"}]}