{"sha": "213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxM2I4ZDlhMmI4OGUwZGIxNWJjZGYyZmQ2OTZhZmE2YjdkYjEyYzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T08:24:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T08:24:04Z"}, "message": "Auto merge of #7240 - flip1995:rollup-6nwjgyp, r=flip1995\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #7235 (Fix another manual_unwrap_or deref FP)\n - #7237 (Add the command to add upstream remote)\n - #7239 (CI: update rustup before installing the toolchain on windows)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup\n\nchangelog: rollup", "tree": {"sha": "7f35d28d2cbdddd8c5d3fdd6b8acf402e4fbe8cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f35d28d2cbdddd8c5d3fdd6b8acf402e4fbe8cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "html_url": "https://github.com/rust-lang/rust/commit/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9028173b244dc6cf11a34e73fda4259d7280c3e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9028173b244dc6cf11a34e73fda4259d7280c3e1", "html_url": "https://github.com/rust-lang/rust/commit/9028173b244dc6cf11a34e73fda4259d7280c3e1"}, {"sha": "70c552b5afca284d1e7741d66ba910c282da4602", "url": "https://api.github.com/repos/rust-lang/rust/commits/70c552b5afca284d1e7741d66ba910c282da4602", "html_url": "https://github.com/rust-lang/rust/commit/70c552b5afca284d1e7741d66ba910c282da4602"}], "stats": {"total": 48, "additions": 26, "deletions": 22}, "files": [{"sha": "f27fee87dc1653f508555f90661143aa338a5e2c", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "patch": "@@ -90,6 +90,11 @@ jobs:\n     - name: Checkout\n       uses: actions/checkout@v2.3.3\n \n+    # FIXME: should not be necessary once 1.24.2 is the default version on the windows runner\n+    - name: Update rustup\n+      run: rustup self update\n+      if: runner.os == 'Windows'\n+\n     - name: Install toolchain\n       run: rustup show active-toolchain\n "}, {"sha": "2f579edd6ade5ec0407e834385e8a12297f36dff", "filename": "clippy_lints/src/manual_unwrap_or.rs", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs?ref=213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "patch": "@@ -11,7 +11,6 @@ use rustc_hir::{Arm, Expr, ExprKind, PatKind};\n use rustc_lint::LintContext;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n-use rustc_middle::ty::adjustment::Adjust;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n \n@@ -54,21 +53,6 @@ impl LateLintPass<'_> for ManualUnwrapOr {\n     }\n }\n \n-#[derive(Copy, Clone)]\n-enum Case {\n-    Option,\n-    Result,\n-}\n-\n-impl Case {\n-    fn unwrap_fn_path(&self) -> &str {\n-        match self {\n-            Case::Option => \"Option::unwrap_or\",\n-            Case::Result => \"Result::unwrap_or\",\n-        }\n-    }\n-}\n-\n fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n     fn applicable_or_arm<'a>(cx: &LateContext<'_>, arms: &'a [Arm<'a>]) -> Option<&'a Arm<'a>> {\n         if_chain! {\n@@ -87,9 +71,8 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n             if is_lang_ctor(cx, qpath, OptionSome) || is_lang_ctor(cx, qpath, ResultOk);\n             if let PatKind::Binding(_, binding_hir_id, ..) = unwrap_pat.kind;\n             if path_to_local_id(unwrap_arm.body, binding_hir_id);\n+            if cx.typeck_results().expr_adjustments(unwrap_arm.body).is_empty();\n             if !contains_return_break_continue_macro(or_arm.body);\n-            if !cx.typeck_results().expr_adjustments(unwrap_arm.body).iter()\n-                .any(|a| matches!(a.kind, Adjust::Deref(Some(..))));\n             then {\n                 Some(or_arm)\n             } else {\n@@ -101,10 +84,10 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n     if_chain! {\n         if let ExprKind::Match(scrutinee, match_arms, _) = expr.kind;\n         let ty = cx.typeck_results().expr_ty(scrutinee);\n-        if let Some(case) = if is_type_diagnostic_item(cx, ty, sym::option_type) {\n-            Some(Case::Option)\n+        if let Some(ty_name) = if is_type_diagnostic_item(cx, ty, sym::option_type) {\n+            Some(\"Option\")\n         } else if is_type_diagnostic_item(cx, ty, sym::result_type) {\n-            Some(Case::Result)\n+            Some(\"Result\")\n         } else {\n             None\n         };\n@@ -127,7 +110,7 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n             span_lint_and_sugg(\n                 cx,\n                 MANUAL_UNWRAP_OR, expr.span,\n-                &format!(\"this pattern reimplements `{}`\", case.unwrap_fn_path()),\n+                &format!(\"this pattern reimplements `{}::unwrap_or`\", ty_name),\n                 \"replace with\",\n                 format!(\n                     \"{}.unwrap_or({})\","}, {"sha": "e2e307ce4f6cf93df422f3c10afa1328191da276", "filename": "doc/basics.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/doc%2Fbasics.md", "raw_url": "https://github.com/rust-lang/rust/raw/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/doc%2Fbasics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fbasics.md?ref=213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "patch": "@@ -28,6 +28,8 @@ git clone git@github.com:<your-username>/rust-clippy\n If you've already cloned Clippy in the past, update it to the latest version:\n \n ```bash\n+# If the upstream remote has not been added yet\n+git remote add upstream https://github.com/rust-lang/rust-clippy\n # upstream has to be the remote of the rust-lang/rust-clippy repo\n git fetch upstream\n # make sure that you are on the master branch"}, {"sha": "3717f962745fb4da9a0e3097731343000be21a8b", "filename": "tests/ui/manual_unwrap_or.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/tests%2Fui%2Fmanual_unwrap_or.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/tests%2Fui%2Fmanual_unwrap_or.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.fixed?ref=213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "patch": "@@ -171,4 +171,11 @@ fn format_name(name: Option<&Rc<str>>) -> &str {\n     }\n }\n \n+fn implicit_deref_ref() {\n+    let _: &str = match Some(&\"bye\") {\n+        None => \"hi\",\n+        Some(s) => s,\n+    };\n+}\n+\n fn main() {}"}, {"sha": "989adde1f5bbb7518e8c41a22e24df5fa0cbe82b", "filename": "tests/ui/manual_unwrap_or.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/tests%2Fui%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7/tests%2Fui%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.rs?ref=213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "patch": "@@ -213,4 +213,11 @@ fn format_name(name: Option<&Rc<str>>) -> &str {\n     }\n }\n \n+fn implicit_deref_ref() {\n+    let _: &str = match Some(&\"bye\") {\n+        None => \"hi\",\n+        Some(s) => s,\n+    };\n+}\n+\n fn main() {}"}]}