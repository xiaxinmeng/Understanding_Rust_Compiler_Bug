{"sha": "18192505568ce4c58995ca69652eaf088b17345b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MTkyNTA1NTY4Y2U0YzU4OTk1Y2E2OTY1MmVhZjA4OGIxNzM0NWI=", "commit": {"author": {"name": "Tim Vermeulen", "email": "tvermeulen@me.com", "date": "2019-03-12T18:25:44Z"}, "committer": {"name": "Tim Vermeulen", "email": "tvermeulen@me.com", "date": "2019-03-12T18:25:44Z"}, "message": "Add tests to ensure that Iterator::min and Iterator::max are stable", "tree": {"sha": "db7cc38528de96aff2c3ce3b2d4a9a3f201f6af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db7cc38528de96aff2c3ce3b2d4a9a3f201f6af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18192505568ce4c58995ca69652eaf088b17345b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18192505568ce4c58995ca69652eaf088b17345b", "html_url": "https://github.com/rust-lang/rust/commit/18192505568ce4c58995ca69652eaf088b17345b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18192505568ce4c58995ca69652eaf088b17345b/comments", "author": {"login": "timvermeulen", "id": 2904179, "node_id": "MDQ6VXNlcjI5MDQxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvermeulen", "html_url": "https://github.com/timvermeulen", "followers_url": "https://api.github.com/users/timvermeulen/followers", "following_url": "https://api.github.com/users/timvermeulen/following{/other_user}", "gists_url": "https://api.github.com/users/timvermeulen/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvermeulen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvermeulen/subscriptions", "organizations_url": "https://api.github.com/users/timvermeulen/orgs", "repos_url": "https://api.github.com/users/timvermeulen/repos", "events_url": "https://api.github.com/users/timvermeulen/events{/privacy}", "received_events_url": "https://api.github.com/users/timvermeulen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "timvermeulen", "id": 2904179, "node_id": "MDQ6VXNlcjI5MDQxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvermeulen", "html_url": "https://github.com/timvermeulen", "followers_url": "https://api.github.com/users/timvermeulen/followers", "following_url": "https://api.github.com/users/timvermeulen/following{/other_user}", "gists_url": "https://api.github.com/users/timvermeulen/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvermeulen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvermeulen/subscriptions", "organizations_url": "https://api.github.com/users/timvermeulen/orgs", "repos_url": "https://api.github.com/users/timvermeulen/repos", "events_url": "https://api.github.com/users/timvermeulen/events{/privacy}", "received_events_url": "https://api.github.com/users/timvermeulen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0de63d901b8ec550179b17ea06756e679b9fd461", "url": "https://api.github.com/repos/rust-lang/rust/commits/0de63d901b8ec550179b17ea06756e679b9fd461", "html_url": "https://github.com/rust-lang/rust/commit/0de63d901b8ec550179b17ea06756e679b9fd461"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "a9db9b35d8d80e3be984a78d7b385d7243b48e98", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/18192505568ce4c58995ca69652eaf088b17345b/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18192505568ce4c58995ca69652eaf088b17345b/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=18192505568ce4c58995ca69652eaf088b17345b", "patch": "@@ -1082,12 +1082,39 @@ fn test_iterator_product_result() {\n     assert_eq!(v.iter().cloned().product::<Result<i32, _>>(), Err(()));\n }\n \n+/// A wrapper struct that implements `Eq` and `Ord` based on the wrapped\n+/// integer modulo 3. Used to test that `Iterator::max` and `Iterator::min`\n+/// return the correct element if some of them are equal.\n+#[derive(Debug)]\n+struct Mod3(i32);\n+\n+impl PartialEq for Mod3 {\n+    fn eq(&self, other: &Self) -> bool {\n+        self.0 % 3 == other.0 % 3\n+    }\n+}\n+\n+impl Eq for Mod3 {}\n+\n+impl PartialOrd for Mod3 {\n+    fn partial_cmp(&self, other: &Self) -> Option<core::cmp::Ordering> {\n+        Some(self.cmp(other))\n+    }\n+}\n+\n+impl Ord for Mod3 {\n+    fn cmp(&self, other: &Self) -> core::cmp::Ordering {\n+        (self.0 % 3).cmp(&(other.0 % 3))\n+    }\n+}\n+\n #[test]\n fn test_iterator_max() {\n     let v: &[_] = &[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n     assert_eq!(v[..4].iter().cloned().max(), Some(3));\n     assert_eq!(v.iter().cloned().max(), Some(10));\n     assert_eq!(v[..0].iter().cloned().max(), None);\n+    assert_eq!(v.iter().cloned().map(Mod3).max().map(|x| x.0), Some(8));\n }\n \n #[test]\n@@ -1096,6 +1123,7 @@ fn test_iterator_min() {\n     assert_eq!(v[..4].iter().cloned().min(), Some(0));\n     assert_eq!(v.iter().cloned().min(), Some(0));\n     assert_eq!(v[..0].iter().cloned().min(), None);\n+    assert_eq!(v.iter().cloned().map(Mod3).min().map(|x| x.0), Some(0));\n }\n \n #[test]"}]}