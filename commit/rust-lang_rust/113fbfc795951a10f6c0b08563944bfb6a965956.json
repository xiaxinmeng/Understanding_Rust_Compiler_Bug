{"sha": "113fbfc795951a10f6c0b08563944bfb6a965956", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExM2ZiZmM3OTU5NTFhMTBmNmMwYjA4NTYzOTQ0YmZiNmE5NjU5NTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-25T01:38:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-26T18:47:52Z"}, "message": "core: Clarify prelude docs. #4556", "tree": {"sha": "48b1a8086d6968b6e256ed90eaea43938f289ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48b1a8086d6968b6e256ed90eaea43938f289ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/113fbfc795951a10f6c0b08563944bfb6a965956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/113fbfc795951a10f6c0b08563944bfb6a965956", "html_url": "https://github.com/rust-lang/rust/commit/113fbfc795951a10f6c0b08563944bfb6a965956", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/113fbfc795951a10f6c0b08563944bfb6a965956/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f5d7e1c2e7464916694e55ba4f31bf5b8f9a4f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f5d7e1c2e7464916694e55ba4f31bf5b8f9a4f9", "html_url": "https://github.com/rust-lang/rust/commit/7f5d7e1c2e7464916694e55ba4f31bf5b8f9a4f9"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "35a016c3cb09766689884518a598f10c5ac20130", "filename": "src/libcore/core.rc", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/113fbfc795951a10f6c0b08563944bfb6a965956/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/113fbfc795951a10f6c0b08563944bfb6a965956/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=113fbfc795951a10f6c0b08563944bfb6a965956", "patch": "@@ -10,27 +10,39 @@\n \n /*!\n \n-The Rust core library\n+# The Rust core library\n \n The Rust core library provides runtime features required by the language,\n including the task scheduler and memory allocators, as well as library\n support for Rust built-in types, platform abstractions, and other commonly\n used features.\n \n `core` includes modules corresponding to each of the integer types, each of\n-the floating point types, the `bool` type, tuples, characters, strings,\n-vectors (`vec`), managed boxes (`managed`), owned boxes (`owned`), and unsafe\n-and borrowed pointers (`ptr`).  Additionally, `core` provides task management\n-and creation (`task`), communication primitives (`comm` and `pipes`), platform\n-abstractions (`os` and `path`), basic I/O abstractions (`io`), common traits\n-(`cmp`, `num`, `to_str`), and complete bindings to the C standard library\n-(`libc`).\n+the floating point types, the `bool` type, tuples, characters, strings\n+(`str`), vectors (`vec`), managed boxes (`managed`), owned boxes (`owned`),\n+and unsafe and borrowed pointers (`ptr`).  Additionally, `core` provides\n+pervasive types (`option` and `result`), task creation and communication\n+primitives (`task`, `comm`), platform abstractions (`os` and `path`), basic\n+I/O abstractions (`io`), common traits (`kinds`, `ops`, `cmp`, `num`,\n+`to_str`), and complete bindings to the C standard library (`libc`).\n \n-`core` is linked to all crates by default and its contents imported.\n-Implicitly, all crates behave as if they included the following prologue:\n+# Core injection and the Rust prelude\n+\n+`core` is imported at the topmost level of every crate by default, as\n+if the first line of each crate was\n \n     extern mod core;\n-    use core::*;\n+\n+This means that the contents of core can be accessed from from any context\n+with the `core::` path prefix, as in `use core::vec`, `use core::task::spawn`,\n+etc.\n+\n+Additionally, `core` contains a `prelude` module that reexports many of the\n+most common core modules, types and traits. The contents of the prelude are\n+imported inte every *module* by default.  Implicitly, all modules behave as if\n+they contained the following prologue:\n+\n+    use core::prelude::*;\n \n */\n "}, {"sha": "7166ffbd3d3bf852e645311d8d826651619f2ff9", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/113fbfc795951a10f6c0b08563944bfb6a965956/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/113fbfc795951a10f6c0b08563944bfb6a965956/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=113fbfc795951a10f6c0b08563944bfb6a965956", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// This file is imported into every module by default.\n+//! The Rust prelude. Imported into every module by default.\n \n /* Reexported core operators */\n "}]}