{"sha": "3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZWE3YjMxZWUwZjFhZmRmY2JiMmVjZThhNTQ0NTY1NTcwNmNkOWI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2020-04-06T14:12:52Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2020-04-20T11:46:27Z"}, "message": "Make the `structural_match` error diagnostic for const generics clearer", "tree": {"sha": "acf9e21d2021bc876ccfd25cf9bea4127d3e12e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acf9e21d2021bc876ccfd25cf9bea4127d3e12e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "html_url": "https://github.com/rust-lang/rust/commit/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d67f576b56e8fc98a31123e5963f8d00e40611c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d67f576b56e8fc98a31123e5963f8d00e40611c", "html_url": "https://github.com/rust-lang/rust/commit/8d67f576b56e8fc98a31123e5963f8d00e40611c"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "ddf0b247ae3a39ca10ca3d4cfb938dfccc136c9d", "filename": "src/librustc_typeck/collect/type_of.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs?ref=3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "patch": "@@ -346,7 +346,9 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                         tcx.sess,\n                         hir_ty.span,\n                         E0741,\n-                        \"the types of const generic parameters must derive `PartialEq` and `Eq`\",\n+                        \"`{}` must be annotated with `#[derive(PartialEq, Eq)]` to be used as the \\\n+                         type of a const parameter\",\n+                        ty,\n                     )\n                     .span_label(\n                         hir_ty.span,"}, {"sha": "59bb06690a1c91b6735dc582dc09cd0e36e4ce1d", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param-ungated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.rs?ref=3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "patch": "@@ -1,6 +1,6 @@\n use std::marker::PhantomData;\n \n struct B<T, const N: T>(PhantomData<[T; N]>); //~ ERROR const generics are unstable\n-//~^ ERROR the types of const generic parameters must derive `PartialEq` and `Eq`\n+//~^ ERROR `T` must be annotated with `#[derive(PartialEq, Eq)]`\n \n fn main() {}"}, {"sha": "70f9fc4184c2c6ebe54bfb13b90b87ea9d579ca9", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param-ungated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr?ref=3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "patch": "@@ -7,7 +7,7 @@ LL | struct B<T, const N: T>(PhantomData<[T; N]>);\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n-error[E0741]: the types of const generic parameters must derive `PartialEq` and `Eq`\n+error[E0741]: `T` must be annotated with `#[derive(PartialEq, Eq)]` to be used as the type of a const parameter\n   --> $DIR/const-param-type-depends-on-type-param-ungated.rs:3:22\n    |\n LL | struct B<T, const N: T>(PhantomData<[T; N]>);"}, {"sha": "4dcda3b87a8545424c1b2058728850ca8ebd279e", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs?ref=3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "patch": "@@ -7,6 +7,6 @@\n // details.\n \n pub struct Dependent<T, const X: T>([(); X]);\n-//~^ ERROR the types of const generic parameters must derive `PartialEq` and `Eq`\n+//~^ ERROR `T` must be annotated with `#[derive(PartialEq, Eq)]`\n \n fn main() {}"}, {"sha": "290d53c4e1971402937182324570a920c538bbef", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "patch": "@@ -6,7 +6,7 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error[E0741]: the types of const generic parameters must derive `PartialEq` and `Eq`\n+error[E0741]: `T` must be annotated with `#[derive(PartialEq, Eq)]` to be used as the type of a const parameter\n   --> $DIR/const-param-type-depends-on-type-param.rs:9:34\n    |\n LL | pub struct Dependent<T, const X: T>([(); X]);"}, {"sha": "a30cdc3efdf436c92d6387905c67bb182c83b222", "filename": "src/test/ui/const-generics/forbid-non-structural_match-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs?ref=3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "patch": "@@ -8,6 +8,6 @@ struct B<const X: A>; // ok\n \n struct C;\n \n-struct D<const X: C>; //~ ERROR the types of const generic parameters must derive\n+struct D<const X: C>; //~ ERROR `C` must be annotated with `#[derive(PartialEq, Eq)]`\n \n fn main() {}"}, {"sha": "4f343146263ba1b115d51b6e85a9e0e0de5de4ec", "filename": "src/test/ui/const-generics/forbid-non-structural_match-types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr?ref=3eea7b31ee0f1afdfcbb2ece8a5445655706cd9b", "patch": "@@ -6,7 +6,7 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error[E0741]: the types of const generic parameters must derive `PartialEq` and `Eq`\n+error[E0741]: `C` must be annotated with `#[derive(PartialEq, Eq)]` to be used as the type of a const parameter\n   --> $DIR/forbid-non-structural_match-types.rs:11:19\n    |\n LL | struct D<const X: C>;"}]}