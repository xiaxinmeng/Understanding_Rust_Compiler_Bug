{"sha": "91613c5030320d21e566d2075c4f6abda7d97321", "node_id": "C_kwDOAAsO6NoAKDkxNjEzYzUwMzAzMjBkMjFlNTY2ZDIwNzVjNGY2YWJkYTdkOTczMjE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-24T21:35:11Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-28T04:18:37Z"}, "message": "make some things less pub", "tree": {"sha": "d7bce8d6fbbeda83582a38af7be5112421bcd68f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7bce8d6fbbeda83582a38af7be5112421bcd68f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91613c5030320d21e566d2075c4f6abda7d97321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91613c5030320d21e566d2075c4f6abda7d97321", "html_url": "https://github.com/rust-lang/rust/commit/91613c5030320d21e566d2075c4f6abda7d97321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91613c5030320d21e566d2075c4f6abda7d97321/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8973b3e3ccf84ffb13d1030d9fc56be94601f957", "url": "https://api.github.com/repos/rust-lang/rust/commits/8973b3e3ccf84ffb13d1030d9fc56be94601f957", "html_url": "https://github.com/rust-lang/rust/commit/8973b3e3ccf84ffb13d1030d9fc56be94601f957"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "dcb5b3b66ed2d8b556d09b2da20a953e6119d76e", "filename": "compiler/rustc_hir_analysis/src/check/compare_method.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/91613c5030320d21e566d2075c4f6abda7d97321/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91613c5030320d21e566d2075c4f6abda7d97321/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=91613c5030320d21e566d2075c4f6abda7d97321", "patch": "@@ -34,7 +34,7 @@ use std::iter;\n /// - `impl_m_span`: span to use for reporting errors\n /// - `trait_m`: the method in the trait\n /// - `impl_trait_ref`: the TraitRef corresponding to the trait implementation\n-pub(crate) fn compare_impl_method<'tcx>(\n+pub(super) fn compare_impl_method<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     impl_m: &ty::AssocItem,\n     trait_m: &ty::AssocItem,\n@@ -442,7 +442,7 @@ fn compare_asyncness<'tcx>(\n }\n \n #[instrument(skip(tcx), level = \"debug\", ret)]\n-pub fn collect_trait_impl_trait_tys<'tcx>(\n+pub(super) fn collect_trait_impl_trait_tys<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     def_id: DefId,\n ) -> Result<&'tcx FxHashMap<DefId, Ty<'tcx>>, ErrorGuaranteed> {\n@@ -1517,7 +1517,7 @@ fn compare_generic_param_kinds<'tcx>(\n }\n \n /// Use `tcx.compare_impl_const` instead\n-pub(crate) fn compare_impl_const_raw(\n+pub(super) fn compare_impl_const_raw(\n     tcx: TyCtxt<'_>,\n     (impl_const_item_def, trait_const_item_def): (LocalDefId, DefId),\n ) -> Result<(), ErrorGuaranteed> {\n@@ -1623,7 +1623,7 @@ pub(crate) fn compare_impl_const_raw(\n     Ok(())\n }\n \n-pub(crate) fn compare_impl_ty<'tcx>(\n+pub(super) fn compare_impl_ty<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     impl_ty: &ty::AssocItem,\n     impl_ty_span: Span,\n@@ -1749,7 +1749,7 @@ fn compare_type_predicate_entailment<'tcx>(\n /// from the impl could be overridden). We also can't normalize generic\n /// associated types (yet) because they contain bound parameters.\n #[instrument(level = \"debug\", skip(tcx))]\n-pub fn check_type_bounds<'tcx>(\n+pub(super) fn check_type_bounds<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     trait_ty: &ty::AssocItem,\n     impl_ty: &ty::AssocItem,"}]}