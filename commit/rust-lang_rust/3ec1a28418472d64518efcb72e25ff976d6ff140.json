{"sha": "3ec1a28418472d64518efcb72e25ff976d6ff140", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYzFhMjg0MTg0NzJkNjQ1MThlZmNiNzJlMjVmZjk3NmQ2ZmYxNDA=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-12T09:50:16Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-02-20T20:44:17Z"}, "message": "Add FIXME for safety comments that are invalid when T is a ZST", "tree": {"sha": "2a6273513e1d915c88477da138ac2ad9e24d562e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a6273513e1d915c88477da138ac2ad9e24d562e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ec1a28418472d64518efcb72e25ff976d6ff140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec1a28418472d64518efcb72e25ff976d6ff140", "html_url": "https://github.com/rust-lang/rust/commit/3ec1a28418472d64518efcb72e25ff976d6ff140", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ec1a28418472d64518efcb72e25ff976d6ff140/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b4e61255c4112c774194e62728b4d575abfff26", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4e61255c4112c774194e62728b4d575abfff26", "html_url": "https://github.com/rust-lang/rust/commit/9b4e61255c4112c774194e62728b4d575abfff26"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "33bd98d467ceca291326b69526b9a766853333d0", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ec1a28418472d64518efcb72e25ff976d6ff140/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ec1a28418472d64518efcb72e25ff976d6ff140/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=3ec1a28418472d64518efcb72e25ff976d6ff140", "patch": "@@ -571,6 +571,8 @@ impl<T: Ord> BinaryHeap<T> {\n             //  child + 1 < end <= self.len(), so they're valid indexes.\n             //  child == 2 * hole.pos() + 1 != hole.pos() and\n             //  child + 1 == 2 * hole.pos() + 2 != hole.pos().\n+            // FIXME: 2 * hole.pos() + 1 or 2 * hole.pos() + 2 could overflow\n+            //  if T is a ZST\n             child += unsafe { hole.get(child) <= hole.get(child + 1) } as usize;\n \n             // if we are already in order, stop.\n@@ -627,6 +629,8 @@ impl<T: Ord> BinaryHeap<T> {\n             //  child + 1 < end <= self.len(), so they're valid indexes.\n             //  child == 2 * hole.pos() + 1 != hole.pos() and\n             //  child + 1 == 2 * hole.pos() + 2 != hole.pos().\n+            // FIXME: 2 * hole.pos() + 1 or 2 * hole.pos() + 2 could overflow\n+            //  if T is a ZST\n             child += unsafe { hole.get(child) <= hole.get(child + 1) } as usize;\n \n             // SAFETY: Same as above"}]}