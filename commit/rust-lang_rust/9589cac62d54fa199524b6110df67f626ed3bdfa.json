{"sha": "9589cac62d54fa199524b6110df67f626ed3bdfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ODljYWM2MmQ1NGZhMTk5NTI0YjYxMTBkZjY3ZjYyNmVkM2JkZmE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-05-18T20:36:59Z"}, "committer": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2016-05-18T20:36:59Z"}, "message": "Format inline attributes on out-of-line modules (#996)\n\nFixes #838", "tree": {"sha": "1dd53cac4c1c29b9d7ee5210e16f93e5171527b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dd53cac4c1c29b9d7ee5210e16f93e5171527b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9589cac62d54fa199524b6110df67f626ed3bdfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9589cac62d54fa199524b6110df67f626ed3bdfa", "html_url": "https://github.com/rust-lang/rust/commit/9589cac62d54fa199524b6110df67f626ed3bdfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9589cac62d54fa199524b6110df67f626ed3bdfa/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78f8b6c2e3f0e155b6aa8c8e72fc1c711a6dde2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/78f8b6c2e3f0e155b6aa8c8e72fc1c711a6dde2d", "html_url": "https://github.com/rust-lang/rust/commit/78f8b6c2e3f0e155b6aa8c8e72fc1c711a6dde2d"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "48a1a778c20a77069760ff7be45425aea5ad28d6", "filename": "src/visitor.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9589cac62d54fa199524b6110df67f626ed3bdfa/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9589cac62d54fa199524b6110df67f626ed3bdfa/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=9589cac62d54fa199524b6110df67f626ed3bdfa", "patch": "@@ -185,20 +185,41 @@ impl<'a> FmtVisitor<'a> {\n     }\n \n     fn visit_item(&mut self, item: &ast::Item) {\n-        // Only look at attributes for modules (except for rustfmt_skip) if the\n-        // module is inline. We want to avoid looking at attributes in another\n-        // file, which the AST doesn't distinguish.\n+        // This is where we bail out if there is a skip attribute. This is only\n+        // complex in the module case. It is complex because the module could be\n+        // in a seperate file and there might be attributes in both files, but\n+        // the AST lumps them all together.\n         match item.node {\n             ast::ItemKind::Mod(ref m) => {\n                 let outer_file = self.codemap.lookup_char_pos(item.span.lo).file;\n                 let inner_file = self.codemap.lookup_char_pos(m.inner.lo).file;\n                 if outer_file.name == inner_file.name {\n+                    // Module is inline, in this case we treat modules like any\n+                    // other item.\n                     if self.visit_attrs(&item.attrs) {\n                         self.push_rewrite(item.span, None);\n                         return;\n                     }\n                 } else if utils::contains_skip(&item.attrs) {\n+                    // Module is not inline, but should be skipped.\n                     return;\n+                } else {\n+                    // Module is not inline and should not be skipped. We want\n+                    // to process only the attributes in the current file.\n+                    let attrs = item.attrs\n+                        .iter()\n+                        .filter_map(|a| {\n+                            let attr_file = self.codemap.lookup_char_pos(a.span.lo).file;\n+                            if attr_file.name == outer_file.name {\n+                                Some(a.clone())\n+                            } else {\n+                                None\n+                            }\n+                        })\n+                        .collect::<Vec<_>>();\n+                    // Assert because if we should skip it should be caught by\n+                    // the above case.\n+                    assert!(!self.visit_attrs(&attrs));\n                 }\n             }\n             _ => {"}, {"sha": "7202e00203ec9005a62469c71d5569030298f2cd", "filename": "tests/source/mod-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9589cac62d54fa199524b6110df67f626ed3bdfa/tests%2Fsource%2Fmod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9589cac62d54fa199524b6110df67f626ed3bdfa/tests%2Fsource%2Fmod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmod-2.rs?ref=9589cac62d54fa199524b6110df67f626ed3bdfa", "patch": "@@ -1,4 +1,4 @@\n // Some nested mods\n \n- mod   nestedmod  ;\n+#[cfg(test)]  mod   nestedmod  ;\n pub  mod no_new_line_beginning;"}, {"sha": "1a093bd520128a36ce27a47d47134821d97e25cf", "filename": "tests/target/mod-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9589cac62d54fa199524b6110df67f626ed3bdfa/tests%2Ftarget%2Fmod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9589cac62d54fa199524b6110df67f626ed3bdfa/tests%2Ftarget%2Fmod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmod-2.rs?ref=9589cac62d54fa199524b6110df67f626ed3bdfa", "patch": "@@ -1,4 +1,5 @@\n // Some nested mods\n \n+#[cfg(test)]\n mod nestedmod;\n pub mod no_new_line_beginning;"}]}