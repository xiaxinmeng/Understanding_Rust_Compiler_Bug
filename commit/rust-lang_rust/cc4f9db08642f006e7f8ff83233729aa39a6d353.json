{"sha": "cc4f9db08642f006e7f8ff83233729aa39a6d353", "node_id": "C_kwDOAAsO6NoAKGNjNGY5ZGIwODY0MmYwMDZlN2Y4ZmY4MzIzMzcyOWFhMzlhNmQzNTM", "commit": {"author": {"name": "Allan Brondum Rasmussen", "email": "allanbrondum@gmail.com", "date": "2022-12-02T23:53:56Z"}, "committer": {"name": "Allan Brondum Rasmussen", "email": "allanbrondum@gmail.com", "date": "2022-12-02T23:53:56Z"}, "message": "remove unneeded test", "tree": {"sha": "e431338aaad57eead7e6b343f104eadd67b1fd5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e431338aaad57eead7e6b343f104eadd67b1fd5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc4f9db08642f006e7f8ff83233729aa39a6d353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc4f9db08642f006e7f8ff83233729aa39a6d353", "html_url": "https://github.com/rust-lang/rust/commit/cc4f9db08642f006e7f8ff83233729aa39a6d353", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc4f9db08642f006e7f8ff83233729aa39a6d353/comments", "author": null, "committer": null, "parents": [{"sha": "bce3b6370036ba5ab0b0e29b3fe94b8f62020c00", "url": "https://api.github.com/repos/rust-lang/rust/commits/bce3b6370036ba5ab0b0e29b3fe94b8f62020c00", "html_url": "https://github.com/rust-lang/rust/commit/bce3b6370036ba5ab0b0e29b3fe94b8f62020c00"}], "stats": {"total": 123, "additions": 2, "deletions": 121}, "files": [{"sha": "90723dcdbb74de8c235911c10e43a81439631701", "filename": "crates/ide/src/call_hierarchy.rs", "status": "modified", "additions": 2, "deletions": 121, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/cc4f9db08642f006e7f8ff83233729aa39a6d353/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc4f9db08642f006e7f8ff83233729aa39a6d353/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs?ref=cc4f9db08642f006e7f8ff83233729aa39a6d353", "patch": "@@ -460,7 +460,7 @@ fn caller$0() {\n     }\n \n     #[test]\n-    fn test_trait_method_call_hierarchy_on_def() {\n+    fn test_trait_method_call_hierarchy() {\n         check_hierarchy(\n             r#\"\n trait T1 {\n@@ -482,124 +482,5 @@ fn caller() {\n             expect![[]],\n         );\n     }\n-\n-    #[test]\n-    fn test_trait_method_call_hierarchy_on_impl() {\n-        check_hierarchy(\n-            r#\"\n-trait T1 {\n-    fn callee();\n-}\n-\n-struct S1;\n-\n-impl T1 for S1 {\n-    fn call$0ee() {}\n-}\n-\n-fn caller() {\n-    S1::callee();\n-}\n-\"#,\n-            expect![[\"callee Function FileId(0) 64..78 67..73\"]],\n-            expect![[\"caller Function FileId(0) 82..115 85..91 : [104..110]\"]],\n-            expect![[]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_trait_method_call_hierarchy_on_ref() {\n-        check_hierarchy(\n-            r#\"\n-trait T1 {\n-    fn callee();\n-}\n-\n-struct S1;\n-\n-impl T1 for S1 {\n-    fn callee() {}\n-}\n-\n-fn caller() {\n-    S1::call$0ee();\n-}\n-\"#,\n-            expect![[\"callee Function FileId(0) 64..78 67..73\"]],\n-            expect![[\"caller Function FileId(0) 82..115 85..91 : [104..110]\"]],\n-            expect![[]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_trait_method_generic_call_hierarchy_on_def() {\n-        check_hierarchy(\n-            r#\"\n-trait T1 {\n-    fn call$0ee();\n-}\n-\n-struct S1;\n-\n-impl T1 for S1 {\n-    fn callee() {}\n-}\n-\n-fn caller<T: T1>() {\n-    T::callee();\n-}\n-\"#,\n-            expect![[\"callee Function FileId(0) 15..27 18..24\"]],\n-            expect![[\"caller Function FileId(0) 82..121 85..91 : [110..116]\"]],\n-            expect![[]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_trait_method_generic_call_hierarchy_on_impl() {\n-        check_hierarchy(\n-            r#\"\n-trait T1 {\n-    fn callee();\n-}\n-\n-struct S1;\n-\n-impl T1 for S1 {\n-    fn call$0ee() {}\n-}\n-\n-fn caller<T: T1>() {\n-    T::callee();\n-}\n-\"#,\n-            expect![[\"callee Function FileId(0) 64..78 67..73\"]],\n-            expect![[\"caller Function FileId(0) 82..121 85..91 : [110..116]\"]],\n-            expect![[]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_trait_method_generic_call_hierarchy_on_ref() {\n-        check_hierarchy(\n-            r#\"\n-trait T1 {\n-    fn callee();\n-}\n-\n-struct S1;\n-\n-impl T1 for S1 {\n-    fn callee() {}\n-}\n-\n-fn caller<T: T1>() {\n-    T::call$0ee();\n-}\n-\"#,\n-            expect![[\"callee Function FileId(0) 15..27 18..24\"]],\n-            expect![[\"caller Function FileId(0) 82..121 85..91 : [110..116]\"]],\n-            expect![[]],\n-        );\n-    }\n+    \n }"}]}