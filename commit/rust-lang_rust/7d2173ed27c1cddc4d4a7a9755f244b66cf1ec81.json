{"sha": "7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMjE3M2VkMjdjMWNkZGM0ZDRhN2E5NzU1ZjI0NGI2NmNmMWVjODE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-12-13T00:25:08Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-01-30T00:19:40Z"}, "message": "Use `P` for `NtMeta`.\n\nThis commit reduces the size of `Nonterminal` from a 72 bytes to 40 bytes (on\nx86-64).", "tree": {"sha": "bd6b839356cc0830d36c62079f9c76fd5919f946", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd6b839356cc0830d36c62079f9c76fd5919f946"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "html_url": "https://github.com/rust-lang/rust/commit/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d69fe8308a76630a104504c14e1d3d74e2a3f15", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d69fe8308a76630a104504c14e1d3d74e2a3f15", "html_url": "https://github.com/rust-lang/rust/commit/0d69fe8308a76630a104504c14e1d3d74e2a3f15"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "6e7a4a556b80cf09d940ef8e5134377894637ec8", "filename": "src/librustc_expand/mbe/macro_parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs?ref=7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "patch": "@@ -81,6 +81,7 @@ use rustc_parse::Directory;\n use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{Ident, Name};\n use syntax::print::pprust;\n+use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::token::{self, DocComment, Nonterminal, Token};\n use syntax::tokenstream::TokenStream;\n@@ -914,7 +915,7 @@ fn parse_nt_inner<'a>(p: &mut Parser<'a>, sp: Span, name: Symbol) -> PResult<'a,\n             }\n         }\n         sym::path => token::NtPath(p.parse_path(PathStyle::Type)?),\n-        sym::meta => token::NtMeta(p.parse_attr_item()?),\n+        sym::meta => token::NtMeta(P(p.parse_attr_item()?)),\n         sym::vis => token::NtVis(p.parse_visibility(FollowedByType::Yes)?),\n         sym::lifetime => {\n             if p.check_lifetime() {"}, {"sha": "1869389dbd9e6428dbe72187bbaeac595c904dce", "filename": "src/librustc_parse/parser/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fattr.rs?ref=7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "patch": "@@ -177,7 +177,7 @@ impl<'a> Parser<'a> {\n     pub fn parse_attr_item(&mut self) -> PResult<'a, ast::AttrItem> {\n         let item = match self.token.kind {\n             token::Interpolated(ref nt) => match **nt {\n-                Nonterminal::NtMeta(ref item) => Some(item.clone()),\n+                Nonterminal::NtMeta(ref item) => Some(item.clone().into_inner()),\n                 _ => None,\n             },\n             _ => None,"}, {"sha": "3bcdf8fe286e4b40d1e26792397fb1c5a96cc0e1", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "patch": "@@ -704,7 +704,8 @@ pub fn noop_visit_interpolated<T: MutVisitor>(nt: &mut token::Nonterminal, vis:\n         token::NtIdent(ident, _is_raw) => vis.visit_ident(ident),\n         token::NtLifetime(ident) => vis.visit_ident(ident),\n         token::NtLiteral(expr) => vis.visit_expr(expr),\n-        token::NtMeta(AttrItem { path, args }) => {\n+        token::NtMeta(item) => {\n+            let AttrItem { path, args } = item.deref_mut();\n             vis.visit_path(path);\n             visit_mac_args(args, vis);\n         }"}, {"sha": "3045f147698a55583ac846837ed8aa760155c223", "filename": "src/libsyntax/token.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibsyntax%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81/src%2Flibsyntax%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftoken.rs?ref=7d2173ed27c1cddc4d4a7a9755f244b66cf1ec81", "patch": "@@ -673,7 +673,7 @@ pub enum Nonterminal {\n     NtLifetime(ast::Ident),\n     NtLiteral(P<ast::Expr>),\n     /// Stuff inside brackets for attributes\n-    NtMeta(ast::AttrItem),\n+    NtMeta(P<ast::AttrItem>),\n     NtPath(ast::Path),\n     NtVis(ast::Visibility),\n     NtTT(TokenTree),\n@@ -687,7 +687,7 @@ pub enum Nonterminal {\n \n // `Nonterminal` is used a lot. Make sure it doesn't unintentionally get bigger.\n #[cfg(target_arch = \"x86_64\")]\n-rustc_data_structures::static_assert_size!(Nonterminal, 72);\n+rustc_data_structures::static_assert_size!(Nonterminal, 40);\n \n impl PartialEq for Nonterminal {\n     fn eq(&self, rhs: &Self) -> bool {"}]}