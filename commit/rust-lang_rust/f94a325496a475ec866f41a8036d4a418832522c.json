{"sha": "f94a325496a475ec866f41a8036d4a418832522c", "node_id": "C_kwDOAAsO6NoAKGY5NGEzMjU0OTZhNDc1ZWM4NjZmNDFhODAzNmQ0YTQxODgzMjUyMmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-11T21:45:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-11T21:45:53Z"}, "message": "Rollup merge of #89785 - nbdd0121:master, r=Mark-Simulacrum\n\nFix ICE when compiling nightly std/rustc on beta compiler\n\nFix #89775\n\n#89479 renames a lot of diagnostic items, but it happens that the beta compiler assumes that there must be DefId with `rustc_diagnostic_item = \"send_trait\"`, causing an ICE when compiling stage 0 std or stage 1 compiler. So gate it with `cfg(bootstrap)`.\n\nThe unwrap is also removed, so that existence of the diagnostic item is not required. I ripgreped the code base and this seems the only place where `unwrap` is called on the return value of `get_diagnostic_item`.", "tree": {"sha": "1cb8588faab2e5f11d7e29c0f9efc32acc4a0ac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cb8588faab2e5f11d7e29c0f9efc32acc4a0ac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f94a325496a475ec866f41a8036d4a418832522c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhZLCSCRBK7hj4Ov3rIwAAFjAIAEMYIAQF/Bv/rTtatqjp2d6p\nFW6GvT0/WKFcGxxZxViLgFeUAwE7iXbnyTlbqb4MRKxYx0IR/t68iSd2vJGloCjM\n5qkHRTFT2Pfeq1OU7ks/B1y7WPnwB0E/dktarZHUURWmnnoQ3DYb9sFTyYs+qkdI\nahZBtl/fvQVA/BzGlkyEd7EIQaNvzWmKMQmN9RmnbDeafIwXjkqBFCQy7mDYZ90n\nZO6H2T+L10n0qoLvs3iKEs67yii8iVO/KhQItVUuQYTSrqJWFwNRGBM9tp1P75HZ\nm/wLtUCE1DYKWvcOmjnFBJkCdnC0uP6EdjKcUQu6O9xXgfZbcU3NAc+QGSAzh9s=\n=5Ho0\n-----END PGP SIGNATURE-----\n", "payload": "tree 1cb8588faab2e5f11d7e29c0f9efc32acc4a0ac2\nparent 603da7e83fec2767a7bcebb2f5c1aaaa244087a3\nparent 148f456cc6fd12a19f45a75b1fd758605c657d0d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1633988753 +0200\ncommitter GitHub <noreply@github.com> 1633988753 +0200\n\nRollup merge of #89785 - nbdd0121:master, r=Mark-Simulacrum\n\nFix ICE when compiling nightly std/rustc on beta compiler\n\nFix #89775\n\n#89479 renames a lot of diagnostic items, but it happens that the beta compiler assumes that there must be DefId with `rustc_diagnostic_item = \"send_trait\"`, causing an ICE when compiling stage 0 std or stage 1 compiler. So gate it with `cfg(bootstrap)`.\n\nThe unwrap is also removed, so that existence of the diagnostic item is not required. I ripgreped the code base and this seems the only place where `unwrap` is called on the return value of `get_diagnostic_item`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f94a325496a475ec866f41a8036d4a418832522c", "html_url": "https://github.com/rust-lang/rust/commit/f94a325496a475ec866f41a8036d4a418832522c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f94a325496a475ec866f41a8036d4a418832522c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "603da7e83fec2767a7bcebb2f5c1aaaa244087a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/603da7e83fec2767a7bcebb2f5c1aaaa244087a3", "html_url": "https://github.com/rust-lang/rust/commit/603da7e83fec2767a7bcebb2f5c1aaaa244087a3"}, {"sha": "148f456cc6fd12a19f45a75b1fd758605c657d0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/148f456cc6fd12a19f45a75b1fd758605c657d0d", "html_url": "https://github.com/rust-lang/rust/commit/148f456cc6fd12a19f45a75b1fd758605c657d0d"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "1a8f863952e6ad5cddaabc3247c5864edac6b354", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f94a325496a475ec866f41a8036d4a418832522c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f94a325496a475ec866f41a8036d4a418832522c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=f94a325496a475ec866f41a8036d4a418832522c", "patch": "@@ -704,7 +704,9 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 .filter_map(|lang_item| self.tcx.lang_items().require(*lang_item).ok())\n                 .collect();\n \n-        never_suggest_borrow.push(self.tcx.get_diagnostic_item(sym::Send).unwrap());\n+        if let Some(def_id) = self.tcx.get_diagnostic_item(sym::Send) {\n+            never_suggest_borrow.push(def_id);\n+        }\n \n         let param_env = obligation.param_env;\n         let trait_ref = poly_trait_ref.skip_binder();"}, {"sha": "e5c3fafe5f1f0a1b097eecc34af57f8ee92430d9", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f94a325496a475ec866f41a8036d4a418832522c/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f94a325496a475ec866f41a8036d4a418832522c/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=f94a325496a475ec866f41a8036d4a418832522c", "patch": "@@ -30,7 +30,8 @@ use crate::hash::Hasher;\n /// [arc]: ../../std/sync/struct.Arc.html\n /// [ub]: ../../reference/behavior-considered-undefined.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(not(test), rustc_diagnostic_item = \"Send\")]\n+#[cfg_attr(all(not(test), bootstrap), rustc_diagnostic_item = \"send_trait\")]\n+#[cfg_attr(all(not(test), not(bootstrap)), rustc_diagnostic_item = \"Send\")]\n #[rustc_on_unimplemented(\n     message = \"`{Self}` cannot be sent between threads safely\",\n     label = \"`{Self}` cannot be sent between threads safely\""}]}