{"sha": "68fd1ce3139ca6517f2c46ad12866147aca6b178", "node_id": "C_kwDOAAsO6NoAKDY4ZmQxY2UzMTM5Y2E2NTE3ZjJjNDZhZDEyODY2MTQ3YWNhNmIxNzg", "commit": {"author": {"name": "feniljain", "email": "fkjainco@gmail.com", "date": "2022-12-12T11:18:55Z"}, "committer": {"name": "feniljain", "email": "fkjainco@gmail.com", "date": "2022-12-17T13:51:21Z"}, "message": "feat: bump variant suggestion for enums in patterns completion", "tree": {"sha": "0731f48776a344047a36b0ec12c3107b6bb501ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0731f48776a344047a36b0ec12c3107b6bb501ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68fd1ce3139ca6517f2c46ad12866147aca6b178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68fd1ce3139ca6517f2c46ad12866147aca6b178", "html_url": "https://github.com/rust-lang/rust/commit/68fd1ce3139ca6517f2c46ad12866147aca6b178", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68fd1ce3139ca6517f2c46ad12866147aca6b178/comments", "author": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0aa5afd7bd69813154e97a25cb6c6b4f05ea1be", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0aa5afd7bd69813154e97a25cb6c6b4f05ea1be", "html_url": "https://github.com/rust-lang/rust/commit/e0aa5afd7bd69813154e97a25cb6c6b4f05ea1be"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "cac5dccde2b206d7fd6ccb8932c87298e0bd24a8", "filename": "crates/ide-completion/src/completions.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68fd1ce3139ca6517f2c46ad12866147aca6b178/crates%2Fide-completion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fd1ce3139ca6517f2c46ad12866147aca6b178/crates%2Fide-completion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions.rs?ref=68fd1ce3139ca6517f2c46ad12866147aca6b178", "patch": "@@ -496,6 +496,7 @@ impl Completions {\n             variant,\n             local_name.clone(),\n             None,\n+            false,\n         ));\n     }\n \n@@ -514,6 +515,7 @@ impl Completions {\n             variant,\n             None,\n             path,\n+            true,\n         ));\n     }\n "}, {"sha": "edb727b57d2bcfcbf399af1c3c133b0affcf763c", "filename": "crates/ide-completion/src/render/pattern.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/68fd1ce3139ca6517f2c46ad12866147aca6b178/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fd1ce3139ca6517f2c46ad12866147aca6b178/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs?ref=68fd1ce3139ca6517f2c46ad12866147aca6b178", "patch": "@@ -7,6 +7,7 @@ use syntax::SmolStr;\n \n use crate::{\n     context::{ParamContext, ParamKind, PathCompletionCtx, PatternContext},\n+    item::CompletionRelevanceTypeMatch,\n     render::{\n         variant::{format_literal_label, format_literal_lookup, visible_fields},\n         RenderContext,\n@@ -37,7 +38,7 @@ pub(crate) fn render_struct_pat(\n     let lookup = format_literal_lookup(name.as_str(), kind);\n     let pat = render_pat(&ctx, pattern_ctx, &escaped_name, kind, &visible_fields, fields_omitted)?;\n \n-    Some(build_completion(ctx, label, lookup, pat, strukt))\n+    Some(build_completion(ctx, label, lookup, pat, strukt, false))\n }\n \n pub(crate) fn render_variant_pat(\n@@ -47,6 +48,7 @@ pub(crate) fn render_variant_pat(\n     variant: hir::Variant,\n     local_name: Option<Name>,\n     path: Option<&hir::ModPath>,\n+    is_exact_type_match: bool,\n ) -> Option<CompletionItem> {\n     let _p = profile::span(\"render_variant_pat\");\n \n@@ -81,7 +83,7 @@ pub(crate) fn render_variant_pat(\n         }\n     };\n \n-    Some(build_completion(ctx, label, lookup, pat, variant))\n+    Some(build_completion(ctx, label, lookup, pat, variant, is_exact_type_match))\n }\n \n fn build_completion(\n@@ -90,13 +92,20 @@ fn build_completion(\n     lookup: SmolStr,\n     pat: String,\n     def: impl HasAttrs + Copy,\n+    is_exact_type_match: bool,\n ) -> CompletionItem {\n+    let mut relevance = ctx.completion_relevance();\n+\n+    if is_exact_type_match {\n+        relevance.type_match = Some(CompletionRelevanceTypeMatch::Exact);\n+    }\n+\n     let mut item = CompletionItem::new(CompletionItemKind::Binding, ctx.source_range(), label);\n     item.set_documentation(ctx.docs(def))\n         .set_deprecated(ctx.is_deprecated(def))\n         .detail(&pat)\n         .lookup_by(lookup)\n-        .set_relevance(ctx.completion_relevance());\n+        .set_relevance(relevance);\n     match ctx.snippet_cap() {\n         Some(snippet_cap) => item.insert_snippet(snippet_cap, pat),\n         None => item.insert_text(pat),"}]}