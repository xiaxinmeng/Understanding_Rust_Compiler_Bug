{"sha": "cc3f4357d37e87449313c8af355f4331a5289b8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjM2Y0MzU3ZDM3ZTg3NDQ5MzEzYzhhZjM1NWY0MzMxYTUyODliOGQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-20T13:21:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-20T13:21:56Z"}, "message": "Rollup merge of #46787 - varkor:contrib-6, r=QuietMisdreavus\n\nAdd an option to allow rustdoc to list modules by appearance\n\nThe `--sort-modules-by-appearance` option will list modules in the\norder that they appear in the source, rather than sorting them\nalphabetically (as is the default). This resolves #8552.", "tree": {"sha": "852ab82950fc77381f04c1bfb3a365e760e7b20a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/852ab82950fc77381f04c1bfb3a365e760e7b20a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc3f4357d37e87449313c8af355f4331a5289b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc3f4357d37e87449313c8af355f4331a5289b8d", "html_url": "https://github.com/rust-lang/rust/commit/cc3f4357d37e87449313c8af355f4331a5289b8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc3f4357d37e87449313c8af355f4331a5289b8d/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d57459fc99aee3f3af4c282965ccd9689f3aa59", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d57459fc99aee3f3af4c282965ccd9689f3aa59", "html_url": "https://github.com/rust-lang/rust/commit/1d57459fc99aee3f3af4c282965ccd9689f3aa59"}, {"sha": "b3c6102be3752fa1b70cc5f9cf9903b13a4c3928", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c6102be3752fa1b70cc5f9cf9903b13a4c3928", "html_url": "https://github.com/rust-lang/rust/commit/b3c6102be3752fa1b70cc5f9cf9903b13a4c3928"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "9f981e97a762bf8dba9bd7bb88dc60fff48139c3", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cc3f4357d37e87449313c8af355f4331a5289b8d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3f4357d37e87449313c8af355f4331a5289b8d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=cc3f4357d37e87449313c8af355f4331a5289b8d", "patch": "@@ -129,6 +129,9 @@ pub struct SharedContext {\n     /// The directories that have already been created in this doc run. Used to reduce the number\n     /// of spurious `create_dir_all` calls.\n     pub created_dirs: RefCell<FxHashSet<PathBuf>>,\n+    /// This flag indicates whether listings of modules (in the side bar and documentation itself)\n+    /// should be ordered alphabetically or in order of appearance (in the source code).\n+    pub sort_modules_alphabetically: bool,\n }\n \n impl SharedContext {\n@@ -491,7 +494,8 @@ pub fn run(mut krate: clean::Crate,\n            passes: FxHashSet<String>,\n            css_file_extension: Option<PathBuf>,\n            renderinfo: RenderInfo,\n-           render_type: RenderType) -> Result<(), Error> {\n+           render_type: RenderType,\n+           sort_modules_alphabetically: bool) -> Result<(), Error> {\n     let src_root = match krate.src {\n         FileName::Real(ref p) => match p.parent() {\n             Some(p) => p.to_path_buf(),\n@@ -514,6 +518,7 @@ pub fn run(mut krate: clean::Crate,\n         css_file_extension: css_file_extension.clone(),\n         markdown_warnings: RefCell::new(vec![]),\n         created_dirs: RefCell::new(FxHashSet()),\n+        sort_modules_alphabetically,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -1654,8 +1659,10 @@ impl Context {\n                 .push((myname, Some(plain_summary_line(item.doc_value()))));\n         }\n \n-        for (_, items) in &mut map {\n-            items.sort();\n+        if self.shared.sort_modules_alphabetically {\n+            for (_, items) in &mut map {\n+                items.sort();\n+            }\n         }\n         map\n     }\n@@ -2013,7 +2020,9 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n         name_key(lhs).cmp(&name_key(rhs))\n     }\n \n-    indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2));\n+    if cx.shared.sort_modules_alphabetically {\n+        indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2));\n+    }\n     // This call is to remove reexport duplicates in cases such as:\n     //\n     // ```"}, {"sha": "7ebacdec1f0b23d8c6dd19c3d734ae3b6623b28f", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cc3f4357d37e87449313c8af355f4331a5289b8d/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3f4357d37e87449313c8af355f4331a5289b8d/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=cc3f4357d37e87449313c8af355f4331a5289b8d", "patch": "@@ -253,6 +253,10 @@ pub fn opts() -> Vec<RustcOptGroup> {\n         unstable(\"linker\", |o| {\n             o.optopt(\"\", \"linker\", \"linker used for building executable test code\", \"PATH\")\n         }),\n+        unstable(\"sort-modules-by-appearance\", |o| {\n+            o.optflag(\"\", \"sort-modules-by-appearance\", \"sort modules by where they appear in the \\\n+                                                         program, rather than alphabetically\")\n+        }),\n     ]\n }\n \n@@ -369,6 +373,7 @@ pub fn main_args(args: &[String]) -> isize {\n     let maybe_sysroot = matches.opt_str(\"sysroot\").map(PathBuf::from);\n     let display_warnings = matches.opt_present(\"display-warnings\");\n     let linker = matches.opt_str(\"linker\").map(PathBuf::from);\n+    let sort_modules_alphabetically = !matches.opt_present(\"sort-modules-by-appearance\");\n \n     match (should_test, markdown_input) {\n         (true, true) => {\n@@ -398,7 +403,8 @@ pub fn main_args(args: &[String]) -> isize {\n                                   passes.into_iter().collect(),\n                                   css_file_extension,\n                                   renderinfo,\n-                                  render_type)\n+                                  render_type,\n+                                  sort_modules_alphabetically)\n                     .expect(\"failed to generate documentation\");\n                 0\n             }"}, {"sha": "abffe6fb95b99cd6c8b4f77d92f90aa0c70cbe54", "filename": "src/test/rustdoc/sort-modules-by-appearance.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cc3f4357d37e87449313c8af355f4331a5289b8d/src%2Ftest%2Frustdoc%2Fsort-modules-by-appearance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3f4357d37e87449313c8af355f4331a5289b8d/src%2Ftest%2Frustdoc%2Fsort-modules-by-appearance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsort-modules-by-appearance.rs?ref=cc3f4357d37e87449313c8af355f4331a5289b8d", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests the rustdoc --sort-modules-by-appearance option, that allows module declarations to appear\n+// in the order they are declared in the source code, rather than only alphabetically.\n+\n+// compile-flags: -Z unstable-options --sort-modules-by-appearance\n+\n+pub mod module_b {}\n+\n+pub mod module_c {}\n+\n+pub mod module_a {}\n+\n+// @matches 'sort_modules_by_appearance/index.html' '(?s)module_b.*module_c.*module_a'\n+// @matches 'sort_modules_by_appearance/sidebar-items.js' '\"module_b\".*\"module_c\".*\"module_a\"'"}]}