{"sha": "ef24721640c4722ce47d491a6bf5dd0760da57bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMjQ3MjE2NDBjNDcyMmNlNDdkNDkxYTZiZjVkZDA3NjBkYTU3YmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-31T20:13:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-31T20:13:30Z"}, "message": "Fixes to progress display", "tree": {"sha": "78f11b60c19e74059afc26f7638efad6201d9864", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78f11b60c19e74059afc26f7638efad6201d9864"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef24721640c4722ce47d491a6bf5dd0760da57bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef24721640c4722ce47d491a6bf5dd0760da57bd", "html_url": "https://github.com/rust-lang/rust/commit/ef24721640c4722ce47d491a6bf5dd0760da57bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef24721640c4722ce47d491a6bf5dd0760da57bd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "html_url": "https://github.com/rust-lang/rust/commit/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "430ad31b4c3747ed1675ab0404006191774ecdb3", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ef24721640c4722ce47d491a6bf5dd0760da57bd/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ef24721640c4722ce47d491a6bf5dd0760da57bd/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=ef24721640c4722ce47d491a6bf5dd0760da57bd", "patch": "@@ -11,17 +11,6 @@ let ctx!: Ctx;\n export async function activate(context: vscode.ExtensionContext) {\n     ctx = new Ctx(context);\n \n-    // Note: we try to start the server before we register various commands, so\n-    // that it registers its `onDidChangeDocument` handler before us.\n-    //\n-    // This a horribly, horribly wrong way to deal with this problem.\n-    try {\n-        await ctx.restartServer();\n-    } catch (e) {\n-        vscode.window.showErrorMessage(e.message);\n-    }\n-\n-\n     // Commands which invokes manually via command pallet, shortcut, etc.\n     ctx.registerCommand('analyzerStatus', commands.analyzerStatus);\n     ctx.registerCommand('collectGarbage', commands.collectGarbage);\n@@ -42,7 +31,17 @@ export async function activate(context: vscode.ExtensionContext) {\n         ctx.overrideCommand('type', commands.onEnter);\n     }\n     activateStatusDisplay(ctx);\n+\n     activateHighlighting(ctx);\n+    // Note: we try to start the server before we activate type hints so that it\n+    // registers its `onDidChangeDocument` handler before us.\n+    //\n+    // This a horribly, horribly wrong way to deal with this problem.\n+    try {\n+        await ctx.restartServer();\n+    } catch (e) {\n+        vscode.window.showErrorMessage(e.message);\n+    }\n     activateInlayHints(ctx);\n }\n "}, {"sha": "371a2f3bb01c8921562480e740981ea8f664ed4a", "filename": "editors/code/src/status_display.ts", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef24721640c4722ce47d491a6bf5dd0760da57bd/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ef24721640c4722ce47d491a6bf5dd0760da57bd/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fstatus_display.ts?ref=ef24721640c4722ce47d491a6bf5dd0760da57bd", "patch": "@@ -36,13 +36,9 @@ class StatusDisplay implements vscode.Disposable {\n             this.timer ||\n             setInterval(() => {\n                 if (this.packageName) {\n-                    this.statusBarItem!.text = `cargo ${this.command} [${\n-                        this.packageName\n-                        }] ${this.frame()}`;\n+                    this.statusBarItem!.text = `${this.frame()} cargo ${this.command} [${this.packageName}]`;\n                 } else {\n-                    this.statusBarItem!.text = `cargo ${\n-                        this.command\n-                        } ${this.frame()}`;\n+                    this.statusBarItem!.text = `${this.frame()} cargo ${this.command}`;\n                 }\n             }, 300);\n "}]}