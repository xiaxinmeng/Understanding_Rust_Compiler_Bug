{"sha": "76188b6830897a875a1289809c12b5c5d69bb7ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MTg4YjY4MzA4OTdhODc1YTEyODk4MDljMTJiNWM1ZDY5YmI3ZWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-27T16:03:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-27T16:03:01Z"}, "message": "Auto merge of #80315 - tmiasko:ignore-proc-macros, r=Mark-Simulacrum\n\nIgnore proc-macros when assembling rustc libdir\n\nFixes #80294.", "tree": {"sha": "8377b4c17ee3e2a5adb1e5c13660df6421b8d6bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8377b4c17ee3e2a5adb1e5c13660df6421b8d6bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76188b6830897a875a1289809c12b5c5d69bb7ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76188b6830897a875a1289809c12b5c5d69bb7ef", "html_url": "https://github.com/rust-lang/rust/commit/76188b6830897a875a1289809c12b5c5d69bb7ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76188b6830897a875a1289809c12b5c5d69bb7ef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fab3214352e13046c808c066672770df8427d97", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fab3214352e13046c808c066672770df8427d97", "html_url": "https://github.com/rust-lang/rust/commit/2fab3214352e13046c808c066672770df8427d97"}, {"sha": "32716814a2d9a26674503122d0b91aca39e5ab28", "url": "https://api.github.com/repos/rust-lang/rust/commits/32716814a2d9a26674503122d0b91aca39e5ab28", "html_url": "https://github.com/rust-lang/rust/commit/32716814a2d9a26674503122d0b91aca39e5ab28"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "2707a640457b5ef9925b2a8711adc164018e0a84", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/76188b6830897a875a1289809c12b5c5d69bb7ef/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76188b6830897a875a1289809c12b5c5d69bb7ef/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=76188b6830897a875a1289809c12b5c5d69bb7ef", "patch": "@@ -7,6 +7,7 @@\n //! goes along from the output of the previous stage.\n \n use std::borrow::Cow;\n+use std::collections::HashSet;\n use std::env;\n use std::fs;\n use std::io::prelude::*;\n@@ -991,13 +992,26 @@ impl Step for Assemble {\n         builder.info(&format!(\"Assembling stage{} compiler ({})\", stage, host));\n \n         // Link in all dylibs to the libdir\n+        let stamp = librustc_stamp(builder, build_compiler, target_compiler.host);\n+        let proc_macros = builder\n+            .read_stamp_file(&stamp)\n+            .into_iter()\n+            .filter_map(|(path, dependency_type)| {\n+                if dependency_type == DependencyType::Host {\n+                    Some(path.file_name().unwrap().to_owned().into_string().unwrap())\n+                } else {\n+                    None\n+                }\n+            })\n+            .collect::<HashSet<_>>();\n+\n         let sysroot = builder.sysroot(target_compiler);\n         let rustc_libdir = builder.rustc_libdir(target_compiler);\n         t!(fs::create_dir_all(&rustc_libdir));\n         let src_libdir = builder.sysroot_libdir(build_compiler, host);\n         for f in builder.read_dir(&src_libdir) {\n             let filename = f.file_name().into_string().unwrap();\n-            if is_dylib(&filename) {\n+            if is_dylib(&filename) && !proc_macros.contains(&filename) {\n                 builder.copy(&f.path(), &rustc_libdir.join(&filename));\n             }\n         }"}]}