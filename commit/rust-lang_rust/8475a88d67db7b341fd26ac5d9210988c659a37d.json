{"sha": "8475a88d67db7b341fd26ac5d9210988c659a37d", "node_id": "C_kwDOAAsO6NoAKDg0NzVhODhkNjdkYjdiMzQxZmQyNmFjNWQ5MjEwOTg4YzY1OWEzN2Q", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-12T15:44:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-12T15:44:38Z"}, "message": "Rollup merge of #112416 - jieyouxu:issue-112363, r=wesleywiser\n\nFix debug ICE for extern type with where clauses\n\nFixes #112363.", "tree": {"sha": "36e506e1741770a9bb55e49d45c1729b46a123e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36e506e1741770a9bb55e49d45c1729b46a123e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8475a88d67db7b341fd26ac5d9210988c659a37d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkhz1mCRBK7hj4Ov3rIwAAkdwIAIg5RbHZ/uRoAoyyDGVOKhFg\nPCb1r32TQw03T2FtcIIkKvrHuuPrFpAv6ld4EyDEqu5ZNOHXMETkG8X/xIMso9ju\ncywD6zbNDyMPkngSbqXe8tMK850pCxql+0yrn62L2DEAEpEewhoxOZPU0hVEPl+F\nLsm8gf4MKN7GUNOE84/MUuq8J52Qeo5AaDVj1h1UDRfm86DkPNdJZJRj06wXQgBL\nXIdllPIeuL3V5I9OlkKC0Zj8vuzBwrbs90xXs6qi7exXvp+C/SQTfGMTJAPGMCht\n+UHjPRhAMOa3Defw+2u17PwBG5iXVQNDjl+DAfublAnP6eKVCr1NuZBhN3tG0j8=\n=13Gy\n-----END PGP SIGNATURE-----\n", "payload": "tree 36e506e1741770a9bb55e49d45c1729b46a123e3\nparent a5245b5894883d6a7803da96ed0899d2066177d4\nparent 72421bfb0c2a2a0209fbc96bb9a7d332589661d9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686584678 +0200\ncommitter GitHub <noreply@github.com> 1686584678 +0200\n\nRollup merge of #112416 - jieyouxu:issue-112363, r=wesleywiser\n\nFix debug ICE for extern type with where clauses\n\nFixes #112363.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8475a88d67db7b341fd26ac5d9210988c659a37d", "html_url": "https://github.com/rust-lang/rust/commit/8475a88d67db7b341fd26ac5d9210988c659a37d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8475a88d67db7b341fd26ac5d9210988c659a37d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5245b5894883d6a7803da96ed0899d2066177d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5245b5894883d6a7803da96ed0899d2066177d4", "html_url": "https://github.com/rust-lang/rust/commit/a5245b5894883d6a7803da96ed0899d2066177d4"}, {"sha": "72421bfb0c2a2a0209fbc96bb9a7d332589661d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/72421bfb0c2a2a0209fbc96bb9a7d332589661d9", "html_url": "https://github.com/rust-lang/rust/commit/72421bfb0c2a2a0209fbc96bb9a7d332589661d9"}], "stats": {"total": 91, "additions": 85, "deletions": 6}, "files": [{"sha": "a0979bbda54521a1c6c609539d6a21d412ff10a0", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8475a88d67db7b341fd26ac5d9210988c659a37d/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8475a88d67db7b341fd26ac5d9210988c659a37d/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=8475a88d67db7b341fd26ac5d9210988c659a37d", "patch": "@@ -364,7 +364,12 @@ impl<'a> AstValidator<'a> {\n         self.err_handler().emit_err(errors::BoundInContext { span, ctx });\n     }\n \n-    fn check_foreign_ty_genericless(&self, generics: &Generics, where_span: Span) {\n+    fn check_foreign_ty_genericless(\n+        &self,\n+        generics: &Generics,\n+        before_where_clause: &TyAliasWhereClause,\n+        after_where_clause: &TyAliasWhereClause,\n+    ) {\n         let cannot_have = |span, descr, remove_descr| {\n             self.err_handler().emit_err(errors::ExternTypesCannotHave {\n                 span,\n@@ -378,9 +383,14 @@ impl<'a> AstValidator<'a> {\n             cannot_have(generics.span, \"generic parameters\", \"generic parameters\");\n         }\n \n-        if !generics.where_clause.predicates.is_empty() {\n-            cannot_have(where_span, \"`where` clauses\", \"`where` clause\");\n-        }\n+        let check_where_clause = |where_clause: &TyAliasWhereClause| {\n+            if let TyAliasWhereClause(true, where_clause_span) = where_clause {\n+                cannot_have(*where_clause_span, \"`where` clauses\", \"`where` clause\");\n+            }\n+        };\n+\n+        check_where_clause(before_where_clause);\n+        check_where_clause(after_where_clause);\n     }\n \n     fn check_foreign_kind_bodyless(&self, ident: Ident, kind: &str, body: Option<Span>) {\n@@ -1039,7 +1049,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 self.check_defaultness(fi.span, *defaultness);\n                 self.check_foreign_kind_bodyless(fi.ident, \"type\", ty.as_ref().map(|b| b.span));\n                 self.check_type_no_bounds(bounds, \"`extern` blocks\");\n-                self.check_foreign_ty_genericless(generics, where_clauses.0.1);\n+                self.check_foreign_ty_genericless(generics, &where_clauses.0, &where_clauses.1);\n                 self.check_foreign_item_ascii_only(fi.ident);\n             }\n             ForeignItemKind::Static(_, _, body) => {"}, {"sha": "17e08f511d71fab9076950049dddc32b95acf1c0", "filename": "tests/ui/extern/issue-112363-extern-item-where-clauses-debug-ice.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fextern%2Fissue-112363-extern-item-where-clauses-debug-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fextern%2Fissue-112363-extern-item-where-clauses-debug-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextern%2Fissue-112363-extern-item-where-clauses-debug-ice.rs?ref=8475a88d67db7b341fd26ac5d9210988c659a37d", "patch": "@@ -0,0 +1,10 @@\n+extern \"C\" {\n+    type Item = [T] where [T]: Sized;\n+    //~^ incorrect `type` inside `extern` block\n+    //~| `type`s inside `extern` blocks cannot have `where` clauses\n+    //~| cannot find type `T` in this scope\n+    //~| cannot find type `T` in this scope\n+    //~| extern types are experimental\n+}\n+\n+fn main() {}"}, {"sha": "bdc6755038aa487ccfa0adf08f919e5d5db09743", "filename": "tests/ui/extern/issue-112363-extern-item-where-clauses-debug-ice.stderr", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fextern%2Fissue-112363-extern-item-where-clauses-debug-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fextern%2Fissue-112363-extern-item-where-clauses-debug-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextern%2Fissue-112363-extern-item-where-clauses-debug-ice.stderr?ref=8475a88d67db7b341fd26ac5d9210988c659a37d", "patch": "@@ -0,0 +1,47 @@\n+error: incorrect `type` inside `extern` block\n+  --> $DIR/issue-112363-extern-item-where-clauses-debug-ice.rs:2:10\n+   |\n+LL | extern \"C\" {\n+   | ---------- `extern` blocks define existing foreign types and types inside of them cannot have a body\n+LL |     type Item = [T] where [T]: Sized;\n+   |          ^^^^   --- the invalid body\n+   |          |\n+   |          cannot have a body\n+   |\n+   = note: for more information, visit https://doc.rust-lang.org/std/keyword.extern.html\n+\n+error: `type`s inside `extern` blocks cannot have `where` clauses\n+  --> $DIR/issue-112363-extern-item-where-clauses-debug-ice.rs:2:21\n+   |\n+LL | extern \"C\" {\n+   | ---------- `extern` block begins here\n+LL |     type Item = [T] where [T]: Sized;\n+   |                     ^^^^^^^^^^^^^^^^ help: remove the `where` clause\n+   |\n+   = note: for more information, visit https://doc.rust-lang.org/std/keyword.extern.html\n+\n+error[E0412]: cannot find type `T` in this scope\n+  --> $DIR/issue-112363-extern-item-where-clauses-debug-ice.rs:2:28\n+   |\n+LL |     type Item = [T] where [T]: Sized;\n+   |                            ^ not found in this scope\n+\n+error[E0412]: cannot find type `T` in this scope\n+  --> $DIR/issue-112363-extern-item-where-clauses-debug-ice.rs:2:18\n+   |\n+LL |     type Item = [T] where [T]: Sized;\n+   |                  ^ not found in this scope\n+\n+error[E0658]: extern types are experimental\n+  --> $DIR/issue-112363-extern-item-where-clauses-debug-ice.rs:2:5\n+   |\n+LL |     type Item = [T] where [T]: Sized;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #43467 <https://github.com/rust-lang/rust/issues/43467> for more information\n+   = help: add `#![feature(extern_types)]` to the crate attributes to enable\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors have detailed explanations: E0412, E0658.\n+For more information about an error, try `rustc --explain E0412`."}, {"sha": "4d30086e7653627125c6c75f3f458c493f6d7f82", "filename": "tests/ui/parser/foreign-ty-semantic-fail.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fparser%2Fforeign-ty-semantic-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fparser%2Fforeign-ty-semantic-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fforeign-ty-semantic-fail.rs?ref=8475a88d67db7b341fd26ac5d9210988c659a37d", "patch": "@@ -15,4 +15,5 @@ extern \"C\" {\n     //~^ ERROR incorrect `type` inside `extern` block\n \n     type E: where;\n+    //~^ ERROR `type`s inside `extern` blocks cannot have `where` clauses\n }"}, {"sha": "2b400dfea3bfae5b99a80a7248247fdb02f06c26", "filename": "tests/ui/parser/foreign-ty-semantic-fail.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fparser%2Fforeign-ty-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8475a88d67db7b341fd26ac5d9210988c659a37d/tests%2Fui%2Fparser%2Fforeign-ty-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fforeign-ty-semantic-fail.stderr?ref=8475a88d67db7b341fd26ac5d9210988c659a37d", "patch": "@@ -61,5 +61,16 @@ LL |     type D = u8;\n    |\n    = note: for more information, visit https://doc.rust-lang.org/std/keyword.extern.html\n \n-error: aborting due to 6 previous errors\n+error: `type`s inside `extern` blocks cannot have `where` clauses\n+  --> $DIR/foreign-ty-semantic-fail.rs:17:13\n+   |\n+LL | extern \"C\" {\n+   | ---------- `extern` block begins here\n+...\n+LL |     type E: where;\n+   |             ^^^^^ help: remove the `where` clause\n+   |\n+   = note: for more information, visit https://doc.rust-lang.org/std/keyword.extern.html\n+\n+error: aborting due to 7 previous errors\n "}]}