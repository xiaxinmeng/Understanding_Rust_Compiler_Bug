{"sha": "5d4063083bc366d1423572855f6320bb964d2a22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNDA2MzA4M2JjMzY2ZDE0MjM1NzI4NTVmNjMyMGJiOTY0ZDJhMjI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-21T21:49:55Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-21T21:50:12Z"}, "message": "trie: make impl pub", "tree": {"sha": "64867ad9a60f652c563364e30d6b307d9089f812", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64867ad9a60f652c563364e30d6b307d9089f812"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d4063083bc366d1423572855f6320bb964d2a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4063083bc366d1423572855f6320bb964d2a22", "html_url": "https://github.com/rust-lang/rust/commit/5d4063083bc366d1423572855f6320bb964d2a22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d4063083bc366d1423572855f6320bb964d2a22/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9814d0d4128b07d4c40dc721c977f9216fd55e91", "url": "https://api.github.com/repos/rust-lang/rust/commits/9814d0d4128b07d4c40dc721c977f9216fd55e91", "html_url": "https://github.com/rust-lang/rust/commit/9814d0d4128b07d4c40dc721c977f9216fd55e91"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "3b9d3ad4b7313b2d54a3997361f553a8c14f6879", "filename": "src/libcore/trie.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d4063083bc366d1423572855f6320bb964d2a22/src%2Flibcore%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d4063083bc366d1423572855f6320bb964d2a22/src%2Flibcore%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftrie.rs?ref=5d4063083bc366d1423572855f6320bb964d2a22", "patch": "@@ -136,15 +136,13 @@ impl<T> Map<uint, T> for TrieMap<T> {\n     }\n }\n \n-impl<T> TrieMap<T> {\n+pub impl<T> TrieMap<T> {\n     /// Create an empty TrieMap\n     #[inline(always)]\n     static pure fn new() -> TrieMap<T> {\n         TrieMap{root: TrieNode::new(), length: 0}\n     }\n-}\n \n-impl<T> TrieMap<T> {\n     /// Visit all keys in reverse order\n     #[inline(always)]\n     pure fn each_key_reverse(&self, f: &fn(&uint) -> bool) {"}]}