{"sha": "d65ab29e2e67bfc329c606923130d6bf5a518800", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NWFiMjllMmU2N2JmYzMyOWM2MDY5MjMxMzBkNmJmNWE1MTg4MDA=", "commit": {"author": {"name": "twetzel59", "email": "twetzel59@gmail.com", "date": "2021-07-24T19:54:58Z"}, "committer": {"name": "twetzel59", "email": "twetzel59@gmail.com", "date": "2021-07-24T19:54:58Z"}, "message": "Remove unnecessary condition in Barrier::wait()", "tree": {"sha": "257b4bacbd1fa659bc488209ad0d9a8cd6a8cc38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/257b4bacbd1fa659bc488209ad0d9a8cd6a8cc38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d65ab29e2e67bfc329c606923130d6bf5a518800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d65ab29e2e67bfc329c606923130d6bf5a518800", "html_url": "https://github.com/rust-lang/rust/commit/d65ab29e2e67bfc329c606923130d6bf5a518800", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d65ab29e2e67bfc329c606923130d6bf5a518800/comments", "author": {"login": "twetzel59", "id": 27702327, "node_id": "MDQ6VXNlcjI3NzAyMzI3", "avatar_url": "https://avatars.githubusercontent.com/u/27702327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twetzel59", "html_url": "https://github.com/twetzel59", "followers_url": "https://api.github.com/users/twetzel59/followers", "following_url": "https://api.github.com/users/twetzel59/following{/other_user}", "gists_url": "https://api.github.com/users/twetzel59/gists{/gist_id}", "starred_url": "https://api.github.com/users/twetzel59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twetzel59/subscriptions", "organizations_url": "https://api.github.com/users/twetzel59/orgs", "repos_url": "https://api.github.com/users/twetzel59/repos", "events_url": "https://api.github.com/users/twetzel59/events{/privacy}", "received_events_url": "https://api.github.com/users/twetzel59/received_events", "type": "User", "site_admin": false}, "committer": {"login": "twetzel59", "id": 27702327, "node_id": "MDQ6VXNlcjI3NzAyMzI3", "avatar_url": "https://avatars.githubusercontent.com/u/27702327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twetzel59", "html_url": "https://github.com/twetzel59", "followers_url": "https://api.github.com/users/twetzel59/followers", "following_url": "https://api.github.com/users/twetzel59/following{/other_user}", "gists_url": "https://api.github.com/users/twetzel59/gists{/gist_id}", "starred_url": "https://api.github.com/users/twetzel59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twetzel59/subscriptions", "organizations_url": "https://api.github.com/users/twetzel59/orgs", "repos_url": "https://api.github.com/users/twetzel59/repos", "events_url": "https://api.github.com/users/twetzel59/events{/privacy}", "received_events_url": "https://api.github.com/users/twetzel59/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18840b0719aa766a1bc49ea2eb5dc2e4cde7da3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/18840b0719aa766a1bc49ea2eb5dc2e4cde7da3f", "html_url": "https://github.com/rust-lang/rust/commit/18840b0719aa766a1bc49ea2eb5dc2e4cde7da3f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bc560806051dc34619e560f61feaaff68bfc8d30", "filename": "library/std/src/sync/barrier.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d65ab29e2e67bfc329c606923130d6bf5a518800/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65ab29e2e67bfc329c606923130d6bf5a518800/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs?ref=d65ab29e2e67bfc329c606923130d6bf5a518800", "patch": "@@ -129,7 +129,7 @@ impl Barrier {\n         if lock.count < self.num_threads {\n             // We need a while loop to guard against spurious wakeups.\n             // https://en.wikipedia.org/wiki/Spurious_wakeup\n-            while local_gen == lock.generation_id && lock.count < self.num_threads {\n+            while local_gen == lock.generation_id {\n                 lock = self.cvar.wait(lock).unwrap();\n             }\n             BarrierWaitResult(false)"}]}