{"sha": "9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNTdmOGY0Y2RjNmQzYTdjNDU0ZDBiMmUzZmZiYWFkOTk3ZjMxNWU=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2013-09-14T20:50:28Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2013-09-14T20:50:28Z"}, "message": "Add SharedPort wrapper around rt::comm::SharedPort\n\nSharedPort implementation was missing in std::comm. Since this module\nalso wraps SharedChan, it makes sense to have SharedPort defined there\nas well.", "tree": {"sha": "7963f4ee0a2302dcecd11887c91ea06f80cfd083", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7963f4ee0a2302dcecd11887c91ea06f80cfd083"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e", "html_url": "https://github.com/rust-lang/rust/commit/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bca015d9ffd94c36fc8e1b4f30727f71e5ce579f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bca015d9ffd94c36fc8e1b4f30727f71e5ce579f", "html_url": "https://github.com/rust-lang/rust/commit/bca015d9ffd94c36fc8e1b4f30727f71e5ce579f"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "ec8314795ac0ea76b195eddd14ec5e9279dcf8c7", "filename": "src/libstd/comm.rs", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e/src%2Flibstd%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e/src%2Flibstd%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm.rs?ref=9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e", "patch": "@@ -66,15 +66,6 @@ pub fn stream<T: Send>() -> (Port<T>, Chan<T>) {\n     (Port { x: p }, Chan { x: c })\n }\n \n-pub struct SharedChan<T> { x: rtcomm::SharedChan<T> }\n-\n-impl<T: Send> SharedChan<T> {\n-    pub fn new(c: Chan<T>) -> SharedChan<T> {\n-        let Chan { x: c } = c;\n-        SharedChan { x: rtcomm::SharedChan::new(c) }\n-    }\n-}\n-\n impl<T: Send> ChanOne<T> {\n     pub fn send(self, val: T) {\n         let ChanOne { x: c } = self;\n@@ -161,6 +152,16 @@ impl<T: Send> Peekable<T> for Port<T> {\n     }\n }\n \n+\n+pub struct SharedChan<T> { x: rtcomm::SharedChan<T> }\n+\n+impl<T: Send> SharedChan<T> {\n+    pub fn new(c: Chan<T>) -> SharedChan<T> {\n+        let Chan { x: c } = c;\n+        SharedChan { x: rtcomm::SharedChan::new(c) }\n+    }\n+}\n+\n impl<T: Send> GenericChan<T> for SharedChan<T> {\n     fn send(&self, val: T) {\n         let &SharedChan { x: ref c } = self;\n@@ -193,3 +194,31 @@ impl<T> Clone for SharedChan<T> {\n         SharedChan { x: c.clone() }\n     }\n }\n+\n+pub struct SharedPort<T> { x: rtcomm::SharedPort<T> }\n+\n+impl<T: Send> SharedPort<T> {\n+    pub fn new(p: Port<T>) -> SharedPort<T> {\n+        let Port { x: p } = p;\n+        SharedPort { x: rtcomm::SharedPort::new(p) }\n+    }\n+}\n+\n+impl<T: Send> GenericPort<T> for SharedPort<T> {\n+    fn recv(&self) -> T {\n+        let &SharedPort { x: ref p } = self;\n+        p.recv()\n+    }\n+\n+    fn try_recv(&self) -> Option<T> {\n+        let &SharedPort { x: ref p } = self;\n+        p.try_recv()\n+    }\n+}\n+\n+impl<T> Clone for SharedPort<T> {\n+    fn clone(&self) -> SharedPort<T> {\n+        let &SharedPort { x: ref p } = self;\n+        SharedPort { x: p.clone() }\n+    }\n+}"}]}