{"sha": "f9c1cfa88910a61171bf09fc21867623439043cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YzFjZmE4ODkxMGE2MTE3MWJmMDlmYzIxODY3NjIzNDM5MDQzY2M=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T04:52:24Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T04:52:30Z"}, "message": "Remove now-useless #[miri_run] attributes.\n\nExcept for `ints.rs`, which is already handled by a pending pull request.", "tree": {"sha": "7e94e77117509335c83be921050bf895eb950a0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e94e77117509335c83be921050bf895eb950a0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9c1cfa88910a61171bf09fc21867623439043cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9c1cfa88910a61171bf09fc21867623439043cc", "html_url": "https://github.com/rust-lang/rust/commit/f9c1cfa88910a61171bf09fc21867623439043cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9c1cfa88910a61171bf09fc21867623439043cc/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ec4f43978a48b844ea3f9e53b822788d3ff394", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ec4f43978a48b844ea3f9e53b822788d3ff394", "html_url": "https://github.com/rust-lang/rust/commit/c6ec4f43978a48b844ea3f9e53b822788d3ff394"}], "stats": {"total": 81, "additions": 26, "deletions": 55}, "files": [{"sha": "e0b2c24c835742bca76e51176ed74840d9a5cf7a", "filename": "tests/run-pass/closures.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fclosures.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,14 +1,9 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n-\n-#[miri_run]\n fn simple() -> i32 {\n     let y = 10;\n     let f = |x| x + y;\n     f(2)\n }\n \n-#[miri_run]\n fn crazy_closure() -> (i32, i32, i32) {\n     fn inner<T: Copy>(t: T) -> (i32, T, T) {\n         struct NonCopy;\n@@ -26,7 +21,7 @@ fn crazy_closure() -> (i32, i32, i32) {\n     inner(10)\n }\n \n-// #[miri_run]\n+// TODO(solson): Implement closure argument adjustment and uncomment this test.\n // fn closure_arg_adjustment_problem() -> i64 {\n //     fn once<F: FnOnce(i64)>(f: F) { f(2); }\n //     let mut y = 1;\n@@ -37,7 +32,7 @@ fn crazy_closure() -> (i32, i32, i32) {\n //     y\n // }\n \n-#[miri_run]\n fn main() {\n     assert_eq!(simple(), 12);\n+    assert_eq!(crazy_closure(), (84, 10, 10));\n }"}, {"sha": "718c8526014200135084e1eb367f52695ba59667", "filename": "tests/run-pass/constants.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fconstants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fconstants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconstants.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,11 +1,9 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n-\n const A: usize = *&5;\n \n-#[miri_run]\n fn foo() -> usize {\n     A\n }\n \n-fn main() {}\n+fn main() {\n+    assert_eq!(foo(), A);\n+}"}, {"sha": "c81db8e8b2354eeac35383ae3255109e37722dbd", "filename": "tests/run-pass/option_box_transmute_ptr.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Foption_box_transmute_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Foption_box_transmute_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Foption_box_transmute_ptr.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,9 +1,4 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n-\n // This tests that the size of Option<Box<i32>> is the same as *const i32.\n-\n-#[miri_run]\n fn option_box_deref() -> i32 {\n     let val = Some(Box::new(42));\n     unsafe {\n@@ -12,4 +7,6 @@ fn option_box_deref() -> i32 {\n     }\n }\n \n-fn main() {}\n+fn main() {\n+    assert_eq!(option_box_deref(), 42);\n+}"}, {"sha": "86bb71a0be5606a8f419ddbdbe7177eaaa13004a", "filename": "tests/run-pass/products.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fproducts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fproducts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fproducts.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,37 +1,28 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n-\n-#[miri_run]\n fn tuple() -> (i16,) {\n     (1,)\n }\n \n-#[miri_run]\n fn tuple_2() -> (i16, i16) {\n     (1, 2)\n }\n \n-#[miri_run]\n fn tuple_5() -> (i16, i16, i16, i16, i16) {\n     (1, 2, 3, 4, 5)\n }\n \n #[derive(Debug, PartialEq)]\n struct Pair { x: i8, y: i8 }\n \n-#[miri_run]\n fn pair() -> Pair {\n     Pair { x: 10, y: 20 }\n }\n \n-#[miri_run]\n fn field_access() -> (i8, i8) {\n     let mut p = Pair { x: 10, y: 20 };\n     p.x += 5;\n     (p.x, p.y)\n }\n \n-#[miri_run]\n fn main() {\n     assert_eq!(tuple(), (1,));\n     assert_eq!(tuple_2(), (1, 2));"}, {"sha": "9570b5b58e82f472ed580c4017110b8ead4412b7", "filename": "tests/run-pass/specialization.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fspecialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fspecialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fspecialization.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,6 +1,3 @@\n-#![feature(custom_attribute, specialization)]\n-#![allow(dead_code, unused_attributes)]\n-\n trait IsUnit {\n     fn is_unit() -> bool;\n }\n@@ -13,12 +10,10 @@ impl IsUnit for () {\n     fn is_unit() -> bool { true }\n }\n \n-#[miri_run]\n fn specialization() -> (bool, bool) {\n     (i32::is_unit(), <()>::is_unit())\n }\n \n-#[miri_run]\n fn main() {\n     assert_eq!(specialization(), (false, true));\n }"}, {"sha": "d5fc80b41f012230d3f36f3fb6fa06865ba12cfa", "filename": "tests/run-pass/strings.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstrings.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,29 +1,27 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n-\n-#[miri_run]\n fn empty() -> &'static str {\n     \"\"\n }\n \n-#[miri_run]\n fn hello() -> &'static str {\n     \"Hello, world!\"\n }\n \n-#[miri_run]\n fn hello_bytes() -> &'static [u8; 13] {\n     b\"Hello, world!\"\n }\n \n-#[miri_run]\n fn hello_bytes_fat() -> &'static [u8] {\n     b\"Hello, world!\"\n }\n \n-#[miri_run]\n fn fat_pointer_on_32_bit() {\n     Some(5).expect(\"foo\");\n }\n \n-fn main() {}\n+fn main() {\n+    assert_eq!(empty(), \"\");\n+    assert_eq!(hello(), \"Hello, world!\");\n+    assert_eq!(hello_bytes(), b\"Hello, world!\");\n+    assert_eq!(hello_bytes_fat(), b\"Hello, world!\");\n+    fat_pointer_on_32_bit(); // Should run without crashing.\n+}"}, {"sha": "f067b29220ce87f2590a9222c22f36e42e615dce", "filename": "tests/run-pass/sums.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fsums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fsums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsums.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,5 +1,5 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n+// FIXME(solson): 32-bit mode doesn't test anything currently.\n+#![cfg_attr(target_pointer_width = \"32\", allow(dead_code))]\n \n #[derive(Debug, PartialEq)]\n enum Unit { Unit(()) } // Force non-C-enum representation."}, {"sha": "891d11520656160d13584d5a4eb14a056e47b71b", "filename": "tests/run-pass/trivial.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Ftrivial.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Ftrivial.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftrivial.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,13 +1,11 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n-\n-#[miri_run]\n fn empty() {}\n \n-#[miri_run]\n fn unit_var() {\n     let x = ();\n     x\n }\n \n-fn main() {}\n+fn main() {\n+    empty();\n+    unit_var();\n+}"}, {"sha": "db98e969306ba62e5528ccf3cbdf8f57d36717a2", "filename": "tests/run-pass/zst.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fzst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c1cfa88910a61171bf09fc21867623439043cc/tests%2Frun-pass%2Fzst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fzst.rs?ref=f9c1cfa88910a61171bf09fc21867623439043cc", "patch": "@@ -1,17 +1,16 @@\n-#![feature(custom_attribute)]\n-#![allow(dead_code, unused_attributes)]\n-\n+#[derive(PartialEq, Debug)]\n struct A;\n \n-#[miri_run]\n fn zst_ret() -> A {\n     A\n }\n \n-#[miri_run]\n fn use_zst() -> A {\n     let a = A;\n     a\n }\n \n-fn main() {}\n+fn main() {\n+    assert_eq!(zst_ret(), A);\n+    assert_eq!(use_zst(), A);\n+}"}]}