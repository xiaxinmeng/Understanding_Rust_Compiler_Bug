{"sha": "f095f802dcd0f5ead14539c3f11985b4a3562912", "node_id": "C_kwDOAAsO6NoAKGYwOTVmODAyZGNkMGY1ZWFkMTQ1MzljM2YxMTk4NWI0YTM1NjI5MTI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-16T15:39:39Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-16T15:54:42Z"}, "message": "Move/rename `lazy::Sync{OnceCell,Lazy}` to `sync::{Once,Lazy}Lock`", "tree": {"sha": "84cf603fea0a7d7bc1cb7181515c9d8c59f1a103", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84cf603fea0a7d7bc1cb7181515c9d8c59f1a103"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f095f802dcd0f5ead14539c3f11985b4a3562912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f095f802dcd0f5ead14539c3f11985b4a3562912", "html_url": "https://github.com/rust-lang/rust/commit/f095f802dcd0f5ead14539c3f11985b4a3562912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f095f802dcd0f5ead14539c3f11985b4a3562912/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd071bf5b2395edced30dfc5197eafb355c49b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd071bf5b2395edced30dfc5197eafb355c49b4d", "html_url": "https://github.com/rust-lang/rust/commit/bd071bf5b2395edced30dfc5197eafb355c49b4d"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "f5c51b9474fcd878cf631441cc03a194d239301b", "filename": "clippy_dev/src/bless.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f095f802dcd0f5ead14539c3f11985b4a3562912/clippy_dev%2Fsrc%2Fbless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f095f802dcd0f5ead14539c3f11985b4a3562912/clippy_dev%2Fsrc%2Fbless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fbless.rs?ref=f095f802dcd0f5ead14539c3f11985b4a3562912", "patch": "@@ -4,12 +4,12 @@\n use crate::cargo_clippy_path;\n use std::ffi::OsStr;\n use std::fs;\n-use std::lazy::SyncLazy;\n use std::path::{Path, PathBuf};\n+use std::sync::LazyLock;\n use walkdir::{DirEntry, WalkDir};\n \n-static CLIPPY_BUILD_TIME: SyncLazy<Option<std::time::SystemTime>> =\n-    SyncLazy::new(|| cargo_clippy_path().metadata().ok()?.modified().ok());\n+static CLIPPY_BUILD_TIME: LazyLock<Option<std::time::SystemTime>> =\n+    LazyLock::new(|| cargo_clippy_path().metadata().ok()?.modified().ok());\n \n /// # Panics\n ///"}, {"sha": "052d9756c51532e7ee34b244dc0a73e1f6e76d9b", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f095f802dcd0f5ead14539c3f11985b4a3562912/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f095f802dcd0f5ead14539c3f11985b4a3562912/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=f095f802dcd0f5ead14539c3f11985b4a3562912", "patch": "@@ -62,7 +62,7 @@ pub use self::hir_utils::{both, count_eq, eq_expr_value, over, SpanlessEq, Spanl\n \n use std::collections::hash_map::Entry;\n use std::hash::BuildHasherDefault;\n-use std::lazy::SyncOnceCell;\n+use std::sync::OnceLock;\n use std::sync::{Mutex, MutexGuard};\n \n use if_chain::if_chain;\n@@ -2078,7 +2078,7 @@ pub fn is_hir_ty_cfg_dependant(cx: &LateContext<'_>, ty: &hir::Ty<'_>) -> bool {\n     false\n }\n \n-static TEST_ITEM_NAMES_CACHE: SyncOnceCell<Mutex<FxHashMap<LocalDefId, Vec<Symbol>>>> = SyncOnceCell::new();\n+static TEST_ITEM_NAMES_CACHE: OnceLock<Mutex<FxHashMap<LocalDefId, Vec<Symbol>>>> = OnceLock::new();\n \n fn with_test_item_names<'tcx>(tcx: TyCtxt<'tcx>, module: LocalDefId, f: impl Fn(&[Symbol]) -> bool) -> bool {\n     let cache = TEST_ITEM_NAMES_CACHE.get_or_init(|| Mutex::new(FxHashMap::default()));"}, {"sha": "67467f89b475fe4bda8d2e7be90dbf4b1cd84c10", "filename": "src/driver.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f095f802dcd0f5ead14539c3f11985b4a3562912/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f095f802dcd0f5ead14539c3f11985b4a3562912/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=f095f802dcd0f5ead14539c3f11985b4a3562912", "patch": "@@ -21,11 +21,11 @@ use rustc_tools_util::VersionInfo;\n \n use std::borrow::Cow;\n use std::env;\n-use std::lazy::SyncLazy;\n use std::ops::Deref;\n use std::panic;\n use std::path::{Path, PathBuf};\n use std::process::{exit, Command};\n+use std::sync::LazyLock;\n \n /// If a command-line option matches `find_arg`, then apply the predicate `pred` on its value. If\n /// true, then return it. The parameter is assumed to be either `--arg=value` or `--arg value`.\n@@ -152,7 +152,7 @@ You can use tool lints to allow or deny lints from your code, eg.:\n \n const BUG_REPORT_URL: &str = \"https://github.com/rust-lang/rust-clippy/issues/new\";\n \n-static ICE_HOOK: SyncLazy<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send + 'static>> = SyncLazy::new(|| {\n+static ICE_HOOK: LazyLock<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send + 'static>> = LazyLock::new(|| {\n     let hook = panic::take_hook();\n     panic::set_hook(Box::new(|info| report_clippy_ice(info, BUG_REPORT_URL)));\n     hook\n@@ -219,7 +219,7 @@ fn toolchain_path(home: Option<String>, toolchain: Option<String>) -> Option<Pat\n #[allow(clippy::too_many_lines)]\n pub fn main() {\n     rustc_driver::init_rustc_env_logger();\n-    SyncLazy::force(&ICE_HOOK);\n+    LazyLock::force(&ICE_HOOK);\n     exit(rustc_driver::catch_with_exit_code(move || {\n         let mut orig_args: Vec<String> = env::args().collect();\n "}, {"sha": "061cda7e01e5b800c34c8da98d8f20b4aac9e109", "filename": "tests/compile-test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f095f802dcd0f5ead14539c3f11985b4a3562912/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f095f802dcd0f5ead14539c3f11985b4a3562912/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=f095f802dcd0f5ead14539c3f11985b4a3562912", "patch": "@@ -12,8 +12,8 @@ use std::env::{self, remove_var, set_var, var_os};\n use std::ffi::{OsStr, OsString};\n use std::fs;\n use std::io;\n-use std::lazy::SyncLazy;\n use std::path::{Path, PathBuf};\n+use std::sync::LazyLock;\n use test_utils::IS_RUSTC_TEST_SUITE;\n \n mod test_utils;\n@@ -69,7 +69,7 @@ extern crate tokio;\n /// dependencies must be added to Cargo.toml at the project root. Test\n /// dependencies that are not *directly* used by this test module require an\n /// `extern crate` declaration.\n-static EXTERN_FLAGS: SyncLazy<String> = SyncLazy::new(|| {\n+static EXTERN_FLAGS: LazyLock<String> = LazyLock::new(|| {\n     let current_exe_depinfo = {\n         let mut path = env::current_exe().unwrap();\n         path.set_extension(\"d\");"}, {"sha": "ea8c54e08b33806ca6bad8e4420618530d671632", "filename": "tests/test_utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f095f802dcd0f5ead14539c3f11985b4a3562912/tests%2Ftest_utils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f095f802dcd0f5ead14539c3f11985b4a3562912/tests%2Ftest_utils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftest_utils%2Fmod.rs?ref=f095f802dcd0f5ead14539c3f11985b4a3562912", "patch": "@@ -1,9 +1,9 @@\n #![allow(dead_code)] // see https://github.com/rust-lang/rust/issues/46379\n \n-use std::lazy::SyncLazy;\n use std::path::PathBuf;\n+use std::sync::LazyLock;\n \n-pub static CARGO_CLIPPY_PATH: SyncLazy<PathBuf> = SyncLazy::new(|| {\n+pub static CARGO_CLIPPY_PATH: LazyLock<PathBuf> = LazyLock::new(|| {\n     let mut path = std::env::current_exe().unwrap();\n     assert!(path.pop()); // deps\n     path.set_file_name(\"cargo-clippy\");"}]}