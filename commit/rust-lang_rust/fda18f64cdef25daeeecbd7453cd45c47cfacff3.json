{"sha": "fda18f64cdef25daeeecbd7453cd45c47cfacff3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYTE4ZjY0Y2RlZjI1ZGFlZWVjYmQ3NDUzY2Q0NWM0N2NmYWNmZjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-07-12T09:02:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-12T09:02:03Z"}, "message": "Merge pull request #241 from solson/rustc_integration\n\nProduce `ConstInt` from a `def_id` for rustc", "tree": {"sha": "3bd8f3bcb6b13800a5ebb43e73f81d4677fd1382", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd8f3bcb6b13800a5ebb43e73f81d4677fd1382"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fda18f64cdef25daeeecbd7453cd45c47cfacff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fda18f64cdef25daeeecbd7453cd45c47cfacff3", "html_url": "https://github.com/rust-lang/rust/commit/fda18f64cdef25daeeecbd7453cd45c47cfacff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fda18f64cdef25daeeecbd7453cd45c47cfacff3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e362c30ef85d74a00fe699688f88107181f39322", "url": "https://api.github.com/repos/rust-lang/rust/commits/e362c30ef85d74a00fe699688f88107181f39322", "html_url": "https://github.com/rust-lang/rust/commit/e362c30ef85d74a00fe699688f88107181f39322"}, {"sha": "4ce8be9538e332cb650983f14a341b6093ba0c34", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ce8be9538e332cb650983f14a341b6093ba0c34", "html_url": "https://github.com/rust-lang/rust/commit/4ce8be9538e332cb650983f14a341b6093ba0c34"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "ff80f68e2c3ffce3f1d8510922450b5c2316ef77", "filename": "src/const_eval.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/fda18f64cdef25daeeecbd7453cd45c47cfacff3/src%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fda18f64cdef25daeeecbd7453cd45c47cfacff3/src%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconst_eval.rs?ref=fda18f64cdef25daeeecbd7453cd45c47cfacff3", "patch": "@@ -0,0 +1,63 @@\n+use rustc::hir::def_id::DefId;\n+use rustc::traits::Reveal;\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{self, TyCtxt};\n+\n+use error::{EvalError, EvalResult};\n+use lvalue::{Global, GlobalId, Lvalue};\n+use rustc_const_math::ConstInt;\n+use eval_context::{EvalContext, StackPopCleanup};\n+\n+pub fn eval_body_as_integer<'a, 'tcx>(\n+    tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+    (def_id, substs): (DefId, &'tcx Substs<'tcx>),\n+) -> EvalResult<'tcx, ConstInt> {\n+    let limits = ::ResourceLimits::default();\n+    let mut ecx = EvalContext::new(tcx, limits);\n+    let instance = ecx.resolve_associated_const(def_id, substs);\n+    let cid = GlobalId { instance, promoted: None };\n+    if ecx.tcx.has_attr(def_id, \"linkage\") {\n+        return Err(EvalError::NotConst(\"extern global\".to_string()));\n+    }\n+    \n+    let mir = ecx.load_mir(instance.def)?;\n+    if !ecx.globals.contains_key(&cid) {\n+        ecx.globals.insert(cid, Global::uninitialized(mir.return_ty));\n+        let mutable = !mir.return_ty.is_freeze(\n+                ecx.tcx,\n+                ty::ParamEnv::empty(Reveal::All),\n+                mir.span);\n+        let cleanup = StackPopCleanup::MarkStatic(mutable);\n+        let name = ty::tls::with(|tcx| tcx.item_path_str(def_id));\n+        trace!(\"pushing stack frame for global: {}\", name);\n+        ecx.push_stack_frame(\n+            instance,\n+            mir.span,\n+            mir,\n+            Lvalue::Global(cid),\n+            cleanup,\n+        )?;\n+\n+        while ecx.step()? {}\n+    }\n+    let value = ecx.globals.get(&cid).expect(\"global not cached\").value;\n+    let prim = ecx.value_to_primval(value, mir.return_ty)?.to_bytes()?;\n+    use syntax::ast::{IntTy, UintTy};\n+    use rustc::ty::TypeVariants::*;\n+    use rustc_const_math::{ConstIsize, ConstUsize};\n+    Ok(match mir.return_ty.sty {\n+        TyInt(IntTy::I8) => ConstInt::I8(prim as i128 as i8),\n+        TyInt(IntTy::I16) => ConstInt::I16(prim as i128 as i16),\n+        TyInt(IntTy::I32) => ConstInt::I32(prim as i128 as i32),\n+        TyInt(IntTy::I64) => ConstInt::I64(prim as i128 as i64),\n+        TyInt(IntTy::I128) => ConstInt::I128(prim as i128),\n+        TyInt(IntTy::Is) => ConstInt::Isize(ConstIsize::new(prim as i128 as i64, tcx.sess.target.int_type).expect(\"miri should already have errored\")),\n+        TyUint(UintTy::U8) => ConstInt::U8(prim as u8),\n+        TyUint(UintTy::U16) => ConstInt::U16(prim as u16),\n+        TyUint(UintTy::U32) => ConstInt::U32(prim as u32),\n+        TyUint(UintTy::U64) => ConstInt::U64(prim as u64),\n+        TyUint(UintTy::U128) => ConstInt::U128(prim),\n+        TyUint(UintTy::Us) => ConstInt::Usize(ConstUsize::new(prim as u64, tcx.sess.target.uint_type).expect(\"miri should already have errored\")),\n+        _ => return Err(EvalError::NeedsRfc(\"evaluating anything other than isize/usize during typeck\".to_string())),\n+    })\n+}"}, {"sha": "d87a9ab653583da1867eade1c4af1ee8efbd7fe2", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fda18f64cdef25daeeecbd7453cd45c47cfacff3/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fda18f64cdef25daeeecbd7453cd45c47cfacff3/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=fda18f64cdef25daeeecbd7453cd45c47cfacff3", "patch": "@@ -17,6 +17,7 @@ extern crate syntax;\n extern crate byteorder;\n \n mod cast;\n+mod const_eval;\n mod error;\n mod eval_context;\n mod lvalue;\n@@ -56,3 +57,7 @@ pub use value::{\n     PrimValKind,\n     Value,\n };\n+\n+pub use const_eval::{\n+    eval_body_as_integer,\n+};"}]}