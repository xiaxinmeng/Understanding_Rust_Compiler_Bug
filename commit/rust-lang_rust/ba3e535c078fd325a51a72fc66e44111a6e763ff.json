{"sha": "ba3e535c078fd325a51a72fc66e44111a6e763ff", "node_id": "C_kwDOAAsO6NoAKGJhM2U1MzVjMDc4ZmQzMjVhNTFhNzJmYzY2ZTQ0MTExYTZlNzYzZmY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-17T10:43:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-17T10:43:30Z"}, "message": "Rollup merge of #112644 - zica87:nonZeroTypes, r=Mark-Simulacrum\n\nCorrect types in method descriptions of `NonZero*` types\n\n- `$Int`: e.g. i32, usize\n- `$Ty`: e.g. NonZeroI32, NonZeroUsize\n\n|method|current description|after my changes|\n|-|-|-|\n|`saturating_add`|...Return `$Int`::MAX on overflow.|...Return `$Ty`::MAX on overflow.|\n|`checked_abs`|...returns None if self == `$Int`::MIN.|...returns None if self == `$Ty`::MIN.|\n|`checked_neg`|...returning None if self == i32::MIN.|...returning None if self == `$Ty`::MIN.|\n|`saturating_neg`|...returning MAX if self == i32::MIN...|...returning `$Ty`::MAX if self == `$Ty`::MIN...|\n|`saturating_mul`|...Return `$Int`::MAX...|...Return `$Ty`::MAX...|\n|`saturating_pow`|...Return `$Int`::MIN or `$Int`::MAX...|...Return `$Ty`::MIN or `$Ty`::MAX...|\n\n---\n\nFor example:\n\n```rust\npub const fn saturating_neg(self) -> NonZeroI128\n```\n\n- current\n  - Saturating negation. Computes `-self`, returning `MAX` if `self == i32::MIN` instead of overflowing.\n- after my changes\n  - Saturating negation. Computes `-self`, returning `NonZeroI128::MAX` if `self == NonZeroI128::MIN` instead of overflowing.", "tree": {"sha": "7dc32e8faf1ca3dfadb24831f3c9f8a46644d3fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dc32e8faf1ca3dfadb24831f3c9f8a46644d3fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba3e535c078fd325a51a72fc66e44111a6e763ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkjY5SCRBK7hj4Ov3rIwAAl14IABb3mP6kZ0BSMlPFWNZjI3ht\nRq8ThMfPymrqGDOhaDrraaIC+aGvijmN550wJfmT2UIeFLZ5KfXvde+v25rEUpn6\nSnA/rHS9LaUPpwvOKar2L11YVygZt1h8fohD7Xe+hwvunH6d/94GzQG4BLD/7by8\nWlOxgU21IEMBuRYp1Gkm5mViQHftuBuOLnMbr8NPhZeCNRqFoKQxqsDTHInh/hx4\nsgGdv/UPKAEA+7gRPuPZuGy9me83HA3inLHmbDZ2ados4hphiqOrJMZZ9dclWkV9\nKVmCGuJSsyK2U7em4977hcjqQ7FjcovOvOh5lcJhB5a9R8HTCZkk63w5J87c9h0=\n=0jEI\n-----END PGP SIGNATURE-----\n", "payload": "tree 7dc32e8faf1ca3dfadb24831f3c9f8a46644d3fb\nparent d2120b7d422215c166d64a0290d40d4222480ba7\nparent 88b08582b2781339f30deedffcfc84949d4190a0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686998610 +0200\ncommitter GitHub <noreply@github.com> 1686998610 +0200\n\nRollup merge of #112644 - zica87:nonZeroTypes, r=Mark-Simulacrum\n\nCorrect types in method descriptions of `NonZero*` types\n\n- `$Int`: e.g. i32, usize\n- `$Ty`: e.g. NonZeroI32, NonZeroUsize\n\n|method|current description|after my changes|\n|-|-|-|\n|`saturating_add`|...Return `$Int`::MAX on overflow.|...Return `$Ty`::MAX on overflow.|\n|`checked_abs`|...returns None if self == `$Int`::MIN.|...returns None if self == `$Ty`::MIN.|\n|`checked_neg`|...returning None if self == i32::MIN.|...returning None if self == `$Ty`::MIN.|\n|`saturating_neg`|...returning MAX if self == i32::MIN...|...returning `$Ty`::MAX if self == `$Ty`::MIN...|\n|`saturating_mul`|...Return `$Int`::MAX...|...Return `$Ty`::MAX...|\n|`saturating_pow`|...Return `$Int`::MIN or `$Int`::MAX...|...Return `$Ty`::MIN or `$Ty`::MAX...|\n\n---\n\nFor example:\n\n```rust\npub const fn saturating_neg(self) -> NonZeroI128\n```\n\n- current\n  - Saturating negation. Computes `-self`, returning `MAX` if `self == i32::MIN` instead of overflowing.\n- after my changes\n  - Saturating negation. Computes `-self`, returning `NonZeroI128::MAX` if `self == NonZeroI128::MIN` instead of overflowing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3e535c078fd325a51a72fc66e44111a6e763ff", "html_url": "https://github.com/rust-lang/rust/commit/ba3e535c078fd325a51a72fc66e44111a6e763ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba3e535c078fd325a51a72fc66e44111a6e763ff/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2120b7d422215c166d64a0290d40d4222480ba7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2120b7d422215c166d64a0290d40d4222480ba7", "html_url": "https://github.com/rust-lang/rust/commit/d2120b7d422215c166d64a0290d40d4222480ba7"}, {"sha": "88b08582b2781339f30deedffcfc84949d4190a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/88b08582b2781339f30deedffcfc84949d4190a0", "html_url": "https://github.com/rust-lang/rust/commit/88b08582b2781339f30deedffcfc84949d4190a0"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "5939dedbd1db0db35a1b7e5aaace53903cae3dc1", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ba3e535c078fd325a51a72fc66e44111a6e763ff/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba3e535c078fd325a51a72fc66e44111a6e763ff/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=ba3e535c078fd325a51a72fc66e44111a6e763ff", "patch": "@@ -348,7 +348,7 @@ macro_rules! nonzero_unsigned_operations {\n                 }\n \n                 /// Adds an unsigned integer to a non-zero value.\n-                #[doc = concat!(\"Return [`\", stringify!($Int), \"::MAX`] on overflow.\")]\n+                #[doc = concat!(\"Return [`\", stringify!($Ty), \"::MAX`] on overflow.\")]\n                 ///\n                 /// # Examples\n                 ///\n@@ -579,7 +579,7 @@ macro_rules! nonzero_signed_operations {\n \n                 /// Checked absolute value.\n                 /// Checks for overflow and returns [`None`] if\n-                #[doc = concat!(\"`self == \", stringify!($Int), \"::MIN`.\")]\n+                #[doc = concat!(\"`self == \", stringify!($Ty), \"::MIN`.\")]\n                 /// The result cannot be zero.\n                 ///\n                 /// # Example\n@@ -800,7 +800,8 @@ macro_rules! nonzero_signed_operations {\n                     self.get().is_negative()\n                 }\n \n-                /// Checked negation. Computes `-self`, returning `None` if `self == i32::MIN`.\n+                /// Checked negation. Computes `-self`,\n+                #[doc = concat!(\"returning `None` if `self == \", stringify!($Ty), \"::MIN`.\")]\n                 ///\n                 /// # Example\n                 ///\n@@ -859,8 +860,10 @@ macro_rules! nonzero_signed_operations {\n                     ((unsafe { $Ty::new_unchecked(result) }), overflow)\n                 }\n \n-                /// Saturating negation. Computes `-self`, returning `MAX` if\n-                /// `self == i32::MIN` instead of overflowing.\n+                /// Saturating negation. Computes `-self`,\n+                #[doc = concat!(\"returning [`\", stringify!($Ty), \"::MAX`]\")]\n+                #[doc = concat!(\"if `self == \", stringify!($Ty), \"::MIN`\")]\n+                /// instead of overflowing.\n                 ///\n                 /// # Example\n                 ///\n@@ -993,7 +996,7 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 }\n \n                 /// Multiplies two non-zero integers together.\n-                #[doc = concat!(\"Return [`\", stringify!($Int), \"::MAX`] on overflow.\")]\n+                #[doc = concat!(\"Return [`\", stringify!($Ty), \"::MAX`] on overflow.\")]\n                 ///\n                 /// # Examples\n                 ///\n@@ -1102,11 +1105,11 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 #[doc = sign_dependent_expr!{\n                     $signedness ?\n                     if signed {\n-                        concat!(\"Return [`\", stringify!($Int), \"::MIN`] \",\n-                                    \"or [`\", stringify!($Int), \"::MAX`] on overflow.\")\n+                        concat!(\"Return [`\", stringify!($Ty), \"::MIN`] \",\n+                                    \"or [`\", stringify!($Ty), \"::MAX`] on overflow.\")\n                     }\n                     if unsigned {\n-                        concat!(\"Return [`\", stringify!($Int), \"::MAX`] on overflow.\")\n+                        concat!(\"Return [`\", stringify!($Ty), \"::MAX`] on overflow.\")\n                     }\n                 }]\n                 ///"}]}