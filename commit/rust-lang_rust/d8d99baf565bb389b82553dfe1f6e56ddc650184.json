{"sha": "d8d99baf565bb389b82553dfe1f6e56ddc650184", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZDk5YmFmNTY1YmIzODliODI1NTNkZmUxZjZlNTZkZGM2NTAxODQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-20T00:31:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-20T00:31:13Z"}, "message": "Auto merge of #62727 - SimonSapin:plugins-tls-dylib, r=petrochenkov\n\nDeprecate using rustc_plugin without the rustc_driver dylib.\n\nCC https://github.com/rust-lang/rust/pull/59800, https://github.com/rust-lang/rust/commit/7198687bb2df13a3298ef1e8f594753073d6b9e8\n\nFix https://github.com/rust-lang/rust/issues/62717", "tree": {"sha": "78e3762945cb52d1c5c0f4cd08920447041906f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78e3762945cb52d1c5c0f4cd08920447041906f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8d99baf565bb389b82553dfe1f6e56ddc650184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d99baf565bb389b82553dfe1f6e56ddc650184", "html_url": "https://github.com/rust-lang/rust/commit/d8d99baf565bb389b82553dfe1f6e56ddc650184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8d99baf565bb389b82553dfe1f6e56ddc650184/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1b08dd26036e14f061b99b20cd6f169e29046f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1b08dd26036e14f061b99b20cd6f169e29046f3", "html_url": "https://github.com/rust-lang/rust/commit/c1b08dd26036e14f061b99b20cd6f169e29046f3"}, {"sha": "d0bbc6062da0258b397844357bea5a3be1b2271d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bbc6062da0258b397844357bea5a3be1b2271d", "html_url": "https://github.com/rust-lang/rust/commit/d0bbc6062da0258b397844357bea5a3be1b2271d"}], "stats": {"total": 93, "additions": 52, "deletions": 41}, "files": [{"sha": "9e7dd54e13532fe96db18df57c494c7d5d71236e", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -3189,6 +3189,7 @@ dependencies = [\n  \"rustc_interface\",\n  \"rustc_metadata\",\n  \"rustc_mir\",\n+ \"rustc_plugin_impl\",\n  \"rustc_save_analysis\",\n  \"rustc_target\",\n  \"serialize\",\n@@ -3246,7 +3247,7 @@ dependencies = [\n  \"rustc_metadata\",\n  \"rustc_mir\",\n  \"rustc_passes\",\n- \"rustc_plugin\",\n+ \"rustc_plugin_impl\",\n  \"rustc_privacy\",\n  \"rustc_resolve\",\n  \"rustc_traits\",\n@@ -3372,7 +3373,7 @@ dependencies = [\n ]\n \n [[package]]\n-name = \"rustc_plugin\"\n+name = \"rustc_plugin_impl\"\n version = \"0.0.0\"\n dependencies = [\n  \"rustc\","}, {"sha": "dfd8e9db3c5c9cacb236c7d1cacc84791649920f", "filename": "src/doc/rustc-ux-guidelines.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Fdoc%2Frustc-ux-guidelines.md", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Fdoc%2Frustc-ux-guidelines.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-ux-guidelines.md?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -70,7 +70,7 @@ for details on how to format and write long error codes.\n   [librustc_privacy](https://github.com/rust-lang/rust/blob/master/src/librustc_privacy/error_codes.rs),\n   [librustc_resolve](https://github.com/rust-lang/rust/blob/master/src/librustc_resolve/error_codes.rs),\n   [librustc_codegen_llvm](https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/error_codes.rs),\n-  [librustc_plugin](https://github.com/rust-lang/rust/blob/master/src/librustc_plugin/error_codes.rs),\n+  [librustc_plugin_impl](https://github.com/rust-lang/rust/blob/master/src/librustc_plugin/error_codes.rs),\n   [librustc_typeck](https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/error_codes.rs).\n * Explanations have full markdown support. Use it, especially to highlight\n code with backticks."}, {"sha": "53e8393ec52e462a8a7d1bbcae839dbd91b4d3c1", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -18,7 +18,7 @@ extend the compiler's behavior with new syntax extensions, lint checks, etc.\n A plugin is a dynamic library crate with a designated *registrar* function that\n registers extensions with `rustc`. Other crates can load these extensions using\n the crate attribute `#![plugin(...)]`.  See the\n-`rustc_plugin` documentation for more about the\n+`rustc_driver::plugin` documentation for more about the\n mechanics of defining and loading a plugin.\n \n If present, arguments passed as `#![plugin(foo(... args ...))]` are not\n@@ -54,13 +54,13 @@ that implements Roman numeral integer literals.\n extern crate syntax;\n extern crate syntax_pos;\n extern crate rustc;\n-extern crate rustc_plugin;\n+extern crate rustc_driver;\n \n use syntax::parse::token::{self, Token};\n use syntax::tokenstream::TokenTree;\n use syntax::ext::base::{ExtCtxt, MacResult, DummyResult, MacEager};\n use syntax_pos::Span;\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n fn expand_rn(cx: &mut ExtCtxt, sp: Span, args: &[TokenTree])\n         -> Box<dyn MacResult + 'static> {\n@@ -180,11 +180,11 @@ extern crate syntax;\n // Load rustc as a plugin to get macros\n #[macro_use]\n extern crate rustc;\n-extern crate rustc_plugin;\n+extern crate rustc_driver;\n \n use rustc::lint::{EarlyContext, LintContext, LintPass, EarlyLintPass,\n                   EarlyLintPassObject, LintArray};\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n use syntax::ast;\n \n declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");"}, {"sha": "f7a423092acbd52f602aa2dd42bfeb609b2022f0", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -20,6 +20,7 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n rustc_mir = { path = \"../librustc_mir\" }\n+rustc_plugin_impl = { path = \"../librustc_plugin\" }\n rustc_save_analysis = { path = \"../librustc_save_analysis\" }\n rustc_codegen_utils = { path = \"../librustc_codegen_utils\" }\n rustc_interface = { path = \"../librustc_interface\" }"}, {"sha": "b19ea513b7575d0ceb369030894e49ce81c8b044", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -22,6 +22,8 @@ extern crate libc;\n #[macro_use]\n extern crate log;\n \n+pub extern crate rustc_plugin_impl as plugin;\n+\n use pretty::{PpMode, UserIdentifiedItem};\n \n //use rustc_resolve as resolve;"}, {"sha": "16b377d5bccea240fcc991c63f182d00add2758e", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -30,7 +30,7 @@ rustc_passes = { path = \"../librustc_passes\" }\n rustc_typeck = { path = \"../librustc_typeck\" }\n rustc_lint = { path = \"../librustc_lint\" }\n rustc_errors = { path = \"../librustc_errors\" }\n-rustc_plugin = { path = \"../librustc_plugin\" }\n+rustc_plugin = { path = \"../librustc_plugin\", package = \"rustc_plugin_impl\" }\n rustc_privacy = { path = \"../librustc_privacy\" }\n rustc_resolve = { path = \"../librustc_resolve\" }\n tempfile = \"3.0.5\""}, {"sha": "27833161ef23d7b6cf4020828ac08f41042b94e8", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -3,7 +3,7 @@\n //! This currently only contains the definitions and implementations\n //! of most of the lints that `rustc` supports directly, it does not\n //! contain the infrastructure for defining/registering lints. That is\n-//! available in `rustc::lint` and `rustc_plugin` respectively.\n+//! available in `rustc::lint` and `rustc_driver::plugin` respectively.\n //!\n //! ## Note\n //!"}, {"sha": "84a743ed1ad7d0d11752f3237463a4106a401dcf", "filename": "src/librustc_plugin/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2FCargo.toml?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -1,12 +1,12 @@\n [package]\n authors = [\"The Rust Project Developers\"]\n-name = \"rustc_plugin\"\n+name = \"rustc_plugin_impl\"\n version = \"0.0.0\"\n build = false\n edition = \"2018\"\n \n [lib]\n-name = \"rustc_plugin\"\n+name = \"rustc_plugin_impl\"\n path = \"lib.rs\"\n doctest = false\n "}, {"sha": "cc75f7b9ab20d1e8e20a20c3af6cd46539307554", "filename": "src/librustc_plugin/deprecated/Cargo.toml", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2Fdeprecated%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2Fdeprecated%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fdeprecated%2FCargo.toml?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -0,0 +1,14 @@\n+[package]\n+authors = [\"The Rust Project Developers\"]\n+name = \"rustc_plugin\"\n+version = \"0.0.0\"\n+build = false\n+edition = \"2018\"\n+\n+[lib]\n+name = \"rustc_plugin\"\n+path = \"lib.rs\"\n+doctest = false\n+\n+[dependencies]\n+rustc_plugin_impl = { path = \"..\" }"}, {"sha": "5fb18066759c638212258d4dce436f2a67849d3e", "filename": "src/librustc_plugin/deprecated/lib.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2Fdeprecated%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2Fdeprecated%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fdeprecated%2Flib.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -0,0 +1,8 @@\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![feature(staged_api)]\n+#![unstable(feature = \"rustc_plugin\", issue = \"29597\")]\n+#![rustc_deprecated(since = \"1.38.0\", reason = \"\\\n+    import this through `rustc_driver::plugin` instead to make TLS work correctly. \\\n+    See https://github.com/rust-lang/rust/issues/62717\")]\n+\n+pub use rustc_plugin_impl::*;"}, {"sha": "952bc9fff6a712dd436918856740606270066a18", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -16,12 +16,11 @@\n //! #![feature(plugin_registrar)]\n //! #![feature(rustc_private)]\n //!\n-//! extern crate rustc_plugin;\n //! extern crate rustc_driver;\n //! extern crate syntax;\n //! extern crate syntax_pos;\n //!\n-//! use rustc_plugin::Registry;\n+//! use rustc_driver::plugin::Registry;\n //! use syntax::ext::base::{ExtCtxt, MacResult};\n //! use syntax_pos::Span;\n //! use syntax::tokenstream::TokenTree;"}, {"sha": "c053c715248769649c14dffdf83342b47ae3d22e", "filename": "src/test/ui-fulldeps/auxiliary/attr-plugin-test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fattr-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fattr-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fattr-plugin-test.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -4,10 +4,9 @@\n #![feature(rustc_private)]\n \n extern crate rustc_driver;\n-extern crate rustc_plugin;\n extern crate syntax;\n \n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n use syntax::ext::base::SyntaxExtension;\n use syntax::feature_gate::AttributeType;\n use syntax::symbol::Symbol;"}, {"sha": "6fb99b2c98361dec7155763b48e04fefb5cda351", "filename": "src/test/ui-fulldeps/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -3,11 +3,10 @@\n \n #[macro_use]\n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n extern crate syntax;\n \n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n use syntax::attr;\n use syntax::ext::base::*;\n use syntax::feature_gate::AttributeType::Whitelisted;"}, {"sha": "17386d7e1aa5fe46e7cbd559c8cc8eba6412e5b7", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate-rpass.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -4,12 +4,11 @@\n #![feature(box_syntax)]\n \n #[macro_use] extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n extern crate syntax;\n \n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n use rustc::hir;\n use syntax::attr;\n use syntax::symbol::Symbol;"}, {"sha": "000e10392e827118438a665fa41e69b91c47cd65", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -4,12 +4,11 @@\n #![feature(box_syntax)]\n \n #[macro_use] extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n extern crate syntax;\n \n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n use rustc::hir;\n use syntax::attr;\n use syntax::symbol::Symbol;"}, {"sha": "a377b07bd3dd21562cd4ad475d14829568608aac", "filename": "src/test/ui-fulldeps/auxiliary/lint-group-plugin-test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -6,12 +6,11 @@\n // Load rustc as a plugin to get macros.\n #[macro_use]\n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n use rustc::hir;\n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n "}, {"sha": "02675191f785ea7366d24e8b476722b4375ea8f3", "filename": "src/test/ui-fulldeps/auxiliary/lint-plugin-test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -8,12 +8,11 @@ extern crate syntax;\n // Load rustc as a plugin to get macros\n #[macro_use]\n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n use rustc::lint::{EarlyContext, LintContext, LintPass, EarlyLintPass,\n                   EarlyLintPassObject, LintArray};\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n use syntax::ast;\n declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n "}, {"sha": "40f8d490ac87cec58f98939ebd5bda79789b1537", "filename": "src/test/ui-fulldeps/auxiliary/lint-tool-test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -6,11 +6,10 @@ extern crate syntax;\n // Load rustc as a plugin to get macros\n #[macro_use]\n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n use syntax::ast;\n declare_tool_lint!(pub clippy::TEST_LINT, Warn, \"Warn about stuff\");\n declare_tool_lint!("}, {"sha": "2ff1c2e363d50c86ddeb3c3cdf4f529dea716c82", "filename": "src/test/ui-fulldeps/auxiliary/llvm-pass-plugin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fllvm-pass-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fllvm-pass-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fllvm-pass-plugin.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -4,10 +4,9 @@\n #![feature(rustc_private)]\n \n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {"}, {"sha": "89bc9a2b9dbf490ad5b1f3cb117a95ace50051ac", "filename": "src/test/ui-fulldeps/auxiliary/lto-syntax-extension-plugin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flto-syntax-extension-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flto-syntax-extension-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flto-syntax-extension-plugin.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -4,10 +4,9 @@\n #![feature(rustc_private)]\n \n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n #[plugin_registrar]\n pub fn plugin_registrar(_reg: &mut Registry) {}"}, {"sha": "ee82c0adc86042a9ca72a8be0d601e7d2deab4b3", "filename": "src/test/ui-fulldeps/auxiliary/macro-crate-test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmacro-crate-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmacro-crate-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmacro-crate-test.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -6,7 +6,6 @@\n \n extern crate syntax;\n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n extern crate syntax_pos;\n extern crate proc_macro;"}, {"sha": "e5c4f5b8f7a664a57926a67e55f837ef9aa62bde", "filename": "src/test/ui-fulldeps/auxiliary/outlive-expansion-phase.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Foutlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Foutlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Foutlive-expansion-phase.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -4,12 +4,11 @@\n #![feature(box_syntax, rustc_private)]\n \n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n use std::any::Any;\n use std::cell::RefCell;\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n struct Foo {\n     foo: isize"}, {"sha": "5ff24cff23c558aae7bee040c8c298b32e9dcd93", "filename": "src/test/ui-fulldeps/auxiliary/plugin-args.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fplugin-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fplugin-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fplugin-args.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -6,7 +6,6 @@\n extern crate syntax;\n extern crate syntax_pos;\n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n use std::borrow::ToOwned;\n@@ -17,7 +16,7 @@ use syntax::print::pprust;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n use syntax::tokenstream::TokenStream;\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n struct Expander {\n     args: Vec<ast::NestedMetaItem>,"}, {"sha": "1c0de98da56f21faa30af030d0a7bcc05bd9430a", "filename": "src/test/ui-fulldeps/auxiliary/rlib-crate-test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Frlib-crate-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Frlib-crate-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Frlib-crate-test.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -4,10 +4,9 @@\n #![feature(plugin_registrar, rustc_private)]\n \n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n #[plugin_registrar]\n pub fn plugin_registrar(_: &mut Registry) {}"}, {"sha": "027025b72b31bff52fd0bb71d444fc7ce6b47c64", "filename": "src/test/ui-fulldeps/auxiliary/roman-numerals.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Froman-numerals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d99baf565bb389b82553dfe1f6e56ddc650184/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Froman-numerals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Froman-numerals.rs?ref=d8d99baf565bb389b82553dfe1f6e56ddc650184", "patch": "@@ -12,14 +12,13 @@\n extern crate syntax;\n extern crate syntax_pos;\n extern crate rustc;\n-extern crate rustc_plugin;\n extern crate rustc_driver;\n \n use syntax::parse::token::{self, Token};\n use syntax::tokenstream::TokenTree;\n use syntax::ext::base::{ExtCtxt, MacResult, DummyResult, MacEager};\n use syntax_pos::Span;\n-use rustc_plugin::Registry;\n+use rustc_driver::plugin::Registry;\n \n fn expand_rn(cx: &mut ExtCtxt, sp: Span, args: &[TokenTree])\n         -> Box<dyn MacResult + 'static> {"}]}