{"sha": "342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MmRiZDdhYmVmNTMzMGJlOWZiOGI3NWVmZTU1YjlhYzJmYTFhNjU=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-17T19:32:41Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-17T19:34:59Z"}, "message": "Put std in stageN/lib. This avoids windows trying to load stageN/std.ll when\nstageN/runstc.exe is run.", "tree": {"sha": "04ecf625499cb6c147bca449c460898f37d8af9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04ecf625499cb6c147bca449c460898f37d8af9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "html_url": "https://github.com/rust-lang/rust/commit/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/comments", "author": null, "committer": null, "parents": [{"sha": "e43a3755dd062c4e0ed5727bec764e84f2fb7690", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43a3755dd062c4e0ed5727bec764e84f2fb7690", "html_url": "https://github.com/rust-lang/rust/commit/e43a3755dd062c4e0ed5727bec764e84f2fb7690"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "7f02341c43b4b6896be872b826cdda4bd03559ca", "filename": "Makefile.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -149,8 +149,8 @@ COMPILER_INPUTS := $(wildcard $(addprefix $(S)src/comp/, \\\n \n LREQ := rt/$(CFG_RUNTIME) rustllvm/$(CFG_RUSTLLVM)\n SREQ0 := stage0/rustc$(X) $(LREQ) rt/main.o stage0/glue.o stage0/$(CFG_STDLIB)\n-SREQ1 := stage1/rustc$(X) $(LREQ) rt/main.o stage1/glue.o stage1/$(CFG_STDLIB)\n-SREQ2 := stage2/rustc$(X) $(LREQ) rt/main.o stage2/glue.o stage2/$(CFG_STDLIB)\n+SREQ1 := stage1/rustc$(X) $(LREQ) rt/main.o stage1/glue.o stage1/lib/$(CFG_STDLIB)\n+SREQ2 := stage2/rustc$(X) $(LREQ) rt/main.o stage2/glue.o stage2/lib/$(CFG_STDLIB)\n \n \n ######################################################################\n@@ -187,7 +187,7 @@ all: rt/$(CFG_RUNTIME)          \\\n      stage0/rustc$(X)           \\\n      $(GENERATED)               \\\n      $(DOCS)                    \\\n-     stage1/$(CFG_STDLIB)       \\\n+     stage1/lib/$(CFG_STDLIB)   \\\n      stage1/intrinsics.bc       \\\n      stage1/glue.o              \\\n      stage1/rustc$(X)           \\\n@@ -201,15 +201,15 @@ all: rt/$(CFG_RUNTIME)          \\\n      stage0/rustc$(X)           \\\n      $(GENERATED)               \\\n      $(DOCS)                    \\\n-     stage1/$(CFG_STDLIB)       \\\n+     stage1/lib/$(CFG_STDLIB)   \\\n      stage1/intrinsics.bc       \\\n      stage1/glue.o              \\\n      stage1/rustc$(X)           \\\n-     stage2/$(CFG_STDLIB)       \\\n+     stage2/lib/$(CFG_STDLIB)   \\\n      stage2/intrinsics.bc       \\\n      stage2/glue.o              \\\n      stage2/rustc$(X)           \\\n-     stage3/$(CFG_STDLIB)       \\\n+     stage3/lib/$(CFG_STDLIB)   \\\n      stage3/glue.o              \\\n      stage3/intrinsics.bc       \\\n      stage3/rustc$(X)"}, {"sha": "15cef4c408b44d73530cd499f9de842248b402c9", "filename": "mk/clean.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -23,9 +23,9 @@ clean:\n \t$(Q)rm -f $(CRATE_DEPFILES:%.d=%.d.tmp)\n \t$(Q)rm -f $(GENERATED)\n \t$(Q)rm -f stage0/rustc$(X) stage0/$(CFG_STDLIB)\n-\t$(Q)rm -f stage1/rustc$(X) stage1/$(CFG_STDLIB) stage1/glue*\n-\t$(Q)rm -f stage2/rustc$(X) stage2/$(CFG_STDLIB) stage2/glue*\n-\t$(Q)rm -f stage3/rustc$(X) stage3/$(CFG_STDLIB) stage3/glue*\n+\t$(Q)rm -f stage1/rustc$(X) stage1/lib/$(CFG_STDLIB) stage1/glue*\n+\t$(Q)rm -f stage2/rustc$(X) stage2/lib/$(CFG_STDLIB) stage2/glue*\n+\t$(Q)rm -f stage3/rustc$(X) stage3/lib/$(CFG_STDLIB) stage3/glue*\n \t$(Q)rm -f rustllvm/$(CFG_RUSTLLVM) rustllvm/rustllvmbits.a\n \t$(Q)rm -f rt/$(CFG_RUNTIME)\n \t$(Q)rm -f rt/main.o"}, {"sha": "216e5c68d1061702595ba3e942736fce3896b2c1", "filename": "mk/platform.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -82,7 +82,7 @@ ifdef CFG_WINDOWSY\n   CFG_LDPATH :=$(CFG_LDPATH):$(CFG_LLVM_BINDIR)\n   CFG_LDPATH :=$(CFG_LDPATH):$$PATH\n   CFG_RUN_TEST=PATH=\"$(CFG_LDPATH):$(call CFG_TESTLIB,$(1))\" $(1)\n-  CFG_RUN_TARG=PATH=\"$(CFG_BUILD_DIR)/$(1):$(CFG_LDPATH)\" $(2)\n+  CFG_RUN_TARG=PATH=\"$(CFG_BUILD_DIR)/$(1):$(CFG_BUILD_DIR)/$(1)/lib:$(CFG_LDPATH)\" $(2)\n \n   CFG_PATH_MUNGE := $(strip perl -i.bak -p             \\\n                            -e 's@\\\\(\\S)@/\\1@go;'       \\\n@@ -98,7 +98,7 @@ ifdef CFG_UNIXY\n   CFG_PATH_MUNGE := true\n   CFG_EXE_SUFFIX :=\n   CFG_LDPATH :=$(CFG_LDPATH):$(CFG_LLVM_LIBDIR)\n-  CFG_RUN_TARG=$(CFG_LDENV)=$(CFG_BUILD_DIR)/$(1):$(CFG_LDPATH) $(2)\n+  CFG_RUN_TARG=$(CFG_LDENV)=$(CFG_BUILD_DIR)/$(1):$(CFG_BUILD_DIR)/$(1)/lib:$(CFG_LDPATH) $(2)\n   CFG_RUN_TEST=\\\n       $(CFG_LDENV)=$(call CFG_TESTLIB,$(1)):$(CFG_LDPATH) \\\n       $(CFG_VALGRIND) $(1)\n@@ -108,7 +108,7 @@ ifdef CFG_UNIXY\n     CFG_LIB_NAME=$(1).dll\n     CFG_LDPATH :=$(CFG_LDPATH):$(CFG_LLVM_BINDIR)\n     CFG_LDPATH :=$(CFG_LDPATH):$$PATH\n-    CFG_RUN_TARG=PATH=$(CFG_BUILD_DIR)/$(1):$(CFG_LDPATH) $(2)\n+    CFG_RUN_TARG=PATH=$(CFG_BUILD_DIR)/$(1):$(CFG_BUILD_DIR)/$(1)/lib:$(CFG_LDPATH) $(2)\n     CFG_RUN_TEST=PATH=$(CFG_LDPATH):$(call CFG_TESTLIB,$(1)) $(1)\n \n     CFG_INFO := $(info cfg: mingw-cross)"}, {"sha": "aa5a20651385d6927274afed6f57e7975b4d26e1", "filename": "mk/snap.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fsnap.mk", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fsnap.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fsnap.mk?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -1,10 +1,10 @@\n \n-snap-stage1: stage1/rustc$(X) stage1/glue.o stage1/$(CFG_STDLIB)\n+snap-stage1: stage1/rustc$(X) stage1/glue.o stage1/lib/$(CFG_STDLIB)\n \t$(CFG_SRC_DIR)src/etc/make-snapshot.py stage1\n \n-snap-stage2: stage2/rustc$(X) stage2/glue.o stage2/$(CFG_STDLIB)\n+snap-stage2: stage2/rustc$(X) stage2/glue.o stage2/lib/$(CFG_STDLIB)\n \t$(CFG_SRC_DIR)src/etc/make-snapshot.py stage2\n \n-snap-stage3: stage3/rustc$(X) stage3/glue.o stage3/$(CFG_STDLIB)\n+snap-stage3: stage3/rustc$(X) stage3/glue.o stage3/lib/$(CFG_STDLIB)\n \t$(CFG_SRC_DIR)src/etc/make-snapshot.py stage3\n "}, {"sha": "17b1984bc548363c9fa01cb599461fe17013e1c6", "filename": "mk/stage1.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fstage1.mk", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fstage1.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage1.mk?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -1,7 +1,8 @@\n-stage1/$(CFG_STDLIB): $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n+stage1/lib/$(CFG_STDLIB): $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n               stage1/rustc$(X) stage0/$(CFG_STDLIB) stage1/intrinsics.bc \\\n               stage1/glue.o $(LREQ) $(MKFILES)\n \t@$(call E, compile_and_link: $@)\n+\tmkdir -p stage1/lib\n \t$(STAGE1)  --shared -o $@ $<\n \n stage1/glue.o: stage1/rustc$(X) stage0/$(CFG_STDLIB) stage1/intrinsics.bc \\"}, {"sha": "c581ace3b6a5eff88eec45b6578ceb562c8810c1", "filename": "mk/stage2.mk", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fstage2.mk", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fstage2.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage2.mk?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -1,10 +1,11 @@\n-stage2/$(CFG_STDLIB): $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n-              stage2/rustc$(X) stage1/$(CFG_STDLIB) stage2/intrinsics.bc \\\n+stage2/lib/$(CFG_STDLIB): $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n+              stage2/rustc$(X) stage1/lib/$(CFG_STDLIB) stage2/intrinsics.bc \\\n               stage2/glue.o $(LREQ) $(MKFILES)\n \t@$(call E, compile_and_link: $@)\n+\tmkdir -p stage2/lib\n \t$(STAGE2)  --shared -o $@ $<\n \n-stage2/glue.o: stage2/rustc$(X) stage1/$(CFG_STDLIB) stage2/intrinsics.bc \\\n+stage2/glue.o: stage2/rustc$(X) stage1/lib/$(CFG_STDLIB) stage2/intrinsics.bc \\\n                rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t@$(call E, generate: $@)\n \t$(STAGE2) -c -o $@ --glue"}, {"sha": "5d167b8131e032c9e530ffbf3e99ac3c4c2648bf", "filename": "mk/stage3.mk", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fstage3.mk", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/mk%2Fstage3.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage3.mk?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -1,10 +1,11 @@\n-stage3/$(CFG_STDLIB): $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n-              stage3/rustc$(X) stage2/$(CFG_STDLIB) stage3/intrinsics.bc \\\n+stage3/lib/$(CFG_STDLIB): $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n+              stage3/rustc$(X) stage2/lib/$(CFG_STDLIB) stage3/intrinsics.bc \\\n               stage3/glue.o $(LREQ) $(MKFILES)\n \t@$(call E, compile_and_link: $@)\n+\tmkdir -p stage3/lib\n \t$(STAGE3)  --shared -o $@ $<\n \n-stage3/glue.o: stage3/rustc$(X) stage2/$(CFG_STDLIB) stage3/intrinsics.bc \\\n+stage3/glue.o: stage3/rustc$(X) stage2/lib/$(CFG_STDLIB) stage3/intrinsics.bc \\\n                rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t@$(call E, generate: $@)\n \t$(STAGE3) -c -o $@ --glue"}, {"sha": "24539f364febbd5c7ea4813e01abc7f8a1d158e6", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342dbd7abef5330be9fb8b75efe55b9ac2fa1a65/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=342dbd7abef5330be9fb8b75efe55b9ac2fa1a65", "patch": "@@ -205,7 +205,7 @@ fn build_target_config() -> @session::config {\n fn build_session_options(str binary, getopts::match match, str binary_dir) ->\n    @session::options {\n     auto shared = opt_present(match, \"shared\");\n-    auto library_search_paths = [binary_dir];\n+    auto library_search_paths = [binary_dir + \"/lib\"];\n     library_search_paths += getopts::opt_strs(match, \"L\");\n     auto output_type =\n         if (opt_present(match, \"parse-only\")) {\n@@ -395,7 +395,7 @@ fn main(vec[str] args) {\n     if (sopts.output_type == link::output_type_exe) {\n         let str glu = binary_dir + \"/glue.o\";\n         let str main = \"rt/main.o\";\n-        let str stage = \"-L\" + binary_dir;\n+        let str stage = \"-L\" + binary_dir + \"/lib\";\n         let vec[str] gcc_args;\n         let str prog = \"gcc\";\n         // The invocations of gcc share some flags across platforms"}]}