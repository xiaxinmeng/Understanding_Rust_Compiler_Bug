{"sha": "d54bb505d01ec8be7d549892db8500f37040cfe4", "node_id": "C_kwDOAAsO6NoAKGQ1NGJiNTA1ZDAxZWM4YmU3ZDU0OTg5MmRiODUwMGYzNzA0MGNmZTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-14T16:10:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-14T16:10:28Z"}, "message": "Rollup merge of #107619 - stepancheg:hash-set-insert, r=Amanieu\n\nSpecify behavior of HashSet::insert\n\n`HashSet::insert` does not replace the value with equal value.\n\nFixes #107581.", "tree": {"sha": "1d631b34ca155c0c0411bfc7e4d6e676378d99a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d631b34ca155c0c0411bfc7e4d6e676378d99a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d54bb505d01ec8be7d549892db8500f37040cfe4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkieZ0CRBK7hj4Ov3rIwAAm1UIAAR5fN025MPhpZAT8TBswoOU\nEUbB/el2g5nlQBuN1H3E5bKQsztrTPm002tbxgqlBgfErLuuk2CG0GhdEmIRilyo\nMHro96Rd9Bcz/XntlA0GNSpKFludH8g8uV+VSC8A7iKhqjNaMTW7oyD2G0vRKzbX\nqr+DvAihugCoMsTyrJwpNNkEBxVBQMP9q4aNLbd0QgM8RqV9lZD6oROGdUOuMy4N\ns3Owd9efdoZDPzyqSz44lppWKWXELmxwUbKwt4tSvPnr0eHSNNqR5kJeu2pcmdIj\nyYod2kZyVMkIjDirrrS35tqN6GWTG/G8DEQo/aIWdaJVlKSJDSZBzSiKQVy9cdI=\n=8ZAs\n-----END PGP SIGNATURE-----\n", "payload": "tree 1d631b34ca155c0c0411bfc7e4d6e676378d99a4\nparent 4efdb5c0015561bdaa6c00a79090a2080ef2c964\nparent e800d5a0ec18e8296980737665880e97ad97db9a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686759028 +0200\ncommitter GitHub <noreply@github.com> 1686759028 +0200\n\nRollup merge of #107619 - stepancheg:hash-set-insert, r=Amanieu\n\nSpecify behavior of HashSet::insert\n\n`HashSet::insert` does not replace the value with equal value.\n\nFixes #107581.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d54bb505d01ec8be7d549892db8500f37040cfe4", "html_url": "https://github.com/rust-lang/rust/commit/d54bb505d01ec8be7d549892db8500f37040cfe4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d54bb505d01ec8be7d549892db8500f37040cfe4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4efdb5c0015561bdaa6c00a79090a2080ef2c964", "url": "https://api.github.com/repos/rust-lang/rust/commits/4efdb5c0015561bdaa6c00a79090a2080ef2c964", "html_url": "https://github.com/rust-lang/rust/commit/4efdb5c0015561bdaa6c00a79090a2080ef2c964"}, {"sha": "e800d5a0ec18e8296980737665880e97ad97db9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e800d5a0ec18e8296980737665880e97ad97db9a", "html_url": "https://github.com/rust-lang/rust/commit/e800d5a0ec18e8296980737665880e97ad97db9a"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "99620610d1c4e6a08684bf50d68c0cdeceb7ca3d", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d54bb505d01ec8be7d549892db8500f37040cfe4/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54bb505d01ec8be7d549892db8500f37040cfe4/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=d54bb505d01ec8be7d549892db8500f37040cfe4", "patch": "@@ -868,7 +868,9 @@ where\n     /// Returns whether the value was newly inserted. That is:\n     ///\n     /// - If the set did not previously contain this value, `true` is returned.\n-    /// - If the set already contained this value, `false` is returned.\n+    /// - If the set already contained this value, `false` is returned,\n+    ///   and the set is not modified: original value is not replaced,\n+    ///   and the value passed as argument is dropped.\n     ///\n     /// # Examples\n     ///"}, {"sha": "022ca68ffcfbbff625df402629e4d52623916bdc", "filename": "library/std/src/collections/hash/set/tests.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d54bb505d01ec8be7d549892db8500f37040cfe4/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54bb505d01ec8be7d549892db8500f37040cfe4/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs?ref=d54bb505d01ec8be7d549892db8500f37040cfe4", "patch": "@@ -3,6 +3,7 @@ use super::HashSet;\n \n use crate::panic::{catch_unwind, AssertUnwindSafe};\n use crate::sync::atomic::{AtomicU32, Ordering};\n+use crate::sync::Arc;\n \n #[test]\n fn test_zero_capacities() {\n@@ -502,3 +503,22 @@ fn const_with_hasher() {\n     const X: HashSet<(), ()> = HashSet::with_hasher(());\n     assert_eq!(X.len(), 0);\n }\n+\n+#[test]\n+fn test_insert_does_not_overwrite_the_value() {\n+    let first_value = Arc::new(17);\n+    let second_value = Arc::new(17);\n+\n+    let mut set = HashSet::new();\n+    let inserted = set.insert(first_value.clone());\n+    assert!(inserted);\n+\n+    let inserted = set.insert(second_value);\n+    assert!(!inserted);\n+\n+    assert!(\n+        Arc::ptr_eq(set.iter().next().unwrap(), &first_value),\n+        \"Insert must not overwrite the value, so the contained value pointer \\\n+            must be the same as first value pointer we inserted\"\n+    );\n+}"}]}