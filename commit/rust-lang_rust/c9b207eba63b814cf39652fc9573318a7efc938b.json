{"sha": "c9b207eba63b814cf39652fc9573318a7efc938b", "node_id": "C_kwDOAAsO6NoAKGM5YjIwN2ViYTYzYjgxNGNmMzk2NTJmYzk1NzMzMThhN2VmYzkzOGI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T16:49:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T16:49:37Z"}, "message": "extend a comment in readlink", "tree": {"sha": "c5cf1ba128ba302602d8c7efaef36fcf576ef912", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5cf1ba128ba302602d8c7efaef36fcf576ef912"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9b207eba63b814cf39652fc9573318a7efc938b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b207eba63b814cf39652fc9573318a7efc938b", "html_url": "https://github.com/rust-lang/rust/commit/c9b207eba63b814cf39652fc9573318a7efc938b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9b207eba63b814cf39652fc9573318a7efc938b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6a812794f6c2ff46a5a6d1a2991ecc5903b10c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6a812794f6c2ff46a5a6d1a2991ecc5903b10c", "html_url": "https://github.com/rust-lang/rust/commit/7a6a812794f6c2ff46a5a6d1a2991ecc5903b10c"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "c7d7789f03ab7b28ece506788b69a69fb8b83223", "filename": "src/shims/unix/fs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c9b207eba63b814cf39652fc9573318a7efc938b/src%2Fshims%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9b207eba63b814cf39652fc9573318a7efc938b/src%2Fshims%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Ffs.rs?ref=c9b207eba63b814cf39652fc9573318a7efc938b", "patch": "@@ -1639,6 +1639,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let result = std::fs::read_link(pathname);\n         match result {\n             Ok(resolved) => {\n+                // 'readlink' truncates the resolved path if the provided buffer is not large\n+                // enough, and does *not* add a null terminator. That means we cannot use the usual\n+                // `write_path_to_c_str` and have to re-implement parts of it ourselves.\n                 let resolved = this.convert_path_separator(\n                     Cow::Borrowed(resolved.as_ref()),\n                     crate::shims::os_str::PathConversion::HostToTarget,\n@@ -1648,8 +1651,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 if path_bytes.len() > bufsize {\n                     path_bytes = &path_bytes[..bufsize]\n                 }\n-                // 'readlink' truncates the resolved path if\n-                // the provided buffer is not large enough.\n                 this.write_bytes_ptr(buf, path_bytes.iter().copied())?;\n                 Ok(path_bytes.len().try_into().unwrap())\n             }"}]}