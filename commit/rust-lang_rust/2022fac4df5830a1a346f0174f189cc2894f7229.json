{"sha": "2022fac4df5830a1a346f0174f189cc2894f7229", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMjJmYWM0ZGY1ODMwYTFhMzQ2ZjAxNzRmMTg5Y2MyODk0ZjcyMjk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-22T20:40:00Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-23T13:54:30Z"}, "message": "Constants reading or referencing statics is illegal\n\nand some uses of it will be illegal forever\n(e.g. mutable or interior mutable statics)", "tree": {"sha": "dc4c121d1b00bf22be4b5ae9c0b0d47c775de6c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc4c121d1b00bf22be4b5ae9c0b0d47c775de6c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2022fac4df5830a1a346f0174f189cc2894f7229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2022fac4df5830a1a346f0174f189cc2894f7229", "html_url": "https://github.com/rust-lang/rust/commit/2022fac4df5830a1a346f0174f189cc2894f7229", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2022fac4df5830a1a346f0174f189cc2894f7229/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6b9c79d63c3049f1ceb4a0ab0fa101c13de121", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6b9c79d63c3049f1ceb4a0ab0fa101c13de121", "html_url": "https://github.com/rust-lang/rust/commit/ad6b9c79d63c3049f1ceb4a0ab0fa101c13de121"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "4fa4e87e0ffb1f56c27d5a7d6d2f82cc162a0a94", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=2022fac4df5830a1a346f0174f189cc2894f7229", "patch": "@@ -182,6 +182,7 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n #[derive(Clone, Debug)]\n pub enum ConstEvalError {\n     NeedsRfc(String),\n+    ConstAccessesStatic,\n }\n \n impl<'tcx> Into<InterpErrorInfo<'tcx>> for ConstEvalError {\n@@ -201,6 +202,7 @@ impl fmt::Display for ConstEvalError {\n                     msg\n                 )\n             }\n+            ConstAccessesStatic => write!(f, \"constant accesses static\"),\n         }\n     }\n }\n@@ -210,6 +212,7 @@ impl Error for ConstEvalError {\n         use self::ConstEvalError::*;\n         match *self {\n             NeedsRfc(_) => \"this feature needs an rfc before being allowed inside constants\",\n+            ConstAccessesStatic => \"constant accesses static\",\n         }\n     }\n \n@@ -547,9 +550,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n         if memory_extra.can_access_statics {\n             Ok(())\n         } else {\n-            Err(ConstEvalError::NeedsRfc(\n-                \"constants accessing static items\".to_string(),\n-            ).into())\n+            Err(ConstEvalError::ConstAccessesStatic.into())\n         }\n     }\n }"}, {"sha": "8949358e2933338ed8797a7ef6caf08ca5f686f9", "filename": "src/test/ui/consts/const-points-to-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fconsts%2Fconst-points-to-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fconsts%2Fconst-points-to-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-points-to-static.stderr?ref=2022fac4df5830a1a346f0174f189cc2894f7229", "patch": "@@ -8,7 +8,7 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/const-points-to-static.rs:5:1\n    |\n LL | const TEST: &u8 = &MY_STATIC;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \"constants accessing static items\" needs an rfc before being allowed inside constants\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constant accesses static\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n "}, {"sha": "bfaa0f934ade2ee37a69d2e96dbadb21dc1235be", "filename": "src/test/ui/consts/const-prop-read-static-in-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fconsts%2Fconst-prop-read-static-in-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fconsts%2Fconst-prop-read-static-in-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-prop-read-static-in-const.stderr?ref=2022fac4df5830a1a346f0174f189cc2894f7229", "patch": "@@ -10,7 +10,7 @@ error: any use of this value will cause an error\n LL | const TEST: u8 = MY_STATIC;\n    | -----------------^^^^^^^^^-\n    |                  |\n-   |                  \"constants accessing static items\" needs an rfc before being allowed inside constants\n+   |                  constant accesses static\n    |\n    = note: `#[deny(const_err)]` on by default\n "}, {"sha": "7a8c9d44e5a0b324a129d254809f5f083a33cb5b", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr?ref=2022fac4df5830a1a346f0174f189cc2894f7229", "patch": "@@ -42,7 +42,7 @@ LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);\n LL | |     unsafe { &*(&FOO as *const _ as *const usize) }\n LL | |\n LL | | };\n-   | |__^ \"constants accessing static items\" needs an rfc before being allowed inside constants\n+   | |__^ constant accesses static\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n \n@@ -54,7 +54,7 @@ LL | |     static FOO: usize = 0;\n LL | |     &FOO\n LL | |\n LL | | };\n-   | |__^ \"constants accessing static items\" needs an rfc before being allowed inside constants\n+   | |__^ constant accesses static\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n "}, {"sha": "c69145c1fe8336d22369a6ca551db770cdcf557b", "filename": "src/test/ui/issues/issue-52060.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fissues%2Fissue-52060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2022fac4df5830a1a346f0174f189cc2894f7229/src%2Ftest%2Fui%2Fissues%2Fissue-52060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52060.stderr?ref=2022fac4df5830a1a346f0174f189cc2894f7229", "patch": "@@ -8,7 +8,7 @@ error[E0080]: evaluation of constant value failed\n   --> $DIR/issue-52060.rs:4:26\n    |\n LL | static B: [u32; 1] = [0; A.len()];\n-   |                          ^ \"constants accessing static items\" needs an rfc before being allowed inside constants\n+   |                          ^ constant accesses static\n \n error: aborting due to 2 previous errors\n "}]}