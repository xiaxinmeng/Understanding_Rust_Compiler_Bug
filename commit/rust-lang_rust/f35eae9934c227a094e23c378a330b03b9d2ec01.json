{"sha": "f35eae9934c227a094e23c378a330b03b9d2ec01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNWVhZTk5MzRjMjI3YTA5NGUyM2MzNzhhMzMwYjAzYjlkMmVjMDE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-27T21:09:13Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-07T23:31:58Z"}, "message": "Add buffer abstraction", "tree": {"sha": "f66338abfb47cfa7a00bfa0a3f3f8be96c970810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f66338abfb47cfa7a00bfa0a3f3f8be96c970810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f35eae9934c227a094e23c378a330b03b9d2ec01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f35eae9934c227a094e23c378a330b03b9d2ec01", "html_url": "https://github.com/rust-lang/rust/commit/f35eae9934c227a094e23c378a330b03b9d2ec01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f35eae9934c227a094e23c378a330b03b9d2ec01/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a5ff4222e1f217ac14331afd59f82ec4204d12", "url": "https://api.github.com/repos/rust-lang/rust/commits/43a5ff4222e1f217ac14331afd59f82ec4204d12", "html_url": "https://github.com/rust-lang/rust/commit/43a5ff4222e1f217ac14331afd59f82ec4204d12"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "941d2c4acb1a8e35a131ebb7c617fcdcfc566a2b", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/f35eae9934c227a094e23c378a330b03b9d2ec01/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35eae9934c227a094e23c378a330b03b9d2ec01/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=f35eae9934c227a094e23c378a330b03b9d2ec01", "patch": "@@ -18,6 +18,71 @@ use crate::clean::{self, PrimitiveType};\n use crate::html::item_type::ItemType;\n use crate::html::render::{self, cache, CURRENT_DEPTH};\n \n+pub trait Print {\n+    fn print(&self, buffer: &mut Buffer);\n+}\n+\n+#[derive(Debug, Clone)]\n+pub struct Buffer {\n+    for_html: bool,\n+    buffer: String,\n+}\n+\n+impl Buffer {\n+    crate fn empty_from(v: &Buffer) -> Buffer {\n+        Buffer {\n+            for_html: v.for_html,\n+            buffer: String::new(),\n+        }\n+    }\n+\n+    crate fn html() -> Buffer {\n+        Buffer {\n+            for_html: true,\n+            buffer: String::new(),\n+        }\n+    }\n+\n+    crate fn is_empty(&self) -> bool {\n+        self.buffer.is_empty()\n+    }\n+\n+    crate fn into_inner(self) -> String {\n+        self.buffer\n+    }\n+\n+    crate fn insert_str(&mut self, idx: usize, s: &str) {\n+        self.buffer.insert_str(idx, s);\n+    }\n+\n+    crate fn push_str(&mut self, s: &str) {\n+        self.buffer.push_str(s);\n+    }\n+\n+    // Intended for consumption by write! and writeln! (std::fmt) but without\n+    // the fmt::Result return type imposed by fmt::Write (and avoiding the trait\n+    // import).\n+    crate fn write_str(&mut self, s: &str) {\n+        self.buffer.push_str(s);\n+    }\n+\n+    // Intended for consumption by write! and writeln! (std::fmt) but without\n+    // the fmt::Result return type imposed by fmt::Write (and avoiding the trait\n+    // import).\n+    crate fn write_fmt(&mut self, v: fmt::Arguments<'_>) {\n+        use fmt::Write;\n+        self.buffer.write_fmt(v).unwrap();\n+    }\n+\n+    crate fn display<T: fmt::Display>(&mut self, t: T) {\n+        if self.for_html {\n+            write!(self, \"{}\", t);\n+        } else {\n+            write!(self, \"{:#}\", t);\n+        }\n+    }\n+}\n+\n /// Helper to render an optional visibility with a space after it (if the\n /// visibility is preset)\n #[derive(Copy, Clone)]"}]}