{"sha": "4e39e65ad8ecb6419f52a2928c159660af4f611f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMzllNjVhZDhlY2I2NDE5ZjUyYTI5MjhjMTU5NjYwYWY0ZjYxMWY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-02-01T06:34:36Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-02-01T06:34:36Z"}, "message": "Travis: Don't run integration tests on every PR commit\n\nThis does not save Clippy any time but it makes sure that the concurrent\nbuild limit is not reached as quickly for the `rust-lang` Travis\naccount.\n\nI can't create a permalink to the discussion somehow, so here's an\nexcerpt from the Infra channel:\n\n```\n[11:57 PM] pietroalbini: there is a clippy build (20 jobs) and a packed_simd one (42 builders)  and a rustc one which isn't scheduling atm\n[11:58 PM] pietroalbini: I don't think there is a way to prioritize rustc builds in the queue on travis, right?\n[12:22 AM] alexcrichton: pietro: I don't think so no\n[12:22 AM] alexcrichton: If it's a problem we should cull builds on other projects\n[12:22 AM] alexcrichton: The rust repo is the #1 priority\n```\n\nSince the integration tests are rarely failing these days, I think it's\nfine to not run them on every commit.\n\nIf needed, it's also still possible to do a `try` build with `@bors try`.", "tree": {"sha": "738675dcc5119a050d973ee6e3e60ba5669728f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/738675dcc5119a050d973ee6e3e60ba5669728f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e39e65ad8ecb6419f52a2928c159660af4f611f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlxT6kYACgkQtvoGpuDi\nZlsVUxAArgZiJjFWehuDw4QZT6hjd7/HChYWmud6LFVo1jRhsDORmqqqLL1UZLM0\nAbSSLblKEgjSRmm+7yGd4xWYwdp61OA7/rmovzaP/daeUEGxmrzx2JJKd/AbHB6H\n3rSznzuxKccXp9rrt8bKISoDB4LhSijVPXJBVg1QqbZpg0zN47kb10pDpn3ePn/S\nwI7bsmMtTQTDIbTpRwzMdzKxVrwtvwe3WoLT6DreiYxneUNeobibr92AjKP+/Og0\nCXerCjQhhCpLYT/zlDQSjneQjtQz77HQyEYZgyLBzt0pGbquKjxAdUxN5EAz6oip\n35pGe15hypa6zP3kZ9g5K8tyDu6vMAGMhENIriCX0ix4J+buh4iv5317dJkcxxwK\nvQxcJ0tTCbYS+exwiXla7eGVcp1Y/OZ28phykYUFYrlhyCtY1YifJky7binXXycL\nPS6UEQxDM+nATIy8cFrIvMdpiA06XLVTlD4KHywj5xCh5KPkp7HY3HF6Hqxm6yEt\nt2jLoJMBhTuLHlK2x4DrvJvc+uW8Bh/y/zguxCtmxo2AL1D99ASBjfzDZNYs4pqx\n9jJaP0wyBGJcyw72aQbSwYsjs4FMu/x78JIuuHBIM/PX899TcBEtRpWLA+ZUQ00A\nCuKP0NqCDuOo58UEncipWJAChPWezB7f0SCQ3QlTc5KAwk6RhW4=\n=/3gx\n-----END PGP SIGNATURE-----", "payload": "tree 738675dcc5119a050d973ee6e3e60ba5669728f5\nparent 84dca9af66da7e49eda8005509c8dffebefe96a0\nauthor Philipp Hansch <dev@phansch.net> 1549002876 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1549002876 +0100\n\nTravis: Don't run integration tests on every PR commit\n\nThis does not save Clippy any time but it makes sure that the concurrent\nbuild limit is not reached as quickly for the `rust-lang` Travis\naccount.\n\nI can't create a permalink to the discussion somehow, so here's an\nexcerpt from the Infra channel:\n\n```\n[11:57 PM] pietroalbini: there is a clippy build (20 jobs) and a packed_simd one (42 builders)  and a rustc one which isn't scheduling atm\n[11:58 PM] pietroalbini: I don't think there is a way to prioritize rustc builds in the queue on travis, right?\n[12:22 AM] alexcrichton: pietro: I don't think so no\n[12:22 AM] alexcrichton: If it's a problem we should cull builds on other projects\n[12:22 AM] alexcrichton: The rust repo is the #1 priority\n```\n\nSince the integration tests are rarely failing these days, I think it's\nfine to not run them on every commit.\n\nIf needed, it's also still possible to do a `try` build with `@bors try`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e39e65ad8ecb6419f52a2928c159660af4f611f", "html_url": "https://github.com/rust-lang/rust/commit/4e39e65ad8ecb6419f52a2928c159660af4f611f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e39e65ad8ecb6419f52a2928c159660af4f611f/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84dca9af66da7e49eda8005509c8dffebefe96a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/84dca9af66da7e49eda8005509c8dffebefe96a0", "html_url": "https://github.com/rust-lang/rust/commit/84dca9af66da7e49eda8005509c8dffebefe96a0"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "3780f6ece79829840eed4d6aecff42bb8c8e4ea1", "filename": ".travis.yml", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/4e39e65ad8ecb6419f52a2928c159660af4f611f/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4e39e65ad8ecb6419f52a2928c159660af4f611f/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=4e39e65ad8ecb6419f52a2928c159660af4f611f", "patch": "@@ -39,40 +39,48 @@ install:\n matrix:\n   fast_finish: true\n   include:\n+    # Builds that are executed for every PR\n     - os: osx # run base tests on both platforms\n       env: BASE_TESTS=true\n+      if: type = pull_request OR branch IN (auto, try)\n     - os: linux\n       env: BASE_TESTS=true\n+      if: type = pull_request OR branch IN (auto, try)\n     - os: windows\n       env: CARGO_INCREMENTAL=0 BASE_TESTS=true\n+      if: type = pull_request OR branch IN (auto, try)\n+\n+    # Builds that are only executed when a PR is r+ed or a try build is started\n+    # We don't want to run these always because they go towards\n+    # the build limit within the Travis rust-lang account.\n     - env: INTEGRATION=rust-lang/cargo\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-random/rand\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/stdsimd\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang/rustfmt\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/futures-rs\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/failure\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/log\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/chalk\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang/rls\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=chronotope/chrono\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=serde-rs/serde\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=Geal/nom\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=hyperium/hyper\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=bluss/rust-itertools\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n   allow_failures:\n   - os: windows\n     env: CARGO_INCREMENTAL=0 BASE_TESTS=true"}]}