{"sha": "c82a0d7c3c0c0fda158102af7bc5af2823df2f06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MmEwZDdjM2MwYzBmZGExNTgxMDJhZjdiYzVhZjI4MjNkZjJmMDY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-02-12T01:14:49Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-02-12T01:14:49Z"}, "message": "Merge pull request #1811 from killerswan/char_funcs\n\n(core::char) Add is_ascii and is_digit functions", "tree": {"sha": "a97495729b9a9426823ef74ddb0f9ef13f88296f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a97495729b9a9426823ef74ddb0f9ef13f88296f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c82a0d7c3c0c0fda158102af7bc5af2823df2f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c82a0d7c3c0c0fda158102af7bc5af2823df2f06", "html_url": "https://github.com/rust-lang/rust/commit/c82a0d7c3c0c0fda158102af7bc5af2823df2f06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c82a0d7c3c0c0fda158102af7bc5af2823df2f06/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4339307359eaca1ae1fd5de96eec746e96a90564", "url": "https://api.github.com/repos/rust-lang/rust/commits/4339307359eaca1ae1fd5de96eec746e96a90564", "html_url": "https://github.com/rust-lang/rust/commit/4339307359eaca1ae1fd5de96eec746e96a90564"}, {"sha": "0121cd5b0e302746d2cfe1b5524c2909fcc96ccf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0121cd5b0e302746d2cfe1b5524c2909fcc96ccf", "html_url": "https://github.com/rust-lang/rust/commit/0121cd5b0e302746d2cfe1b5524c2909fcc96ccf"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "6f3466fb00b2e565e9e3661edccb3197ff26453b", "filename": "src/libcore/char.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c82a0d7c3c0c0fda158102af7bc5af2823df2f06/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82a0d7c3c0c0fda158102af7bc5af2823df2f06/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=c82a0d7c3c0c0fda158102af7bc5af2823df2f06", "patch": "@@ -37,6 +37,7 @@ export is_alphabetic,\n        is_XID_start, is_XID_continue,\n        is_lowercase, is_uppercase,\n        is_whitespace, is_alphanumeric,\n+       is_ascii, is_digit,\n        to_digit, to_lower, to_upper, maybe_digit, cmp;\n \n import is_alphabetic = unicode::derived_property::Alphabetic;\n@@ -84,6 +85,17 @@ pure fn is_alphanumeric(c: char) -> bool {\n         unicode::general_category::No(c);\n }\n \n+#[doc( brief = \"Indicates whether the character is an ASCII character\" )]\n+pure fn is_ascii(c: char) -> bool {\n+   c - ('\\x7F' & c) == '\\x00'\n+}\n+\n+#[doc( brief = \"Indicates whether the character is numeric (Nd, Nl, or No)\" )]\n+pure fn is_digit(c: char) -> bool {\n+    ret unicode::general_category::Nd(c) ||\n+        unicode::general_category::Nl(c) ||\n+        unicode::general_category::No(c);\n+}\n \n #[doc(\n   brief = \"Convert a char to the corresponding digit. \\\n@@ -221,3 +233,20 @@ fn test_to_upper() {\n     //assert (to_upper('\u00fc') == '\u00dc');\n     assert (to_upper('\u00df') == '\u00df');\n }\n+\n+#[test]\n+fn test_is_ascii() unsafe {\n+   assert str::all(\"banana\", char::is_ascii);\n+   assert ! str::all(\"\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\", char::is_ascii);\n+}\n+\n+#[test]\n+fn test_is_digit() {\n+   assert is_digit('2');\n+   assert is_digit('7');\n+   assert ! is_digit('c');\n+   assert ! is_digit('i');\n+   assert ! is_digit('z');\n+   assert ! is_digit('Q');\n+}\n+"}]}