{"sha": "568d9c5547c275de2b1533bc7dd8d3d018b17bec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2OGQ5YzU1NDdjMjc1ZGUyYjE1MzNiYzdkZDhkM2QwMThiMTdiZWM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-04-29T16:57:58Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-05-06T02:49:34Z"}, "message": "compiletest: Add --target-panic, needs-unwind", "tree": {"sha": "1e44e05da913a706a3c4543c7825c907bae974c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e44e05da913a706a3c4543c7825c907bae974c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/568d9c5547c275de2b1533bc7dd8d3d018b17bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/568d9c5547c275de2b1533bc7dd8d3d018b17bec", "html_url": "https://github.com/rust-lang/rust/commit/568d9c5547c275de2b1533bc7dd8d3d018b17bec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/568d9c5547c275de2b1533bc7dd8d3d018b17bec/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb491ed23937aef876622e4beb68ae95938b3bf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb491ed23937aef876622e4beb68ae95938b3bf9", "html_url": "https://github.com/rust-lang/rust/commit/bb491ed23937aef876622e4beb68ae95938b3bf9"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "09ced203b7931e9f214f44e64c20688f6cb27945", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/568d9c5547c275de2b1533bc7dd8d3d018b17bec/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/568d9c5547c275de2b1533bc7dd8d3d018b17bec/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=568d9c5547c275de2b1533bc7dd8d3d018b17bec", "patch": "@@ -171,6 +171,12 @@ impl fmt::Display for Debugger {\n     }\n }\n \n+#[derive(Clone, Copy, Debug, PartialEq)]\n+pub enum PanicStrategy {\n+    Unwind,\n+    Abort,\n+}\n+\n /// Configuration for compiletest\n #[derive(Debug, Clone)]\n pub struct Config {\n@@ -262,6 +268,10 @@ pub struct Config {\n     /// Flags to pass to the compiler when building for the target\n     pub target_rustcflags: Option<String>,\n \n+    /// What panic strategy the target is built with.  Unwind supports Abort, but\n+    /// not vice versa.\n+    pub target_panic: PanicStrategy,\n+\n     /// Target system to be tested\n     pub target: String,\n "}, {"sha": "d7ddb9437aaa2aff9fdc38019df4aae22c1ae910", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/568d9c5547c275de2b1533bc7dd8d3d018b17bec/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/568d9c5547c275de2b1533bc7dd8d3d018b17bec/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=568d9c5547c275de2b1533bc7dd8d3d018b17bec", "patch": "@@ -7,7 +7,7 @@ use std::path::{Path, PathBuf};\n \n use tracing::*;\n \n-use crate::common::{CompareMode, Config, Debugger, FailMode, Mode, PassMode};\n+use crate::common::{CompareMode, Config, Debugger, FailMode, Mode, PanicStrategy, PassMode};\n use crate::util;\n use crate::{extract_cdb_version, extract_gdb_version};\n \n@@ -111,6 +111,12 @@ impl EarlyProps {\n                     props.ignore = true;\n                 }\n \n+                if config.target_panic == PanicStrategy::Abort\n+                    && config.parse_name_directive(ln, \"needs-unwind\")\n+                {\n+                    props.ignore = true;\n+                }\n+\n                 if config.target == \"wasm32-unknown-unknown\" && config.parse_check_run_results(ln) {\n                     props.ignore = true;\n                 }"}, {"sha": "17e4cfdedc6a774643f623638055cc972655c65c", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/568d9c5547c275de2b1533bc7dd8d3d018b17bec/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/568d9c5547c275de2b1533bc7dd8d3d018b17bec/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=568d9c5547c275de2b1533bc7dd8d3d018b17bec", "patch": "@@ -5,7 +5,9 @@\n \n extern crate test;\n \n-use crate::common::{expected_output_path, output_base_dir, output_relative_path, UI_EXTENSIONS};\n+use crate::common::{\n+    expected_output_path, output_base_dir, output_relative_path, PanicStrategy, UI_EXTENSIONS,\n+};\n use crate::common::{CompareMode, Config, Debugger, Mode, PassMode, Pretty, TestPaths};\n use crate::util::logv;\n use getopts::Options;\n@@ -98,6 +100,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         )\n         .optopt(\"\", \"host-rustcflags\", \"flags to pass to rustc for host\", \"FLAGS\")\n         .optopt(\"\", \"target-rustcflags\", \"flags to pass to rustc for target\", \"FLAGS\")\n+        .optopt(\"\", \"target-panic\", \"what panic strategy the target supports\", \"unwind | abort\")\n         .optflag(\"\", \"verbose\", \"run tests verbosely, showing all output\")\n         .optflag(\n             \"\",\n@@ -238,6 +241,11 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         runtool: matches.opt_str(\"runtool\"),\n         host_rustcflags: matches.opt_str(\"host-rustcflags\"),\n         target_rustcflags: matches.opt_str(\"target-rustcflags\"),\n+        target_panic: match matches.opt_str(\"target-panic\").as_deref() {\n+            Some(\"unwind\") | None => PanicStrategy::Unwind,\n+            Some(\"abort\") => PanicStrategy::Abort,\n+            _ => panic!(\"unknown `--target-panic` option `{}` given\", mode),\n+        },\n         target,\n         host: opt_str2(matches.opt_str(\"host\")),\n         cdb,"}]}