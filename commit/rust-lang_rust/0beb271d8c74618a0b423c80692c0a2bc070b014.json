{"sha": "0beb271d8c74618a0b423c80692c0a2bc070b014", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZWIyNzFkOGM3NDYxOGEwYjQyM2M4MDY5MmMwYTJiYzA3MGIwMTQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-08T19:10:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-11T18:37:55Z"}, "message": "Fix bind to work with boxed arguments with type parameters.\n\nThis still doesn't work with bare fn arguments with type parameters.", "tree": {"sha": "e9fa3947eb38f98daf33f7c6fb4c2c4f98df2268", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9fa3947eb38f98daf33f7c6fb4c2c4f98df2268"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0beb271d8c74618a0b423c80692c0a2bc070b014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0beb271d8c74618a0b423c80692c0a2bc070b014", "html_url": "https://github.com/rust-lang/rust/commit/0beb271d8c74618a0b423c80692c0a2bc070b014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0beb271d8c74618a0b423c80692c0a2bc070b014/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15a670a1b1b43991679b17c14eb5d188058f708a", "url": "https://api.github.com/repos/rust-lang/rust/commits/15a670a1b1b43991679b17c14eb5d188058f708a", "html_url": "https://github.com/rust-lang/rust/commit/15a670a1b1b43991679b17c14eb5d188058f708a"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "8814545fcc07b520c713bf5ad3fe36b890196b79", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0beb271d8c74618a0b423c80692c0a2bc070b014/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0beb271d8c74618a0b423c80692c0a2bc070b014/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=0beb271d8c74618a0b423c80692c0a2bc070b014", "patch": "@@ -5525,8 +5525,12 @@ fn trans_bind_thunk(&@local_ctxt cx, &span sp, &ty::t incoming_fty,\n                         bcx = copy_ty(bcx, val, e_ty).bcx;\n                         val = bcx.build.Load(val);\n                     }\n-                } else if (ty::type_contains_params(cx.ccx.tcx, out_arg.ty)) {\n-                    assert (out_arg.mode != ty::mo_val);\n+                }\n+                // If the type is parameterized, then we need to cast the\n+                // type we actually have to the parameterized out type.\n+                if (ty::type_contains_params(cx.ccx.tcx, out_arg.ty)) {\n+                    // FIXME: (#642) This works for boxes and alias params\n+                    // but does not work for bare functions.\n                     val = bcx.build.PointerCast(val, llout_arg_ty);\n                 }\n                 llargs += ~[val];"}]}