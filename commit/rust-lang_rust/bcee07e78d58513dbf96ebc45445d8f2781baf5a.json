{"sha": "bcee07e78d58513dbf96ebc45445d8f2781baf5a", "node_id": "C_kwDOAAsO6NoAKGJjZWUwN2U3OGQ1ODUxM2RiZjk2ZWJjNDU0NDVkOGYyNzgxYmFmNWE", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-23T18:22:51Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-23T20:26:31Z"}, "message": "Add `Mutability::{is_mut,is_not}`", "tree": {"sha": "f7316615830aaaa11f764dfba3dd96e3d0b0af9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7316615830aaaa11f764dfba3dd96e3d0b0af9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcee07e78d58513dbf96ebc45445d8f2781baf5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcee07e78d58513dbf96ebc45445d8f2781baf5a", "html_url": "https://github.com/rust-lang/rust/commit/bcee07e78d58513dbf96ebc45445d8f2781baf5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcee07e78d58513dbf96ebc45445d8f2781baf5a/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3817e23397bac109440383d845d29152f8bfa4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3817e23397bac109440383d845d29152f8bfa4e", "html_url": "https://github.com/rust-lang/rust/commit/d3817e23397bac109440383d845d29152f8bfa4e"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "a6bde88408497ed9d12a7cd28a82966d7fc52439", "filename": "src/constant.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bcee07e78d58513dbf96ebc45445d8f2781baf5a/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcee07e78d58513dbf96ebc45445d8f2781baf5a/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=bcee07e78d58513dbf96ebc45445d8f2781baf5a", "patch": "@@ -257,9 +257,9 @@ pub(crate) fn data_id_for_alloc_id(\n     mutability: rustc_hir::Mutability,\n ) -> DataId {\n     cx.todo.push(TodoItem::Alloc(alloc_id));\n-    *cx.anon_allocs.entry(alloc_id).or_insert_with(|| {\n-        module.declare_anonymous_data(mutability == rustc_hir::Mutability::Mut, false).unwrap()\n-    })\n+    *cx.anon_allocs\n+        .entry(alloc_id)\n+        .or_insert_with(|| module.declare_anonymous_data(mutability.is_mut(), false).unwrap())\n }\n \n fn data_id_for_static(\n@@ -343,12 +343,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n                     }\n                 };\n                 let data_id = *cx.anon_allocs.entry(alloc_id).or_insert_with(|| {\n-                    module\n-                        .declare_anonymous_data(\n-                            alloc.inner().mutability == rustc_hir::Mutability::Mut,\n-                            false,\n-                        )\n-                        .unwrap()\n+                    module.declare_anonymous_data(alloc.inner().mutability.is_mut(), false).unwrap()\n                 });\n                 (data_id, alloc, None)\n             }"}]}