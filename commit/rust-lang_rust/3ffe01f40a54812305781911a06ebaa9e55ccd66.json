{"sha": "3ffe01f40a54812305781911a06ebaa9e55ccd66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmUwMWY0MGE1NDgxMjMwNTc4MTkxMWEwNmViYWE5ZTU1Y2NkNjY=", "commit": {"author": {"name": "Michael Zapata", "email": "michael.zapata@scality.com", "date": "2017-08-17T04:14:32Z"}, "committer": {"name": "Michael Zapata", "email": "michael.zapata@scality.com", "date": "2017-08-17T07:01:59Z"}, "message": "refactor(mir): remove unused argument\n\nSmall cleanup that shouldn't have any impact", "tree": {"sha": "51836deb7b73746cc6eff3366dfeb0a5c2fcf4e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51836deb7b73746cc6eff3366dfeb0a5c2fcf4e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ffe01f40a54812305781911a06ebaa9e55ccd66", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niJEEABYIADkWIQQcFpPQEQ/b+1VND41FB/Cin2Am2gUCWZU/aRscbWljaGFlbC56\nYXBhdGFAc2NhbGl0eS5jb20ACgkQRQfwop9gJtpjZQD+OlwzOrXBgc0vkuvXL5iY\nlb23dOD1g2Sc4ssQn5DBQogA/3TfJmj6yp6vVyBGaK4hpSXEK9r9Uw+yDKPIOAkq\n+2EI\n=uslG\n-----END PGP SIGNATURE-----", "payload": "tree 51836deb7b73746cc6eff3366dfeb0a5c2fcf4e7\nparent be0f77dc8a12c40c184a47e5d51ec9001c4bd360\nauthor Michael Zapata <michael.zapata@scality.com> 1502943272 +1200\ncommitter Michael Zapata <michael.zapata@scality.com> 1502953319 +1200\n\nrefactor(mir): remove unused argument\n\nSmall cleanup that shouldn't have any impact\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ffe01f40a54812305781911a06ebaa9e55ccd66", "html_url": "https://github.com/rust-lang/rust/commit/3ffe01f40a54812305781911a06ebaa9e55ccd66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ffe01f40a54812305781911a06ebaa9e55ccd66/comments", "author": null, "committer": null, "parents": [{"sha": "be0f77dc8a12c40c184a47e5d51ec9001c4bd360", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0f77dc8a12c40c184a47e5d51ec9001c4bd360", "html_url": "https://github.com/rust-lang/rust/commit/be0f77dc8a12c40c184a47e5d51ec9001c4bd360"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "c36da9410f34adb60ef892eb159921df4b26a1fc", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ffe01f40a54812305781911a06ebaa9e55ccd66/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ffe01f40a54812305781911a06ebaa9e55ccd66/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=3ffe01f40a54812305781911a06ebaa9e55ccd66", "patch": "@@ -89,7 +89,7 @@ should go to.\n \n use build::{BlockAnd, BlockAndExtension, Builder, CFG};\n use rustc::middle::region::CodeExtent;\n-use rustc::ty::{Ty, TyCtxt};\n+use rustc::ty::Ty;\n use rustc::mir::*;\n use rustc::mir::transform::MirSource;\n use syntax_pos::{Span};\n@@ -572,7 +572,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n         }\n         assert!(!self.scopes.is_empty()); // or `any` above would be false\n \n-        let Builder { ref mut hir, ref mut cfg, ref mut scopes,\n+        let Builder { ref mut cfg, ref mut scopes,\n                       ref mut cached_resume_block, .. } = *self;\n \n         // Build up the drops in **reverse** order. The end result will\n@@ -599,8 +599,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n         };\n \n         for scope in scopes.iter_mut() {\n-            target = build_diverge_scope(\n-                hir.tcx(), cfg, scope.extent_span, scope, target);\n+            target = build_diverge_scope(cfg, scope.extent_span, scope, target);\n         }\n         Some(target)\n     }\n@@ -726,8 +725,7 @@ fn build_scope_drops<'tcx>(cfg: &mut CFG<'tcx>,\n     block.unit()\n }\n \n-fn build_diverge_scope<'a, 'gcx, 'tcx>(_tcx: TyCtxt<'a, 'gcx, 'tcx>,\n-                                       cfg: &mut CFG<'tcx>,\n+fn build_diverge_scope<'a, 'gcx, 'tcx>(cfg: &mut CFG<'tcx>,\n                                        span: Span,\n                                        scope: &mut Scope<'tcx>,\n                                        mut target: BasicBlock)"}]}