{"sha": "0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OTNlM2FhODhlMGE5ZDc0ZWFhMjliODg2YjEwYjRhNmIxZmMwNTM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-05T11:25:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-05T11:25:54Z"}, "message": "Rollup merge of #81318 - CraftSpider:json-trait-fix, r=jyn514\n\nrustdoc-json: Fix has_body\n\nPreviously, `has_body` was always true. Now propagate the type of the method to set it correctly. Relies on #81287, that will need to be merged first.", "tree": {"sha": "331758bcac4893d4b1c78dddaace05581a883703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/331758bcac4893d4b1c78dddaace05581a883703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHStDCRBK7hj4Ov3rIwAAdHIIADWP0VzEbP5VZFQZP+p7Nhx8\n1m/aI9Jmel3N/o9gE85zVEEIiJQf53Wvn9tAcVN5yfLNOBEGwU89M5b0MogdwR8s\nYSQZ+ZJy8pzq5jjqSsW7PF9QWIxZtm4Uul9hT2PGlJOalFHQ9I+FipXEffvSniGF\nVEaxQg/P5vHPuamP3HoVmdCtsoyQ3j2yaWrmA762dWVPkioqmYwAatlq0c/itw57\nPePk52d0OWviT6Q8wiwjuEVnuH+bogGGoOo6zd8PeOuG1FoYVvquLTLTlbAG7YAj\nVTv3Qp0FKOp14e+n2kYDmHMHHFnHV1HAWM5EHehWeQ9gVKy4NehOGjIdyhtXqns=\n=kKBu\n-----END PGP SIGNATURE-----\n", "payload": "tree 331758bcac4893d4b1c78dddaace05581a883703\nparent 8d49ca11a2ec5492626f7a62fe2bef8daefe9e72\nparent 1c60d27a52ee0341c3848f170c2635d5e74bd0a8\nauthor Mara Bos <m-ou.se@m-ou.se> 1612524354 +0100\ncommitter GitHub <noreply@github.com> 1612524354 +0100\n\nRollup merge of #81318 - CraftSpider:json-trait-fix, r=jyn514\n\nrustdoc-json: Fix has_body\n\nPreviously, `has_body` was always true. Now propagate the type of the method to set it correctly. Relies on #81287, that will need to be merged first.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053", "html_url": "https://github.com/rust-lang/rust/commit/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d49ca11a2ec5492626f7a62fe2bef8daefe9e72", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d49ca11a2ec5492626f7a62fe2bef8daefe9e72", "html_url": "https://github.com/rust-lang/rust/commit/8d49ca11a2ec5492626f7a62fe2bef8daefe9e72"}, {"sha": "1c60d27a52ee0341c3848f170c2635d5e74bd0a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c60d27a52ee0341c3848f170c2635d5e74bd0a8", "html_url": "https://github.com/rust-lang/rust/commit/1c60d27a52ee0341c3848f170c2635d5e74bd0a8"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "438a8d57cc222dc592bb55f09733f057357ebb10", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053", "patch": "@@ -162,8 +162,8 @@ impl From<clean::ItemKind> for ItemEnum {\n             ForeignFunctionItem(f) => ItemEnum::FunctionItem(f.into()),\n             TraitItem(t) => ItemEnum::TraitItem(t.into()),\n             TraitAliasItem(t) => ItemEnum::TraitAliasItem(t.into()),\n-            MethodItem(m, _) => ItemEnum::MethodItem(m.into()),\n-            TyMethodItem(m) => ItemEnum::MethodItem(m.into()),\n+            MethodItem(m, _) => ItemEnum::MethodItem(from_function_method(m, true)),\n+            TyMethodItem(m) => ItemEnum::MethodItem(from_function_method(m, false)),\n             ImplItem(i) => ItemEnum::ImplItem(i.into()),\n             StaticItem(s) => ItemEnum::StaticItem(s.into()),\n             ForeignStaticItem(s) => ItemEnum::StaticItem(s.into()),\n@@ -435,15 +435,13 @@ impl From<clean::Impl> for Impl {\n     }\n }\n \n-impl From<clean::Function> for Method {\n-    fn from(function: clean::Function) -> Self {\n-        let clean::Function { header, decl, generics, all_types: _, ret_types: _ } = function;\n-        Method {\n-            decl: decl.into(),\n-            generics: generics.into(),\n-            header: stringify_header(&header),\n-            has_body: true,\n-        }\n+crate fn from_function_method(function: clean::Function, has_body: bool) -> Method {\n+    let clean::Function { header, decl, generics, all_types: _, ret_types: _ } = function;\n+    Method {\n+        decl: decl.into(),\n+        generics: generics.into(),\n+        header: stringify_header(&header),\n+        has_body,\n     }\n }\n "}, {"sha": "44dacb1ee75bfe7cec185c01b95a327dbfbaf206", "filename": "src/test/rustdoc-json/traits/has_body.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs?ref=0493e3aa88e0a9d74eaa29b886b10b4a6b1fc053", "patch": "@@ -0,0 +1,21 @@\n+// @has has_body.json \"$.index[*][?(@.name=='Foo')]\"\n+pub trait Foo {\n+    // @has - \"$.index[*][?(@.name=='no_self')].inner.has_body\" false\n+    fn no_self();\n+    // @has - \"$.index[*][?(@.name=='move_self')].inner.has_body\" false\n+    fn move_self(self);\n+    // @has - \"$.index[*][?(@.name=='ref_self')].inner.has_body\" false\n+    fn ref_self(&self);\n+\n+    // @has - \"$.index[*][?(@.name=='no_self_def')].inner.has_body\" true\n+    fn no_self_def() {}\n+    // @has - \"$.index[*][?(@.name=='move_self_def')].inner.has_body\" true\n+    fn move_self_def(self) {}\n+    // @has - \"$.index[*][?(@.name=='ref_self_def')].inner.has_body\" true\n+    fn ref_self_def(&self) {}\n+}\n+\n+pub trait Bar: Clone {\n+    // @has - \"$.index[*][?(@.name=='method')].inner.has_body\" false\n+    fn method(&self, param: usize);\n+}"}]}