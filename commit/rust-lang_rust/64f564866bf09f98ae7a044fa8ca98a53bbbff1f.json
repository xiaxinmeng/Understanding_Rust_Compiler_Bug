{"sha": "64f564866bf09f98ae7a044fa8ca98a53bbbff1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZjU2NDg2NmJmMDlmOThhZTdhMDQ0ZmE4Y2E5OGE1M2JiYmZmMWY=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-03-11T05:27:47Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-04-09T20:31:03Z"}, "message": "Update documentation and fix i586 inaccuracy", "tree": {"sha": "36df55b585d05db71b7ca12f12594c0e73cfcbb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36df55b585d05db71b7ca12f12594c0e73cfcbb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64f564866bf09f98ae7a044fa8ca98a53bbbff1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64f564866bf09f98ae7a044fa8ca98a53bbbff1f", "html_url": "https://github.com/rust-lang/rust/commit/64f564866bf09f98ae7a044fa8ca98a53bbbff1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64f564866bf09f98ae7a044fa8ca98a53bbbff1f/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02608d44f7542981202792234540915484e0560d", "url": "https://api.github.com/repos/rust-lang/rust/commits/02608d44f7542981202792234540915484e0560d", "html_url": "https://github.com/rust-lang/rust/commit/02608d44f7542981202792234540915484e0560d"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "684879021b4858bf66c7a211138e28bfb7a08bfc", "filename": "crates/core_simd/src/reduction.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/64f564866bf09f98ae7a044fa8ca98a53bbbff1f/crates%2Fcore_simd%2Fsrc%2Freduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f564866bf09f98ae7a044fa8ca98a53bbbff1f/crates%2Fcore_simd%2Fsrc%2Freduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Freduction.rs?ref=64f564866bf09f98ae7a044fa8ca98a53bbbff1f", "patch": "@@ -58,22 +58,38 @@ macro_rules! impl_float_reductions {\n             /// Produces the sum of the lanes of the vector.\n             #[inline]\n             pub fn sum(self) -> $scalar {\n-                unsafe { crate::intrinsics::simd_reduce_add_ordered(self, 0.) }\n+                // f32 SIMD sum is inaccurate on i586\n+                if cfg!(target_arch = \"i586\") && core::mem::size_of::<$scalar>() == 4 {\n+                    self.as_slice().iter().sum()\n+                } else {\n+                    unsafe { crate::intrinsics::simd_reduce_add_ordered(self, 0.) }\n+                }\n             }\n \n             /// Produces the sum of the lanes of the vector.\n             #[inline]\n             pub fn product(self) -> $scalar {\n-                unsafe { crate::intrinsics::simd_reduce_mul_ordered(self, 1.) }\n+                // f32 SIMD product is inaccurate on i586\n+                if cfg!(target_arch = \"i586\") && core::mem::size_of::<$scalar>() == 4 {\n+                    self.as_slice().iter().product()\n+                } else {\n+                    unsafe { crate::intrinsics::simd_reduce_mul_ordered(self, 1.) }\n+                }\n             }\n \n             /// Returns the maximum lane in the vector.\n+            ///\n+            /// Returns values based on equality, so a vector containing both `0.` and `-0.` may\n+            /// return either.  This function will not return `NaN` unless all lanes are `NaN`.\n             #[inline]\n             pub fn max_lane(self) -> $scalar {\n                 unsafe { crate::intrinsics::simd_reduce_max(self) }\n             }\n \n             /// Returns the minimum lane in the vector.\n+            ///\n+            /// Returns values based on equality, so a vector containing both `0.` and `-0.` may\n+            /// return either.  This function will not return `NaN` unless all lanes are `NaN`.\n             #[inline]\n             pub fn min_lane(self) -> $scalar {\n                 unsafe { crate::intrinsics::simd_reduce_min(self) }"}]}