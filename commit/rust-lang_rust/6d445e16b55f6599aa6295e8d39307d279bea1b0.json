{"sha": "6d445e16b55f6599aa6295e8d39307d279bea1b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNDQ1ZTE2YjU1ZjY1OTlhYTYyOTVlOGQzOTMwN2QyNzliZWExYjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-10T04:36:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-10T04:36:15Z"}, "message": "Auto merge of #44260 - alexcrichton:hardlink-no-copy, r=Mark-Simulacrum\n\nrustbuild: Switch back to using hard links\n\nThe `copy` function historically in rustbuild used hard links to speed up the\ncopy operations that it does. This logic was backed out, however, in #39518 due\nto a bug that only showed up on Windows, described in #39504. The cause\ndescribed in #39504 happened because Cargo, on a fresh build, would overwrite\nthe previous artifacts with new hard links that Cargo itself manages.\n\nThis behavior in Cargo was fixed in rust-lang/cargo#4390 where it no longer\nshould overwrite files on fresh builds, opportunistically leaving the filesystem\nintact and not touching it.\n\nHopefully this can help speed up local builds by doing fewer copies all over the\nplace!", "tree": {"sha": "22c702f9aaf021f12ad7e94ade9ae4e27c9adb64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22c702f9aaf021f12ad7e94ade9ae4e27c9adb64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d445e16b55f6599aa6295e8d39307d279bea1b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d445e16b55f6599aa6295e8d39307d279bea1b0", "html_url": "https://github.com/rust-lang/rust/commit/6d445e16b55f6599aa6295e8d39307d279bea1b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d445e16b55f6599aa6295e8d39307d279bea1b0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f982ff05db1faedb5080100f9982ca084781a9f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f982ff05db1faedb5080100f9982ca084781a9f2", "html_url": "https://github.com/rust-lang/rust/commit/f982ff05db1faedb5080100f9982ca084781a9f2"}, {"sha": "38bedfabb936f4c26950033a96d673d996534758", "url": "https://api.github.com/repos/rust-lang/rust/commits/38bedfabb936f4c26950033a96d673d996534758", "html_url": "https://github.com/rust-lang/rust/commit/38bedfabb936f4c26950033a96d673d996534758"}], "stats": {"total": 80, "additions": 47, "deletions": 33}, "files": [{"sha": "47ef0a7d8ca13a98f4aef9a61a1463d78d0546d5", "filename": "src/Cargo.lock", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=6d445e16b55f6599aa6295e8d39307d279bea1b0", "patch": "@@ -183,11 +183,11 @@ dependencies = [\n  \"cargotest 0.1.0\",\n  \"core-foundation 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"crates-io 0.12.0\",\n- \"crossbeam 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"curl 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"docopt 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"error-chain 0.11.0-rc.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"flate2 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fs2 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -209,10 +209,10 @@ dependencies = [\n  \"psapi-sys 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"same-file 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"semver 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_ignored 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_ignored 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"shell-escape 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tar 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -343,7 +343,7 @@ name = \"crates-io\"\n version = \"0.12.0\"\n dependencies = [\n  \"curl 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"error-chain 0.11.0-rc.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -355,6 +355,11 @@ name = \"crossbeam\"\n version = \"0.2.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"crossbeam\"\n+version = \"0.3.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"cssparser\"\n version = \"0.13.7\"\n@@ -487,15 +492,7 @@ dependencies = [\n \n [[package]]\n name = \"error-chain\"\n-version = \"0.10.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"backtrace 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"error-chain\"\n-version = \"0.11.0-rc.2\"\n+version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"backtrace 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -744,7 +741,7 @@ name = \"installer\"\n version = \"0.0.0\"\n dependencies = [\n  \"clap 2.26.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"error-chain 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"flate2 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1868,7 +1865,7 @@ dependencies = [\n \n [[package]]\n name = \"semver\"\n-version = \"0.7.0\"\n+version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1906,7 +1903,7 @@ dependencies = [\n \n [[package]]\n name = \"serde_ignored\"\n-version = \"0.0.3\"\n+version = \"0.0.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2451,6 +2448,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum core-foundation 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5909502e547762013619f4c4e01cc7393c20fe2d52d7fa471c1210adb2320dc7\"\n \"checksum core-foundation-sys 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bc9fb3d6cb663e6fd7cf1c63f9b144ee2b1e4a78595a0451dd34bff85b9a3387\"\n \"checksum crossbeam 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0c5ea215664ca264da8a9d9c3be80d2eaf30923c259d03e870388eb927508f97\"\n+\"checksum crossbeam 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8837ab96533202c5b610ed44bc7f4183e7957c1c8f56e8cc78bb098593c8ba0a\"\n \"checksum cssparser 0.13.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ef6124306e5ebc5ab11891d063aeafdd0cdc308079b708c8b566125f3680292b\"\n \"checksum cssparser-macros 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"079adec4af52bb5275eadd004292028c79eb3c5f5b4ee8086a36d4197032f6df\"\n \"checksum curl 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7034c534a1d7d22f7971d6088aa9d281d219ef724026c3428092500f41ae9c2c\"\n@@ -2465,8 +2463,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum enum_primitive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be4551092f4d519593039259a9ed8daedf0da12e5109c5280338073eaeb81180\"\n \"checksum env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15abd780e45b3ea4f76b4e9a26ff4843258dd8a3eed2775a0e7368c2e7936c2f\"\n \"checksum env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3ddf21e73e016298f5cb37d6ef8e8da8e39f91f9ec8b0df44b7deb16a9f8cd5b\"\n-\"checksum error-chain 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9435d864e017c3c6afeac1654189b06cdb491cf2ff73dbf0d73b0f292f42ff8\"\n-\"checksum error-chain 0.11.0-rc.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38d3a55d9a7a456748f2a3912c0941a5d9a68006eb15b3c3c9836b8420dc102d\"\n+\"checksum error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff511d5dc435d703f4971bc399647c9bc38e20cb41452e3b9feb4765419ed3f3\"\n \"checksum filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5363ab8e4139b8568a6237db5248646e5a8a2f89bd5ccb02092182b11fd3e922\"\n \"checksum flate2 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"36df0166e856739905cd3d7e0b210fe818592211a008862599845e012d8d304c\"\n \"checksum fnv 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6cc484842f1e2884faf56f529f960cc12ad8c71ce96cc7abba0a067c98fee344\"\n@@ -2557,12 +2554,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum scoped-tls 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f417c22df063e9450888a7561788e9bd46d3bb3c1466435b4eccb903807f147d\"\n \"checksum scopeguard 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"59a076157c1e2dc561d8de585151ee6965d910dd4dcb5dabb7ae3e83981a6c57\"\n \"checksum selectors 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e3c89b1c6a3c029c82263f7dd2d44d0005ee7374eb09e254ab59dede4353a8c0\"\n-\"checksum semver 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3fdd61b85a0fa777f7fb7c454b9189b2941b110d1385ce84d7f76efdf1606a85\"\n+\"checksum semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bee2bc909ab2d8d60dab26e8cad85b25d795b14603a0dcb627b78b9d30b6454b\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n \"checksum serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f7726f29ddf9731b17ff113c461e362c381d9d69433f79de4f3dd572488823e9\"\n \"checksum serde_derive 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf823e706be268e73e7747b147aa31c8f633ab4ba31f115efb57e5047c3a76dd\"\n \"checksum serde_derive_internals 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"37aee4e0da52d801acfbc0cc219eb1eda7142112339726e427926a6f6ee65d3a\"\n-\"checksum serde_ignored 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c10e798e4405d7dcec3658989e35ee6706f730a9ed7c1184d5ebd84317e82f46\"\n+\"checksum serde_ignored 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"190e9765dcedb56be63b6e0993a006c7e3b071a016a304736e4a315dc01fb142\"\n \"checksum serde_json 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"48b04779552e92037212c3615370f6bd57a40ebba7f20e554ff9f55e41a69a7b\"\n \"checksum shell-escape 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd5cc96481d54583947bfe88bf30c23d53f883c6cd0145368b69989d97b84ef8\"\n \"checksum siphasher 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0df90a788073e8d0235a67e50441d47db7c8ad9debd91cbf43736a2a92d36537\""}, {"sha": "e18850b08b1670db95e9c43bd8b3f18300dd6691", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=6d445e16b55f6599aa6295e8d39307d279bea1b0", "patch": "@@ -20,7 +20,7 @@\n \n use std::env;\n use std::fs::{self, File};\n-use std::io::{Read, Write};\n+use std::io::{self, Read, Write};\n use std::path::{PathBuf, Path};\n use std::process::{Command, Stdio};\n \n@@ -900,7 +900,11 @@ impl Step for PlainSourceTarball {\n fn install(src: &Path, dstdir: &Path, perms: u32) {\n     let dst = dstdir.join(src.file_name().unwrap());\n     t!(fs::create_dir_all(dstdir));\n-    t!(fs::copy(src, &dst));\n+    {\n+        let mut s = t!(fs::File::open(&src));\n+        let mut d = t!(fs::File::create(&dst));\n+        io::copy(&mut s, &mut d).expect(\"failed to copy\");\n+    }\n     chmod(&dst, perms);\n }\n "}, {"sha": "eaa2b1244236fa59f74c9836229305fd0a704e59", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=6d445e16b55f6599aa6295e8d39307d279bea1b0", "patch": "@@ -62,6 +62,7 @@ struct ToolBuild {\n     compiler: Compiler,\n     target: Interned<String>,\n     tool: &'static str,\n+    path: &'static str,\n     mode: Mode,\n }\n \n@@ -81,6 +82,7 @@ impl Step for ToolBuild {\n         let compiler = self.compiler;\n         let target = self.target;\n         let tool = self.tool;\n+        let path = self.path;\n \n         match self.mode {\n             Mode::Libstd => builder.ensure(compile::Std { compiler, target }),\n@@ -92,7 +94,7 @@ impl Step for ToolBuild {\n         let _folder = build.fold_output(|| format!(\"stage{}-{}\", compiler.stage, tool));\n         println!(\"Building stage{} tool {} ({})\", compiler.stage, tool, target);\n \n-        let mut cargo = prepare_tool_cargo(builder, compiler, target, tool);\n+        let mut cargo = prepare_tool_cargo(builder, compiler, target, path);\n         build.run(&mut cargo);\n         build.cargo_out(compiler, Mode::Tool, target).join(exe(tool, &compiler.host))\n     }\n@@ -102,11 +104,11 @@ fn prepare_tool_cargo(\n     builder: &Builder,\n     compiler: Compiler,\n     target: Interned<String>,\n-    tool: &'static str,\n+    path: &'static str,\n ) -> Command {\n     let build = builder.build;\n     let mut cargo = builder.cargo(compiler, Mode::Tool, target, \"build\");\n-    let dir = build.src.join(\"src/tools\").join(tool);\n+    let dir = build.src.join(path);\n     cargo.arg(\"--manifest-path\").arg(dir.join(\"Cargo.toml\"));\n \n     // We don't want to build tools dynamically as they'll be running across\n@@ -184,6 +186,7 @@ macro_rules! tool {\n                     target: self.target,\n                     tool: $tool_name,\n                     mode: $mode,\n+                    path: $path,\n                 })\n             }\n         }\n@@ -201,7 +204,7 @@ tool!(\n     Compiletest, \"src/tools/compiletest\", \"compiletest\", Mode::Libtest;\n     BuildManifest, \"src/tools/build-manifest\", \"build-manifest\", Mode::Libstd;\n     RemoteTestClient, \"src/tools/remote-test-client\", \"remote-test-client\", Mode::Libstd;\n-    RustInstaller, \"src/tools/rust-installer\", \"rust-installer\", Mode::Libstd;\n+    RustInstaller, \"src/tools/rust-installer\", \"fabricate\", Mode::Libstd;\n );\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n@@ -230,6 +233,7 @@ impl Step for RemoteTestServer {\n             target: self.target,\n             tool: \"remote-test-server\",\n             mode: Mode::Libstd,\n+            path: \"src/tools/remote-test-server\",\n         })\n     }\n }\n@@ -276,7 +280,10 @@ impl Step for Rustdoc {\n         let _folder = build.fold_output(|| format!(\"stage{}-rustdoc\", target_compiler.stage));\n         println!(\"Building rustdoc for stage{} ({})\", target_compiler.stage, target_compiler.host);\n \n-        let mut cargo = prepare_tool_cargo(builder, build_compiler, target, \"rustdoc\");\n+        let mut cargo = prepare_tool_cargo(builder,\n+                                           build_compiler,\n+                                           target,\n+                                           \"src/tools/rustdoc\");\n         build.run(&mut cargo);\n         // Cargo adds a number of paths to the dylib search path on windows, which results in\n         // the wrong rustdoc being executed. To avoid the conflicting rustdocs, we name the \"tool\"\n@@ -337,6 +344,7 @@ impl Step for Cargo {\n             target: self.target,\n             tool: \"cargo\",\n             mode: Mode::Librustc,\n+            path: \"src/tools/cargo\",\n         })\n     }\n }\n@@ -375,6 +383,7 @@ impl Step for Clippy {\n             target: self.target,\n             tool: \"clippy\",\n             mode: Mode::Librustc,\n+            path: \"src/tools/clippy\",\n         })\n     }\n }\n@@ -417,6 +426,7 @@ impl Step for Rls {\n             target: self.target,\n             tool: \"rls\",\n             mode: Mode::Librustc,\n+            path: \"src/tools/rls\",\n         })\n     }\n }"}, {"sha": "a521dd09453916b263f081638a70799286608e62", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d445e16b55f6599aa6295e8d39307d279bea1b0/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=6d445e16b55f6599aa6295e8d39307d279bea1b0", "patch": "@@ -34,8 +34,12 @@ pub fn staticlib(name: &str, target: &str) -> String {\n /// Copies a file from `src` to `dst`\n pub fn copy(src: &Path, dst: &Path) {\n     let _ = fs::remove_file(&dst);\n-    let res = fs::copy(src, dst);\n-    if let Err(e) = res {\n+    // Attempt to \"easy copy\" by creating a hard link (symlinks don't work on\n+    // windows), but if that fails just fall back to a slow `copy` operation.\n+    if let Ok(()) = fs::hard_link(src, dst) {\n+        return\n+    }\n+    if let Err(e) = fs::copy(src, dst) {\n         panic!(\"failed to copy `{}` to `{}`: {}\", src.display(),\n                dst.display(), e)\n     }\n@@ -44,7 +48,6 @@ pub fn copy(src: &Path, dst: &Path) {\n     let atime = FileTime::from_last_access_time(&metadata);\n     let mtime = FileTime::from_last_modification_time(&metadata);\n     t!(filetime::set_file_times(dst, atime, mtime));\n-\n }\n \n /// Copies the `src` directory recursively to `dst`. Both are assumed to exist"}, {"sha": "33250c48b4763b01478d780e76206484a1d5b207", "filename": "src/tools/cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargo?ref=6d445e16b55f6599aa6295e8d39307d279bea1b0", "patch": "@@ -1 +1 @@\n-Subproject commit 34c0674a251287c94cdd1a112966bcb9010c62e8\n+Subproject commit 33250c48b4763b01478d780e76206484a1d5b207"}, {"sha": "adea17e1b22231a9036a619264b72565e3a3962f", "filename": "src/tools/rust-installer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer?ref=6d445e16b55f6599aa6295e8d39307d279bea1b0", "patch": "@@ -1 +1 @@\n-Subproject commit b4ff403041f17957f735ad750c3241a3a428b9b7\n+Subproject commit adea17e1b22231a9036a619264b72565e3a3962f"}]}