{"sha": "97451996e69a0bb8d98cfe77bd904d8033419ab9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NDUxOTk2ZTY5YTBiYjhkOThjZmU3N2JkOTA0ZDgwMzM0MTlhYjk=", "commit": {"author": {"name": "Jakob Demler", "email": "jdemler@curry-software.com", "date": "2017-02-15T20:21:31Z"}, "committer": {"name": "Jakob Demler", "email": "jdemler@curry-software.com", "date": "2017-02-15T20:21:31Z"}, "message": "fixed whitespace issues", "tree": {"sha": "a6f3ce9df998c23765f51fbc4637ccbeaa0bdb2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6f3ce9df998c23765f51fbc4637ccbeaa0bdb2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97451996e69a0bb8d98cfe77bd904d8033419ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97451996e69a0bb8d98cfe77bd904d8033419ab9", "html_url": "https://github.com/rust-lang/rust/commit/97451996e69a0bb8d98cfe77bd904d8033419ab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97451996e69a0bb8d98cfe77bd904d8033419ab9/comments", "author": {"login": "JDemler", "id": 12686782, "node_id": "MDQ6VXNlcjEyNjg2Nzgy", "avatar_url": "https://avatars.githubusercontent.com/u/12686782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JDemler", "html_url": "https://github.com/JDemler", "followers_url": "https://api.github.com/users/JDemler/followers", "following_url": "https://api.github.com/users/JDemler/following{/other_user}", "gists_url": "https://api.github.com/users/JDemler/gists{/gist_id}", "starred_url": "https://api.github.com/users/JDemler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JDemler/subscriptions", "organizations_url": "https://api.github.com/users/JDemler/orgs", "repos_url": "https://api.github.com/users/JDemler/repos", "events_url": "https://api.github.com/users/JDemler/events{/privacy}", "received_events_url": "https://api.github.com/users/JDemler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JDemler", "id": 12686782, "node_id": "MDQ6VXNlcjEyNjg2Nzgy", "avatar_url": "https://avatars.githubusercontent.com/u/12686782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JDemler", "html_url": "https://github.com/JDemler", "followers_url": "https://api.github.com/users/JDemler/followers", "following_url": "https://api.github.com/users/JDemler/following{/other_user}", "gists_url": "https://api.github.com/users/JDemler/gists{/gist_id}", "starred_url": "https://api.github.com/users/JDemler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JDemler/subscriptions", "organizations_url": "https://api.github.com/users/JDemler/orgs", "repos_url": "https://api.github.com/users/JDemler/repos", "events_url": "https://api.github.com/users/JDemler/events{/privacy}", "received_events_url": "https://api.github.com/users/JDemler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a39994ee3a6f825318af9d6ceb23ee3187c7888", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a39994ee3a6f825318af9d6ceb23ee3187c7888", "html_url": "https://github.com/rust-lang/rust/commit/9a39994ee3a6f825318af9d6ceb23ee3187c7888"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "468a8f904a45a014b00365528ee0d868fbf8ec8e", "filename": "src/doc/book/src/procedural-macros.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97451996e69a0bb8d98cfe77bd904d8033419ab9/src%2Fdoc%2Fbook%2Fsrc%2Fprocedural-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/97451996e69a0bb8d98cfe77bd904d8033419ab9/src%2Fdoc%2Fbook%2Fsrc%2Fprocedural-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fprocedural-macros.md?ref=97451996e69a0bb8d98cfe77bd904d8033419ab9", "patch": "@@ -209,7 +209,9 @@ Ok so now, let's compile `hello-world`. Executing `cargo run` now yields:\n Hello, World! My name is FrenchToast\n Hello, World! My name is Waffles\n ```\n+\n ## Custom Attributes\n+\n In some cases it might make sense to allow users some kind of configuration.\n For our example the user might want to overwrite the name that is printed in the `hello_world()` method.\n \n@@ -240,8 +242,8 @@ pub fn hello_world(input: TokenStream) -> TokenStream\n \n Multiple attributes can be specified that way.\n \n-\n ## Raising Errors\n+\n Let's assume that we do not want to accept `Enums` as input to our custom derive method.\n \n This condition can be easily checked with the help of `syn`. "}]}