{"sha": "c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e", "node_id": "C_kwDOAAsO6NoAKGMzOGQ4MGVlOWY0ZmRlMTU5NmFlNGJmZjA3MzNjM2VjMDQ1ZTJmM2U", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-06-07T17:17:27Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-06-07T19:08:50Z"}, "message": "Track more diagnostics in `rustc_expand`", "tree": {"sha": "de3fe8550b51f0b989adbeac1cde83ad9e1236b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de3fe8550b51f0b989adbeac1cde83ad9e1236b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e", "html_url": "https://github.com/rust-lang/rust/commit/c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e94bda3bf13303671427363d1cd93ac5e089f090", "url": "https://api.github.com/repos/rust-lang/rust/commits/e94bda3bf13303671427363d1cd93ac5e089f090", "html_url": "https://github.com/rust-lang/rust/commit/e94bda3bf13303671427363d1cd93ac5e089f090"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "6839e6ffa35113d37dddbf15257dc1fe6b01246b", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=c38d80ee9f4fde1596ae4bff0733c3ec045e2f3e", "patch": "@@ -1108,6 +1108,7 @@ impl<'a> ExtCtxt<'a> {\n     }\n \n     #[rustc_lint_diagnostics]\n+    #[track_caller]\n     pub fn struct_span_err<S: Into<MultiSpan>>(\n         &self,\n         sp: S,\n@@ -1116,13 +1117,15 @@ impl<'a> ExtCtxt<'a> {\n         self.sess.parse_sess.span_diagnostic.struct_span_err(sp, msg)\n     }\n \n+    #[track_caller]\n     pub fn create_err(\n         &self,\n         err: impl IntoDiagnostic<'a>,\n     ) -> DiagnosticBuilder<'a, ErrorGuaranteed> {\n         self.sess.create_err(err)\n     }\n \n+    #[track_caller]\n     pub fn emit_err(&self, err: impl IntoDiagnostic<'a>) -> ErrorGuaranteed {\n         self.sess.emit_err(err)\n     }\n@@ -1133,10 +1136,12 @@ impl<'a> ExtCtxt<'a> {\n     /// Compilation will be stopped in the near future (at the end of\n     /// the macro expansion phase).\n     #[rustc_lint_diagnostics]\n+    #[track_caller]\n     pub fn span_err<S: Into<MultiSpan>>(&self, sp: S, msg: impl Into<DiagnosticMessage>) {\n         self.sess.parse_sess.span_diagnostic.span_err(sp, msg);\n     }\n     #[rustc_lint_diagnostics]\n+    #[track_caller]\n     pub fn span_warn<S: Into<MultiSpan>>(&self, sp: S, msg: impl Into<DiagnosticMessage>) {\n         self.sess.parse_sess.span_diagnostic.span_warn(sp, msg);\n     }"}]}