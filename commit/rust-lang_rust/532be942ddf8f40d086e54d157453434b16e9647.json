{"sha": "532be942ddf8f40d086e54d157453434b16e9647", "node_id": "C_kwDOAAsO6NoAKDUzMmJlOTQyZGRmOGY0MGQwODZlNTRkMTU3NDUzNDM0YjE2ZTk2NDc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-11T00:41:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-11T00:41:50Z"}, "message": "Auto merge of #96375 - jyn514:bootstrap-submodules, r=Mark-Simulacrum\n\nFix running bootstrap tests on a fresh clone\n\nIn #96303, I changed the tests not to manage submodules, with the main\ngoal of avoiding a clone for llvm-project. Unfortunately, there are some tests\nwhich depend on submodules - I didn't notice locally because they were already checked out for me,\nand CI doesn't use submodule handling at all. Fresh clones, however, were impacted:\n```\nfailures:\n\n---- builder::tests::defaults::doc_default stdout ----\nthread 'main' panicked at 'fs::read_dir(builder.src.join(&relative_path).join(\"redirects\")) failed with No such file or directory (os error 2)', src/bootstrap/doc.rs:232:21\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\n---- builder::tests::dist::dist_only_cross_host stdout ----\nthread 'main' panicked at 'fs::read_to_string(&toml_file_name) failed with No such file or directory (os error 2)', src/bootstrap/lib.rs:1314:20\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n```\n\nTry and get the best of both worlds by only checking out the submodules actually used in tests.", "tree": {"sha": "11f7a745d26ff8a8e2977ae3489436ac664b8cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11f7a745d26ff8a8e2977ae3489436ac664b8cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/532be942ddf8f40d086e54d157453434b16e9647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/532be942ddf8f40d086e54d157453434b16e9647", "html_url": "https://github.com/rust-lang/rust/commit/532be942ddf8f40d086e54d157453434b16e9647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/532be942ddf8f40d086e54d157453434b16e9647/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd44958e0a21110d09862ee080d95a4ca6c52f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd44958e0a21110d09862ee080d95a4ca6c52f8", "html_url": "https://github.com/rust-lang/rust/commit/ecd44958e0a21110d09862ee080d95a4ca6c52f8"}, {"sha": "212fc2134d0bb919a5c7d0a6aec1dd88a230a444", "url": "https://api.github.com/repos/rust-lang/rust/commits/212fc2134d0bb919a5c7d0a6aec1dd88a230a444", "html_url": "https://github.com/rust-lang/rust/commit/212fc2134d0bb919a5c7d0a6aec1dd88a230a444"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "d3e91c75837a0dd8a9d6b665b7c08c77fde0ce71", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/532be942ddf8f40d086e54d157453434b16e9647/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/532be942ddf8f40d086e54d157453434b16e9647/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=532be942ddf8f40d086e54d157453434b16e9647", "patch": "@@ -7,7 +7,19 @@ fn configure(cmd: &str, host: &[&str], target: &[&str]) -> Config {\n     // don't save toolstates\n     config.save_toolstates = None;\n     config.dry_run = true;\n+\n+    // Ignore most submodules, since we don't need them for a dry run.\n+    // But make sure to check out the `doc` and `rust-analyzer` submodules, since some steps need them\n+    // just to know which commands to run.\n+    let submodule_build = Build::new(Config {\n+        // don't include LLVM, so CI doesn't require ninja/cmake to be installed\n+        rust_codegen_backends: vec![],\n+        ..Config::parse(&[\"check\".to_owned()])\n+    });\n+    submodule_build.update_submodule(Path::new(\"src/doc/book\"));\n+    submodule_build.update_submodule(Path::new(\"src/tools/rust-analyzer\"));\n     config.submodules = Some(false);\n+\n     config.ninja_in_file = false;\n     // try to avoid spurious failures in dist where we create/delete each others file\n     // HACK: rather than pull in `tempdir`, use the one that cargo has conveniently created for us"}]}