{"sha": "712d0650615f206b140d6060bfeb02fb379087ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMmQwNjUwNjE1ZjIwNmIxNDBkNjA2MGJmZWIwMmZiMzc5MDg3ZWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-18T12:06:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-18T12:06:01Z"}, "message": "remove some outdated comments regarding  debug assertions", "tree": {"sha": "84358f6b0454d49a59eb569c5f2c4d8fe005a7ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84358f6b0454d49a59eb569c5f2c4d8fe005a7ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/712d0650615f206b140d6060bfeb02fb379087ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/712d0650615f206b140d6060bfeb02fb379087ec", "html_url": "https://github.com/rust-lang/rust/commit/712d0650615f206b140d6060bfeb02fb379087ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/712d0650615f206b140d6060bfeb02fb379087ec/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0677d9729318441a1cdb0c74812ec4140fa4d35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0677d9729318441a1cdb0c74812ec4140fa4d35f", "html_url": "https://github.com/rust-lang/rust/commit/0677d9729318441a1cdb0c74812ec4140fa4d35f"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "8d901c08f91a36cd966b81b7401578ffaee10cd9", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/712d0650615f206b140d6060bfeb02fb379087ec/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/712d0650615f206b140d6060bfeb02fb379087ec/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=712d0650615f206b140d6060bfeb02fb379087ec", "patch": "@@ -687,7 +687,6 @@ pub unsafe fn replace<T>(dst: *mut T, mut src: T) -> T {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n pub const unsafe fn read<T>(src: *const T) -> T {\n-    // `copy_nonoverlapping` takes care of debug_assert.\n     let mut tmp = MaybeUninit::<T>::uninit();\n     // SAFETY: the caller must guarantee that `src` is valid for reads.\n     // `src` cannot overlap `tmp` because `tmp` was just allocated on\n@@ -787,7 +786,6 @@ pub const unsafe fn read<T>(src: *const T) -> T {\n #[stable(feature = \"ptr_unaligned\", since = \"1.17.0\")]\n #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n pub const unsafe fn read_unaligned<T>(src: *const T) -> T {\n-    // `copy_nonoverlapping` takes care of debug_assert.\n     let mut tmp = MaybeUninit::<T>::uninit();\n     // SAFETY: the caller must guarantee that `src` is valid for reads.\n     // `src` cannot overlap `tmp` because `tmp` was just allocated on\n@@ -988,7 +986,6 @@ pub unsafe fn write_unaligned<T>(dst: *mut T, src: T) {\n     // `dst` cannot overlap `src` because the caller has mutable access\n     // to `dst` while `src` is owned by this function.\n     unsafe {\n-        // `copy_nonoverlapping` takes care of debug_assert.\n         copy_nonoverlapping(&src as *const T as *const u8, dst as *mut u8, mem::size_of::<T>());\n     }\n     mem::forget(src);"}]}