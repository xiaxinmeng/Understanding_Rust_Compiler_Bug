{"sha": "57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZWViNjFjYzg2MWYzMjM1MWE5ZDQ1ZWVkMDliNmI4Y2EzYzljNWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-15T02:07:56Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-16T01:13:02Z"}, "message": "or-patterns: remove `Arm::contains_explicit_ref_binding`.", "tree": {"sha": "46ac0043de16d6396baac934dc213f63e3ea4acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46ac0043de16d6396baac934dc213f63e3ea4acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b", "html_url": "https://github.com/rust-lang/rust/commit/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ca42a56000d261be74db41339beff06bc6088c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ca42a56000d261be74db41339beff06bc6088c9", "html_url": "https://github.com/rust-lang/rust/commit/9ca42a56000d261be74db41339beff06bc6088c9"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "ea35418bc1ba7ba6c29e2e45c09a4544bde0aee9", "filename": "src/librustc/hir/pat_util.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b/src%2Flibrustc%2Fhir%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b/src%2Flibrustc%2Fhir%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fpat_util.rs?ref=57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b", "patch": "@@ -189,20 +189,3 @@ impl hir::Pat {\n         result\n     }\n }\n-\n-impl hir::Arm {\n-    /// Checks if the patterns for this arm contain any `ref` or `ref mut`\n-    /// bindings, and if yes whether its containing mutable ones or just immutables ones.\n-    pub fn contains_explicit_ref_binding(&self) -> Option<hir::Mutability> {\n-        // FIXME(tschottdorf): contains_explicit_ref_binding() must be removed\n-        // for #42640 (default match binding modes).\n-        //\n-        // See #44848.\n-        self.top_pats_hack().iter()\n-                 .filter_map(|pat| pat.contains_explicit_ref_binding())\n-                 .max_by_key(|m| match *m {\n-                    hir::MutMutable => 1,\n-                    hir::MutImmutable => 0,\n-                 })\n-    }\n-}"}, {"sha": "e0b53525dc90c635acd763b2930ce79ed121a4da", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=57eeb61cc861f32351a9d45eed09b6b8ca3c9c5b", "patch": "@@ -411,11 +411,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         //\n         // See #44848.\n         let contains_ref_bindings = arms.iter()\n-                                        .filter_map(|a| a.contains_explicit_ref_binding())\n-                                        .max_by_key(|m| match *m {\n-                                            hir::MutMutable => 1,\n-                                            hir::MutImmutable => 0,\n-                                        });\n+            .filter_map(|a| a.pat.contains_explicit_ref_binding())\n+            .max_by_key(|m| match *m {\n+                hir::MutMutable => 1,\n+                hir::MutImmutable => 0,\n+            });\n \n         if let Some(m) = contains_ref_bindings {\n             self.check_expr_with_needs(discrim, Needs::maybe_mut_place(m))"}]}