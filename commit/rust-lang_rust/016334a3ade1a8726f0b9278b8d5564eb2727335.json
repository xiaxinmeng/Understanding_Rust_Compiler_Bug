{"sha": "016334a3ade1a8726f0b9278b8d5564eb2727335", "node_id": "C_kwDOAAsO6NoAKDAxNjMzNGEzYWRlMWE4NzI2ZjBiOTI3OGI4ZDU1NjRlYjI3MjczMzU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-04-25T12:23:17Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-04-26T18:59:32Z"}, "message": "Migrate main.js to ES6", "tree": {"sha": "34d36dada7948ee66f8a58142c992559647d1a8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34d36dada7948ee66f8a58142c992559647d1a8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/016334a3ade1a8726f0b9278b8d5564eb2727335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/016334a3ade1a8726f0b9278b8d5564eb2727335", "html_url": "https://github.com/rust-lang/rust/commit/016334a3ade1a8726f0b9278b8d5564eb2727335", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/016334a3ade1a8726f0b9278b8d5564eb2727335/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb8da88c83937a5fdb95697cac6be87567841955", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8da88c83937a5fdb95697cac6be87567841955", "html_url": "https://github.com/rust-lang/rust/commit/cb8da88c83937a5fdb95697cac6be87567841955"}], "stats": {"total": 258, "additions": 130, "deletions": 128}, "files": [{"sha": "cc9dc0adbca4093af6964827bf4e134b726b9b19", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 130, "deletions": 128, "changes": 258, "blob_url": "https://github.com/rust-lang/rust/blob/016334a3ade1a8726f0b9278b8d5564eb2727335/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/016334a3ade1a8726f0b9278b8d5564eb2727335/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=016334a3ade1a8726f0b9278b8d5564eb2727335", "patch": "@@ -1,3 +1,6 @@\n+/* eslint-env es6 */\n+/* eslint no-var: \"error\" */\n+/* eslint prefer-const: \"error\" */\n // Local js definitions:\n /* global addClass, getSettingValue, hasClass, searchState */\n /* global onEach, onEachLazy, removeClass */\n@@ -11,7 +14,7 @@ if (!String.prototype.startsWith) {\n }\n if (!String.prototype.endsWith) {\n     String.prototype.endsWith = function(suffix, length) {\n-        var l = length || this.length;\n+        const l = length || this.length;\n         return this.indexOf(suffix, l - suffix.length) !== -1;\n     };\n }\n@@ -40,7 +43,7 @@ if (!DOMTokenList.prototype.remove) {\n // Get a value from the rustdoc-vars div, which is used to convey data from\n // Rust to the JS. If there is no such element, return null.\n function getVar(name) {\n-    var el = document.getElementById(\"rustdoc-vars\");\n+    const el = document.getElementById(\"rustdoc-vars\");\n     if (el) {\n         return el.attributes[\"data-\" + name].value;\n     } else {\n@@ -59,7 +62,7 @@ function resourcePath(basename, extension) {\n     window.currentCrate = getVar(\"current-crate\");\n     window.searchJS =  resourcePath(\"search\", \".js\");\n     window.searchIndexJS = resourcePath(\"search-index\", \".js\");\n-    var sidebarVars = document.getElementById(\"sidebar-vars\");\n+    const sidebarVars = document.getElementById(\"sidebar-vars\");\n     if (sidebarVars) {\n         window.sidebarCurrent = {\n             name: sidebarVars.attributes[\"data-name\"].value,\n@@ -68,8 +71,8 @@ function resourcePath(basename, extension) {\n         };\n         // FIXME: It would be nicer to generate this text content directly in HTML,\n         // but with the current code it's hard to get the right information in the right place.\n-        var mobileLocationTitle = document.querySelector(\".mobile-topbar h2.location\");\n-        var locationTitle = document.querySelector(\".sidebar h2.location\");\n+        const mobileLocationTitle = document.querySelector(\".mobile-topbar h2.location\");\n+        const locationTitle = document.querySelector(\".sidebar h2.location\");\n         if (mobileLocationTitle && locationTitle) {\n             mobileLocationTitle.innerHTML = locationTitle.innerHTML;\n         }\n@@ -91,16 +94,16 @@ function getVirtualKey(ev) {\n         return ev.key;\n     }\n \n-    var c = ev.charCode || ev.keyCode;\n+    const c = ev.charCode || ev.keyCode;\n     if (c == 27) {\n         return \"Escape\";\n     }\n     return String.fromCharCode(c);\n }\n \n-var THEME_PICKER_ELEMENT_ID = \"theme-picker\";\n-var THEMES_ELEMENT_ID = \"theme-choices\";\n-var MAIN_ID = \"main-content\";\n+const THEME_PICKER_ELEMENT_ID = \"theme-picker\";\n+const THEMES_ELEMENT_ID = \"theme-choices\";\n+const MAIN_ID = \"main-content\";\n \n function getThemesElement() {\n     return document.getElementById(THEMES_ELEMENT_ID);\n@@ -116,17 +119,17 @@ function getNakedUrl() {\n }\n \n function showThemeButtonState() {\n-    var themePicker = getThemePickerElement();\n-    var themeChoices = getThemesElement();\n+    const themePicker = getThemePickerElement();\n+    const themeChoices = getThemesElement();\n \n     themeChoices.style.display = \"block\";\n     themePicker.style.borderBottomRightRadius = \"0\";\n     themePicker.style.borderBottomLeftRadius = \"0\";\n }\n \n function hideThemeButtonState() {\n-    var themePicker = getThemePickerElement();\n-    var themeChoices = getThemesElement();\n+    const themePicker = getThemePickerElement();\n+    const themeChoices = getThemesElement();\n \n     themeChoices.style.display = \"none\";\n     themePicker.style.borderBottomRightRadius = \"3px\";\n@@ -138,9 +141,9 @@ function hideThemeButtonState() {\n     if (!document.location.href.startsWith(\"file:///\")) {\n         return;\n     }\n-    var themeChoices = getThemesElement();\n-    var themePicker = getThemePickerElement();\n-    var availableThemes = getVar(\"themes\").split(\",\");\n+    const themeChoices = getThemesElement();\n+    const themePicker = getThemePickerElement();\n+    const availableThemes = getVar(\"themes\").split(\",\");\n \n     removeClass(themeChoices.parentElement, \"hidden\");\n \n@@ -153,8 +156,8 @@ function hideThemeButtonState() {\n     }\n \n     function handleThemeButtonsBlur(e) {\n-        var active = document.activeElement;\n-        var related = e.relatedTarget;\n+        const active = document.activeElement;\n+        const related = e.relatedTarget;\n \n         if (active.id !== THEME_PICKER_ELEMENT_ID &&\n             (!active.parentNode || active.parentNode.id !== THEMES_ELEMENT_ID) &&\n@@ -168,7 +171,7 @@ function hideThemeButtonState() {\n     themePicker.onclick = switchThemeButtonState;\n     themePicker.onblur = handleThemeButtonsBlur;\n     availableThemes.forEach(function(item) {\n-        var but = document.createElement(\"button\");\n+        const but = document.createElement(\"button\");\n         but.textContent = item;\n         but.onclick = function() {\n             switchTheme(window.currentTheme, window.mainTheme, item, true);\n@@ -236,10 +239,10 @@ function hideThemeButtonState() {\n             }\n         },\n         getQueryStringParams: function() {\n-            var params = {};\n+            const params = {};\n             window.location.search.substring(1).split(\"&\").\n                 map(function(s) {\n-                    var pair = s.split(\"=\");\n+                    const pair = s.split(\"=\");\n                     params[decodeURIComponent(pair[0])] =\n                         typeof pair[1] === \"undefined\" ? null : decodeURIComponent(pair[1]);\n                 });\n@@ -249,17 +252,17 @@ function hideThemeButtonState() {\n             return window.history && typeof window.history.pushState === \"function\";\n         },\n         setup: function() {\n-            var search_input = searchState.input;\n+            const search_input = searchState.input;\n             if (!searchState.input) {\n                 return;\n             }\n             function loadScript(url) {\n-                var script = document.createElement('script');\n+                const script = document.createElement('script');\n                 script.src = url;\n                 document.head.append(script);\n             }\n \n-            var searchLoaded = false;\n+            let searchLoaded = false;\n             function loadSearch() {\n                 if (!searchLoaded) {\n                     searchLoaded = true;\n@@ -278,9 +281,9 @@ function hideThemeButtonState() {\n                 loadSearch();\n             }\n \n-            var params = searchState.getQueryStringParams();\n+            const params = searchState.getQueryStringParams();\n             if (params.search !== undefined) {\n-                var search = searchState.outputElement();\n+                const search = searchState.outputElement();\n                 search.innerHTML = \"<h3 class=\\\"search-loading\\\">\" +\n                     searchState.loadingText + \"</h3>\";\n                 searchState.showResults(search);\n@@ -291,26 +294,26 @@ function hideThemeButtonState() {\n \n     function getPageId() {\n         if (window.location.hash) {\n-            var tmp = window.location.hash.replace(/^#/, \"\");\n+            const tmp = window.location.hash.replace(/^#/, \"\");\n             if (tmp.length > 0) {\n                 return tmp;\n             }\n         }\n         return null;\n     }\n \n-    var toggleAllDocsId = \"toggle-all-docs\";\n-    var main = document.getElementById(MAIN_ID);\n-    var savedHash = \"\";\n+    const toggleAllDocsId = \"toggle-all-docs\";\n+    const main = document.getElementById(MAIN_ID);\n+    let savedHash = \"\";\n \n     function handleHashes(ev) {\n-        var elem;\n-        var search = searchState.outputElement();\n+        let elem;\n+        const search = searchState.outputElement();\n         if (ev !== null && search && !hasClass(search, \"hidden\") && ev.newURL) {\n             // This block occurs when clicking on an element in the navbar while\n             // in a search.\n             searchState.hideResults(search);\n-            var hash = ev.newURL.slice(ev.newURL.indexOf(\"#\") + 1);\n+            const hash = ev.newURL.slice(ev.newURL.indexOf(\"#\") + 1);\n             if (searchState.browserSupportsHistoryApi()) {\n                 // `window.location.search`` contains all the query parameters, not just `search`.\n                 history.replaceState(null, \"\",\n@@ -333,7 +336,7 @@ function hideThemeButtonState() {\n \n     function onHashChange(ev) {\n         // If we're in mobile mode, we should hide the sidebar in any case.\n-        var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n+        const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n         removeClass(sidebar, \"shown\");\n         handleHashes(ev);\n     }\n@@ -386,8 +389,8 @@ function hideThemeButtonState() {\n     }\n \n     function handleEscape(ev) {\n-        var help = getHelpElement(false);\n-        var search = searchState.outputElement();\n+        const help = getHelpElement(false);\n+        const search = searchState.outputElement();\n         if (help && !hasClass(help, \"hidden\")) {\n             displayHelp(false, ev, help);\n         } else if (search && !hasClass(search, \"hidden\")) {\n@@ -399,13 +402,15 @@ function hideThemeButtonState() {\n         hideThemeButtonState();\n     }\n \n-    var disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n+    const disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n     function handleShortcut(ev) {\n         // Don't interfere with browser shortcuts\n         if (ev.ctrlKey || ev.altKey || ev.metaKey || disableShortcuts) {\n             return;\n         }\n \n+        let themePicker;\n+\n         if (document.activeElement.tagName === \"INPUT\") {\n             switch (getVirtualKey(ev)) {\n             case \"Escape\":\n@@ -439,7 +444,7 @@ function hideThemeButtonState() {\n             case \"T\":\n                 displayHelp(false, ev);\n                 ev.preventDefault();\n-                var themePicker = getThemePickerElement();\n+                themePicker = getThemePickerElement();\n                 themePicker.click();\n                 themePicker.focus();\n                 break;\n@@ -453,8 +458,8 @@ function hideThemeButtonState() {\n     }\n \n     function handleThemeKeyDown(ev) {\n-        var active = document.activeElement;\n-        var themes = getThemesElement();\n+        const active = document.activeElement;\n+        const themes = getThemesElement();\n         switch (getVirtualKey(ev)) {\n         case \"ArrowUp\":\n             ev.preventDefault();\n@@ -500,23 +505,21 @@ function hideThemeButtonState() {\n     document.addEventListener(\"keydown\", handleShortcut);\n \n     (function() {\n-        var x = document.getElementsByClassName(\"version-selector\");\n+        const x = document.getElementsByClassName(\"version-selector\");\n         if (x.length > 0) {\n             x[0].onchange = function() {\n-                var i, match,\n-                    url = document.location.href,\n-                    stripped = \"\",\n-                    len = window.rootPath.match(/\\.\\.\\//g).length + 1;\n+                let url = document.location.href, stripped = \"\";\n+                const len = window.rootPath.match(/\\.\\.\\//g).length + 1;\n \n-                for (i = 0; i < len; ++i) {\n-                    match = url.match(/\\/[^/]*$/);\n+                for (let i = 0; i < len; ++i) {\n+                    const match = url.match(/\\/[^/]*$/);\n                     if (i < len - 1) {\n                         stripped = match[0] + stripped;\n                     }\n                     url = url.substring(0, url.length - match[0].length);\n                 }\n \n-                var selectedVersion = document.getElementsByClassName(\"version-selector\")[0].value;\n+                const selectedVersion = document.getElementsByClassName(\"version-selector\")[0].value;\n                 url += \"/\" + selectedVersion + stripped;\n \n                 document.location.href = url;\n@@ -526,33 +529,33 @@ function hideThemeButtonState() {\n \n     // delayed sidebar rendering.\n     window.initSidebarItems = function(items) {\n-        var sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n-        var others;\n-        var current = window.sidebarCurrent;\n+        const sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n+        let others;\n+        const current = window.sidebarCurrent;\n \n         function addSidebarCrates(crates) {\n             if (!hasClass(document.body, \"crate\")) {\n                 // We only want to list crates on the crate page.\n                 return;\n             }\n             // Draw a convenient sidebar of known crates if we have a listing\n-            var div = document.createElement(\"div\");\n+            const div = document.createElement(\"div\");\n             div.className = \"block crate\";\n             div.innerHTML = \"<h3>Crates</h3>\";\n-            var ul = document.createElement(\"ul\");\n+            const ul = document.createElement(\"ul\");\n             div.appendChild(ul);\n \n-            for (var i = 0; i < crates.length; ++i) {\n-                var klass = \"crate\";\n-                if (window.rootPath !== \"./\" && crates[i] === window.currentCrate) {\n+            for (const crate of crates) {\n+                let klass = \"crate\";\n+                if (window.rootPath !== \"./\" && crate === window.currentCrate) {\n                     klass += \" current\";\n                 }\n-                var link = document.createElement(\"a\");\n-                link.href = window.rootPath + crates[i] + \"/index.html\";\n+                const link = document.createElement(\"a\");\n+                link.href = window.rootPath + crate + \"/index.html\";\n                 link.className = klass;\n-                link.textContent = crates[i];\n+                link.textContent = crate;\n \n-                var li = document.createElement(\"li\");\n+                const li = document.createElement(\"li\");\n                 li.appendChild(link);\n                 ul.appendChild(li);\n             }\n@@ -568,39 +571,38 @@ function hideThemeButtonState() {\n          *                          \"Modules\", or \"Macros\".\n          */\n         function block(shortty, id, longty) {\n-            var filtered = items[shortty];\n+            const filtered = items[shortty];\n             if (!filtered) {\n                 return;\n             }\n \n-            var div = document.createElement(\"div\");\n+            const div = document.createElement(\"div\");\n             div.className = \"block \" + shortty;\n-            var h3 = document.createElement(\"h3\");\n+            const h3 = document.createElement(\"h3\");\n             h3.innerHTML = `<a href=\"index.html#${id}\">${longty}</a>`;\n             div.appendChild(h3);\n-            var ul = document.createElement(\"ul\");\n+            const ul = document.createElement(\"ul\");\n \n-            for (var i = 0, len = filtered.length; i < len; ++i) {\n-                var item = filtered[i];\n-                var name = item[0];\n-                var desc = item[1]; // can be null\n+            for (const item of filtered) {\n+                const name = item[0];\n+                const desc = item[1]; // can be null\n \n-                var klass = shortty;\n+                let klass = shortty;\n                 if (name === current.name && shortty === current.ty) {\n                     klass += \" current\";\n                 }\n-                var path;\n+                let path;\n                 if (shortty === \"mod\") {\n                     path = name + \"/index.html\";\n                 } else {\n                     path = shortty + \".\" + name + \".html\";\n                 }\n-                var link = document.createElement(\"a\");\n+                const link = document.createElement(\"a\");\n                 link.href = current.relpath + path;\n                 link.title = desc;\n                 link.className = klass;\n                 link.textContent = name;\n-                var li = document.createElement(\"li\");\n+                const li = document.createElement(\"li\");\n                 li.appendChild(link);\n                 ul.appendChild(li);\n             }\n@@ -613,7 +615,7 @@ function hideThemeButtonState() {\n             others.className = \"others\";\n             sidebar.appendChild(others);\n \n-            var isModule = hasClass(document.body, \"mod\");\n+            const isModule = hasClass(document.body, \"mod\");\n             if (!isModule) {\n                 block(\"primitive\", \"primitives\", \"Primitive Types\");\n                 block(\"mod\", \"modules\", \"Modules\");\n@@ -638,18 +640,18 @@ function hideThemeButtonState() {\n     };\n \n     window.register_implementors = function(imp) {\n-        var implementors = document.getElementById(\"implementors-list\");\n-        var synthetic_implementors = document.getElementById(\"synthetic-implementors-list\");\n+        const implementors = document.getElementById(\"implementors-list\");\n+        const synthetic_implementors = document.getElementById(\"synthetic-implementors-list\");\n+        const inlined_types = new Set();\n \n         if (synthetic_implementors) {\n             // This `inlined_types` variable is used to avoid having the same implementation\n             // showing up twice. For example \"String\" in the \"Sync\" doc page.\n             //\n             // By the way, this is only used by and useful for traits implemented automatically\n             // (like \"Send\" and \"Sync\").\n-            var inlined_types = new Set();\n             onEachLazy(synthetic_implementors.getElementsByClassName(\"impl\"), function(el) {\n-                var aliases = el.getAttribute(\"data-aliases\");\n+                const aliases = el.getAttribute(\"data-aliases\");\n                 if (!aliases) {\n                     return;\n                 }\n@@ -659,48 +661,48 @@ function hideThemeButtonState() {\n             });\n         }\n \n-        var currentNbImpls = implementors.getElementsByClassName(\"impl\").length;\n-        var traitName = document.querySelector(\"h1.fqn > .in-band > .trait\").textContent;\n-        var baseIdName = \"impl-\" + traitName + \"-\";\n-        var libs = Object.getOwnPropertyNames(imp);\n-        for (var i = 0, llength = libs.length; i < llength; ++i) {\n-            if (libs[i] === window.currentCrate) { continue; }\n-            var structs = imp[libs[i]];\n+        let currentNbImpls = implementors.getElementsByClassName(\"impl\").length;\n+        const traitName = document.querySelector(\"h1.fqn > .in-band > .trait\").textContent;\n+        const baseIdName = \"impl-\" + traitName + \"-\";\n+        const libs = Object.getOwnPropertyNames(imp);\n+        for (const lib of libs) {\n+            if (lib === window.currentCrate) {\n+                continue;\n+            }\n+            const structs = imp[lib];\n \n             struct_loop:\n-            for (var j = 0, slength = structs.length; j < slength; ++j) {\n-                var struct = structs[j];\n-\n-                var list = struct.synthetic ? synthetic_implementors : implementors;\n+            for (const struct of structs) {\n+                const list = struct.synthetic ? synthetic_implementors : implementors;\n \n                 if (struct.synthetic) {\n-                    for (var k = 0, stlength = struct.types.length; k < stlength; k++) {\n-                        if (inlined_types.has(struct.types[k])) {\n+                    for (const struct_type of struct.types) {\n+                        if (inlined_types.has(struct_type)) {\n                             continue struct_loop;\n                         }\n-                        inlined_types.add(struct.types[k]);\n+                        inlined_types.add(struct_type);\n                     }\n                 }\n \n-                var code = document.createElement(\"h3\");\n+                const code = document.createElement(\"h3\");\n                 code.innerHTML = struct.text;\n                 addClass(code, \"code-header\");\n                 addClass(code, \"in-band\");\n \n                 onEachLazy(code.getElementsByTagName(\"a\"), function(elem) {\n-                    var href = elem.getAttribute(\"href\");\n+                    const href = elem.getAttribute(\"href\");\n \n                     if (href && href.indexOf(\"http\") !== 0) {\n                         elem.setAttribute(\"href\", window.rootPath + href);\n                     }\n                 });\n \n-                var currentId = baseIdName + currentNbImpls;\n-                var anchor = document.createElement(\"a\");\n+                const currentId = baseIdName + currentNbImpls;\n+                const anchor = document.createElement(\"a\");\n                 anchor.href = \"#\" + currentId;\n                 addClass(anchor, \"anchor\");\n \n-                var display = document.createElement(\"div\");\n+                const display = document.createElement(\"div\");\n                 display.id = currentId;\n                 addClass(display, \"impl\");\n                 display.appendChild(anchor);\n@@ -725,11 +727,11 @@ function hideThemeButtonState() {\n     }\n \n     function toggleAllDocs() {\n-        var innerToggle = document.getElementById(toggleAllDocsId);\n+        const innerToggle = document.getElementById(toggleAllDocsId);\n         if (!innerToggle) {\n             return;\n         }\n-        var sectionIsCollapsed = false;\n+        let sectionIsCollapsed = false;\n         if (hasClass(innerToggle, \"will-expand\")) {\n             removeClass(innerToggle, \"will-expand\");\n             onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n@@ -759,17 +761,17 @@ function hideThemeButtonState() {\n     }\n \n     (function() {\n-        var toggles = document.getElementById(toggleAllDocsId);\n+        const toggles = document.getElementById(toggleAllDocsId);\n         if (toggles) {\n             toggles.onclick = toggleAllDocs;\n         }\n \n-        var hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n-        var hideImplementations = getSettingValue(\"auto-hide-trait-implementations\") === \"true\";\n-        var hideLargeItemContents = getSettingValue(\"auto-hide-large-items\") !== \"false\";\n+        const hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n+        const hideImplementations = getSettingValue(\"auto-hide-trait-implementations\") === \"true\";\n+        const hideLargeItemContents = getSettingValue(\"auto-hide-large-items\") !== \"false\";\n \n         function setImplementorsTogglesOpen(id, open) {\n-            var list = document.getElementById(id);\n+            const list = document.getElementById(id);\n             if (list !== null) {\n                 onEachLazy(list.getElementsByClassName(\"implementors-toggle\"), function(e) {\n                     e.open = open;\n@@ -792,23 +794,23 @@ function hideThemeButtonState() {\n \n         });\n \n-        var pageId = getPageId();\n+        const pageId = getPageId();\n         if (pageId !== null) {\n             expandSection(pageId);\n         }\n     }());\n \n     (function() {\n         // To avoid checking on \"rustdoc-line-numbers\" value on every loop...\n-        var lineNumbersFunc = function() {};\n+        let lineNumbersFunc = function() {};\n         if (getSettingValue(\"line-numbers\") === \"true\") {\n             lineNumbersFunc = function(x) {\n-                var count = x.textContent.split(\"\\n\").length;\n-                var elems = [];\n-                for (var i = 0; i < count; ++i) {\n+                const count = x.textContent.split(\"\\n\").length;\n+                const elems = [];\n+                for (let i = 0; i < count; ++i) {\n                     elems.push(i + 1);\n                 }\n-                var node = document.createElement(\"pre\");\n+                const node = document.createElement(\"pre\");\n                 addClass(node, \"line-number\");\n                 node.innerHTML = elems.join(\"\\n\");\n                 x.parentNode.insertBefore(node, x);\n@@ -835,12 +837,12 @@ function hideThemeButtonState() {\n     }());\n \n     function hideSidebar() {\n-        var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n+        const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n         removeClass(sidebar, \"shown\");\n     }\n \n     function handleClick(id, f) {\n-        var elem = document.getElementById(id);\n+        const elem = document.getElementById(id);\n         if (elem) {\n             elem.addEventListener(\"click\", f);\n         }\n@@ -879,10 +881,10 @@ function hideThemeButtonState() {\n         };\n     });\n \n-    var sidebar_menu_toggle = document.getElementsByClassName(\"sidebar-menu-toggle\")[0];\n+    const sidebar_menu_toggle = document.getElementsByClassName(\"sidebar-menu-toggle\")[0];\n     if (sidebar_menu_toggle) {\n         sidebar_menu_toggle.addEventListener(\"click\", function() {\n-            var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n+            const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n             if (!hasClass(sidebar, \"shown\")) {\n                 addClass(sidebar, \"shown\");\n             } else {\n@@ -891,8 +893,8 @@ function hideThemeButtonState() {\n         });\n     }\n \n-    var buildHelperPopup = function() {\n-        var popup = document.createElement(\"aside\");\n+    let buildHelperPopup = function() {\n+        const popup = document.createElement(\"aside\");\n         addClass(popup, \"hidden\");\n         popup.id = \"help\";\n \n@@ -903,13 +905,13 @@ function hideThemeButtonState() {\n             }\n         });\n \n-        var book_info = document.createElement(\"span\");\n+        const book_info = document.createElement(\"span\");\n         book_info.className = \"top\";\n         book_info.innerHTML = \"You can find more information in \\\n             <a href=\\\"https://doc.rust-lang.org/rustdoc/\\\">the rustdoc book</a>.\";\n \n-        var container = document.createElement(\"div\");\n-        var shortcuts = [\n+        const container = document.createElement(\"div\");\n+        const shortcuts = [\n             [\"?\", \"Show this help dialog\"],\n             [\"S\", \"Focus the search field\"],\n             [\"T\", \"Focus the theme picker menu\"],\n@@ -927,11 +929,11 @@ function hideThemeButtonState() {\n                     })\n                     .join(\"\") + \"</dt><dd>\" + x[1] + \"</dd>\";\n         }).join(\"\");\n-        var div_shortcuts = document.createElement(\"div\");\n+        const div_shortcuts = document.createElement(\"div\");\n         addClass(div_shortcuts, \"shortcuts\");\n         div_shortcuts.innerHTML = \"<h2>Keyboard Shortcuts</h2><dl>\" + shortcuts + \"</dl></div>\";\n \n-        var infos = [\n+        const infos = [\n             \"Prefix searches with a type followed by a colon (e.g., <code>fn:</code>) to \\\n              restrict the search to a given item kind.\",\n             \"Accepted kinds are: <code>fn</code>, <code>mod</code>, <code>struct</code>, \\\n@@ -947,17 +949,17 @@ function hideThemeButtonState() {\n         ].map(function(x) {\n             return \"<p>\" + x + \"</p>\";\n         }).join(\"\");\n-        var div_infos = document.createElement(\"div\");\n+        const div_infos = document.createElement(\"div\");\n         addClass(div_infos, \"infos\");\n         div_infos.innerHTML = \"<h2>Search Tricks</h2>\" + infos;\n \n         container.appendChild(book_info);\n         container.appendChild(div_shortcuts);\n         container.appendChild(div_infos);\n \n-        var rustdoc_version = document.createElement(\"span\");\n+        const rustdoc_version = document.createElement(\"span\");\n         rustdoc_version.className = \"bottom\";\n-        var rustdoc_version_code = document.createElement(\"code\");\n+        const rustdoc_version_code = document.createElement(\"code\");\n         rustdoc_version_code.innerText = \"rustdoc \" + getVar(\"rustdoc-version\");\n         rustdoc_version.appendChild(rustdoc_version_code);\n \n@@ -975,19 +977,19 @@ function hideThemeButtonState() {\n }());\n \n (function () {\n-    var reset_button_timeout = null;\n+    let reset_button_timeout = null;\n \n     window.copy_path = function(but) {\n-        var parent = but.parentElement;\n-        var path = [];\n+        const parent = but.parentElement;\n+        const path = [];\n \n         onEach(parent.childNodes, function(child) {\n             if (child.tagName === 'A') {\n                 path.push(child.textContent);\n             }\n         });\n \n-        var el = document.createElement('textarea');\n+        const el = document.createElement('textarea');\n         el.value = path.join('::');\n         el.setAttribute('readonly', '');\n         // To not make it appear on the screen.\n@@ -1002,7 +1004,7 @@ function hideThemeButtonState() {\n         // There is always one children, but multiple childNodes.\n         but.children[0].style.display = 'none';\n \n-        var tmp;\n+        let tmp;\n         if (but.childNodes.length < 2) {\n             tmp = document.createTextNode('\u2713');\n             but.appendChild(tmp);"}]}