{"sha": "48424ea7654bbf1a0b3d747be05b45f799c7e28d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NDI0ZWE3NjU0YmJmMWEwYjNkNzQ3YmUwNWI0NWY3OTljN2UyOGQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-25T22:38:39Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-25T22:38:39Z"}, "message": "Update tests and cargo fmt", "tree": {"sha": "cfbd755de1b57b0a3b9977869e51c4487a2020a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfbd755de1b57b0a3b9977869e51c4487a2020a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48424ea7654bbf1a0b3d747be05b45f799c7e28d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48424ea7654bbf1a0b3d747be05b45f799c7e28d", "html_url": "https://github.com/rust-lang/rust/commit/48424ea7654bbf1a0b3d747be05b45f799c7e28d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48424ea7654bbf1a0b3d747be05b45f799c7e28d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c6f7b7313c0053f822a10ab473f31bf1f480ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/98c6f7b7313c0053f822a10ab473f31bf1f480ef", "html_url": "https://github.com/rust-lang/rust/commit/98c6f7b7313c0053f822a10ab473f31bf1f480ef"}], "stats": {"total": 130, "additions": 46, "deletions": 84}, "files": [{"sha": "da027d10e706f03f4c5f9057cc9ece9e7661044e", "filename": "Configurations.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -1688,7 +1688,8 @@ Number of spaces per tab\n fn lorem() {\n     let ipsum = dolor();\n     let sit = vec![\n-        \"amet consectetur adipiscing elit amet consectetur adipiscing elit amet consectetur.\",\n+        \"amet consectetur adipiscing elit amet\",\n+        \"consectetur adipiscing elit amet consectetur.\",\n     ];\n }\n ```\n@@ -1699,7 +1700,8 @@ fn lorem() {\n fn lorem() {\n   let ipsum = dolor();\n   let sit = vec![\n-    \"amet consectetur adipiscing elit amet consectetur adipiscing elit amet consectetur.\",\n+    \"amet consectetur adipiscing elit amet\",\n+    \"consectetur adipiscing elit amet consectetur.\",\n   ];\n }\n ```"}, {"sha": "20ba0118f5f35d96a62522bba51d0c359892d034", "filename": "src/closures.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -127,13 +127,11 @@ fn rewrite_closure_with_block(\n     }\n \n     let block = ast::Block {\n-        stmts: vec![\n-            ast::Stmt {\n-                id: ast::NodeId::new(0),\n-                node: ast::StmtKind::Expr(ptr::P(body.clone())),\n-                span: body.span,\n-            },\n-        ],\n+        stmts: vec![ast::Stmt {\n+            id: ast::NodeId::new(0),\n+            node: ast::StmtKind::Expr(ptr::P(body.clone())),\n+            span: body.span,\n+        }],\n         id: ast::NodeId::new(0),\n         rules: ast::BlockCheckMode::Default,\n         span: body.span,\n@@ -300,13 +298,7 @@ pub fn rewrite_last_closure(\n             _ => body,\n         };\n         let (prefix, extra_offset) = rewrite_closure_fn_decl(\n-            capture,\n-            movability,\n-            fn_decl,\n-            body,\n-            expr.span,\n-            context,\n-            shape,\n+            capture, movability, fn_decl, body, expr.span, context, shape,\n         )?;\n         // If the closure goes multi line before its body, do not overflow the closure.\n         if prefix.contains('\\n') {"}, {"sha": "14ba8d0f7a0878c7e301a6bf579c3139b59351eb", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -173,13 +173,7 @@ pub fn format_expr(\n         },\n         ast::ExprKind::Closure(capture, movability, ref fn_decl, ref body, _) => {\n             closures::rewrite_closure(\n-                capture,\n-                movability,\n-                fn_decl,\n-                body,\n-                expr.span,\n-                context,\n-                shape,\n+                capture, movability, fn_decl, body, expr.span, context, shape,\n             )\n         }\n         ast::ExprKind::Try(..)"}, {"sha": "402f7ab507ab7148df6adb6ceded5bd805c27857", "filename": "src/format-diff/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Fformat-diff%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Fformat-diff%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformat-diff%2Fmain.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -261,7 +261,7 @@ fn scan_simple_git_diff() {\n             Range {\n                 file: \"src/ir/traversal.rs\".to_owned(),\n                 range: [35, 43],\n-            }\n+            },\n         ]\n     );\n }"}, {"sha": "d5c97b95560daed89097e90335c1ccc21e4fec4a", "filename": "src/rustfmt_diff.rs", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Frustfmt_diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/src%2Frustfmt_diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustfmt_diff.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -221,18 +221,16 @@ mod test {\n         let diff = make_diff(src, dest, 1);\n         assert_eq!(\n             diff,\n-            vec![\n-                Mismatch {\n-                    line_number: 2,\n-                    line_number_orig: 2,\n-                    lines: vec![\n-                        Context(\"two\".to_owned()),\n-                        Resulting(\"three\".to_owned()),\n-                        Expected(\"trois\".to_owned()),\n-                        Context(\"four\".to_owned()),\n-                    ],\n-                },\n-            ]\n+            vec![Mismatch {\n+                line_number: 2,\n+                line_number_orig: 2,\n+                lines: vec![\n+                    Context(\"two\".to_owned()),\n+                    Resulting(\"three\".to_owned()),\n+                    Expected(\"trois\".to_owned()),\n+                    Context(\"four\".to_owned()),\n+                ],\n+            }]\n         );\n     }\n \n@@ -274,13 +272,11 @@ mod test {\n         let diff = make_diff(src, dest, 0);\n         assert_eq!(\n             diff,\n-            vec![\n-                Mismatch {\n-                    line_number: 3,\n-                    line_number_orig: 3,\n-                    lines: vec![Resulting(\"three\".to_owned()), Expected(\"trois\".to_owned())],\n-                },\n-            ]\n+            vec![Mismatch {\n+                line_number: 3,\n+                line_number_orig: 3,\n+                lines: vec![Resulting(\"three\".to_owned()), Expected(\"trois\".to_owned())],\n+            }]\n         );\n     }\n \n@@ -291,13 +287,11 @@ mod test {\n         let diff = make_diff(src, dest, 1);\n         assert_eq!(\n             diff,\n-            vec![\n-                Mismatch {\n-                    line_number: 5,\n-                    line_number_orig: 5,\n-                    lines: vec![Context(\"five\".to_owned()), Expected(\"\".to_owned())],\n-                },\n-            ]\n+            vec![Mismatch {\n+                line_number: 5,\n+                line_number_orig: 5,\n+                lines: vec![Context(\"five\".to_owned()), Expected(\"\".to_owned())],\n+            }]\n         );\n     }\n }"}, {"sha": "3b73247f7f8872cd578da5c85ffdb17dbe1cf9fb", "filename": "tests/lib.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Flib.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -540,19 +540,17 @@ fn rustfmt_diff_make_diff_tests() {\n     let diff = make_diff(\"a\\nb\\nc\\nd\", \"a\\ne\\nc\\nd\", 3);\n     assert_eq!(\n         diff,\n-        vec![\n-            Mismatch {\n-                line_number: 1,\n-                line_number_orig: 1,\n-                lines: vec![\n-                    DiffLine::Context(\"a\".into()),\n-                    DiffLine::Resulting(\"b\".into()),\n-                    DiffLine::Expected(\"e\".into()),\n-                    DiffLine::Context(\"c\".into()),\n-                    DiffLine::Context(\"d\".into()),\n-                ],\n-            },\n-        ]\n+        vec![Mismatch {\n+            line_number: 1,\n+            line_number_orig: 1,\n+            lines: vec![\n+                DiffLine::Context(\"a\".into()),\n+                DiffLine::Resulting(\"b\".into()),\n+                DiffLine::Expected(\"e\".into()),\n+                DiffLine::Context(\"c\".into()),\n+                DiffLine::Context(\"d\".into()),\n+            ],\n+        }]\n     );\n }\n "}, {"sha": "d3e3cad5ebbd7c4e227e609af56c44088fa4bbc2", "filename": "tests/target/chains.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -233,10 +233,7 @@ impl Foo {\n                         if let Some(mi) = attr.meta() {\n                             if let Some(value) = mi.value_str() {\n                                 doc_strings.push(DocFragment::Include(\n-                                    line,\n-                                    attr.span,\n-                                    filename,\n-                                    contents,\n+                                    line, attr.span, filename, contents,\n                                 ));\n                             }\n                         }"}, {"sha": "2bec429e8c82cb2e92d349e072259629a98d27b6", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -114,19 +114,7 @@ fn function_calls() {\n \n fn macros() {\n     baz!(\n-        do_not,\n-        add,\n-        trailing,\n-        commas,\n-        inside,\n-        of,\n-        function,\n-        like,\n-        macros,\n-        even,\n-        if_they,\n-        are,\n-        long\n+        do_not, add, trailing, commas, inside, of, function, like, macros, even, if_they, are, long\n     );\n \n     baz!(one_item_macro_which_is_also_loooooooooooooooooooooooooooooooooooooooooooooooong);"}, {"sha": "fe565f4c1540bf4e082881427ab173659587794b", "filename": "tests/target/match.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48424ea7654bbf1a0b3d747be05b45f799c7e28d/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=48424ea7654bbf1a0b3d747be05b45f799c7e28d", "patch": "@@ -218,10 +218,7 @@ fn issue355() {\n         xc => vec![1, 2],       // comment\n         yc => vec![3; 4],       // comment\n         yd => looooooooooooooooooooooooooooooooooooooooooooooooooooooooong_func(\n-            aaaaaaaaaa,\n-            bbbbbbbbbb,\n-            cccccccccc,\n-            dddddddddd,\n+            aaaaaaaaaa, bbbbbbbbbb, cccccccccc, dddddddddd,\n         ),\n     }\n }"}]}