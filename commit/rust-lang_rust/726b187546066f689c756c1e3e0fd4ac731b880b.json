{"sha": "726b187546066f689c756c1e3e0fd4ac731b880b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNmIxODc1NDYwNjZmNjg5Yzc1NmMxZTNlMGZkNGFjNzMxYjg4MGI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-02T03:54:17Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-02T03:54:17Z"}, "message": "Use intra-doc links for `MaybeUninit` in `boxed.rs`", "tree": {"sha": "6cf40caea9b66c1dbe1df16fb0fb79782771e86a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cf40caea9b66c1dbe1df16fb0fb79782771e86a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/726b187546066f689c756c1e3e0fd4ac731b880b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/726b187546066f689c756c1e3e0fd4ac731b880b", "html_url": "https://github.com/rust-lang/rust/commit/726b187546066f689c756c1e3e0fd4ac731b880b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/726b187546066f689c756c1e3e0fd4ac731b880b/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cafab51b291405772e55849fd8ab1868746a4c55", "url": "https://api.github.com/repos/rust-lang/rust/commits/cafab51b291405772e55849fd8ab1868746a4c55", "html_url": "https://github.com/rust-lang/rust/commit/cafab51b291405772e55849fd8ab1868746a4c55"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5c8c2c5a5a8682654b82423a4759b52c1682199b", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/726b187546066f689c756c1e3e0fd4ac731b880b/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/726b187546066f689c756c1e3e0fd4ac731b880b/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=726b187546066f689c756c1e3e0fd4ac731b880b", "patch": "@@ -217,7 +217,7 @@ impl<T> Box<T> {\n     /// assert_eq!(*zero, 0)\n     /// ```\n     ///\n-    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n+    /// [zeroed]: mem::MaybeUninit::zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed() -> Box<mem::MaybeUninit<T>> {\n         let layout = alloc::Layout::new::<mem::MaybeUninit<T>>();\n@@ -289,7 +289,7 @@ impl<T> Box<[T]> {\n     /// assert_eq!(*values, [0, 0, 0])\n     /// ```\n     ///\n-    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n+    /// [zeroed]: mem::MaybeUninit::zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed_slice(len: usize) -> Box<[mem::MaybeUninit<T>]> {\n         unsafe { RawVec::with_capacity_zeroed(len).into_box(len) }\n@@ -307,7 +307,7 @@ impl<T> Box<mem::MaybeUninit<T>> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n+    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::assume_init\n     ///\n     /// # Examples\n     ///\n@@ -343,7 +343,7 @@ impl<T> Box<[mem::MaybeUninit<T>]> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n+    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::assume_init\n     ///\n     /// # Examples\n     ///"}]}