{"sha": "52cc85f0084d335e67765e385b9a4c35cda87a48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyY2M4NWYwMDg0ZDMzNWU2Nzc2NWUzODViOWE0YzM1Y2RhODdhNDg=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2019-10-04T13:44:24Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2019-12-02T13:30:30Z"}, "message": "Address nits and remove unneeded pass", "tree": {"sha": "66469aa66ed92de2dc9f1085d3873af65972349c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66469aa66ed92de2dc9f1085d3873af65972349c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52cc85f0084d335e67765e385b9a4c35cda87a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52cc85f0084d335e67765e385b9a4c35cda87a48", "html_url": "https://github.com/rust-lang/rust/commit/52cc85f0084d335e67765e385b9a4c35cda87a48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52cc85f0084d335e67765e385b9a4c35cda87a48/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94414ac7bba05377468ef0b7c775df6e87535ddd", "url": "https://api.github.com/repos/rust-lang/rust/commits/94414ac7bba05377468ef0b7c775df6e87535ddd", "html_url": "https://github.com/rust-lang/rust/commit/94414ac7bba05377468ef0b7c775df6e87535ddd"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ebfadd0cfd3ed61064bad8cf213644b782a663b0", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52cc85f0084d335e67765e385b9a4c35cda87a48/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc85f0084d335e67765e385b9a4c35cda87a48/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=52cc85f0084d335e67765e385b9a4c35cda87a48", "patch": "@@ -496,7 +496,7 @@ impl Inliner<'tcx> {\n                     kind: TerminatorKind::Goto { target: BasicBlock::new(bb_len) }\n                 };\n \n-                caller_body[callsite.bb].terminator= Some(terminator);\n+                caller_body[callsite.bb].terminator = Some(terminator);\n \n                 true\n             }"}, {"sha": "156ef4c3b8a9bb9e4f6237f2c5c2364f550ed183", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52cc85f0084d335e67765e385b9a4c35cda87a48/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc85f0084d335e67765e385b9a4c35cda87a48/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=52cc85f0084d335e67765e385b9a4c35cda87a48", "patch": "@@ -297,8 +297,6 @@ fn run_optimization_passes<'tcx>(\n         &uniform_array_move_out::RestoreSubsliceArrayMoveOut::new(tcx),\n         &inline::Inline,\n \n-        // State transform requires that predecessors have been predefined\n-        &ensure_predecessors_cache::EnsurePredecessorsCache::new(\"pre-state-transform\"),\n         // Lowering generator control-flow and variables\n         // has to happen before we do anything else to them.\n         &generator::StateTransform,"}, {"sha": "040bc5c309a9bbe96d2fd71f8563ba9f75cabc62", "filename": "src/librustc_mir/transform/simplify.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/52cc85f0084d335e67765e385b9a4c35cda87a48/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cc85f0084d335e67765e385b9a4c35cda87a48/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs?ref=52cc85f0084d335e67765e385b9a4c35cda87a48", "patch": "@@ -124,11 +124,9 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n                     changed |= inner_changed;\n                 }\n \n-                {\n-                    let data = &mut self.basic_blocks[bb];\n-                    data.statements.extend(new_stmts);\n-                    data.terminator = Some(terminator);\n-                }\n+                let data = &mut self.basic_blocks[bb];\n+                data.statements.extend(new_stmts);\n+                data.terminator = Some(terminator);\n \n                 changed |= inner_changed;\n             }"}]}