{"sha": "f9d92d219d266c3161367cc694743e9c0e6d55c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZDkyZDIxOWQyNjZjMzE2MTM2N2NjNjk0NzQzZTljMGU2ZDU1Yzc=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2017-09-22T04:52:59Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2017-09-22T04:53:04Z"}, "message": "Less confusing placeholder when RefCell is exclusively borrowed\n\nBased on ExpHP's comment in\nhttps://users.rust-lang.org/t/refcell-borrow-mut-get-strange-result/12994\n\n> it would perhaps be nicer if it didn't put something that could be\n> misinterpreted as a valid string value\n\nThe previous Debug implementation would show:\n\n    RefCell { value: \"<borrowed>\" }\n\nThe new one is:\n\n    RefCell { value: <borrowed> }", "tree": {"sha": "3107941ae2fa191845c08bf1eebf6c84e5a03bd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3107941ae2fa191845c08bf1eebf6c84e5a03bd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9d92d219d266c3161367cc694743e9c0e6d55c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJZxJeeAAoJEPm6FDuV/22CO+AP/3OMM6j/dfdNIHyu7NPymDso\nRPP8PUgUSDcN7gzIJzU+4PjXNdUEZgr0Md5jRTEu17tWqeWo1/YQr9K94jrC143A\n9nFuLuXTg1q74WakrN55BP+MTQF1EbsPArEd/s/aBFkUEfPZqW1SWQtWlpef5gJT\nrjoG/HhoYYjAtzrAgDytTw6VDdcENO7G/2S1aUEJkqw7ZeVvGazUzO5IyYrOYbqZ\nmXwmikASlkdp6Oy2FdBwtktEHxqpHuUgvz++I3vAiVAx4ZDx1zfETfAej0LZfX+k\nSBPGZH0I+GjLMR/7f4KjiYxqQP2+mPgvfVrf/qievU/rklSInc5V7bBdIEW9t5gD\n61ZhfGVGgis2HVSiw5BfGRw4VbiDepcxF4BV3iSz/liG4IPZrjoqwZNxKR/A+yLx\nim3rQdFgUGxP7U1uhv93y/zPRVjsF2AwGAtinFjH7m4Od6zcOXkz5ItkT/RkH7nP\nBcrmMd5zPSFVHZ4ynU1d1PvoY5Kvrwxm0BsSIamt9Tlz9kWm27WxkXg+Kd0ivWBQ\nbXF3di47zAVL6P7m/bXxPV7U3ZNm8qYaGeYUuCuzEW7hXQY3GeQqjzbN0xSFsG7u\ngEbhkyzdNGyJsDEzqCWzLxT9ALvEVjBbCarJrdVj40xNmSOVRpTlpbMJhTEvWrxN\nRy2ZTZt7unti7FJZCm47\n=K+Ll\n-----END PGP SIGNATURE-----", "payload": "tree 3107941ae2fa191845c08bf1eebf6c84e5a03bd4\nparent 17600c1ea77ad8709ea072ad1b258bf9398b9d38\nauthor David Tolnay <dtolnay@gmail.com> 1506055979 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1506055984 -0700\n\nLess confusing placeholder when RefCell is exclusively borrowed\n\nBased on ExpHP's comment in\nhttps://users.rust-lang.org/t/refcell-borrow-mut-get-strange-result/12994\n\n> it would perhaps be nicer if it didn't put something that could be\n> misinterpreted as a valid string value\n\nThe previous Debug implementation would show:\n\n    RefCell { value: \"<borrowed>\" }\n\nThe new one is:\n\n    RefCell { value: <borrowed> }\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9d92d219d266c3161367cc694743e9c0e6d55c7", "html_url": "https://github.com/rust-lang/rust/commit/f9d92d219d266c3161367cc694743e9c0e6d55c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9d92d219d266c3161367cc694743e9c0e6d55c7/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17600c1ea77ad8709ea072ad1b258bf9398b9d38", "url": "https://api.github.com/repos/rust-lang/rust/commits/17600c1ea77ad8709ea072ad1b258bf9398b9d38", "html_url": "https://github.com/rust-lang/rust/commit/17600c1ea77ad8709ea072ad1b258bf9398b9d38"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "b84a1deb61144adc062dd605e77962192532a2eb", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f9d92d219d266c3161367cc694743e9c0e6d55c7/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d92d219d266c3161367cc694743e9c0e6d55c7/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=f9d92d219d266c3161367cc694743e9c0e6d55c7", "patch": "@@ -1700,8 +1700,18 @@ impl<T: ?Sized + Debug> Debug for RefCell<T> {\n                     .finish()\n             }\n             Err(_) => {\n+                // The RefCell is mutably borrowed so we can't look at its value\n+                // here. Show a placeholder instead.\n+                struct BorrowedPlaceholder;\n+\n+                impl Debug for BorrowedPlaceholder {\n+                    fn fmt(&self, f: &mut Formatter) -> Result {\n+                        f.write_str(\"<borrowed>\")\n+                    }\n+                }\n+\n                 f.debug_struct(\"RefCell\")\n-                    .field(\"value\", &\"<borrowed>\")\n+                    .field(\"value\", &BorrowedPlaceholder)\n                     .finish()\n             }\n         }"}, {"sha": "08e9990511fbbe90f49e568e6d6e79526dbb68a5", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f9d92d219d266c3161367cc694743e9c0e6d55c7/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d92d219d266c3161367cc694743e9c0e6d55c7/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=f9d92d219d266c3161367cc694743e9c0e6d55c7", "patch": "@@ -13,6 +13,7 @@\n #![allow(unused_features)]\n #![feature(box_syntax)]\n \n+use std::cell::RefCell;\n use std::fmt::{self, Write};\n use std::usize;\n \n@@ -240,6 +241,8 @@ pub fn main() {\n     // test that trailing commas are acceptable\n     format!(\"{}\", \"test\",);\n     format!(\"{foo}\", foo=\"test\",);\n+\n+    test_refcell();\n }\n \n // Basic test to make sure that we can invoke the `write!` macro with an\n@@ -319,3 +322,12 @@ fn test_once() {\n     assert_eq!(format!(\"{0} {0} {0} {a} {a} {a}\", foo(), a=foo()),\n                \"1 1 1 2 2 2\".to_string());\n }\n+\n+fn test_refcell() {\n+    let refcell = RefCell::new(5);\n+    assert_eq!(format!(\"{:?}\", refcell), \"RefCell { value: 5 }\");\n+    let borrow = refcell.borrow_mut();\n+    assert_eq!(format!(\"{:?}\", refcell), \"RefCell { value: <borrowed> }\");\n+    drop(borrow);\n+    assert_eq!(format!(\"{:?}\", refcell), \"RefCell { value: 5 }\");\n+}"}]}