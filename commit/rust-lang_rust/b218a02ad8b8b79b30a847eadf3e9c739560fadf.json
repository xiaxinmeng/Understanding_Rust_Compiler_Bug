{"sha": "b218a02ad8b8b79b30a847eadf3e9c739560fadf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMThhMDJhZDhiOGI3OWIzMGE4NDdlYWRmM2U5YzczOTU2MGZhZGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-26T18:16:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-26T18:16:15Z"}, "message": "Auto merge of #45519 - michaelwoerister:dedup-errors, r=arielb1\n\nDon't emit the same compiler diagnostic twice.\n\nThis PR makes the compiler filter out diagnostic messages that have already been emitted during the same compilation session.", "tree": {"sha": "7b6c98cf121a175eb959f22653c3403d104f8ea5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b6c98cf121a175eb959f22653c3403d104f8ea5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b218a02ad8b8b79b30a847eadf3e9c739560fadf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b218a02ad8b8b79b30a847eadf3e9c739560fadf", "html_url": "https://github.com/rust-lang/rust/commit/b218a02ad8b8b79b30a847eadf3e9c739560fadf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b218a02ad8b8b79b30a847eadf3e9c739560fadf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0b80f8c2299cccd7a4f22ee3cc1a2ca823eaa31", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0b80f8c2299cccd7a4f22ee3cc1a2ca823eaa31", "html_url": "https://github.com/rust-lang/rust/commit/b0b80f8c2299cccd7a4f22ee3cc1a2ca823eaa31"}, {"sha": "9736474b6c3d3ce82587745723f09aca8f987c00", "url": "https://api.github.com/repos/rust-lang/rust/commits/9736474b6c3d3ce82587745723f09aca8f987c00", "html_url": "https://github.com/rust-lang/rust/commit/9736474b6c3d3ce82587745723f09aca8f987c00"}], "stats": {"total": 237, "additions": 83, "deletions": 154}, "files": [{"sha": "4dae5e89088f6b8e15f5a5888b277648865aa3d4", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1681,6 +1681,7 @@ dependencies = [\n name = \"rustc_errors\"\n version = \"0.0.0\"\n dependencies = [\n+ \"rustc_data_structures 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]"}, {"sha": "15c9fc2e504a1fd4accdc69bb64eac7502b3521d", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -74,7 +74,7 @@\n \n ENUM_TUPLE, ENUM_STRUCT, STRUCT_FIELDS, STRUCT_TUPLE = range(4)\n \n-def create_test_case(type, trait, super_traits, number_of_errors):\n+def create_test_case(type, trait, super_traits, error_count):\n     string = [ENUM_STRING, ENUM_STRUCT_VARIANT_STRING, STRUCT_STRING, STRUCT_TUPLE_STRING][type]\n     all_traits = ','.join([trait] + super_traits)\n     super_traits = ','.join(super_traits)\n@@ -113,7 +113,7 @@ def write_file(name, string):\n \n for (trait, supers, errs) in [('Clone', [], 1),\n                               ('PartialEq', [], 2),\n-                              ('PartialOrd', ['PartialEq'], 9),\n+                              ('PartialOrd', ['PartialEq'], 3),\n                               ('Eq', ['PartialEq'], 1),\n                               ('Ord', ['Eq', 'PartialOrd', 'PartialEq'], 1),\n                               ('Debug', [], 1),"}, {"sha": "c72e9dd0ea3226c5630eb0922861308f5b03a4a9", "filename": "src/librustc_errors/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2FCargo.toml?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -11,3 +11,4 @@ crate-type = [\"dylib\"]\n [dependencies]\n serialize = { path = \"../libserialize\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "5e0e624082e6fafe787262552b3ee3cb30c27176", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -17,7 +17,7 @@ use syntax_pos::{MultiSpan, Span};\n use snippet::Style;\n \n #[must_use]\n-#[derive(Clone, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n pub struct Diagnostic {\n     pub level: Level,\n     pub message: Vec<(String, Style)>,\n@@ -28,7 +28,7 @@ pub struct Diagnostic {\n }\n \n /// For example a note attached to an error.\n-#[derive(Clone, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n pub struct SubDiagnostic {\n     pub level: Level,\n     pub message: Vec<(String, Style)>,"}, {"sha": "ba7268a4bc39398fa13930463481c0d8d7d26518", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -18,10 +18,12 @@\n #![feature(range_contains)]\n #![cfg_attr(unix, feature(libc))]\n #![feature(conservative_impl_trait)]\n+#![feature(i128_type)]\n \n extern crate term;\n #[cfg(unix)]\n extern crate libc;\n+extern crate rustc_data_structures;\n extern crate serialize as rustc_serialize;\n extern crate syntax_pos;\n \n@@ -31,6 +33,9 @@ use self::Level::*;\n \n use emitter::{Emitter, EmitterWriter};\n \n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::stable_hasher::StableHasher;\n+\n use std::borrow::Cow;\n use std::cell::{RefCell, Cell};\n use std::mem;\n@@ -47,7 +52,7 @@ mod lock;\n \n use syntax_pos::{BytePos, Loc, FileLinesResult, FileMap, FileName, MultiSpan, Span, NO_EXPANSION};\n \n-#[derive(Clone, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n pub enum RenderSpan {\n     /// A FullSpan renders with both with an initial line for the\n     /// message, prefixed by file:linenum, followed by a summary of\n@@ -61,7 +66,7 @@ pub enum RenderSpan {\n     Suggestion(CodeSuggestion),\n }\n \n-#[derive(Clone, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n pub struct CodeSuggestion {\n     /// Each substitute can have multiple variants due to multiple\n     /// applicable suggestions\n@@ -86,7 +91,7 @@ pub struct CodeSuggestion {\n     pub show_code_when_inline: bool,\n }\n \n-#[derive(Clone, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n /// See the docs on `CodeSuggestion::substitutions`\n pub struct Substitution {\n     pub span: Span,\n@@ -271,6 +276,11 @@ pub struct Handler {\n     continue_after_error: Cell<bool>,\n     delayed_span_bug: RefCell<Option<Diagnostic>>,\n     tracked_diagnostics: RefCell<Option<Vec<Diagnostic>>>,\n+\n+    // This set contains a hash of every diagnostic that has been emitted by\n+    // this handler. These hashes is used to avoid emitting the same error\n+    // twice.\n+    emitted_diagnostics: RefCell<FxHashSet<u128>>,\n }\n \n impl Handler {\n@@ -295,6 +305,7 @@ impl Handler {\n             continue_after_error: Cell::new(true),\n             delayed_span_bug: RefCell::new(None),\n             tracked_diagnostics: RefCell::new(None),\n+            emitted_diagnostics: RefCell::new(FxHashSet()),\n         }\n     }\n \n@@ -559,15 +570,29 @@ impl Handler {\n     }\n \n     fn emit_db(&self, db: &DiagnosticBuilder) {\n+        let diagnostic = &**db;\n+\n         if let Some(ref mut list) = *self.tracked_diagnostics.borrow_mut() {\n-            list.push((**db).clone());\n+            list.push(diagnostic.clone());\n+        }\n+\n+        let diagnostic_hash = {\n+            use std::hash::Hash;\n+            let mut hasher = StableHasher::new();\n+            diagnostic.hash(&mut hasher);\n+            hasher.finish()\n+        };\n+\n+        // Only emit the diagnostic if we haven't already emitted an equivalent\n+        // one:\n+        if self.emitted_diagnostics.borrow_mut().insert(diagnostic_hash) {\n+            self.emitter.borrow_mut().emit(db);\n         }\n-        self.emitter.borrow_mut().emit(db);\n     }\n }\n \n \n-#[derive(Copy, PartialEq, Clone, Debug, RustcEncodable, RustcDecodable)]\n+#[derive(Copy, PartialEq, Clone, Hash, Debug, RustcEncodable, RustcDecodable)]\n pub enum Level {\n     Bug,\n     Fatal,"}, {"sha": "2e8deeee5a599203a7c17bd76c867f705b9cc8dd", "filename": "src/librustc_errors/snippet.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2Fsnippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Flibrustc_errors%2Fsnippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fsnippet.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -203,7 +203,7 @@ pub struct StyledString {\n     pub style: Style,\n }\n \n-#[derive(Copy, Clone, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n+#[derive(Copy, Clone, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n pub enum Style {\n     HeaderMsg,\n     LineAndColumn,"}, {"sha": "726a6f8c6feb452948f2367be61a8a477bafef7c", "filename": "src/test/compile-fail/E0017.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2FE0017.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2FE0017.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0017.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -13,15 +13,9 @@ const C: i32 = 2;\n \n const CR: &'static mut i32 = &mut C; //~ ERROR E0017\n                                      //~| NOTE constants require immutable values\n-                                     //~| ERROR E0017\n-                                     //~| NOTE constants require immutable values\n static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n-                                              //~| NOTE statics require immutable values\n-                                              //~| ERROR E0017\n                                               //~| NOTE statics require immutable values\n                                               //~| ERROR cannot borrow\n static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n                                              //~| NOTE statics require immutable values\n-                                             //~| ERROR E0017\n-                                             //~| NOTE statics require immutable values\n fn main() {}"}, {"sha": "c002badfef64c34d4fc15e9902d08c65ddd6d526", "filename": "src/test/compile-fail/E0388.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2FE0388.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2FE0388.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0388.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -12,11 +12,8 @@ static X: i32 = 1;\n const C: i32 = 2;\n \n const CR: &'static mut i32 = &mut C; //~ ERROR E0017\n-                                     //~| ERROR E0017\n static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n-                                              //~| ERROR E0017\n                                               //~| ERROR cannot borrow\n static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n-                                             //~| ERROR E0017\n \n fn main() {}"}, {"sha": "41f3e472cd125596078db87236915af96f336bef", "filename": "src/test/compile-fail/borrowck/borrowck-overloaded-call.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-overloaded-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-overloaded-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-overloaded-call.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -67,7 +67,6 @@ fn f() {\n     };\n     let sp = &mut s;\n     s(3);   //~ ERROR cannot borrow `s` as immutable because it is also borrowed as mutable\n-    //~^ ERROR cannot borrow `s` as immutable because it is also borrowed as mutable\n }\n \n fn g() {"}, {"sha": "4813b4b6a72cd127539c5a83499786437360c209", "filename": "src/test/compile-fail/borrowck/borrowck-unboxed-closures.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-unboxed-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-unboxed-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-unboxed-closures.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -11,7 +11,6 @@\n fn a<F:Fn(isize, isize) -> isize>(mut f: F) {\n     let g = &mut f;\n     f(1, 2);    //~ ERROR cannot borrow `f` as immutable\n-    //~^ ERROR cannot borrow `f` as immutable\n }\n \n fn b<F:FnMut(isize, isize) -> isize>(f: F) {"}, {"sha": "1804b9e04c2c90eee2fa06afa026a2b5b005f6a5", "filename": "src/test/compile-fail/check-static-immutable-mut-slices.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fcheck-static-immutable-mut-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fcheck-static-immutable-mut-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcheck-static-immutable-mut-slices.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -12,6 +12,5 @@\n \n static TEST: &'static mut [isize] = &mut [];\n //~^ ERROR references in statics may only refer to immutable values\n-//~^^ ERROR references in statics may only refer to immutable values\n \n pub fn main() { }"}, {"sha": "e65194ab56f982d15d701ae06804e231b0081e19", "filename": "src/test/compile-fail/const-err.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -24,17 +24,14 @@ fn black_box<T>(_: T) {\n const FOO: u8 = [5u8][1];\n //~^ ERROR constant evaluation error\n //~| index out of bounds: the len is 1 but the index is 1\n-//~^^^ ERROR constant evaluation error\n-//~| index out of bounds: the len is 1 but the index is 1\n \n fn main() {\n     let a = -std::i8::MIN;\n     //~^ WARN this expression will panic at run-time\n     //~| attempt to negate with overflow\n     let b = 200u8 + 200u8 + 200u8;\n     //~^ WARN this expression will panic at run-time\n-    //~| attempt to add with overflow\n-    //~^^^ WARN this expression will panic at run-time\n+    //~^^ WARN this expression will panic at run-time\n     //~| attempt to add with overflow\n     let c = 200u8 * 4;\n     //~^ WARN this expression will panic at run-time"}, {"sha": "9889ca1392ac16e665a0c7924c5329eb4e24acc5", "filename": "src/test/compile-fail/const-err2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -21,7 +21,6 @@ fn main() {\n     //~^ ERROR attempt to negate with overflow\n     let b = 200u8 + 200u8 + 200u8;\n     //~^ ERROR attempt to add with overflow\n-    //~| ERROR attempt to add with overflow\n     let c = 200u8 * 4;\n     //~^ ERROR attempt to multiply with overflow\n     let d = 42u8 - (42u8 + 1);"}, {"sha": "e6caeb34a8c8f30fddd833c1140200f73f2ea113", "filename": "src/test/compile-fail/cycle-trait-default-type-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fcycle-trait-default-type-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fcycle-trait-default-type-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcycle-trait-default-type-trait.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -13,7 +13,6 @@\n \n trait Foo<X = Box<Foo>> {\n     //~^ ERROR unsupported cyclic reference\n-    //~| ERROR unsupported cyclic reference\n }\n \n fn main() { }"}, {"sha": "244acbf6605330da4e1e24e5d8b09c5ecd89744e", "filename": "src/test/compile-fail/derives-span-Clone-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-enum-struct-variant.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "785a3d35430885290ab5e5f949ec309c50491ece", "filename": "src/test/compile-fail/derives-span-Clone-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-enum.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "b1b1dc7bed16251956ef532f7651528cf0cab465", "filename": "src/test/compile-fail/derives-span-Clone-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "d56e21b9a8af2cba1531575414d8fdc01d046ef9", "filename": "src/test/compile-fail/derives-span-Clone-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Clone-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "4c25e482c2a68ed1b97d8a56195e9cdda9f846c1", "filename": "src/test/compile-fail/derives-span-Debug-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-enum-struct-variant.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "0cb02aa54e69db2140fcfb1ecc21bac9d23d8d0d", "filename": "src/test/compile-fail/derives-span-Debug-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-enum.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "33fa82355ec677e69698ad4f8ed3c6a36dfa685d", "filename": "src/test/compile-fail/derives-span-Debug-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "760ed199f6abd542b1d9f4e2c01e14fa8d412514", "filename": "src/test/compile-fail/derives-span-Debug-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Debug-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "4adfe75adaf918037b9716d96dafd6c20e186dff", "filename": "src/test/compile-fail/derives-span-Default-struct.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Default-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Default-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Default-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -15,7 +15,7 @@ struct Error;\n \n #[derive(Default)]\n struct Struct {\n-    x: Error //~ ERROR `Error: std::default::Default` is not satisfied\n+    x: Error //~ ERROR\n }\n \n fn main() {}"}, {"sha": "a5e3a7cd49f8105e49098a1411f5164127d76e0c", "filename": "src/test/compile-fail/derives-span-Default-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Default-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Default-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Default-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "6abd1d31e66150032e08e4f07ff06762549617c7", "filename": "src/test/compile-fail/derives-span-Eq-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-enum-struct-variant.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "f361278a620f4a5b5f25d09d82087c48ec7b3191", "filename": "src/test/compile-fail/derives-span-Eq-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-enum.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "7067caa6d5cca64fe1c2ae5bbb7d85802406d6b5", "filename": "src/test/compile-fail/derives-span-Eq-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "1a09628b7709191d294ed0d3a15e4d638b9d3f32", "filename": "src/test/compile-fail/derives-span-Eq-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Eq-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "907045cce47d5336b464291931c2dd7ccb57cdc7", "filename": "src/test/compile-fail/derives-span-Hash-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-enum-struct-variant.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "321b9e71a0f297ba7bbaaa28e6c868ad0cf4cdf0", "filename": "src/test/compile-fail/derives-span-Hash-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-enum.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "7f69c3a8e2565eb3ab611f03fbf3ff76da01a099", "filename": "src/test/compile-fail/derives-span-Hash-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "2dee63c4298d0788d722f466eddcfacfa2ae07f1", "filename": "src/test/compile-fail/derives-span-Hash-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Hash-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "8f4e393c96a41ded54898d461dc721d123bea5b6", "filename": "src/test/compile-fail/derives-span-Ord-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-enum-struct-variant.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "b8ceacf3753ef72f3d7a9e816be6c2b01824e4e1", "filename": "src/test/compile-fail/derives-span-Ord-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-enum.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "2ff62bac2bce18f11df7394095d7551071aeb343", "filename": "src/test/compile-fail/derives-span-Ord-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "24eacb71d7b4a26ba178cf733f4dcdd61acb5232", "filename": "src/test/compile-fail/derives-span-Ord-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-Ord-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "14d94f1599e5f47b8de2f3d185520fa84d79fb6c", "filename": "src/test/compile-fail/derives-span-PartialEq-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-enum-struct-variant.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "ab58bb938b9dde352b8029f45bdb031522814965", "filename": "src/test/compile-fail/derives-span-PartialEq-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-enum.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "05a0990ff035af308c6c0d0473be85cc0f192851", "filename": "src/test/compile-fail/derives-span-PartialEq-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "cdeb7ce45bc4cac061502db444e02c35a21c8dd7", "filename": "src/test/compile-fail/derives-span-PartialEq-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialEq-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "cf3d69bc16c43da5c758acd95626570e1fc7b807", "filename": "src/test/compile-fail/derives-span-PartialOrd-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-enum-struct-variant.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -19,12 +19,6 @@ enum Enum {\n      x: Error //~ ERROR\n //~^ ERROR\n //~^^ ERROR\n-//~^^^ ERROR\n-//~^^^^ ERROR\n-//~^^^^^ ERROR\n-//~^^^^^^ ERROR\n-//~^^^^^^^ ERROR\n-//~^^^^^^^^ ERROR\n    }\n }\n "}, {"sha": "c4d587237a52f6e487b94a9ecba4ba695a74a0f0", "filename": "src/test/compile-fail/derives-span-PartialOrd-enum.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-enum.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -19,12 +19,6 @@ enum Enum {\n      Error //~ ERROR\n //~^ ERROR\n //~^^ ERROR\n-//~^^^ ERROR\n-//~^^^^ ERROR\n-//~^^^^^ ERROR\n-//~^^^^^^ ERROR\n-//~^^^^^^^ ERROR\n-//~^^^^^^^^ ERROR\n      )\n }\n "}, {"sha": "e065abd9b46a2ca7ae3d7c93b110363b7f2339af", "filename": "src/test/compile-fail/derives-span-PartialOrd-struct.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -18,12 +18,6 @@ struct Struct {\n     x: Error //~ ERROR\n //~^ ERROR\n //~^^ ERROR\n-//~^^^ ERROR\n-//~^^^^ ERROR\n-//~^^^^^ ERROR\n-//~^^^^^^ ERROR\n-//~^^^^^^^ ERROR\n-//~^^^^^^^^ ERROR\n }\n \n fn main() {}"}, {"sha": "f2df01222b9895bdeffa08521cd110a309ac25b2", "filename": "src/test/compile-fail/derives-span-PartialOrd-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderives-span-PartialOrd-tuple-struct.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -18,12 +18,6 @@ struct Struct(\n     Error //~ ERROR\n //~^ ERROR\n //~^^ ERROR\n-//~^^^ ERROR\n-//~^^^^ ERROR\n-//~^^^^^ ERROR\n-//~^^^^^^ ERROR\n-//~^^^^^^^ ERROR\n-//~^^^^^^^^ ERROR\n );\n \n fn main() {}"}, {"sha": "10c1398634923191a61ef9bd3401d8b86773a132", "filename": "src/test/compile-fail/feature-gate/issue-43106-gating-of-rustc_deprecated.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-rustc_deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-rustc_deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-rustc_deprecated.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -28,7 +28,6 @@ mod rustc_deprecated {\n \n     #[rustc_deprecated = \"1500\"] struct S;\n     //~^ ERROR stability attributes may not be used outside of the standard library\n-    //~| ERROR stability attributes may not be used outside of the standard library\n \n     #[rustc_deprecated = \"1500\"] type T = S;\n     //~^ ERROR stability attributes may not be used outside of the standard library"}, {"sha": "a6eaabf7a383e4109429ba7f16463a65fbd94781", "filename": "src/test/compile-fail/feature-gate/issue-43106-gating-of-stable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-stable.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -28,7 +28,6 @@ mod stable {\n \n     #[stable = \"1300\"] struct S;\n     //~^ ERROR stability attributes may not be used outside of the standard library\n-    //~| ERROR stability attributes may not be used outside of the standard library\n \n     #[stable = \"1300\"] type T = S;\n     //~^ ERROR stability attributes may not be used outside of the standard library"}, {"sha": "ff0600deb1936b0c1caa88f422afc3989269ebd5", "filename": "src/test/compile-fail/feature-gate/issue-43106-gating-of-unstable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-unstable.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -28,7 +28,6 @@ mod unstable {\n \n     #[unstable = \"1200\"] struct S;\n     //~^ ERROR stability attributes may not be used outside of the standard library\n-    //~| ERROR stability attributes may not be used outside of the standard library\n \n     #[unstable = \"1200\"] type T = S;\n     //~^ ERROR stability attributes may not be used outside of the standard library"}, {"sha": "17ec77d77eea2c1f0b0a04f6ee7334418201580d", "filename": "src/test/compile-fail/issue-17718-const-bad-values.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-bad-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-bad-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-bad-values.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -10,13 +10,11 @@\n \n const C1: &'static mut [usize] = &mut [];\n //~^ ERROR: references in constants may only refer to immutable values\n-//~| ERROR: references in constants may only refer to immutable values\n \n static mut S: usize = 3;\n const C2: &'static mut usize = unsafe { &mut S };\n //~^ ERROR: constants cannot refer to statics\n //~| ERROR: references in constants may only refer to immutable values\n //~| ERROR: references in constants may only refer to immutable values\n-//~| ERROR: references in constants may only refer to immutable values\n \n fn main() {}"}, {"sha": "3f00f561ae96f4ee83461e4801f3e007cfb4fdff", "filename": "src/test/compile-fail/issue-20831-debruijn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fissue-20831-debruijn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fissue-20831-debruijn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20831-debruijn.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -38,7 +38,6 @@ impl<'a> Publisher<'a> for MyStruct<'a> {\n     fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {\n         // Not obvious, but there is an implicit lifetime here -------^\n         //~^^ ERROR cannot infer\n-        //~|  ERROR cannot infer\n         //\n         // The fact that `Publisher` is using an implicit lifetime is\n         // what was causing the debruijn accounting to be off, so"}, {"sha": "191b867e7a8b5cbfa4fee4ebeaf516e8f4af093f", "filename": "src/test/compile-fail/issue-41255.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fissue-41255.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fissue-41255.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-41255.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -39,17 +39,13 @@ fn main() {\n     match (x, 5) {\n         (3.14, 1) => {}, //~ ERROR floating-point literals cannot be used\n                          //~| WARNING hard error\n-                         //~| ERROR floating-point literals cannot be used\n-                         //~| WARNING hard error\n         _ => {},\n     }\n     // Or structs\n     struct Foo { x: f32 };\n     match (Foo { x }) {\n         Foo { x: 2.0 } => {}, //~ ERROR floating-point literals cannot be used\n                               //~| WARNING hard error\n-                              //~| ERROR floating-point literals cannot be used\n-                              //~| WARNING hard error\n         _ => {},\n     }\n }"}, {"sha": "9bc2c021904aad24dee2886f8a9cf2b8db797e5a", "filename": "src/test/compile-fail/lint-stability-deprecated.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Flint-stability-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Flint-stability-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability-deprecated.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -107,7 +107,6 @@ mod cross_crate {\n         struct S1<T: TraitWithAssociatedTypes>(T::TypeUnstable);\n         struct S2<T: TraitWithAssociatedTypes>(T::TypeDeprecated);\n         //~^ WARN use of deprecated item\n-        //~| WARN use of deprecated item\n \n         let _ = DeprecatedStruct { //~ WARN use of deprecated item\n             i: 0 //~ WARN use of deprecated item"}, {"sha": "d57a23f26c4791b4553b9566d1ca59ceb2dbb43b", "filename": "src/test/compile-fail/patkind-litrange-no-expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fpatkind-litrange-no-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fpatkind-litrange-no-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpatkind-litrange-no-expr.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -28,8 +28,7 @@ enum_number!(Change {\n     Pos = 1,\n     Neg = -1,\n     Arith = 1 + 1, //~ ERROR arbitrary expressions aren't allowed in patterns\n-                   //~^ ERROR arbitrary expressions aren't allowed in patterns\n-                   //~^^ ERROR only char and numeric types are allowed in range patterns\n+                   //~^ ERROR only char and numeric types are allowed in range patterns\n });\n \n fn main() {}"}, {"sha": "f1ea8b04e5ace5b2fb65131bef3de636703865f9", "filename": "src/test/compile-fail/range_traits-1.rs", "status": "modified", "additions": 12, "deletions": 49, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Frange_traits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Frange_traits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-1.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -12,75 +12,38 @@\n \n use std::ops::*;\n \n-// FIXME #34229 duplicated errors\n #[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]\n struct AllTheRanges {\n     a: Range<usize>,\n     //~^ ERROR PartialOrd\n     //~^^ ERROR Ord\n-    //~^^^ ERROR binary operation\n-    //~^^^^ ERROR binary operation\n-    //~^^^^^ ERROR binary operation\n-    //~^^^^^^ ERROR binary operation\n-    //~^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^ ERROR binary operation `<` cannot be applied to type\n+    //~^^^^ ERROR binary operation `>` cannot be applied to type\n     b: RangeTo<usize>,\n     //~^ ERROR PartialOrd\n     //~^^ ERROR Ord\n-    //~^^^ ERROR binary operation\n-    //~^^^^ ERROR binary operation\n-    //~^^^^^ ERROR binary operation\n-    //~^^^^^^ ERROR binary operation\n-    //~^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^ ERROR binary operation `<` cannot be applied to type\n+    //~^^^^ ERROR binary operation `>` cannot be applied to type\n     c: RangeFrom<usize>,\n     //~^ ERROR PartialOrd\n     //~^^ ERROR Ord\n-    //~^^^ ERROR binary operation\n-    //~^^^^ ERROR binary operation\n-    //~^^^^^ ERROR binary operation\n-    //~^^^^^^ ERROR binary operation\n-    //~^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^ ERROR binary operation `<` cannot be applied to type\n+    //~^^^^ ERROR binary operation `>` cannot be applied to type\n     d: RangeFull,\n     //~^ ERROR PartialOrd\n     //~^^ ERROR Ord\n-    //~^^^ ERROR binary operation\n-    //~^^^^ ERROR binary operation\n-    //~^^^^^ ERROR binary operation\n-    //~^^^^^^ ERROR binary operation\n-    //~^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^ ERROR binary operation `<` cannot be applied to type\n+    //~^^^^ ERROR binary operation `>` cannot be applied to type\n     e: RangeInclusive<usize>,\n     //~^ ERROR PartialOrd\n     //~^^ ERROR Ord\n-    //~^^^ ERROR binary operation\n-    //~^^^^ ERROR binary operation\n-    //~^^^^^ ERROR binary operation\n-    //~^^^^^^ ERROR binary operation\n-    //~^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^ ERROR binary operation `<` cannot be applied to type\n+    //~^^^^ ERROR binary operation `>` cannot be applied to type\n     f: RangeToInclusive<usize>,\n     //~^ ERROR PartialOrd\n     //~^^ ERROR Ord\n-    //~^^^ ERROR binary operation\n-    //~^^^^ ERROR binary operation\n-    //~^^^^^ ERROR binary operation\n-    //~^^^^^^ ERROR binary operation\n-    //~^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^ ERROR binary operation\n-    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^ ERROR binary operation `<` cannot be applied to type\n+    //~^^^^ ERROR binary operation `>` cannot be applied to type\n }\n \n fn main() {}"}, {"sha": "617de2c5dfe84ecd39713eb6a9aa6a63e99764cd", "filename": "src/test/compile-fail/regions-bound-missing-bound-in-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fregions-bound-missing-bound-in-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fregions-bound-missing-bound-in-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-bound-missing-bound-in-impl.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -35,7 +35,6 @@ impl<'a, 't> Foo<'a, 't> for &'a isize {\n \n     fn wrong_bound1<'b,'c,'d:'a+'c>(self, b: Inv<'b>, c: Inv<'c>, d: Inv<'d>) {\n         //~^ ERROR method not compatible with trait\n-        //~^^ ERROR method not compatible with trait\n         //\n         // Note: This is a terrible error message. It is caused\n         // because, in the trait, 'b is early bound, and in the impl,"}, {"sha": "6cbe5234ce0e8854f35140ec4d8bc7d7819c93a9", "filename": "src/test/compile-fail/regions-close-object-into-object-5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-5.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -31,7 +31,6 @@ fn f<'a, T, U>(v: Box<A<T>+'static>) -> Box<X+'static> {\n         //~| ERROR the parameter type `T` may not live long enough\n         //~| ERROR the parameter type `T` may not live long enough\n         //~| ERROR the parameter type `T` may not live long enough\n-        //~| ERROR the parameter type `T` may not live long enough\n }\n \n fn main() {}"}, {"sha": "7cde780cc54ba928a42154c0fe0507f1be25f525", "filename": "src/test/run-pass/associated-types-project-from-type-param-via-bound-in-where.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Fassociated-types-project-from-type-param-via-bound-in-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Fassociated-types-project-from-type-param-via-bound-in-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types-project-from-type-param-via-bound-in-where.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "previous_filename": "src/test/run-pass/associated-types-project-from-type-param-via-bound-in-where-clause.rs"}, {"sha": "c4944548e17f02c1eedf7113eaa4a107f4f24580", "filename": "src/test/run-pass/unboxed-closures-infer-arg-types-from-expected-bound.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-from-expected-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-from-expected-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-from-expected-bound.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "previous_filename": "src/test/run-pass/unboxed-closures-infer-argument-types-from-expected-bound.rs"}, {"sha": "9cad7d61e32c5e6d1977ee66be876b86190166bd", "filename": "src/test/run-pass/unboxed-closures-infer-arg-types-from-expected-object-type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-from-expected-object-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-from-expected-object-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-from-expected-object-type.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "previous_filename": "src/test/run-pass/unboxed-closures-infer-argument-types-from-expected-object-type.rs"}, {"sha": "bdd1932182bdcbc19507fef7bbb25abacbe81854", "filename": "src/test/run-pass/unboxed-closures-infer-arg-types-w-bound-regs-from-expected-bound.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-w-bound-regs-from-expected-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-w-bound-regs-from-expected-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-arg-types-w-bound-regs-from-expected-bound.rs?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "previous_filename": "src/test/run-pass/unboxed-closures-infer-argument-types-with-bound-regions-from-expected-bound.rs"}, {"sha": "017a449d96f463567796f6b11e3d1814ef67c642", "filename": "src/test/ui/span/macro-ty-params.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b218a02ad8b8b79b30a847eadf3e9c739560fadf/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr?ref=b218a02ad8b8b79b30a847eadf3e9c739560fadf", "patch": "@@ -4,12 +4,6 @@ error: unexpected generic arguments in path\n 20 |     m!(MyTrait<>);\n    |        ^^^^^^^^^\n \n-error: unexpected generic arguments in path\n-  --> $DIR/macro-ty-params.rs:20:8\n-   |\n-20 |     m!(MyTrait<>);\n-   |        ^^^^^^^^^\n-\n error: generic arguments in macro path\n   --> $DIR/macro-ty-params.rs:18:8\n    |"}]}