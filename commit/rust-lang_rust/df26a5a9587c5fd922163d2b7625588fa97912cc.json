{"sha": "df26a5a9587c5fd922163d2b7625588fa97912cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMjZhNWE5NTg3YzVmZDkyMjE2M2QyYjc2MjU1ODhmYTk3OTEyY2M=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-12-14T19:35:05Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-12-15T18:56:55Z"}, "message": "Stabilize std::os::*::fs::FileExt", "tree": {"sha": "155458970cfa965e8c1274332bba6b517be3aef3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/155458970cfa965e8c1274332bba6b517be3aef3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df26a5a9587c5fd922163d2b7625588fa97912cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df26a5a9587c5fd922163d2b7625588fa97912cc", "html_url": "https://github.com/rust-lang/rust/commit/df26a5a9587c5fd922163d2b7625588fa97912cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df26a5a9587c5fd922163d2b7625588fa97912cc/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95373cd5d8ed2c96100945448d7bf0743298e5dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/95373cd5d8ed2c96100945448d7bf0743298e5dc", "html_url": "https://github.com/rust-lang/rust/commit/95373cd5d8ed2c96100945448d7bf0743298e5dc"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "900f463fa83a48fa5863fdfbf72aa05eb067557e", "filename": "src/libstd/sys/unix/ext/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs?ref=df26a5a9587c5fd922163d2b7625588fa97912cc", "patch": "@@ -21,7 +21,7 @@ use sys_common::{FromInner, AsInner, AsInnerMut};\n use sys::platform::fs::MetadataExt as UnixMetadataExt;\n \n /// Unix-specific extensions to `File`\n-#[unstable(feature = \"file_offset\", issue = \"35918\")]\n+#[stable(feature = \"file_offset\", since = \"1.15.0\")]\n pub trait FileExt {\n     /// Reads a number of bytes starting from a given offset.\n     ///\n@@ -34,7 +34,7 @@ pub trait FileExt {\n     ///\n     /// Note that similar to `File::read`, it is not an error to return with a\n     /// short read.\n-    #[unstable(feature = \"file_offset\", issue = \"35918\")]\n+    #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n     fn read_at(&self, buf: &mut [u8], offset: u64) -> io::Result<usize>;\n \n     /// Writes a number of bytes starting from a given offset.\n@@ -51,11 +51,11 @@ pub trait FileExt {\n     ///\n     /// Note that similar to `File::write`, it is not an error to return a\n     /// short write.\n-    #[unstable(feature = \"file_offset\", issue = \"35918\")]\n+    #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n     fn write_at(&self, buf: &[u8], offset: u64) -> io::Result<usize>;\n }\n \n-#[unstable(feature = \"file_offset\", issue = \"35918\")]\n+#[stable(feature = \"file_offset\", since = \"1.15.0\")]\n impl FileExt for fs::File {\n     fn read_at(&self, buf: &mut [u8], offset: u64) -> io::Result<usize> {\n         self.as_inner().read_at(buf, offset)"}, {"sha": "1be9f11b92c73a55230fa0b7d71ca79b72498eac", "filename": "src/libstd/sys/unix/ext/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs?ref=df26a5a9587c5fd922163d2b7625588fa97912cc", "patch": "@@ -50,7 +50,7 @@ pub mod prelude {\n     pub use super::fs::{PermissionsExt, OpenOptionsExt, MetadataExt, FileTypeExt};\n     #[doc(no_inline)] #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub use super::fs::DirEntryExt;\n-    #[doc(no_inline)] #[unstable(feature = \"file_offset\", issue = \"35918\")]\n+    #[doc(no_inline)] #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n     pub use super::fs::FileExt;\n     #[doc(no_inline)] #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub use super::thread::JoinHandleExt;"}, {"sha": "7fc04ad69d648f101d098e4168f48fae1d79bd37", "filename": "src/libstd/sys/windows/ext/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs?ref=df26a5a9587c5fd922163d2b7625588fa97912cc", "patch": "@@ -19,7 +19,7 @@ use sys;\n use sys_common::{AsInnerMut, AsInner};\n \n /// Windows-specific extensions to `File`\n-#[unstable(feature = \"file_offset\", issue = \"35918\")]\n+#[stable(feature = \"file_offset\", since = \"1.15.0\")]\n pub trait FileExt {\n     /// Seeks to a given position and reads a number of bytes.\n     ///\n@@ -35,7 +35,7 @@ pub trait FileExt {\n     /// Note that similar to `File::read`, it is not an error to return with a\n     /// short read. When returning from such a short read, the file pointer is\n     /// still updated.\n-    #[unstable(feature = \"file_offset\", issue = \"35918\")]\n+    #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n     fn seek_read(&self, buf: &mut [u8], offset: u64) -> io::Result<usize>;\n \n     /// Seeks to a given position and writes a number of bytes.\n@@ -52,11 +52,11 @@ pub trait FileExt {\n     /// Note that similar to `File::write`, it is not an error to return a\n     /// short write. When returning from such a short write, the file pointer\n     /// is still updated.\n-    #[unstable(feature = \"file_offset\", issue = \"35918\")]\n+    #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n     fn seek_write(&self, buf: &[u8], offset: u64) -> io::Result<usize>;\n }\n \n-#[unstable(feature = \"file_offset\", issue = \"35918\")]\n+#[stable(feature = \"file_offset\", since = \"1.15.0\")]\n impl FileExt for fs::File {\n     fn seek_read(&self, buf: &mut [u8], offset: u64) -> io::Result<usize> {\n         self.as_inner().read_at(buf, offset)"}, {"sha": "f12e50cc92317d80496a67ecb3bd03fddc2f8a11", "filename": "src/libstd/sys/windows/ext/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26a5a9587c5fd922163d2b7625588fa97912cc/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs?ref=df26a5a9587c5fd922163d2b7625588fa97912cc", "patch": "@@ -36,6 +36,6 @@ pub mod prelude {\n     pub use super::ffi::{OsStrExt, OsStringExt};\n     #[doc(no_inline)] #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub use super::fs::{OpenOptionsExt, MetadataExt};\n-    #[doc(no_inline)] #[unstable(feature = \"file_offset\", issue = \"35918\")]\n+    #[doc(no_inline)] #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n     pub use super::fs::FileExt;\n }"}]}