{"sha": "2065c4b0960a4726f7d6bf53d53ef76f11555de3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNjVjNGIwOTYwYTQ3MjZmN2Q2YmY1M2Q1M2VmNzZmMTE1NTVkZTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-19T22:19:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-19T22:19:08Z"}, "message": "Rollup merge of #85464 - steffahn:fix_ub_in_ptr_swap_docs, r=dtolnay\n\nFix UB in documented example for `ptr::swap`\n\nCompare [this (short) discussion on zulip](https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Pointers.20to.20overlapping.20arrays) (or [in the archive](https://zulip-archive.rust-lang.org/122651general/92017Pointerstooverlappingarrays.html), if you don\u2019t have an account).\n\n``@rustbot`` label T-doc T-libs", "tree": {"sha": "dc613dabf0ad48657ab3cc22a9ad1d8aaa4a6be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc613dabf0ad48657ab3cc22a9ad1d8aaa4a6be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2065c4b0960a4726f7d6bf53d53ef76f11555de3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgpY7cCRBK7hj4Ov3rIwAA+NEIALGpbBVyGRiuvQez+sL60uve\n6G9FjPwqcWUqayexoE0t9DdRqP2wnRbEWztkBplSbcZzQT067jXZgkNJMcXIvQsH\ne42wbvSW50aJgNspMEKaKEZ9LW6O3RdBg7NoU/8TQMtH2WnQajMXI3bdovwOrFxo\nFPTxpjJHwIjPSp8JL3zF1lNOjIP4wAFhiUO1i1zQpqGiAgBL69/Q1hBdH5CzESLh\nV2M/v2AllZvRDioT5iGzXHrGKnjyzw0U4tjQMGsnM5WPDaz04Jfqxh4Hf2uZOh0A\n89XBIbKV9fqjVz3wND90RI3oJKT4DwN6gTQFFpq8OYWAO/cLBbQv5N94zVoWIPk=\n=23Pz\n-----END PGP SIGNATURE-----\n", "payload": "tree dc613dabf0ad48657ab3cc22a9ad1d8aaa4a6be0\nparent 1207b7fa0bd71e0b3ded4b4cb21c39bf021d95d9\nparent f9752b493086fd3063c9aef83d2622d322bbc51c\nauthor Ralf Jung <post@ralfj.de> 1621462748 +0200\ncommitter GitHub <noreply@github.com> 1621462748 +0200\n\nRollup merge of #85464 - steffahn:fix_ub_in_ptr_swap_docs, r=dtolnay\n\nFix UB in documented example for `ptr::swap`\n\nCompare [this (short) discussion on zulip](https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Pointers.20to.20overlapping.20arrays) (or [in the archive](https://zulip-archive.rust-lang.org/122651general/92017Pointerstooverlappingarrays.html), if you don\u2019t have an account).\n\n``@rustbot`` label T-doc T-libs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2065c4b0960a4726f7d6bf53d53ef76f11555de3", "html_url": "https://github.com/rust-lang/rust/commit/2065c4b0960a4726f7d6bf53d53ef76f11555de3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2065c4b0960a4726f7d6bf53d53ef76f11555de3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1207b7fa0bd71e0b3ded4b4cb21c39bf021d95d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1207b7fa0bd71e0b3ded4b4cb21c39bf021d95d9", "html_url": "https://github.com/rust-lang/rust/commit/1207b7fa0bd71e0b3ded4b4cb21c39bf021d95d9"}, {"sha": "f9752b493086fd3063c9aef83d2622d322bbc51c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9752b493086fd3063c9aef83d2622d322bbc51c", "html_url": "https://github.com/rust-lang/rust/commit/f9752b493086fd3063c9aef83d2622d322bbc51c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "214d7c8bc15600d5d582776056bc9b6530fcf7b0", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2065c4b0960a4726f7d6bf53d53ef76f11555de3/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2065c4b0960a4726f7d6bf53d53ef76f11555de3/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=2065c4b0960a4726f7d6bf53d53ef76f11555de3", "patch": "@@ -342,10 +342,12 @@ pub const fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {\n /// ```\n /// use std::ptr;\n ///\n-/// let mut array = [0, 1, 2, 3];\n+/// let mut array: [i32; 4] = [0, 1, 2, 3];\n+///\n+/// let array_ptr: *mut i32 = array.as_mut_ptr();\n ///\n-/// let x = array[0..].as_mut_ptr() as *mut [u32; 3]; // this is `array[0..3]`\n-/// let y = array[1..].as_mut_ptr() as *mut [u32; 3]; // this is `array[1..4]`\n+/// let x = array_ptr as *mut [i32; 3]; // this is `array[0..3]`\n+/// let y = unsafe { array_ptr.add(1) } as *mut [i32; 3]; // this is `array[1..4]`\n ///\n /// unsafe {\n ///     ptr::swap(x, y);"}]}