{"sha": "2f44813511277b6d15dc993bd79e7432dec334e1", "node_id": "C_kwDOAAsO6NoAKDJmNDQ4MTM1MTEyNzdiNmQxNWRjOTkzYmQ3OWU3NDMyZGVjMzM0ZTE", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-06-07T12:50:14Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-06-09T17:43:23Z"}, "message": "future-proof adding more protocols", "tree": {"sha": "018f3882f1e90152db24a4bfae9eeb99bb0edaba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/018f3882f1e90152db24a4bfae9eeb99bb0edaba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f44813511277b6d15dc993bd79e7432dec334e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmKiMTsACgkQzXazX3c0\ndp5iUw/8CfNEwBm7XjKL/UMxLb2vXEEq6roTa5Lxyk3H2EvhF6ZedGUvtPs6/kAv\nA42MtibFLWk+2WfWU18O7CPD1+9YP4T18vhi4BFjqw89u9IUwyeXiGQ1ScLEkbuM\nax2uZOuAXDJVRuR1zVyWlF0GvN5MhuohAFUbkakRSRfALZZo/KdpYJ4cG5xQMHdh\n/OeSi4J27tyyWK1K2iSOeYKourBRbMOMXbGtiODoOyZuU6P3MpDDmaSbb5VWkaRW\nSXue+lvk5rCee5cmaFkTHinb2qSxFa8yvY2/0M22v7LFVawEfVw6Fp8RpHyhqQrN\ncSkx7hu9OGTh3px611FF5Sgc3+uQr2vfkfVvljyBIbQvNnUBCnCH/yfgm/8Id+JL\naFfLAyFWkpDRtYLPv42kd9lKqu/Jf+LsV2r9Ietu1icW8eolg8imF1zq2PFfmiHR\nxlvl4P+msvl9pEbI1oJENOj61pzAtlKst+hmLMQRyZEgHoYGq9rekLS3okz+Y913\nklwys0/zfe03mqdXyqq4a/IjmTmhmNDrpPBbDut0It8XMSGusN5HTpIRQY2FaNF/\ngl3pAztV/h7aDKdGwK1z1oZ33NAmCco38C9ZPGlp7XkLcJcnae7/ln8e7Bn1AtKU\nUcwqclF/lBY76VOf4jn2/dtbbGxq9mHaX8Oy6p3oBjYEEcK2TEg=\n=6Bve\n-----END PGP SIGNATURE-----", "payload": "tree 018f3882f1e90152db24a4bfae9eeb99bb0edaba\nparent 77097c5da87338e4964b8a717466beb2346f480c\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1654606214 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1654796603 +0200\n\nfuture-proof adding more protocols\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f44813511277b6d15dc993bd79e7432dec334e1", "html_url": "https://github.com/rust-lang/rust/commit/2f44813511277b6d15dc993bd79e7432dec334e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f44813511277b6d15dc993bd79e7432dec334e1/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77097c5da87338e4964b8a717466beb2346f480c", "url": "https://api.github.com/repos/rust-lang/rust/commits/77097c5da87338e4964b8a717466beb2346f480c", "html_url": "https://github.com/rust-lang/rust/commit/77097c5da87338e4964b8a717466beb2346f480c"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "7b74c5ccdbb0e2ebc5f48a9573f1dfa6005733b4", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f44813511277b6d15dc993bd79e7432dec334e1/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f44813511277b6d15dc993bd79e7432dec334e1/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=2f44813511277b6d15dc993bd79e7432dec334e1", "patch": "@@ -873,11 +873,20 @@ impl<'a> Builder<'a> {\n     pub(crate) fn download_component(&self, url: &str, dest_path: &Path, help_on_error: &str) {\n         // Use a temporary file in case we crash while downloading, to avoid a corrupt download in cache/.\n         let tempfile = self.tempdir().join(dest_path.file_name().unwrap());\n-        self.download_with_retries(&tempfile, url, help_on_error);\n+        // While bootstrap itself only supports http and https downloads, downstream forks might\n+        // need to download components from other protocols. The match allows them adding more\n+        // protocols without worrying about merge conficts if we change the HTTP implementation.\n+        match url.split_once(\"://\").map(|(proto, _)| proto) {\n+            Some(\"http\") | Some(\"https\") => {\n+                self.download_http_with_retries(&tempfile, url, help_on_error)\n+            }\n+            Some(other) => panic!(\"unsupported protocol {other} in {url}\"),\n+            None => panic!(\"no protocol in {url}\"),\n+        }\n         t!(std::fs::rename(&tempfile, dest_path));\n     }\n \n-    fn download_with_retries(&self, tempfile: &Path, url: &str, help_on_error: &str) {\n+    fn download_http_with_retries(&self, tempfile: &Path, url: &str, help_on_error: &str) {\n         println!(\"downloading {}\", url);\n         // Try curl. If that fails and we are on windows, fallback to PowerShell.\n         let mut curl = Command::new(\"curl\");"}]}