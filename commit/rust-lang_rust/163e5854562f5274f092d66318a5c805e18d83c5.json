{"sha": "163e5854562f5274f092d66318a5c805e18d83c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2M2U1ODU0NTYyZjUyNzRmMDkyZDY2MzE4YTVjODA1ZTE4ZDgzYzU=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-06-10T19:48:30Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-06-15T23:50:11Z"}, "message": "updated mir-opt test due to other recent changes to MIR", "tree": {"sha": "61bfb65de2fc6164c24a9dfa368d21065091f9dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61bfb65de2fc6164c24a9dfa368d21065091f9dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/163e5854562f5274f092d66318a5c805e18d83c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/163e5854562f5274f092d66318a5c805e18d83c5", "html_url": "https://github.com/rust-lang/rust/commit/163e5854562f5274f092d66318a5c805e18d83c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/163e5854562f5274f092d66318a5c805e18d83c5/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20aba8f634c13fa2bb1b043b51a074769dc06f66", "url": "https://api.github.com/repos/rust-lang/rust/commits/20aba8f634c13fa2bb1b043b51a074769dc06f66", "html_url": "https://github.com/rust-lang/rust/commit/20aba8f634c13fa2bb1b043b51a074769dc06f66"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "095246580409eb240d02f681b0388ddf8aa7803c", "filename": "src/test/mir-opt/instrument_coverage/rustc.main.InstrumentCoverage.diff", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/163e5854562f5274f092d66318a5c805e18d83c5/src%2Ftest%2Fmir-opt%2Finstrument_coverage%2Frustc.main.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/163e5854562f5274f092d66318a5c805e18d83c5/src%2Ftest%2Fmir-opt%2Finstrument_coverage%2Frustc.main.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage%2Frustc.main.InstrumentCoverage.diff?ref=163e5854562f5274f092d66318a5c805e18d83c5", "patch": "@@ -9,7 +9,7 @@\n +     let mut _4: ();                      // in scope 0 at $DIR/instrument_coverage.rs:8:1: 14:2\n   \n       bb0: {\n--         falseUnwind -> [real: bb1, cleanup: bb6]; // scope 0 at $DIR/instrument_coverage.rs:9:5: 13:6\n+-         falseUnwind -> [real: bb1, cleanup: bb2]; // scope 0 at $DIR/instrument_coverage.rs:9:5: 13:6\n +         StorageLive(_4);                 // scope 0 at $DIR/instrument_coverage.rs:8:1: 14:2\n +         _4 = const std::intrinsics::count_code_region(const 0u32) -> bb7; // scope 0 at $DIR/instrument_coverage.rs:8:1: 14:2\n +                                          // ty::Const\n@@ -28,7 +28,7 @@\n   \n       bb1: {\n           StorageLive(_2);                 // scope 0 at $DIR/instrument_coverage.rs:10:12: 10:17\n-          _2 = const bar() -> [return: bb2, unwind: bb6]; // scope 0 at $DIR/instrument_coverage.rs:10:12: 10:17\n+          _2 = const bar() -> [return: bb3, unwind: bb2]; // scope 0 at $DIR/instrument_coverage.rs:10:12: 10:17\n                                            // ty::Const\n                                            // + ty: fn() -> bool {bar}\n                                            // + val: Value(Scalar(<ZST>))\n@@ -37,16 +37,20 @@\n                                            // + literal: Const { ty: fn() -> bool {bar}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb2: {\n-          FakeRead(ForMatchedPlace, _2);   // scope 0 at $DIR/instrument_coverage.rs:10:12: 10:17\n-          switchInt(_2) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/instrument_coverage.rs:10:9: 12:10\n+      bb2 (cleanup): {\n+          resume;                          // scope 0 at $DIR/instrument_coverage.rs:8:1: 14:2\n       }\n   \n       bb3: {\n-          falseEdges -> [real: bb5, imaginary: bb4]; // scope 0 at $DIR/instrument_coverage.rs:10:9: 12:10\n+          FakeRead(ForMatchedPlace, _2);   // scope 0 at $DIR/instrument_coverage.rs:10:12: 10:17\n+          switchInt(_2) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/instrument_coverage.rs:10:9: 12:10\n       }\n   \n       bb4: {\n+          falseEdge -> [real: bb6, imaginary: bb5]; // scope 0 at $DIR/instrument_coverage.rs:10:9: 12:10\n+      }\n+  \n+      bb5: {\n           _1 = const ();                   // scope 0 at $DIR/instrument_coverage.rs:10:9: 12:10\n                                            // ty::Const\n                                            // + ty: ()\n@@ -58,7 +62,7 @@\n           goto -> bb0;                     // scope 0 at $DIR/instrument_coverage.rs:9:5: 13:6\n       }\n   \n-      bb5: {\n+      bb6: {\n           _0 = const ();                   // scope 0 at $DIR/instrument_coverage.rs:11:13: 11:18\n                                            // ty::Const\n                                            // + ty: ()\n@@ -68,15 +72,11 @@\n                                            // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_2);                 // scope 0 at $DIR/instrument_coverage.rs:13:5: 13:6\n           return;                          // scope 0 at $DIR/instrument_coverage.rs:14:2: 14:2\n-      }\n-  \n-      bb6 (cleanup): {\n-          resume;                          // scope 0 at $DIR/instrument_coverage.rs:8:1: 14:2\n +     }\n + \n +     bb7: {\n +         StorageDead(_4);                 // scope 0 at $DIR/instrument_coverage.rs:9:5: 13:6\n-+         falseUnwind -> [real: bb1, cleanup: bb6]; // scope 0 at $DIR/instrument_coverage.rs:9:5: 13:6\n++         falseUnwind -> [real: bb1, cleanup: bb2]; // scope 0 at $DIR/instrument_coverage.rs:9:5: 13:6\n       }\n   }\n   "}]}