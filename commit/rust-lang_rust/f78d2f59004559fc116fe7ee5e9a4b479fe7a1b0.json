{"sha": "f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3OGQyZjU5MDA0NTU5ZmMxMTZmZTdlZTVlOWE0YjQ3OWZlN2ExYjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-07T06:31:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-07T06:31:30Z"}, "message": "auto merge of #15489 : jakub-/rust/issue-15488, r=pcwalton\n\nFixes #15488.", "tree": {"sha": "c153ea7a829b09b218d786477f7ed77556f2ec92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c153ea7a829b09b218d786477f7ed77556f2ec92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0", "html_url": "https://github.com/rust-lang/rust/commit/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "179b2b48ba7aa3b04e293aed43167470b6c9c58d", "url": "https://api.github.com/repos/rust-lang/rust/commits/179b2b48ba7aa3b04e293aed43167470b6c9c58d", "html_url": "https://github.com/rust-lang/rust/commit/179b2b48ba7aa3b04e293aed43167470b6c9c58d"}, {"sha": "9f460e7af88ca6efc1a58ebe781b47447acdb21b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f460e7af88ca6efc1a58ebe781b47447acdb21b", "html_url": "https://github.com/rust-lang/rust/commit/9f460e7af88ca6efc1a58ebe781b47447acdb21b"}], "stats": {"total": 82, "additions": 56, "deletions": 26}, "files": [{"sha": "db5268220fa99f4d907056e6abae51e23177ae61", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0", "patch": "@@ -411,14 +411,7 @@ fn is_useful(cx: &MatchCheckCtxt, matrix @ &Matrix(ref rows): &Matrix,\n         return NotUseful;\n     }\n     let real_pat = match rows.iter().find(|r| r.get(0).id != 0) {\n-        Some(r) => {\n-            match r.get(0).node {\n-                // An arm of the form `ref x @ sub_pat` has type\n-                // `sub_pat`, not `&sub_pat` as `x` itself does.\n-                PatIdent(BindByRef(_), _, Some(sub)) => sub,\n-                _ => *r.get(0)\n-            }\n-        }\n+        Some(r) => raw_pat(*r.get(0)),\n         None if v.len() == 0 => return NotUseful,\n         None => v[0]\n     };"}, {"sha": "0809079347b1f69f15b6851453785892c43fe93f", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0", "patch": "@@ -413,26 +413,25 @@ fn expand_nested_bindings<'a, 'b>(\n     let _indenter = indenter();\n \n     m.iter().map(|br| {\n-        match br.pats.get(col).node {\n-            ast::PatIdent(_, ref path1, Some(inner)) => {\n-                let pats = Vec::from_slice(br.pats.slice(0u, col))\n-                           .append((vec!(inner))\n-                                   .append(br.pats.slice(col + 1u, br.pats.len())).as_slice());\n-\n-                let mut bound_ptrs = br.bound_ptrs.clone();\n-                bound_ptrs.push((path1.node, val));\n-                Match {\n-                    pats: pats,\n-                    data: &*br.data,\n-                    bound_ptrs: bound_ptrs\n-                }\n-            }\n-            _ => Match {\n-                pats: br.pats.clone(),\n-                data: &*br.data,\n-                bound_ptrs: br.bound_ptrs.clone()\n+        let mut bound_ptrs = br.bound_ptrs.clone();\n+        let mut pat = *br.pats.get(col);\n+        loop {\n+            pat = match pat.node {\n+                ast::PatIdent(_, ref path, Some(inner)) => {\n+                    bound_ptrs.push((path.node, val));\n+                    inner.clone()\n+                },\n+                _ => break\n             }\n         }\n+\n+        let mut pats = br.pats.clone();\n+        *pats.get_mut(col) = pat;\n+        Match {\n+            pats: pats,\n+            data: &*br.data,\n+            bound_ptrs: bound_ptrs\n+        }\n     }).collect()\n }\n "}, {"sha": "61e905e5b17b6ae061d5e9691984d428dd273e4c", "filename": "src/test/run-pass/match-pattern-bindings.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0/src%2Ftest%2Frun-pass%2Fmatch-pattern-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0/src%2Ftest%2Frun-pass%2Fmatch-pattern-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-pattern-bindings.rs?ref=f78d2f59004559fc116fe7ee5e9a4b479fe7a1b0", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let value = Some(1i);\n+    assert_eq!(match value {\n+        ref a @ Some(_) => a,\n+        ref b @ None => b\n+    }, &Some(1i));\n+    assert_eq!(match value {\n+        ref a @ ref _c @ Some(_) => a,\n+        ref b @ None => b\n+    }, &Some(1i));\n+    assert_eq!(match value {\n+        _a @ ref c @ Some(_) => c,\n+        ref b @ None => b\n+    }, &Some(1i));\n+    assert_eq!(match \"foobarbaz\" {\n+        _a @ b @ _ => b\n+    }, \"foobarbaz\");\n+\n+    let a @ b @ c = \"foobarbaz\";\n+    assert_eq!(a, \"foobarbaz\");\n+    assert_eq!(b, \"foobarbaz\");\n+    assert_eq!(c, \"foobarbaz\");\n+    let value = Some(true);\n+    let ref a @ b @ ref c = value;\n+    assert_eq!(a, &Some(true));\n+    assert_eq!(b, Some(true));\n+    assert_eq!(c, &Some(true));\n+}"}]}