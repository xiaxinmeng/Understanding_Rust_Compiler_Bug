{"sha": "c69ebaaed229679e54b70e82824ce82c31efa7fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2OWViYWFlZDIyOTY3OWU1NGI3MGU4MjgyNGNlODJjMzFlZmE3ZmM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-08T12:20:39Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-08T12:43:23Z"}, "message": "Use names that actually represent what's going on", "tree": {"sha": "01deba7055091256be764dfc0ad5303e654096ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01deba7055091256be764dfc0ad5303e654096ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c69ebaaed229679e54b70e82824ce82c31efa7fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c69ebaaed229679e54b70e82824ce82c31efa7fc", "html_url": "https://github.com/rust-lang/rust/commit/c69ebaaed229679e54b70e82824ce82c31efa7fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c69ebaaed229679e54b70e82824ce82c31efa7fc/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90a8f2f6a300505c528cf5afe8ead9c31c9bbfca", "url": "https://api.github.com/repos/rust-lang/rust/commits/90a8f2f6a300505c528cf5afe8ead9c31c9bbfca", "html_url": "https://github.com/rust-lang/rust/commit/90a8f2f6a300505c528cf5afe8ead9c31c9bbfca"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "a4f40d51a3a8a5027eb1a2298155a62ab01dbba1", "filename": "src/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=c69ebaaed229679e54b70e82824ce82c31efa7fc", "patch": "@@ -77,19 +77,19 @@ pub fn report_msg<'tcx, 'mir>(\n }\n \n thread_local! {\n-    static ECX: RefCell<Vec<NonHaltingDiagnostic>> = RefCell::new(Vec::new());\n+    static DIAGNOSTICS: RefCell<Vec<NonHaltingDiagnostic>> = RefCell::new(Vec::new());\n }\n \n-pub fn register_err(e: NonHaltingDiagnostic) {\n-    ECX.with(|ecx| ecx.borrow_mut().push(e));\n+pub fn register_diagnostic(e: NonHaltingDiagnostic) {\n+    DIAGNOSTICS.with(|diagnostics| diagnostics.borrow_mut().push(e));\n }\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n-    fn process_errors(&self) {\n+    fn process_diagnostics(&self) {\n         let this = self.eval_context_ref();\n-        ECX.with(|ecx| {\n-            for e in ecx.borrow_mut().drain(..) {\n+        DIAGNOSTICS.with(|diagnostics| {\n+            for e in diagnostics.borrow_mut().drain(..) {\n                 let msg = match e {\n                     NonHaltingDiagnostic::PoppedTrackedPointerTag(item) =>\n                         format!(\"popped tracked tag for item {:?}\", item),"}, {"sha": "e9e74db9b75496f709f35c36606c20fb636d54df", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=c69ebaaed229679e54b70e82824ce82c31efa7fc", "patch": "@@ -183,7 +183,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n     // Perform the main execution.\n     let res: InterpResult<'_, i64> = (|| {\n         while ecx.step()? {\n-            ecx.process_errors();\n+            ecx.process_diagnostics();\n         }\n         // Read the return code pointer *before* we run TLS destructors, to assert\n         // that it was written to by the time that `start` lang item returned."}, {"sha": "4d2411a6697d0d979eb9082a92afaf8ad32b0fb7", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c69ebaaed229679e54b70e82824ce82c31efa7fc", "patch": "@@ -43,7 +43,7 @@ pub use crate::shims::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n pub use crate::shims::EvalContextExt as ShimsEvalContextExt;\n \n pub use crate::diagnostics::{\n-    register_err, report_err, EvalContextExt as DiagnosticsEvalContextExt, NonHaltingDiagnostic,\n+    register_diagnostic, report_err, EvalContextExt as DiagnosticsEvalContextExt, NonHaltingDiagnostic,\n };\n pub use crate::eval::{create_ecx, eval_main, MiriConfig, TerminationInfo};\n pub use crate::helpers::EvalContextExt as HelpersEvalContextExt;"}, {"sha": "60304503145fd7045daf59aeb779edc299861d92", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69ebaaed229679e54b70e82824ce82c31efa7fc/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=c69ebaaed229679e54b70e82824ce82c31efa7fc", "patch": "@@ -266,7 +266,7 @@ impl<'tcx> Stack {\n     fn check_protector(item: &Item, tag: Option<Tag>, global: &GlobalState) -> InterpResult<'tcx> {\n         if let Tag::Tagged(id) = item.tag {\n             if Some(id) == global.tracked_pointer_tag {\n-                register_err(NonHaltingDiagnostic::PoppedTrackedPointerTag(item.clone()));\n+                register_diagnostic(NonHaltingDiagnostic::PoppedTrackedPointerTag(item.clone()));\n             }\n         }\n         if let Some(call) = item.protector {"}]}