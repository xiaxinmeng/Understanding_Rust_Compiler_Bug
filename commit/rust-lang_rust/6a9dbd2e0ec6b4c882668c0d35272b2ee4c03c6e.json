{"sha": "6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhOWRiZDJlMGVjNmI0Yzg4MjY2OGMwZDM1MjcyYjJlZTRjMDNjNmU=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-19T20:24:57Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-25T19:49:44Z"}, "message": "Only populate local_def_path_hash_to_def_id when needed", "tree": {"sha": "a47c744c49126d1aea0a10856f1b5ff89bba4d31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a47c744c49126d1aea0a10856f1b5ff89bba4d31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl++tVkACgkQtAh+UQ6Y\nsWQ6Rg//XP/ZoE6FPcHXpbL+TvuHnSWp95LoweLbI7s0xjC9YBnoPqYxNjHd5QNy\nB6WpKnbMRCAzJTVqfD9FiTUO/yztA3fARfMLm3eXUtUPG2mL9y2ElVW9CAB93M13\n5f8TZqdw1Y91cDRdHUKlv7Z526x74qQqmOG/HbT4UiMm6OVQ3jKh1TxS2mot/iID\n2sy3/9aEk28YkqrQrJiaICdUB0P8N/OE2nVKkzJh6xaFSzebZNRGcwXksGmuPCBF\n/THB4jK9L4cE5XjFYx0kdoNUl/s/C3Xy38cyJxfsx6GDA3m4Adn5AKrE+CiFSHom\n9khRgv2Pp+EohV4dupTW01OZAp8Iwu/jy21AAWFuBYHqXCpnYzohRJJcmOkgpCIW\ntvifngWyq6UqQ/NaPOgsPiGlvk+m7WgzkrNS1iqFfnJcECwdcUxdWQjF5HiuaeYo\nuQdyNo6o7HUvykHQY8z/nJivNttXCJH9gGRaJmLWG+M+a/soQt8CmYxgIRgu/ajy\nWWW/skY4eR3TDQGQ8Z+62vNusN99mKQB5uxaUgnb5fIEjVyDshqVAwX4vogXLbpX\nDeF2iKN4crgSpieZAxJoKahGxnfz8zMHr/K4TjbJUDdZBjEFfAInX7iaxKFOpjBN\n2a7+ENCiDxVcyGK3msLSrK3RDtZ9oPl7h4yf1am1f6+EbcqzKQQ=\n=zbgI\n-----END PGP SIGNATURE-----", "payload": "tree a47c744c49126d1aea0a10856f1b5ff89bba4d31\nparent e935d3832cd8f0c3c3e1f01864e2605a3818b9d9\nauthor Aaron Hill <aa1ronham@gmail.com> 1605817497 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1606333784 -0500\n\nOnly populate local_def_path_hash_to_def_id when needed\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e", "html_url": "https://github.com/rust-lang/rust/commit/6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e935d3832cd8f0c3c3e1f01864e2605a3818b9d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e935d3832cd8f0c3c3e1f01864e2605a3818b9d9", "html_url": "https://github.com/rust-lang/rust/commit/e935d3832cd8f0c3c3e1f01864e2605a3818b9d9"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "b2b77b734aa7315ed44588506cb58c2051d8fca4", "filename": "compiler/rustc_middle/src/ty/query/on_disk_cache.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=6a9dbd2e0ec6b4c882668c0d35272b2ee4c03c6e", "patch": "@@ -98,7 +98,10 @@ pub struct OnDiskCache<'sess> {\n     latest_foreign_def_path_hashes: Lock<FxHashMap<DefPathHash, RawDefId>>,\n \n     // Maps `DefPathHashes` to their corresponding `LocalDefId`s for all\n-    // local items in the current compilation session.\n+    // local items in the current compilation session. This is only populated\n+    // when we are in incremental mode and have loaded a pre-existing cache\n+    // from disk, since this map is only used when deserializing a `DefPathHash`\n+    // from the incremental cache.\n     local_def_path_hash_to_def_id: FxHashMap<DefPathHash, LocalDefId>,\n     // Caches all lookups of `DefPathHashes`, both for local and foreign\n     // definitions. A definition from the previous compilation session\n@@ -215,7 +218,7 @@ impl<'sess> OnDiskCache<'sess> {\n         }\n     }\n \n-    pub fn new_empty(source_map: &'sess SourceMap, definitions: &Definitions) -> Self {\n+    pub fn new_empty(source_map: &'sess SourceMap) -> Self {\n         Self {\n             serialized_data: Vec::new(),\n             file_index_to_stable_id: Default::default(),\n@@ -232,7 +235,7 @@ impl<'sess> OnDiskCache<'sess> {\n             hygiene_context: Default::default(),\n             foreign_def_path_hashes: Default::default(),\n             latest_foreign_def_path_hashes: Default::default(),\n-            local_def_path_hash_to_def_id: make_local_def_path_hash_map(definitions),\n+            local_def_path_hash_to_def_id: Default::default(),\n             def_path_hash_to_def_id_cache: Default::default(),\n         }\n     }"}]}