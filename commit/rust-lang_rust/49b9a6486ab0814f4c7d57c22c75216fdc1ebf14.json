{"sha": "49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YjlhNjQ4NmFiMDgxNGY0YzdkNTdjMjJjNzUyMTZmZGMxZWJmMTQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-07-22T12:49:04Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-07-22T13:47:37Z"}, "message": "rustc_target: Add a target spec option for disabling `--eh-frame-hdr`", "tree": {"sha": "ffa0e6b5ec99d8b5da0d3372000a02764b7f13ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffa0e6b5ec99d8b5da0d3372000a02764b7f13ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "html_url": "https://github.com/rust-lang/rust/commit/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e22b61bff0bdd08be7665607cb7be3748c8a35d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22b61bff0bdd08be7665607cb7be3748c8a35d2", "html_url": "https://github.com/rust-lang/rust/commit/e22b61bff0bdd08be7665607cb7be3748c8a35d2"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "b53b82a1e62fc6aeee031e958450886ffa723115", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -1598,7 +1598,9 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n     }\n \n     // NO-OPT-OUT, OBJECT-FILES-NO, AUDIT-ORDER\n-    cmd.add_eh_frame_header();\n+    if sess.target.target.options.eh_frame_header {\n+        cmd.add_eh_frame_header();\n+    }\n \n     // NO-OPT-OUT, OBJECT-FILES-NO\n     if crt_objects_fallback {"}, {"sha": "d1ae9e372695fded7ad77293f052f541368ca746", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -619,13 +619,7 @@ impl<'a> Linker for GccLinker<'a> {\n     // Some versions of `gcc` add it implicitly, some (e.g. `musl-gcc`) don't,\n     // so we just always add it.\n     fn add_eh_frame_header(&mut self) {\n-        if !self.sess.target.target.options.is_like_osx\n-            && !self.sess.target.target.options.is_like_windows\n-            && !self.sess.target.target.options.is_like_solaris\n-            && self.sess.target.target.target_os != \"uefi\"\n-        {\n-            self.linker_arg(\"--eh-frame-hdr\");\n-        }\n+        self.linker_arg(\"--eh-frame-hdr\");\n     }\n }\n "}, {"sha": "e7b565ae9cad979a7741b6509713db4ae8157d9f", "filename": "src/librustc_target/spec/apple_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_base.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -31,6 +31,7 @@ pub fn opts() -> TargetOptions {\n         has_elf_tls: version >= (10, 7),\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,\n+        eh_frame_header: false,\n \n         // This environment variable is pretty magical but is intended for\n         // producing deterministic builds. This was first discovered to be used"}, {"sha": "c338856228dc66b607304672531fe61243f4b3ce", "filename": "src/librustc_target/spec/freestanding_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Ffreestanding_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Ffreestanding_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffreestanding_base.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -25,6 +25,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: false,\n         pre_link_args: args,\n         position_independent_executables: false,\n+        eh_frame_header: false,\n         ..Default::default()\n     }\n }"}, {"sha": "214142b88fc2c7721f6617ba6e999abdbb6d0c25", "filename": "src/librustc_target/spec/illumos_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fillumos_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fillumos_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fillumos_base.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -23,6 +23,7 @@ pub fn opts() -> TargetOptions {\n         is_like_solaris: true,\n         limit_rdylib_exports: false, // Linker doesn't support this\n         eliminate_frame_pointer: false,\n+        eh_frame_header: false,\n         late_link_args,\n \n         // While we support ELF TLS, rust requires a way to register"}, {"sha": "61dba6c72bd4f86016ea9795e1640c679349a359", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -987,6 +987,11 @@ pub struct TargetOptions {\n     /// Whether to use legacy .ctors initialization hooks rather than .init_array. Defaults\n     /// to false (uses .init_array).\n     pub use_ctors_section: bool,\n+\n+    /// Whether the linker is instructed to add a `GNU_EH_FRAME` ELF header\n+    /// used to locate unwinding information is passed\n+    /// (only has effect if the linker is `ld`-like).\n+    pub eh_frame_header: bool,\n }\n \n impl Default for TargetOptions {\n@@ -1078,6 +1083,7 @@ impl Default for TargetOptions {\n             relax_elf_relocations: false,\n             llvm_args: vec![],\n             use_ctors_section: false,\n+            eh_frame_header: true,\n         }\n     }\n }\n@@ -1470,6 +1476,7 @@ impl Target {\n         key!(relax_elf_relocations, bool);\n         key!(llvm_args, list);\n         key!(use_ctors_section, bool);\n+        key!(eh_frame_header, bool);\n \n         // NB: The old name is deprecated, but support for it is retained for\n         // compatibility.\n@@ -1707,6 +1714,7 @@ impl ToJson for Target {\n         target_option_val!(relax_elf_relocations);\n         target_option_val!(llvm_args);\n         target_option_val!(use_ctors_section);\n+        target_option_val!(eh_frame_header);\n \n         if default.unsupported_abis != self.options.unsupported_abis {\n             d.insert("}, {"sha": "f75697996ac7863870e02b78052bc5a09c613945", "filename": "src/librustc_target/spec/msp430_none_elf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -56,6 +56,8 @@ pub fn target() -> TargetResult {\n             // See the thumb_base.rs file for an explanation of this value\n             emit_debug_gdb_scripts: false,\n \n+            eh_frame_header: false,\n+\n             ..Default::default()\n         },\n     })"}, {"sha": "5b5e342000b55d70d486a0bc508215ef983e3785", "filename": "src/librustc_target/spec/riscv32i_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv32i_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv32i_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32i_unknown_none_elf.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -25,6 +25,7 @@ pub fn target() -> TargetResult {\n             relocation_model: RelocModel::Static,\n             emit_debug_gdb_scripts: false,\n             unsupported_abis: super::riscv_base::unsupported_abis(),\n+            eh_frame_header: false,\n             ..Default::default()\n         },\n     })"}, {"sha": "4cef5c42d8ddfc8c54d5036280a3fcd38402c563", "filename": "src/librustc_target/spec/riscv32imac_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -25,6 +25,7 @@ pub fn target() -> TargetResult {\n             relocation_model: RelocModel::Static,\n             emit_debug_gdb_scripts: false,\n             unsupported_abis: super::riscv_base::unsupported_abis(),\n+            eh_frame_header: false,\n             ..Default::default()\n         },\n     })"}, {"sha": "8ad563e441de3183345e829804e9c2befbdf814a", "filename": "src/librustc_target/spec/riscv32imc_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -25,6 +25,7 @@ pub fn target() -> TargetResult {\n             relocation_model: RelocModel::Static,\n             emit_debug_gdb_scripts: false,\n             unsupported_abis: super::riscv_base::unsupported_abis(),\n+            eh_frame_header: false,\n             ..Default::default()\n         },\n     })"}, {"sha": "3aeb3f3ca72b2beef3b33f89641cc4a398105bcf", "filename": "src/librustc_target/spec/riscv64gc_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv64gc_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv64gc_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv64gc_unknown_none_elf.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -26,6 +26,7 @@ pub fn target() -> TargetResult {\n             code_model: Some(CodeModel::Medium),\n             emit_debug_gdb_scripts: false,\n             unsupported_abis: super::riscv_base::unsupported_abis(),\n+            eh_frame_header: false,\n             ..Default::default()\n         },\n     })"}, {"sha": "d8144964dc913277ea849a163e7dd68a55c51baf", "filename": "src/librustc_target/spec/riscv64imac_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv64imac_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Friscv64imac_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv64imac_unknown_none_elf.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -26,6 +26,7 @@ pub fn target() -> TargetResult {\n             code_model: Some(CodeModel::Medium),\n             emit_debug_gdb_scripts: false,\n             unsupported_abis: super::riscv_base::unsupported_abis(),\n+            eh_frame_header: false,\n             ..Default::default()\n         },\n     })"}, {"sha": "3d7f0034b8b10dd128f5311102e431d93dcc9f2b", "filename": "src/librustc_target/spec/solaris_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -8,6 +8,7 @@ pub fn opts() -> TargetOptions {\n         target_family: Some(\"unix\".to_string()),\n         is_like_solaris: true,\n         limit_rdylib_exports: false, // Linker doesn't support this\n+        eh_frame_header: false,\n \n         ..Default::default()\n     }"}, {"sha": "69236e98e58d7890befe267b1076a2cfd6268f23", "filename": "src/librustc_target/spec/windows_gnu_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fwindows_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b9a6486ab0814f4c7d57c22c75216fdc1ebf14/src%2Flibrustc_target%2Fspec%2Fwindows_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_gnu_base.rs?ref=49b9a6486ab0814f4c7d57c22c75216fdc1ebf14", "patch": "@@ -91,6 +91,7 @@ pub fn opts() -> TargetOptions {\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,\n         requires_uwtable: true,\n+        eh_frame_header: false,\n \n         ..Default::default()\n     }"}]}