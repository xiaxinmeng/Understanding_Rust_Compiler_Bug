{"sha": "6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NDNjYThkY2QyZjA4ZDZlNzI5MWUzMGJiYzZhOGM5OWM0YTI4YzU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-11-09T04:26:53Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-11-09T04:26:53Z"}, "message": "make DeepClone inherit from Clone", "tree": {"sha": "f0a26f93fd82ae930df1b55aaa250dc434fda637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0a26f93fd82ae930df1b55aaa250dc434fda637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5", "html_url": "https://github.com/rust-lang/rust/commit/6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "421c63157053f72184f3548d0aa74dc1279c04f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/421c63157053f72184f3548d0aa74dc1279c04f1", "html_url": "https://github.com/rust-lang/rust/commit/421c63157053f72184f3548d0aa74dc1279c04f1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "584963c36ca231906a8bc85412d47a062edc18f3", "filename": "src/libstd/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5/src%2Flibstd%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5/src%2Flibstd%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fclone.rs?ref=6943ca8dcd2f08d6e7291e30bbc6a8c99c4a28c5", "patch": "@@ -133,7 +133,7 @@ extern_fn_clone!(A, B, C, D, E, F, G, H)\n \n /// A trait distinct from `Clone` which represents \"deep copies\" of things like\n /// managed boxes which would otherwise not be copied.\n-pub trait DeepClone {\n+pub trait DeepClone: Clone {\n     /// Return a deep copy of the value. Unlike `Clone`, the contents of shared pointer types\n     /// *are* copied.\n     fn deep_clone(&self) -> Self;"}]}