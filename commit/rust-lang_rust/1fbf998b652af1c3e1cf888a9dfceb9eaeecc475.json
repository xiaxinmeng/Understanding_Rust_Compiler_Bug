{"sha": "1fbf998b652af1c3e1cf888a9dfceb9eaeecc475", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYmY5OThiNjUyYWYxYzNlMWNmODg4YTlkZmNlYjllYWVlY2M0NzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-14T17:00:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-14T17:47:41Z"}, "message": "Fix remaining windows hooks", "tree": {"sha": "05d42f3b9d142a6d0ef7076d53e8a78fe4c1b89b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05d42f3b9d142a6d0ef7076d53e8a78fe4c1b89b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475", "html_url": "https://github.com/rust-lang/rust/commit/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c73df9985871a5a76c55d48f1dc0797111181be", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c73df9985871a5a76c55d48f1dc0797111181be", "html_url": "https://github.com/rust-lang/rust/commit/7c73df9985871a5a76c55d48f1dc0797111181be"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "14532416978c87d4dc5a602ff1cd780b156cf217", "filename": "appveyor.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=1fbf998b652af1c3e1cf888a9dfceb9eaeecc475", "patch": "@@ -26,12 +26,12 @@ install:\n     - cd xargo\n     - set RUSTFLAGS=-Zalways-encode-mir -Zmir-emit-validate=1\n     - xargo build\n-    - set RUSTFLAGS=\n     - cd ..\n \n build: false\n \n test_script:\n+    - set RUSTFLAGS=-g\n     - set RUST_BACKTRACE=1\n     - cargo build --release\n     - cargo test --release"}, {"sha": "509119beb35c43f894205f2d38355eb679050c4c", "filename": "src/fn_call.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fbf998b652af1c3e1cf888a9dfceb9eaeecc475/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=1fbf998b652af1c3e1cf888a9dfceb9eaeecc475", "patch": "@@ -645,13 +645,11 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n             \"GetProcAddress\" |\n             \"TryEnterCriticalSection\" => {\n                 // pretend these do not exist/nothing happened, by returning zero\n-                let ptr_size = self.memory.pointer_size();\n-                self.write_scalar(dest, Scalar::from_int(0, ptr_size), dest_ty)?;\n+                self.write_scalar(dest, Scalar::from_int(0, dest_layout.size), dest_ty)?;\n             },\n             \"GetLastError\" => {\n                 // this is c::ERROR_CALL_NOT_IMPLEMENTED\n-                let ptr_size = self.memory.pointer_size();\n-                self.write_scalar(dest, Scalar::from_int(120, ptr_size), dest_ty)?;\n+                self.write_scalar(dest, Scalar::from_int(120, dest_layout.size), dest_ty)?;\n             },\n \n             // Windows TLS\n@@ -665,8 +663,7 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n                 if dest_layout.size.bits() < 128 && key >= (1u128 << dest_layout.size.bits() as u128) {\n                     return err!(OutOfTls);\n                 }\n-                let ptr_size = self.memory.pointer_size();\n-                self.write_scalar(dest, Scalar::from_uint(key, ptr_size), dest_layout.ty)?;\n+                self.write_scalar(dest, Scalar::from_uint(key, dest_layout.size), dest_layout.ty)?;\n             }\n             \"TlsGetValue\" => {\n                 let key = self.value_to_scalar(args[0])?.to_bytes()?;\n@@ -677,10 +674,9 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n                 let key = self.value_to_scalar(args[0])?.to_bytes()?;\n                 let new_ptr = self.into_ptr(args[1].value)?.unwrap_or_err()?;\n                 self.memory.store_tls(key, new_ptr)?;\n-                let ptr_size = self.memory.pointer_size();\n \n                 // Return success (1)\n-                self.write_scalar(dest, Scalar::from_int(1, ptr_size), dest_ty)?;\n+                self.write_scalar(dest, Scalar::from_int(1, dest_layout.size), dest_ty)?;\n             }\n \n             // We can't execute anything else"}]}