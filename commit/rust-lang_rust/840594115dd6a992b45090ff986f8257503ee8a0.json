{"sha": "840594115dd6a992b45090ff986f8257503ee8a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MDU5NDExNWRkNmE5OTJiNDUwOTBmZjk4NmY4MjU3NTAzZWU4YTA=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-22T05:16:31Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-22T05:16:31Z"}, "message": "Update for changes in rustc.", "tree": {"sha": "97064b210c86e52971275b9c864d3a9263dd9e3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97064b210c86e52971275b9c864d3a9263dd9e3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/840594115dd6a992b45090ff986f8257503ee8a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/840594115dd6a992b45090ff986f8257503ee8a0", "html_url": "https://github.com/rust-lang/rust/commit/840594115dd6a992b45090ff986f8257503ee8a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/840594115dd6a992b45090ff986f8257503ee8a0/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89b9b3536eab99a673ae42ef71fc0c6a5f1ff1ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/89b9b3536eab99a673ae42ef71fc0c6a5f1ff1ae", "html_url": "https://github.com/rust-lang/rust/commit/89b9b3536eab99a673ae42ef71fc0c6a5f1ff1ae"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "f87f5e43a96056bfaff80b9e80b7f9189a5fe877", "filename": "src/interpreter/step.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/840594115dd6a992b45090ff986f8257503ee8a0/src%2Finterpreter%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840594115dd6a992b45090ff986f8257503ee8a0/src%2Finterpreter%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstep.rs?ref=840594115dd6a992b45090ff986f8257503ee8a0", "patch": "@@ -82,6 +82,10 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n             // Miri can safely ignore these. Only translation needs them.\n             StorageLive(_) | StorageDead(_) => {}\n+\n+            // Defined to do nothing. These are added by optimization passes, to avoid changing the\n+            // size of MIR constantly.\n+            Nop => {}\n         }\n \n         self.frame_mut().stmt += 1;\n@@ -186,12 +190,18 @@ impl<'a, 'b, 'tcx> Visitor<'tcx> for ConstantExtractor<'a, 'b, 'tcx> {\n         }\n     }\n \n-    fn visit_lvalue(&mut self, lvalue: &mir::Lvalue<'tcx>, context: LvalueContext, location: mir::Location) {\n+    fn visit_lvalue(\n+        &mut self,\n+        lvalue: &mir::Lvalue<'tcx>,\n+        context: LvalueContext<'tcx>,\n+        location: mir::Location\n+    ) {\n         self.super_lvalue(lvalue, context, location);\n         if let mir::Lvalue::Static(def_id) = *lvalue {\n             let substs = subst::Substs::empty(self.ecx.tcx);\n             let span = self.span;\n-            if let hir::map::Node::NodeItem(&hir::Item { ref node, .. }) = self.ecx.tcx.map.get_if_local(def_id).expect(\"static not found\") {\n+            let node_item = self.ecx.tcx.map.get_if_local(def_id).expect(\"static not found\");\n+            if let hir::map::Node::NodeItem(&hir::Item { ref node, .. }) = node_item {\n                 if let hir::ItemStatic(_, m, _) = *node {\n                     self.global_item(def_id, substs, span, m == hir::MutImmutable);\n                     return;"}]}