{"sha": "776be7e73e96ffc5d5a760ebe7802b3e06062cd2", "node_id": "C_kwDOAAsO6NoAKDc3NmJlN2U3M2U5NmZmYzVkNWE3NjBlYmU3ODAyYjNlMDYwNjJjZDI", "commit": {"author": {"name": "Fausto", "email": "mi9uel9@gmail.com", "date": "2022-03-07T20:48:35Z"}, "committer": {"name": "Fausto", "email": "mi9uel9@gmail.com", "date": "2022-03-07T20:48:35Z"}, "message": "promot debug_assert to assert", "tree": {"sha": "8731e85c1b65ad89be5dfac15e050067d4bfeb83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8731e85c1b65ad89be5dfac15e050067d4bfeb83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/776be7e73e96ffc5d5a760ebe7802b3e06062cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/776be7e73e96ffc5d5a760ebe7802b3e06062cd2", "html_url": "https://github.com/rust-lang/rust/commit/776be7e73e96ffc5d5a760ebe7802b3e06062cd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/776be7e73e96ffc5d5a760ebe7802b3e06062cd2/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecb867ec3cefa97a5807453a68758392730e3ed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecb867ec3cefa97a5807453a68758392730e3ed9", "html_url": "https://github.com/rust-lang/rust/commit/ecb867ec3cefa97a5807453a68758392730e3ed9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1318c5b8e3a6104d98607672b91339d62e223924", "filename": "library/std/src/sys/unix/rwlock.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/776be7e73e96ffc5d5a760ebe7802b3e06062cd2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/776be7e73e96ffc5d5a760ebe7802b3e06062cd2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Frwlock.rs?ref=776be7e73e96ffc5d5a760ebe7802b3e06062cd2", "patch": "@@ -48,9 +48,9 @@ impl RWLock {\n             }\n             panic!(\"rwlock read lock would result in deadlock\");\n         } else {\n-            // According to POSIX, for a properly initialized rwlock this can only\n-            // return EAGAIN or EDEADLK or 0. We rely on that.\n-            debug_assert_eq!(r, 0);\n+            // POSIX does not make guarantees about all the errors that may be returned.\n+            // See issue #94705 for more details.\n+            assert_eq!(r, 0, \"unexpected error during rwlock read lock: {:?}\", r);\n             self.num_readers.fetch_add(1, Ordering::Relaxed);\n         }\n     }"}]}