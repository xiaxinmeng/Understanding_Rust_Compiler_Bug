{"sha": "44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZGQyNDdjZDVjZWQ4YWU4YThjNmYxZDA0NDYzYWJjZTIxYzhlOWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-07-17T23:28:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-07-20T20:17:41Z"}, "message": "doc: Clean up primitive short descriptions\n\nThis makes the primitive descriptions on the front page read properly\nas descriptions of types and not of the associated modules.", "tree": {"sha": "107138e203675db258f5bcf581cf3b68ecce942f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/107138e203675db258f5bcf581cf3b68ecce942f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "html_url": "https://github.com/rust-lang/rust/commit/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47265bbf37385a087235a8c5eddea5944ae6465e", "url": "https://api.github.com/repos/rust-lang/rust/commits/47265bbf37385a087235a8c5eddea5944ae6465e", "html_url": "https://github.com/rust-lang/rust/commit/47265bbf37385a087235a8c5eddea5944ae6465e"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "ae6cda793d05450b11d06e58dc23388a15fd85fd", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Utilities for slice manipulation\n+//! A dynamically-sized view into a contiguous sequence, `[T]`.\n //!\n //! The `slice` module contains useful code to help work with slice values.\n //! Slices are a view into a block of memory represented as a pointer and a"}, {"sha": "8ab1464379f8f6a778daf2e063fb9d0f8b6f066c", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Unicode string manipulation (the `str` type).\n+//! Unicode string slices\n //!\n //! Rust's `str` type is one of the core primitive types of the language. `&str`\n //! is the borrowed string type. This type of string can only be created from"}, {"sha": "b47ced03fba2999a7e617ab1d4e39f5b2d1e8525", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -10,7 +10,7 @@\n \n // FIXME: talk about offset, copy_memory, copy_nonoverlapping_memory\n \n-//! Operations on raw pointers, `*const T`, and `*mut T`.\n+//! Raw, unsafe pointers, `*const T`, and `*mut T`\n //!\n //! Working with raw pointers in Rust is uncommon,\n //! typically limited to a few patterns."}, {"sha": "9e97078c529e1525e474b7cacf6fd8ae02bdbe1e", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations on tuples\n+//! A finite heterogeneous sequence, `(T, U, ..)`\n //!\n //! To access a single element of a tuple one can use the `.0`\n //! field access syntax."}, {"sha": "fb9ff26776202a39de3804e3a00271da71e90b3b", "filename": "src/librustc_unicode/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibrustc_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibrustc_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Fchar.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Character manipulation (`char` type, Unicode Scalar Value)\n+//! A Unicode scalar value\n //!\n //! This module provides the `CharExt` trait, as well as its\n //! implementation for the primitive `char` type, in order to allow"}, {"sha": "f6d133319c8488c589625c22d3e30f25a075e1f4", "filename": "src/libstd/array.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Farray.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! A fixed-size array is denoted `[T; N]` for the element type `T` and\n-//! the compile time constant size `N`. The size must be zero or positive.\n+//! A fixed-size array, denoted `[T; N]`, for the element type, `T`, and\n+//! the non-negative compile time constant size, `N`.\n //!\n //! Arrays values are created either with an explicit expression that lists\n //! each element: `[x, y, z]` or a repeat expression: `[x; N]`. The repeat"}, {"sha": "561b84ca21a55be265f6e05f5cf18d8083870ba0", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for 32-bits floats (`f32` type)\n+//! The 32-bit floating point type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![allow(missing_docs)]"}, {"sha": "8a77566faeb92416263b2d7ea3570743e9122c2e", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for 64-bits floats (`f64` type)\n+//! The 32-bit floating point type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![allow(missing_docs)]"}, {"sha": "04a45072d1a5bfc0ba40c08fcd55f6416419d17f", "filename": "src/libstd/num/i16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi16.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for signed 16-bits integers (`i16` type)\n+//! The 16-bit signed integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"i16\")]"}, {"sha": "09177c188de3f4ee41647fa8e86540c57d312d14", "filename": "src/libstd/num/i32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi32.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for signed 32-bits integers (`i32` type)\n+//! The 32-bit signed integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"i32\")]"}, {"sha": "84fccc9d25fda0d0d896e3289b078c5436439927", "filename": "src/libstd/num/i64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi64.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for signed 64-bits integers (`i64` type)\n+//! The 64-bit signed integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"i64\")]"}, {"sha": "f0e848838476475ca3c4557bb44172b349a573e0", "filename": "src/libstd/num/i8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi8.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for signed 8-bits integers (`i8` type)\n+//! The 8-bit signed integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"i8\")]"}, {"sha": "b602c7c704ad97e1fd472076534086dbb9a71df9", "filename": "src/libstd/num/isize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fisize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fisize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fisize.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for pointer-sized signed integers (`isize` type)\n+//! The pointer-sized signed integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"isize\")]"}, {"sha": "17f254022009cbc68fad86ac3559d5e2d79b969c", "filename": "src/libstd/num/u16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu16.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for unsigned 16-bits integers (`u16` type)\n+//! The 16-bit unsigned integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"u16\")]"}, {"sha": "13be3677dac59b9db1bdf84823c22fbf9188556a", "filename": "src/libstd/num/u32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu32.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for unsigned 32-bits integers (`u32` type)\n+//! The 32-bit unsigned integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"u32\")]"}, {"sha": "40b6e138307aaec7f0296ae29df61692753faaef", "filename": "src/libstd/num/u64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu64.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for unsigned 64-bits integer (`u64` type)\n+//! The 64-bit unsigned integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"u64\")]"}, {"sha": "02fc807e1f2d179646a4d49d070c20fd0cfb1178", "filename": "src/libstd/num/u8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fu8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu8.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for unsigned 8-bits integers (`u8` type)\n+//! The 8-bit unsigned integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"u8\")]"}, {"sha": "548c0dbb8dcea176d7b65849dfe6569adb4e776f", "filename": "src/libstd/num/usize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fusize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Fnum%2Fusize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fusize.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations and constants for pointer-sized unsigned integers (`usize` type)\n+//! The pointer-sized unsigned integer type\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(primitive = \"usize\")]"}, {"sha": "1e4de19c8746605016cdb3ec7ff584751dd3a739", "filename": "src/libstd/tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e/src%2Flibstd%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftuple.rs?ref=44dd247cd5ced8ae8a8c6f1d04463abce21c8e9e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations on tuples\n+//! A finite heterogeneous sequence, `(T, U, ..)`\n //!\n //! To access the _N_-th element of a tuple one can use `N` itself\n //! as a field of the tuple."}]}