{"sha": "041c9a0863e01f2cfa92816eaaf8ea295f851157", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MWM5YTA4NjNlMDFmMmNmYTkyODE2ZWFhZjhlYTI5NWY4NTExNTc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T22:41:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T22:43:01Z"}, "message": "core: Optimize str::bytes\n\nThis compiles down to a memmove. Takes about 1/4 of the time of the old\nversion.", "tree": {"sha": "dd7703cb4b528b3ca399881cdbc6e59b9c7773bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd7703cb4b528b3ca399881cdbc6e59b9c7773bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/041c9a0863e01f2cfa92816eaaf8ea295f851157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/041c9a0863e01f2cfa92816eaaf8ea295f851157", "html_url": "https://github.com/rust-lang/rust/commit/041c9a0863e01f2cfa92816eaaf8ea295f851157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/041c9a0863e01f2cfa92816eaaf8ea295f851157/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "771177a8142d3cb1d431c71b80f4b9b20ac35339", "url": "https://api.github.com/repos/rust-lang/rust/commits/771177a8142d3cb1d431c71b80f4b9b20ac35339", "html_url": "https://github.com/rust-lang/rust/commit/771177a8142d3cb1d431c71b80f4b9b20ac35339"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "d2fceb2d85dcb4abc853963d2cbf5d4e4c70a691", "filename": "src/libcore/str.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/041c9a0863e01f2cfa92816eaaf8ea295f851157/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041c9a0863e01f2cfa92816eaaf8ea295f851157/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=041c9a0863e01f2cfa92816eaaf8ea295f851157", "patch": "@@ -311,7 +311,11 @@ Converts a string to a vector of bytes\n The result vector is not null-terminated.\n \"]\n fn bytes(s: str) -> [u8] unsafe {\n-    as_bytes(s) { |v| vec::slice(v, 0u, vec::len(v) - 1u) }\n+    let mut s_copy = s;\n+    let mut v: [u8] = ::unsafe::reinterpret_cast(s_copy);\n+    ::unsafe::leak(s_copy);\n+    vec::unsafe::set_len(v, len(s));\n+    ret v;\n }\n \n #[doc = \"Convert a string to a vector of characters\"]"}]}