{"sha": "f6d70b42b8d6d299fe5621ac9170f69c511c8ddc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZDcwYjQyYjhkNmQyOTlmZTU2MjFhYzkxNzBmNjljNTExYzhkZGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-21T09:08:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-21T09:08:37Z"}, "message": "remove write_repeat; it is subsumed by the new write_bytes", "tree": {"sha": "9ede4e6becc314759e8f1f1d4400e15a61e94e12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ede4e6becc314759e8f1f1d4400e15a61e94e12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6d70b42b8d6d299fe5621ac9170f69c511c8ddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d70b42b8d6d299fe5621ac9170f69c511c8ddc", "html_url": "https://github.com/rust-lang/rust/commit/f6d70b42b8d6d299fe5621ac9170f69c511c8ddc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6d70b42b8d6d299fe5621ac9170f69c511c8ddc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4b365429ddaeb18b42ff47456bd9865fd1d732e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b365429ddaeb18b42ff47456bd9865fd1d732e", "html_url": "https://github.com/rust-lang/rust/commit/d4b365429ddaeb18b42ff47456bd9865fd1d732e"}], "stats": {"total": 19, "additions": 0, "deletions": 19}, "files": [{"sha": "796d293e2c63cb72c1e05c32ed6c3a6618ef819b", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f6d70b42b8d6d299fe5621ac9170f69c511c8ddc/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d70b42b8d6d299fe5621ac9170f69c511c8ddc/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=f6d70b42b8d6d299fe5621ac9170f69c511c8ddc", "patch": "@@ -367,25 +367,6 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n         Ok(())\n     }\n \n-    /// Sets `count` bytes starting at `ptr.offset` with `val`. Basically `memset`.\n-    ///\n-    /// It is the caller's responsibility to check bounds and alignment beforehand.\n-    /// Most likely, you want to call `Memory::write_bytes` instead of this method.\n-    pub fn write_repeat(\n-        &mut self,\n-        cx: &impl HasDataLayout,\n-        ptr: Pointer<Tag>,\n-        val: u8,\n-        count: Size\n-    ) -> InterpResult<'tcx>\n-    {\n-        let bytes = self.get_bytes_mut(cx, ptr, count)?;\n-        for b in bytes {\n-            *b = val;\n-        }\n-        Ok(())\n-    }\n-\n     /// Reads a *non-ZST* scalar.\n     ///\n     /// ZSTs can't be read for two reasons:"}]}