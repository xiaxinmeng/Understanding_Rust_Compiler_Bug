{"sha": "05abc65b993d7bc25e50678cf1d6b522f6e75804", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YWJjNjViOTkzZDdiYzI1ZTUwNjc4Y2YxZDZiNTIyZjZlNzU4MDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-04T21:36:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-04T21:36:36Z"}, "message": "Merge pull request #20464 from ranma42/improve-make-hash\n\nImprove `make_hash` function\n\nReviewed-by: Gankro, Gankro", "tree": {"sha": "de6bebbd9c3d0a8fa9f04e4babb63a7677c8c2ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de6bebbd9c3d0a8fa9f04e4babb63a7677c8c2ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05abc65b993d7bc25e50678cf1d6b522f6e75804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05abc65b993d7bc25e50678cf1d6b522f6e75804", "html_url": "https://github.com/rust-lang/rust/commit/05abc65b993d7bc25e50678cf1d6b522f6e75804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05abc65b993d7bc25e50678cf1d6b522f6e75804/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56795ad8c39a628960f242e88e045a0ea9b6a473", "url": "https://api.github.com/repos/rust-lang/rust/commits/56795ad8c39a628960f242e88e045a0ea9b6a473", "html_url": "https://github.com/rust-lang/rust/commit/56795ad8c39a628960f242e88e045a0ea9b6a473"}, {"sha": "28cca28e623c1ac5a2a3e7dcdd31b3a90552c9eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/28cca28e623c1ac5a2a3e7dcdd31b3a90552c9eb", "html_url": "https://github.com/rust-lang/rust/commit/28cca28e623c1ac5a2a3e7dcdd31b3a90552c9eb"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "ab91beb4f9be1bb450e2bc192953178f33b90350", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/05abc65b993d7bc25e50678cf1d6b522f6e75804/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05abc65b993d7bc25e50678cf1d6b522f6e75804/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=05abc65b993d7bc25e50678cf1d6b522f6e75804", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2014-2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -139,13 +139,11 @@ impl SafeHash {\n /// This function wraps up `hash_keyed` to be the only way outside this\n /// module to generate a SafeHash.\n pub fn make_hash<Sized? T: Hash<S>, S, H: Hasher<S>>(hasher: &H, t: &T) -> SafeHash {\n-    match hasher.hash(t) {\n-        // This constant is exceedingly likely to hash to the same\n-        // bucket, but it won't be counted as empty! Just so we can maintain\n-        // our precious uniform distribution of initial indexes.\n-        EMPTY_BUCKET => SafeHash { hash: 0x8000_0000_0000_0000 },\n-        h            => SafeHash { hash: h },\n-    }\n+    // We need to avoid 0u64 in order to prevent collisions with\n+    // EMPTY_HASH. We can maintain our precious uniform distribution\n+    // of initial indexes by unconditionally setting the MSB,\n+    // effectively reducing 64-bits hashes to 63 bits.\n+    SafeHash { hash: 0x8000_0000_0000_0000 | hasher.hash(t) }\n }\n \n // `replace` casts a `*u64` to a `*SafeHash`. Since we statically"}]}