{"sha": "e258489eae1d5e0b8a624e1729fb64fbcb6e29ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNTg0ODllYWUxZDVlMGI4YTYyNGUxNzI5ZmI2NGZiY2I2ZTI5ZWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-24T18:24:48Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-31T02:36:46Z"}, "message": "stabilize const_int_rotate", "tree": {"sha": "e946ded6678df1a2acd1f8de0a368864771416ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e946ded6678df1a2acd1f8de0a368864771416ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee", "html_url": "https://github.com/rust-lang/rust/commit/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e7c337aef6e87f6152771351eaed32b31d666f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e7c337aef6e87f6152771351eaed32b31d666f7", "html_url": "https://github.com/rust-lang/rust/commit/7e7c337aef6e87f6152771351eaed32b31d666f7"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "dc4a5fbed7c9d38d0f961c0dc4493e83e47abbbd", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=e258489eae1d5e0b8a624e1729fb64fbcb6e29ee", "patch": "@@ -113,7 +113,7 @@\n #![feature(const_slice_len)]\n #![feature(const_str_as_bytes)]\n #![feature(const_str_len)]\n-#![feature(const_int_rotate)]\n+#![cfg_attr(stage0, feature(const_int_rotate))]\n #![feature(const_int_sign)]\n #![feature(const_int_conversion)]\n #![feature(const_transmute)]"}, {"sha": "6f32451299bbd544e05f675feecd6d8f8e9f22e6", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=e258489eae1d5e0b8a624e1729fb64fbcb6e29ee", "patch": "@@ -357,7 +357,7 @@ let m = \", $rot_result, \";\n assert_eq!(n.rotate_left(\", $rot, \"), m);\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            #[rustc_const_unstable(feature = \"const_int_rotate\")]\n+            #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_rotate\"))]\n             #[inline]\n             pub const fn rotate_left(self, n: u32) -> Self {\n                 (self as $UnsignedT).rotate_left(n) as Self\n@@ -382,7 +382,7 @@ let m = \", $rot_op, \";\n assert_eq!(n.rotate_right(\", $rot, \"), m);\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            #[rustc_const_unstable(feature = \"const_int_rotate\")]\n+            #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_rotate\"))]\n             #[inline]\n             pub const fn rotate_right(self, n: u32) -> Self {\n                 (self as $UnsignedT).rotate_right(n) as Self\n@@ -2310,7 +2310,7 @@ let m = \", $rot_result, \";\n assert_eq!(n.rotate_left(\", $rot, \"), m);\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            #[rustc_const_unstable(feature = \"const_int_rotate\")]\n+            #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_rotate\"))]\n             #[inline]\n             pub const fn rotate_left(self, n: u32) -> Self {\n                 unsafe { intrinsics::rotate_left(self, n as $SelfT) }\n@@ -2335,7 +2335,7 @@ let m = \", $rot_op, \";\n assert_eq!(n.rotate_right(\", $rot, \"), m);\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            #[rustc_const_unstable(feature = \"const_int_rotate\")]\n+            #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_rotate\"))]\n             #[inline]\n             pub const fn rotate_right(self, n: u32) -> Self {\n                 unsafe { intrinsics::rotate_right(self, n as $SelfT) }"}, {"sha": "43013129541f194322478220a3782c863fad608d", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e258489eae1d5e0b8a624e1729fb64fbcb6e29ee/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=e258489eae1d5e0b8a624e1729fb64fbcb6e29ee", "patch": "@@ -396,11 +396,13 @@ fn is_intrinsic_whitelisted(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> bool\n         | \"min_align_of\"\n         | \"needs_drop\"\n         // Arithmetic:\n-        | \"overflowing_add\" // ~> wrapping_add\n-        | \"overflowing_sub\" // ~> wrapping_sub\n-        | \"overflowing_mul\" // ~> wrapping_mul\n-        | \"unchecked_shl\" // ~> wrapping_shl\n-        | \"unchecked_shr\" // ~> wrapping_shr\n+        | \"overflowing_add\" // ~> .wrapping_add\n+        | \"overflowing_sub\" // ~> .wrapping_sub\n+        | \"overflowing_mul\" // ~> .wrapping_mul\n+        | \"unchecked_shl\" // ~> .wrapping_shl\n+        | \"unchecked_shr\" // ~> .wrapping_shr\n+        | \"rotate_left\" // ~> .rotate_left\n+        | \"rotate_right\" // ~> .rotate_right\n         => true,\n         _ => false,\n     }"}]}