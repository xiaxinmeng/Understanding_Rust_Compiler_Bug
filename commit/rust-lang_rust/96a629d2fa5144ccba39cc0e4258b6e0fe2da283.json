{"sha": "96a629d2fa5144ccba39cc0e4258b6e0fe2da283", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YTYyOWQyZmE1MTQ0Y2NiYTM5Y2MwZTQyNThiNmUwZmUyZGEyODM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-26T01:07:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-30T04:07:03Z"}, "message": "Base test concurrency on the number of scheduler threads.\n\nIdeally we would just spawn every test and collect the results but I'm not\nentirely comfortable doing that yet for reasons that I'm too tired to remember\nright now. Urgh.", "tree": {"sha": "a31f83ca4f26b8bdb4365241223fc0b49bbf3ac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a31f83ca4f26b8bdb4365241223fc0b49bbf3ac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96a629d2fa5144ccba39cc0e4258b6e0fe2da283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96a629d2fa5144ccba39cc0e4258b6e0fe2da283", "html_url": "https://github.com/rust-lang/rust/commit/96a629d2fa5144ccba39cc0e4258b6e0fe2da283", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96a629d2fa5144ccba39cc0e4258b6e0fe2da283/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dbe6941c45571fb401719fa7b6a811a4ff0e80d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dbe6941c45571fb401719fa7b6a811a4ff0e80d", "html_url": "https://github.com/rust-lang/rust/commit/9dbe6941c45571fb401719fa7b6a811a4ff0e80d"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "7ee3c62c291bb39db85757188fa60b8ceafa7520", "filename": "src/lib/test.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/96a629d2fa5144ccba39cc0e4258b6e0fe2da283/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96a629d2fa5144ccba39cc0e4258b6e0fe2da283/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=96a629d2fa5144ccba39cc0e4258b6e0fe2da283", "patch": "@@ -24,6 +24,12 @@ export test_to_task;\n export default_test_to_task;\n export configure_test_task;\n \n+native \"rust\" mod rustrt {\n+    fn hack_allow_leaks();\n+    fn sched_threads() -> uint;\n+}\n+\n+\n // The name of a test. By convention this follows the rules for rust\n // paths, i.e it should be a series of identifiers seperated by double\n // colons. This way if some test runner wants to arrange the tests\n@@ -236,15 +242,7 @@ fn run_tests(opts: &test_opts, tests: &test_desc[],\n     }\n }\n \n-fn get_concurrency() -> uint {\n-    alt getenv(\"RUST_THREADS\") {\n-      option::some(t) {\n-        let threads = uint::parse_buf(str::bytes(t), 10u);\n-        threads > 0u ? threads : 1u\n-      }\n-      option::none. { 1u }\n-    }\n-}\n+fn get_concurrency() -> uint { rustrt::sched_threads() }\n \n fn filter_tests(opts: &test_opts, tests: &test_desc[]) -> test_desc[] {\n     let filtered = tests;\n@@ -329,10 +327,6 @@ fn run_test(test: &test_desc, to_task: &test_to_task) -> test_future {\n     }\n }\n \n-native \"rust\" mod rustrt {\n-    fn hack_allow_leaks();\n-}\n-\n // We need to run our tests in another task in order to trap test failures.\n // But, at least currently, functions can't be used as spawn arguments so\n // we've got to treat our test functions as unsafe pointers.  This function"}]}