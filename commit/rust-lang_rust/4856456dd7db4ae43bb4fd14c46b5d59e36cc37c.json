{"sha": "4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NTY0NTZkZDdkYjRhZTQzYmI0ZmQxNGM0NmI1ZDU5ZTM2Y2MzN2M=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-09T18:20:25Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-25T12:04:07Z"}, "message": "Move mem-categorization more things to use TYPER for the method origin", "tree": {"sha": "f647d2a5dcb7ad43c1bc5a9d2c800a36b82b6fbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f647d2a5dcb7ad43c1bc5a9d2c800a36b82b6fbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "html_url": "https://github.com/rust-lang/rust/commit/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a583ba2fa007b27a92a1be676b271aefcb250128", "url": "https://api.github.com/repos/rust-lang/rust/commits/a583ba2fa007b27a92a1be676b271aefcb250128", "html_url": "https://github.com/rust-lang/rust/commit/a583ba2fa007b27a92a1be676b271aefcb250128"}], "stats": {"total": 60, "additions": 41, "deletions": 19}, "files": [{"sha": "c7dd4dd26469c5b761bf13c65d897017cb8407bf", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "patch": "@@ -654,22 +654,19 @@ impl<'d,'t,'tcx,TYPER:mc::Typer<'tcx>> ExprUseVisitor<'d,'t,'tcx,TYPER> {\n             }\n             _ => {\n                 let overloaded_call_type =\n-                    match self.tcx()\n-                              .method_map\n-                              .borrow()\n-                              .get(&MethodCall::expr(call.id)) {\n-                    Some(ref method_callee) => {\n-                        OverloadedCallType::from_method_origin(\n-                            self.tcx(),\n-                            &method_callee.origin)\n-                    }\n-                    None => {\n-                        self.tcx().sess.span_bug(\n-                            callee.span,\n-                            format!(\"unexpected callee type {}\",\n-                                    callee_ty.repr(self.tcx()))[])\n-                    }\n-                };\n+                    match self.typer.node_method_origin(MethodCall::expr(call.id)) {\n+                        Some(method_origin) => {\n+                            OverloadedCallType::from_method_origin(\n+                                self.tcx(),\n+                                &method_origin)\n+                        }\n+                        None => {\n+                            self.tcx().sess.span_bug(\n+                                callee.span,\n+                                format!(\"unexpected callee type {}\",\n+                                        callee_ty.repr(self.tcx())).as_slice())\n+                        }\n+                    };\n                 match overloaded_call_type {\n                     FnMutOverloadedCall => {\n                         self.borrow_expr(callee,"}, {"sha": "9f7472c2c73482948addab1b290c4320f8baecab", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "patch": "@@ -285,6 +285,8 @@ pub trait Typer<'tcx> {\n     fn node_ty(&self, id: ast::NodeId) -> Ty<'tcx>;\n     fn expr_ty_adjusted(&self, expr: &ast::Expr) -> Ty<'tcx>;\n     fn node_method_ty(&self, method_call: ty::MethodCall) -> Option<Ty<'tcx>>;\n+    fn node_method_origin(&self, method_call: ty::MethodCall)\n+                          -> Option<ty::MethodOrigin<'tcx>>;\n     fn adjustments<'a>(&'a self) -> &'a RefCell<NodeMap<ty::AutoAdjustment<'tcx>>>;\n     fn is_method_call(&self, id: ast::NodeId) -> bool;\n     fn temporary_scope(&self, rvalue_id: ast::NodeId) -> Option<region::CodeExtent>;"}, {"sha": "9cd072867355cc1b05fb415d902bceee599a1af9", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "patch": "@@ -3003,9 +3003,9 @@ pub fn type_contents<'tcx>(cx: &ctxt<'tcx>, ty: Ty<'tcx>) -> TypeContents {\n                 // FIXME(#14449): `borrowed_contents` below assumes `&mut`\n                 // unboxed closure.\n                 let upvars = unboxed_closure_upvars(cx, did, substs);\n-                TypeContents::union(upvars[],\n-                                    |f| tc_ty(cx, f.ty, cache)) |\n-                    borrowed_contents(r, MutMutable)\n+                TypeContents::union(upvars.as_slice(),\n+                                    |f| tc_ty(cx, f.ty, cache))\n+                    | borrowed_contents(r, MutMutable)\n             }\n \n             ty_tup(ref tys) => {\n@@ -6177,6 +6177,12 @@ impl<'tcx> mc::Typer<'tcx> for ty::ctxt<'tcx> {\n         self.method_map.borrow().get(&method_call).map(|method| method.ty)\n     }\n \n+    fn node_method_origin(&self, method_call: ty::MethodCall)\n+                          -> Option<ty::MethodOrigin<'tcx>>\n+    {\n+        self.method_map.borrow().get(&method_call).map(|method| method.origin.clone())\n+    }\n+\n     fn adjustments<'a>(&'a self) -> &'a RefCell<NodeMap<ty::AutoAdjustment<'tcx>>> {\n         &self.adjustments\n     }"}, {"sha": "ea2a4ef6b2801395584de899c399c40c3346e4ab", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "patch": "@@ -479,6 +479,16 @@ impl<'blk, 'tcx> mc::Typer<'tcx> for BlockS<'blk, 'tcx> {\n             .map(|method| monomorphize_type(self, method.ty))\n     }\n \n+    fn node_method_origin(&self, method_call: ty::MethodCall)\n+                          -> Option<ty::MethodOrigin<'tcx>>\n+    {\n+        self.tcx()\n+            .method_map\n+            .borrow()\n+            .get(&method_call)\n+            .map(|method| method.origin.clone())\n+    }\n+\n     fn adjustments<'a>(&'a self) -> &'a RefCell<NodeMap<ty::AutoAdjustment<'tcx>>> {\n         &self.tcx().adjustments\n     }"}, {"sha": "535a47008541c517e3ff75de9323ee37814a2fa4", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4856456dd7db4ae43bb4fd14c46b5d59e36cc37c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4856456dd7db4ae43bb4fd14c46b5d59e36cc37c", "patch": "@@ -301,6 +301,13 @@ impl<'a, 'tcx> mc::Typer<'tcx> for FnCtxt<'a, 'tcx> {\n                            .map(|method| method.ty)\n                            .map(|ty| self.infcx().resolve_type_vars_if_possible(&ty))\n     }\n+    fn node_method_origin(&self, method_call: ty::MethodCall)\n+                          -> Option<ty::MethodOrigin<'tcx>>\n+    {\n+        self.inh.method_map.borrow()\n+                           .get(&method_call)\n+                           .map(|method| method.origin.clone())\n+    }\n     fn adjustments(&self) -> &RefCell<NodeMap<ty::AutoAdjustment<'tcx>>> {\n         &self.inh.adjustments\n     }"}]}