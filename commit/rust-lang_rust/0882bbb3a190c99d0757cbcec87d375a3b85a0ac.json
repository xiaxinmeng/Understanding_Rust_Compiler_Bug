{"sha": "0882bbb3a190c99d0757cbcec87d375a3b85a0ac", "node_id": "C_kwDOAAsO6NoAKDA4ODJiYmIzYTE5MGM5OWQwNzU3Y2JjZWM4N2QzNzVhM2I4NWEwYWM", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-01-18T16:05:41Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-01-18T16:53:40Z"}, "message": "Remove some unused `Ord` derivations based on `DefId`\n\nRemoves `Ord` and `PartialOrd` from  middle::mir::mirsource, inlineasmoperand,\nterminatorkind, operand, constant, constantkind, and place", "tree": {"sha": "40701ac599e7898d381fe58ce69a4c29c20033e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40701ac599e7898d381fe58ce69a4c29c20033e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0882bbb3a190c99d0757cbcec87d375a3b85a0ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0882bbb3a190c99d0757cbcec87d375a3b85a0ac", "html_url": "https://github.com/rust-lang/rust/commit/0882bbb3a190c99d0757cbcec87d375a3b85a0ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0882bbb3a190c99d0757cbcec87d375a3b85a0ac/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bc7be860f99f4a40d45b0f74e2d01b02e072357", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc7be860f99f4a40d45b0f74e2d01b02e072357", "html_url": "https://github.com/rust-lang/rust/commit/7bc7be860f99f4a40d45b0f74e2d01b02e072357"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "48f39b26152cbbc40103eadfbe4daa74216d739f", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0882bbb3a190c99d0757cbcec87d375a3b85a0ac/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0882bbb3a190c99d0757cbcec87d375a3b85a0ac/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=0882bbb3a190c99d0757cbcec87d375a3b85a0ac", "patch": "@@ -162,7 +162,7 @@ impl MirPhase {\n }\n \n /// Where a specific `mir::Body` comes from.\n-#[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n #[derive(HashStable, TyEncodable, TyDecodable, TypeFoldable)]\n pub struct MirSource<'tcx> {\n     pub instance: InstanceDef<'tcx>,\n@@ -1255,17 +1255,7 @@ pub enum AssertKind<O> {\n     ResumedAfterPanic(GeneratorKind),\n }\n \n-#[derive(\n-    Clone,\n-    Debug,\n-    PartialEq,\n-    PartialOrd,\n-    TyEncodable,\n-    TyDecodable,\n-    Hash,\n-    HashStable,\n-    TypeFoldable\n-)]\n+#[derive(Clone, Debug, PartialEq, TyEncodable, TyDecodable, Hash, HashStable, TypeFoldable)]\n pub enum InlineAsmOperand<'tcx> {\n     In {\n         reg: InlineAsmRegOrRegClass,\n@@ -1747,7 +1737,7 @@ pub struct CopyNonOverlapping<'tcx> {\n \n /// A path to a value; something that can be evaluated without\n /// changing or disturbing program state.\n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, TyEncodable, HashStable)]\n+#[derive(Copy, Clone, PartialEq, Eq, Hash, TyEncodable, HashStable)]\n pub struct Place<'tcx> {\n     pub local: Local,\n \n@@ -2072,7 +2062,7 @@ pub struct SourceScopeLocalData {\n \n /// These are values that can appear inside an rvalue. They are intentionally\n /// limited to prevent rvalues from being nested in one another.\n-#[derive(Clone, PartialEq, PartialOrd, TyEncodable, TyDecodable, Hash, HashStable)]\n+#[derive(Clone, PartialEq, TyEncodable, TyDecodable, Hash, HashStable)]\n pub enum Operand<'tcx> {\n     /// Copy: The value must be available for use afterwards.\n     ///\n@@ -2500,7 +2490,7 @@ impl<'tcx> Debug for Rvalue<'tcx> {\n /// this does not necessarily mean that they are `==` in Rust. In\n /// particular, one must be wary of `NaN`!\n \n-#[derive(Clone, Copy, PartialEq, PartialOrd, TyEncodable, TyDecodable, Hash, HashStable)]\n+#[derive(Clone, Copy, PartialEq, TyEncodable, TyDecodable, Hash, HashStable)]\n pub struct Constant<'tcx> {\n     pub span: Span,\n \n@@ -2514,7 +2504,7 @@ pub struct Constant<'tcx> {\n     pub literal: ConstantKind<'tcx>,\n }\n \n-#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, TyEncodable, TyDecodable, Hash, HashStable, Debug)]\n+#[derive(Clone, Copy, PartialEq, Eq, TyEncodable, TyDecodable, Hash, HashStable, Debug)]\n #[derive(Lift)]\n pub enum ConstantKind<'tcx> {\n     /// This constant came from the type system"}, {"sha": "fafd847a1cbaa8ece09222a40c5623f1a1b1fad4", "filename": "compiler/rustc_middle/src/mir/terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0882bbb3a190c99d0757cbcec87d375a3b85a0ac/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0882bbb3a190c99d0757cbcec87d375a3b85a0ac/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs?ref=0882bbb3a190c99d0757cbcec87d375a3b85a0ac", "patch": "@@ -105,7 +105,7 @@ impl<'a> Iterator for SwitchTargetsIter<'a> {\n \n impl<'a> ExactSizeIterator for SwitchTargetsIter<'a> {}\n \n-#[derive(Clone, TyEncodable, TyDecodable, Hash, HashStable, PartialEq, PartialOrd)]\n+#[derive(Clone, TyEncodable, TyDecodable, Hash, HashStable, PartialEq)]\n pub enum TerminatorKind<'tcx> {\n     /// Block should have one successor in the graph; we jump there.\n     Goto { target: BasicBlock },"}]}