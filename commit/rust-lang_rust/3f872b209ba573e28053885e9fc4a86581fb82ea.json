{"sha": "3f872b209ba573e28053885e9fc4a86581fb82ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmODcyYjIwOWJhNTczZTI4MDUzODg1ZTlmYzRhODY1ODFmYjgyZWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-09T16:18:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-09T16:18:18Z"}, "message": "Rollup merge of #58676 - euclio:bootstrap-python, r=alexcrichton\n\nlook for python2 symlinks before bootstrap python\n\nBefore this commit, if you're running x.py directly on a system where\n`python` is symlinked to Python 3, then the `python` config option will\ndefault to a Python 3 interpreter. This causes debuginfo tests to fail\nwith an opaque error message, since they have a hard requirement on\nPython 2.\n\nThis commit modifies the Python probe behavior to look for python2.7 and\npython2 *before* using the interpreter used to execute `x.py`.", "tree": {"sha": "ea06e4fa02f141bbb05874fe721abbd51dfa395e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea06e4fa02f141bbb05874fe721abbd51dfa395e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f872b209ba573e28053885e9fc4a86581fb82ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcg+dLCRBK7hj4Ov3rIwAAdHIIAFbouu3z9NiWcTPBWhP8KeSF\n1aOJv/cB92kkMojiY9csqxRj0ouIvvzsskPGY8IRdIHsV6VNiczYrBJRgdz4EQP+\nbAPcypGZfGI38+i8ZmRBwkqZl2DD1uTL7oX5xaw2WGP5K6OGy4B3G5v7dKFPUE9F\noZam8ShgpaBxTNJhHBM/Jz6ysQjIvPswdz35xWJmWZJMUo6eBiT0EEZCQfrx70xO\nRljU8zFdWlO45ZKL8mO81H3fzCAI5rPSJDaXnqpqyCVtYvvDqa6wgvJ/d+mWtX47\ny8rqTeDjAOW3uT1z5RrDf6EbAgO9io0WG/RQWdWlGmRgF1iC50lXGtEJC4RNxw0=\n=4WGs\n-----END PGP SIGNATURE-----\n", "payload": "tree ea06e4fa02f141bbb05874fe721abbd51dfa395e\nparent 0c4cb48e03af0cc7481b76ada343c092bf6dfdfd\nparent 12d8a7d64e0c70a33dea591f7158aad38b1563c5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1552148298 +0100\ncommitter GitHub <noreply@github.com> 1552148298 +0100\n\nRollup merge of #58676 - euclio:bootstrap-python, r=alexcrichton\n\nlook for python2 symlinks before bootstrap python\n\nBefore this commit, if you're running x.py directly on a system where\n`python` is symlinked to Python 3, then the `python` config option will\ndefault to a Python 3 interpreter. This causes debuginfo tests to fail\nwith an opaque error message, since they have a hard requirement on\nPython 2.\n\nThis commit modifies the Python probe behavior to look for python2.7 and\npython2 *before* using the interpreter used to execute `x.py`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f872b209ba573e28053885e9fc4a86581fb82ea", "html_url": "https://github.com/rust-lang/rust/commit/3f872b209ba573e28053885e9fc4a86581fb82ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f872b209ba573e28053885e9fc4a86581fb82ea/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c4cb48e03af0cc7481b76ada343c092bf6dfdfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c4cb48e03af0cc7481b76ada343c092bf6dfdfd", "html_url": "https://github.com/rust-lang/rust/commit/0c4cb48e03af0cc7481b76ada343c092bf6dfdfd"}, {"sha": "12d8a7d64e0c70a33dea591f7158aad38b1563c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/12d8a7d64e0c70a33dea591f7158aad38b1563c5", "html_url": "https://github.com/rust-lang/rust/commit/12d8a7d64e0c70a33dea591f7158aad38b1563c5"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "9afbd937c422c187ce58113dd664b1748729708c", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3f872b209ba573e28053885e9fc4a86581fb82ea/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/3f872b209ba573e28053885e9fc4a86581fb82ea/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=3f872b209ba573e28053885e9fc4a86581fb82ea", "patch": "@@ -164,6 +164,9 @@\n # Python interpreter to use for various tasks throughout the build, notably\n # rustdoc tests, the lldb python interpreter, and some dist bits and pieces.\n # Note that Python 2 is currently required.\n+#\n+# Defaults to python2.7, then python2. If neither executable can be found, then\n+# it defaults to the Python interpreter used to execute x.py.\n #python = \"python2.7\"\n \n # Force Cargo to check that Cargo.lock describes the precise dependency"}, {"sha": "b9f456e91003843fe10655c6910220a3dcc098ae", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3f872b209ba573e28053885e9fc4a86581fb82ea/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f872b209ba573e28053885e9fc4a86581fb82ea/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=3f872b209ba573e28053885e9fc4a86581fb82ea", "patch": "@@ -34,15 +34,17 @@ impl Finder {\n \n     fn maybe_have<S: AsRef<OsStr>>(&mut self, cmd: S) -> Option<PathBuf> {\n         let cmd: OsString = cmd.as_ref().into();\n-        let path = self.path.clone();\n+        let path = &self.path;\n         self.cache.entry(cmd.clone()).or_insert_with(|| {\n-            for path in env::split_paths(&path) {\n+            for path in env::split_paths(path) {\n                 let target = path.join(&cmd);\n-                let mut cmd_alt = cmd.clone();\n-                cmd_alt.push(\".exe\");\n-                if target.is_file() || // some/path/git\n-                target.with_extension(\"exe\").exists() || // some/path/git.exe\n-                target.join(&cmd_alt).exists() { // some/path/git/git.exe\n+                let mut cmd_exe = cmd.clone();\n+                cmd_exe.push(\".exe\");\n+\n+                if target.is_file()                   // some/path/git\n+                    || path.join(&cmd_exe).exists()   // some/path/git.exe\n+                    || target.join(&cmd_exe).exists() // some/path/git/git.exe\n+                {\n                     return Some(target);\n                 }\n             }\n@@ -107,9 +109,9 @@ pub fn check(build: &mut Build) {\n     }\n \n     build.config.python = build.config.python.take().map(|p| cmd_finder.must_have(p))\n-        .or_else(|| env::var_os(\"BOOTSTRAP_PYTHON\").map(PathBuf::from)) // set by bootstrap.py\n         .or_else(|| cmd_finder.maybe_have(\"python2.7\"))\n         .or_else(|| cmd_finder.maybe_have(\"python2\"))\n+        .or_else(|| env::var_os(\"BOOTSTRAP_PYTHON\").map(PathBuf::from)) // set by bootstrap.py\n         .or_else(|| Some(cmd_finder.must_have(\"python\")));\n \n     build.config.nodejs = build.config.nodejs.take().map(|p| cmd_finder.must_have(p))"}]}