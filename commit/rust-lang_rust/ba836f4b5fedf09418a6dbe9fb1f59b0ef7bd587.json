{"sha": "ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhODM2ZjRiNWZlZGYwOTQxOGE2ZGJlOWZiMWY1OWIwZWY3YmQ1ODc=", "commit": {"author": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-03-16T22:44:58Z"}, "committer": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-03-17T18:24:49Z"}, "message": "update FIXME(#15760) to point to issue 27336 (tracking issue for Default Type Parameter Fallback)", "tree": {"sha": "904cfa60d61bc7523cc3c4524786c12ba4be4ac4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/904cfa60d61bc7523cc3c4524786c12ba4be4ac4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587", "html_url": "https://github.com/rust-lang/rust/commit/ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587/comments", "author": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7278e37d38226734dabf07b4453580868847edf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7278e37d38226734dabf07b4453580868847edf6", "html_url": "https://github.com/rust-lang/rust/commit/7278e37d38226734dabf07b4453580868847edf6"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "f0f1064752d4aba8f323e64b367b18d66a0ee841", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ba836f4b5fedf09418a6dbe9fb1f59b0ef7bd587", "patch": "@@ -2869,27 +2869,22 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 let origin = self.misc(call_span);\n                 let ures = self.at(&origin, self.param_env).sup(ret_ty, formal_ret);\n \n-                // FIXME(#15760) can't use try! here, FromError doesn't default\n+                // FIXME(#27336) can't use ? here, Try::from_error doesn't default\n                 // to identity so the resulting type is not constrained.\n                 match ures {\n                     Ok(ok) => {\n                         // Process any obligations locally as much as\n                         // we can.  We don't care if some things turn\n                         // out unconstrained or ambiguous, as we're\n                         // just trying to get hints here.\n-                        let result = self.save_and_restore_in_snapshot_flag(|_| {\n+                        self.save_and_restore_in_snapshot_flag(|_| {\n                             let mut fulfill = FulfillmentContext::new();\n                             let ok = ok; // FIXME(#30046)\n                             for obligation in ok.obligations {\n                                 fulfill.register_predicate_obligation(self, obligation);\n                             }\n                             fulfill.select_where_possible(self)\n-                        });\n-\n-                        match result {\n-                            Ok(()) => { }\n-                            Err(_) => return Err(()),\n-                        }\n+                        }).map_err(|_| ())?;\n                     }\n                     Err(_) => return Err(()),\n                 }"}]}