{"sha": "54eb3768e0077bc18152b5fc3d19824cde69c8ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZWIzNzY4ZTAwNzdiYzE4MTUyYjVmYzNkMTk4MjRjZGU2OWM4Y2U=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-08-01T17:28:19Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-08-01T17:28:19Z"}, "message": "Reword incorrect use of zeroed()", "tree": {"sha": "29d245b68bda2e851fcc76d089a58216c7db785f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29d245b68bda2e851fcc76d089a58216c7db785f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54eb3768e0077bc18152b5fc3d19824cde69c8ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54eb3768e0077bc18152b5fc3d19824cde69c8ce", "html_url": "https://github.com/rust-lang/rust/commit/54eb3768e0077bc18152b5fc3d19824cde69c8ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54eb3768e0077bc18152b5fc3d19824cde69c8ce/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36bb5e8a4247888c7e1ce5a06ba3aaf5dc9cafd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/36bb5e8a4247888c7e1ce5a06ba3aaf5dc9cafd5", "html_url": "https://github.com/rust-lang/rust/commit/36bb5e8a4247888c7e1ce5a06ba3aaf5dc9cafd5"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "cf721b01ce3c681c4090e4ba9d718604158de9fd", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/54eb3768e0077bc18152b5fc3d19824cde69c8ce/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54eb3768e0077bc18152b5fc3d19824cde69c8ce/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=54eb3768e0077bc18152b5fc3d19824cde69c8ce", "patch": "@@ -336,9 +336,8 @@ impl<T> MaybeUninit<T> {\n     /// assert_eq!(x, (0, false));\n     /// ```\n     ///\n-    /// *Incorrect* usage of this function: assuming zero filled memory is initialized,\n-    /// where some fields cannot hold 0 as a valid value, without overwriting with a\n-    /// valid bit-pattern.\n+    /// *Incorrect* usage of this function: calling `x.zeroed().assume_init()`\n+    /// when `0` is not a valid bit-pattern for the type:\n     ///\n     /// ```rust,no_run\n     /// use std::mem::MaybeUninit;"}]}