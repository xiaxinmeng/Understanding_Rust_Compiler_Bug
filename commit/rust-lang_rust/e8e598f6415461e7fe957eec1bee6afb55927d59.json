{"sha": "e8e598f6415461e7fe957eec1bee6afb55927d59", "node_id": "C_kwDOAAsO6NoAKGU4ZTU5OGY2NDE1NDYxZTdmZTk1N2VlYzFiZWU2YWZiNTU5MjdkNTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-28T09:56:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-28T09:56:06Z"}, "message": "Auto merge of #13133 - Veykril:diag-hack, r=Veykril\n\nMove empty diagnostics workaround back into the server\n\nThis only touches on the diagnostics in one place instead of multiple as was previously done, since all published diagnostics will go through this code path anyways.\n\nCloses https://github.com/rust-lang/rust-analyzer/issues/13130", "tree": {"sha": "4f43ec34a34101bc783e89af2d0b9379ded171a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f43ec34a34101bc783e89af2d0b9379ded171a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8e598f6415461e7fe957eec1bee6afb55927d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e598f6415461e7fe957eec1bee6afb55927d59", "html_url": "https://github.com/rust-lang/rust/commit/e8e598f6415461e7fe957eec1bee6afb55927d59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8e598f6415461e7fe957eec1bee6afb55927d59/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bea872edd9523a06213270f68725c9fe33f3919", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bea872edd9523a06213270f68725c9fe33f3919", "html_url": "https://github.com/rust-lang/rust/commit/6bea872edd9523a06213270f68725c9fe33f3919"}, {"sha": "9ad0a8c4673059c22d2f55e14b8ee05f47237f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad0a8c4673059c22d2f55e14b8ee05f47237f80", "html_url": "https://github.com/rust-lang/rust/commit/9ad0a8c4673059c22d2f55e14b8ee05f47237f80"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "3cfbc2e4e45037cbaefb2a5116987ba995bfaa3a", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e8e598f6415461e7fe957eec1bee6afb55927d59/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8e598f6415461e7fe957eec1bee6afb55927d59/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=e8e598f6415461e7fe957eec1bee6afb55927d59", "patch": "@@ -328,8 +328,33 @@ impl GlobalState {\n                 }\n \n                 let uri = file_id_to_url(&self.vfs.read().0, file_id);\n-                let diagnostics =\n+                let mut diagnostics =\n                     self.diagnostics.diagnostics_for(file_id).cloned().collect::<Vec<_>>();\n+\n+                // VSCode assumes diagnostic messages to be non-empty strings, so we need to patch\n+                // empty diagnostics. Neither the docs of VSCode nor the LSP spec say whether\n+                // diagnostic messages are actually allowed to be empty or not and patching this\n+                // in the VSCode client does not work as the assertion happens in the protocol\n+                // conversion. So this hack is here to stay, and will be considered a hack\n+                // until the LSP decides to state that empty messages are allowed.\n+\n+                // See https://github.com/rust-lang/rust-analyzer/issues/11404\n+                // See https://github.com/rust-lang/rust-analyzer/issues/13130\n+                let patch_empty = |message: &mut String| {\n+                    if message.is_empty() {\n+                        *message = \" \".to_string();\n+                    }\n+                };\n+\n+                for d in &mut diagnostics {\n+                    patch_empty(&mut d.message);\n+                    if let Some(dri) = &mut d.related_information {\n+                        for dri in dri {\n+                            patch_empty(&mut dri.message);\n+                        }\n+                    }\n+                }\n+\n                 let version = from_proto::vfs_path(&uri)\n                     .map(|path| self.mem_docs.get(&path).map(|it| it.version))\n                     .unwrap_or_default();"}, {"sha": "05d4d08f70b62d17436dcb32715011bb53449dd6", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e8e598f6415461e7fe957eec1bee6afb55927d59/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e8e598f6415461e7fe957eec1bee6afb55927d59/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=e8e598f6415461e7fe957eec1bee6afb55927d59", "patch": "@@ -99,22 +99,6 @@ export async function createClient(\n         traceOutputChannel: traceOutputChannel(),\n         outputChannel: outputChannel(),\n         middleware: {\n-            async handleDiagnostics(uri, diagnostics, next) {\n-                // Workaround for https://github.com/microsoft/vscode/issues/155531\n-                for (const diagnostic of diagnostics) {\n-                    if (!diagnostic.message) {\n-                        diagnostic.message = \" \";\n-                    }\n-                    if (diagnostic.relatedInformation) {\n-                        for (const relatedInformation of diagnostic.relatedInformation) {\n-                            if (!relatedInformation.message) {\n-                                relatedInformation.message = \" \";\n-                            }\n-                        }\n-                    }\n-                }\n-                next(uri, diagnostics);\n-            },\n             async provideHover(\n                 document: vscode.TextDocument,\n                 position: vscode.Position,"}]}