{"sha": "7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZTkwYTAwMmFiMDg0MWY1ZmNmZGY3NGViNzRiNThiMWMxYTgwMDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-03T18:01:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-03T18:01:17Z"}, "message": "auto merge of #8934 : sfackler/rust/bufreader, r=brson", "tree": {"sha": "b290a9f6cdc63236d78aa0e235d9c0b3c880ce8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b290a9f6cdc63236d78aa0e235d9c0b3c880ce8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000", "html_url": "https://github.com/rust-lang/rust/commit/7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee9d7f97f2e679eecd21dfcbc7628c7caf5bd7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee9d7f97f2e679eecd21dfcbc7628c7caf5bd7e", "html_url": "https://github.com/rust-lang/rust/commit/dee9d7f97f2e679eecd21dfcbc7628c7caf5bd7e"}, {"sha": "319b8833d807b6bbd0982aecd45c5c8459ac063e", "url": "https://api.github.com/repos/rust-lang/rust/commits/319b8833d807b6bbd0982aecd45c5c8459ac063e", "html_url": "https://github.com/rust-lang/rust/commit/319b8833d807b6bbd0982aecd45c5c8459ac063e"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "b278f10aed083b4cbed031c45731d1b150db225c", "filename": "src/libstd/rt/io/mem.rs", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000/src%2Flibstd%2Frt%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000/src%2Flibstd%2Frt%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fmem.rs?ref=7ee90a002ab0841f5fcfdf74eb74b58b1c1a8000", "patch": "@@ -171,13 +171,27 @@ impl<'self> BufReader<'self> {\n }\n \n impl<'self> Reader for BufReader<'self> {\n-    fn read(&mut self, _buf: &mut [u8]) -> Option<uint> { fail!() }\n+    fn read(&mut self, buf: &mut [u8]) -> Option<uint> {\n+        { if self.eof() { return None; } }\n+\n+        let write_len = min(buf.len(), self.buf.len() - self.pos);\n+        {\n+            let input = self.buf.slice(self.pos, self.pos + write_len);\n+            let output = buf.mut_slice(0, write_len);\n+            assert_eq!(input.len(), output.len());\n+            vec::bytes::copy_memory(output, input, write_len);\n+        }\n+        self.pos += write_len;\n+        assert!(self.pos <= self.buf.len());\n+\n+        return Some(write_len);\n+     }\n \n-    fn eof(&mut self) -> bool { fail!() }\n+    fn eof(&mut self) -> bool { self.pos == self.buf.len() }\n }\n \n impl<'self> Seek for BufReader<'self> {\n-    fn tell(&self) -> u64 { fail!() }\n+    fn tell(&self) -> u64 { self.pos as u64 }\n \n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }\n }\n@@ -219,4 +233,26 @@ mod test {\n         assert_eq!(reader.read(buf), None);\n         assert!(reader.eof());\n     }\n+\n+    #[test]\n+    fn test_buf_reader() {\n+        let in_buf = ~[0, 1, 2, 3, 4, 5, 6, 7];\n+        let mut reader = BufReader::new(in_buf);\n+        let mut buf = [];\n+        assert_eq!(reader.read(buf), Some(0));\n+        assert_eq!(reader.tell(), 0);\n+        let mut buf = [0];\n+        assert_eq!(reader.read(buf), Some(1));\n+        assert_eq!(reader.tell(), 1);\n+        assert_eq!(buf, [0]);\n+        let mut buf = [0, ..4];\n+        assert_eq!(reader.read(buf), Some(4));\n+        assert_eq!(reader.tell(), 5);\n+        assert_eq!(buf, [1, 2, 3, 4]);\n+        assert_eq!(reader.read(buf), Some(3));\n+        assert_eq!(buf.slice(0, 3), [5, 6, 7]);\n+        assert!(reader.eof());\n+        assert_eq!(reader.read(buf), None);\n+        assert!(reader.eof());\n+    }\n }"}]}