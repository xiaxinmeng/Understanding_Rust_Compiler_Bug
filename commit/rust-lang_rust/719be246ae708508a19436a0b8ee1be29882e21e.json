{"sha": "719be246ae708508a19436a0b8ee1be29882e21e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOWJlMjQ2YWU3MDg1MDhhMTk0MzZhMGI4ZWUxYmUyOTg4MmUyMWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-13T15:26:13Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-13T16:26:08Z"}, "message": "fix Box::into_unique effecitvely transmuting to a raw ptr", "tree": {"sha": "400694dffc69d9225d4d3da525b4cee2263a3a35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/400694dffc69d9225d4d3da525b4cee2263a3a35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/719be246ae708508a19436a0b8ee1be29882e21e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/719be246ae708508a19436a0b8ee1be29882e21e", "html_url": "https://github.com/rust-lang/rust/commit/719be246ae708508a19436a0b8ee1be29882e21e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/719be246ae708508a19436a0b8ee1be29882e21e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54494727855cd14229f5d456591ed2a2f027c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/e54494727855cd14229f5d456591ed2a2f027c46", "html_url": "https://github.com/rust-lang/rust/commit/e54494727855cd14229f5d456591ed2a2f027c46"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "f6411a3db872b7275d7089306360c72dafb23e3a", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/719be246ae708508a19436a0b8ee1be29882e21e/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/719be246ae708508a19436a0b8ee1be29882e21e/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=719be246ae708508a19436a0b8ee1be29882e21e", "patch": "@@ -202,10 +202,15 @@ impl<T: ?Sized> Box<T> {\n     #[unstable(feature = \"ptr_internals\", issue = \"0\", reason = \"use into_raw_non_null instead\")]\n     #[inline]\n     #[doc(hidden)]\n-    pub fn into_unique(b: Box<T>) -> Unique<T> {\n-        let unique = b.0;\n+    pub fn into_unique(mut b: Box<T>) -> Unique<T> {\n+        // Box is kind-of a library type, but recognized as a \"unique pointer\" by\n+        // Stacked Borrows.  This function here corresponds to \"reborrowing to\n+        // a raw pointer\", but there is no actual reborrow here -- so\n+        // without some care, the pointer we are returning here still carries\n+        // the `Uniq` tag.  We round-trip through a mutable reference to avoid that.\n+        let unique = unsafe { b.0.as_mut() as *mut T };\n         mem::forget(b);\n-        unique\n+        unsafe { Unique::new_unchecked(unique) }\n     }\n \n     /// Consumes and leaks the `Box`, returning a mutable reference,"}]}