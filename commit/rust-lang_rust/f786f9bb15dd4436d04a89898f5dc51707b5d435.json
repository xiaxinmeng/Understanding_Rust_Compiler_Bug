{"sha": "f786f9bb15dd4436d04a89898f5dc51707b5d435", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ODZmOWJiMTVkZDQ0MzZkMDRhODk4OThmNWRjNTE3MDdiNWQ0MzU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-28T17:00:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-28T17:02:06Z"}, "message": "rustc: Accept PartialOrd/PartialOrdEq for Eq/Ord\n\nThis is a transitionary step towards completing #12517. This change modifies the\ncompiler to accept Partial{Ord,Eq} as deriving modes which will currently expand\nto implementations of PartialOrd and PartialEq (synonyms for Eq/Ord).\n\nAfter a snapshot, all of deriving(Eq, Ord) will be removed, and after a snapshot\nof that, TotalEq/TotalOrd will be renamed to Eq/Ord.", "tree": {"sha": "b32a2528ed3f65a6a74c325148bd5eb0583e025a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b32a2528ed3f65a6a74c325148bd5eb0583e025a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f786f9bb15dd4436d04a89898f5dc51707b5d435", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f786f9bb15dd4436d04a89898f5dc51707b5d435", "html_url": "https://github.com/rust-lang/rust/commit/f786f9bb15dd4436d04a89898f5dc51707b5d435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f786f9bb15dd4436d04a89898f5dc51707b5d435/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24b1ce1daf9dbf66d04116d0549a48a7610bc614", "url": "https://api.github.com/repos/rust-lang/rust/commits/24b1ce1daf9dbf66d04116d0549a48a7610bc614", "html_url": "https://github.com/rust-lang/rust/commit/24b1ce1daf9dbf66d04116d0549a48a7610bc614"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "dc8c2ac68b2f564d684b1f09ea9209ac1fc248e5", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=f786f9bb15dd4436d04a89898f5dc51707b5d435", "patch": "@@ -37,6 +37,9 @@\n //! assert!(SketchyNum {num: 25} != SketchyNum {num: 57});\n //! ```\n \n+pub use PartialEq = cmp::Eq;\n+pub use PartialOrd = cmp::Ord;\n+\n /// Trait for values that can be compared for equality and inequality.\n ///\n /// This trait allows partial equality, where types can be unordered instead of"}, {"sha": "4a8c64f870b7b2ae3e54aebd2867513c6cca1c05", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=f786f9bb15dd4436d04a89898f5dc51707b5d435", "patch": "@@ -53,7 +53,7 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n     let trait_def = TraitDef {\n         span: span,\n         attributes: Vec::new(),\n-        path: Path::new(vec!(\"std\", \"cmp\", \"Eq\")),\n+        path: Path::new(vec!(\"std\", \"cmp\", \"PartialEq\")),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         methods: vec!("}, {"sha": "5d5619a740ff904ce1c6122e7f650ee78103efdf", "filename": "src/libsyntax/ext/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs?ref=f786f9bb15dd4436d04a89898f5dc51707b5d435", "patch": "@@ -43,7 +43,7 @@ pub fn expand_deriving_ord(cx: &mut ExtCtxt,\n     let trait_def = TraitDef {\n         span: span,\n         attributes: Vec::new(),\n-        path: Path::new(vec!(\"std\", \"cmp\", \"Ord\")),\n+        path: Path::new(vec!(\"std\", \"cmp\", \"PartialOrd\")),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         methods: vec!("}, {"sha": "e5da7330a6cdab1f4ab03934567e23c95e47e4df", "filename": "src/libsyntax/ext/deriving/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f786f9bb15dd4436d04a89898f5dc51707b5d435/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs?ref=f786f9bb15dd4436d04a89898f5dc51707b5d435", "patch": "@@ -77,9 +77,10 @@ pub fn expand_meta_deriving(cx: &mut ExtCtxt,\n                             \"Encodable\" => expand!(encodable::expand_deriving_encodable),\n                             \"Decodable\" => expand!(decodable::expand_deriving_decodable),\n \n-                            \"Eq\" => expand!(eq::expand_deriving_eq),\n+                            // NOTE this needs treatment after a stage0 snap\n+                            \"PartialEq\" | \"Eq\" => expand!(eq::expand_deriving_eq),\n                             \"TotalEq\" => expand!(totaleq::expand_deriving_totaleq),\n-                            \"Ord\" => expand!(ord::expand_deriving_ord),\n+                            \"PartialOrd\" | \"Ord\" => expand!(ord::expand_deriving_ord),\n                             \"TotalOrd\" => expand!(totalord::expand_deriving_totalord),\n \n                             \"Rand\" => expand!(rand::expand_deriving_rand),"}]}