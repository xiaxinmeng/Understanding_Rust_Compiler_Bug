{"sha": "9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNGY2MGVlY2YxYzlhMGQ5MGU2ZTJlYTFlMDg5ZmQ3N2ZkMmMyMGY=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-10-28T03:22:59Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-10-28T03:22:59Z"}, "message": "doc: introduce `once` in `iter::chain` document", "tree": {"sha": "51891760095bc6fd54cabf08b1fbe3b0582198a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51891760095bc6fd54cabf08b1fbe3b0582198a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f", "html_url": "https://github.com/rust-lang/rust/commit/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f677c65e867d93a47ccbaeaf6e6725cde8c5ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f677c65e867d93a47ccbaeaf6e6725cde8c5ff6", "html_url": "https://github.com/rust-lang/rust/commit/0f677c65e867d93a47ccbaeaf6e6725cde8c5ff6"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "7ffc8b3729cb490c1e149b97d5b98bc971df1ef9", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f", "patch": "@@ -384,6 +384,9 @@ pub trait Iterator {\n     ///\n     /// In other words, it links two iterators together, in a chain. \ud83d\udd17\n     ///\n+    /// [`once`] is commonly used to adapt a single value into a chain of\n+    /// other kinds of iteration.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -408,9 +411,6 @@ pub trait Iterator {\n     /// [`Iterator`] itself. For example, slices (`&[T]`) implement\n     /// [`IntoIterator`], and so can be passed to `chain()` directly:\n     ///\n-    /// [`IntoIterator`]: trait.IntoIterator.html\n-    /// [`Iterator`]: trait.Iterator.html\n-    ///\n     /// ```\n     /// let s1 = &[1, 2, 3];\n     /// let s2 = &[4, 5, 6];\n@@ -425,6 +425,21 @@ pub trait Iterator {\n     /// assert_eq!(iter.next(), Some(&6));\n     /// assert_eq!(iter.next(), None);\n     /// ```\n+    ///\n+    /// If you work with Windows API, you may wish to convert [`OsStr`] to `Vec<u16>`:\n+    ///\n+    /// ```\n+    /// #[cfg(windows)]\n+    /// fn os_str_to_utf16(s: &std::ffi::OsStr) -> Vec<u16> {\n+    ///     use std::os::windows::ffi::OsStrExt;\n+    ///     s.encode_wide().chain(std::iter::once(0)).collect()\n+    /// }\n+    /// ```\n+    ///\n+    /// [`once`]: fn.once.html\n+    /// [`Iterator`]: trait.Iterator.html\n+    /// [`IntoIterator`]: trait.IntoIterator.html\n+    /// [`OsStr`]: ../../std/ffi/struct.OsStr.html\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn chain<U>(self, other: U) -> Chain<Self, U::IntoIter> where"}]}