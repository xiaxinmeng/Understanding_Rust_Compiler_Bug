{"sha": "908cd23f81d94bc53e318089fd8bd52e27906f19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwOGNkMjNmODFkOTRiYzUzZTMxODA4OWZkOGJkNTJlMjc5MDZmMTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-13T16:48:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-13T16:48:11Z"}, "message": "Merge #8820\n\n8820: fix: Return absolute paths in find_path if crate start is ambiguous r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "e6952fde6a75c80a0f587c061abde926d8d3ebfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6952fde6a75c80a0f587c061abde926d8d3ebfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/908cd23f81d94bc53e318089fd8bd52e27906f19", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgnVhLCRBK7hj4Ov3rIwAA3ggIAF2dRFFYW7uklEqa/HKrHhO2\nsSY/FMVinu6HGnBKXN1fnlxWD+Dz79CNnzsK1ZZfVULpQNDiX25cd9tlCky/ogBY\nuppPxvjRDbyTwj8Bb9Rpafo7v44qrSDRECrFR0UCtMbecpRrt3h8qlMIMHIAW4QN\n6MRPhwIMXTS3AnFf9N+bHSY47Pq/wRA6SYI9ItmqxwCYEY6DFmcrFLCfaNEVMnKc\nXob2A/kgjZPn5XJ4jwyoQ6qaZ3jWqHpcOvqUS9HaxXjZONoIypiYksgT7azboYt8\no+t77dIZjDTzgyM5oPRLgCZo2HDthzsyoEzgCVr5eC7c+WB1eEQcUlTB3Dzsaf8=\n=qP4v\n-----END PGP SIGNATURE-----\n", "payload": "tree e6952fde6a75c80a0f587c061abde926d8d3ebfe\nparent c9c9b4e9eda37bcc837fede4528a54dd20dc3989\nparent 69e0b10150a3a426e7796841156e788c3866b27c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620924491 +0000\ncommitter GitHub <noreply@github.com> 1620924491 +0000\n\nMerge #8820\n\n8820: fix: Return absolute paths in find_path if crate start is ambiguous r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/908cd23f81d94bc53e318089fd8bd52e27906f19", "html_url": "https://github.com/rust-lang/rust/commit/908cd23f81d94bc53e318089fd8bd52e27906f19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/908cd23f81d94bc53e318089fd8bd52e27906f19/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9c9b4e9eda37bcc837fede4528a54dd20dc3989", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c9b4e9eda37bcc837fede4528a54dd20dc3989", "html_url": "https://github.com/rust-lang/rust/commit/c9c9b4e9eda37bcc837fede4528a54dd20dc3989"}, {"sha": "69e0b10150a3a426e7796841156e788c3866b27c", "url": "https://api.github.com/repos/rust-lang/rust/commits/69e0b10150a3a426e7796841156e788c3866b27c", "html_url": "https://github.com/rust-lang/rust/commit/69e0b10150a3a426e7796841156e788c3866b27c"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "ee52794aa876c2935860ec8068f013cbc00d1544", "filename": "crates/hir_def/src/find_path.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/908cd23f81d94bc53e318089fd8bd52e27906f19/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/908cd23f81d94bc53e318089fd8bd52e27906f19/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ffind_path.rs?ref=908cd23f81d94bc53e318089fd8bd52e27906f19", "patch": "@@ -5,10 +5,10 @@ use std::iter;\n use hir_expand::name::{known, AsName, Name};\n use rustc_hash::FxHashSet;\n \n-use crate::nameres::DefMap;\n use crate::{\n     db::DefDatabase,\n     item_scope::ItemInNs,\n+    nameres::DefMap,\n     path::{ModPath, PathKind},\n     visibility::Visibility,\n     ModuleDefId, ModuleId,\n@@ -134,7 +134,16 @@ fn find_path_inner(\n     for (name, def_id) in root_def_map.extern_prelude() {\n         if item == ItemInNs::Types(*def_id) {\n             let name = scope_name.unwrap_or_else(|| name.clone());\n-            return Some(ModPath::from_segments(PathKind::Plain, vec![name]));\n+\n+            let name_already_occupied_in_type_ns = def_map\n+                .with_ancestor_maps(db, from.local_id, &mut |def_map, local_id| {\n+                    def_map[local_id].scope.get(&name).take_types().filter(|&id| id != *def_id)\n+                })\n+                .is_some();\n+            return Some(ModPath::from_segments(\n+                if name_already_occupied_in_type_ns { PathKind::Abs } else { PathKind::Plain },\n+                vec![name],\n+            ));\n         }\n     }\n "}, {"sha": "506cc292c4124b89cf65a3bfe9a399d9077ff009", "filename": "crates/ide_assists/src/handlers/auto_import.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/908cd23f81d94bc53e318089fd8bd52e27906f19/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/908cd23f81d94bc53e318089fd8bd52e27906f19/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=908cd23f81d94bc53e318089fd8bd52e27906f19", "patch": "@@ -966,6 +966,32 @@ mod bar {\n         println!(\"Hallo\");\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn uses_abs_path_with_extern_crate_clash() {\n+        check_assist(\n+            auto_import,\n+            r#\"\n+//- /main.rs crate:main deps:foo\n+mod foo {}\n+\n+const _: () = {\n+    Foo$0\n+};\n+//- /foo.rs crate:foo\n+pub struct Foo\n+\"#,\n+            r#\"\n+use ::foo::Foo;\n+\n+mod foo {}\n+\n+const _: () = {\n+    Foo\n+};\n \"#,\n         );\n     }"}]}