{"sha": "2b52793f74484c9cb69901d34627210ad3a5ba70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNTI3OTNmNzQ0ODRjOWNiNjk5MDFkMzQ2MjcyMTBhZDNhNWJhNzA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-06T13:29:14Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-26T14:31:49Z"}, "message": "introduce `Subtype` type_op", "tree": {"sha": "382c4c4078ba56b904383635795ed3c974f205fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/382c4c4078ba56b904383635795ed3c974f205fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b52793f74484c9cb69901d34627210ad3a5ba70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b52793f74484c9cb69901d34627210ad3a5ba70", "html_url": "https://github.com/rust-lang/rust/commit/2b52793f74484c9cb69901d34627210ad3a5ba70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b52793f74484c9cb69901d34627210ad3a5ba70/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "909b10c33ba51ac704fa909395c58de3e4aca71f", "url": "https://api.github.com/repos/rust-lang/rust/commits/909b10c33ba51ac704fa909395c58de3e4aca71f", "html_url": "https://github.com/rust-lang/rust/commit/909b10c33ba51ac704fa909395c58de3e4aca71f"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "dd2af3f6f275dbf7b8af4becd9cf5ade46379c8e", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b52793f74484c9cb69901d34627210ad3a5ba70/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b52793f74484c9cb69901d34627210ad3a5ba70/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=2b52793f74484c9cb69901d34627210ad3a5ba70", "patch": "@@ -826,11 +826,7 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n         self.fully_perform_op(\n             locations,\n             || format!(\"sub_types({:?} <: {:?})\", sub, sup),\n-            CustomTypeOp::new(|this| {\n-                this.infcx\n-                    .at(&ObligationCause::dummy(), this.param_env)\n-                    .sup(sup, sub)\n-            }),\n+            type_op::Subtype::new(sub, sup),\n         )\n     }\n "}, {"sha": "e31af735d5577db247d7df453050b6e614312aa0", "filename": "src/librustc_mir/borrow_check/nll/type_check/type_op.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2b52793f74484c9cb69901d34627210ad3a5ba70/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b52793f74484c9cb69901d34627210ad3a5ba70/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Ftype_op.rs?ref=2b52793f74484c9cb69901d34627210ad3a5ba70", "patch": "@@ -10,19 +10,23 @@\n \n use borrow_check::nll::type_check::TypeChecker;\n use rustc::infer::InferResult;\n+use rustc::traits::ObligationCause;\n+use rustc::ty::Ty;\n \n pub(super) trait TypeOp<'gcx, 'tcx> {\n     type Output;\n \n-    fn perform(self, type_checker: &mut TypeChecker<'_, 'gcx, 'tcx>) -> InferResult<'tcx, Self::Output>;\n+    fn perform(\n+        self,\n+        type_checker: &mut TypeChecker<'_, 'gcx, 'tcx>,\n+    ) -> InferResult<'tcx, Self::Output>;\n }\n \n pub(super) struct CustomTypeOp<F> {\n-    closure: F\n+    closure: F,\n }\n \n-impl<F> CustomTypeOp<F>\n-{\n+impl<F> CustomTypeOp<F> {\n     pub(super) fn new<'gcx, 'tcx, R>(closure: F) -> Self\n     where\n         F: FnOnce(&mut TypeChecker<'_, 'gcx, 'tcx>) -> InferResult<'tcx, R>,\n@@ -41,3 +45,25 @@ where\n         (self.closure)(type_checker)\n     }\n }\n+\n+pub(super) struct Subtype<'tcx> {\n+    sub: Ty<'tcx>,\n+    sup: Ty<'tcx>,\n+}\n+\n+impl<'tcx> Subtype<'tcx> {\n+    pub(super) fn new(sub: Ty<'tcx>, sup: Ty<'tcx>) -> Self {\n+        Self { sub, sup }\n+    }\n+}\n+\n+impl<'gcx, 'tcx> TypeOp<'gcx, 'tcx> for Subtype<'tcx> {\n+    type Output = ();\n+\n+    fn perform(self, type_checker: &mut TypeChecker<'_, 'gcx, 'tcx>) -> InferResult<'tcx, Self::Output> {\n+        type_checker.infcx\n+            .at(&ObligationCause::dummy(), type_checker.param_env)\n+            .sup(self.sup, self.sub)\n+    }\n+}\n+"}]}