{"sha": "6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0", "node_id": "C_kwDOAAsO6NoAKDZlZjA3YzJkZjFjYWQ1OWU2MGY3ZGUzNmE1NzExN2MyYWM3Y2E4YzA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-10T11:31:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-10T11:31:58Z"}, "message": "Rollup merge of #108936 - GuillaumeGomez:rustdoc-anonymous-reexport, r=notriddle\n\nRustdoc: don't hide anonymous reexport\n\nFixes https://github.com/rust-lang/rust/issues/108931.\n\nFrom https://github.com/rust-lang/rust/issues/108931, it appears that having anonymous re-exports for traits is actually used in some places, so instead of hiding them automatically, we should prevent them to be ever inlined.\n\nr? `@notriddle`", "tree": {"sha": "f42a7e766d960c57852a772b7cf4c835f070d861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f42a7e766d960c57852a772b7cf4c835f070d861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkCxUuCRBK7hj4Ov3rIwAAXl4IACGKf0usc0EFSDiZhOzvymWa\n0Oucm9pO/xLEaI/jQMK61vlI7/C2w8jjzpUmSYLlm9wGJOO9jQHi7oyrb76jTuiU\nNcRbAzs8vtNJr+kFGRWO9u1R0f5Aydl6W5TO7SaXhNQzPqTXSawpTmaHsPhVQ79z\n1NBFOzZmY+sk5gaMnb5thdJ7zz3b24VcTfyClOBoZZOxgQN6EaHUsA66E8otEK+R\nbutE3Hdzi451fMm4NqmA5ubkprVdb7/rSl8Wr4WDfRP13gn0M8oWxr+aFz+gcAon\nzIG77jhj8uEXcxSGrk/8L4aOUIbokxyeASpS/mmr4jhxyR3fQDrT90lRHJXtxcM=\n=V5Fe\n-----END PGP SIGNATURE-----\n", "payload": "tree f42a7e766d960c57852a772b7cf4c835f070d861\nparent 4bd32ac31d6ecc212da191dc2cc047fb0a1e8e13\nparent 9b788da2daf8e63dde464e2c0676ac350bccff01\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678447918 +0100\ncommitter GitHub <noreply@github.com> 1678447918 +0100\n\nRollup merge of #108936 - GuillaumeGomez:rustdoc-anonymous-reexport, r=notriddle\n\nRustdoc: don't hide anonymous reexport\n\nFixes https://github.com/rust-lang/rust/issues/108931.\n\nFrom https://github.com/rust-lang/rust/issues/108931, it appears that having anonymous re-exports for traits is actually used in some places, so instead of hiding them automatically, we should prevent them to be ever inlined.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0", "html_url": "https://github.com/rust-lang/rust/commit/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bd32ac31d6ecc212da191dc2cc047fb0a1e8e13", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd32ac31d6ecc212da191dc2cc047fb0a1e8e13", "html_url": "https://github.com/rust-lang/rust/commit/4bd32ac31d6ecc212da191dc2cc047fb0a1e8e13"}, {"sha": "9b788da2daf8e63dde464e2c0676ac350bccff01", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b788da2daf8e63dde464e2c0676ac350bccff01", "html_url": "https://github.com/rust-lang/rust/commit/9b788da2daf8e63dde464e2c0676ac350bccff01"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "e09a68069e8c720a93bf26a6fb5695e7e8495eb3", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0", "patch": "@@ -224,6 +224,11 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n     ) -> bool {\n         debug!(\"maybe_inline_local res: {:?}\", res);\n \n+        if renamed == Some(kw::Underscore) {\n+            // We never inline `_` reexports.\n+            return false;\n+        }\n+\n         if self.cx.output_format.is_json() {\n             return false;\n         }\n@@ -346,8 +351,8 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                     self.visit_foreign_item_inner(item, None);\n                 }\n             }\n-            // If we're inlining, skip private items or item reexported as \"_\".\n-            _ if self.inlining && (!is_pub || renamed == Some(kw::Underscore)) => {}\n+            // If we're inlining, skip private items.\n+            _ if self.inlining && !is_pub => {}\n             hir::ItemKind::GlobalAsm(..) => {}\n             hir::ItemKind::Use(_, hir::UseKind::ListStem) => {}\n             hir::ItemKind::Use(path, kind) => {"}, {"sha": "839c1a3034604d21975cd1760b3e1c2c49bd5ac9", "filename": "tests/rustdoc/anonymous-reexport.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0/tests%2Frustdoc%2Fanonymous-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0/tests%2Frustdoc%2Fanonymous-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanonymous-reexport.rs?ref=6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0", "patch": "@@ -4,9 +4,13 @@\n \n // @has 'foo/index.html'\n // @has - '//*[@id=\"main-content\"]' ''\n-// We check that the only \"h2\" present is for \"Bla\".\n-// @count - '//*[@id=\"main-content\"]/h2' 1\n+// We check that the only \"h2\" present are \"Structs\" (for \"Bla\") and \"Re-exports\".\n+// @count - '//*[@id=\"main-content\"]/h2' 2\n // @has - '//*[@id=\"main-content\"]/h2' 'Structs'\n+// @has - '//*[@id=\"main-content\"]/h2' 'Re-exports'\n+// The 3 re-exports.\n+// @count - '//*[@id=\"main-content\"]//*[@class=\"item-table\"]//li//code' 3\n+// The public struct.\n // @count - '//*[@id=\"main-content\"]//a[@class=\"struct\"]' 1\n \n mod ext {"}, {"sha": "302f7413398379130cb2c7dd7f17386a2430d1cc", "filename": "tests/rustdoc/issue-108931-anonymous-reexport.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0/tests%2Frustdoc%2Fissue-108931-anonymous-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0/tests%2Frustdoc%2Fissue-108931-anonymous-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-108931-anonymous-reexport.rs?ref=6ef07c2df1cad59e60f7de36a57117c2ac7ca8c0", "patch": "@@ -0,0 +1,21 @@\n+// Ensuring that anonymous re-exports are always inlined.\n+\n+#![crate_name = \"foo\"]\n+\n+pub mod foo {\n+    pub struct Foo;\n+}\n+\n+mod bar {\n+    pub struct Bar;\n+}\n+\n+// @has 'foo/index.html'\n+// We check that the only \"h2\" present are \"Re-exports\" and \"Modules\".\n+// @count - '//*[@id=\"main-content\"]/h2' 2\n+// @has - '//*[@id=\"main-content\"]/h2' 'Re-exports'\n+// @has - '//*[@id=\"main-content\"]/h2' 'Modules'\n+// @has - '//*[@id=\"main-content\"]//*[@class=\"item-table\"]//li//code' 'pub use foo::Foo as _;'\n+// @has - '//*[@id=\"main-content\"]//*[@class=\"item-table\"]//li//code' 'pub use bar::Bar as _;'\n+pub use foo::Foo as _;\n+pub use bar::Bar as _;"}]}