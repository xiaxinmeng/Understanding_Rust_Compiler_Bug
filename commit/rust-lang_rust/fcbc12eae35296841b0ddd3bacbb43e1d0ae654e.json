{"sha": "fcbc12eae35296841b0ddd3bacbb43e1d0ae654e", "node_id": "C_kwDOAAsO6NoAKGZjYmMxMmVhZTM1Mjk2ODQxYjBkZGQzYmFjYmI0M2UxZDBhZTY1NGU", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-01-13T06:39:25Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-01-13T06:39:25Z"}, "message": "Implement `signum` with `Ord`", "tree": {"sha": "adc30e04c9b1b4c275815c8d2b3188b048ff778f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adc30e04c9b1b4c275815c8d2b3188b048ff778f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e", "html_url": "https://github.com/rust-lang/rust/commit/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfffe406fbcabb37b95779f2d252c4a277191e0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfffe406fbcabb37b95779f2d252c4a277191e0d", "html_url": "https://github.com/rust-lang/rust/commit/bfffe406fbcabb37b95779f2d252c4a277191e0d"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "ba89553f65a813f50a3b9ad7677dea1c1602f630", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcbc12eae35296841b0ddd3bacbb43e1d0ae654e/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=fcbc12eae35296841b0ddd3bacbb43e1d0ae654e", "patch": "@@ -2574,12 +2574,13 @@ macro_rules! int_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n+        #[rustc_allow_const_fn_unstable(const_cmp)]\n         pub const fn signum(self) -> Self {\n-            match self {\n-                n if n > 0 =>  1,\n-                0          =>  0,\n-                _          => -1,\n-            }\n+            // Picking the right way to phrase this is complicated\n+            // (<https://graphics.stanford.edu/~seander/bithacks.html#CopyIntegerSign>)\n+            // so delegate it to `Ord` which is already producing -1/0/+1\n+            // exactly like we need and can be the place to deal with the complexity.\n+            self.cmp(&0) as _\n         }\n \n         /// Returns `true` if `self` is positive and `false` if the number is zero or"}]}