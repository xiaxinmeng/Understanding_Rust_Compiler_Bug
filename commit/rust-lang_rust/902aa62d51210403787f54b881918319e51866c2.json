{"sha": "902aa62d51210403787f54b881918319e51866c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMmFhNjJkNTEyMTA0MDM3ODdmNTRiODgxOTE4MzE5ZTUxODY2YzI=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-16T15:49:41Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-02T18:15:05Z"}, "message": "slice::fill: take T by value.", "tree": {"sha": "4ce5c460f7583b2b64da18ab0bef0a555c79c430", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ce5c460f7583b2b64da18ab0bef0a555c79c430"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/902aa62d51210403787f54b881918319e51866c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/902aa62d51210403787f54b881918319e51866c2", "html_url": "https://github.com/rust-lang/rust/commit/902aa62d51210403787f54b881918319e51866c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/902aa62d51210403787f54b881918319e51866c2/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7184d137f65bb8d143ce8b5b664e50d33c4b5fbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7184d137f65bb8d143ce8b5b664e50d33c4b5fbd", "html_url": "https://github.com/rust-lang/rust/commit/7184d137f65bb8d143ce8b5b664e50d33c4b5fbd"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "f74c6862006c16bf8829361696995a5be4708d4d", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/902aa62d51210403787f54b881918319e51866c2/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/902aa62d51210403787f54b881918319e51866c2/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=902aa62d51210403787f54b881918319e51866c2", "patch": "@@ -23,7 +23,6 @@\n // * The `raw` and `bytes` submodules.\n // * Boilerplate trait implementations.\n \n-use crate::borrow::Borrow;\n use crate::cmp;\n use crate::cmp::Ordering::{self, Equal, Greater, Less};\n use crate::fmt;\n@@ -2157,14 +2156,16 @@ impl<T> [T] {\n     /// assert_eq!(buf, vec![1; 10]);\n     /// ```\n     #[unstable(feature = \"slice_fill\", issue = \"70758\")]\n-    pub fn fill<V>(&mut self, value: V)\n+    pub fn fill(&mut self, value: T)\n     where\n-        V: Borrow<T>,\n         T: Clone,\n     {\n-        let value = value.borrow();\n-        for el in self {\n-            el.clone_from(value)\n+        if let Some((last, elems)) = self.split_last_mut() {\n+            for el in elems {\n+                el.clone_from(&value);\n+            }\n+\n+            *last = value\n         }\n     }\n "}]}