{"sha": "09b4c7c89d6b815ad3032286a6ff380ecab95e33", "node_id": "C_kwDOAAsO6NoAKDA5YjRjN2M4OWQ2YjgxNWFkMzAzMjI4NmE2ZmYzODBlY2FiOTVlMzM", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-05-22T09:00:59Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-05-22T09:01:07Z"}, "message": "rustc_ast: Support MacArgs::inner_tokens for arbitrary expressions", "tree": {"sha": "de2d6271178fd7493ede95c0a63b5f754b84caf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de2d6271178fd7493ede95c0a63b5f754b84caf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09b4c7c89d6b815ad3032286a6ff380ecab95e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09b4c7c89d6b815ad3032286a6ff380ecab95e33", "html_url": "https://github.com/rust-lang/rust/commit/09b4c7c89d6b815ad3032286a6ff380ecab95e33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09b4c7c89d6b815ad3032286a6ff380ecab95e33/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e8fb4f49e7272b8dcbd25807a3ae8408ac41ce8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e8fb4f49e7272b8dcbd25807a3ae8408ac41ce8", "html_url": "https://github.com/rust-lang/rust/commit/8e8fb4f49e7272b8dcbd25807a3ae8408ac41ce8"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "03dcc3c21b7e1572b63eed8de7f5b18a9d927ac7", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/09b4c7c89d6b815ad3032286a6ff380ecab95e33/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b4c7c89d6b815ad3032286a6ff380ecab95e33/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=09b4c7c89d6b815ad3032286a6ff380ecab95e33", "patch": "@@ -23,8 +23,8 @@ pub use GenericArgs::*;\n pub use UnsafeSource::*;\n \n use crate::ptr::P;\n-use crate::token::{self, CommentKind, Delimiter, Token, TokenKind};\n-use crate::tokenstream::{DelimSpan, LazyTokenStream, TokenStream, TokenTree};\n+use crate::token::{self, CommentKind, Delimiter};\n+use crate::tokenstream::{DelimSpan, LazyTokenStream, TokenStream};\n \n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::stack::ensure_sufficient_stack;\n@@ -1570,20 +1570,7 @@ impl MacArgs {\n         match self {\n             MacArgs::Empty => TokenStream::default(),\n             MacArgs::Delimited(.., tokens) => tokens.clone(),\n-            MacArgs::Eq(_, MacArgsEq::Ast(expr)) => {\n-                // Currently only literals are allowed here. If more complex expression kinds are\n-                // allowed in the future, then `nt_to_tokenstream` should be used to extract the\n-                // token stream. This will require some cleverness, perhaps with a function\n-                // pointer, because `nt_to_tokenstream` is not directly usable from this crate.\n-                // It will also require changing the `parse_expr` call in `parse_mac_args_common`\n-                // to `parse_expr_force_collect`.\n-                if let ExprKind::Lit(lit) = &expr.kind {\n-                    let token = Token::new(TokenKind::Literal(lit.token), lit.span);\n-                    TokenTree::Token(token).into()\n-                } else {\n-                    unreachable!(\"couldn't extract literal when getting inner tokens: {:?}\", expr)\n-                }\n-            }\n+            MacArgs::Eq(_, MacArgsEq::Ast(expr)) => TokenStream::from_ast(expr),\n             MacArgs::Eq(_, MacArgsEq::Hir(lit)) => {\n                 unreachable!(\"in literal form when getting inner tokens: {:?}\", lit)\n             }"}]}