{"sha": "cbbb7f351f1b6297f0da91ea12d323051e71380c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYmI3ZjM1MWYxYjYyOTdmMGRhOTFlYTEyZDMyMzA1MWU3MTM4MGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-25T17:40:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-25T17:40:57Z"}, "message": "Merge #10024\n\n10024: fix: Fix reporting of build script errors r=matklad a=jonas-schievink\n\nr? `@matklad` (mostly to double-check that the redundant code I removed was, in fact, redundant)\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9864\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/10023\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "b6b65cf04160fbf1fc3d2c015a702e6f84d73a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6b65cf04160fbf1fc3d2c015a702e6f84d73a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbbb7f351f1b6297f0da91ea12d323051e71380c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhJoCpCRBK7hj4Ov3rIwAAFycIAIXfnVd21hx4dO71A4yXFYGT\n/mzVxx3UmjIIhpGrtAqSaH/V7oeO5FB4l74JDafgw8KIf6ZIuPmtDoZn+/q5iMJC\nn7HTXSAq+/9ouI8TYy5wobv+AR/hsETKDyUI63VEWecRgU8QHuYSWH8aSdW/EH/z\n0qiQd7o/bS7sWeajunyKL7Tx+WXvuTyDDcacxrlEH9aAjwSyykSr0Dg8rcZGGeyL\njcpKKr5GVp4g2C92L7eWdP8NHl6gJoaYdakvOscDHX9bmSrmWiZ825DprzhSHGNE\nGD4wHgXFfL512tDMgjQ7SNAImtJtof8qVhYHrWWtbwAoQp/1m06VoM8G6+wSHKk=\n=uIYH\n-----END PGP SIGNATURE-----\n", "payload": "tree b6b65cf04160fbf1fc3d2c015a702e6f84d73a79\nparent ce4670f299d72a0f23f347b5df9790aca72da617\nparent 276f6c6ba45e92c1eef920c69aebe9ed6169aaec\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629913257 +0000\ncommitter GitHub <noreply@github.com> 1629913257 +0000\n\nMerge #10024\n\n10024: fix: Fix reporting of build script errors r=matklad a=jonas-schievink\n\nr? `@matklad` (mostly to double-check that the redundant code I removed was, in fact, redundant)\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9864\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/10023\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbbb7f351f1b6297f0da91ea12d323051e71380c", "html_url": "https://github.com/rust-lang/rust/commit/cbbb7f351f1b6297f0da91ea12d323051e71380c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbbb7f351f1b6297f0da91ea12d323051e71380c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce4670f299d72a0f23f347b5df9790aca72da617", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce4670f299d72a0f23f347b5df9790aca72da617", "html_url": "https://github.com/rust-lang/rust/commit/ce4670f299d72a0f23f347b5df9790aca72da617"}, {"sha": "276f6c6ba45e92c1eef920c69aebe9ed6169aaec", "url": "https://api.github.com/repos/rust-lang/rust/commits/276f6c6ba45e92c1eef920c69aebe9ed6169aaec", "html_url": "https://github.com/rust-lang/rust/commit/276f6c6ba45e92c1eef920c69aebe9ed6169aaec"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "6b601c34a24a20381da57dbd74bc443d15101cb1", "filename": "crates/project_model/src/build_scripts.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cbbb7f351f1b6297f0da91ea12d323051e71380c/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbbb7f351f1b6297f0da91ea12d323051e71380c/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs?ref=cbbb7f351f1b6297f0da91ea12d323051e71380c", "patch": "@@ -42,7 +42,7 @@ pub(crate) struct BuildScriptOutput {\n }\n \n impl WorkspaceBuildScripts {\n-    pub fn run(\n+    pub(crate) fn run(\n         config: &CargoConfig,\n         workspace: &CargoWorkspace,\n         progress: &dyn Fn(String),\n@@ -196,6 +196,10 @@ impl WorkspaceBuildScripts {\n \n         Ok(res)\n     }\n+\n+    pub fn error(&self) -> Option<&str> {\n+        self.error.as_deref()\n+    }\n }\n \n // FIXME: File a better way to know if it is a dylib."}, {"sha": "efac6d6868740460dace5f0464bef875023c2089", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cbbb7f351f1b6297f0da91ea12d323051e71380c/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbbb7f351f1b6297f0da91ea12d323051e71380c/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=cbbb7f351f1b6297f0da91ea12d323051e71380c", "patch": "@@ -232,14 +232,6 @@ impl GlobalState {\n             let mut res = Vec::new();\n             for ws in workspaces.iter() {\n                 res.push(ws.run_build_scripts(&config, &progress));\n-                let ws = match ws {\n-                    ProjectWorkspace::Cargo { cargo, .. } => cargo,\n-                    ProjectWorkspace::DetachedFiles { .. } | ProjectWorkspace::Json { .. } => {\n-                        res.push(Ok(WorkspaceBuildScripts::default()));\n-                        continue;\n-                    }\n-                };\n-                res.push(WorkspaceBuildScripts::run(&config, ws, &progress))\n             }\n             sender.send(Task::FetchBuildData(BuildDataProgress::End((workspaces, res)))).unwrap();\n         });\n@@ -453,19 +445,29 @@ impl GlobalState {\n     }\n \n     fn fetch_build_data_error(&self) -> Option<String> {\n-        let mut buf = String::new();\n+        let mut buf = \"rust-analyzer failed to run build scripts:\\n\".to_string();\n+        let mut has_errors = false;\n \n         for ws in &self.fetch_build_data_queue.last_op_result().1 {\n-            if let Err(err) = ws {\n-                stdx::format_to!(buf, \"rust-analyzer failed to run custom build: {:#}\\n\", err);\n+            match ws {\n+                Ok(data) => {\n+                    if let Some(err) = data.error() {\n+                        has_errors = true;\n+                        stdx::format_to!(buf, \"{:#}\\n\", err);\n+                    }\n+                }\n+                Err(err) => {\n+                    has_errors = true;\n+                    stdx::format_to!(buf, \"{:#}\\n\", err);\n+                }\n             }\n         }\n \n-        if buf.is_empty() {\n-            return None;\n+        if has_errors {\n+            Some(buf)\n+        } else {\n+            None\n         }\n-\n-        Some(buf)\n     }\n \n     fn reload_flycheck(&mut self) {"}]}