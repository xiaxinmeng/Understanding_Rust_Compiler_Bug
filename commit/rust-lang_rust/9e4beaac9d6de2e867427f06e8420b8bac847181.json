{"sha": "9e4beaac9d6de2e867427f06e8420b8bac847181", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNGJlYWFjOWQ2ZGUyZTg2NzQyN2YwNmU4NDIwYjhiYWM4NDcxODE=", "commit": {"author": {"name": "Ron Dahlgren", "email": "ronald.dahlgren@gmail.com", "date": "2013-06-09T23:13:52Z"}, "committer": {"name": "Ron Dahlgren", "email": "ronald.dahlgren@gmail.com", "date": "2013-06-09T23:13:52Z"}, "message": "Fix all issues with sample code\n\nThe getopts sample program now compiles and runs. Additionally I made\nall of the indentation uniformly four spaces.", "tree": {"sha": "73e27326bf464326969d061ad7e203cedc5fe634", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73e27326bf464326969d061ad7e203cedc5fe634"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e4beaac9d6de2e867427f06e8420b8bac847181", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e4beaac9d6de2e867427f06e8420b8bac847181", "html_url": "https://github.com/rust-lang/rust/commit/9e4beaac9d6de2e867427f06e8420b8bac847181", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e4beaac9d6de2e867427f06e8420b8bac847181/comments", "author": null, "committer": null, "parents": [{"sha": "983269e71ac39cede5477f26fa1920819875e468", "url": "https://api.github.com/repos/rust-lang/rust/commits/983269e71ac39cede5477f26fa1920819875e468", "html_url": "https://github.com/rust-lang/rust/commit/983269e71ac39cede5477f26fa1920819875e468"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "3460b65e87693fa32cadd6704cc8bb1af9949e8a", "filename": "src/libextra/getopts.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9e4beaac9d6de2e867427f06e8420b8bac847181/src%2Flibextra%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e4beaac9d6de2e867427f06e8420b8bac847181/src%2Flibextra%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fgetopts.rs?ref=9e4beaac9d6de2e867427f06e8420b8bac847181", "patch": "@@ -33,19 +33,20 @@\n  * ```\n  *    extern mod extra;\n  *    use extra::getopts::*;\n+ *    use std::os;\n  *\n  *    fn do_work(in: &str, out: Option<~str>) {\n- *      io::println(in);\n- *      io::println(match out {\n- *        Some(x) => x,\n- *        None => ~\"No Output\"\n- *      });\n+ *        println(in);\n+ *        println(match out {\n+ *            Some(x) => x,\n+ *            None => ~\"No Output\"\n+ *        });\n  *    }\n  *\n- *    fn print_usage(program: &str, _opts: &[extra::getopts::Opt]) {\n- *      io::println(fmt!(\"Usage: %s [options]\", program));\n- *      io::println(\"-o\\t\\tOutput\");\n- *      io::println(\"-h --help\\tUsage\");\n+ *    fn print_usage(program: &str, _opts: &[Opt]) {\n+ *        println(fmt!(\"Usage: %s [options]\", program));\n+ *        println(\"-o\\t\\tOutput\");\n+ *        println(\"-h --help\\tUsage\");\n  *    }\n  *\n  *    fn main() {\n@@ -58,9 +59,9 @@\n  *            optflag(\"h\"),\n  *            optflag(\"help\")\n  *        ];\n- *        let matches = match getopts(vec::tail(args), opts) {\n- *            result::Ok(m) => { m }\n- *            result::Err(f) => { fail!(fail_str(f)) }\n+ *        let matches = match getopts(args.tail(), opts) {\n+ *            Ok(m) => { m }\n+ *            Err(f) => { fail!(fail_str(f)) }\n  *        };\n  *        if opt_present(&matches, \"h\") || opt_present(&matches, \"help\") {\n  *            print_usage(program, opts);"}]}