{"sha": "e7d1f30cb3c8486a8f00407b314688b7461de9fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZDFmMzBjYjNjODQ4NmE4ZjAwNDA3YjMxNDY4OGI3NDYxZGU5ZmE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-18T21:44:40Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-18T21:44:40Z"}, "message": "Fix warnings when running `cargo doc --document-private-items`\n\nThese were the warnings previously:\n\n```\nwarning: could not parse code block as Rust code\n   --> crates/stdx/src/lib.rs:137:9\n    |\n137 |   ///     \u2200 x in slice[..idx]:  pred(x)\n    |  _________^\n138 | | ///  && \u2200 x in slice[idx..]: !pred(x)\n    | |____^\n    |\n    = note: error from rustc: unknown start of token: \\u{2200}\n\nwarning: 1 warning emitted\n\nwarning: unresolved link to `package`\n   --> crates/base_db/src/input.rs:181:15\n    |\n181 |     /// it's [package].name, can be different for other project types or even\n    |               ^^^^^^^ no item named `package` in scope\n    |\n    = note: `#[warn(broken_intra_doc_links)]` on by default\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n\nwarning: unresolved link to `package`\n   --> crates/base_db/src/input.rs:181:15\n    |\n181 |     /// it's [package].name, can be different for other project types or even\n    |               ^^^^^^^ no item named `package` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n\nwarning: 2 warnings emitted\n\nwarning: unresolved link to `package`\n   --> crates/base_db/src/input.rs:181:15\n    |\n181 |     /// it's [package].name, can be different for other project types or even\n    |               ^^^^^^^ no item named `package` in scope\n    |\n    = note: `#[warn(broken_intra_doc_links)]` on by default\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n\nwarning: unresolved link to `package`\n   --> crates/base_db/src/input.rs:181:15\n    |\n181 |     /// it's [package].name, can be different for other project types or even\n    |               ^^^^^^^ no item named `package` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n\nwarning: 2 warnings emitted\n```\n\nThis does *not* fix the following warning, because it is actually rust\ncode and rustdoc is being over eager:\n\n```\nwarning: Rust code block is empty\n  --> crates/parser/src/grammar.rs:16:5\n   |\n16 |   //! ```\n   |  _____^\n17 | | //! // test function_with_zero_parameters\n18 | | //! // fn foo() {}\n19 | | //! ```\n   | |_______^\n   |\nhelp: mark blocks that do not contain Rust code as text\n   |\n16 | //! ```text\n   |     ^^^^^^^\n```\n\nhttps://github.com/rust-lang/rust/pull/79816 should make this\nconfigurable so the warning can be `allow`ed.", "tree": {"sha": "f493a72cf7bdadad95b12f30ecd2de316850d566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f493a72cf7bdadad95b12f30ecd2de316850d566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7d1f30cb3c8486a8f00407b314688b7461de9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d1f30cb3c8486a8f00407b314688b7461de9fa", "html_url": "https://github.com/rust-lang/rust/commit/e7d1f30cb3c8486a8f00407b314688b7461de9fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7d1f30cb3c8486a8f00407b314688b7461de9fa/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39282ec419046d84ad5972d5b02b1af9885e1282", "url": "https://api.github.com/repos/rust-lang/rust/commits/39282ec419046d84ad5972d5b02b1af9885e1282", "html_url": "https://github.com/rust-lang/rust/commit/39282ec419046d84ad5972d5b02b1af9885e1282"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "b5f7e4200a55dbd0835615702c4e6ea7c9863ea7", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7d1f30cb3c8486a8f00407b314688b7461de9fa/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d1f30cb3c8486a8f00407b314688b7461de9fa/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=e7d1f30cb3c8486a8f00407b314688b7461de9fa", "patch": "@@ -178,7 +178,7 @@ pub struct CrateData {\n     pub root_file_id: FileId,\n     pub edition: Edition,\n     /// A name used in the package's project declaration: for Cargo projects,\n-    /// it's [package].name, can be different for other project types or even\n+    /// its `[package].name` can be different for other project types or even\n     /// absent (a dummy crate for the code snippet, for example).\n     ///\n     /// For purposes of analysis, crates are anonymous (only names in"}, {"sha": "9036688921c9144823c663547a70c46ad91b9714", "filename": "crates/parser/src/event.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e7d1f30cb3c8486a8f00407b314688b7461de9fa/crates%2Fparser%2Fsrc%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d1f30cb3c8486a8f00407b314688b7461de9fa/crates%2Fparser%2Fsrc%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fevent.rs?ref=e7d1f30cb3c8486a8f00407b314688b7461de9fa", "patch": "@@ -38,14 +38,16 @@ pub(crate) enum Event {\n     ///\n     /// The events for it would look like this:\n     ///\n-    ///\n+    /// ```text\n     /// START(PATH) IDENT('foo') FINISH START(PATH) T![::] IDENT('bar') FINISH\n     ///       |                          /\\\n     ///       |                          |\n     ///       +------forward-parent------+\n+    /// ```\n     ///\n     /// And the tree would look like this\n     ///\n+    /// ```text\n     ///    +--PATH---------+\n     ///    |   |           |\n     ///    |   |           |\n@@ -54,6 +56,7 @@ pub(crate) enum Event {\n     ///   PATH\n     ///    |\n     ///   'foo'\n+    /// ```\n     ///\n     /// See also `CompletedMarker::precede`.\n     Start {"}, {"sha": "73b121f8a85ab6e7bd1f9b0ab0f787990ca8abb0", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7d1f30cb3c8486a8f00407b314688b7461de9fa/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d1f30cb3c8486a8f00407b314688b7461de9fa/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=e7d1f30cb3c8486a8f00407b314688b7461de9fa", "patch": "@@ -134,8 +134,10 @@ impl<'a> Iterator for LinesWithEnds<'a> {\n \n /// Returns `idx` such that:\n ///\n+/// ```text\n ///     \u2200 x in slice[..idx]:  pred(x)\n ///  && \u2200 x in slice[idx..]: !pred(x)\n+/// ```\n ///\n /// https://github.com/rust-lang/rust/issues/73831\n pub fn partition_point<T, P>(slice: &[T], mut pred: P) -> usize"}]}