{"sha": "fe7207f6afed3b4727d5228d573803c165a80477", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNzIwN2Y2YWZlZDNiNDcyN2Q1MjI4ZDU3MzgwM2MxNjVhODA0Nzc=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-24T00:20:37Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-26T15:28:17Z"}, "message": "Disallow constants and statics from having unsized types.", "tree": {"sha": "a4611bce6c4d2992bf5a4179b926250e2e2066fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4611bce6c4d2992bf5a4179b926250e2e2066fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe7207f6afed3b4727d5228d573803c165a80477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7207f6afed3b4727d5228d573803c165a80477", "html_url": "https://github.com/rust-lang/rust/commit/fe7207f6afed3b4727d5228d573803c165a80477", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe7207f6afed3b4727d5228d573803c165a80477/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e8a67c47dc624cc7de67dfa8020a1daefc5067", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e8a67c47dc624cc7de67dfa8020a1daefc5067", "html_url": "https://github.com/rust-lang/rust/commit/15e8a67c47dc624cc7de67dfa8020a1daefc5067"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "9de57656af4d8ea64b056c63ec36fadf0380a5f7", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe7207f6afed3b4727d5228d573803c165a80477/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe7207f6afed3b4727d5228d573803c165a80477/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=fe7207f6afed3b4727d5228d573803c165a80477", "patch": "@@ -908,6 +908,9 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                 err.note(\"only the last field of a struct or enum variant \\\n                           may have a dynamically sized type\");\n             }\n+            ObligationCauseCode::ConstSized => {\n+                err.note(\"constant expressions must have a statically known size\");\n+            }\n             ObligationCauseCode::SharedStatic => {\n                 err.note(\"shared static variables must have a type that implements `Sync`\");\n             }"}, {"sha": "ad16bca3a9d2c2989b32445a8bdaa30ea2b0f018", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe7207f6afed3b4727d5228d573803c165a80477/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe7207f6afed3b4727d5228d573803c165a80477/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=fe7207f6afed3b4727d5228d573803c165a80477", "patch": "@@ -127,6 +127,9 @@ pub enum ObligationCauseCode<'tcx> {\n     // Types of fields (other than the last) in a struct must be sized.\n     FieldSized,\n \n+    // Constant expressions must be sized.\n+    ConstSized,\n+\n     // static items must have `Sync` type\n     SharedStatic,\n "}, {"sha": "3e17b5937bc5837e314c9e916034a07d245f3921", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fe7207f6afed3b4727d5228d573803c165a80477/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe7207f6afed3b4727d5228d573803c165a80477/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=fe7207f6afed3b4727d5228d573803c165a80477", "patch": "@@ -1156,6 +1156,7 @@ fn check_const<'a,'tcx>(ccx: &CrateCtxt<'a,'tcx>,\n         let rty = ccx.tcx.node_id_to_type(id);\n         let fcx = FnCtxt::new(&inh, ty::FnConverging(rty), e.id);\n         let declty = fcx.tcx.lookup_item_type(ccx.tcx.map.local_def_id(id)).ty;\n+        fcx.require_type_is_sized(declty, e.span, traits::ConstSized);\n         fcx.check_const_with_ty(sp, e, declty);\n     });\n }"}, {"sha": "72a5c5fff608457b2d5770316c4ba62b6a9cf341", "filename": "src/test/compile-fail/const-unsized.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fe7207f6afed3b4727d5228d573803c165a80477/src%2Ftest%2Fcompile-fail%2Fconst-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe7207f6afed3b4727d5228d573803c165a80477/src%2Ftest%2Fcompile-fail%2Fconst-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-unsized.rs?ref=fe7207f6afed3b4727d5228d573803c165a80477", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fmt::Debug;\n+\n+const CONST_0: Debug+Sync = *(&0 as &(Debug+Sync));\n+//~^ ERROR `std::fmt::Debug + Sync + 'static: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+const CONST_FOO: str = *\"foo\";\n+//~^ ERROR `str: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+static STATIC_1: Debug+Sync = *(&1 as &(Debug+Sync));\n+//~^ ERROR `std::fmt::Debug + Sync + 'static: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+static STATIC_BAR: str = *\"bar\";\n+//~^ ERROR `str: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+fn main() {\n+    println!(\"{:?} {:?} {:?} {:?}\", &CONST_0, &CONST_FOO, &STATIC_1, &STATIC_BAR);\n+}"}, {"sha": "b9382520cf9d3166c3ba6461973d4aeff5a4884d", "filename": "src/test/compile-fail/issue-24446.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe7207f6afed3b4727d5228d573803c165a80477/src%2Ftest%2Fcompile-fail%2Fissue-24446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe7207f6afed3b4727d5228d573803c165a80477/src%2Ftest%2Fcompile-fail%2Fissue-24446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-24446.rs?ref=fe7207f6afed3b4727d5228d573803c165a80477", "patch": "@@ -11,6 +11,8 @@\n fn main() {\n     static foo: Fn() -> u32 = || -> u32 {\n         //~^ ERROR: mismatched types\n+        //~| ERROR: `std::ops::Fn() -> u32 + 'static: std::marker::Sized` is not satisfied\n+\n         0\n     };\n }"}]}