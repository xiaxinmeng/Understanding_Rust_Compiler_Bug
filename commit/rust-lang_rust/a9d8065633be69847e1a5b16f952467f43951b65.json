{"sha": "a9d8065633be69847e1a5b16f952467f43951b65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZDgwNjU2MzNiZTY5ODQ3ZTFhNWIxNmY5NTI0NjdmNDM5NTFiNjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-14T09:05:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-14T09:05:22Z"}, "message": "Auto merge of #24408 - richo:configure-optimize-default, r=pnkfelix\n\nOptimization is now on by default. Closes #24405", "tree": {"sha": "395f539bf223dcdf6358d7c5f3568f7652685790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/395f539bf223dcdf6358d7c5f3568f7652685790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9d8065633be69847e1a5b16f952467f43951b65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d8065633be69847e1a5b16f952467f43951b65", "html_url": "https://github.com/rust-lang/rust/commit/a9d8065633be69847e1a5b16f952467f43951b65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9d8065633be69847e1a5b16f952467f43951b65/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4eb5a66a5b33b209a1263830d89d83381a42ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4eb5a66a5b33b209a1263830d89d83381a42ccb", "html_url": "https://github.com/rust-lang/rust/commit/a4eb5a66a5b33b209a1263830d89d83381a42ccb"}, {"sha": "fd69ac160b7252b2acaebaae02535b3f8c27dfb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd69ac160b7252b2acaebaae02535b3f8c27dfb7", "html_url": "https://github.com/rust-lang/rust/commit/fd69ac160b7252b2acaebaae02535b3f8c27dfb7"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "18fef588936e7ff0b3f1e9ac5fe0013493f2ae04", "filename": "configure", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9d8065633be69847e1a5b16f952467f43951b65/configure", "raw_url": "https://github.com/rust-lang/rust/raw/a9d8065633be69847e1a5b16f952467f43951b65/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=a9d8065633be69847e1a5b16f952467f43951b65", "patch": "@@ -192,13 +192,15 @@ valopt_core() {\n     then\n         local UOP=$(echo $OP | tr '[:lower:]' '[:upper:]' | tr '\\-' '\\_')\n         local V=\"CFG_${UOP}\"\n+        local V_PROVIDED=\"${V}_PROVIDED\"\n         eval $V=\"$DEFAULT\"\n         for arg in $CFG_CONFIGURE_ARGS\n         do\n             if echo \"$arg\" | grep -q -- \"--$OP=\"\n             then\n                 val=$(echo \"$arg\" | cut -f2 -d=)\n                 eval $V=$val\n+                eval $V_PROVIDED=1\n             fi\n         done\n         if [ \"$SAVE\" = \"save\" ]\n@@ -247,8 +249,10 @@ opt_core() {\n     if [ $DEFAULT -eq 0 ]\n     then\n         FLAG=\"enable\"\n+        DEFAULT_FLAG=\"disable\"\n     else\n         FLAG=\"disable\"\n+        DEFAULT_FLAG=\"enable\"\n         DOC=\"don't $DOC\"\n     fi\n \n@@ -261,11 +265,19 @@ opt_core() {\n                 OP=$(echo $OP | tr 'a-z-' 'A-Z_')\n                 FLAG=$(echo $FLAG | tr 'a-z' 'A-Z')\n                 local V=\"CFG_${FLAG}_${OP}\"\n+                local V_PROVIDED=\"CFG_${FLAG}_${OP}_PROVIDED\"\n                 eval $V=1\n+                eval $V_PROVIDED=1\n                 if [ \"$SAVE\" = \"save\" ]\n                 then\n                    putvar $V\n                 fi\n+            elif [ \"$arg\" = \"--${DEFAULT_FLAG}-${OP}\" ]\n+            then\n+                OP=$(echo $OP | tr 'a-z-' 'A-Z_')\n+                DEFAULT_FLAG=$(echo $DEFAULT_FLAG | tr 'a-z' 'A-Z')\n+                local V_PROVIDED=\"CFG_${DEFAULT_FLAG}_${OP}_PROVIDED\"\n+                eval $V_PROVIDED=1\n             fi\n         done\n     else\n@@ -633,8 +645,11 @@ esac\n # Adjust perf and debug options for debug mode\n if [ -n \"$CFG_ENABLE_DEBUG\" ]; then\n     msg \"debug mode enabled, setting performance options\"\n-    CFG_DISABLE_OPTIMIZE=1\n-    CFG_DISABLE_OPTIMIZE_CXX=1\n+    if [ -z \"$CFG_ENABLE_OPTIMIZE_PROVIDED\" ]; then\n+        msg \"optimization not explicitly enabled, disabling optimization\"\n+        CFG_DISABLE_OPTIMIZE=1\n+        CFG_DISABLE_OPTIMIZE_CXX=1\n+    fi\n     CFG_ENABLE_LLVM_ASSERTIONS=1\n     CFG_ENABLE_DEBUG_ASSERTIONS=1\n     CFG_ENABLE_DEBUG_JEMALLOC=1"}]}