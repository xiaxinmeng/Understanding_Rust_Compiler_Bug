{"sha": "319dd150fca1455062df9493739241e1af646650", "node_id": "C_kwDOAAsO6NoAKDMxOWRkMTUwZmNhMTQ1NTA2MmRmOTQ5MzczOTI0MWUxYWY2NDY2NTA", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-02-17T22:23:31Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-02-17T22:23:31Z"}, "message": "Destabilise entry_insert", "tree": {"sha": "69422c8b88315e0094e97947f86903240072e074", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69422c8b88315e0094e97947f86903240072e074"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/319dd150fca1455062df9493739241e1af646650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/319dd150fca1455062df9493739241e1af646650", "html_url": "https://github.com/rust-lang/rust/commit/319dd150fca1455062df9493739241e1af646650", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/319dd150fca1455062df9493739241e1af646650/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30b3f35c420694a4f24e5a4df00f06073f4f3a37", "url": "https://api.github.com/repos/rust-lang/rust/commits/30b3f35c420694a4f24e5a4df00f06073f4f3a37", "html_url": "https://github.com/rust-lang/rust/commit/30b3f35c420694a4f24e5a4df00f06073f4f3a37"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "c7e34962abb4363bac90b96613335e51a5ae0b84", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/319dd150fca1455062df9493739241e1af646650/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/319dd150fca1455062df9493739241e1af646650/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=319dd150fca1455062df9493739241e1af646650", "patch": "@@ -2472,6 +2472,7 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(entry_insert)]\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<&str, String> = HashMap::new();\n@@ -2480,7 +2481,7 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// assert_eq!(entry.key(), &\"poneyland\");\n     /// ```\n     #[inline]\n-    #[stable(feature = \"entry_insert\", since = \"1.59.0\")]\n+    #[unstable(feature = \"entry_insert\", issue = \"65225\")]\n     pub fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {\n         match self {\n             Occupied(mut entry) => {\n@@ -2814,6 +2815,7 @@ impl<'a, K: 'a, V: 'a> VacantEntry<'a, K, V> {\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(entry_insert)]\n     /// use std::collections::HashMap;\n     /// use std::collections::hash_map::Entry;\n     ///\n@@ -2825,7 +2827,7 @@ impl<'a, K: 'a, V: 'a> VacantEntry<'a, K, V> {\n     /// assert_eq!(map[\"poneyland\"], 37);\n     /// ```\n     #[inline]\n-    #[stable(feature = \"entry_insert\", since = \"1.59.0\")]\n+    #[unstable(feature = \"entry_insert\", issue = \"65225\")]\n     pub fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {\n         let base = self.base.insert_entry(value);\n         OccupiedEntry { base }"}]}