{"sha": "01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZjM2YzUxYzJiNmZkM2E5NWI2Y2RmYWNmZjkyNzI1Y2Q4MWQ1YjA=", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2020-12-17T17:18:06Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2020-12-17T17:18:06Z"}, "message": "fix memory leak in test", "tree": {"sha": "be2703f8c8a1f39437264b4efd006caf4a5b6ad2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be2703f8c8a1f39437264b4efd006caf4a5b6ad2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0", "html_url": "https://github.com/rust-lang/rust/commit/01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4652a13f44b89193dc163991485b7638fa0f9ea7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4652a13f44b89193dc163991485b7638fa0f9ea7", "html_url": "https://github.com/rust-lang/rust/commit/4652a13f44b89193dc163991485b7638fa0f9ea7"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "86990fa0945a7b4088a7c48a688cb86dffd7de7b", "filename": "library/core/tests/mem.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0/library%2Fcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0/library%2Fcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fmem.rs?ref=01f36c51c2b6fd3a95b6cdfacff92725cd81d5b0", "patch": "@@ -250,14 +250,19 @@ fn uninit_write_slice_cloned_mid_panic() {\n \n #[test]\n fn uninit_write_slice_cloned_no_drop() {\n-    let rc = Rc::new(());\n+    #[derive(Clone)]\n+    struct Bomb;\n+\n+    impl Drop for Bomb {\n+        fn drop(&mut self) {\n+            panic!(\"dropped a bomb! kaboom\")\n+        }\n+    }\n \n     let mut dst = [MaybeUninit::uninit()];\n-    let src = [rc.clone()];\n+    let src = [Bomb];\n \n     MaybeUninit::write_slice_cloned(&mut dst, &src);\n \n-    drop(src);\n-\n-    assert_eq!(Rc::strong_count(&rc), 2);\n+    forget(src);\n }"}]}