{"sha": "357c5dacee1015dc03583287d0c7a132d9fe7880", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1N2M1ZGFjZWUxMDE1ZGMwMzU4MzI4N2QwYzdhMTMyZDlmZTc4ODA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-16T12:26:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-16T12:26:27Z"}, "message": "use mem::zeroed to make up ZST values", "tree": {"sha": "5e44f431db49ac13069b06daa9ec5ec004615737", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e44f431db49ac13069b06daa9ec5ec004615737"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/357c5dacee1015dc03583287d0c7a132d9fe7880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/357c5dacee1015dc03583287d0c7a132d9fe7880", "html_url": "https://github.com/rust-lang/rust/commit/357c5dacee1015dc03583287d0c7a132d9fe7880", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/357c5dacee1015dc03583287d0c7a132d9fe7880/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61f0a2b3fd961c9ae6d327d384bcffabf89a1c26", "url": "https://api.github.com/repos/rust-lang/rust/commits/61f0a2b3fd961c9ae6d327d384bcffabf89a1c26", "html_url": "https://github.com/rust-lang/rust/commit/61f0a2b3fd961c9ae6d327d384bcffabf89a1c26"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7fc4453fec5b07986fa108b0c5a82fec43b663e9", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/357c5dacee1015dc03583287d0c7a132d9fe7880/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/357c5dacee1015dc03583287d0c7a132d9fe7880/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=357c5dacee1015dc03583287d0c7a132d9fe7880", "patch": "@@ -2410,8 +2410,8 @@ impl<T> Iterator for IntoIter<T> {\n                     // same pointer.\n                     self.ptr = arith_offset(self.ptr as *const i8, 1) as *mut T;\n \n-                    // Read from a properly aligned pointer to make up a value of this ZST.\n-                    Some(ptr::read(NonNull::dangling().as_ptr()))\n+                    // Make up a value of this ZST.\n+                    Some(mem::zeroed())\n                 } else {\n                     let old = self.ptr;\n                     self.ptr = self.ptr.offset(1);\n@@ -2450,8 +2450,8 @@ impl<T> DoubleEndedIterator for IntoIter<T> {\n                     // See above for why 'ptr.offset' isn't used\n                     self.end = arith_offset(self.end as *const i8, -1) as *mut T;\n \n-                    // Read from a properly aligned pointer to make up a value of this ZST.\n-                    Some(ptr::read(NonNull::dangling().as_ptr()))\n+                    // Make up a value of this ZST.\n+                    Some(mem::zeroed())\n                 } else {\n                     self.end = self.end.offset(-1);\n "}]}