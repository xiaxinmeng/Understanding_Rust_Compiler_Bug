{"sha": "802554f4274f6514cd2f8f618cae567adf18128f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMjU1NGY0Mjc0ZjY1MTRjZDJmOGY2MThjYWU1NjdhZGYxODEyOGY=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-10T23:38:53Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-14T22:48:36Z"}, "message": "Only expand types that contain projections", "tree": {"sha": "a9718275803cb2c7049ca7732260231431ad679b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9718275803cb2c7049ca7732260231431ad679b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/802554f4274f6514cd2f8f618cae567adf18128f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/802554f4274f6514cd2f8f618cae567adf18128f", "html_url": "https://github.com/rust-lang/rust/commit/802554f4274f6514cd2f8f618cae567adf18128f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/802554f4274f6514cd2f8f618cae567adf18128f/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe09bb518d9dfb270a6f3562b50b96272524b42c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe09bb518d9dfb270a6f3562b50b96272524b42c", "html_url": "https://github.com/rust-lang/rust/commit/fe09bb518d9dfb270a6f3562b50b96272524b42c"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6a94ca6b8c75c1d1c79f8c368358ebdb2f5bd4b1", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/802554f4274f6514cd2f8f618cae567adf18128f/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/802554f4274f6514cd2f8f618cae567adf18128f/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=802554f4274f6514cd2f8f618cae567adf18128f", "patch": "@@ -745,8 +745,10 @@ impl<'tcx> TyCtxt<'tcx> {\n             fn fold_ty(&mut self, t: Ty<'tcx>) -> Ty<'tcx> {\n                 if let ty::Opaque(def_id, substs) = t.kind {\n                     self.expand_opaque_ty(def_id, substs).unwrap_or(t)\n-                } else {\n+                } else if t.has_projections() {\n                     t.super_fold_with(self)\n+                } else {\n+                    t\n                 }\n             }\n         }"}]}