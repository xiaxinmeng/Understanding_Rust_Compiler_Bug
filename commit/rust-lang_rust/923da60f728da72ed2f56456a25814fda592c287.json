{"sha": "923da60f728da72ed2f56456a25814fda592c287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyM2RhNjBmNzI4ZGE3MmVkMmY1NjQ1NmEyNTgxNGZkYTU5MmMyODc=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-01-29T15:36:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-29T15:36:55Z"}, "message": "Merge pull request #3298 from topecongiro/issue-3272\n\nUse the same rule between function and macro", "tree": {"sha": "a921a42074ad6af464a176960f4fb7332cc25b63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a921a42074ad6af464a176960f4fb7332cc25b63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/923da60f728da72ed2f56456a25814fda592c287", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcUHMXCRBK7hj4Ov3rIwAAdHIIADU6MUB0k0Psb4SHbImv/b5H\nKx2GMyhpkZtI1c+0u0Yh+X1fHXy+EcXMbT013bWK0YKmM9k/uDQHO5vCu0PUJAh8\noDy1NwkIM64huEgVLoEmtg96a+Q0N1MIUlqU2V4t+iHFs6UUGE3Fu+vD1OJoUnmH\nL3aDs+id3YIIvMNV7lrDpyILAhl9pYlwIvYG8Qoo286xbd0fZ/h5pNOB6YG0TIMx\nw+JqzQy8s6N4DtEK7Mv8WuqPw1bPPwU/f/3Q8Zre+vb38XhSp61LxiraoNuWalUW\nb3ZV0Nq8kzkX4UvXQqcQEdVYjzyxwuMst/odr87f/SjZIpMe2oY+T+EFECy6m8E=\n=N6Lc\n-----END PGP SIGNATURE-----\n", "payload": "tree a921a42074ad6af464a176960f4fb7332cc25b63\nparent 36c9dc646cb01bedfbb49269ff96e94cf1397eee\nparent 181ca427dccf3ed4b3e483177718f67fb8ddec5c\nauthor Seiichi Uchida <seuchida@gmail.com> 1548776215 +0900\ncommitter GitHub <noreply@github.com> 1548776215 +0900\n\nMerge pull request #3298 from topecongiro/issue-3272\n\nUse the same rule between function and macro"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/923da60f728da72ed2f56456a25814fda592c287", "html_url": "https://github.com/rust-lang/rust/commit/923da60f728da72ed2f56456a25814fda592c287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/923da60f728da72ed2f56456a25814fda592c287/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36c9dc646cb01bedfbb49269ff96e94cf1397eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/36c9dc646cb01bedfbb49269ff96e94cf1397eee", "html_url": "https://github.com/rust-lang/rust/commit/36c9dc646cb01bedfbb49269ff96e94cf1397eee"}, {"sha": "181ca427dccf3ed4b3e483177718f67fb8ddec5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/181ca427dccf3ed4b3e483177718f67fb8ddec5c", "html_url": "https://github.com/rust-lang/rust/commit/181ca427dccf3ed4b3e483177718f67fb8ddec5c"}], "stats": {"total": 146, "additions": 124, "deletions": 22}, "files": [{"sha": "344fb28620b01a0bfcdf9c2df5b92f331237bf37", "filename": "src/overflow.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -11,6 +11,7 @@\n //! Rewrite a list some items with overflow.\n \n use config::lists::*;\n+use config::Version;\n use syntax::parse::token::DelimToken;\n use syntax::source_map::Span;\n use syntax::{ast, ptr};\n@@ -466,6 +467,13 @@ impl<'a> Context<'a> {\n                 {\n                     self.context.force_one_line_chain.replace(true);\n                 }\n+                Some(OverflowableItem::MacroArg(MacroArg::Expr(expr)))\n+                    if !combine_arg_with_callee\n+                        && is_method_call(expr)\n+                        && self.context.config.version() == Version::Two =>\n+                {\n+                    self.context.force_one_line_chain.replace(true);\n+                }\n                 _ => (),\n             }\n             let result = last_item_shape(\n@@ -632,8 +640,6 @@ impl<'a> Context<'a> {\n             _ => (self.prefix, self.suffix),\n         };\n \n-        // 2 = `()`\n-        let fits_one_line = items_str.len() + 2 <= shape.width;\n         let extend_width = if items_str.is_empty() {\n             2\n         } else {\n@@ -652,10 +658,16 @@ impl<'a> Context<'a> {\n         );\n         result.push_str(self.ident);\n         result.push_str(prefix);\n-        if !self.context.use_block_indent()\n-            || (self.context.inside_macro() && !items_str.contains('\\n') && fits_one_line)\n-            || (is_extendable && extend_width <= shape.width)\n-        {\n+        let force_single_line = if self.context.config.version() == Version::Two {\n+            !self.context.use_block_indent() || (is_extendable && extend_width <= shape.width)\n+        } else {\n+            // 2 = `()`\n+            let fits_one_line = items_str.len() + 2 <= shape.width;\n+            !self.context.use_block_indent()\n+                || (self.context.inside_macro() && !items_str.contains('\\n') && fits_one_line)\n+                || (is_extendable && extend_width <= shape.width)\n+        };\n+        if force_single_line {\n             result.push_str(items_str);\n         } else {\n             if !items_str.is_empty() {"}, {"sha": "f4c1b7c992bf1f3435ddf630a5f45ae8080791ad", "filename": "tests/source/issue-3272/v1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fissue-3272%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fissue-3272%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3272%2Fv1.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-version: One\n+\n+fn main() {\n+    assert!(HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some());\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}, {"sha": "0148368edc8ede095fb2aa22f12ea777443a0c15", "filename": "tests/source/issue-3272/v2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fissue-3272%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fissue-3272%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3272%2Fv2.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-version: Two\n+\n+fn main() {\n+    assert!(HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some());\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}, {"sha": "5386d68898ded9fda94f58ecc8e94cd270edd62c", "filename": "tests/source/macros.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -400,14 +400,6 @@ fn foo() {\n     foo!(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,);\n }\n \n-// #2652\n-// Preserve trailing comma inside macro, even if it looks an array.\n-macro_rules! bar {\n-    ($m:ident) => {\n-        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n-    };\n-}\n-\n // #2830\n // Preserve trailing comma-less/ness inside nested macro.\n named!("}, {"sha": "a3aa631ed4af3b78e650a3dee135a1359a0d96b9", "filename": "tests/source/single-line-macro/v1.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fsingle-line-macro%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fsingle-line-macro%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fsingle-line-macro%2Fv1.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,10 @@\n+// rustfmt-version: One\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,]);\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n+    };\n+}"}, {"sha": "51a665f756056e3f711fa0a34d637e0ea903b356", "filename": "tests/source/single-line-macro/v2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fsingle-line-macro%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Fsource%2Fsingle-line-macro%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fsingle-line-macro%2Fv2.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,10 @@\n+// rustfmt-version: Two\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,]);\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n+    };\n+}"}, {"sha": "aab201027d56117369f26f59040e86a286860d44", "filename": "tests/target/issue-3272/v1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fissue-3272%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fissue-3272%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3272%2Fv1.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-version: One\n+\n+fn main() {\n+    assert!(HAYSTACK\n+        .par_iter()\n+        .find_any(|&&x| x[0] % 1000 == 999)\n+        .is_some());\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}, {"sha": "a42a2fccd5b0f7c9baa5c7839dac10b9d7c463ba", "filename": "tests/target/issue-3272/v2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fissue-3272%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fissue-3272%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3272%2Fv2.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,17 @@\n+// rustfmt-version: Two\n+\n+fn main() {\n+    assert!(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some()\n+    );\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}, {"sha": "ca5f91b715e2bbee90ca866a004898225a457398", "filename": "tests/target/macros.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -980,14 +980,6 @@ fn foo() {\n     );\n }\n \n-// #2652\n-// Preserve trailing comma inside macro, even if it looks an array.\n-macro_rules! bar {\n-    ($m:ident) => {\n-        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n-    };\n-}\n-\n // #2830\n // Preserve trailing comma-less/ness inside nested macro.\n named!("}, {"sha": "a3aa631ed4af3b78e650a3dee135a1359a0d96b9", "filename": "tests/target/single-line-macro/v1.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fsingle-line-macro%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fsingle-line-macro%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fsingle-line-macro%2Fv1.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,10 @@\n+// rustfmt-version: One\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,]);\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n+    };\n+}"}, {"sha": "9c6bcf33ad5345b0c12fa9be20a96847da8dbbf5", "filename": "tests/target/single-line-macro/v2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fsingle-line-macro%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923da60f728da72ed2f56456a25814fda592c287/tests%2Ftarget%2Fsingle-line-macro%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fsingle-line-macro%2Fv2.rs?ref=923da60f728da72ed2f56456a25814fda592c287", "patch": "@@ -0,0 +1,14 @@\n+// rustfmt-version: Two\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([\n+            a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,\n+        ]);\n+        $m!([\n+            a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n+        ]);\n+    };\n+}"}]}