{"sha": "a800d7f63fa11f6765c20a830dbf05343de76030", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MDBkN2Y2M2ZhMTFmNjc2NWMyMGE4MzBkYmYwNTM0M2RlNzYwMzA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-27T16:33:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-27T16:33:21Z"}, "message": "Rollup merge of #83561 - m-ou-se:lock-debug, r=jackh726\n\nImprove Debug implementations of Mutex and RwLock.\n\nThis improves the Debug implementations of Mutex and RwLock.\n\nThey now show the poison flag and use debug_non_exhaustive. (See #67364.)", "tree": {"sha": "5c00eab86c450ded004fe48a9115397df32032d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c00eab86c450ded004fe48a9115397df32032d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a800d7f63fa11f6765c20a830dbf05343de76030", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgX15RCRBK7hj4Ov3rIwAAdHIIAJ5zuqZecOuq0ldbdLv6Bm43\nFQwvGvzQMBQUZQLrDTplHdJlRSA7m6aFzGLEi95OSm7tRgkQo/jI03m6mvBl9qX6\nyi8VSl58tyfzaW6YPOtaIye/boyZddl+sHmfi9ZXsj/6awuypB2Cb/EIii6T1Pua\nKCjMj5R4q2WPnty977Em7Cx4uReMA1xufuAEKDT504KDgOxtlefgMGbWL3rI9BcK\nHaaz+VR9WTEy4aJosOM4ilcsMpwNUz+Qwq6Fan1VnFPw/eZy0u+p51gL7OU+QT4V\n6OgQSHOJ11F0yUaeOz4GXncwgr/pckKuVCMtgZfd5vRDue//CeKeXHb7TLIDEy4=\n=n1Fz\n-----END PGP SIGNATURE-----\n", "payload": "tree 5c00eab86c450ded004fe48a9115397df32032d0\nparent 8ad5f2143ebcaa733e00d6a346a0687dc8f23cf2\nparent 5402abc4937e77c69d8a94eaec86cbc764564cf7\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1616862801 +0900\ncommitter GitHub <noreply@github.com> 1616862801 +0900\n\nRollup merge of #83561 - m-ou-se:lock-debug, r=jackh726\n\nImprove Debug implementations of Mutex and RwLock.\n\nThis improves the Debug implementations of Mutex and RwLock.\n\nThey now show the poison flag and use debug_non_exhaustive. (See #67364.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a800d7f63fa11f6765c20a830dbf05343de76030", "html_url": "https://github.com/rust-lang/rust/commit/a800d7f63fa11f6765c20a830dbf05343de76030", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a800d7f63fa11f6765c20a830dbf05343de76030/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ad5f2143ebcaa733e00d6a346a0687dc8f23cf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad5f2143ebcaa733e00d6a346a0687dc8f23cf2", "html_url": "https://github.com/rust-lang/rust/commit/8ad5f2143ebcaa733e00d6a346a0687dc8f23cf2"}, {"sha": "5402abc4937e77c69d8a94eaec86cbc764564cf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5402abc4937e77c69d8a94eaec86cbc764564cf7", "html_url": "https://github.com/rust-lang/rust/commit/5402abc4937e77c69d8a94eaec86cbc764564cf7"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "98c34282e0c49f6a303f4c4faf94efc7a3bcba06", "filename": "library/std/src/sync/mutex.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a800d7f63fa11f6765c20a830dbf05343de76030/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a800d7f63fa11f6765c20a830dbf05343de76030/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs?ref=a800d7f63fa11f6765c20a830dbf05343de76030", "patch": "@@ -441,10 +441,13 @@ impl<T: ?Sized + Default> Default for Mutex<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + fmt::Debug> fmt::Debug for Mutex<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let mut d = f.debug_struct(\"Mutex\");\n         match self.try_lock() {\n-            Ok(guard) => f.debug_struct(\"Mutex\").field(\"data\", &&*guard).finish(),\n+            Ok(guard) => {\n+                d.field(\"data\", &&*guard);\n+            }\n             Err(TryLockError::Poisoned(err)) => {\n-                f.debug_struct(\"Mutex\").field(\"data\", &&**err.get_ref()).finish()\n+                d.field(\"data\", &&**err.get_ref());\n             }\n             Err(TryLockError::WouldBlock) => {\n                 struct LockedPlaceholder;\n@@ -453,10 +456,11 @@ impl<T: ?Sized + fmt::Debug> fmt::Debug for Mutex<T> {\n                         f.write_str(\"<locked>\")\n                     }\n                 }\n-\n-                f.debug_struct(\"Mutex\").field(\"data\", &LockedPlaceholder).finish()\n+                d.field(\"data\", &LockedPlaceholder);\n             }\n         }\n+        d.field(\"poisoned\", &self.poison.get());\n+        d.finish_non_exhaustive()\n     }\n }\n "}, {"sha": "351804ec979e1b3b5b8224996882aa96bcdaed32", "filename": "library/std/src/sync/rwlock.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a800d7f63fa11f6765c20a830dbf05343de76030/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a800d7f63fa11f6765c20a830dbf05343de76030/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs?ref=a800d7f63fa11f6765c20a830dbf05343de76030", "patch": "@@ -422,10 +422,13 @@ unsafe impl<#[may_dangle] T: ?Sized> Drop for RwLock<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + fmt::Debug> fmt::Debug for RwLock<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let mut d = f.debug_struct(\"RwLock\");\n         match self.try_read() {\n-            Ok(guard) => f.debug_struct(\"RwLock\").field(\"data\", &&*guard).finish(),\n+            Ok(guard) => {\n+                d.field(\"data\", &&*guard);\n+            }\n             Err(TryLockError::Poisoned(err)) => {\n-                f.debug_struct(\"RwLock\").field(\"data\", &&**err.get_ref()).finish()\n+                d.field(\"data\", &&**err.get_ref());\n             }\n             Err(TryLockError::WouldBlock) => {\n                 struct LockedPlaceholder;\n@@ -434,10 +437,11 @@ impl<T: ?Sized + fmt::Debug> fmt::Debug for RwLock<T> {\n                         f.write_str(\"<locked>\")\n                     }\n                 }\n-\n-                f.debug_struct(\"RwLock\").field(\"data\", &LockedPlaceholder).finish()\n+                d.field(\"data\", &LockedPlaceholder);\n             }\n         }\n+        d.field(\"poisoned\", &self.poison.get());\n+        d.finish_non_exhaustive()\n     }\n }\n "}]}