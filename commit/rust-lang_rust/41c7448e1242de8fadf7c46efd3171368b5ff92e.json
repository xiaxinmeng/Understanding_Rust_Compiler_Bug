{"sha": "41c7448e1242de8fadf7c46efd3171368b5ff92e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYzc0NDhlMTI0MmRlOGZhZGY3YzQ2ZWZkMzE3MTM2OGI1ZmY5MmU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-30T00:08:33Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-30T00:09:17Z"}, "message": "Accurately classify assoc. types in paths", "tree": {"sha": "02afde0f2d0406abb3bc4089eae7267924f81899", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02afde0f2d0406abb3bc4089eae7267924f81899"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c7448e1242de8fadf7c46efd3171368b5ff92e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c7448e1242de8fadf7c46efd3171368b5ff92e", "html_url": "https://github.com/rust-lang/rust/commit/41c7448e1242de8fadf7c46efd3171368b5ff92e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c7448e1242de8fadf7c46efd3171368b5ff92e/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3ca06e4fd8fe3a3ab081c55ecaa1ec3e79fe18d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3ca06e4fd8fe3a3ab081c55ecaa1ec3e79fe18d", "html_url": "https://github.com/rust-lang/rust/commit/b3ca06e4fd8fe3a3ab081c55ecaa1ec3e79fe18d"}], "stats": {"total": 56, "additions": 38, "deletions": 18}, "files": [{"sha": "c6556c4871e95fa311ea789eceabd717c971db11", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/41c7448e1242de8fadf7c46efd3171368b5ff92e/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c7448e1242de8fadf7c46efd3171368b5ff92e/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=41c7448e1242de8fadf7c46efd3171368b5ff92e", "patch": "@@ -917,6 +917,21 @@ fn f() -> impl Iterator<Item$0 = u8> {}\n         );\n     }\n \n+    #[test]\n+    #[should_panic = \"unresolved reference\"]\n+    fn unknown_assoc_ty() {\n+        check(\n+            r#\"\n+trait Iterator {\n+    type Item;\n+       //^^^^\n+}\n+\n+fn f() -> impl Iterator<Invalid$0 = u8> {}\n+            \"#,\n+        )\n+    }\n+\n     #[test]\n     fn goto_def_for_assoc_ty_in_path_multiple() {\n         check("}, {"sha": "de0dc2a40f0b4544b23954e21f781314af29a79b", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/41c7448e1242de8fadf7c46efd3171368b5ff92e/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c7448e1242de8fadf7c46efd3171368b5ff92e/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=41c7448e1242de8fadf7c46efd3171368b5ff92e", "patch": "@@ -330,25 +330,30 @@ impl NameRefClass {\n             }\n         }\n \n-        if ast::AssocTypeArg::cast(parent.clone()).is_some() {\n-            // `Trait<Assoc = Ty>`\n-            //        ^^^^^\n-            let path = name_ref.syntax().ancestors().find_map(ast::Path::cast)?;\n-            let resolved = sema.resolve_path(&path)?;\n-            if let PathResolution::Def(ModuleDef::Trait(tr)) = resolved {\n-                if let Some(ty) = tr\n-                    .items(sema.db)\n-                    .iter()\n-                    .filter_map(|assoc| match assoc {\n-                        hir::AssocItem::TypeAlias(it) => Some(*it),\n-                        _ => None,\n-                    })\n-                    .find(|alias| &alias.name(sema.db).to_string() == &name_ref.text())\n-                {\n-                    return Some(NameRefClass::Definition(Definition::ModuleDef(\n-                        ModuleDef::TypeAlias(ty),\n-                    )));\n+        if let Some(assoc_type_arg) = ast::AssocTypeArg::cast(parent.clone()) {\n+            if assoc_type_arg.name_ref().as_ref() == Some(name_ref) {\n+                // `Trait<Assoc = Ty>`\n+                //        ^^^^^\n+                let path = name_ref.syntax().ancestors().find_map(ast::Path::cast)?;\n+                let resolved = sema.resolve_path(&path)?;\n+                if let PathResolution::Def(ModuleDef::Trait(tr)) = resolved {\n+                    // FIXME: resolve in supertraits\n+                    if let Some(ty) = tr\n+                        .items(sema.db)\n+                        .iter()\n+                        .filter_map(|assoc| match assoc {\n+                            hir::AssocItem::TypeAlias(it) => Some(*it),\n+                            _ => None,\n+                        })\n+                        .find(|alias| &alias.name(sema.db).to_string() == &name_ref.text())\n+                    {\n+                        return Some(NameRefClass::Definition(Definition::ModuleDef(\n+                            ModuleDef::TypeAlias(ty),\n+                        )));\n+                    }\n                 }\n+\n+                return None;\n             }\n         }\n "}]}