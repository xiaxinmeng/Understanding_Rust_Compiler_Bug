{"sha": "5eb7238928a720958987bcd897592cadebf2597e", "node_id": "C_kwDOAAsO6NoAKDVlYjcyMzg5MjhhNzIwOTU4OTg3YmNkODk3NTkyY2FkZWJmMjU5N2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-20T18:13:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-20T18:13:11Z"}, "message": "Rollup merge of #98276 - compiler-errors:const-format-macro, r=oli-obk\n\nMention formatting macros when encountering `ArgumentV1` method in const\n\nAlso open to just closing this if it's overkill. There are a lot of other distracting error messages around, so maybe it's not worth fixing just this one.\n\nFixes #93665", "tree": {"sha": "2d9c4ff829462bfe67faaf71a4731b4ab8491785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d9c4ff829462bfe67faaf71a4731b4ab8491785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eb7238928a720958987bcd897592cadebf2597e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJisLi3CRBK7hj4Ov3rIwAAG6EIAJXkIPfVNYXQ8CH7HwNcMXaU\nxnGoOkHf9nWefHqIvqFfFENKzftm0FYEosBF5kW5vtQVBIA7VzzTyhhHUK7XFuCf\ncxaYiUrmYX1BMjhWjxiGA/Ydo8RDdon0J+un4mOULveNSiGqbmCnxM+BEt+l7yOQ\nCYLWbTfjdq6uejkzjUfCoTBAL1A5bSnhNYLawjIywMj8cwindWZxoIEibS5M36Nx\nHH8yPVdCbULtV/Pz+ORfdQN4bWBUAOhshRAX6/0RZ+MZRuIgwLU5YiVARGwXRR0m\nL3yBAMqcCB9R5QYxXiKdW6bBHO6+Wpi+pUWD6EmpEZzoJqtH+stsSeMyQK+DbXA=\n=yIQn\n-----END PGP SIGNATURE-----\n", "payload": "tree 2d9c4ff829462bfe67faaf71a4731b4ab8491785\nparent 3e5800b8d30fba923c5070ae660c1e45a630a191\nparent 5373d738e862c13be971bc3b78c3d9c2af6e8ba7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1655748791 +0200\ncommitter GitHub <noreply@github.com> 1655748791 +0200\n\nRollup merge of #98276 - compiler-errors:const-format-macro, r=oli-obk\n\nMention formatting macros when encountering `ArgumentV1` method in const\n\nAlso open to just closing this if it's overkill. There are a lot of other distracting error messages around, so maybe it's not worth fixing just this one.\n\nFixes #93665\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb7238928a720958987bcd897592cadebf2597e", "html_url": "https://github.com/rust-lang/rust/commit/5eb7238928a720958987bcd897592cadebf2597e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eb7238928a720958987bcd897592cadebf2597e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e5800b8d30fba923c5070ae660c1e45a630a191", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5800b8d30fba923c5070ae660c1e45a630a191", "html_url": "https://github.com/rust-lang/rust/commit/3e5800b8d30fba923c5070ae660c1e45a630a191"}, {"sha": "5373d738e862c13be971bc3b78c3d9c2af6e8ba7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5373d738e862c13be971bc3b78c3d9c2af6e8ba7", "html_url": "https://github.com/rust-lang/rust/commit/5373d738e862c13be971bc3b78c3d9c2af6e8ba7"}], "stats": {"total": 113, "additions": 112, "deletions": 1}, "files": [{"sha": "0c587220cb77292bb2201584676a64a858bd1949", "filename": "compiler/rustc_const_eval/src/transform/check_consts/ops.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5eb7238928a720958987bcd897592cadebf2597e/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb7238928a720958987bcd897592cadebf2597e/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=5eb7238928a720958987bcd897592cadebf2597e", "patch": "@@ -10,7 +10,8 @@ use rustc_middle::mir;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n use rustc_middle::ty::{\n-    suggest_constraining_type_param, Adt, Closure, FnDef, FnPtr, Param, TraitPredicate, Ty,\n+    suggest_constraining_type_param, Adt, Closure, DefIdTree, FnDef, FnPtr, Param, TraitPredicate,\n+    Ty,\n };\n use rustc_middle::ty::{Binder, BoundConstness, ImplPolarity, TraitRef};\n use rustc_session::parse::feature_err;\n@@ -300,6 +301,15 @@ impl<'tcx> NonConstOp<'tcx> for FnCallNonConst<'tcx> {\n                 diag_trait(&mut err, self_ty, tcx.lang_items().deref_trait().unwrap());\n                 err\n             }\n+            _ if tcx.opt_parent(callee) == tcx.get_diagnostic_item(sym::ArgumentV1Methods) => {\n+                struct_span_err!(\n+                    ccx.tcx.sess,\n+                    span,\n+                    E0015,\n+                    \"cannot call non-const formatting macro in {}s\",\n+                    ccx.const_kind(),\n+                )\n+            }\n             _ => struct_span_err!(\n                 ccx.tcx.sess,\n                 span,"}, {"sha": "8a6941a451621930fb52c787037b74fec521dadb", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5eb7238928a720958987bcd897592cadebf2597e/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb7238928a720958987bcd897592cadebf2597e/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=5eb7238928a720958987bcd897592cadebf2597e", "patch": "@@ -131,6 +131,7 @@ symbols! {\n         Arc,\n         Argument,\n         ArgumentV1,\n+        ArgumentV1Methods,\n         Arguments,\n         AsMut,\n         AsRef,"}, {"sha": "9e4a574818a14d704792e7323aed622519356216", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5eb7238928a720958987bcd897592cadebf2597e/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb7238928a720958987bcd897592cadebf2597e/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=5eb7238928a720958987bcd897592cadebf2597e", "patch": "@@ -320,6 +320,7 @@ macro_rules! arg_new {\n     };\n }\n \n+#[rustc_diagnostic_item = \"ArgumentV1Methods\"]\n impl<'a> ArgumentV1<'a> {\n     #[doc(hidden)]\n     #[unstable(feature = \"fmt_internals\", reason = \"internal to format_args!\", issue = \"none\")]"}, {"sha": "e43633da3ccb91dc592ddbee0140af3d878c42fe", "filename": "src/test/ui/consts/const-eval/format.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5eb7238928a720958987bcd897592cadebf2597e/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb7238928a720958987bcd897592cadebf2597e/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fformat.rs?ref=5eb7238928a720958987bcd897592cadebf2597e", "patch": "@@ -0,0 +1,21 @@\n+const fn failure() {\n+    panic!(\"{:?}\", 0);\n+    //~^ ERROR cannot call non-const formatting macro in constant functions\n+    //~| ERROR erroneous constant used\n+    //~| ERROR erroneous constant used\n+    //~| WARN this was previously accepted by the compiler\n+    //~| WARN this was previously accepted by the compiler\n+}\n+\n+const fn print() {\n+    println!(\"{:?}\", 0);\n+    //~^ ERROR cannot call non-const formatting macro in constant functions\n+    //~| ERROR `Arguments::<'a>::new_v1` is not yet stable as a const fn\n+    //~| ERROR cannot call non-const fn `_print` in constant functions\n+    //~| ERROR erroneous constant used\n+    //~| ERROR erroneous constant used\n+    //~| WARN this was previously accepted by the compiler\n+    //~| WARN this was previously accepted by the compiler\n+}\n+\n+fn main() {}"}, {"sha": "44f436ae4e3a9ac0c474c6bc208ccef4e943c14d", "filename": "src/test/ui/consts/const-eval/format.stderr", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/5eb7238928a720958987bcd897592cadebf2597e/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5eb7238928a720958987bcd897592cadebf2597e/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fformat.stderr?ref=5eb7238928a720958987bcd897592cadebf2597e", "patch": "@@ -0,0 +1,78 @@\n+error[E0015]: cannot call non-const formatting macro in constant functions\n+  --> $DIR/format.rs:2:20\n+   |\n+LL |     panic!(\"{:?}\", 0);\n+   |                    ^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+   = note: this error originates in the macro `$crate::const_format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0015]: cannot call non-const formatting macro in constant functions\n+  --> $DIR/format.rs:11:22\n+   |\n+LL |     println!(\"{:?}\", 0);\n+   |                      ^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: `Arguments::<'a>::new_v1` is not yet stable as a const fn\n+  --> $DIR/format.rs:11:5\n+   |\n+LL |     println!(\"{:?}\", 0);\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_fmt_arguments_new)]` to the crate attributes to enable\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0015]: cannot call non-const fn `_print` in constant functions\n+  --> $DIR/format.rs:11:5\n+   |\n+LL |     println!(\"{:?}\", 0);\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+   = note: this error originates in the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: erroneous constant used\n+  --> $DIR/format.rs:2:12\n+   |\n+LL |     panic!(\"{:?}\", 0);\n+   |            ^^^^^^ referenced constant has errors\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: erroneous constant used\n+  --> $DIR/format.rs:2:20\n+   |\n+LL |     panic!(\"{:?}\", 0);\n+   |                    ^ referenced constant has errors\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+   = note: this error originates in the macro `$crate::const_format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: erroneous constant used\n+  --> $DIR/format.rs:11:14\n+   |\n+LL |     println!(\"{:?}\", 0);\n+   |              ^^^^^^ referenced constant has errors\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: erroneous constant used\n+  --> $DIR/format.rs:11:22\n+   |\n+LL |     println!(\"{:?}\", 0);\n+   |                      ^ referenced constant has errors\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 8 previous errors\n+\n+For more information about this error, try `rustc --explain E0015`."}]}