{"sha": "a481b8f261a196ec8b4107273705a750c545856b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ODFiOGYyNjFhMTk2ZWM4YjQxMDcyNzM3MDVhNzUwYzU0NTg1NmI=", "commit": {"author": {"name": "JOE1994", "email": "joseph942010@gmail.com", "date": "2020-03-28T18:42:22Z"}, "committer": {"name": "JOE1994", "email": "joseph942010@gmail.com", "date": "2020-03-29T15:30:08Z"}, "message": "partially implement 'set_last_error_from_io_error' for Windows", "tree": {"sha": "bb78ab41d0cab886044c73ca1abc61268ee65bd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb78ab41d0cab886044c73ca1abc61268ee65bd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a481b8f261a196ec8b4107273705a750c545856b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a481b8f261a196ec8b4107273705a750c545856b", "html_url": "https://github.com/rust-lang/rust/commit/a481b8f261a196ec8b4107273705a750c545856b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a481b8f261a196ec8b4107273705a750c545856b/comments", "author": {"login": "JOE1994", "id": 10286488, "node_id": "MDQ6VXNlcjEwMjg2NDg4", "avatar_url": "https://avatars.githubusercontent.com/u/10286488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JOE1994", "html_url": "https://github.com/JOE1994", "followers_url": "https://api.github.com/users/JOE1994/followers", "following_url": "https://api.github.com/users/JOE1994/following{/other_user}", "gists_url": "https://api.github.com/users/JOE1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/JOE1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JOE1994/subscriptions", "organizations_url": "https://api.github.com/users/JOE1994/orgs", "repos_url": "https://api.github.com/users/JOE1994/repos", "events_url": "https://api.github.com/users/JOE1994/events{/privacy}", "received_events_url": "https://api.github.com/users/JOE1994/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JOE1994", "id": 10286488, "node_id": "MDQ6VXNlcjEwMjg2NDg4", "avatar_url": "https://avatars.githubusercontent.com/u/10286488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JOE1994", "html_url": "https://github.com/JOE1994", "followers_url": "https://api.github.com/users/JOE1994/followers", "following_url": "https://api.github.com/users/JOE1994/following{/other_user}", "gists_url": "https://api.github.com/users/JOE1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/JOE1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JOE1994/subscriptions", "organizations_url": "https://api.github.com/users/JOE1994/orgs", "repos_url": "https://api.github.com/users/JOE1994/repos", "events_url": "https://api.github.com/users/JOE1994/events{/privacy}", "received_events_url": "https://api.github.com/users/JOE1994/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c706f50e3ffb4425a82cf67834402f000f1f9940", "url": "https://api.github.com/repos/rust-lang/rust/commits/c706f50e3ffb4425a82cf67834402f000f1f9940", "html_url": "https://github.com/rust-lang/rust/commit/c706f50e3ffb4425a82cf67834402f000f1f9940"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "751d77a389783e9eceb7f6f11ff48908b3527fd7", "filename": "src/helpers.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a481b8f261a196ec8b4107273705a750c545856b/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a481b8f261a196ec8b4107273705a750c545856b/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=a481b8f261a196ec8b4107273705a750c545856b", "patch": "@@ -71,6 +71,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             .not_undef()\n     }\n \n+    /// Helper function to get a `windows` constant as a `Scalar`.\n+    fn eval_windows(&mut self, name: &str) -> InterpResult<'tcx, Scalar<Tag>> {\n+        self.eval_context_mut()\n+            .eval_path_scalar(&[\"std\", \"sys\", \"windows\", \"c\", name])?\n+            .not_undef()\n+    }\n+\n     /// Helper function to get a `libc` constant as an `i32`.\n     fn eval_libc_i32(&mut self, name: &str) -> InterpResult<'tcx, i32> {\n         // TODO: Cache the result.\n@@ -428,11 +435,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 }\n             })?\n         } else {\n-            // FIXME: we have to implement the Windows equivalent of this.\n-            throw_unsup_format!(\n-                \"setting the last OS error from an io::Error is unsupported for {}.\",\n-                target.target_os\n-            )\n+            // FIXME: we have to finish implementing the Windows equivalent of this.\n+            this.eval_windows(match e.kind() {\n+                NotFound => \"ERROR_FILE_NOT_FOUND\",\n+                _ => throw_unsup_format!(\n+                    \"setting the last OS error from an io::Error is yet unsupported for {}.\",\n+                    target.target_os\n+                )\n+            })?\n         };\n         this.set_last_error(last_error)\n     }"}]}