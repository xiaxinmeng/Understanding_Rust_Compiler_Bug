{"sha": "8ed728babb057c0f736a63a69ba772e45278148f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZDcyOGJhYmIwNTdjMGY3MzZhNjNhNjliYTc3MmU0NTI3ODE0OGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-01T03:36:58Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-07T15:13:56Z"}, "message": "core: Inherit the any module", "tree": {"sha": "f36caede39ebc876fe40ef02aaedbffaa0a9f70c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f36caede39ebc876fe40ef02aaedbffaa0a9f70c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ed728babb057c0f736a63a69ba772e45278148f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed728babb057c0f736a63a69ba772e45278148f", "html_url": "https://github.com/rust-lang/rust/commit/8ed728babb057c0f736a63a69ba772e45278148f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ed728babb057c0f736a63a69ba772e45278148f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85a8e6b80ae91eb00a0bce96a5cec8017e1b37da", "url": "https://api.github.com/repos/rust-lang/rust/commits/85a8e6b80ae91eb00a0bce96a5cec8017e1b37da", "html_url": "https://github.com/rust-lang/rust/commit/85a8e6b80ae91eb00a0bce96a5cec8017e1b37da"}], "stats": {"total": 29, "additions": 10, "deletions": 19}, "files": [{"sha": "f22453eb740c0dc31da3032b33cff33013ca1537", "filename": "src/libcore/any.rs", "status": "renamed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=8ed728babb057c0f736a63a69ba772e45278148f", "patch": "@@ -21,7 +21,6 @@\n //! the extension traits (`*Ext`) for the full details.\n \n use cast::{transmute, transmute_copy};\n-use fmt;\n use option::{Option, Some, None};\n use owned::Box;\n use raw::TraitObject;\n@@ -145,22 +144,6 @@ impl AnyOwnExt for Box<Any> {\n     }\n }\n \n-///////////////////////////////////////////////////////////////////////////////\n-// Trait implementations\n-///////////////////////////////////////////////////////////////////////////////\n-\n-impl fmt::Show for Box<Any> {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.pad(\"Box<Any>\")\n-    }\n-}\n-\n-impl<'a> fmt::Show for &'a Any {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.pad(\"&Any\")\n-    }\n-}\n-\n #[cfg(test)]\n mod tests {\n     use prelude::*;", "previous_filename": "src/libstd/any.rs"}, {"sha": "08b0434d8279bdcf39c5a36db4ada688582c0c72", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=8ed728babb057c0f736a63a69ba772e45278148f", "patch": "@@ -37,5 +37,6 @@ pub mod container;\n \n /* Core types and methods on primitives */\n \n+pub mod any;\n pub mod finally;\n pub mod char;"}, {"sha": "8c999c2e2e39a4cc9110a2598e2fcddbe202b6e5", "filename": "src/libstd/fmt/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibstd%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibstd%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt%2Fmod.rs?ref=8ed728babb057c0f736a63a69ba772e45278148f", "patch": "@@ -1242,6 +1242,14 @@ impl<T> Show for *mut T {\n     fn fmt(&self, f: &mut Formatter) -> Result { secret_pointer(self, f) }\n }\n \n+impl Show for Box<any::Any> {\n+    fn fmt(&self, f: &mut Formatter) -> Result { f.pad(\"Box<Any>\") }\n+}\n+\n+impl<'a> Show for &'a any::Any {\n+    fn fmt(&self, f: &mut Formatter) -> Result { f.pad(\"&Any\") }\n+}\n+\n impl Show for TypeId {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         write!(f.buf, \"TypeId \\\\{ {} \\\\}\", self.hash())"}, {"sha": "356b653281e7b0d42b9b25403d8ee3e8a3e5bde6", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed728babb057c0f736a63a69ba772e45278148f/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=8ed728babb057c0f736a63a69ba772e45278148f", "patch": "@@ -137,6 +137,7 @@ extern crate core;\n #[cfg(not(test))] pub use ops = core::ops;\n #[cfg(not(test))] pub use ty = core::ty;\n \n+pub use core::any;\n pub use core::cast;\n pub use core::char;\n pub use core::container;\n@@ -218,8 +219,6 @@ pub mod iter;\n pub mod to_str;\n pub mod clone;\n pub mod hash;\n-pub mod default;\n-pub mod any;\n \n /* Common data structures */\n "}]}