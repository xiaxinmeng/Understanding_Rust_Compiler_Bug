{"sha": "2793859e86ee37f32ccf01b05fc1869753b85c6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OTM4NTllODZlZTM3ZjMyY2NmMDFiMDVmYzE4Njk3NTNiODVjNmE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-02-21T06:26:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-21T06:26:48Z"}, "message": "Rollup merge of #82233 - ijackson:try-block-type-test, r=Mark-Simulacrum\n\ntry-back-block-type test: Use TryFromSliceError for From test\n\nUsing `i32` is rather fragile because it has many implementations.  Recently in an early draft of another MR (#82228) I did something that introduced a new `i32 as From<something>` impl and this test broke.\n\nTryFromSliceError is nice because it doesn't seem likely to grow new conversions.  We still have one conversion, from Infallible.\n\nMy other MR is going to be reworked and won't need this any more but having done it I thought I would submit it rather than just throw it away.  Sorry for the tiny MR.", "tree": {"sha": "53e6f53c4117e464b3f26ed0bd357f43a45203ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53e6f53c4117e464b3f26ed0bd357f43a45203ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2793859e86ee37f32ccf01b05fc1869753b85c6a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgMf0oCRBK7hj4Ov3rIwAAdHIIAGKbRvswJQ8ftpd1N4V1JpK2\nc8uQiAvbP7pcV1/AXG+mum/5psQYVGTMHqdhEw8vnmc49QhiTqqmXtEoxdTc7A9Y\nqJISzxiM0bBfunfpwVPnUZCcpZbsWlvL5o60/r3YjhpD4WzODMMs9hY+VzN5IZn+\nGgxPwi1jqoZJNjQnESygXJXsrQL+W43zlvnKEQ/cBmlNHdb+HggWotbJ9p7mdQDC\nnCmZ6mGbBElunfq3DogfzHBDksWFEElaINl9jeeT1sSZjtSHz/XQwyGi0hVT32Ce\nyeuZEC1a+z4ZrOAlziaB7aSHhwi+xUf5GzlLMhanG37wrUtUWBq6lFqHiQxoneM=\n=ZjB0\n-----END PGP SIGNATURE-----\n", "payload": "tree 53e6f53c4117e464b3f26ed0bd357f43a45203ab\nparent b9040c717c1730b6246c197bc438f6be97739228\nparent 8ae05dfdf6014e8538ef11f989bc493363cc87ab\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1613888808 +0900\ncommitter GitHub <noreply@github.com> 1613888808 +0900\n\nRollup merge of #82233 - ijackson:try-block-type-test, r=Mark-Simulacrum\n\ntry-back-block-type test: Use TryFromSliceError for From test\n\nUsing `i32` is rather fragile because it has many implementations.  Recently in an early draft of another MR (#82228) I did something that introduced a new `i32 as From<something>` impl and this test broke.\n\nTryFromSliceError is nice because it doesn't seem likely to grow new conversions.  We still have one conversion, from Infallible.\n\nMy other MR is going to be reworked and won't need this any more but having done it I thought I would submit it rather than just throw it away.  Sorry for the tiny MR.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2793859e86ee37f32ccf01b05fc1869753b85c6a", "html_url": "https://github.com/rust-lang/rust/commit/2793859e86ee37f32ccf01b05fc1869753b85c6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2793859e86ee37f32ccf01b05fc1869753b85c6a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9040c717c1730b6246c197bc438f6be97739228", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9040c717c1730b6246c197bc438f6be97739228", "html_url": "https://github.com/rust-lang/rust/commit/b9040c717c1730b6246c197bc438f6be97739228"}, {"sha": "8ae05dfdf6014e8538ef11f989bc493363cc87ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae05dfdf6014e8538ef11f989bc493363cc87ab", "html_url": "https://github.com/rust-lang/rust/commit/8ae05dfdf6014e8538ef11f989bc493363cc87ab"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ef6e690e1bd0e03edc6ffbeb3bc76af3bc4dd3c7", "filename": "src/test/ui/try-block/try-block-bad-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2793859e86ee37f32ccf01b05fc1869753b85c6a/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2793859e86ee37f32ccf01b05fc1869753b85c6a/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs?ref=2793859e86ee37f32ccf01b05fc1869753b85c6a", "patch": "@@ -3,7 +3,7 @@\n #![feature(try_blocks)]\n \n pub fn main() {\n-    let res: Result<u32, i32> = try {\n+    let res: Result<u32, std::array::TryFromSliceError> = try {\n         Err(\"\")?; //~ ERROR `?` couldn't convert the error\n         5\n     };"}, {"sha": "75a42c0d6b71b9f08103de11072e2aa50054ceb7", "filename": "src/test/ui/try-block/try-block-bad-type.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2793859e86ee37f32ccf01b05fc1869753b85c6a/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2793859e86ee37f32ccf01b05fc1869753b85c6a/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr?ref=2793859e86ee37f32ccf01b05fc1869753b85c6a", "patch": "@@ -1,16 +1,12 @@\n-error[E0277]: `?` couldn't convert the error to `i32`\n+error[E0277]: `?` couldn't convert the error to `TryFromSliceError`\n   --> $DIR/try-block-bad-type.rs:7:16\n    |\n LL |         Err(\"\")?;\n-   |                ^ the trait `From<&str>` is not implemented for `i32`\n+   |                ^ the trait `From<&str>` is not implemented for `TryFromSliceError`\n    |\n    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n    = help: the following implementations were found:\n-             <i32 as From<NonZeroI32>>\n-             <i32 as From<bool>>\n-             <i32 as From<i16>>\n-             <i32 as From<i8>>\n-           and 2 others\n+             <TryFromSliceError as From<Infallible>>\n    = note: required by `from`\n \n error[E0271]: type mismatch resolving `<Result<i32, i32> as Try>::Ok == &str`"}]}