{"sha": "cbf9f5f5dfd5e3ec36899adf89c55a20380da63e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZjlmNWY1ZGZkNWUzZWMzNjg5OWFkZjg5YzU1YTIwMzgwZGE2M2U=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-16T02:33:33Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T14:44:48Z"}, "message": "libsyntax: De-`@str` `get_single_str_from_tts`", "tree": {"sha": "98292448425ba17f285c3c350df034de3190405f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98292448425ba17f285c3c350df034de3190405f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbf9f5f5dfd5e3ec36899adf89c55a20380da63e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbf9f5f5dfd5e3ec36899adf89c55a20380da63e", "html_url": "https://github.com/rust-lang/rust/commit/cbf9f5f5dfd5e3ec36899adf89c55a20380da63e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbf9f5f5dfd5e3ec36899adf89c55a20380da63e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9af11d6cc0266a5690897b4645d8cab2ed1115b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9af11d6cc0266a5690897b4645d8cab2ed1115b", "html_url": "https://github.com/rust-lang/rust/commit/f9af11d6cc0266a5690897b4645d8cab2ed1115b"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "74a9dbdd7c9ac542fa86abe1d281bd729a888bef", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cbf9f5f5dfd5e3ec36899adf89c55a20380da63e/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbf9f5f5dfd5e3ec36899adf89c55a20380da63e/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=cbf9f5f5dfd5e3ec36899adf89c55a20380da63e", "patch": "@@ -439,13 +439,15 @@ pub fn get_single_str_from_tts(cx: &ExtCtxt,\n                                sp: Span,\n                                tts: &[ast::TokenTree],\n                                name: &str)\n-                               -> Option<@str> {\n+                               -> Option<~str> {\n     if tts.len() != 1 {\n         cx.span_err(sp, format!(\"{} takes 1 argument.\", name));\n     } else {\n         match tts[0] {\n             ast::TTTok(_, token::LIT_STR(ident))\n-                | ast::TTTok(_, token::LIT_STR_RAW(ident, _)) => return Some(cx.str_of(ident)),\n+            | ast::TTTok(_, token::LIT_STR_RAW(ident, _)) => {\n+                return Some(cx.str_of(ident).to_str())\n+            }\n             _ => cx.span_err(sp, format!(\"{} requires a string.\", name)),\n         }\n     }"}]}