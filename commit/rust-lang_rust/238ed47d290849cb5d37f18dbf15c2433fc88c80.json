{"sha": "238ed47d290849cb5d37f18dbf15c2433fc88c80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzOGVkNDdkMjkwODQ5Y2I1ZDM3ZjE4ZGJmMTVjMjQzM2ZjODhjODA=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-12-21T16:49:24Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-01-04T09:12:20Z"}, "message": "Generate code for const- and inline-fns if -Clink-dead-code is specified.", "tree": {"sha": "26da4416c92c877adb7e9a56daf72c9172e96048", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26da4416c92c877adb7e9a56daf72c9172e96048"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/238ed47d290849cb5d37f18dbf15c2433fc88c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/238ed47d290849cb5d37f18dbf15c2433fc88c80", "html_url": "https://github.com/rust-lang/rust/commit/238ed47d290849cb5d37f18dbf15c2433fc88c80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/238ed47d290849cb5d37f18dbf15c2433fc88c80/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de38f49528b537414385d42a66dda711c8c8a309", "url": "https://api.github.com/repos/rust-lang/rust/commits/de38f49528b537414385d42a66dda711c8c8a309", "html_url": "https://github.com/rust-lang/rust/commit/de38f49528b537414385d42a66dda711c8c8a309"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "1f463cea7643b3da54e1ae3cd4cf6468fafd9c63", "filename": "src/librustc_mir/monomorphize/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs?ref=238ed47d290849cb5d37f18dbf15c2433fc88c80", "patch": "@@ -115,7 +115,7 @@ pub trait MonoItemExt<'a, 'tcx>: fmt::Debug {\n         let inline_in_all_cgus =\n             tcx.sess.opts.debugging_opts.inline_in_all_cgus.unwrap_or_else(|| {\n                 tcx.sess.opts.optimize != OptLevel::No\n-            });\n+            }) && !tcx.sess.opts.cg.link_dead_code;\n \n         match *self.as_mono_item() {\n             MonoItem::Fn(ref instance) => {"}, {"sha": "7da47551a4078fc5c4b625233d97bf8611619d35", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=238ed47d290849cb5d37f18dbf15c2433fc88c80", "patch": "@@ -236,7 +236,9 @@ pub fn partition<'a, 'tcx, I>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     // Next we try to make as many symbols \"internal\" as possible, so LLVM has\n     // more freedom to optimize.\n-    internalize_symbols(tcx, &mut post_inlining, inlining_map);\n+    if !tcx.sess.opts.cg.link_dead_code {\n+        internalize_symbols(tcx, &mut post_inlining, inlining_map);\n+    }\n \n     // Finally, sort by codegen unit name, so that we get deterministic results\n     let PostInliningPartitioning {"}, {"sha": "eee08650e816b66017d4918726219437dbe0c32d", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=238ed47d290849cb5d37f18dbf15c2433fc88c80", "patch": "@@ -1014,7 +1014,13 @@ fn collect_and_partition_translation_items<'a, 'tcx>(\n                 MonoItemCollectionMode::Lazy\n             }\n         }\n-        None => MonoItemCollectionMode::Lazy\n+        None => {\n+            if tcx.sess.opts.cg.link_dead_code {\n+                MonoItemCollectionMode::Eager\n+            } else {\n+                MonoItemCollectionMode::Lazy\n+            }\n+        }\n     };\n \n     let (items, inlining_map) ="}, {"sha": "9cabcd9157a6acdb78fcb3b2233aa497477d690e", "filename": "src/test/codegen/link-dead-code.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Ftest%2Fcodegen%2Flink-dead-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/238ed47d290849cb5d37f18dbf15c2433fc88c80/src%2Ftest%2Fcodegen%2Flink-dead-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Flink-dead-code.rs?ref=238ed47d290849cb5d37f18dbf15c2433fc88c80", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-Clink-dead-code\n+\n+#![feature(const_fn)]\n+#![crate_type = \"rlib\"]\n+\n+// This test makes sure that, when -Clink-dead-code is specified, we generate\n+// code for functions that would otherwise be skipped.\n+\n+// CHECK-LABEL: define hidden i32 @_ZN14link_dead_code8const_fn\n+const fn const_fn() -> i32 { 1 }\n+\n+// CHECK-LABEL: define hidden i32 @_ZN14link_dead_code9inline_fn\n+#[inline]\n+fn inline_fn() -> i32 { 2 }\n+\n+// CHECK-LABEL: define hidden i32 @_ZN14link_dead_code10private_fn\n+fn private_fn() -> i32 { 3 }"}]}