{"sha": "202720bf483088dbdb343f78c0aa77067fdd8156", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMjcyMGJmNDgzMDg4ZGJkYjM0M2Y3OGMwYWE3NzA2N2ZkZDgxNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T21:05:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T21:05:34Z"}, "message": "Auto merge of #81152 - lzutao:intersperse_fold, r=m-ou-se\n\nFix intersperse_fold\n\nHere is a standalone playground link in case anybody wants to modify code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=626b4d044fb74f044a36098ad907e40f\n\nFixes #81145\n\ncc #79479 `@jonas-schievink`", "tree": {"sha": "27c9c1236708dad1a5987b1f8bb25fef47c98c4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27c9c1236708dad1a5987b1f8bb25fef47c98c4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/202720bf483088dbdb343f78c0aa77067fdd8156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/202720bf483088dbdb343f78c0aa77067fdd8156", "html_url": "https://github.com/rust-lang/rust/commit/202720bf483088dbdb343f78c0aa77067fdd8156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/202720bf483088dbdb343f78c0aa77067fdd8156/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65767e56537e20903b54ecde7c371cbfb1b201b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/65767e56537e20903b54ecde7c371cbfb1b201b0", "html_url": "https://github.com/rust-lang/rust/commit/65767e56537e20903b54ecde7c371cbfb1b201b0"}, {"sha": "9272d53c5a73198436f429a1a70e5d60afa995a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9272d53c5a73198436f429a1a70e5d60afa995a7", "html_url": "https://github.com/rust-lang/rust/commit/9272d53c5a73198436f429a1a70e5d60afa995a7"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "b1170f32ba161d1b6b89e94f2bc9f9707907f671", "filename": "library/core/src/iter/adapters/intersperse.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/202720bf483088dbdb343f78c0aa77067fdd8156/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fintersperse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202720bf483088dbdb343f78c0aa77067fdd8156/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fintersperse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fintersperse.rs?ref=202720bf483088dbdb343f78c0aa77067fdd8156", "patch": "@@ -160,7 +160,7 @@ where\n }\n \n fn intersperse_fold<I, B, F, G>(\n-    mut iter: Peekable<I>,\n+    mut iter: I,\n     init: B,\n     mut f: F,\n     mut separator: G,\n@@ -173,10 +173,11 @@ where\n {\n     let mut accum = init;\n \n-    // Use `peek()` first to avoid calling `next()` on an empty iterator.\n-    if !needs_sep || iter.peek().is_some() {\n+    if !needs_sep {\n         if let Some(x) = iter.next() {\n             accum = f(accum, x);\n+        } else {\n+            return accum;\n         }\n     }\n "}, {"sha": "78b4d1acaf5cd3119d619b79dab7a2bbdf749136", "filename": "library/core/tests/iter.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/202720bf483088dbdb343f78c0aa77067fdd8156/library%2Fcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202720bf483088dbdb343f78c0aa77067fdd8156/library%2Fcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter.rs?ref=202720bf483088dbdb343f78c0aa77067fdd8156", "patch": "@@ -3562,6 +3562,47 @@ fn test_intersperse_size_hint() {\n     assert_eq!([].iter().intersperse(&()).size_hint(), (0, Some(0)));\n }\n \n+#[test]\n+fn test_intersperse_fold() {\n+    let v = (1..4).intersperse(9).fold(Vec::new(), |mut acc, x| {\n+        acc.push(x);\n+        acc\n+    });\n+    assert_eq!(v.as_slice(), [1, 9, 2, 9, 3]);\n+\n+    let mut iter = (1..4).intersperse(9);\n+    assert_eq!(iter.next(), Some(1));\n+    let v = iter.fold(Vec::new(), |mut acc, x| {\n+        acc.push(x);\n+        acc\n+    });\n+    assert_eq!(v.as_slice(), [9, 2, 9, 3]);\n+\n+    struct NoneAtStart(i32); // Produces: None, Some(2), Some(3), None, ...\n+    impl Iterator for NoneAtStart {\n+        type Item = i32;\n+        fn next(&mut self) -> Option<i32> {\n+            self.0 += 1;\n+            Some(self.0).filter(|i| i % 3 != 1)\n+        }\n+    }\n+\n+    let v = NoneAtStart(0).intersperse(1000).fold(0, |a, b| a + b);\n+    assert_eq!(v, 0);\n+}\n+\n+#[test]\n+fn test_intersperse_collect_string() {\n+    let contents = vec![1, 2, 3];\n+\n+    let contents_string = contents\n+        .into_iter()\n+        .map(|id| id.to_string())\n+        .intersperse(\", \".to_owned())\n+        .collect::<String>();\n+    assert_eq!(contents_string, \"1, 2, 3\");\n+}\n+\n #[test]\n fn test_fold_specialization_intersperse() {\n     let mut iter = (1..2).intersperse(0);"}]}