{"sha": "9143a69f4b3ef4bda77afddefe934be363e39f31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNDNhNjlmNGIzZWY0YmRhNzdhZmRkZWZlOTM0YmUzNjNlMzlmMzE=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-29T13:01:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-29T13:01:11Z"}, "message": "Merge pull request #386 from mati865/rustup\n\nRustup", "tree": {"sha": "ad0d021197290a8303c6ad7c9a9c65e474397f72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad0d021197290a8303c6ad7c9a9c65e474397f72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9143a69f4b3ef4bda77afddefe934be363e39f31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbNi2XCRBK7hj4Ov3rIwAAdHIIABDZpkLaXm/sc42ofq4QFcPi\nUkub2oOflHVibqQ5ZUk+fdYlYv3XWSiKDOzLlfsBRT2vNhfU4YLi5fegsyVrsm1S\nwh98gkRhMCpbmdMztYe2JZ7PN3h7SI/UsS00NuYN9Ix4DCb4pdugGlg/eo5dFOwk\nEPmvdIte7tsY4A4ZC/viFOCwlSI6ddYz8rGsGY4F4r3ohvqhBoQCxKzZH2v71rgu\n7+yr0tNNcgab8CBKf3dfUjyxLHEP6SP5+CIY1aLAWuniG5uRINq6lgo6Aj94++Jt\nyzYbD9Hu+FG1kxo+8Sv36IXhZPMKhSARn/9k6ZgvQw/vaTG+6M53Xu1aYXPlML0=\n=xVFe\n-----END PGP SIGNATURE-----\n", "payload": "tree ad0d021197290a8303c6ad7c9a9c65e474397f72\nparent 9d8945e3e8212bf69a54a8f3cb3db3f8dfab1845\nparent d4b98b221ddc74524e3c3824e28126b9965150bc\nauthor Oliver Schneider <github35764891676564198441@oli-obk.de> 1530277271 +0200\ncommitter GitHub <noreply@github.com> 1530277271 +0200\n\nMerge pull request #386 from mati865/rustup\n\nRustup"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9143a69f4b3ef4bda77afddefe934be363e39f31", "html_url": "https://github.com/rust-lang/rust/commit/9143a69f4b3ef4bda77afddefe934be363e39f31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9143a69f4b3ef4bda77afddefe934be363e39f31/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d8945e3e8212bf69a54a8f3cb3db3f8dfab1845", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d8945e3e8212bf69a54a8f3cb3db3f8dfab1845", "html_url": "https://github.com/rust-lang/rust/commit/9d8945e3e8212bf69a54a8f3cb3db3f8dfab1845"}, {"sha": "d4b98b221ddc74524e3c3824e28126b9965150bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b98b221ddc74524e3c3824e28126b9965150bc", "html_url": "https://github.com/rust-lang/rust/commit/d4b98b221ddc74524e3c3824e28126b9965150bc"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "64cd380970e4d0f7da2f063d4aa26457d295f6ab", "filename": "rustc_tests/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9143a69f4b3ef4bda77afddefe934be363e39f31/rustc_tests%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9143a69f4b3ef4bda77afddefe934be363e39f31/rustc_tests%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tests%2Fsrc%2Fmain.rs?ref=9143a69f4b3ef4bda77afddefe934be363e39f31", "patch": "@@ -90,7 +90,7 @@ fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>) {\n         struct Visitor<'a, 'tcx: 'a>(TyCtxt<'a, 'tcx, 'tcx>, &'a CompileState<'a, 'tcx>);\n         impl<'a, 'tcx: 'a, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'a, 'tcx> {\n             fn visit_item(&mut self, i: &'hir hir::Item) {\n-                if let hir::Item_::ItemFn(_, _, _, _, _, body_id) = i.node {\n+                if let hir::Item_::ItemFn(.., body_id) = i.node {\n                     if i.attrs.iter().any(|attr| attr.name() == \"test\") {\n                         let did = self.0.hir.body_owner_def_id(body_id);\n                         println!(\"running test: {}\", self.0.def_path_debug_str(did));"}, {"sha": "3001500d2e07bf1fb5d0e753e85b6fe24dd43f0a", "filename": "src/bin/miri.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9143a69f4b3ef4bda77afddefe934be363e39f31/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9143a69f4b3ef4bda77afddefe934be363e39f31/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=9143a69f4b3ef4bda77afddefe934be363e39f31", "patch": "@@ -25,7 +25,7 @@ use std::path::PathBuf;\n struct MiriCompilerCalls {\n     default: Box<RustcDefaultCalls>,\n     /// Whether to begin interpretation at the start_fn lang item or not\n-    /// \n+    ///\n     /// If false, the interpretation begins at the `main` function\n     start_fn: bool,\n }\n@@ -115,7 +115,7 @@ fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>, use_start_fn: bo\n         );\n         impl<'a, 'tcx: 'a, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'a, 'tcx> {\n             fn visit_item(&mut self, i: &'hir hir::Item) {\n-                if let hir::Item_::ItemFn(_, _, _, _, _, body_id) = i.node {\n+                if let hir::Item_::ItemFn(.., body_id) = i.node {\n                     if i.attrs.iter().any(|attr| {\n                         attr.name() == \"test\"\n                     })"}]}