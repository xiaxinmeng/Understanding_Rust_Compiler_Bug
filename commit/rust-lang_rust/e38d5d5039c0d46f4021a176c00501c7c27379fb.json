{"sha": "e38d5d5039c0d46f4021a176c00501c7c27379fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOGQ1ZDUwMzljMGQ0NmY0MDIxYTE3NmMwMDUwMWM3YzI3Mzc5ZmI=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-05-23T04:15:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-23T04:15:41Z"}, "message": "Rollup merge of #42016 - pietroalbini:stabilize/loop_break_value, r=nikomatsakis\n\nStabilize the loop_break_value feature\n\nTracking issue: #37339.\n\nDocumentation PRs already sent to the various repositories.", "tree": {"sha": "8bdb3735843239e1671ca659da00c1d4402e0094", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bdb3735843239e1671ca659da00c1d4402e0094"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e38d5d5039c0d46f4021a176c00501c7c27379fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e38d5d5039c0d46f4021a176c00501c7c27379fb", "html_url": "https://github.com/rust-lang/rust/commit/e38d5d5039c0d46f4021a176c00501c7c27379fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e38d5d5039c0d46f4021a176c00501c7c27379fb/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e9139197e908435673c62a14381fbd4f8166319", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9139197e908435673c62a14381fbd4f8166319", "html_url": "https://github.com/rust-lang/rust/commit/2e9139197e908435673c62a14381fbd4f8166319"}, {"sha": "93c1f2472bd627955e44970de075c2e90f246501", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c1f2472bd627955e44970de075c2e90f246501", "html_url": "https://github.com/rust-lang/rust/commit/93c1f2472bd627955e44970de075c2e90f246501"}], "stats": {"total": 122, "additions": 7, "deletions": 115}, "files": [{"sha": "456a683dc33c89fcc53c5712c4510eec272028d0", "filename": "src/doc/unstable-book/src/SUMMARY.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -49,7 +49,6 @@\n     - [link_llvm_intrinsics](language-features/link-llvm-intrinsics.md)\n     - [linkage](language-features/linkage.md)\n     - [log_syntax](language-features/log-syntax.md)\n-    - [loop_break_value](language-features/loop-break-value.md)\n     - [macro_reexport](language-features/macro-reexport.md)\n     - [macro_vis_matcher](language-features/macro-vis-matcher.md)\n     - [main](language-features/main.md)"}, {"sha": "e8fefe3b73344b4376cfce092dc8b9d37cf21bff", "filename": "src/doc/unstable-book/src/language-features/loop-break-value.md", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/2e9139197e908435673c62a14381fbd4f8166319/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md", "raw_url": "https://github.com/rust-lang/rust/raw/2e9139197e908435673c62a14381fbd4f8166319/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md?ref=2e9139197e908435673c62a14381fbd4f8166319", "patch": "@@ -1,83 +0,0 @@\n-# `loop_break_value`\n-\n-The tracking issue for this feature is: [#37339]\n-\n-[#37339]: https://github.com/rust-lang/rust/issues/37339\n-\n-Documentation to be appended to section G of the book.\n-\n-------------------------\n-\n-### Loops as expressions\n-\n-Like most things in Rust, loops are expressions, and have a value; normally `()` unless the loop\n-never exits.\n-A `loop` can instead evaluate to a useful value via *break with value*:\n-\n-```rust\n-#![feature(loop_break_value)]\n-\n-// Find the first square number over 1000:\n-let mut n = 1;\n-let square = loop {\n-    if n * n > 1000 {\n-        break n * n;\n-    }\n-    n += 1;\n-};\n-```\n-\n-The evaluation type may be specified externally:\n-\n-```rust\n-#![feature(loop_break_value)]\n-\n-// Declare that value returned is unsigned 64-bit:\n-let n: u64 = loop {\n-    break 1;\n-};\n-```\n-\n-It is an error if types do not agree, either between a \"break\" value and an external requirement,\n-or between multiple \"break\" values:\n-\n-```no_compile\n-#![feature(loop_break_value)]\n-\n-loop {\n-    if true {\n-        break 1u32;\n-    } else {\n-        break 0u8;  // error: types do not agree\n-    }\n-};\n-\n-let n: i32 = loop {\n-    break 0u32; // error: type does not agree with external requirement\n-};\n-```\n-\n-#### Break: label, value\n-\n-Four forms of `break` are available, where EXPR is some expression which evaluates to a value:\n-\n-1.  `break;`\n-2.  `break 'label;`\n-3.  `break EXPR;`\n-4.  `break 'label EXPR;`\n-\n-When no value is given, the value `()` is assumed, thus `break;` is equivalent to `break ();`.\n-\n-Using a label allows returning a value from an inner loop:\n-\n-```rust\n-#![feature(loop_break_value)]\n-\n-let result = 'outer: loop {\n-    for n in 1..10 {\n-        if n > 4 {\n-            break 'outer n;\n-        }\n-    }\n-};\n-```"}, {"sha": "2b4b5cc73337b7306dc5d6a9d3c3bda7ce9fd7a9", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -30,7 +30,6 @@\n #![feature(core_intrinsics)]\n #![feature(i128_type)]\n #![feature(libc)]\n-#![feature(loop_break_value)]\n #![feature(never_type)]\n #![feature(nonzero)]\n #![feature(quote)]\n@@ -45,6 +44,7 @@\n #![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![cfg_attr(stage0, feature(rustc_private))]\n #![cfg_attr(stage0, feature(staged_api))]\n+#![cfg_attr(stage0, feature(loop_break_value))]\n \n #![recursion_limit=\"128\"]\n "}, {"sha": "7ecd7c5412e03920a8297674fa07f8c596b4988f", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -23,7 +23,6 @@\n #![deny(warnings)]\n \n #![feature(box_syntax)]\n-#![feature(loop_break_value)]\n #![feature(libc)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n@@ -32,6 +31,7 @@\n #![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![cfg_attr(stage0, feature(rustc_private))]\n #![cfg_attr(stage0, feature(staged_api))]\n+#![cfg_attr(stage0, feature(loop_break_value))]\n \n extern crate arena;\n extern crate getopts;"}, {"sha": "6f2c73b892567f343f174113bc6ee49b29d7029a", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -76,14 +76,14 @@ This API is completely unstable and subject to change.\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(conservative_impl_trait)]\n-#![feature(loop_break_value)]\n #![feature(never_type)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n \n #![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![cfg_attr(stage0, feature(rustc_private))]\n #![cfg_attr(stage0, feature(staged_api))]\n+#![cfg_attr(stage0, feature(loop_break_value))]\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}, {"sha": "e1b7d4681ad160c38c613af52e931c48b0a5ff49", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -297,9 +297,6 @@ declare_features! (\n \n     (active, use_extern_macros, \"1.15.0\", Some(35896)),\n \n-    // Allows `break {expr}` with a value inside `loop`s.\n-    (active, loop_break_value, \"1.14.0\", Some(37339)),\n-\n     // Allows #[target_feature(...)]\n     (active, target_feature, \"1.15.0\", None),\n \n@@ -423,6 +420,8 @@ declare_features! (\n     (accepted, pub_restricted, \"1.18.0\", Some(32409)),\n     // The #![windows_subsystem] attribute\n     (accepted, windows_subsystem, \"1.18.0\", Some(37499)),\n+    // Allows `break {expr}` with a value inside `loop`s.\n+    (accepted, loop_break_value, \"1.19.0\", Some(37339)),\n );\n // If you change this, please modify src/doc/unstable-book as well. You must\n // move that documentation into the relevant place in the other docs, and\n@@ -1301,10 +1300,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     }\n                 }\n             }\n-            ast::ExprKind::Break(_, Some(_)) => {\n-                gate_feature_post!(&self, loop_break_value, e.span,\n-                                   \"`break` with a value is experimental\");\n-            }\n             ast::ExprKind::Lit(ref lit) => {\n                 if let ast::LitKind::Int(_, ref ty) = lit.node {\n                     match *ty {"}, {"sha": "1632c40d59fdf0fbc67c599d045ff1ee5d40d7ab", "filename": "src/test/compile-fail/feature-gate-loop-break-value.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2e9139197e908435673c62a14381fbd4f8166319/src%2Ftest%2Fcompile-fail%2Ffeature-gate-loop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9139197e908435673c62a14381fbd4f8166319/src%2Ftest%2Fcompile-fail%2Ffeature-gate-loop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-loop-break-value.rs?ref=2e9139197e908435673c62a14381fbd4f8166319", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    loop {\n-        break 123; //~ ERROR `break` with a value is experimental\n-    }\n-}"}, {"sha": "938f7fba2a0324320b3616e4b68e8acc66ec5ce9", "filename": "src/test/compile-fail/loop-break-value.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Fcompile-fail%2Floop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Fcompile-fail%2Floop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Floop-break-value.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(loop_break_value)]\n #![feature(never_type)]\n \n fn main() {"}, {"sha": "723a98bcdfa0d85a894e7aea8d20739afdc0aff0", "filename": "src/test/run-pass/diverging-fallback-control-flow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -15,7 +15,6 @@\n // like to revisit these and potentially change them. --nmatsakis\n \n #![feature(never_type)]\n-#![feature(loop_break_value)]\n \n trait BadDefault {\n     fn default() -> Self;"}, {"sha": "1d5c83bc20d9554c3244eaa3d7513d1982d7f255", "filename": "src/test/run-pass/loop-break-value.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Frun-pass%2Floop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Frun-pass%2Floop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Floop-break-value.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(loop_break_value)]\n #![feature(never_type)]\n \n #[allow(unused)]"}, {"sha": "b52d540fd75119dc5d24c87f7ca06f9888f5a4ab", "filename": "src/test/ui/loop-break-value-no-repeat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Fui%2Floop-break-value-no-repeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Fui%2Floop-break-value-no-repeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floop-break-value-no-repeat.rs?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(loop_break_value)]\n #![allow(unused_variables)]\n \n use std::ptr;"}, {"sha": "c154ea6f8c2d68e76a7ff04e24ad6b2a5b2b5017", "filename": "src/test/ui/loop-break-value-no-repeat.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38d5d5039c0d46f4021a176c00501c7c27379fb/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr?ref=e38d5d5039c0d46f4021a176c00501c7c27379fb", "patch": "@@ -1,7 +1,7 @@\n error[E0571]: `break` with value from a `for` loop\n-  --> $DIR/loop-break-value-no-repeat.rs:23:9\n+  --> $DIR/loop-break-value-no-repeat.rs:22:9\n    |\n-23 |         break 22\n+22 |         break 22\n    |         ^^^^^^^^ can only break with a value inside `loop`\n \n error: aborting due to previous error"}]}