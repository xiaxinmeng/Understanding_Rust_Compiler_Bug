{"sha": "bfe5e9c108bff11eff00643b1d19b6665e43283e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZTVlOWMxMDhiZmYxMWVmZjAwNjQzYjFkMTliNjY2NWU0MzI4M2U=", "commit": {"author": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2019-05-05T18:55:11Z"}, "committer": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2019-05-05T18:55:11Z"}, "message": "Fix condition typo", "tree": {"sha": "4eac2e4f85f79ea2334bc7ae96941fc6c68dbdba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eac2e4f85f79ea2334bc7ae96941fc6c68dbdba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfe5e9c108bff11eff00643b1d19b6665e43283e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfe5e9c108bff11eff00643b1d19b6665e43283e", "html_url": "https://github.com/rust-lang/rust/commit/bfe5e9c108bff11eff00643b1d19b6665e43283e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfe5e9c108bff11eff00643b1d19b6665e43283e/comments", "author": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c94e2b104debd9eb67b9b199846c0686af71b73", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c94e2b104debd9eb67b9b199846c0686af71b73", "html_url": "https://github.com/rust-lang/rust/commit/8c94e2b104debd9eb67b9b199846c0686af71b73"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "23f6a69b8d187a716dd92728f3cc9dd59dbcaf25", "filename": "src/test/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfe5e9c108bff11eff00643b1d19b6665e43283e/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfe5e9c108bff11eff00643b1d19b6665e43283e/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=bfe5e9c108bff11eff00643b1d19b6665e43283e", "patch": "@@ -810,7 +810,7 @@ impl ConfigCodeBlock {\n \n     fn get_block_config(&self) -> Config {\n         let mut config = Config::default();\n-        if self.config_value.is_some() && self.config_value.is_some() {\n+        if self.config_name.is_some() && self.config_value.is_some() {\n             config.override_value(\n                 self.config_name.as_ref().unwrap(),\n                 self.config_value.as_ref().unwrap(),"}]}