{"sha": "949da529d7a0b348376f67e77676a8722ad21899", "node_id": "C_kwDOAAsO6NoAKDk0OWRhNTI5ZDdhMGIzNDgzNzZmNjdlNzc2NzZhODcyMmFkMjE4OTk", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-08-01T04:29:32Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-08-13T01:41:38Z"}, "message": "Add GitHub Action to test master rustfmt formatting vs a feature branch\n\nThis new action is intended to help us maintainers determine when feature\nbranches cause breaking formatting changes by running rustfmt (master)\nand the feature branch on various rust repositories.\n\nOver time I expect the list of checked projects to increase.\n\nWith this action in place we can more easily test that a new feature or\nbug fix doesn't introduce breaking changes. Although this action needs to\nbe manually triggered right now, we might consider adding it to our CI\nruns in the future.", "tree": {"sha": "693b1ff41a15f1cfff909366456688a36e1f0f48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/693b1ff41a15f1cfff909366456688a36e1f0f48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/949da529d7a0b348376f67e77676a8722ad21899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/949da529d7a0b348376f67e77676a8722ad21899", "html_url": "https://github.com/rust-lang/rust/commit/949da529d7a0b348376f67e77676a8722ad21899", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/949da529d7a0b348376f67e77676a8722ad21899/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea017d7f84e218c4a8048d2ecd9d63bbda014209", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea017d7f84e218c4a8048d2ecd9d63bbda014209", "html_url": "https://github.com/rust-lang/rust/commit/ea017d7f84e218c4a8048d2ecd9d63bbda014209"}], "stats": {"total": 232, "additions": 232, "deletions": 0}, "files": [{"sha": "8bfb5834519cd67f17890fc80280093970c20f5e", "filename": ".github/workflows/check_diff.yml", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/949da529d7a0b348376f67e77676a8722ad21899/.github%2Fworkflows%2Fcheck_diff.yml", "raw_url": "https://github.com/rust-lang/rust/raw/949da529d7a0b348376f67e77676a8722ad21899/.github%2Fworkflows%2Fcheck_diff.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fcheck_diff.yml?ref=949da529d7a0b348376f67e77676a8722ad21899", "patch": "@@ -0,0 +1,33 @@\n+name: Diff Check\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      clone_url:\n+        description: 'Git url of a rustfmt fork to compare against the latest master rustfmt'\n+        required: true\n+      branch_name:\n+        description: 'Name of the feature branch on the forked repo'\n+        required: true\n+      commit_hash:\n+        description: 'Optional commit hash from the feature branch'\n+        required: false\n+      rustfmt_configs:\n+        description: 'Optional comma separated list of rustfmt config options to pass when running the feature branch'\n+        required: false\n+\n+jobs:\n+  diff_check:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: checkout\n+      uses: actions/checkout@v3\n+\n+    - name: install rustup\n+      run: |\n+        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh\n+        sh rustup-init.sh -y --default-toolchain none\n+        rustup target add x86_64-unknown-linux-gnu\n+\n+    - name: check diff\n+      run: bash ${GITHUB_WORKSPACE}/ci/check_diff.sh ${{ github.event.inputs.clone_url }} ${{ github.event.inputs.branch_name }} ${{ github.event.inputs.commit_hash }} ${{ github.event.inputs.rustfmt_configs }}"}, {"sha": "062c2dd8673abcfb3a9f37721ae56fbfb617f482", "filename": "ci/check_diff.sh", "status": "added", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/rust-lang/rust/blob/949da529d7a0b348376f67e77676a8722ad21899/ci%2Fcheck_diff.sh", "raw_url": "https://github.com/rust-lang/rust/raw/949da529d7a0b348376f67e77676a8722ad21899/ci%2Fcheck_diff.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fcheck_diff.sh?ref=949da529d7a0b348376f67e77676a8722ad21899", "patch": "@@ -0,0 +1,199 @@\n+#!/bin/bash\n+\n+function print_usage() {\n+    echo \"usage check_diff REMOTE_REPO FEATURE_BRANCH [COMMIT_HASH] [OPTIONAL_RUSTFMT_CONFIGS]\"\n+}\n+\n+if [ $# -le 1 ]; then\n+    print_usage\n+    exit 1\n+fi\n+\n+REMOTE_REPO=$1\n+FEATURE_BRANCH=$2\n+OPTIONAL_COMMIT_HASH=$3\n+OPTIONAL_RUSTFMT_CONFIGS=$4\n+\n+# OUTPUT array used to collect all the status of running diffs on various repos\n+STATUSES=()\n+\n+# Clone a git repository and cd into it.\n+#\n+# Parameters:\n+# $1: git clone url\n+# $2: directory where the repo should be cloned\n+function clone_repo() {\n+    GIT_TERMINAL_PROMPT=0 git clone --quiet $1 --depth 1 $2 && cd $2\n+}\n+\n+# Initialize Git submoduels for the repo.\n+#\n+# Parameters\n+# $1: list of directories to initialize\n+function init_submodules() {\n+    git submodule update --init $1\n+}\n+\n+# Run rusfmt with the --check flag to see if a diff is produced.\n+#\n+# Parameters:\n+# $1: Path to a rustfmt binary\n+# $2: Output file path for the diff\n+# $3: Any additional configuration options to pass to rustfmt\n+#\n+# Globlas:\n+# $OPTIONAL_RUSTFMT_CONFIGS: Optional configs passed to the script from $4\n+function create_diff() {\n+    local config;\n+    if [ -z \"$3\" ]; then\n+        config=\"--config=error_on_line_overflow=false,error_on_unformatted=false\"\n+    else\n+        config=\"--config=error_on_line_overflow=false,error_on_unformatted=false,$OPTIONAL_RUSTFMT_CONFIGS\"\n+    fi\n+\n+    for i in `find . | grep \"\\.rs$\"`\n+    do\n+        $1 --unstable-features --skip-children --check --color=always $config $i >> $2 2>/dev/null\n+    done\n+}\n+\n+# Run the master rustfmt binary and the feature branch binary in the current directory and compare the diffs\n+#\n+# Parameters\n+# $1: Name of the repository (used for logging)\n+#\n+# Globlas:\n+# $RUSFMT_BIN: Path to the rustfmt master binary. Created when running `compile_rustfmt`\n+# $FEATURE_BIN: Path to the rustfmt feature binary. Created when running `compile_rustfmt`\n+# $OPTIONAL_RUSTFMT_CONFIGS: Optional configs passed to the script from $4\n+function check_diff() {\n+    echo \"running rustfmt (master) on $1\"\n+    create_diff $RUSFMT_BIN rustfmt_diff.txt\n+\n+    echo \"running rustfmt (feature) on $1\"\n+    create_diff $FEATURE_BIN feature_diff.txt $OPTIONAL_RUSTFMT_CONFIGS\n+\n+    echo \"checking diff\"\n+    local diff;\n+    # we don't add color to the diff since we added color when running rustfmt --check.\n+    # tail -n + 6 removes the git diff header info\n+    # cut -c 2- removes the leading diff characters(\"+\",\"-\",\" \") from running git diff.\n+    # Again, the diff output we care about was already added when we ran rustfmt --check\n+    diff=$(\n+        git --no-pager diff --color=never \\\n+        --unified=0 --no-index rustfmt_diff.txt feature_diff.txt 2>&1 | tail -n +6 | cut -c 2-\n+    )\n+\n+    if [ -z \"$diff\" ]; then\n+        echo \"no diff detected between rustfmt and the feture branch\"\n+        return 0\n+    else\n+        echo \"$diff\"\n+        return 1\n+    fi\n+}\n+\n+# Compiles and produces two rustfmt binaries.\n+# One for the current master, and another for the feature branch\n+#\n+# Parameters:\n+# $1: Directory where rustfmt will be cloned\n+#\n+# Globlas:\n+# $REMOTE_REPO: Clone URL to the rustfmt fork that we want to test\n+# $FEATURE_BRANCH: Name of the feature branch\n+# $OPTIONAL_COMMIT_HASH: Optional commit hash that will be checked out if provided\n+function compile_rustfmt() {\n+    RUSTFMT_REPO=\"https://github.com/rust-lang/rustfmt.git\"\n+    clone_repo $RUSTFMT_REPO $1\n+    git remote add feature $REMOTE_REPO\n+    git fetch feature $FEATURE_BRANCH\n+\n+    cargo build --release --bin rustfmt && cp target/release/rustfmt $1/rustfmt\n+    if [ -z \"$OPTIONAL_COMMIT_HASH\" ]; then\n+        git switch $FEATURE_BRANCH\n+    else\n+        git switch $OPTIONAL_COMMIT_HASH --detach\n+    fi\n+    cargo build --release --bin rustfmt && cp target/release/rustfmt $1/feature_rustfmt\n+    RUSFMT_BIN=$1/rustfmt\n+    FEATURE_BIN=$1/feature_rustfmt\n+}\n+\n+# Check the diff for running rustfmt and the feature branch on all the .rs files in the repo.\n+#\n+# Parameters\n+# $1: Clone URL for the repo\n+# $2: Name of the repo (mostly used for logging)\n+# $3: Path to any submodules that should be initialized\n+function check_repo() {\n+    WORKDIR=$(pwd)\n+    REPO_URL=$1\n+    REPO_NAME=$2\n+    SUBMODULES=$3\n+\n+    local tmp_dir;\n+    tmp_dir=$(mktemp -d -t $REPO_NAME-XXXXXXXX)\n+    clone_repo $REPO_URL $tmp_dir\n+\n+    if [ ! -z \"$SUBMODULES\" ]; then\n+        init_submodules $SUBMODULES\n+    fi\n+\n+    check_diff $REPO_NAME\n+    # append the status of running `check_diff` to the STATUSES array\n+    STATUSES+=($?)\n+\n+    echo \"removing tmp_dir $tmp_dir\"\n+    rm -rf $tmp_dir\n+    cd $WORKDIR\n+}\n+\n+function main() {\n+    tmp_dir=$(mktemp -d -t rustfmt-XXXXXXXX)\n+    echo Created tmp_dir $tmp_dir\n+\n+    compile_rustfmt $tmp_dir\n+\n+    # run checks\n+    check_repo \"https://github.com/rust-lang/rust.git\" rust-lang-rust\n+    check_repo \"https://github.com/rust-lang/cargo.git\" cargo\n+    check_repo \"https://github.com/rust-lang/miri.git\" miri\n+    check_repo \"https://github.com/rust-lang/rust-analyzer.git\" rust-analyzer\n+    check_repo \"https://github.com/bitflags/bitflags.git\" bitflags\n+    check_repo \"https://github.com/rust-lang/log.git\" log\n+    check_repo \"https://github.com/rust-lang/mdBook.git\" mdBook\n+    check_repo \"https://github.com/rust-lang/packed_simd.git\" packed_simd\n+    check_repo \"https://github.com/rust-lang/rust-semverver.git\" check_repo\n+    check_repo \"https://github.com/Stebalien/tempfile.git\" tempfile\n+    check_repo \"https://github.com/rust-lang/futures-rs.git\" futures-rs\n+    check_repo \"https://github.com/dtolnay/anyhow.git\" anyhow\n+    check_repo \"https://github.com/dtolnay/thiserror.git\" thiserror\n+    check_repo \"https://github.com/dtolnay/syn.git\" syn\n+    check_repo \"https://github.com/serde-rs/serde.git\" serde\n+    check_repo \"https://github.com/rust-lang/rustlings.git\" rustlings\n+    check_repo \"https://github.com/rust-lang/rustup.git\" rustup\n+    check_repo \"https://github.com/SergioBenitez/Rocket.git\" Rocket\n+    check_repo \"https://github.com/rustls/rustls.git\" rustls\n+    check_repo \"https://github.com/rust-lang/rust-bindgen.git\" rust-bindgen\n+    check_repo \"https://github.com/hyperium/hyper.git\" hyper\n+    check_repo \"https://github.com/actix/actix.git\" actix\n+    check_repo \"https://github.com/denoland/deno.git\" denoland_deno\n+\n+    # cleanup temp dir\n+    echo removing tmp_dir $tmp_dir\n+    rm -rf $tmp_dir\n+\n+    # figure out the exit code\n+    for status in ${STATUSES[@]}\n+    do\n+        if [ $status -eq 1 ]; then\n+            echo \"formatting diff found \ud83d\udc94\"\n+            return 1\n+        fi\n+    done\n+\n+    echo \"no diff found \ud83d\ude0a\"\n+}\n+\n+main"}]}