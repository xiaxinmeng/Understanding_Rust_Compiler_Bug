{"sha": "1cf74802ab111085a2137a2188892ef5d8641b0b", "node_id": "C_kwDOAAsO6NoAKDFjZjc0ODAyYWIxMTEwODVhMjEzN2EyMTg4ODkyZWY1ZDg2NDFiMGI", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:14:02Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:14:02Z"}, "message": "Improve docs", "tree": {"sha": "d406e865719944917e726e27ba77c7abecb5b316", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d406e865719944917e726e27ba77c7abecb5b316"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cf74802ab111085a2137a2188892ef5d8641b0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cf74802ab111085a2137a2188892ef5d8641b0b", "html_url": "https://github.com/rust-lang/rust/commit/1cf74802ab111085a2137a2188892ef5d8641b0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cf74802ab111085a2137a2188892ef5d8641b0b/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed498b6eff1b627507b763f714f9dae8279f3c7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed498b6eff1b627507b763f714f9dae8279f3c7f", "html_url": "https://github.com/rust-lang/rust/commit/ed498b6eff1b627507b763f714f9dae8279f3c7f"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "2c71e8e76326d7c632bb2e7c29ed34799030ba8d", "filename": "lib/line-index/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1cf74802ab111085a2137a2188892ef5d8641b0b/lib%2Fline-index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cf74802ab111085a2137a2188892ef5d8641b0b/lib%2Fline-index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fline-index%2Fsrc%2Flib.rs?ref=1cf74802ab111085a2137a2188892ef5d8641b0b", "patch": "@@ -143,14 +143,15 @@ impl LineIndex {\n     ///\n     /// # Panics\n     ///\n-    /// If the offset is invalid.\n+    /// If the offset is invalid. See [`Self::try_line_col`].\n     pub fn line_col(&self, offset: TextSize) -> LineCol {\n         self.try_line_col(offset).expect(\"invalid offset\")\n     }\n \n-    /// Transforms the `TextSize` into a `LineCol`, or returns `None` if the `offset` was invalid,\n-    /// e.g. if it extends past the end of the text or points to the middle of a multi-byte\n-    /// character.\n+    /// Transforms the `TextSize` into a `LineCol`.\n+    ///\n+    /// Returns `None` if the `offset` was invalid, e.g. if it extends past the end of the text or\n+    /// points to the middle of a multi-byte character.\n     pub fn try_line_col(&self, offset: TextSize) -> Option<LineCol> {\n         if offset > self.size {\n             return None;"}]}