{"sha": "909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwOWNiYmVkYTgxZjY0ZmU5ZDkyZTJkNGZlNTMyNWNjOWE0YTMyN2E=", "commit": {"author": {"name": "Johannes Oertel", "email": "johannes.oertel@uni-due.de", "date": "2015-05-26T21:46:55Z"}, "committer": {"name": "Johannes Oertel", "email": "johannes.oertel@uni-due.de", "date": "2015-05-26T21:51:13Z"}, "message": "Enable colored test output when capturing output of tests\n\nThe output of individual tests can be captured now so it's safe to use\ncolorized output even when running tests in parallel. Closes #782.", "tree": {"sha": "a0874069b6f34e0804ac944d22df8e8f4892c6d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0874069b6f34e0804ac944d22df8e8f4892c6d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a", "html_url": "https://github.com/rust-lang/rust/commit/909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a/comments", "author": {"login": "jooert", "id": 1774713, "node_id": "MDQ6VXNlcjE3NzQ3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1774713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jooert", "html_url": "https://github.com/jooert", "followers_url": "https://api.github.com/users/jooert/followers", "following_url": "https://api.github.com/users/jooert/following{/other_user}", "gists_url": "https://api.github.com/users/jooert/gists{/gist_id}", "starred_url": "https://api.github.com/users/jooert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jooert/subscriptions", "organizations_url": "https://api.github.com/users/jooert/orgs", "repos_url": "https://api.github.com/users/jooert/repos", "events_url": "https://api.github.com/users/jooert/events{/privacy}", "received_events_url": "https://api.github.com/users/jooert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jooert", "id": 1774713, "node_id": "MDQ6VXNlcjE3NzQ3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1774713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jooert", "html_url": "https://github.com/jooert", "followers_url": "https://api.github.com/users/jooert/followers", "following_url": "https://api.github.com/users/jooert/following{/other_user}", "gists_url": "https://api.github.com/users/jooert/gists{/gist_id}", "starred_url": "https://api.github.com/users/jooert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jooert/subscriptions", "organizations_url": "https://api.github.com/users/jooert/orgs", "repos_url": "https://api.github.com/users/jooert/repos", "events_url": "https://api.github.com/users/jooert/events{/privacy}", "received_events_url": "https://api.github.com/users/jooert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3543099d60d2bc68491ffd9691d4ee5d7f9d082", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3543099d60d2bc68491ffd9691d4ee5d7f9d082", "html_url": "https://github.com/rust-lang/rust/commit/d3543099d60d2bc68491ffd9691d4ee5d7f9d082"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "da86e727c6874bb028e9de02c705462fbf88a708", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=909cbbeda81f64fe9d92e2d4fe5325cc9a4a327a", "patch": "@@ -740,7 +740,7 @@ fn should_sort_failures_before_printing_them() {\n \n fn use_color(opts: &TestOpts) -> bool {\n     match opts.color {\n-        AutoColor => get_concurrency() == 1 && stdout_isatty(),\n+        AutoColor => !opts.nocapture && stdout_isatty(),\n         AlwaysColor => true,\n         NeverColor => false,\n     }"}]}