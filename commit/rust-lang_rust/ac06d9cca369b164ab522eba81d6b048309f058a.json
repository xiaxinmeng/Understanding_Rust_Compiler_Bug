{"sha": "ac06d9cca369b164ab522eba81d6b048309f058a", "node_id": "C_kwDOAAsO6NoAKGFjMDZkOWNjYTM2OWIxNjRhYjUyMmViYTgxZDZiMDQ4MzA5ZjA1OGE", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-23T20:24:35Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-23T21:27:44Z"}, "message": "diagnostics: avoid syntactically invalid suggestion in if conditionals\n\nFixes #101065", "tree": {"sha": "8812eb18887189726e9451e228f51e9f5f0328dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8812eb18887189726e9451e228f51e9f5f0328dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac06d9cca369b164ab522eba81d6b048309f058a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac06d9cca369b164ab522eba81d6b048309f058a", "html_url": "https://github.com/rust-lang/rust/commit/ac06d9cca369b164ab522eba81d6b048309f058a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac06d9cca369b164ab522eba81d6b048309f058a/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a14677239bbd9a3892d165ee24513c1a05820e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a14677239bbd9a3892d165ee24513c1a05820e4", "html_url": "https://github.com/rust-lang/rust/commit/4a14677239bbd9a3892d165ee24513c1a05820e4"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "2c07c333a6f98a8dea0b5fcb15d940e2037482fd", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ac06d9cca369b164ab522eba81d6b048309f058a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac06d9cca369b164ab522eba81d6b048309f058a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=ac06d9cca369b164ab522eba81d6b048309f058a", "patch": "@@ -417,6 +417,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     hir::def::CtorKind::Const => unreachable!(),\n                 };\n \n+                // Suggest constructor as deep into the block tree as possible.\n+                // This fixes https://github.com/rust-lang/rust/issues/101065,\n+                // and also just helps make the most minimal suggestions.\n+                let mut expr = expr;\n+                while let hir::ExprKind::Block(block, _) = &expr.kind\n+                    && let Some(expr_) = &block.expr\n+                {\n+                    expr = expr_\n+                }\n+\n                 vec![\n                     (expr.span.shrink_to_lo(), format!(\"{prefix}{variant}{open}\")),\n                     (expr.span.shrink_to_hi(), close.to_owned()),"}, {"sha": "88c716cc86ce8977f7b40ecdd6dccbabcbb25887", "filename": "src/test/ui/suggestions/issue-101065.fixed", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ac06d9cca369b164ab522eba81d6b048309f058a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ac06d9cca369b164ab522eba81d6b048309f058a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.fixed?ref=ac06d9cca369b164ab522eba81d6b048309f058a", "patch": "@@ -0,0 +1,14 @@\n+// check-fail\n+// run-rustfix\n+\n+enum FakeResult<T> {\n+    Ok(T)\n+}\n+\n+fn main() {\n+    let _x = if true {\n+        FakeResult::Ok(FakeResult::Ok(()))\n+    } else {\n+        FakeResult::Ok(FakeResult::Ok(())) //~ERROR E0308\n+    };\n+}"}, {"sha": "2715f1027082fd82b368c1ada9ebd11f2ee85047", "filename": "src/test/ui/suggestions/issue-101065.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ac06d9cca369b164ab522eba81d6b048309f058a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac06d9cca369b164ab522eba81d6b048309f058a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.rs?ref=ac06d9cca369b164ab522eba81d6b048309f058a", "patch": "@@ -0,0 +1,14 @@\n+// check-fail\n+// run-rustfix\n+\n+enum FakeResult<T> {\n+    Ok(T)\n+}\n+\n+fn main() {\n+    let _x = if true {\n+        FakeResult::Ok(FakeResult::Ok(()))\n+    } else {\n+        FakeResult::Ok(()) //~ERROR E0308\n+    };\n+}"}, {"sha": "6f7ecd24ca4287a24a63eae9a6292ddf2537326a", "filename": "src/test/ui/suggestions/issue-101065.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ac06d9cca369b164ab522eba81d6b048309f058a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac06d9cca369b164ab522eba81d6b048309f058a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101065.stderr?ref=ac06d9cca369b164ab522eba81d6b048309f058a", "patch": "@@ -0,0 +1,23 @@\n+error[E0308]: `if` and `else` have incompatible types\n+  --> $DIR/issue-101065.rs:12:9\n+   |\n+LL |       let _x = if true {\n+   |  ______________-\n+LL | |         FakeResult::Ok(FakeResult::Ok(()))\n+   | |         ---------------------------------- expected because of this\n+LL | |     } else {\n+LL | |         FakeResult::Ok(())\n+   | |         ^^^^^^^^^^^^^^^^^^ expected enum `FakeResult`, found `()`\n+LL | |     };\n+   | |_____- `if` and `else` have incompatible types\n+   |\n+   = note: expected enum `FakeResult<FakeResult<()>>`\n+              found enum `FakeResult<()>`\n+help: try wrapping the expression in `FakeResult::Ok`\n+   |\n+LL |         FakeResult::Ok(FakeResult::Ok(()))\n+   |         +++++++++++++++                  +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}