{"sha": "63a074791e587fa2cbb9d1b2bfdd08e08a001d9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzYTA3NDc5MWU1ODdmYTJjYmI5ZDFiMmJmZGQwOGUwOGEwMDFkOWY=", "commit": {"author": {"name": "A.J. Gardner", "email": "aaron.j.gardner@gmail.com", "date": "2017-04-07T14:46:34Z"}, "committer": {"name": "A.J. Gardner", "email": "aaron.j.gardner@gmail.com", "date": "2017-04-13T05:49:13Z"}, "message": "Make simple_global_asm even simpler\n\nWindows builder croaked. This change tries to fix that by actually\ncalling the global_asm-defined function so the symbol doesn't get\noptimized away, if that is in fact what was happening.\n\nAdditionally, we provide an empty main() for non-x86 arches.", "tree": {"sha": "10963a5692ce2e2175439032e042860add73cc3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10963a5692ce2e2175439032e042860add73cc3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f", "html_url": "https://github.com/rust-lang/rust/commit/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f/comments", "author": {"login": "mrhota", "id": 403641, "node_id": "MDQ6VXNlcjQwMzY0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/403641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrhota", "html_url": "https://github.com/mrhota", "followers_url": "https://api.github.com/users/mrhota/followers", "following_url": "https://api.github.com/users/mrhota/following{/other_user}", "gists_url": "https://api.github.com/users/mrhota/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrhota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrhota/subscriptions", "organizations_url": "https://api.github.com/users/mrhota/orgs", "repos_url": "https://api.github.com/users/mrhota/repos", "events_url": "https://api.github.com/users/mrhota/events{/privacy}", "received_events_url": "https://api.github.com/users/mrhota/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mrhota", "id": 403641, "node_id": "MDQ6VXNlcjQwMzY0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/403641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrhota", "html_url": "https://github.com/mrhota", "followers_url": "https://api.github.com/users/mrhota/followers", "following_url": "https://api.github.com/users/mrhota/following{/other_user}", "gists_url": "https://api.github.com/users/mrhota/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrhota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrhota/subscriptions", "organizations_url": "https://api.github.com/users/mrhota/orgs", "repos_url": "https://api.github.com/users/mrhota/repos", "events_url": "https://api.github.com/users/mrhota/events{/privacy}", "received_events_url": "https://api.github.com/users/mrhota/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24a89a015e93afb473c267dbddc5c856d62a639c", "url": "https://api.github.com/repos/rust-lang/rust/commits/24a89a015e93afb473c267dbddc5c856d62a639c", "html_url": "https://github.com/rust-lang/rust/commit/24a89a015e93afb473c267dbddc5c856d62a639c"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "82e03a9fddc35a94564c2fae13cc815cfdd78541", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=63a074791e587fa2cbb9d1b2bfdd08e08a001d9f", "patch": "@@ -881,6 +881,7 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a, 'tcx>> for hir::Item {\n             hir::ItemFn(..)          |\n             hir::ItemMod(..)         |\n             hir::ItemForeignMod(..)  |\n+            hir::ItemGlobalAsm(..)   |\n             hir::ItemTy(..)          |\n             hir::ItemEnum(..)        |\n             hir::ItemStruct(..)      |\n@@ -925,6 +926,7 @@ impl_stable_hash_for!(enum hir::Item_ {\n     ItemFn(fn_decl, unsafety, constness, abi, generics, body_id),\n     ItemMod(module),\n     ItemForeignMod(foreign_mod),\n+    ItemGlobalAsm(global_asm),\n     ItemTy(ty, generics),\n     ItemEnum(enum_def, generics),\n     ItemStruct(variant_data, generics),\n@@ -1083,6 +1085,7 @@ impl_stable_hash_for!(enum hir::def::Def {\n     Upvar(def_id, index, expr_id),\n     Label(node_id),\n     Macro(def_id, macro_kind),\n+    GlobalAsm(def_id),\n     Err\n });\n "}, {"sha": "6cd35f1335ed79ef423a7a25c95efcc284a47de1", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=63a074791e587fa2cbb9d1b2bfdd08e08a001d9f", "patch": "@@ -298,6 +298,7 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a, 'tcx>> for EntryKind<'tcx> {\n             EntryKind::ForeignImmStatic |\n             EntryKind::ForeignMutStatic |\n             EntryKind::ForeignMod       |\n+            EntryKind::GlobalAsm        |\n             EntryKind::Field |\n             EntryKind::Type => {\n                 // Nothing else to hash here."}, {"sha": "ac2cacf3db21d0d441eac6d236da7769bf227d9f", "filename": "src/test/run-pass/simple_global_asm.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f/src%2Ftest%2Frun-pass%2Fsimple_global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63a074791e587fa2cbb9d1b2bfdd08e08a001d9f/src%2Ftest%2Frun-pass%2Fsimple_global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimple_global_asm.rs?ref=63a074791e587fa2cbb9d1b2bfdd08e08a001d9f", "patch": "@@ -9,19 +9,21 @@\n // except according to those terms.\n \n #![feature(global_asm)]\n+#![feature(naked_functions)]\n \n #[cfg(any(target_arch = \"x86_64\", target_arch = \"x86\"))]\n global_asm!(r#\"\n     .global foo\n foo:\n-    jmp baz\n+    ret\n \"#);\n \n extern {\n     fn foo();\n }\n \n-#[no_mangle]\n-pub extern fn baz() {}\n+#[cfg(any(target_arch = \"x86_64\", target_arch = \"x86\"))]\n+fn main() { unsafe { foo(); } }\n \n+#[cfg(not(any(target_arch = \"x86_64\", target_arch = \"x86\")))]\n fn main() {}"}]}