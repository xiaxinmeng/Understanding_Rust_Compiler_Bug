{"sha": "4422cb73b66b33dec167900ae52f11dc491d7f72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MjJjYjczYjY2YjMzZGVjMTY3OTAwYWU1MmYxMWRjNDkxZDdmNzI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-06T14:59:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-06T14:59:02Z"}, "message": "Rollup merge of #71937 - mzohreva:mz/ui-tests-ignore-sgx, r=nikomatsakis\n\nIgnore SGX on a few ui tests\n\ncc @jethrogb", "tree": {"sha": "32a3581fad21353fa4d0df0d08059af86bada612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32a3581fad21353fa4d0df0d08059af86bada612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4422cb73b66b33dec167900ae52f11dc491d7f72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJestC2CRBK7hj4Ov3rIwAAdHIIADu9vJCHDkuGNDkzx875D66M\nPJXYl/nOEUXpir/bSUy1cnX2CmHTgpMglLcNAGx68i31/5z5/Llw/BURfzsp4taw\nP9ZXPtCHSjt3pONbn4ViYpHwDrHh8Ry91ZNrklEbSSuOe+jFOE4TJgep9RsQIxNp\nVOFSdMdlhLWa6uWneNcXx0hK8PBrLSgf9kxmXb0vT1k6DZUJRB6n8gkYpppsbxZy\n7Hl+dnT+f5/YoOr++rS3ykw08jF8r104DF1P1HFxE6b/cCTC3SKPTUpC3IV2jia5\ngza/YyR4Y3BCY3JEzkJyrMfC0uEAS9BxI5J7wnppLSvbb8rshqc8TSTtSsenHik=\n=iNFx\n-----END PGP SIGNATURE-----\n", "payload": "tree 32a3581fad21353fa4d0df0d08059af86bada612\nparent c366b27bfcf05c92d55d5aeaecbc0b0c5f26b638\nparent 7db74beaecc2cb51c76b08311cf68df1c92a5ae5\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588777142 +0200\ncommitter GitHub <noreply@github.com> 1588777142 +0200\n\nRollup merge of #71937 - mzohreva:mz/ui-tests-ignore-sgx, r=nikomatsakis\n\nIgnore SGX on a few ui tests\n\ncc @jethrogb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4422cb73b66b33dec167900ae52f11dc491d7f72", "html_url": "https://github.com/rust-lang/rust/commit/4422cb73b66b33dec167900ae52f11dc491d7f72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4422cb73b66b33dec167900ae52f11dc491d7f72/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c366b27bfcf05c92d55d5aeaecbc0b0c5f26b638", "url": "https://api.github.com/repos/rust-lang/rust/commits/c366b27bfcf05c92d55d5aeaecbc0b0c5f26b638", "html_url": "https://github.com/rust-lang/rust/commit/c366b27bfcf05c92d55d5aeaecbc0b0c5f26b638"}, {"sha": "7db74beaecc2cb51c76b08311cf68df1c92a5ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7db74beaecc2cb51c76b08311cf68df1c92a5ae5", "html_url": "https://github.com/rust-lang/rust/commit/7db74beaecc2cb51c76b08311cf68df1c92a5ae5"}], "stats": {"total": 132, "additions": 71, "deletions": 61}, "files": [{"sha": "f5243077384ac7acc44bfdbd1d0adc8207ec6b7f", "filename": "src/test/ui/eprint-on-tls-drop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Feprint-on-tls-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Feprint-on-tls-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feprint-on-tls-drop.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -1,5 +1,6 @@\n // run-pass\n // ignore-emscripten no processes\n+// ignore-sgx no processes\n \n use std::cell::RefCell;\n use std::env;"}, {"sha": "17b16a62a74e7093ec15cc9bdf4c4b6437d67e34", "filename": "src/test/ui/issues/issue-15487.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fissues%2Fissue-15487.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fissues%2Fissue-15487.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15487.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -2,6 +2,7 @@\n #![allow(unused_attributes)]\n // ignore-windows\n // ignore-wasm32-bare no libs to link\n+// ignore-sgx no libs to link\n \n #![feature(link_args)]\n "}, {"sha": "6c62010f1762b431ce21cfff9714051e2022f552", "filename": "src/test/ui/issues/issue-17546.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fissues%2Fissue-17546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fissues%2Fissue-17546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17546.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -1,3 +1,5 @@\n+// ignore-sgx std::os::fortanix_sgx::usercalls::raw::Result changes compiler suggestions\n+\n use foo::MyEnum::Result;\n use foo::NoResult; // Through a re-export\n "}, {"sha": "1236bbcdbf6eed6a5bd531225ab4fc9d03b00eba", "filename": "src/test/ui/issues/issue-17546.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -1,5 +1,5 @@\n error[E0573]: expected type, found variant `NoResult`\n-  --> $DIR/issue-17546.rs:12:17\n+  --> $DIR/issue-17546.rs:14:17\n    |\n LL |     fn new() -> NoResult<MyEnum, String> {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -19,7 +19,7 @@ LL |     fn new() -> Result<MyEnum, String> {\n    |                 ^^^^^^\n \n error[E0573]: expected type, found variant `Result`\n-  --> $DIR/issue-17546.rs:22:17\n+  --> $DIR/issue-17546.rs:24:17\n    |\n LL |     fn new() -> Result<foo::MyEnum, String> {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n@@ -37,7 +37,7 @@ LL |     use std::result::Result;\n      and 1 other candidate\n \n error[E0573]: expected type, found variant `Result`\n-  --> $DIR/issue-17546.rs:28:13\n+  --> $DIR/issue-17546.rs:30:13\n    |\n LL | fn new() -> Result<foo::MyEnum, String> {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n@@ -55,7 +55,7 @@ LL | use std::result::Result;\n      and 1 other candidate\n \n error[E0573]: expected type, found variant `NoResult`\n-  --> $DIR/issue-17546.rs:33:15\n+  --> $DIR/issue-17546.rs:35:15\n    |\n LL | fn newer() -> NoResult<foo::MyEnum, String> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "d7efa4aac6516a4eac23d1b74590b02878596994", "filename": "src/test/ui/lint/use_suggestion_json.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -1,5 +1,6 @@\n // ignore-cloudabi\n // ignore-windows\n+// ignore-sgx std::os::fortanix_sgx::usercalls::alloc::Iter changes compiler suggestions\n // compile-flags: --error-format pretty-json --json=diagnostic-rendered-ansi\n \n // The output for humans should just highlight the whole span without showing"}, {"sha": "1d0b2a554f19a2cdb7472ef3e28b322c816ee8ff", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -72,10 +72,10 @@ mod foo {\n   \"spans\": [\n     {\n       \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-      \"byte_start\": 471,\n-      \"byte_end\": 475,\n-      \"line_start\": 12,\n-      \"line_end\": 12,\n+      \"byte_start\": 560,\n+      \"byte_end\": 564,\n+      \"line_start\": 13,\n+      \"line_end\": 13,\n       \"column_start\": 12,\n       \"column_end\": 16,\n       \"is_primary\": true,\n@@ -100,10 +100,10 @@ mod foo {\n       \"spans\": [\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -123,10 +123,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -146,10 +146,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -169,10 +169,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -192,10 +192,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -215,10 +215,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -238,10 +238,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -261,10 +261,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -284,10 +284,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -307,10 +307,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -330,10 +330,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -353,10 +353,10 @@ mod foo {\n         },\n         {\n           \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 448,\n-          \"byte_end\": 448,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n+          \"byte_start\": 537,\n+          \"byte_end\": 537,\n+          \"line_start\": 12,\n+          \"line_end\": 12,\n           \"column_start\": 1,\n           \"column_end\": 1,\n           \"is_primary\": true,\n@@ -380,7 +380,7 @@ mod foo {\n     }\n   ],\n   \"rendered\": \"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0412]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find type `Iter` in this scope\\u001b[0m\n-\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m$DIR/use_suggestion_json.rs:12:12\\u001b[0m\n+\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m$DIR/use_suggestion_json.rs:13:12\\u001b[0m\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n \\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    let x: Iter;\\u001b[0m\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in this scope\\u001b[0m"}, {"sha": "97f6265e3089bdc2cff33f05e3f62b0379aef174", "filename": "src/test/ui/proc-macro/crt-static.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fproc-macro%2Fcrt-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fproc-macro%2Fcrt-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fcrt-static.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -3,6 +3,7 @@\n // override -Ctarget-feature=-crt-static from compiletest\n // compile-flags: -Ctarget-feature=\n // ignore-wasm32\n+// ignore-sgx no support for proc-macro crate type\n // build-pass\n #![crate_type = \"proc-macro\"]\n "}, {"sha": "048aaf65fbfa87d4395e1b6b973e121cea5f2c65", "filename": "src/test/ui/resolve/issue-16058.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -1,3 +1,5 @@\n+// ignore-sgx std::os::fortanix_sgx::usercalls::raw::Result changes compiler suggestions\n+\n pub struct GslResult {\n     pub val: f64,\n     pub err: f64"}, {"sha": "913009ce51c1a40e614c6df57a955ff181356e7f", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -1,5 +1,5 @@\n error[E0574]: expected struct, variant or union type, found enum `Result`\n-  --> $DIR/issue-16058.rs:8:9\n+  --> $DIR/issue-16058.rs:10:9\n    |\n LL |         Result {\n    |         ^^^^^^ not a struct, variant or union type"}, {"sha": "978732a9ec374ef90fa760a86014bbcb4b77f718", "filename": "src/test/ui/test-panic-abort-nocapture.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -7,6 +7,7 @@\n \n // ignore-wasm no panic or subprocess support\n // ignore-emscripten no panic or subprocess support\n+// ignore-sgx no subprocess support\n \n #![cfg(test)]\n "}, {"sha": "3388813d5a0bd0674eb9d8dec895a4315442638e", "filename": "src/test/ui/test-panic-abort-nocapture.run.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stderr?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -1,9 +1,9 @@\n thread 'main' panicked at 'assertion failed: `(left == right)`\n   left: `2`,\n- right: `4`', $DIR/test-panic-abort-nocapture.rs:31:5\n+ right: `4`', $DIR/test-panic-abort-nocapture.rs:32:5\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n thread 'main' panicked at 'assertion failed: `(left == right)`\n   left: `2`,\n- right: `4`', $DIR/test-panic-abort-nocapture.rs:25:5\n+ right: `4`', $DIR/test-panic-abort-nocapture.rs:26:5\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n testing321"}, {"sha": "21e7dc393f512e859da561c85b3297b8ee9553db", "filename": "src/test/ui/test-panic-abort.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort.rs?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -7,6 +7,7 @@\n \n // ignore-wasm no panic or subprocess support\n // ignore-emscripten no panic or subprocess support\n+// ignore-sgx no subprocess support\n \n #![cfg(test)]\n "}, {"sha": "33ddd519030fff241adf5292ce1a346cdc1b54c0", "filename": "src/test/ui/test-panic-abort.run.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4422cb73b66b33dec167900ae52f11dc491d7f72/src%2Ftest%2Fui%2Ftest-panic-abort.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort.run.stdout?ref=4422cb73b66b33dec167900ae52f11dc491d7f72", "patch": "@@ -18,7 +18,7 @@ testing123\n testing321\n thread 'main' panicked at 'assertion failed: `(left == right)`\n   left: `2`,\n- right: `5`', $DIR/test-panic-abort.rs:32:5\n+ right: `5`', $DIR/test-panic-abort.rs:33:5\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n \n "}]}