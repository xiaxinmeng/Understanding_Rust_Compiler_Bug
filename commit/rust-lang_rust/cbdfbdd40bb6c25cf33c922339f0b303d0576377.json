{"sha": "cbdfbdd40bb6c25cf33c922339f0b303d0576377", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZGZiZGQ0MGJiNmMyNWNmMzNjOTIyMzM5ZjBiMzAzZDA1NzYzNzc=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-06T09:30:08Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-20T09:58:46Z"}, "message": "Implement the query in cstore_impl.", "tree": {"sha": "df5524cd2173a62a90d1a10a9d9b25ccfbf407e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df5524cd2173a62a90d1a10a9d9b25ccfbf407e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbdfbdd40bb6c25cf33c922339f0b303d0576377", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbdfbdd40bb6c25cf33c922339f0b303d0576377", "html_url": "https://github.com/rust-lang/rust/commit/cbdfbdd40bb6c25cf33c922339f0b303d0576377", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbdfbdd40bb6c25cf33c922339f0b303d0576377/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9ee25108bdeaa60e47c71db2f8db3e974d16fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed9ee25108bdeaa60e47c71db2f8db3e974d16fa", "html_url": "https://github.com/rust-lang/rust/commit/ed9ee25108bdeaa60e47c71db2f8db3e974d16fa"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "5e1161221798c0200f61ad846be74d0c71f40425", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cbdfbdd40bb6c25cf33c922339f0b303d0576377/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbdfbdd40bb6c25cf33c922339f0b303d0576377/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=cbdfbdd40bb6c25cf33c922339f0b303d0576377", "patch": "@@ -4,7 +4,6 @@ use crate::native_libs;\n use crate::rmeta::encoder;\n \n use rustc_ast as ast;\n-use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_data_structures::stable_map::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_hir as hir;\n@@ -242,6 +241,7 @@ pub fn provide(providers: &mut Providers) {\n     // therefore no actual inputs, they're just reading tables calculated in\n     // resolve! Does this work? Unsure! That's what the issue is about\n     *providers = Providers {\n+        allocator_kind: |tcx, ()| CStore::from_tcx(tcx).allocator_kind(),\n         is_dllimport_foreign_item: |tcx, id| match tcx.native_library_kind(id) {\n             Some(\n                 NativeLibKind::Dylib { .. } | NativeLibKind::RawDylib | NativeLibKind::Unspecified,\n@@ -535,8 +535,4 @@ impl CrateStore for CStore {\n     fn encode_metadata(&self, tcx: TyCtxt<'_>) -> EncodedMetadata {\n         encoder::encode_metadata(tcx)\n     }\n-\n-    fn allocator_kind(&self) -> Option<AllocatorKind> {\n-        self.allocator_kind()\n-    }\n }"}, {"sha": "1f40b227d9153fc6ac0b7b4d951f247142f9cdc7", "filename": "compiler/rustc_middle/src/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbdfbdd40bb6c25cf33c922339f0b303d0576377/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbdfbdd40bb6c25cf33c922339f0b303d0576377/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs?ref=cbdfbdd40bb6c25cf33c922339f0b303d0576377", "patch": "@@ -5,7 +5,6 @@\n use crate::ty::TyCtxt;\n \n use rustc_ast as ast;\n-use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::{self, MetadataRef};\n use rustc_hir::def::DefKind;\n@@ -215,7 +214,6 @@ pub trait CrateStore {\n \n     // utility functions\n     fn encode_metadata(&self, tcx: TyCtxt<'_>) -> EncodedMetadata;\n-    fn allocator_kind(&self) -> Option<AllocatorKind>;\n }\n \n pub type CrateStoreDyn = dyn CrateStore + sync::Sync;"}, {"sha": "0c3a01bcb73f473bc3a20c7f7e4495db42734146", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cbdfbdd40bb6c25cf33c922339f0b303d0576377/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbdfbdd40bb6c25cf33c922339f0b303d0576377/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=cbdfbdd40bb6c25cf33c922339f0b303d0576377", "patch": "@@ -2834,5 +2834,4 @@ pub fn provide(providers: &mut ty::query::Providers) {\n         // We want to check if the panic handler was defined in this crate\n         tcx.lang_items().panic_impl().map_or(false, |did| did.is_local())\n     };\n-    providers.allocator_kind = |tcx, ()| tcx.cstore.allocator_kind();\n }"}]}