{"sha": "5cc634fa6018b60c7bac5ada2038ca341a91f410", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYzYzNGZhNjAxOGI2MGM3YmFjNWFkYTIwMzhjYTM0MWE5MWY0MTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-24T13:26:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-24T13:26:54Z"}, "message": "Merge #2383\n\n2383: Add alloc to the crate graph r=matklad a=marcogroppo\n\n`alloc` has been added to the crate graph.\r\n\r\nCompletions work, but they are available even when the user has **not** declared an `extern crate alloc`. Is this the correct approach?\r\n\r\nFixes #2376.\n\nCo-authored-by: Marco Groppo <marco.groppo@gmail.com>", "tree": {"sha": "23eab70222d83610b5a9c90b6767524255d644fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23eab70222d83610b5a9c90b6767524255d644fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cc634fa6018b60c7bac5ada2038ca341a91f410", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2oUeCRBK7hj4Ov3rIwAAdHIIAKATCyKckFVv+Ev5SOvuuO7i\nRJWHm5W0qSidod+CVdiwo4B0bVfsTaXlygyjLgoi8kc4hP3L9QlSN02psJbFZgh3\nWLSwTT3whnQnpsW+T8lT+Wmz87Kh5CfjI8Yeh4JkLo9++mGrvAUWAhP+keswfbty\nL3kuRyBxQK1xTvFJOxoqWetXcunvk8E5OrC6+M/SeI6y/1TkRkBooeypBn9vMPex\nrroe+BeeOA/n2E04wqV10nVLl/zyUBiAPYIoHDPuO6PJfIe+ZmXZUzAiRpZB/+xB\n86EQwN7SQsaBkupOLaf+anykDN4wD67qIbTx5RMVJB6svapSl0F3aYx9Hnv0jAI=\n=b970\n-----END PGP SIGNATURE-----\n", "payload": "tree 23eab70222d83610b5a9c90b6767524255d644fc\nparent 450b820b7069f6ed5306ef6896263e2620314b73\nparent e3f8e7d13d01fcdd1bb0f31887d1f72fc44c4d4e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574602014 +0000\ncommitter GitHub <noreply@github.com> 1574602014 +0000\n\nMerge #2383\n\n2383: Add alloc to the crate graph r=matklad a=marcogroppo\n\n`alloc` has been added to the crate graph.\r\n\r\nCompletions work, but they are available even when the user has **not** declared an `extern crate alloc`. Is this the correct approach?\r\n\r\nFixes #2376.\n\nCo-authored-by: Marco Groppo <marco.groppo@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc634fa6018b60c7bac5ada2038ca341a91f410", "html_url": "https://github.com/rust-lang/rust/commit/5cc634fa6018b60c7bac5ada2038ca341a91f410", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cc634fa6018b60c7bac5ada2038ca341a91f410/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "450b820b7069f6ed5306ef6896263e2620314b73", "url": "https://api.github.com/repos/rust-lang/rust/commits/450b820b7069f6ed5306ef6896263e2620314b73", "html_url": "https://github.com/rust-lang/rust/commit/450b820b7069f6ed5306ef6896263e2620314b73"}, {"sha": "e3f8e7d13d01fcdd1bb0f31887d1f72fc44c4d4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f8e7d13d01fcdd1bb0f31887d1f72fc44c4d4e", "html_url": "https://github.com/rust-lang/rust/commit/e3f8e7d13d01fcdd1bb0f31887d1f72fc44c4d4e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "638ca2f8b9c8ba7aff14365720e91bf48267ccaf", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cc634fa6018b60c7bac5ada2038ca341a91f410/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc634fa6018b60c7bac5ada2038ca341a91f410/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=5cc634fa6018b60c7bac5ada2038ca341a91f410", "patch": "@@ -209,6 +209,7 @@ impl ProjectWorkspace {\n                 }\n \n                 let libcore = sysroot.core().and_then(|it| sysroot_crates.get(&it).copied());\n+                let liballoc = sysroot.alloc().and_then(|it| sysroot_crates.get(&it).copied());\n                 let libstd = sysroot.std().and_then(|it| sysroot_crates.get(&it).copied());\n \n                 let mut pkg_to_lib_crate = FxHashMap::default();\n@@ -261,6 +262,11 @@ impl ProjectWorkspace {\n                                 log::error!(\"cyclic dependency on core for {}\", pkg.name(&cargo))\n                             }\n                         }\n+                        if let Some(alloc) = liballoc {\n+                            if let Err(_) = crate_graph.add_dep(from, \"alloc\".into(), alloc) {\n+                                log::error!(\"cyclic dependency on alloc for {}\", pkg.name(&cargo))\n+                            }\n+                        }\n                         if let Some(std) = libstd {\n                             if let Err(_) = crate_graph.add_dep(from, \"std\".into(), std) {\n                                 log::error!(\"cyclic dependency on std for {}\", pkg.name(&cargo))"}, {"sha": "bec9439d73111546da89b6369b02fec18e1661bd", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cc634fa6018b60c7bac5ada2038ca341a91f410/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc634fa6018b60c7bac5ada2038ca341a91f410/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=5cc634fa6018b60c7bac5ada2038ca341a91f410", "patch": "@@ -31,6 +31,10 @@ impl Sysroot {\n         self.by_name(\"core\")\n     }\n \n+    pub fn alloc(&self) -> Option<SysrootCrate> {\n+        self.by_name(\"alloc\")\n+    }\n+\n     pub fn std(&self) -> Option<SysrootCrate> {\n         self.by_name(\"std\")\n     }"}]}