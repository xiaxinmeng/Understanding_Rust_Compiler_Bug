{"sha": "bd98a79eea30a0363beefddbb971b89e2b389660", "node_id": "C_kwDOAAsO6NoAKGJkOThhNzllZWEzMGEwMzYzYmVlZmRkYmI5NzFiODllMmIzODk2NjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-05T23:11:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-05T23:11:47Z"}, "message": "Rollup merge of #91367 - FabianWolff:issue-91334-ice, r=nagisa\n\nFix ICE in `check_must_not_suspend_ty()`\n\nFixes #91334. I have also used `TyS::tuple_fields()` (instead of the `SubstsRef` directly) to get the tuple fields, because that's what [the documentation](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/enum.TyKind.html#variant.Tuple) says, although it doesn't seem to make a difference in practice (this is not what fixed the ICE).", "tree": {"sha": "07744e4c2ddc81744fe3cb1e77d0ffda27f84781", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07744e4c2ddc81744fe3cb1e77d0ffda27f84781"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd98a79eea30a0363beefddbb971b89e2b389660", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrUc0CRBK7hj4Ov3rIwAA22MIAED9jhaabjs51k/B+JzLpzff\ndmKQhEAJ6zq+bhQ2H3AlDUJeGQ8ZFr63XllT4dwDwgNHPBttxReHMfLPCVLsxuLS\n/pNtldUjsL1e2J2q1LiBv1cTAip4wvNUuHibKpNI36WtgDTTumsLuHPQxntJjTAD\nWjgf3+eCx704KuyMEwHWoneYSW6V6I6Q6ANfvV85RorbwC8suwogznpFzHzFkMJv\nLaTYeJUY5JtKn4II9Lu2GRw/clNSooAMxaWWK5LSg1dlWoW38R9Qbhr103sFTEuu\njhhdIr8pqsN1IGUeosuuA/aJbIg0j0684sbY36azQbGiC90npi+Ej8t/YlN48a0=\n=2xWm\n-----END PGP SIGNATURE-----\n", "payload": "tree 07744e4c2ddc81744fe3cb1e77d0ffda27f84781\nparent e2116acae59654bfab2a9729a024f3e2fd6d4b02\nparent a8daff2724789ca8be9f2c36bb19be553180bd59\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638745907 +0100\ncommitter GitHub <noreply@github.com> 1638745907 +0100\n\nRollup merge of #91367 - FabianWolff:issue-91334-ice, r=nagisa\n\nFix ICE in `check_must_not_suspend_ty()`\n\nFixes #91334. I have also used `TyS::tuple_fields()` (instead of the `SubstsRef` directly) to get the tuple fields, because that's what [the documentation](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/enum.TyKind.html#variant.Tuple) says, although it doesn't seem to make a difference in practice (this is not what fixed the ICE).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd98a79eea30a0363beefddbb971b89e2b389660", "html_url": "https://github.com/rust-lang/rust/commit/bd98a79eea30a0363beefddbb971b89e2b389660", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd98a79eea30a0363beefddbb971b89e2b389660/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2116acae59654bfab2a9729a024f3e2fd6d4b02", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2116acae59654bfab2a9729a024f3e2fd6d4b02", "html_url": "https://github.com/rust-lang/rust/commit/e2116acae59654bfab2a9729a024f3e2fd6d4b02"}, {"sha": "a8daff2724789ca8be9f2c36bb19be553180bd59", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8daff2724789ca8be9f2c36bb19be553180bd59", "html_url": "https://github.com/rust-lang/rust/commit/a8daff2724789ca8be9f2c36bb19be553180bd59"}], "stats": {"total": 84, "additions": 75, "deletions": 9}, "files": [{"sha": "37e601fa40442e9bec20b50650bbfaccd6e74609", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bd98a79eea30a0363beefddbb971b89e2b389660/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd98a79eea30a0363beefddbb971b89e2b389660/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=bd98a79eea30a0363beefddbb971b89e2b389660", "patch": "@@ -536,22 +536,28 @@ pub fn check_must_not_suspend_ty<'tcx>(\n             }\n             has_emitted\n         }\n-        ty::Tuple(ref tys) => {\n+        ty::Tuple(_) => {\n             let mut has_emitted = false;\n-            let spans = if let Some(hir::ExprKind::Tup(comps)) = data.expr.map(|e| &e.kind) {\n-                debug_assert_eq!(comps.len(), tys.len());\n-                comps.iter().map(|e| e.span).collect()\n-            } else {\n-                vec![]\n+            let comps = match data.expr.map(|e| &e.kind) {\n+                Some(hir::ExprKind::Tup(comps)) => {\n+                    debug_assert_eq!(comps.len(), ty.tuple_fields().count());\n+                    Some(comps)\n+                }\n+                _ => None,\n             };\n-            for (i, ty) in tys.iter().map(|k| k.expect_ty()).enumerate() {\n+            for (i, ty) in ty.tuple_fields().enumerate() {\n                 let descr_post = &format!(\" in tuple element {}\", i);\n-                let span = *spans.get(i).unwrap_or(&data.source_span);\n+                let span = comps.and_then(|c| c.get(i)).map(|e| e.span).unwrap_or(data.source_span);\n                 if check_must_not_suspend_ty(\n                     fcx,\n                     ty,\n                     hir_id,\n-                    SuspendCheckData { descr_post, source_span: span, ..data },\n+                    SuspendCheckData {\n+                        descr_post,\n+                        expr: comps.and_then(|comps| comps.get(i)),\n+                        source_span: span,\n+                        ..data\n+                    },\n                 ) {\n                     has_emitted = true;\n                 }"}, {"sha": "bf9a5a62620d96002aa360bebbd0f554b9962f69", "filename": "src/test/ui/typeck/issue-91334.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd98a79eea30a0363beefddbb971b89e2b389660/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd98a79eea30a0363beefddbb971b89e2b389660/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.rs?ref=bd98a79eea30a0363beefddbb971b89e2b389660", "patch": "@@ -0,0 +1,10 @@\n+// Regression test for the ICE described in issue #91334.\n+\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: expected one of\n+// error-pattern: mismatched closing delimiter\n+// error-pattern: mismatched types\n+\n+#![feature(generators)]\n+\n+fn f(){||yield(((){),"}, {"sha": "358cc771b7c458e986741377bad39637826e8b4a", "filename": "src/test/ui/typeck/issue-91334.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/bd98a79eea30a0363beefddbb971b89e2b389660/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd98a79eea30a0363beefddbb971b89e2b389660/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr?ref=bd98a79eea30a0363beefddbb971b89e2b389660", "patch": "@@ -0,0 +1,50 @@\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-91334.rs:10:23\n+   |\n+LL | fn f(){||yield(((){),\n+   |       -       -       ^\n+   |       |       |\n+   |       |       unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-91334.rs:10:23\n+   |\n+LL | fn f(){||yield(((){),\n+   |       -       -       ^\n+   |       |       |\n+   |       |       unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: expected one of `)`, `,`, `.`, `?`, or an operator, found `{`\n+  --> $DIR/issue-91334.rs:10:19\n+   |\n+LL | fn f(){||yield(((){),\n+   |                   ^\n+   |                   |\n+   |                   expected one of `)`, `,`, `.`, `?`, or an operator\n+   |                   help: missing `,`\n+\n+error: mismatched closing delimiter: `)`\n+  --> $DIR/issue-91334.rs:10:19\n+   |\n+LL | fn f(){||yield(((){),\n+   |                -  ^^ mismatched closing delimiter\n+   |                |  |\n+   |                |  unclosed delimiter\n+   |                closing delimiter possibly meant for this\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-91334.rs:10:8\n+   |\n+LL | fn f(){||yield(((){),\n+   |       -^^^^^^^^^^^^^^^ expected `()`, found generator\n+   |       |\n+   |       help: try adding a return type: `-> [generator@$DIR/issue-91334.rs:10:8: 10:23]`\n+   |\n+   = note: expected unit type `()`\n+              found generator `[generator@$DIR/issue-91334.rs:10:8: 10:23]`\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}