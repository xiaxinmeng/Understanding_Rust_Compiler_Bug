{"sha": "29ba19633651e4c51cddf3c2c089c1c36ed531c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YmExOTYzMzY1MWU0YzUxY2RkZjNjMmMwODljMWMzNmVkNTMxYzY=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-01-28T23:41:53Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-01-28T23:41:53Z"}, "message": "Adding a function to concatanate vectors with a separator", "tree": {"sha": "38ba6f8a2a372f8f17303daa829c9da97d53aeb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38ba6f8a2a372f8f17303daa829c9da97d53aeb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29ba19633651e4c51cddf3c2c089c1c36ed531c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29ba19633651e4c51cddf3c2c089c1c36ed531c6", "html_url": "https://github.com/rust-lang/rust/commit/29ba19633651e4c51cddf3c2c089c1c36ed531c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29ba19633651e4c51cddf3c2c089c1c36ed531c6/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b2c0a999fd9d0a92c82f2615a00cd13ced7a077", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b2c0a999fd9d0a92c82f2615a00cd13ced7a077", "html_url": "https://github.com/rust-lang/rust/commit/5b2c0a999fd9d0a92c82f2615a00cd13ced7a077"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "dd256af1d6f56ef664069e0e9e99134be4b0a7bf", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/29ba19633651e4c51cddf3c2c089c1c36ed531c6/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ba19633651e4c51cddf3c2c089c1c36ed531c6/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=29ba19633651e4c51cddf3c2c089c1c36ed531c6", "patch": "@@ -599,6 +599,21 @@ fn concat<T: copy>(v: [const [const T]]) -> [T] {\n     ret new;\n }\n \n+/*\n+Function: connect\n+\n+Concatenate a vector of vectors, placing a given separator between each\n+*/\n+fn connect<T: copy>(v: [const [const T]], sep: T) -> [T] {\n+    let new: [T] = [];\n+    let first = true;\n+    for inner: [T] in v {\n+        if first { first = false; } else { push(new, sep); }\n+        new += inner;\n+    }\n+    ret new;\n+}\n+\n /*\n Function: foldl\n \n@@ -1927,6 +1942,13 @@ mod tests {\n         assert concat([[1], [2,3]]) == [1, 2, 3];\n     }\n \n+    #[test]\n+    fn test_connect() {\n+        assert connect([], 0) == [];\n+        assert connect([[1], [2, 3]], 0) == [1, 0, 2, 3];\n+        assert connect([[1], [2], [3]], 0) == [1, 0, 2, 0, 3];\n+    }\n+\n     #[test]\n     fn test_windowed () {\n         assert [[1u,2u,3u],[2u,3u,4u],[3u,4u,5u],[4u,5u,6u]]"}]}