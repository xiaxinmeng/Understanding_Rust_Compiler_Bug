{"sha": "6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZjE2YzdhZDljMWI3MmM0ZjA0YmIwZDZjN2ZjMGZkYzJjYzAwY2I=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-04T19:54:18Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-04T19:54:18Z"}, "message": "Clean up", "tree": {"sha": "7082f2b1398f8481a5a583a8c499d9b931c5e590", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7082f2b1398f8481a5a583a8c499d9b931c5e590"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb", "html_url": "https://github.com/rust-lang/rust/commit/6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c23408751c43ea7e349d8cf27472e546214acef6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c23408751c43ea7e349d8cf27472e546214acef6", "html_url": "https://github.com/rust-lang/rust/commit/c23408751c43ea7e349d8cf27472e546214acef6"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "257503de83025cc95ee83299cd3819eaf130bc0d", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=6ff16c7ad9c1b72c4f04bb0d6c7fc0fdc2cc00cb", "patch": "@@ -231,48 +231,48 @@ impl TtTokenSource {\n     {\n         if let Some((m, is_joint_to_next)) = iter.current_punct3(p) {\n             if let Some((kind, text)) = match m {\n-                ('<', '<', '=') => Some((SHLEQ, \"<<=\".into())),\n-                ('>', '>', '=') => Some((SHREQ, \">>=\".into())),\n-                ('.', '.', '.') => Some((DOTDOTDOT, \"...\".into())),\n-                ('.', '.', '=') => Some((DOTDOTEQ, \"..=\".into())),\n+                ('<', '<', '=') => Some((SHLEQ, \"<<=\")),\n+                ('>', '>', '=') => Some((SHREQ, \">>=\")),\n+                ('.', '.', '.') => Some((DOTDOTDOT, \"...\")),\n+                ('.', '.', '=') => Some((DOTDOTEQ, \"..=\")),\n                 _ => None,\n             } {\n                 iter.next();\n                 iter.next();\n-                return Some(TtToken { kind, is_joint_to_next, text });\n+                return Some(TtToken { kind, is_joint_to_next, text: text.into() });\n             }\n         }\n \n         if let Some((m, is_joint_to_next)) = iter.current_punct2(p) {\n             if let Some((kind, text)) = match m {\n-                ('<', '<') => Some((SHL, \"<<\".into())),\n-                ('>', '>') => Some((SHR, \">>\".into())),\n-\n-                ('|', '|') => Some((PIPEPIPE, \"||\".into())),\n-                ('&', '&') => Some((AMPAMP, \"&&\".into())),\n-                ('%', '=') => Some((PERCENTEQ, \"%=\".into())),\n-                ('*', '=') => Some((STAREQ, \"*=\".into())),\n-                ('/', '=') => Some((SLASHEQ, \"/=\".into())),\n-                ('^', '=') => Some((CARETEQ, \"^=\".into())),\n-\n-                ('&', '=') => Some((AMPEQ, \"&=\".into())),\n-                ('|', '=') => Some((PIPEEQ, \"|=\".into())),\n-                ('-', '=') => Some((MINUSEQ, \"-=\".into())),\n-                ('+', '=') => Some((PLUSEQ, \"+=\".into())),\n-                ('>', '=') => Some((GTEQ, \">=\".into())),\n-                ('<', '=') => Some((LTEQ, \"<=\".into())),\n-\n-                ('-', '>') => Some((THIN_ARROW, \"->\".into())),\n-                ('!', '=') => Some((NEQ, \"!=\".into())),\n-                ('=', '>') => Some((FAT_ARROW, \"=>\".into())),\n-                ('=', '=') => Some((EQEQ, \"==\".into())),\n-                ('.', '.') => Some((DOTDOT, \"..\".into())),\n-                (':', ':') => Some((COLONCOLON, \"::\".into())),\n+                ('<', '<') => Some((SHL, \"<<\")),\n+                ('>', '>') => Some((SHR, \">>\")),\n+\n+                ('|', '|') => Some((PIPEPIPE, \"||\")),\n+                ('&', '&') => Some((AMPAMP, \"&&\")),\n+                ('%', '=') => Some((PERCENTEQ, \"%=\")),\n+                ('*', '=') => Some((STAREQ, \"*=\")),\n+                ('/', '=') => Some((SLASHEQ, \"/=\")),\n+                ('^', '=') => Some((CARETEQ, \"^=\")),\n+\n+                ('&', '=') => Some((AMPEQ, \"&=\")),\n+                ('|', '=') => Some((PIPEEQ, \"|=\")),\n+                ('-', '=') => Some((MINUSEQ, \"-=\")),\n+                ('+', '=') => Some((PLUSEQ, \"+=\")),\n+                ('>', '=') => Some((GTEQ, \">=\")),\n+                ('<', '=') => Some((LTEQ, \"<=\")),\n+\n+                ('-', '>') => Some((THIN_ARROW, \"->\")),\n+                ('!', '=') => Some((NEQ, \"!=\")),\n+                ('=', '>') => Some((FAT_ARROW, \"=>\")),\n+                ('=', '=') => Some((EQEQ, \"==\")),\n+                ('.', '.') => Some((DOTDOT, \"..\")),\n+                (':', ':') => Some((COLONCOLON, \"::\")),\n \n                 _ => None,\n             } {\n                 iter.next();\n-                return Some(TtToken { kind, is_joint_to_next, text });\n+                return Some(TtToken { kind, is_joint_to_next, text: text.into() });\n             }\n         }\n "}]}