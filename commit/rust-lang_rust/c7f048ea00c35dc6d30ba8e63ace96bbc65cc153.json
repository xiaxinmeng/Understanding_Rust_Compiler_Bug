{"sha": "c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "node_id": "C_kwDOAAsO6NoAKGM3ZjA0OGVhMDBjMzVkYzZkMzBiYThlNjNhY2U5NmJiYzY1Y2MxNTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-13T22:45:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-13T22:45:17Z"}, "message": "Rollup merge of #103000 - wesleywiser:suggest_libname, r=compiler-errors\n\nAdd suggestion to the \"missing native library\" error\n\nIf we fail to locate a native library that we are linking with, it could be the case the user entered a complete file name like `foo.lib` or `libfoo.a` when we expect them to simply provide `foo`.\n\nIn this situation, we now detect that case and suggest the user only provide the library name itself.", "tree": {"sha": "05d11b6549672b176fd0bafbc79b808ec50c7445", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05d11b6549672b176fd0bafbc79b808ec50c7445"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjSJT9CRBK7hj4Ov3rIwAAQR0IAG3V1nNPVGpftWwNwdIuMIpK\nsprB3h+HdlZknylhK+mq98nCCZW7p7/pvW9vbrSYTqMnXK1tZBOSsbRZqPow0qCN\nFVZKCTbgd058jAibUm9mnzB21kGuZW5WlLSbW8u4EnXyQJGGoeRlJyTIPpBvHGzP\ngwHyCN1VDKnZSGkXzrzRdvDAnq8DoPRqAV6Ao7KRR5W84+qVJGNslCRPBJWBEskq\nuYWgmx7AjpfOPqeE9/+I08d4xDKZts03QA79h1ICpmP3drvs+lTE7cZ+05ttMth7\n4sgbwPeEOenPSqunCwx6qFYPFDtPyXPvQs5K4PGhbnI5Lh1YqKQOEGfHqpUmLdo=\n=5dsQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 05d11b6549672b176fd0bafbc79b808ec50c7445\nparent 6b3ede3f7bc502eba7bbd202b4b9312d812adcd7\nparent 097b6d3bafb1d61bfe8fd3f5e9d9acfd9ee2c702\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1665701117 +0200\ncommitter GitHub <noreply@github.com> 1665701117 +0200\n\nRollup merge of #103000 - wesleywiser:suggest_libname, r=compiler-errors\n\nAdd suggestion to the \"missing native library\" error\n\nIf we fail to locate a native library that we are linking with, it could be the case the user entered a complete file name like `foo.lib` or `libfoo.a` when we expect them to simply provide `foo`.\n\nIn this situation, we now detect that case and suggest the user only provide the library name itself.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "html_url": "https://github.com/rust-lang/rust/commit/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b3ede3f7bc502eba7bbd202b4b9312d812adcd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b3ede3f7bc502eba7bbd202b4b9312d812adcd7", "html_url": "https://github.com/rust-lang/rust/commit/6b3ede3f7bc502eba7bbd202b4b9312d812adcd7"}, {"sha": "097b6d3bafb1d61bfe8fd3f5e9d9acfd9ee2c702", "url": "https://api.github.com/repos/rust-lang/rust/commits/097b6d3bafb1d61bfe8fd3f5e9d9acfd9ee2c702", "html_url": "https://github.com/rust-lang/rust/commit/097b6d3bafb1d61bfe8fd3f5e9d9acfd9ee2c702"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "08e553d9f15896b7e473e12c26eaef6f9b740976", "filename": "compiler/rustc_error_messages/locales/en-US/metadata.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmetadata.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmetadata.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmetadata.ftl?ref=c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "patch": "@@ -165,6 +165,8 @@ metadata_failed_write_error =\n metadata_missing_native_library =\n     could not find native static library `{$libname}`, perhaps an -L flag is missing?\n \n+metadata_only_provide_library_name = only provide the library name `{$suggested_name}`, not the full filename\n+\n metadata_failed_create_tempdir =\n     couldn't create a temp dir: {$err}\n "}, {"sha": "dbfa22aaff0749042360bee1a47661d307cb426b", "filename": "compiler/rustc_metadata/src/errors.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs?ref=c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "patch": "@@ -372,7 +372,41 @@ pub struct FailedWriteError {\n #[derive(Diagnostic)]\n #[diag(metadata::missing_native_library)]\n pub struct MissingNativeLibrary<'a> {\n-    pub libname: &'a str,\n+    libname: &'a str,\n+    #[subdiagnostic]\n+    suggest_name: Option<SuggestLibraryName<'a>>,\n+}\n+\n+impl<'a> MissingNativeLibrary<'a> {\n+    pub fn new(libname: &'a str, verbatim: bool) -> Self {\n+        // if it looks like the user has provided a complete filename rather just the bare lib name,\n+        // then provide a note that they might want to try trimming the name\n+        let suggested_name = if !verbatim {\n+            if let Some(libname) = libname.strip_prefix(\"lib\") && let Some(libname) = libname.strip_suffix(\".a\") {\n+                // this is a unix style filename so trim prefix & suffix\n+                Some(libname)\n+            } else if let Some(libname) = libname.strip_suffix(\".lib\") {\n+                // this is a Windows style filename so just trim the suffix\n+                Some(libname)\n+            } else {\n+                None\n+            }\n+        } else {\n+            None\n+        };\n+\n+        Self {\n+            libname,\n+            suggest_name: suggested_name\n+                .map(|suggested_name| SuggestLibraryName { suggested_name }),\n+        }\n+    }\n+}\n+\n+#[derive(Subdiagnostic)]\n+#[help(metadata::only_provide_library_name)]\n+pub struct SuggestLibraryName<'a> {\n+    suggested_name: &'a str,\n }\n \n #[derive(Diagnostic)]"}, {"sha": "676c67bad827f79b741532cd1ee2fec9114d069d", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "patch": "@@ -52,7 +52,7 @@ pub fn find_native_static_library(\n         }\n     }\n \n-    sess.emit_fatal(MissingNativeLibrary { libname: name });\n+    sess.emit_fatal(MissingNativeLibrary::new(name, verbatim.unwrap_or(false)));\n }\n \n fn find_bundled_library("}, {"sha": "abf988a7c1ed380e23957ec3bd31bd6b00cdfe87", "filename": "src/test/ui/native-library-link-flags/suggest-libname-only-1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-1.rs?ref=c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "patch": "@@ -0,0 +1,9 @@\n+// build-fail\n+// compile-flags: --crate-type rlib\n+// error-pattern: could not find native static library `libfoo.a`\n+// error-pattern: only provide the library name `foo`, not the full filename\n+\n+#[link(name = \"libfoo.a\", kind = \"static\")]\n+extern { }\n+\n+pub fn main() { }"}, {"sha": "64d0a9077ed1516e66002aaddc23dfb0ea0942aa", "filename": "src/test/ui/native-library-link-flags/suggest-libname-only-1.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-1.stderr?ref=c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "patch": "@@ -0,0 +1,6 @@\n+error: could not find native static library `libfoo.a`, perhaps an -L flag is missing?\n+   |\n+   = help: only provide the library name `foo`, not the full filename\n+\n+error: aborting due to previous error\n+"}, {"sha": "dfa70e56db73ce8a1145a7adfe7340ec24a1b9ab", "filename": "src/test/ui/native-library-link-flags/suggest-libname-only-2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-2.rs?ref=c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "patch": "@@ -0,0 +1,9 @@\n+// build-fail\n+// compile-flags: --crate-type rlib\n+// error-pattern: could not find native static library `bar.lib`\n+// error-pattern: only provide the library name `bar`, not the full filename\n+\n+#[link(name = \"bar.lib\", kind = \"static\")]\n+extern { }\n+\n+pub fn main() { }"}, {"sha": "e166af9ed8f0393f1955ec34b81850706a6c1d0e", "filename": "src/test/ui/native-library-link-flags/suggest-libname-only-2.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7f048ea00c35dc6d30ba8e63ace96bbc65cc153/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fsuggest-libname-only-2.stderr?ref=c7f048ea00c35dc6d30ba8e63ace96bbc65cc153", "patch": "@@ -0,0 +1,6 @@\n+error: could not find native static library `bar.lib`, perhaps an -L flag is missing?\n+   |\n+   = help: only provide the library name `bar`, not the full filename\n+\n+error: aborting due to previous error\n+"}]}