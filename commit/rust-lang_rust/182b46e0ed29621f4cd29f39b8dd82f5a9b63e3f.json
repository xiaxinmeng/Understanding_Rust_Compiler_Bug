{"sha": "182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MmI0NmUwZWQyOTYyMWY0Y2QyOWYzOWI4ZGQ4MmY1YTliNjNlM2Y=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-10T06:23:42Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-03-11T22:57:03Z"}, "message": "Simplify join_bounds()", "tree": {"sha": "e19b478ba265068fd70958b0ad9b833c4ee1a45e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e19b478ba265068fd70958b0ad9b833c4ee1a45e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f", "html_url": "https://github.com/rust-lang/rust/commit/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "html_url": "https://github.com/rust-lang/rust/commit/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc"}], "stats": {"total": 31, "additions": 11, "deletions": 20}, "files": [{"sha": "676095ff4ce4c75968ba6c4f942624df1d27dd31", "filename": "src/types.rs", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f", "patch": "@@ -18,8 +18,8 @@ use syntax::symbol::keywords;\n \n use codemap::SpanUtils;\n use config::{IndentStyle, TypeDensity};\n-use expr::{rewrite_assign_rhs, rewrite_pair, rewrite_tuple, rewrite_unary_prefix,\n-           PairParts, ToExpr};\n+use expr::{rewrite_assign_rhs, rewrite_pair, rewrite_tuple, rewrite_unary_prefix, PairParts,\n+           ToExpr};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, Separator};\n use macros::{rewrite_macro, MacroPosition};\n use overflow;\n@@ -485,17 +485,13 @@ fn rewrite_bounded_lifetime(\n     if bounds.len() == 0 {\n         Some(result)\n     } else {\n-        let appendix = bounds\n-            .iter()\n-            .map(|b| b.rewrite(context, shape))\n-            .collect::<Option<Vec<_>>>()?;\n         let colon = type_bound_colon(context);\n         let overhead = last_line_width(&result) + colon.len();\n         let result = format!(\n             \"{}{}{}\",\n             result,\n             colon,\n-            join_bounds(context, shape.sub_width(overhead)?, bounds, &appendix, true)?\n+            join_bounds(context, shape.sub_width(overhead)?, bounds, true)?\n         );\n         Some(result)\n     }\n@@ -529,20 +525,13 @@ pub struct TraitTyParamBounds<'a> {\n \n impl<'a> Rewrite for TraitTyParamBounds<'a> {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        let strs = self.inner\n-            .iter()\n-            .map(|b| b.rewrite(context, shape))\n-            .collect::<Option<Vec<_>>>()?;\n-        join_bounds(context, shape, self.inner, &strs, false)\n+        join_bounds(context, shape, self.inner, false)\n     }\n }\n \n impl Rewrite for ast::TyParamBounds {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        let strs = self.iter()\n-            .map(|b| b.rewrite(context, shape))\n-            .collect::<Option<Vec<_>>>()?;\n-        join_bounds(context, shape, self, &strs, true)\n+        join_bounds(context, shape, self, true)\n     }\n }\n \n@@ -779,7 +768,6 @@ fn join_bounds<T>(\n     context: &RewriteContext,\n     shape: Shape,\n     items: &[T],\n-    type_strs: &[String],\n     need_indent: bool,\n ) -> Option<String>\n where\n@@ -790,6 +778,10 @@ where\n         TypeDensity::Compressed => \"+\",\n         TypeDensity::Wide => \" + \",\n     };\n+    let type_strs = items\n+        .iter()\n+        .map(|item| item.rewrite(context, shape))\n+        .collect::<Option<Vec<_>>>()?;\n     let result = type_strs.join(joiner);\n     if items.len() == 1 || (!result.contains('\\n') && result.len() <= shape.width) {\n         return Some(result);\n@@ -805,7 +797,7 @@ where\n             .collect::<Option<Vec<_>>>()?;\n         (type_strs, nested_shape.indent)\n     } else {\n-        (type_strs.to_vec(), shape.indent)\n+        (type_strs, shape.indent)\n     };\n \n     let joiner = format!(\"{}+ \", offset.to_string_with_newline(context.config));"}, {"sha": "d1ee43f4e3f16158cf797a68ed104a718b532daa", "filename": "tests/target/trait.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f", "patch": "@@ -65,8 +65,7 @@ where\n {\n }\n \n-trait FooBar<T>:\n-    Tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\n+trait FooBar<T>: Tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\n where\n     J: Bar,\n {"}]}