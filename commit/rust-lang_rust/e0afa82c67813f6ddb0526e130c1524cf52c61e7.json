{"sha": "e0afa82c67813f6ddb0526e130c1524cf52c61e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYWZhODJjNjc4MTNmNmRkYjA1MjZlMTMwYzE1MjRjZjUyYzYxZTc=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-01-24T20:13:24Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-01-26T02:15:09Z"}, "message": "Remove every mention of \"onceness\".", "tree": {"sha": "06a1cdfb8ae753f35f9b2123d3c1e0d74c48b097", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06a1cdfb8ae753f35f9b2123d3c1e0d74c48b097"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0afa82c67813f6ddb0526e130c1524cf52c61e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0afa82c67813f6ddb0526e130c1524cf52c61e7", "html_url": "https://github.com/rust-lang/rust/commit/e0afa82c67813f6ddb0526e130c1524cf52c61e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0afa82c67813f6ddb0526e130c1524cf52c61e7/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a370aa2d98ea2f50153a3007734f8d6fb473e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/50a370aa2d98ea2f50153a3007734f8d6fb473e0", "html_url": "https://github.com/rust-lang/rust/commit/50a370aa2d98ea2f50153a3007734f8d6fb473e0"}], "stats": {"total": 72, "additions": 6, "deletions": 66}, "files": [{"sha": "cb64220424ff6fddabb79ae67f22b09fa359cb3c", "filename": "src/doc/reference.md", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -2489,10 +2489,6 @@ The currently implemented features of the reference compiler are:\n                        for now until the specification of identifiers is fully\n                        fleshed out.\n \n-* `once_fns` - Onceness guarantees a closure is only executed once. Defining a\n-               closure as `once` is unlikely to be supported going forward. So\n-               they are hidden behind this feature until they are to be removed.\n-\n * `plugin` - Usage of [compiler plugins][plugin] for custom lints or syntax extensions.\n              These depend on compiler internals and are subject to change.\n "}, {"sha": "04b3b55df8d2039acde5c21d97dffbb710257966", "filename": "src/librustc/middle/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fcombine.rs?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -52,7 +52,7 @@ use middle::ty_fold::{TypeFoldable};\n use util::ppaux::Repr;\n \n use std::rc::Rc;\n-use syntax::ast::{Onceness, Unsafety};\n+use syntax::ast::Unsafety;\n use syntax::ast;\n use syntax::abi;\n use syntax::codemap::Span;\n@@ -254,8 +254,6 @@ pub trait Combine<'tcx> : Sized {\n         }\n     }\n \n-    fn oncenesses(&self, a: Onceness, b: Onceness) -> cres<'tcx, Onceness>;\n-\n     fn projection_tys(&self,\n                       a: &ty::ProjectionTy<'tcx>,\n                       b: &ty::ProjectionTy<'tcx>)"}, {"sha": "f0bde22286488c3fb6272dac63018e0b4fb7c1e1", "filename": "src/librustc/middle/infer/equate.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -21,7 +21,7 @@ use middle::infer::{TypeTrace, Subtype};\n use middle::infer::type_variable::{EqTo};\n use util::ppaux::{Repr};\n \n-use syntax::ast::{Onceness, Unsafety};\n+use syntax::ast::Unsafety;\n \n pub struct Equate<'f, 'tcx: 'f> {\n     fields: CombineFields<'f, 'tcx>\n@@ -78,14 +78,6 @@ impl<'f, 'tcx> Combine<'tcx> for Equate<'f, 'tcx> {\n         }\n     }\n \n-    fn oncenesses(&self, a: Onceness, b: Onceness) -> cres<'tcx, Onceness> {\n-        if a != b {\n-            Err(ty::terr_onceness_mismatch(expected_found(self, a, b)))\n-        } else {\n-            Ok(a)\n-        }\n-    }\n-\n     fn builtin_bounds(&self,\n                       a: BuiltinBounds,\n                       b: BuiltinBounds)"}, {"sha": "ff0c2d92f45eeae58ec193540288669275f7055b", "filename": "src/librustc/middle/infer/glb.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fglb.rs?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -19,8 +19,7 @@ use super::{TypeTrace, Subtype};\n \n use middle::ty::{BuiltinBounds};\n use middle::ty::{self, Ty};\n-use syntax::ast::{Many, Once, MutImmutable, MutMutable};\n-use syntax::ast::{Onceness, Unsafety};\n+use syntax::ast::{MutImmutable, MutMutable, Unsafety};\n use util::ppaux::mt_to_string;\n use util::ppaux::Repr;\n \n@@ -87,13 +86,6 @@ impl<'f, 'tcx> Combine<'tcx> for Glb<'f, 'tcx> {\n         }\n     }\n \n-    fn oncenesses(&self, a: Onceness, b: Onceness) -> cres<'tcx, Onceness> {\n-        match (a, b) {\n-            (Many, _) | (_, Many) => Ok(Many),\n-            (Once, Once) => Ok(Once)\n-        }\n-    }\n-\n     fn builtin_bounds(&self,\n                       a: ty::BuiltinBounds,\n                       b: ty::BuiltinBounds)"}, {"sha": "204560e87ee3b2718943c488adc71b5d6221d3ac", "filename": "src/librustc/middle/infer/lub.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Flub.rs?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -19,9 +19,7 @@ use super::{TypeTrace, Subtype};\n \n use middle::ty::{BuiltinBounds};\n use middle::ty::{self, Ty};\n-use syntax::ast::{Many, Once};\n-use syntax::ast::{Onceness, Unsafety};\n-use syntax::ast::{MutMutable, MutImmutable};\n+use syntax::ast::{MutMutable, MutImmutable, Unsafety};\n use util::ppaux::mt_to_string;\n use util::ppaux::Repr;\n \n@@ -83,13 +81,6 @@ impl<'f, 'tcx> Combine<'tcx> for Lub<'f, 'tcx> {\n         }\n     }\n \n-    fn oncenesses(&self, a: Onceness, b: Onceness) -> cres<'tcx, Onceness> {\n-        match (a, b) {\n-            (Once, _) | (_, Once) => Ok(Once),\n-            (Many, Many) => Ok(Many)\n-        }\n-    }\n-\n     fn builtin_bounds(&self,\n                       a: ty::BuiltinBounds,\n                       b: ty::BuiltinBounds)"}, {"sha": "1e0d14544ff888c882b06034ca11692241423735", "filename": "src/librustc/middle/infer/sub.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -23,7 +23,7 @@ use middle::ty::{self, Ty};\n use middle::ty::TyVar;\n use util::ppaux::{Repr};\n \n-use syntax::ast::{Onceness, MutImmutable, MutMutable, Unsafety};\n+use syntax::ast::{MutImmutable, MutMutable, Unsafety};\n \n \n /// \"Greatest lower bound\" (common subtype)\n@@ -99,12 +99,6 @@ impl<'f, 'tcx> Combine<'tcx> for Sub<'f, 'tcx> {\n         })\n     }\n \n-    fn oncenesses(&self, a: Onceness, b: Onceness) -> cres<'tcx, Onceness> {\n-        self.lub().oncenesses(a, b).compare(b, || {\n-            ty::terr_onceness_mismatch(expected_found(self, a, b))\n-        })\n-    }\n-\n     fn builtin_bounds(&self, a: BuiltinBounds, b: BuiltinBounds)\n                       -> cres<'tcx, BuiltinBounds> {\n         // More bounds is a subtype of fewer bounds."}, {"sha": "f6bc9d098723b76a720109b284de88443d1d815b", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -81,8 +81,7 @@ use std::collections::{HashMap, HashSet};\n use syntax::abi;\n use syntax::ast::{CrateNum, DefId, Ident, ItemTrait, LOCAL_CRATE};\n use syntax::ast::{MutImmutable, MutMutable, Name, NamedField, NodeId};\n-use syntax::ast::{Onceness, StmtExpr, StmtSemi, StructField, UnnamedField};\n-use syntax::ast::{Visibility};\n+use syntax::ast::{StmtExpr, StmtSemi, StructField, UnnamedField, Visibility};\n use syntax::ast_util::{self, is_local, lit_is_str, local_def, PostExpansionMethod};\n use syntax::attr::{self, AttrMetaMethods};\n use syntax::codemap::Span;\n@@ -1535,7 +1534,6 @@ pub struct expected_found<T> {\n pub enum type_err<'tcx> {\n     terr_mismatch,\n     terr_unsafety_mismatch(expected_found<ast::Unsafety>),\n-    terr_onceness_mismatch(expected_found<Onceness>),\n     terr_abi_mismatch(expected_found<abi::Abi>),\n     terr_mutability,\n     terr_box_mutability,\n@@ -4737,11 +4735,6 @@ pub fn type_err_to_str<'tcx>(cx: &ctxt<'tcx>, err: &type_err<'tcx>) -> String {\n                     values.expected,\n                     values.found)\n         }\n-        terr_onceness_mismatch(values) => {\n-            format!(\"expected {} fn, found {} fn\",\n-                    values.expected,\n-                    values.found)\n-        }\n         terr_mutability => \"values differ in mutability\".to_string(),\n         terr_box_mutability => {\n             \"boxed values differ in mutability\".to_string()"}, {"sha": "4f6cd8ad356d70750266ec2e892c9439b051ba9e", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0afa82c67813f6ddb0526e130c1524cf52c61e7/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=e0afa82c67813f6ddb0526e130c1524cf52c61e7", "patch": "@@ -35,7 +35,6 @@ pub use self::MacStmtStyle::*;\n pub use self::MetaItem_::*;\n pub use self::Method_::*;\n pub use self::Mutability::*;\n-pub use self::Onceness::*;\n pub use self::Pat_::*;\n pub use self::PathListItem_::*;\n pub use self::PatWildKind::*;\n@@ -1222,21 +1221,6 @@ pub enum PrimTy {\n     TyChar\n }\n \n-#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy, Show)]\n-pub enum Onceness {\n-    Once,\n-    Many\n-}\n-\n-impl fmt::Display for Onceness {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        fmt::Display::fmt(match *self {\n-            Once => \"once\",\n-            Many => \"many\",\n-        }, f)\n-    }\n-}\n-\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Show)]\n pub struct BareFnTy {\n     pub unsafety: Unsafety,"}]}