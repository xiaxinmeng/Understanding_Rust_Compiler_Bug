{"sha": "41f11d95c70cc2f65ee9f068d46a7a6de8f911b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZjExZDk1YzcwY2MyZjY1ZWU5ZjA2OGQ0NmE3YTZkZThmOTExYjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-24T15:07:31Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-10T11:50:12Z"}, "message": "don't guess const fn argument types", "tree": {"sha": "909fe846daf91a81b53ef107a39949b6f43d1847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/909fe846daf91a81b53ef107a39949b6f43d1847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f11d95c70cc2f65ee9f068d46a7a6de8f911b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f11d95c70cc2f65ee9f068d46a7a6de8f911b3", "html_url": "https://github.com/rust-lang/rust/commit/41f11d95c70cc2f65ee9f068d46a7a6de8f911b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f11d95c70cc2f65ee9f068d46a7a6de8f911b3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d13231a4cfb1f24c7cfc8168d15d19c63bdbdba", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d13231a4cfb1f24c7cfc8168d15d19c63bdbdba", "html_url": "https://github.com/rust-lang/rust/commit/0d13231a4cfb1f24c7cfc8168d15d19c63bdbdba"}], "stats": {"total": 19, "additions": 1, "deletions": 18}, "files": [{"sha": "993c59a5f2c68b4f47cbfd5bdaac51c8351b8d43", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/41f11d95c70cc2f65ee9f068d46a7a6de8f911b3/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f11d95c70cc2f65ee9f068d46a7a6de8f911b3/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=41f11d95c70cc2f65ee9f068d46a7a6de8f911b3", "patch": "@@ -854,24 +854,7 @@ pub fn eval_const_expr_partial<'tcx>(tcx: &TyCtxt<'tcx>,\n \n           let mut call_args = NodeMap();\n           for (arg, arg_expr) in decl.inputs.iter().zip(args.iter()) {\n-              let arg_hint = match ty_hint {\n-                  ExprTypeChecked => ExprTypeChecked,\n-                  UncheckedExprNoHint | UncheckedExprHint(_) => {\n-                      if let Some(hint) = tcx.ast_ty_to_ty_cache.borrow().get(&arg.ty.id) {\n-                          let mut new_ty_hint = UncheckedExprHint(hint);\n-                          for t in hint.walk() {\n-                              if let ty::TypeVariants::TyParam(_) = t.sty {\n-                                  // found a generic argument, but we are in typeck\n-                                  new_ty_hint = UncheckedExprNoHint;\n-                                  break;\n-                              }\n-                          }\n-                          new_ty_hint\n-                      } else {\n-                          UncheckedExprNoHint\n-                      }\n-                  },\n-              };\n+              let arg_hint = ty_hint.erase_hint();\n               let arg_val = try!(eval_const_expr_partial(\n                   tcx,\n                   arg_expr,"}]}