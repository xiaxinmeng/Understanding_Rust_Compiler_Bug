{"sha": "ffe72e95368aba02d002be0095522548e8f0ee79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZTcyZTk1MzY4YWJhMDJkMDAyYmUwMDk1NTIyNTQ4ZThmMGVlNzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-17T01:51:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-17T01:51:52Z"}, "message": "auto merge of #12940 : cadencemarseille/rust/time-doc, r=alexcrichton", "tree": {"sha": "929edfd125119f15fb5c1a8c451f22d003871c2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/929edfd125119f15fb5c1a8c451f22d003871c2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffe72e95368aba02d002be0095522548e8f0ee79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffe72e95368aba02d002be0095522548e8f0ee79", "html_url": "https://github.com/rust-lang/rust/commit/ffe72e95368aba02d002be0095522548e8f0ee79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffe72e95368aba02d002be0095522548e8f0ee79/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "html_url": "https://github.com/rust-lang/rust/commit/4e1172ebbd44b826b795c05dcecdd8c5557ecff6"}, {"sha": "5bb9bd2d346c5921d35da5e743d1f20534b2b4d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb9bd2d346c5921d35da5e743d1f20534b2b4d7", "html_url": "https://github.com/rust-lang/rust/commit/5bb9bd2d346c5921d35da5e743d1f20534b2b4d7"}], "stats": {"total": 55, "additions": 43, "deletions": 12}, "files": [{"sha": "37c45c2100118c8938d60e2ee9011ff7c1dba9d0", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 43, "deletions": 12, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/ffe72e95368aba02d002be0095522548e8f0ee79/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffe72e95368aba02d002be0095522548e8f0ee79/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=ffe72e95368aba02d002be0095522548e8f0ee79", "patch": "@@ -187,20 +187,51 @@ pub fn tzset() {\n     }\n }\n \n+/// Holds a calendar date and time broken down into its components (year, month, day, and so on),\n+/// also called a broken-down time value.\n #[deriving(Clone, Eq, Encodable, Decodable, Show)]\n pub struct Tm {\n-    tm_sec: i32, // seconds after the minute ~[0-60]\n-    tm_min: i32, // minutes after the hour ~[0-59]\n-    tm_hour: i32, // hours after midnight ~[0-23]\n-    tm_mday: i32, // days of the month ~[1-31]\n-    tm_mon: i32, // months since January ~[0-11]\n-    tm_year: i32, // years since 1900\n-    tm_wday: i32, // days since Sunday ~[0-6]\n-    tm_yday: i32, // days since January 1 ~[0-365]\n-    tm_isdst: i32, // Daylight Savings Time flag\n-    tm_gmtoff: i32, // offset from UTC in seconds\n-    tm_zone: ~str, // timezone abbreviation\n-    tm_nsec: i32, // nanoseconds\n+    /// Seconds after the minute \u2013 [0, 60]\n+    tm_sec: i32,\n+\n+    /// Minutes after the hour \u2013 [0, 59]\n+    tm_min: i32,\n+\n+    /// Hours after midnight \u2013 [0, 23]\n+    tm_hour: i32,\n+\n+    /// Day of the month \u2013 [1, 31]\n+    tm_mday: i32,\n+\n+    /// Months since January \u2013 [0, 11]\n+    tm_mon: i32,\n+\n+    /// Years since 1900\n+    tm_year: i32,\n+\n+    /// Days since Sunday \u2013 [0, 6]. 0 = Sunday, 1 = Monday, \u2026, 6 = Saturday.\n+    tm_wday: i32,\n+\n+    /// Days since January 1 \u2013 [0, 365]\n+    tm_yday: i32,\n+\n+    /// Daylight Saving Time flag.\n+    ///\n+    /// This value is positive if Daylight Saving Time is in effect, zero if Daylight Saving Time\n+    /// is not in effect, and negative if this information is not available.\n+    tm_isdst: i32,\n+\n+    /// Identifies the time zone that was used to compute this broken-down time value, including any\n+    /// adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example,\n+    /// for U.S. Pacific Daylight Time, the value is -7*60*60 = -25200.\n+    tm_gmtoff: i32,\n+\n+    /// Abbreviated name for the time zone that was used to compute this broken-down time value.\n+    /// For example, U.S. Pacific Daylight Time is \"PDT\".\n+    tm_zone: ~str,\n+\n+    /// Nanoseconds after the second \u2013 [0, 10<sup>9</sup> - 1]\n+    tm_nsec: i32,\n }\n \n pub fn empty_tm() -> Tm {"}]}