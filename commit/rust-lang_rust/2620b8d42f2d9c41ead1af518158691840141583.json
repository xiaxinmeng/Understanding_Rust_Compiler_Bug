{"sha": "2620b8d42f2d9c41ead1af518158691840141583", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MjBiOGQ0MmYyZDljNDFlYWQxYWY1MTgxNTg2OTE4NDAxNDE1ODM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-12T21:34:32Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-13T08:44:16Z"}, "message": "Fix MergeBehaviour::Full not working when merging nested long paths", "tree": {"sha": "cf00a7ec7e9ee4db3b94a4efecaa4f97181a9a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf00a7ec7e9ee4db3b94a4efecaa4f97181a9a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2620b8d42f2d9c41ead1af518158691840141583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2620b8d42f2d9c41ead1af518158691840141583", "html_url": "https://github.com/rust-lang/rust/commit/2620b8d42f2d9c41ead1af518158691840141583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2620b8d42f2d9c41ead1af518158691840141583/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d13939260f565fe6fb176b15e23201aafc2d11e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d13939260f565fe6fb176b15e23201aafc2d11e", "html_url": "https://github.com/rust-lang/rust/commit/3d13939260f565fe6fb176b15e23201aafc2d11e"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "e95b971a448489b10ad00dd0f31c780c1b74982c", "filename": "crates/assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2620b8d42f2d9c41ead1af518158691840141583/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2620b8d42f2d9c41ead1af518158691840141583/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=2620b8d42f2d9c41ead1af518158691840141583", "patch": "@@ -393,7 +393,7 @@ impl std::fmt::Display<|> for Foo {\n }\n \",\n             r\"\n-use std::fmt::{Display, nested::Debug};\n+use std::fmt::{nested::Debug, Display};\n \n impl Display for Foo {\n }"}, {"sha": "bfd457d18f76506364768a7c8d81935b7f3d247b", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2620b8d42f2d9c41ead1af518158691840141583/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2620b8d42f2d9c41ead1af518158691840141583/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=2620b8d42f2d9c41ead1af518158691840141583", "patch": "@@ -200,7 +200,18 @@ fn recursive_merge(\n             return None;\n         }\n         let rhs_path = rhs_t.path();\n-        match use_trees.binary_search_by(|p| path_cmp_bin_search(p.path(), rhs_path.clone())) {\n+        match use_trees.binary_search_by(|lhs_t| {\n+            let (lhs_t, rhs_t) = match lhs_t\n+                .path()\n+                .zip(rhs_path.clone())\n+                .and_then(|(lhs, rhs)| common_prefix(&lhs, &rhs))\n+            {\n+                Some((lhs_p, rhs_p)) => (lhs_t.split_prefix(&lhs_p), rhs_t.split_prefix(&rhs_p)),\n+                None => (lhs_t.clone(), rhs_t.clone()),\n+            };\n+\n+            path_cmp_bin_search(lhs_t.path(), rhs_t.path())\n+        }) {\n             Ok(idx) => {\n                 let lhs_t = &mut use_trees[idx];\n                 let lhs_path = lhs_t.path()?;\n@@ -327,11 +338,11 @@ fn path_cmp_for_sort(a: Option<ast::Path>, b: Option<ast::Path>) -> Ordering {\n \n /// Path comparison func for binary searching for merging.\n fn path_cmp_bin_search(lhs: Option<ast::Path>, rhs: Option<ast::Path>) -> Ordering {\n-    match (lhs, rhs) {\n+    match (lhs.and_then(|path| path.segment()), rhs.and_then(|path| path.segment())) {\n         (None, None) => Ordering::Equal,\n         (None, Some(_)) => Ordering::Less,\n         (Some(_), None) => Ordering::Greater,\n-        (Some(ref a), Some(ref b)) => path_cmp_short(a, b),\n+        (Some(ref a), Some(ref b)) => path_segment_cmp(a, b),\n     }\n }\n \n@@ -801,6 +812,24 @@ use std::foo::bar::{Qux, quux::{Fez, Fizz}};\",\n         )\n     }\n \n+    #[test]\n+    fn merge_groups_full_nested_long() {\n+        check_full(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::{foo::bar::Qux};\",\n+            r\"use std::{foo::bar::{Baz, Qux}};\",\n+        );\n+    }\n+\n+    #[test]\n+    fn merge_groups_last_nested_long() {\n+        check_full(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::{foo::bar::Qux};\",\n+            r\"use std::{foo::bar::{Baz, Qux}};\",\n+        );\n+    }\n+\n     #[test]\n     fn merge_groups_skip_pub() {\n         check_full("}]}