{"sha": "573c11cef5744d58b37abdfdb4c175d33e9b6344", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3M2MxMWNlZjU3NDRkNThiMzdhYmRmZGI0YzE3NWQzM2U5YjYzNDQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-17T10:54:04Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-17T10:55:12Z"}, "message": "Simplify make_aggregate_repr.", "tree": {"sha": "cbd90b710943bc620955e1dbb76f42e5887dff79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbd90b710943bc620955e1dbb76f42e5887dff79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/573c11cef5744d58b37abdfdb4c175d33e9b6344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/573c11cef5744d58b37abdfdb4c175d33e9b6344", "html_url": "https://github.com/rust-lang/rust/commit/573c11cef5744d58b37abdfdb4c175d33e9b6344", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/573c11cef5744d58b37abdfdb4c175d33e9b6344/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ebf5063a4c0e790469425cb3cfcbf313f7fb2cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebf5063a4c0e790469425cb3cfcbf313f7fb2cc", "html_url": "https://github.com/rust-lang/rust/commit/3ebf5063a4c0e790469425cb3cfcbf313f7fb2cc"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "ff54f18f755f2f6b632e6bd3883da0c406f6be95", "filename": "src/interpreter.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/573c11cef5744d58b37abdfdb4c175d33e9b6344/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/573c11cef5744d58b37abdfdb4c175d33e9b6344/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=573c11cef5744d58b37abdfdb4c175d33e9b6344", "patch": "@@ -546,8 +546,8 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n         }\n     }\n \n-    fn make_aggregate_repr<V, F>(&self, variant_fields: V) -> Repr\n-        where V: IntoIterator<Item = F>, F: IntoIterator<Item = ty::Ty<'tcx>>\n+    fn make_aggregate_repr<V>(&self, variant_fields: V) -> Repr\n+        where V: IntoIterator, V::Item: IntoIterator<Item = ty::Ty<'tcx>>\n     {\n         let mut variants = Vec::new();\n         let mut max_variant_size = 0;\n@@ -563,22 +563,17 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                 fields.push(FieldRepr { offset: offest, size: field_size });\n             }\n \n-            if size > max_variant_size {\n-                max_variant_size = size;\n-            }\n+            if size > max_variant_size { max_variant_size = size; }\n             variants.push(fields);\n         }\n \n-        let num_variants = variants.len();\n-\n-        let discr_size = match num_variants {\n+        let discr_size = match variants.len() {\n             n if n <= 1       => 0,\n             n if n <= 1 << 8  => 1,\n             n if n <= 1 << 16 => 2,\n             n if n <= 1 << 32 => 4,\n             _                 => 8,\n         };\n-\n         Repr::Aggregate {\n             discr_size: discr_size,\n             max_variant_size: max_variant_size,"}]}