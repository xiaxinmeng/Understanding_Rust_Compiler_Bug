{"sha": "79add336922f28c0fd3da44073b6ef3b6346d69e", "node_id": "C_kwDOAAsO6NoAKDc5YWRkMzM2OTIyZjI4YzBmZDNkYTQ0MDczYjZlZjNiNjM0NmQ2OWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-04T04:08:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-04T04:08:10Z"}, "message": "Rollup merge of #98823 - compiler-errors:rust-call-mir-inline, r=cjgillot\n\nFix rust-call ICE in mir-inliner\n\nFixes #98821\nr? ``@cjgillot``", "tree": {"sha": "0064352596aaef584effec5c947fedd3932cf50a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0064352596aaef584effec5c947fedd3932cf50a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79add336922f28c0fd3da44073b6ef3b6346d69e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiwmeqCRBK7hj4Ov3rIwAA2XsIABXBckvrE5eykXcxIpiqw67f\nI3r8g3btg2xM8+ZllkB+bRJ1+cjk66S/rTCIeJ+pNn+LCznZMVg8i4JpvTyQDsiR\nYS/S7LfdqeOFWJyuK0oOpjFU992bQMyLy4FC/jlJK1/TAiuk/FflEAJhUk9/hMn8\nBYJBC/U+a92U259YR5su+5sImHnjO3/OaxdRFI3iTGw1vXUBWG2g6ro74Ir79Evu\nf2cVd/CTSBS3LlnRzICOHjGkKjV8LptGO/cFE72nS2HX9kZF5A99+F7QgGVPizYQ\nEMY9Tsdy3HDVRQ+AAKunmZ3gQ0INrpjMNAEAFBqw+yNUuRbJ47zK2/701Vowquw=\n=U7U+\n-----END PGP SIGNATURE-----\n", "payload": "tree 0064352596aaef584effec5c947fedd3932cf50a\nparent f236b6853ab7efadcc7d35a27951529f877f210c\nparent 34063199d8fc40a9e97c1409d5077b153cf32fab\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656907690 +0200\ncommitter GitHub <noreply@github.com> 1656907690 +0200\n\nRollup merge of #98823 - compiler-errors:rust-call-mir-inline, r=cjgillot\n\nFix rust-call ICE in mir-inliner\n\nFixes #98821\nr? ``@cjgillot``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79add336922f28c0fd3da44073b6ef3b6346d69e", "html_url": "https://github.com/rust-lang/rust/commit/79add336922f28c0fd3da44073b6ef3b6346d69e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79add336922f28c0fd3da44073b6ef3b6346d69e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f236b6853ab7efadcc7d35a27951529f877f210c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f236b6853ab7efadcc7d35a27951529f877f210c", "html_url": "https://github.com/rust-lang/rust/commit/f236b6853ab7efadcc7d35a27951529f877f210c"}, {"sha": "34063199d8fc40a9e97c1409d5077b153cf32fab", "url": "https://api.github.com/repos/rust-lang/rust/commits/34063199d8fc40a9e97c1409d5077b153cf32fab", "html_url": "https://github.com/rust-lang/rust/commit/34063199d8fc40a9e97c1409d5077b153cf32fab"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "12f5764152e56e4025c46cbb7262b36ddb8f6da9", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/79add336922f28c0fd3da44073b6ef3b6346d69e/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79add336922f28c0fd3da44073b6ef3b6346d69e/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=79add336922f28c0fd3da44073b6ef3b6346d69e", "patch": "@@ -180,16 +180,20 @@ impl<'tcx> Inliner<'tcx> {\n             return Err(\"failed to normalize return type\");\n         }\n         if callsite.fn_sig.abi() == Abi::RustCall {\n-            let mut args = args.into_iter();\n-            let _ = args.next(); // Skip `self` argument.\n-            let arg_tuple_ty = args.next().unwrap().ty(&caller_body.local_decls, self.tcx);\n-            assert!(args.next().is_none());\n+            let (arg_tuple, skipped_args) = match &args[..] {\n+                [arg_tuple] => (arg_tuple, 0),\n+                [_, arg_tuple] => (arg_tuple, 1),\n+                _ => bug!(\"Expected `rust-call` to have 1 or 2 args\"),\n+            };\n \n+            let arg_tuple_ty = arg_tuple.ty(&caller_body.local_decls, self.tcx);\n             let ty::Tuple(arg_tuple_tys) = arg_tuple_ty.kind() else {\n                 bug!(\"Closure arguments are not passed as a tuple\");\n             };\n \n-            for (arg_ty, input) in arg_tuple_tys.iter().zip(callee_body.args_iter().skip(1)) {\n+            for (arg_ty, input) in\n+                arg_tuple_tys.iter().zip(callee_body.args_iter().skip(skipped_args))\n+            {\n                 let input_type = callee_body.local_decls[input].ty;\n                 if !equal_up_to_regions(self.tcx, self.param_env, arg_ty, input_type) {\n                     trace!(?arg_ty, ?input_type);"}, {"sha": "411c98e10313db9871334e3974ece925f0d6a7c5", "filename": "src/test/ui/abi/rustcall-generic.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79add336922f28c0fd3da44073b6ef3b6346d69e/src%2Ftest%2Fui%2Fabi%2Frustcall-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79add336922f28c0fd3da44073b6ef3b6346d69e/src%2Ftest%2Fui%2Fabi%2Frustcall-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Frustcall-generic.rs?ref=79add336922f28c0fd3da44073b6ef3b6346d69e", "patch": "@@ -1,4 +1,7 @@\n+// revisions: normal opt\n // check-pass\n+//[opt] compile-flags: -Zmir-opt-level=3\n+\n #![feature(unboxed_closures)]\n \n extern \"rust-call\" fn foo<T>(_: T) {}"}]}