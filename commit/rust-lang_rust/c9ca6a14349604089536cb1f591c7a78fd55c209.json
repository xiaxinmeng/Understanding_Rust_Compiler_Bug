{"sha": "c9ca6a14349604089536cb1f591c7a78fd55c209", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5Y2E2YTE0MzQ5NjA0MDg5NTM2Y2IxZjU5MWM3YTc4ZmQ1NWMyMDk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-17T06:34:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-17T06:34:07Z"}, "message": "Merge #8550\n\n8550: Handle extended key value attributes in mbe r=edwin0cheng a=edwin0cheng\n\nfixes #8544\r\n\r\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "d8f6d2d1c2d2aac12f333a7f9955a708d49bd28d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8f6d2d1c2d2aac12f333a7f9955a708d49bd28d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9ca6a14349604089536cb1f591c7a78fd55c209", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgeoFfCRBK7hj4Ov3rIwAAa3oIABg+yMT1tQYOkenuAinuQSl6\nshC2xWXuUzeSqYRnNyoRPAG6t+pkiQVP3a/82mL+3WBIfL0cWR5WOTytjKI1Tu2O\nZ54hOWWmpJOMKh064f2ij9gDM2Hm+S0mZzXxA6EvR8qfFfS8a4uHuVsFt1fiszXt\nXZiGM3lMgoR2zokh7LWazDxYR0FiyV11+/5rJ4LTDyZy2fsPt6/6sStFIOm6H+jE\n0gitxu+Po+3XcBoGPAyAImu97xBWE4Xh3RRseknMhcljM9bJLZ8FdKdAhkyM37M8\nxiLimGwyXpbO+1q/5DQzrU4CJhhdtfNVxrLYokvqAW9pAhGYZRLnnl6wkH4zMEI=\n=HbeO\n-----END PGP SIGNATURE-----\n", "payload": "tree d8f6d2d1c2d2aac12f333a7f9955a708d49bd28d\nparent df5b6f7d459a367b191d5d540c7363d9e526eadf\nparent c4173bb468500f6490921e8f8627d87b2aeb7af5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618641247 +0000\ncommitter GitHub <noreply@github.com> 1618641247 +0000\n\nMerge #8550\n\n8550: Handle extended key value attributes in mbe r=edwin0cheng a=edwin0cheng\n\nfixes #8544\r\n\r\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9ca6a14349604089536cb1f591c7a78fd55c209", "html_url": "https://github.com/rust-lang/rust/commit/c9ca6a14349604089536cb1f591c7a78fd55c209", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9ca6a14349604089536cb1f591c7a78fd55c209/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df5b6f7d459a367b191d5d540c7363d9e526eadf", "url": "https://api.github.com/repos/rust-lang/rust/commits/df5b6f7d459a367b191d5d540c7363d9e526eadf", "html_url": "https://github.com/rust-lang/rust/commit/df5b6f7d459a367b191d5d540c7363d9e526eadf"}, {"sha": "c4173bb468500f6490921e8f8627d87b2aeb7af5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4173bb468500f6490921e8f8627d87b2aeb7af5", "html_url": "https://github.com/rust-lang/rust/commit/c4173bb468500f6490921e8f8627d87b2aeb7af5"}], "stats": {"total": 83, "additions": 35, "deletions": 48}, "files": [{"sha": "146b236e26fda0d9c4c3676310d8ccd17ad811f4", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c9ca6a14349604089536cb1f591c7a78fd55c209/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9ca6a14349604089536cb1f591c7a78fd55c209/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=c9ca6a14349604089536cb1f591c7a78fd55c209", "patch": "@@ -940,6 +940,24 @@ fn test_meta_doc_comments() {\n     );\n }\n \n+#[test]\n+fn test_meta_extended_key_value_attributes() {\n+    parse_macro(\n+        r#\"\n+macro_rules! foo {\n+    (#[$i:meta]) => (\n+        #[$ i]\n+        fn bar() {}\n+    )\n+}\n+\"#,\n+    )\n+    .assert_expand_items(\n+        r#\"foo! { #[doc = concat!(\"The `\", \"bla\", \"` lang item.\")] }\"#,\n+        r#\"# [doc = concat ! (\"The `\" , \"bla\" , \"` lang item.\")] fn bar () {}\"#,\n+    );\n+}\n+\n #[test]\n fn test_meta_doc_comments_non_latin() {\n     parse_macro("}, {"sha": "9bdf0b5fa24bfe4879e10d7157547270f604a968", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c9ca6a14349604089536cb1f591c7a78fd55c209/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9ca6a14349604089536cb1f591c7a78fd55c209/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=c9ca6a14349604089536cb1f591c7a78fd55c209", "patch": "@@ -76,42 +76,7 @@ pub(crate) mod fragments {\n \n     // Parse a meta item , which excluded [], e.g : #[ MetaItem ]\n     pub(crate) fn meta_item(p: &mut Parser) {\n-        fn is_delimiter(p: &mut Parser) -> bool {\n-            matches!(p.current(), T!['{'] | T!['('] | T!['['])\n-        }\n-\n-        if is_delimiter(p) {\n-            items::token_tree(p);\n-            return;\n-        }\n-\n-        let m = p.start();\n-        while !p.at(EOF) {\n-            if is_delimiter(p) {\n-                items::token_tree(p);\n-                break;\n-            } else {\n-                // https://doc.rust-lang.org/reference/attributes.html\n-                // https://doc.rust-lang.org/reference/paths.html#simple-paths\n-                // The start of an meta must be a simple path\n-                match p.current() {\n-                    IDENT | T![super] | T![self] | T![crate] => p.bump_any(),\n-                    T![=] => {\n-                        p.bump_any();\n-                        match p.current() {\n-                            c if c.is_literal() => p.bump_any(),\n-                            T![true] | T![false] => p.bump_any(),\n-                            _ => {}\n-                        }\n-                        break;\n-                    }\n-                    _ if p.at(T![::]) => p.bump(T![::]),\n-                    _ => break,\n-                }\n-            }\n-        }\n-\n-        m.complete(p, TOKEN_TREE);\n+        attributes::meta(p);\n     }\n \n     pub(crate) fn item(p: &mut Parser) {"}, {"sha": "124a10eb264712c31aed9f55cff1f9d46b706f92", "filename": "crates/parser/src/grammar/attributes.rs", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c9ca6a14349604089536cb1f591c7a78fd55c209/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9ca6a14349604089536cb1f591c7a78fd55c209/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs?ref=c9ca6a14349604089536cb1f591c7a78fd55c209", "patch": "@@ -14,6 +14,21 @@ pub(super) fn outer_attrs(p: &mut Parser) {\n     }\n }\n \n+pub(super) fn meta(p: &mut Parser) {\n+    paths::use_path(p);\n+\n+    match p.current() {\n+        T![=] => {\n+            p.bump(T![=]);\n+            if expressions::expr(p).0.is_none() {\n+                p.error(\"expected expression\");\n+            }\n+        }\n+        T!['('] | T!['['] | T!['{'] => items::token_tree(p),\n+        _ => {}\n+    }\n+}\n+\n fn attr(p: &mut Parser, inner: bool) {\n     let attr = p.start();\n     assert!(p.at(T![#]));\n@@ -25,18 +40,7 @@ fn attr(p: &mut Parser, inner: bool) {\n     }\n \n     if p.eat(T!['[']) {\n-        paths::use_path(p);\n-\n-        match p.current() {\n-            T![=] => {\n-                p.bump(T![=]);\n-                if expressions::expr(p).0.is_none() {\n-                    p.error(\"expected expression\");\n-                }\n-            }\n-            T!['('] | T!['['] | T!['{'] => items::token_tree(p),\n-            _ => {}\n-        }\n+        meta(p);\n \n         if !p.eat(T![']']) {\n             p.error(\"expected `]`\");"}]}