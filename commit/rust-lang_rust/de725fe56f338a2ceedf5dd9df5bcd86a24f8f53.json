{"sha": "de725fe56f338a2ceedf5dd9df5bcd86a24f8f53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNzI1ZmU1NmYzMzhhMmNlZWRmNWRkOWRmNWJjZDg2YTI0ZjhmNTM=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-09-25T19:09:06Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-09-25T19:09:06Z"}, "message": "Remove note about missing ios/tvos targets in platform docs.\n\nI misunderstood how this works, and I have fixed the linux builds\nto support ios/tvos.", "tree": {"sha": "8e039363fe7d0f482b80d193a7c41bcf25bf20d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e039363fe7d0f482b80d193a7c41bcf25bf20d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53", "html_url": "https://github.com/rust-lang/rust/commit/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c29a29cba099aef1e05c83970decdcbedaabd69a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c29a29cba099aef1e05c83970decdcbedaabd69a", "html_url": "https://github.com/rust-lang/rust/commit/c29a29cba099aef1e05c83970decdcbedaabd69a"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "6c605f045e5e8e2759119bb2a398a7fe71c5fcf8", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=de725fe56f338a2ceedf5dd9df5bcd86a24f8f53", "patch": "@@ -57,7 +57,7 @@ Specifically, these platforms are required to have each of the following:\n \n target | std | host | notes\n -------|-----|------|-------\n-`aarch64-apple-ios` | \u2713[^apple] |  | ARM64 iOS\n+`aarch64-apple-ios` | \u2713 |  | ARM64 iOS\n `aarch64-fuchsia` | \u2713 |  | ARM64 Fuchsia\n `aarch64-linux-android` | \u2713 |  | ARM64 Android\n `aarch64-pc-windows-msvc` | \u2713 |  | ARM64 Windows MSVC\n@@ -122,7 +122,7 @@ target | std | host | notes\n `wasm32-unknown-emscripten` | \u2713 |  | WebAssembly via Emscripten\n `wasm32-unknown-unknown` | \u2713 |  | WebAssembly\n `wasm32-wasi` | \u2713 |  | WebAssembly with WASI\n-`x86_64-apple-ios` | \u2713[^apple] |  | 64-bit x86 iOS\n+`x86_64-apple-ios` | \u2713 |  | 64-bit x86 iOS\n `x86_64-fortanix-unknown-sgx` | \u2713 |  | [Fortanix ABI] for 64-bit Intel SGX\n `x86_64-fuchsia` | \u2713 |  | 64-bit Fuchsia\n `x86_64-linux-android` | \u2713 |  | 64-bit x86 Android\n@@ -146,7 +146,7 @@ not available.\n target | std | host | notes\n -------|-----|------|-------\n `aarch64-apple-darwin` | ? |  | ARM64 macOS\n-`aarch64-apple-tvos` | *[^apple] |  | ARM64 tvOS\n+`aarch64-apple-tvos` | * |  | ARM64 tvOS\n `aarch64-unknown-cloudabi` | \u2713 |  | ARM64 CloudABI\n `aarch64-unknown-freebsd` | \u2713 | \u2713 | ARM64 FreeBSD\n `aarch64-unknown-hermit` | ? |  |\n@@ -158,16 +158,16 @@ target | std | host | notes\n `armv4t-unknown-linux-gnueabi` | ? |  |\n `armv6-unknown-freebsd` | \u2713 | \u2713 | ARMv6 FreeBSD\n `armv6-unknown-netbsd-eabihf` | ? |  |\n-`armv7-apple-ios` | \u2713[^apple] |  | ARMv7 iOS, Cortex-a8\n+`armv7-apple-ios` | \u2713 |  | ARMv7 iOS, Cortex-a8\n `armv7-unknown-cloudabi-eabihf` | \u2713 |  | ARMv7 CloudABI, hardfloat\n `armv7-unknown-freebsd` | \u2713 | \u2713 | ARMv7 FreeBSD\n `armv7-unknown-netbsd-eabihf` | ? |  |\n `armv7-wrs-vxworks-eabihf` | ? |  |\n `armv7a-none-eabihf` | * | | ARM Cortex-A, hardfloat\n-`armv7s-apple-ios` | \u2713[^apple] |  |\n+`armv7s-apple-ios` | \u2713 |  |\n `avr-unknown-gnu-atmega328` | \u2717 |  | AVR. Requires `-Z build-std=core`\n `hexagon-unknown-linux-musl` | ? |  |\n-`i386-apple-ios` | \u2713[^apple] |  | 32-bit x86 iOS\n+`i386-apple-ios` | \u2713 |  | 32-bit x86 iOS\n `i686-apple-darwin` | \u2713 | \u2713 | 32-bit OSX (10.7+, Lion+)\n `i686-pc-windows-msvc` | \u2713 |  | 32-bit Windows XP support\n `i686-unknown-cloudabi` | \u2713 |  | 32-bit CloudABI\n@@ -203,8 +203,8 @@ target | std | host | notes\n `thumbv7a-uwp-windows-msvc` | \u2713 |  |\n `thumbv7neon-unknown-linux-musleabihf` | ? |  | Thumb2-mode ARMv7a Linux with NEON, MUSL\n `thumbv4t-none-eabi` | * |  | ARMv4T T32\n-`x86_64-apple-ios-macabi` | \u2713[^apple] |  | Apple Catalyst\n-`x86_64-apple-tvos` | *[^apple] | | x86 64-bit tvOS\n+`x86_64-apple-ios-macabi` | \u2713 |  | Apple Catalyst\n+`x86_64-apple-tvos` | * | | x86 64-bit tvOS\n `x86_64-linux-kernel` | * |  | Linux kernel modules\n `x86_64-pc-solaris` | ? |  |\n `x86_64-pc-windows-msvc` | \u2713 |  | 64-bit Windows XP support\n@@ -221,4 +221,3 @@ target | std | host | notes\n `x86_64-wrs-vxworks` | ? |  |\n \n [runs on NVIDIA GPUs]: https://github.com/japaric-archived/nvptx#targets\n-[^apple]: These targets are only available on macOS."}, {"sha": "6a492bbff4d4027ea3c150e11ca912cc6ecf2704", "filename": "src/tools/tier-check/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53/src%2Ftools%2Ftier-check%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de725fe56f338a2ceedf5dd9df5bcd86a24f8f53/src%2Ftools%2Ftier-check%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftier-check%2Fsrc%2Fmain.rs?ref=de725fe56f338a2ceedf5dd9df5bcd86a24f8f53", "patch": "@@ -25,8 +25,6 @@ fn main() {\n     let doc_targets: HashSet<_> = doc_targets_md\n         .lines()\n         .filter(|line| line.starts_with('`') && line.contains('|'))\n-        // These platforms only exist on macos.\n-        .filter(|line| !line.contains(\"[^apple]\") || cfg!(target_os = \"macos\"))\n         .map(|line| line.split('`').skip(1).next().expect(\"expected target code span\"))\n         .collect();\n "}]}