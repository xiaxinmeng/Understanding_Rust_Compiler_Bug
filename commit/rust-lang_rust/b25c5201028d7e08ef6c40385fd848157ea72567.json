{"sha": "b25c5201028d7e08ef6c40385fd848157ea72567", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNWM1MjAxMDI4ZDdlMDhlZjZjNDAzODVmZDg0ODE1N2VhNzI1Njc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-25T15:43:11Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-26T14:26:04Z"}, "message": "make transmute_copy use memcpy, and inline it", "tree": {"sha": "23b8bffc18c561694ec4a50be8fbd504255fe61b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23b8bffc18c561694ec4a50be8fbd504255fe61b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b25c5201028d7e08ef6c40385fd848157ea72567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b25c5201028d7e08ef6c40385fd848157ea72567", "html_url": "https://github.com/rust-lang/rust/commit/b25c5201028d7e08ef6c40385fd848157ea72567", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b25c5201028d7e08ef6c40385fd848157ea72567/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58d6864ad700d9972b57824eed758c9b71e465d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/58d6864ad700d9972b57824eed758c9b71e465d8", "html_url": "https://github.com/rust-lang/rust/commit/58d6864ad700d9972b57824eed758c9b71e465d8"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "40a62c12bb34e2a8e56ab832a5855da6c39c628b", "filename": "src/libstd/cast.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b25c5201028d7e08ef6c40385fd848157ea72567/src%2Flibstd%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b25c5201028d7e08ef6c40385fd848157ea72567/src%2Flibstd%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcast.rs?ref=b25c5201028d7e08ef6c40385fd848157ea72567", "patch": "@@ -14,6 +14,7 @@ use sys;\n use unstable::intrinsics;\n \n /// Casts the value at `src` to U. The two types must have the same length.\n+#[cfg(stage0)]\n pub unsafe fn transmute_copy<T, U>(src: &T) -> U {\n     let mut dest: U = intrinsics::uninit();\n     {\n@@ -26,6 +27,26 @@ pub unsafe fn transmute_copy<T, U>(src: &T) -> U {\n     dest\n }\n \n+#[cfg(target_word_size = \"32\", not(stage0))]\n+#[inline(always)]\n+pub unsafe fn transmute_copy<T, U>(src: &T) -> U {\n+    let mut dest: U = intrinsics::uninit();\n+    let dest_ptr: *mut u8 = transmute(&mut dest);\n+    let src_ptr: *u8 = transmute(src);\n+    intrinsics::memcpy32(dest_ptr, src_ptr, sys::size_of::<U>() as u64);\n+    dest\n+}\n+\n+#[cfg(target_word_size = \"64\", not(stage0))]\n+#[inline(always)]\n+pub unsafe fn transmute_copy<T, U>(src: &T) -> U {\n+    let mut dest: U = intrinsics::uninit();\n+    let dest_ptr: *mut u8 = transmute(&mut dest);\n+    let src_ptr: *u8 = transmute(src);\n+    intrinsics::memcpy64(dest_ptr, src_ptr, sys::size_of::<U>() as u64);\n+    dest\n+}\n+\n /**\n  * Move a thing into the void\n  *"}]}