{"sha": "fa9d97499eabdb9f0d88d9389ba37da908136d81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhOWQ5NzQ5OWVhYmRiOWYwZDg4ZDkzODliYTM3ZGE5MDgxMzZkODE=", "commit": {"author": {"name": "Michael M\u00fcller", "email": "mich@elmueller.net", "date": "2020-10-24T16:14:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-24T16:14:52Z"}, "message": "Fix overriding license header bug (#4488)\n\n* Override header to None when path len = 0\r\n\r\n* Add regression test\r\n\r\n* Ensure nightly", "tree": {"sha": "f8514a0c7f19dc3940b400f921c860e6c2a23c3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8514a0c7f19dc3940b400f921c860e6c2a23c3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa9d97499eabdb9f0d88d9389ba37da908136d81", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJflFL8CRBK7hj4Ov3rIwAAdHIIAHJT2Kkav5ZaMw/KPdbrR84F\nE2SnbEdV5xV34lBAKOUUONsIgVn0utrwzSndPl42BwI6i5vtF9BNGdWYsdRi2ZvC\nDnHNp8Va88OiUrfwVMXZWU1oTglaEZ7N4vfXsBdGAEYoxYtKiEWzvle8qDJD5HjU\nZX2GATIvsPlKNoxF7GNgc3EErGJPake6cTwDJz3Z3t0+W5MDlSe9JKamBU6vYlmy\n95K7J+a2ZU4CWC1PT8QTgqWWaI91jJdyURtHJkxEOlm+BmYZk5rIgG764rjlhNAh\n0mJL0WiqwKFSyyC8nuTWOf/NuPh6QRhCjYXZw/Ne6shJSoWh1Sp6KMnHgSFPGJ0=\n=Yaa3\n-----END PGP SIGNATURE-----\n", "payload": "tree f8514a0c7f19dc3940b400f921c860e6c2a23c3a\nparent 6a7824787e231485d93c9a08a13d229cbcd14ded\nauthor Michael M\u00fcller <mich@elmueller.net> 1603556092 +0200\ncommitter GitHub <noreply@github.com> 1603556092 -0500\n\nFix overriding license header bug (#4488)\n\n* Override header to None when path len = 0\r\n\r\n* Add regression test\r\n\r\n* Ensure nightly"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa9d97499eabdb9f0d88d9389ba37da908136d81", "html_url": "https://github.com/rust-lang/rust/commit/fa9d97499eabdb9f0d88d9389ba37da908136d81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa9d97499eabdb9f0d88d9389ba37da908136d81/comments", "author": {"login": "cmichi", "id": 241530, "node_id": "MDQ6VXNlcjI0MTUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmichi", "html_url": "https://github.com/cmichi", "followers_url": "https://api.github.com/users/cmichi/followers", "following_url": "https://api.github.com/users/cmichi/following{/other_user}", "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions", "organizations_url": "https://api.github.com/users/cmichi/orgs", "repos_url": "https://api.github.com/users/cmichi/repos", "events_url": "https://api.github.com/users/cmichi/events{/privacy}", "received_events_url": "https://api.github.com/users/cmichi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a7824787e231485d93c9a08a13d229cbcd14ded", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a7824787e231485d93c9a08a13d229cbcd14ded", "html_url": "https://github.com/rust-lang/rust/commit/6a7824787e231485d93c9a08a13d229cbcd14ded"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "d8fd8f78b38406a09d60b0abedeb13ef69fa6e11", "filename": "src/config/config_type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa9d97499eabdb9f0d88d9389ba37da908136d81/src%2Fconfig%2Fconfig_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa9d97499eabdb9f0d88d9389ba37da908136d81/src%2Fconfig%2Fconfig_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fconfig_type.rs?ref=fa9d97499eabdb9f0d88d9389ba37da908136d81", "patch": "@@ -299,6 +299,8 @@ macro_rules! create_config {\n                             Err(msg) => eprintln!(\"Warning for license template file {:?}: {}\",\n                                                 lt_path, msg),\n                         }\n+                    } else {\n+                        self.license_template = None;\n                     }\n                 }\n             }"}, {"sha": "9abc9f9c331a970e831553ebdd4b6cf11319755b", "filename": "src/config/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa9d97499eabdb9f0d88d9389ba37da908136d81/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa9d97499eabdb9f0d88d9389ba37da908136d81/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=fa9d97499eabdb9f0d88d9389ba37da908136d81", "patch": "@@ -491,6 +491,18 @@ mod test {\n         assert!(config.license_template.is_some());\n     }\n \n+    #[test]\n+    fn test_override_existing_license_with_no_license() {\n+        if !crate::is_nightly_channel!() {\n+            return;\n+        }\n+        let toml = r#\"license_template_path = \"tests/license-template/lt.txt\"\"#;\n+        let mut config = Config::from_toml(toml, Path::new(\"\")).unwrap();\n+        assert!(config.license_template.is_some());\n+        config.override_value(\"license_template_path\", \"\");\n+        assert!(config.license_template.is_none());\n+    }\n+\n     #[test]\n     fn test_dump_default_config() {\n         let default_config = format!("}]}