{"sha": "447268ceac497432822e8cf28525a6784f392020", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NzI2OGNlYWM0OTc0MzI4MjJlOGNmMjg1MjVhNjc4NGYzOTIwMjA=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-26T17:33:08Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-26T17:33:08Z"}, "message": "Hide MacroCallLoc", "tree": {"sha": "f2c327eb94ff0306758b0dd83df10e713d4f0f61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2c327eb94ff0306758b0dd83df10e713d4f0f61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/447268ceac497432822e8cf28525a6784f392020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/447268ceac497432822e8cf28525a6784f392020", "html_url": "https://github.com/rust-lang/rust/commit/447268ceac497432822e8cf28525a6784f392020", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/447268ceac497432822e8cf28525a6784f392020/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d753fa6f514ea1105c25ace91201c5324ee0b92", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d753fa6f514ea1105c25ace91201c5324ee0b92", "html_url": "https://github.com/rust-lang/rust/commit/4d753fa6f514ea1105c25ace91201c5324ee0b92"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "7c4ebd4b4f9a93864e1042bae30253652c3cf730", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=447268ceac497432822e8cf28525a6784f392020", "patch": "@@ -14,8 +14,7 @@ use hir_def::{\n     DefWithBodyId,\n };\n use hir_expand::{\n-    hygiene::Hygiene, name::AsName, AstId, HirFileId, MacroCallId, MacroCallLoc, MacroFileKind,\n-    Source,\n+    hygiene::Hygiene, name::AsName, AstId, HirFileId, MacroCallId, MacroFileKind, Source,\n };\n use ra_syntax::{\n     ast::{self, AstNode},\n@@ -451,9 +450,8 @@ impl SourceAnalyzer {\n             macro_call.file_id,\n             db.ast_id_map(macro_call.file_id).ast_id(macro_call.value),\n         );\n-        let macro_call_loc = MacroCallLoc { def, ast_id };\n         Some(Expansion {\n-            macro_call_id: db.intern_macro(macro_call_loc),\n+            macro_call_id: def.as_call_id(db, ast_id),\n             macro_file_kind: to_macro_file_kind(macro_call.value),\n         })\n     }"}, {"sha": "78a532bdd6cb6b8a60333b93d778259d0dc6f95a", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=447268ceac497432822e8cf28525a6784f392020", "patch": "@@ -6,8 +6,7 @@ pub mod scope;\n use std::{ops::Index, sync::Arc};\n \n use hir_expand::{\n-    either::Either, hygiene::Hygiene, AstId, HirFileId, MacroCallLoc, MacroDefId, MacroFileKind,\n-    Source,\n+    either::Either, hygiene::Hygiene, AstId, HirFileId, MacroDefId, MacroFileKind, Source,\n };\n use ra_arena::{map::ArenaMap, Arena};\n use ra_syntax::{ast, AstNode, AstPtr};\n@@ -47,7 +46,7 @@ impl Expander {\n \n         if let Some(path) = macro_call.path().and_then(|path| self.parse_path(path)) {\n             if let Some(def) = self.resolve_path_as_macro(db, &path) {\n-                let call_id = db.intern_macro(MacroCallLoc { def, ast_id });\n+                let call_id = def.as_call_id(db, ast_id);\n                 let file_id = call_id.as_file(MacroFileKind::Expr);\n                 if let Some(node) = db.parse_or_expand(file_id) {\n                     if let Some(expr) = ast::Expr::cast(node) {"}, {"sha": "ea3abfdae279d395c9775492ce4efccfc1b20173", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=447268ceac497432822e8cf28525a6784f392020", "patch": "@@ -6,7 +6,7 @@\n use hir_expand::{\n     builtin_macro::find_builtin_macro,\n     name::{self, AsName, Name},\n-    HirFileId, MacroCallId, MacroCallLoc, MacroDefId, MacroDefKind, MacroFileKind,\n+    HirFileId, MacroCallId, MacroDefId, MacroDefKind, MacroFileKind,\n };\n use ra_cfg::CfgOptions;\n use ra_db::{CrateId, FileId};\n@@ -480,7 +480,7 @@ where\n             );\n \n             if let Some(def) = resolved_res.resolved_def.take_macros() {\n-                let call_id = self.db.intern_macro(MacroCallLoc { def, ast_id: *ast_id });\n+                let call_id = def.as_call_id(self.db, *ast_id);\n                 resolved.push((*module_id, call_id, def));\n                 res = ReachedFixedPoint::No;\n                 return false;\n@@ -773,8 +773,7 @@ where\n         if let Some(macro_def) = mac.path.as_ident().and_then(|name| {\n             self.def_collector.def_map[self.module_id].scope.get_legacy_macro(&name)\n         }) {\n-            let macro_call_id =\n-                self.def_collector.db.intern_macro(MacroCallLoc { def: macro_def, ast_id });\n+            let macro_call_id = macro_def.as_call_id(self.def_collector.db, ast_id);\n \n             self.def_collector.collect_macro_expansion(self.module_id, macro_call_id, macro_def);\n             return;"}, {"sha": "b6a739cda53bdb258104d8fcaff909780a14ea28", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447268ceac497432822e8cf28525a6784f392020/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=447268ceac497432822e8cf28525a6784f392020", "patch": "@@ -135,6 +135,16 @@ pub struct MacroDefId {\n     pub kind: MacroDefKind,\n }\n \n+impl MacroDefId {\n+    pub fn as_call_id(\n+        self,\n+        db: &dyn db::AstDatabase,\n+        ast_id: AstId<ast::MacroCall>,\n+    ) -> MacroCallId {\n+        db.intern_macro(MacroCallLoc { def: self, ast_id })\n+    }\n+}\n+\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub enum MacroDefKind {\n     Declarative,\n@@ -143,8 +153,8 @@ pub enum MacroDefKind {\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct MacroCallLoc {\n-    pub def: MacroDefId,\n-    pub ast_id: AstId<ast::MacroCall>,\n+    pub(crate) def: MacroDefId,\n+    pub(crate) ast_id: AstId<ast::MacroCall>,\n }\n \n impl MacroCallId {"}]}