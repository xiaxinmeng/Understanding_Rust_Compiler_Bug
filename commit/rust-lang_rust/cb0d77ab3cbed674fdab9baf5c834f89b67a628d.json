{"sha": "cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMGQ3N2FiM2NiZWQ2NzRmZGFiOWJhZjVjODM0Zjg5YjY3YTYyOGQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-18T19:29:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-18T19:29:09Z"}, "message": "Merge #7337\n\n7337: Remove obsolete RangeInfo usage in rename r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "08ab30e1b508847a8012df0515943654820e907e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08ab30e1b508847a8012df0515943654820e907e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgBeGFCRBK7hj4Ov3rIwAAdHIIAF4ThzBEpa8IvOVR0WA4FU49\nJa2uq3QSG4dqOYGalVUIGBqDPm9wfP98HkI9Wf8Pwc+IDZkF/Dco3VfFzXP9Z2cm\nrpBpYdfdYau1Zlr6ADsosyqSA/jF7rS+S45IMfE1IaggxOl4Y4anGxjDsrPKkB5B\ngw15+i2WZ7KMqP1x3Q7JJSqKZEQsXtdc6A9aFTLCIEf6DMXDuljd5I7+qokQyg8f\nWFsI89/FKb4QididEoyvjIcIINoA490Gna3uAXroR5FrSHOoinaCrfKBAuyckWFp\nm7eGEr63KquCkcNoOGurrGPh31lfpXyDc2km+4y29dwT7yTJ3wvDUj8tVBchoNQ=\n=4bKu\n-----END PGP SIGNATURE-----\n", "payload": "tree 08ab30e1b508847a8012df0515943654820e907e\nparent 39282ec419046d84ad5972d5b02b1af9885e1282\nparent 21a6384ce6e50520a63b8826015b282be4a60c25\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1610998149 +0000\ncommitter GitHub <noreply@github.com> 1610998149 +0000\n\nMerge #7337\n\n7337: Remove obsolete RangeInfo usage in rename r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "html_url": "https://github.com/rust-lang/rust/commit/cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39282ec419046d84ad5972d5b02b1af9885e1282", "url": "https://api.github.com/repos/rust-lang/rust/commits/39282ec419046d84ad5972d5b02b1af9885e1282", "html_url": "https://github.com/rust-lang/rust/commit/39282ec419046d84ad5972d5b02b1af9885e1282"}, {"sha": "21a6384ce6e50520a63b8826015b282be4a60c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/21a6384ce6e50520a63b8826015b282be4a60c25", "html_url": "https://github.com/rust-lang/rust/commit/21a6384ce6e50520a63b8826015b282be4a60c25"}], "stats": {"total": 320, "additions": 151, "deletions": 169}, "files": [{"sha": "579d5a30889a1491f9db72ce7f57e33241a28999", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "patch": "@@ -140,7 +140,7 @@ impl DiagnosticWithFix for IncorrectCase {\n             rename_with_semantics(sema, file_position, &self.suggested_text).ok()?;\n \n         let label = format!(\"Rename to {}\", self.suggested_text);\n-        Some(Fix::new(&label, rename_changes.info, frange.range))\n+        Some(Fix::new(&label, rename_changes, frange.range))\n     }\n }\n "}, {"sha": "b2b7178d46a0ed781612aac1011b840d2f02c9b6", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "patch": "@@ -520,7 +520,7 @@ impl Analysis {\n         &self,\n         position: FilePosition,\n         new_name: &str,\n-    ) -> Cancelable<Result<RangeInfo<SourceChange>, RenameError>> {\n+    ) -> Cancelable<Result<SourceChange, RenameError>> {\n         self.with_db(|db| references::rename::rename(db, position, new_name))\n     }\n "}, {"sha": "c25bcce50eb61bd19af59a9f32f0a9b38c307e8e", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 148, "deletions": 166, "changes": 314, "blob_url": "https://github.com/rust-lang/rust/blob/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "patch": "@@ -63,7 +63,7 @@ pub(crate) fn rename(\n     db: &RootDatabase,\n     position: FilePosition,\n     new_name: &str,\n-) -> RenameResult<RangeInfo<SourceChange>> {\n+) -> RenameResult<SourceChange> {\n     let sema = Semantics::new(db);\n     rename_with_semantics(&sema, position, new_name)\n }\n@@ -72,7 +72,7 @@ pub(crate) fn rename_with_semantics(\n     sema: &Semantics<RootDatabase>,\n     position: FilePosition,\n     new_name: &str,\n-) -> RenameResult<RangeInfo<SourceChange>> {\n+) -> RenameResult<SourceChange> {\n     let source_file = sema.parse(position.file_id);\n     let syntax = source_file.syntax();\n \n@@ -91,7 +91,7 @@ pub(crate) fn will_rename_file(\n ) -> Option<SourceChange> {\n     let sema = Semantics::new(db);\n     let module = sema.to_module_def(file_id)?;\n-    let mut change = rename_mod(&sema, module, new_name_stem).ok()?.info;\n+    let mut change = rename_mod(&sema, module, new_name_stem).ok()?;\n     change.file_system_edits.clear();\n     Some(change)\n }\n@@ -243,7 +243,7 @@ fn rename_mod(\n     sema: &Semantics<RootDatabase>,\n     module: Module,\n     new_name: &str,\n-) -> RenameResult<RangeInfo<SourceChange>> {\n+) -> RenameResult<SourceChange> {\n     if IdentifierKind::Ident != check_identifier(new_name)? {\n         bail!(\"Invalid name `{0}`: cannot rename module to {0}\", new_name);\n     }\n@@ -281,13 +281,10 @@ fn rename_mod(\n     });\n     source_change.extend(ref_edits);\n \n-    Ok(RangeInfo::new(TextRange::default(), source_change))\n+    Ok(source_change)\n }\n \n-fn rename_to_self(\n-    sema: &Semantics<RootDatabase>,\n-    local: hir::Local,\n-) -> RenameResult<RangeInfo<SourceChange>> {\n+fn rename_to_self(sema: &Semantics<RootDatabase>, local: hir::Local) -> RenameResult<SourceChange> {\n     if assert_never!(local.is_self(sema.db)) {\n         bail!(\"rename_to_self invoked on self\");\n     }\n@@ -356,7 +353,7 @@ fn rename_to_self(\n         TextEdit::replace(first_param_range, String::from(self_param)),\n     );\n \n-    Ok(RangeInfo::new(TextRange::default(), source_change))\n+    Ok(source_change)\n }\n \n fn text_edit_from_self_param(self_param: &ast::SelfParam, new_name: &str) -> Option<TextEdit> {\n@@ -387,7 +384,7 @@ fn rename_self_to_param(\n     local: hir::Local,\n     new_name: &str,\n     identifier_kind: IdentifierKind,\n-) -> RenameResult<RangeInfo<SourceChange>> {\n+) -> RenameResult<SourceChange> {\n     let (file_id, self_param) = match local.source(sema.db) {\n         InFile { file_id, value: Either::Right(self_param) } => (file_id, self_param),\n         _ => {\n@@ -408,14 +405,14 @@ fn rename_self_to_param(\n     source_change.extend(usages.iter().map(|(&file_id, references)| {\n         source_edit_from_references(sema, file_id, &references, new_name)\n     }));\n-    Ok(RangeInfo::new(TextRange::default(), source_change))\n+    Ok(source_change)\n }\n \n fn rename_reference(\n     sema: &Semantics<RootDatabase>,\n     def: Definition,\n     new_name: &str,\n-) -> RenameResult<RangeInfo<SourceChange>> {\n+) -> RenameResult<SourceChange> {\n     let ident_kind = check_identifier(new_name)?;\n \n     let def_is_lbl_or_lt = matches!(def,\n@@ -439,7 +436,7 @@ fn rename_reference(\n         (IdentifierKind::ToSelf, Definition::Local(local)) if local.is_self(sema.db) => {\n             // no-op\n             mark::hit!(rename_self_to_self);\n-            return Ok(RangeInfo::new(TextRange::default(), SourceChange::default()));\n+            return Ok(SourceChange::default());\n         }\n         (ident_kind, Definition::Local(local)) if local.is_self(sema.db) => {\n             mark::hit!(rename_self_to_param);\n@@ -465,7 +462,7 @@ fn rename_reference(\n \n     let (file_id, edit) = source_edit_from_def(sema, def, new_name)?;\n     source_change.insert_source_edit(file_id, edit);\n-    Ok(RangeInfo::new(TextRange::default(), source_change))\n+    Ok(source_change)\n }\n \n fn source_edit_from_def(\n@@ -518,7 +515,7 @@ mod tests {\n             Ok(source_change) => {\n                 let mut text_edit_builder = TextEdit::builder();\n                 let mut file_id: Option<FileId> = None;\n-                for edit in source_change.info.source_file_edits {\n+                for edit in source_change.source_file_edits {\n                     file_id = Some(edit.0);\n                     for indel in edit.1.into_iter() {\n                         text_edit_builder.replace(indel.delete, indel.insert);\n@@ -917,36 +914,33 @@ mod foo$0;\n // empty\n \"#,\n             expect![[r#\"\n-                RangeInfo {\n-                    range: 0..0,\n-                    info: SourceChange {\n-                        source_file_edits: {\n-                            FileId(\n-                                1,\n-                            ): TextEdit {\n-                                indels: [\n-                                    Indel {\n-                                        insert: \"foo2\",\n-                                        delete: 4..7,\n-                                    },\n-                                ],\n-                            },\n+                SourceChange {\n+                    source_file_edits: {\n+                        FileId(\n+                            1,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"foo2\",\n+                                    delete: 4..7,\n+                                },\n+                            ],\n                         },\n-                        file_system_edits: [\n-                            MoveFile {\n-                                src: FileId(\n+                    },\n+                    file_system_edits: [\n+                        MoveFile {\n+                            src: FileId(\n+                                2,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n                                     2,\n                                 ),\n-                                dst: AnchoredPathBuf {\n-                                    anchor: FileId(\n-                                        2,\n-                                    ),\n-                                    path: \"foo2.rs\",\n-                                },\n+                                path: \"foo2.rs\",\n                             },\n-                        ],\n-                        is_snippet: false,\n-                    },\n+                        },\n+                    ],\n+                    is_snippet: false,\n                 }\n             \"#]],\n         );\n@@ -969,46 +963,43 @@ pub struct FooContent;\n use crate::foo$0::FooContent;\n \"#,\n             expect![[r#\"\n-                RangeInfo {\n-                    range: 0..0,\n-                    info: SourceChange {\n-                        source_file_edits: {\n-                            FileId(\n-                                0,\n-                            ): TextEdit {\n-                                indels: [\n-                                    Indel {\n-                                        insert: \"quux\",\n-                                        delete: 8..11,\n-                                    },\n-                                ],\n-                            },\n-                            FileId(\n-                                2,\n-                            ): TextEdit {\n-                                indels: [\n-                                    Indel {\n-                                        insert: \"quux\",\n-                                        delete: 11..14,\n-                                    },\n-                                ],\n-                            },\n+                SourceChange {\n+                    source_file_edits: {\n+                        FileId(\n+                            0,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"quux\",\n+                                    delete: 8..11,\n+                                },\n+                            ],\n+                        },\n+                        FileId(\n+                            2,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"quux\",\n+                                    delete: 11..14,\n+                                },\n+                            ],\n                         },\n-                        file_system_edits: [\n-                            MoveFile {\n-                                src: FileId(\n+                    },\n+                    file_system_edits: [\n+                        MoveFile {\n+                            src: FileId(\n+                                1,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n                                     1,\n                                 ),\n-                                dst: AnchoredPathBuf {\n-                                    anchor: FileId(\n-                                        1,\n-                                    ),\n-                                    path: \"quux.rs\",\n-                                },\n+                                path: \"quux.rs\",\n                             },\n-                        ],\n-                        is_snippet: false,\n-                    },\n+                        },\n+                    ],\n+                    is_snippet: false,\n                 }\n             \"#]],\n         );\n@@ -1025,36 +1016,33 @@ mod fo$0o;\n // empty\n \"#,\n             expect![[r#\"\n-                RangeInfo {\n-                    range: 0..0,\n-                    info: SourceChange {\n-                        source_file_edits: {\n-                            FileId(\n-                                0,\n-                            ): TextEdit {\n-                                indels: [\n-                                    Indel {\n-                                        insert: \"foo2\",\n-                                        delete: 4..7,\n-                                    },\n-                                ],\n-                            },\n+                SourceChange {\n+                    source_file_edits: {\n+                        FileId(\n+                            0,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"foo2\",\n+                                    delete: 4..7,\n+                                },\n+                            ],\n                         },\n-                        file_system_edits: [\n-                            MoveFile {\n-                                src: FileId(\n+                    },\n+                    file_system_edits: [\n+                        MoveFile {\n+                            src: FileId(\n+                                1,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n                                     1,\n                                 ),\n-                                dst: AnchoredPathBuf {\n-                                    anchor: FileId(\n-                                        1,\n-                                    ),\n-                                    path: \"../foo2/mod.rs\",\n-                                },\n+                                path: \"../foo2/mod.rs\",\n                             },\n-                        ],\n-                        is_snippet: false,\n-                    },\n+                        },\n+                    ],\n+                    is_snippet: false,\n                 }\n             \"#]],\n         );\n@@ -1072,36 +1060,33 @@ mod outer { mod fo$0o; }\n // empty\n \"#,\n             expect![[r#\"\n-                RangeInfo {\n-                    range: 0..0,\n-                    info: SourceChange {\n-                        source_file_edits: {\n-                            FileId(\n-                                0,\n-                            ): TextEdit {\n-                                indels: [\n-                                    Indel {\n-                                        insert: \"bar\",\n-                                        delete: 16..19,\n-                                    },\n-                                ],\n-                            },\n+                SourceChange {\n+                    source_file_edits: {\n+                        FileId(\n+                            0,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"bar\",\n+                                    delete: 16..19,\n+                                },\n+                            ],\n                         },\n-                        file_system_edits: [\n-                            MoveFile {\n-                                src: FileId(\n+                    },\n+                    file_system_edits: [\n+                        MoveFile {\n+                            src: FileId(\n+                                1,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n                                     1,\n                                 ),\n-                                dst: AnchoredPathBuf {\n-                                    anchor: FileId(\n-                                        1,\n-                                    ),\n-                                    path: \"bar.rs\",\n-                                },\n+                                path: \"bar.rs\",\n                             },\n-                        ],\n-                        is_snippet: false,\n-                    },\n+                        },\n+                    ],\n+                    is_snippet: false,\n                 }\n             \"#]],\n         );\n@@ -1142,46 +1127,43 @@ pub mod foo$0;\n // pub fn fun() {}\n \"#,\n             expect![[r#\"\n-                RangeInfo {\n-                    range: 0..0,\n-                    info: SourceChange {\n-                        source_file_edits: {\n-                            FileId(\n-                                0,\n-                            ): TextEdit {\n-                                indels: [\n-                                    Indel {\n-                                        insert: \"foo2\",\n-                                        delete: 27..30,\n-                                    },\n-                                ],\n-                            },\n-                            FileId(\n-                                1,\n-                            ): TextEdit {\n-                                indels: [\n-                                    Indel {\n-                                        insert: \"foo2\",\n-                                        delete: 8..11,\n-                                    },\n-                                ],\n-                            },\n+                SourceChange {\n+                    source_file_edits: {\n+                        FileId(\n+                            0,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"foo2\",\n+                                    delete: 27..30,\n+                                },\n+                            ],\n+                        },\n+                        FileId(\n+                            1,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"foo2\",\n+                                    delete: 8..11,\n+                                },\n+                            ],\n                         },\n-                        file_system_edits: [\n-                            MoveFile {\n-                                src: FileId(\n+                    },\n+                    file_system_edits: [\n+                        MoveFile {\n+                            src: FileId(\n+                                2,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n                                     2,\n                                 ),\n-                                dst: AnchoredPathBuf {\n-                                    anchor: FileId(\n-                                        2,\n-                                    ),\n-                                    path: \"foo2.rs\",\n-                                },\n+                                path: \"foo2.rs\",\n                             },\n-                        ],\n-                        is_snippet: false,\n-                    },\n+                        },\n+                    ],\n+                    is_snippet: false,\n                 }\n             \"#]],\n         );"}, {"sha": "01748fa7c75e216a138d95116377d69f0b13c733", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0d77ab3cbed674fdab9baf5c834f89b67a628d/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=cb0d77ab3cbed674fdab9baf5c834f89b67a628d", "patch": "@@ -809,7 +809,7 @@ pub(crate) fn handle_rename(\n \n     let change =\n         snap.analysis.rename(position, &*params.new_name)?.map_err(to_proto::rename_error)?;\n-    let workspace_edit = to_proto::workspace_edit(&snap, change.info)?;\n+    let workspace_edit = to_proto::workspace_edit(&snap, change)?;\n     Ok(Some(workspace_edit))\n }\n "}]}