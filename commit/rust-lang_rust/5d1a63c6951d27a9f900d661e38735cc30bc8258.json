{"sha": "5d1a63c6951d27a9f900d661e38735cc30bc8258", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMWE2M2M2OTUxZDI3YTlmOTAwZDY2MWUzODczNWNjMzBiYzgyNTg=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-21T05:19:51Z"}, "committer": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-21T05:19:51Z"}, "message": "postfix completion", "tree": {"sha": "cea3f71b2c2919b6c923cdca0a5f3b50413e4291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cea3f71b2c2919b6c923cdca0a5f3b50413e4291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d1a63c6951d27a9f900d661e38735cc30bc8258", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d1a63c6951d27a9f900d661e38735cc30bc8258", "html_url": "https://github.com/rust-lang/rust/commit/5d1a63c6951d27a9f900d661e38735cc30bc8258", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d1a63c6951d27a9f900d661e38735cc30bc8258/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f133702f723203a60a1b4dade51418261cdbc133", "url": "https://api.github.com/repos/rust-lang/rust/commits/f133702f723203a60a1b4dade51418261cdbc133", "html_url": "https://github.com/rust-lang/rust/commit/f133702f723203a60a1b4dade51418261cdbc133"}], "stats": {"total": 342, "additions": 312, "deletions": 30}, "files": [{"sha": "565d57c3724b4b23e70567f094090f0cfb58da0e", "filename": "crates/ra_ide_api/src/completion.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs?ref=5d1a63c6951d27a9f900d661e38735cc30bc8258", "patch": "@@ -7,6 +7,7 @@ mod complete_keyword;\n mod complete_snippet;\n mod complete_path;\n mod complete_scope;\n+mod complete_postfix;\n \n use ra_db::SyntaxDatabase;\n \n@@ -57,6 +58,6 @@ pub(crate) fn completions(db: &db::RootDatabase, position: FilePosition) -> Opti\n     complete_path::complete_path(&mut acc, &ctx);\n     complete_scope::complete_scope(&mut acc, &ctx);\n     complete_dot::complete_dot(&mut acc, &ctx);\n-\n+    complete_postfix::complete_postfix(&mut acc, &ctx);\n     Some(acc)\n }"}, {"sha": "cf0252a00b47e89e809ee15fb057cbe94d23e5b5", "filename": "crates/ra_ide_api/src/completion/complete_postfix.rs", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=5d1a63c6951d27a9f900d661e38735cc30bc8258", "patch": "@@ -0,0 +1,95 @@\n+use crate::{\n+    completion::{\n+        completion_item::{\n+            Completions,\n+            Builder,\n+            CompletionKind,\n+        },\n+        completion_context::CompletionContext,\n+    },\n+    CompletionItem\n+};\n+use ra_syntax::{\n+    ast::AstNode,\n+    TextRange\n+};\n+use ra_text_edit::TextEditBuilder;\n+\n+fn postfix_snippet(ctx: &CompletionContext, label: &str, snippet: &str) -> Builder {\n+    let replace_range = ctx.source_range();\n+    let receiver_range = ctx\n+        .dot_receiver\n+        .expect(\"no receiver available\")\n+        .syntax()\n+        .range();\n+    let delete_range = TextRange::from_to(receiver_range.start(), replace_range.start());\n+    let mut builder = TextEditBuilder::default();\n+    builder.delete(delete_range);\n+    CompletionItem::new(CompletionKind::Postfix, replace_range, label)\n+        .snippet(snippet)\n+        .text_edit(builder.finish())\n+}\n+\n+pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n+    if let Some(dot_receiver) = ctx.dot_receiver {\n+        let receiver_text = dot_receiver.syntax().text().to_string();\n+        postfix_snippet(ctx, \"not\", \"!not\").add_to(acc);\n+        postfix_snippet(ctx, \"if\", &format!(\"if {} {{$0}}\", receiver_text)).add_to(acc);\n+        postfix_snippet(\n+            ctx,\n+            \"match\",\n+            &format!(\"match {} {{\\n${{1:_}} => {{$0\\\\}},\\n}}\", receiver_text),\n+        )\n+        .add_to(acc);\n+        postfix_snippet(ctx, \"while\", &format!(\"while {} {{\\n$0\\n}}\", receiver_text)).add_to(acc);\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::completion::completion_item::CompletionKind;\n+    use crate::completion::completion_item::check_completion;\n+\n+    fn check_snippet_completion(code: &str, expected_completions: &str) {\n+        check_completion(code, expected_completions, CompletionKind::Postfix);\n+    }\n+\n+    #[test]\n+    fn test_filter_postfix_completion1() {\n+        check_snippet_completion(\n+            \"filter_postfix_completion1\",\n+            r#\"\n+            fn main() {\n+                let bar = \"a\";\n+                bar.<|>\n+            }\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_filter_postfix_completion2() {\n+        check_snippet_completion(\n+            \"filter_postfix_completion2\",\n+            r#\"\n+            fn main() {\n+                let bar = \"a\";\n+                bar.i<|>\n+            }\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_filter_postfix_completion3() {\n+        check_snippet_completion(\n+            \"filter_postfix_completion3\",\n+            r#\"\n+            fn main() {\n+                let bar = \"a\";\n+                bar.if<|>\n+            }\n+            \"#,\n+        );\n+    }\n+}"}, {"sha": "c892ad84674f95811563a2e9fe68de915729c0bd", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=5d1a63c6951d27a9f900d661e38735cc30bc8258", "patch": "@@ -18,7 +18,12 @@ pub struct CompletionItem {\n     lookup: Option<String>,\n     insert_text: Option<String>,\n     insert_text_format: InsertTextFormat,\n+    /// Where completion occurs. `source_range` must contain the completion offset.\n+    /// `insert_text` should start with what `source_range` points to, or VSCode\n+    /// will filter out the completion silently.\n     source_range: TextRange,\n+    /// Additional text edit, ranges in `text_edit` must never intersect with `source_range`.\n+    /// Or VSCode will drop it silently.\n     text_edit: Option<TextEdit>,\n }\n \n@@ -49,6 +54,7 @@ pub(crate) enum CompletionKind {\n     /// \"Secret sauce\" completions.\n     Magic,\n     Snippet,\n+    Postfix,\n }\n \n #[derive(Debug, PartialEq, Eq, Copy, Clone)]"}, {"sha": "a0abd00cc0a05f06be0a26d875a8fc7c48c6e7c1", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__filter_postfix_completion1.snap", "status": "renamed", "additions": 21, "deletions": 29, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion1.snap?ref=5d1a63c6951d27a9f900d661e38735cc30bc8258", "patch": "@@ -1,4 +1,4 @@\n-Created: 2019-01-19T13:50:41.824939+00:00\n+Created: 2019-01-21T05:12:32.815475+00:00\n Creator: insta@0.1.4\n Source: crates/ra_ide_api/src/completion/completion_item.rs\n \n@@ -9,18 +9,16 @@ Source: crates/ra_ide_api/src/completion/completion_item.rs\n         kind: None,\n         detail: None,\n         lookup: None,\n+        insert_text: Some(\n+            \"!not\"\n+        ),\n         insert_text_format: Snippet,\n+        source_range: [76; 76),\n         text_edit: Some(\n-            AtomTextEdit {\n-                delete: [78; 78),\n-                insert: \"!not\"\n-            }\n-        ),\n-        additional_text_edits: Some(\n             TextEdit {\n                 atoms: [\n                     AtomTextEdit {\n-                        delete: [72; 78),\n+                        delete: [72; 76),\n                         insert: \"\"\n                     }\n                 ]\n@@ -33,18 +31,16 @@ Source: crates/ra_ide_api/src/completion/completion_item.rs\n         kind: None,\n         detail: None,\n         lookup: None,\n+        insert_text: Some(\n+            \"if bar {$0}\"\n+        ),\n         insert_text_format: Snippet,\n+        source_range: [76; 76),\n         text_edit: Some(\n-            AtomTextEdit {\n-                delete: [78; 78),\n-                insert: \"if bar {$0}\"\n-            }\n-        ),\n-        additional_text_edits: Some(\n             TextEdit {\n                 atoms: [\n                     AtomTextEdit {\n-                        delete: [72; 78),\n+                        delete: [72; 76),\n                         insert: \"\"\n                     }\n                 ]\n@@ -57,18 +53,16 @@ Source: crates/ra_ide_api/src/completion/completion_item.rs\n         kind: None,\n         detail: None,\n         lookup: None,\n+        insert_text: Some(\n+            \"match bar {\\n${1:_} => {$0\\\\},\\n}\"\n+        ),\n         insert_text_format: Snippet,\n+        source_range: [76; 76),\n         text_edit: Some(\n-            AtomTextEdit {\n-                delete: [78; 78),\n-                insert: \"match bar {\\n${1:_} => {$0\\\\},\\n}\"\n-            }\n-        ),\n-        additional_text_edits: Some(\n             TextEdit {\n                 atoms: [\n                     AtomTextEdit {\n-                        delete: [72; 78),\n+                        delete: [72; 76),\n                         insert: \"\"\n                     }\n                 ]\n@@ -81,18 +75,16 @@ Source: crates/ra_ide_api/src/completion/completion_item.rs\n         kind: None,\n         detail: None,\n         lookup: None,\n+        insert_text: Some(\n+            \"while bar {\\n$0\\n}\"\n+        ),\n         insert_text_format: Snippet,\n+        source_range: [76; 76),\n         text_edit: Some(\n-            AtomTextEdit {\n-                delete: [78; 78),\n-                insert: \"while bar {\\n$0\\n}\"\n-            }\n-        ),\n-        additional_text_edits: Some(\n             TextEdit {\n                 atoms: [\n                     AtomTextEdit {\n-                        delete: [72; 78),\n+                        delete: [72; 76),\n                         insert: \"\"\n                     }\n                 ]", "previous_filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completion_postfix.snap"}, {"sha": "3b3ee8d433d0d5f9be2d2938354510ab7c850c8e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__filter_postfix_completion2.snap", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion2.snap?ref=5d1a63c6951d27a9f900d661e38735cc30bc8258", "patch": "@@ -0,0 +1,94 @@\n+Created: 2019-01-21T05:12:32.816092+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"not\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"!not\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 77),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"if\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if bar {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 77),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"match\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match bar {\\n${1:_} => {$0\\\\},\\n}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 77),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"while\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while bar {\\n$0\\n}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 77),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    }\n+]"}, {"sha": "31e8f008c06f9867f733618c51ca5a55e282de0d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__filter_postfix_completion3.snap", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion3.snap", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a63c6951d27a9f900d661e38735cc30bc8258/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion3.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__filter_postfix_completion3.snap?ref=5d1a63c6951d27a9f900d661e38735cc30bc8258", "patch": "@@ -0,0 +1,94 @@\n+Created: 2019-01-21T05:19:05.341730+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"not\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"!not\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 78),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"if\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if bar {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 78),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"match\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match bar {\\n${1:_} => {$0\\\\},\\n}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 78),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"while\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while bar {\\n$0\\n}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [76; 78),\n+        text_edit: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 76),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    }\n+]"}]}