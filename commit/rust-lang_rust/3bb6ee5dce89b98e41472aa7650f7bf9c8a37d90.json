{"sha": "3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90", "node_id": "C_kwDOAAsO6NoAKDNiYjZlZTVkY2U4OWI5OGU0MTQ3MmFhNzY1MGY3YmY5YzhhMzdkOTA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-08T07:50:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-08T07:50:43Z"}, "message": "Auto merge of #10295 - DesmondWillowbrook:diff-format-suspicious-to-owned, r=Jarcho\n\nfix(suspicious_to_owned): use span_suggestions to suggest both intents\n\nfixes #10294\n\nchangelog: [`suspicious_to_owned`]: suggestions now produce valid Rust code", "tree": {"sha": "703acb6340cba3974c655b53dc7ad83d93b16ee8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/703acb6340cba3974c655b53dc7ad83d93b16ee8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90", "html_url": "https://github.com/rust-lang/rust/commit/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a9860901f0ae9782ff23fb793838a16f733a60b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9860901f0ae9782ff23fb793838a16f733a60b", "html_url": "https://github.com/rust-lang/rust/commit/8a9860901f0ae9782ff23fb793838a16f733a60b"}, {"sha": "b7c38981ff38936841fdd2bdd81d1594b4f88b09", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c38981ff38936841fdd2bdd81d1594b4f88b09", "html_url": "https://github.com/rust-lang/rust/commit/b7c38981ff38936841fdd2bdd81d1594b4f88b09"}], "stats": {"total": 65, "additions": 56, "deletions": 9}, "files": [{"sha": "e818f1892e510a9a2decbbc4d95ea1d6247492e4", "filename": "clippy_lints/src/methods/suspicious_to_owned.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_to_owned.rs?ref=3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::is_diag_trait_item;\n use clippy_utils::source::snippet_with_context;\n use if_chain::if_chain;\n@@ -17,19 +17,31 @@ pub fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, recv: &hir::Expr<'_>) -\n         let input_type = cx.typeck_results().expr_ty(expr);\n         if let ty::Adt(adt, _) = cx.typeck_results().expr_ty(expr).kind();\n         if cx.tcx.is_diagnostic_item(sym::Cow, adt.did());\n+\n         then {\n             let mut app = Applicability::MaybeIncorrect;\n             let recv_snip = snippet_with_context(cx, recv.span, expr.span.ctxt(), \"..\", &mut app).0;\n-            span_lint_and_sugg(\n+            span_lint_and_then(\n                 cx,\n                 SUSPICIOUS_TO_OWNED,\n                 expr.span,\n                 &with_forced_trimmed_paths!(format!(\n                     \"this `to_owned` call clones the {input_type} itself and does not cause the {input_type} contents to become owned\"\n                 )),\n-                \"consider using, depending on intent\",\n-                format!(\"{recv_snip}.clone()` or `{recv_snip}.into_owned()\"),\n-                app,\n+                |diag| {\n+                    diag.span_suggestion(\n+                        expr.span,\n+                        \"depending on intent, either make the Cow an Owned variant\",\n+                        format!(\"{recv_snip}.into_owned()\"),\n+                        app\n+                    );\n+                    diag.span_suggestion(\n+                        expr.span,\n+                        \"or clone the Cow itself\",\n+                        format!(\"{recv_snip}.clone()\"),\n+                        app\n+                    );\n+                }\n             );\n             return true;\n         }"}, {"sha": "c4ec7aa88a2a358e6f77e2a0d21ffd987d6c7324", "filename": "tests/ui/suspicious_to_owned.stderr", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90/tests%2Fui%2Fsuspicious_to_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90/tests%2Fui%2Fsuspicious_to_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_to_owned.stderr?ref=3bb6ee5dce89b98e41472aa7650f7bf9c8a37d90", "patch": "@@ -2,27 +2,62 @@ error: this `to_owned` call clones the Cow<'_, str> itself and does not cause th\n   --> $DIR/suspicious_to_owned.rs:16:13\n    |\n LL |     let _ = cow.to_owned();\n-   |             ^^^^^^^^^^^^^^ help: consider using, depending on intent: `cow.clone()` or `cow.into_owned()`\n+   |             ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::suspicious-to-owned` implied by `-D warnings`\n+help: depending on intent, either make the Cow an Owned variant\n+   |\n+LL |     let _ = cow.into_owned();\n+   |             ~~~~~~~~~~~~~~~~\n+help: or clone the Cow itself\n+   |\n+LL |     let _ = cow.clone();\n+   |             ~~~~~~~~~~~\n \n error: this `to_owned` call clones the Cow<'_, [char; 3]> itself and does not cause the Cow<'_, [char; 3]> contents to become owned\n   --> $DIR/suspicious_to_owned.rs:26:13\n    |\n LL |     let _ = cow.to_owned();\n-   |             ^^^^^^^^^^^^^^ help: consider using, depending on intent: `cow.clone()` or `cow.into_owned()`\n+   |             ^^^^^^^^^^^^^^\n+   |\n+help: depending on intent, either make the Cow an Owned variant\n+   |\n+LL |     let _ = cow.into_owned();\n+   |             ~~~~~~~~~~~~~~~~\n+help: or clone the Cow itself\n+   |\n+LL |     let _ = cow.clone();\n+   |             ~~~~~~~~~~~\n \n error: this `to_owned` call clones the Cow<'_, Vec<char>> itself and does not cause the Cow<'_, Vec<char>> contents to become owned\n   --> $DIR/suspicious_to_owned.rs:36:13\n    |\n LL |     let _ = cow.to_owned();\n-   |             ^^^^^^^^^^^^^^ help: consider using, depending on intent: `cow.clone()` or `cow.into_owned()`\n+   |             ^^^^^^^^^^^^^^\n+   |\n+help: depending on intent, either make the Cow an Owned variant\n+   |\n+LL |     let _ = cow.into_owned();\n+   |             ~~~~~~~~~~~~~~~~\n+help: or clone the Cow itself\n+   |\n+LL |     let _ = cow.clone();\n+   |             ~~~~~~~~~~~\n \n error: this `to_owned` call clones the Cow<'_, str> itself and does not cause the Cow<'_, str> contents to become owned\n   --> $DIR/suspicious_to_owned.rs:46:13\n    |\n LL |     let _ = cow.to_owned();\n-   |             ^^^^^^^^^^^^^^ help: consider using, depending on intent: `cow.clone()` or `cow.into_owned()`\n+   |             ^^^^^^^^^^^^^^\n+   |\n+help: depending on intent, either make the Cow an Owned variant\n+   |\n+LL |     let _ = cow.into_owned();\n+   |             ~~~~~~~~~~~~~~~~\n+help: or clone the Cow itself\n+   |\n+LL |     let _ = cow.clone();\n+   |             ~~~~~~~~~~~\n \n error: implicitly cloning a `String` by calling `to_owned` on its dereferenced type\n   --> $DIR/suspicious_to_owned.rs:60:13"}]}