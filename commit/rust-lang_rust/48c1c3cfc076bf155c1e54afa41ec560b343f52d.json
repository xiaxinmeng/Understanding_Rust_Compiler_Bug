{"sha": "48c1c3cfc076bf155c1e54afa41ec560b343f52d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YzFjM2NmYzA3NmJmMTU1YzFlNTRhZmE0MWVjNTYwYjM0M2Y1MmQ=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-22T00:40:52Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-22T00:40:52Z"}, "message": "librustc: Fix broken test.", "tree": {"sha": "23755b4b16ea6729a214a4df57463927a6e77321", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23755b4b16ea6729a214a4df57463927a6e77321"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48c1c3cfc076bf155c1e54afa41ec560b343f52d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48c1c3cfc076bf155c1e54afa41ec560b343f52d", "html_url": "https://github.com/rust-lang/rust/commit/48c1c3cfc076bf155c1e54afa41ec560b343f52d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48c1c3cfc076bf155c1e54afa41ec560b343f52d/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ea6a496964e8f380f257cfd281b364f3337176b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea6a496964e8f380f257cfd281b364f3337176b", "html_url": "https://github.com/rust-lang/rust/commit/9ea6a496964e8f380f257cfd281b364f3337176b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4152a32fc3330cfc638b7d8b31a710c5e1b769cd", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48c1c3cfc076bf155c1e54afa41ec560b343f52d/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c1c3cfc076bf155c1e54afa41ec560b343f52d/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=48c1c3cfc076bf155c1e54afa41ec560b343f52d", "patch": "@@ -1278,13 +1278,13 @@ fn test_simplification() {\n     let item_in = ast::ii_item(quote_item!(\n         fn new_int_alist<B:Copy>() -> alist<int, B> {\n             fn eq_int(&&a: int, &&b: int) -> bool { a == b }\n-            return {eq_fn: eq_int, data: ~[]};\n+            return alist {eq_fn: eq_int, data: ~[]};\n         }\n     ).get());\n     let item_out = simplify_ast(item_in);\n     let item_exp = ast::ii_item(quote_item!(\n         fn new_int_alist<B:Copy>() -> alist<int, B> {\n-            return {eq_fn: eq_int, data: ~[]};\n+            return alist {eq_fn: eq_int, data: ~[]};\n         }\n     ).get());\n     match (item_out, item_exp) {"}]}