{"sha": "ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZDBmZmZjY2U1YTBmNDc3NDdiYzMwYjMxZjhjMmMzN2IzZWY3NDY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T23:36:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T23:36:47Z"}, "message": "stdlib: Implement str::split_ivec()", "tree": {"sha": "f93b357e4ce43383c97065f653bf649e3111bd96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f93b357e4ce43383c97065f653bf649e3111bd96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746", "html_url": "https://github.com/rust-lang/rust/commit/ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e038e8e52bebe33ca2d949122bf876bbb2d97936", "url": "https://api.github.com/repos/rust-lang/rust/commits/e038e8e52bebe33ca2d949122bf876bbb2d97936", "html_url": "https://github.com/rust-lang/rust/commit/e038e8e52bebe33ca2d949122bf876bbb2d97936"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "8591ec6aecb38efd587feb8daec7333b8415eead", "filename": "src/lib/str.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=ccd0fffcce5a0f47747bc30b31f8c2c37b3ef746", "patch": "@@ -442,6 +442,21 @@ fn split(str s, u8 sep) -> vec[str] {\n     ret v;\n }\n \n+fn split_ivec(str s, u8 sep) -> str[] {\n+    let str[] v = ~[];\n+    let str accum = \"\";\n+    let bool ends_with_sep = false;\n+    for (u8 c in s) {\n+        if (c == sep) {\n+            v += ~[accum];\n+            accum = \"\";\n+            ends_with_sep = true;\n+        } else { accum += unsafe_from_byte(c); ends_with_sep = false; }\n+    }\n+    if (str::byte_len(accum) != 0u || ends_with_sep) { v += ~[accum]; }\n+    ret v;\n+}\n+\n fn concat(vec[str] v) -> str {\n     let str s = \"\";\n     for (str ss in v) { s += ss; }"}]}