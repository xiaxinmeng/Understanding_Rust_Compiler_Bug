{"sha": "f16b4910150f841d57c92aed6fa089f387da0d92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNmI0OTEwMTUwZjg0MWQ1N2M5MmFlZDZmYTA4OWYzODdkYTBkOTI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-21T16:28:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-25T14:53:52Z"}, "message": "remove unnecessary cast", "tree": {"sha": "a99ad81d1dbafc5943487d2990998cb5a729fb59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a99ad81d1dbafc5943487d2990998cb5a729fb59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f16b4910150f841d57c92aed6fa089f387da0d92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f16b4910150f841d57c92aed6fa089f387da0d92", "html_url": "https://github.com/rust-lang/rust/commit/f16b4910150f841d57c92aed6fa089f387da0d92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f16b4910150f841d57c92aed6fa089f387da0d92/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7e2650db200dcb918b5346e137ee6c1e4bc614a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e2650db200dcb918b5346e137ee6c1e4bc614a", "html_url": "https://github.com/rust-lang/rust/commit/d7e2650db200dcb918b5346e137ee6c1e4bc614a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f6be92174ad4649da93b16c3d7f038e6e90c936e", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f16b4910150f841d57c92aed6fa089f387da0d92/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16b4910150f841d57c92aed6fa089f387da0d92/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=f16b4910150f841d57c92aed6fa089f387da0d92", "patch": "@@ -341,7 +341,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     // Turn the wide MPlace into a string (must already be dereferenced!)\n     pub fn read_str(&self, mplace: MPlaceTy<'tcx, M::PointerTag>) -> InterpResult<'tcx, &str> {\n         let len = mplace.len(self)?;\n-        let bytes = self.memory.read_bytes(mplace.ptr, Size::from_bytes(u64::from(len)))?;\n+        let bytes = self.memory.read_bytes(mplace.ptr, Size::from_bytes(len))?;\n         let str = ::std::str::from_utf8(bytes)\n             .map_err(|err| err_ub_format!(\"this string is not valid UTF-8: {}\", err))?;\n         Ok(str)"}]}