{"sha": "564aa59a3ff1ec462f4be15041d89c2ac662f861", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NGFhNTlhM2ZmMWVjNDYyZjRiZTE1MDQxZDg5YzJhYzY2MmY4NjE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-16T15:01:41Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-16T15:02:43Z"}, "message": "further reorganization", "tree": {"sha": "2da5ade76fc9ce6b5db8f2c1c322c035cdce1c03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2da5ade76fc9ce6b5db8f2c1c322c035cdce1c03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/564aa59a3ff1ec462f4be15041d89c2ac662f861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/564aa59a3ff1ec462f4be15041d89c2ac662f861", "html_url": "https://github.com/rust-lang/rust/commit/564aa59a3ff1ec462f4be15041d89c2ac662f861", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/564aa59a3ff1ec462f4be15041d89c2ac662f861/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63210ecddb74fb601a17314c6866685d74fa89dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/63210ecddb74fb601a17314c6866685d74fa89dc", "html_url": "https://github.com/rust-lang/rust/commit/63210ecddb74fb601a17314c6866685d74fa89dc"}], "stats": {"total": 70, "additions": 51, "deletions": 19}, "files": [{"sha": "b8f0eb4152a5b89805744d6e9d4b4d74f19659b6", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=564aa59a3ff1ec462f4be15041d89c2ac662f861", "patch": "@@ -30,21 +30,11 @@ independently:\n   the `cx.tcache` table for later use\n \n - check: walks over function bodies and type checks them, inferring types for\n-  local variables, type parameters, etc as necessary.  Temporary types (which\n-  may contain references to type variables whose values have yet to be\n-  inferred) for each item within a function are stored in a temporary table\n-  inside of @fn_ctxt (function context).\n+  local variables, type parameters, etc as necessary.\n \n - infer: finds the types to use for each type variable such that\n-  all subtyping and assignment constraints are met\n-\n-- vtable: find and records the impls to use for each iface bound that\n-  appears on a type parameter\n-\n-- writeback: writes the final types within a function body, replacing\n-  type variables with their final inferred types.  These final types\n-  are written into the `tcx.node_types` table, which should *never* contain\n-  any reference to a type variable.\n+  all subtyping and assignment constraints are met.  In essence, the check\n+  module specifies the constraints, and the infer module solves them.\n \n */\n "}, {"sha": "a1e95e2d252086085e4f8ec90e1aed6855c1286b", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=564aa59a3ff1ec462f4be15041d89c2ac662f861", "patch": "@@ -1,3 +1,46 @@\n+/*\n+\n+# check.rs\n+\n+Within the check phase of type check, we check each item one at a time\n+(bodies of function expressions are checked as part of the containing\n+function).  Inference is used to supply types wherever they are\n+unknown.\n+\n+By far the most complex case is checking the body of a function. This\n+can be broken down into several distinct phases:\n+\n+- gather: creates type variables to represent the type of each local\n+  variable and pattern binding.\n+\n+- main: the main pass does the lion's share of the work: it\n+  determines the types of all expressions, resolves\n+  methods, checks for most invalid conditions, and so forth.  In\n+  some cases, where a type is unknown, it may create a type or region\n+  variable and use that as the type of an expression.\n+\n+  In the process of checking, various constraints will be placed on\n+  these type variables through the subtyping relationships requested\n+  through the `demand` module.  The `typeck::infer` module is in charge\n+  of resolving those constraints.\n+\n+- regionck: after main is complete, the regionck pass goes over all\n+  types looking for regions and making sure that they did not escape\n+  into places they are not in scope.  This may also influence the\n+  final assignments of the various region variables if there is some\n+  flexibility.\n+\n+- vtable: find and records the impls to use for each iface bound that\n+  appears on a type parameter.\n+\n+- writeback: writes the final types within a function body, replacing\n+  type variables with their final inferred types.  These final types\n+  are written into the `tcx.node_types` table, which should *never* contain\n+  any reference to a type variable.\n+\n+\n+*/\n+\n import astconv::{ast_conv, region_scope, empty_rscope, ast_ty_to_ty,\n                  in_anon_rscope};\n import collect::{methods}; // ccx.to_ty()"}, {"sha": "d61aa687511beece0fd976de311542aa903ac018", "filename": "src/rustc/middle/typeck/check/demand.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs?ref=564aa59a3ff1ec462f4be15041d89c2ac662f861", "previous_filename": "src/rustc/middle/typeck/demand.rs"}, {"sha": "27194934dbefaddbc9397982deefad19102e3800", "filename": "src/rustc/middle/typeck/check/regionck.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=564aa59a3ff1ec462f4be15041d89c2ac662f861", "patch": "@@ -15,7 +15,6 @@ the region scope `r`.\n \n import util::ppaux;\n import syntax::print::pprust;\n-import check::{fn_ctxt, methods, lookup_def};\n \n type rcx = @{fcx: @fn_ctxt, mut errors_reported: uint};\n type rvt = visit::vt<rcx>;", "previous_filename": "src/rustc/middle/typeck/regionck.rs"}, {"sha": "5201ce1b558ca96d77d9d01b1a2854778069944f", "filename": "src/rustc/middle/typeck/check/vtable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=564aa59a3ff1ec462f4be15041d89c2ac662f861", "previous_filename": "src/rustc/middle/typeck/vtable.rs"}, {"sha": "ba31e8a8c4025e30c08629a5235bfc09a75ea923", "filename": "src/rustc/middle/typeck/check/writeback.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs?ref=564aa59a3ff1ec462f4be15041d89c2ac662f861", "previous_filename": "src/rustc/middle/typeck/writeback.rs"}, {"sha": "702a04de8e2d29d404a3b2e6b5c3bc37e75577cb", "filename": "src/rustc/rustc.rc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/564aa59a3ff1ec462f4be15041d89c2ac662f861/src%2Frustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rc?ref=564aa59a3ff1ec462f4be15041d89c2ac662f861", "patch": "@@ -54,14 +54,14 @@ mod middle {\n     mod typeck {\n         mod check {\n             mod alt;\n+            mod vtable;\n+            mod writeback;\n+            mod regionck;\n+            mod demand;\n         }\n-        mod regionck;\n-        mod demand;\n-        mod infer;\n         mod astconv;\n+        mod infer;\n         mod collect;\n-        mod vtable;\n-        mod writeback;\n     }\n     mod check_loop;\n     mod check_alt;"}]}