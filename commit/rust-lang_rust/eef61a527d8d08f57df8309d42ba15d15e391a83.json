{"sha": "eef61a527d8d08f57df8309d42ba15d15e391a83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZjYxYTUyN2Q4ZDA4ZjU3ZGY4MzA5ZDQyYmExNWQxNWUzOTFhODM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-11T21:25:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-11T21:25:35Z"}, "message": "stdlib: Add addr_of() to the standard library", "tree": {"sha": "e632e34db2b6258df842cbc80e99d39436e72021", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e632e34db2b6258df842cbc80e99d39436e72021"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eef61a527d8d08f57df8309d42ba15d15e391a83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eef61a527d8d08f57df8309d42ba15d15e391a83", "html_url": "https://github.com/rust-lang/rust/commit/eef61a527d8d08f57df8309d42ba15d15e391a83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eef61a527d8d08f57df8309d42ba15d15e391a83/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6d774136b62b2df51555a325439126a29038da3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6d774136b62b2df51555a325439126a29038da3", "html_url": "https://github.com/rust-lang/rust/commit/b6d774136b62b2df51555a325439126a29038da3"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "8fcf331e0eb1902c2a7385f71feac8fc4ec541a9", "filename": "src/lib/ptr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eef61a527d8d08f57df8309d42ba15d15e391a83/src%2Flib%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef61a527d8d08f57df8309d42ba15d15e391a83/src%2Flib%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fptr.rs?ref=eef61a527d8d08f57df8309d42ba15d15e391a83", "patch": "@@ -1,8 +1,10 @@\n // Unsafe pointer utility functions.\n \n native \"rust-intrinsic\" mod rusti {\n+    fn addr_of[T](&T val) -> *T;\n     fn ptr_offset[T](*T ptr, uint count) -> *T;\n }\n \n+fn addr_of[T](&T val) -> *T { ret rusti::addr_of(val); }\n fn offset[T](*T ptr, uint count) -> *T { ret rusti::ptr_offset(ptr, count); }\n "}, {"sha": "f5179860373dac9bcc98d8c55dc1f9c496ed77d5", "filename": "src/rt/intrinsics/intrinsics.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eef61a527d8d08f57df8309d42ba15d15e391a83/src%2Frt%2Fintrinsics%2Fintrinsics.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/eef61a527d8d08f57df8309d42ba15d15e391a83/src%2Frt%2Fintrinsics%2Fintrinsics.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fintrinsics%2Fintrinsics.cpp?ref=eef61a527d8d08f57df8309d42ba15d15e391a83", "patch": "@@ -49,3 +49,9 @@ rust_intrinsic_cast(rust_task *task, void *retptr, type_desc *t1,\n     memmove(retptr, src, t1->size);\n }\n \n+extern \"C\" void\n+rust_intrinsic_addr_of(rust_task *task, void **retptr, type_desc *ty,\n+                       void *valptr) {\n+    *retptr = valptr;\n+}\n+"}, {"sha": "86307e3054a3f5aecdec8eb709fe882a1f949c6b", "filename": "src/rt/intrinsics/intrinsics.ll.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eef61a527d8d08f57df8309d42ba15d15e391a83/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in", "raw_url": "https://github.com/rust-lang/rust/raw/eef61a527d8d08f57df8309d42ba15d15e391a83/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in?ref=eef61a527d8d08f57df8309d42ba15d15e391a83", "patch": "@@ -137,6 +137,12 @@ declare void @upcall_fail(%struct.rust_task*, i8*, i8*, i32)\n \n declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture, i8* nocapture, i32, i32, i1) nounwind\n \n+define linkonce_odr void @rust_intrinsic_addr_of(%struct.rust_task* nocapture %task, i8** nocapture %retptr, %struct.type_desc* nocapture %ty, i8* %valptr) nounwind {\n+entry:\n+  store i8* %valptr, i8** %retptr, align 4, !tbaa !3\n+  ret void\n+}\n+\n !0 = metadata !{metadata !\"long\", metadata !1}\n !1 = metadata !{metadata !\"omnipotent char\", metadata !2}\n !2 = metadata !{metadata !\"Simple C/C++ TBAA\", null}"}]}