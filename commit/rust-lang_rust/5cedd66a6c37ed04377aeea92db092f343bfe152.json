{"sha": "5cedd66a6c37ed04377aeea92db092f343bfe152", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZWRkNjZhNmMzN2VkMDQzNzdhZWVhOTJkYjA5MmYzNDNiZmUxNTI=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-06-25T01:10:11Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-06-26T04:34:56Z"}, "message": "rustc: remove 3 dead functions in middle::ty.", "tree": {"sha": "7840e6a2c038c4c6acca2b308c09e6999ee03b4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7840e6a2c038c4c6acca2b308c09e6999ee03b4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cedd66a6c37ed04377aeea92db092f343bfe152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cedd66a6c37ed04377aeea92db092f343bfe152", "html_url": "https://github.com/rust-lang/rust/commit/5cedd66a6c37ed04377aeea92db092f343bfe152", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cedd66a6c37ed04377aeea92db092f343bfe152/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6db5126240b6420630553b930417fca10986d75d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6db5126240b6420630553b930417fca10986d75d", "html_url": "https://github.com/rust-lang/rust/commit/6db5126240b6420630553b930417fca10986d75d"}], "stats": {"total": 25, "additions": 2, "deletions": 23}, "files": [{"sha": "185a04bc5215c93429017841e8b3e52f34b6773c", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5cedd66a6c37ed04377aeea92db092f343bfe152/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cedd66a6c37ed04377aeea92db092f343bfe152/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=5cedd66a6c37ed04377aeea92db092f343bfe152", "patch": "@@ -85,7 +85,7 @@ use std::collections::{HashMap, HashSet};\n use syntax::abi;\n use syntax::ast::{CrateNum, DefId, ItemImpl, ItemTrait, LOCAL_CRATE};\n use syntax::ast::{MutImmutable, MutMutable, Name, NamedField, NodeId};\n-use syntax::ast::{StmtExpr, StmtSemi, StructField, UnnamedField, Visibility};\n+use syntax::ast::{StructField, UnnamedField, Visibility};\n use syntax::ast_util::{self, is_local, local_def};\n use syntax::attr::{self, AttrMetaMethods, SignedInt, UnsignedInt};\n use syntax::codemap::Span;\n@@ -1840,13 +1840,6 @@ pub enum BuiltinBound {\n     Sync,\n }\n \n-/// An existential bound that does not implement any traits.\n-pub fn region_existential_bound<'tcx>(r: ty::Region) -> ExistentialBounds<'tcx> {\n-    ty::ExistentialBounds { region_bound: r,\n-                            builtin_bounds: BuiltinBounds::empty(),\n-                            projection_bounds: Vec::new() }\n-}\n-\n impl CLike for BuiltinBound {\n     fn to_usize(&self) -> usize {\n         *self as usize\n@@ -5004,15 +4997,6 @@ pub fn expr_is_lval(tcx: &ctxt, expr: &ast::Expr) -> bool {\n     }\n }\n \n-pub fn stmt_node_id(s: &ast::Stmt) -> ast::NodeId {\n-    match s.node {\n-      ast::StmtDecl(_, id) | StmtExpr(_, id) | StmtSemi(_, id) => {\n-        return id;\n-      }\n-      ast::StmtMac(..) => panic!(\"unexpanded macro in trans\")\n-    }\n-}\n-\n pub fn field_idx_strict(tcx: &ctxt, name: ast::Name, fields: &[field])\n                      -> usize {\n     let mut i = 0;\n@@ -5025,11 +5009,6 @@ pub fn field_idx_strict(tcx: &ctxt, name: ast::Name, fields: &[field])\n               .collect::<Vec<String>>()));\n }\n \n-pub fn impl_or_trait_item_idx(id: ast::Name, trait_items: &[ImplOrTraitItem])\n-                              -> Option<usize> {\n-    trait_items.iter().position(|m| m.name() == id)\n-}\n-\n pub fn ty_sort_string(cx: &ctxt, ty: Ty) -> String {\n     match ty.sty {\n         TyBool | TyChar | TyInt(_) |"}, {"sha": "9abee1a3aaab6ce52150ffe7ec6d139aef30bec7", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cedd66a6c37ed04377aeea92db092f343bfe152/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cedd66a6c37ed04377aeea92db092f343bfe152/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=5cedd66a6c37ed04377aeea92db092f343bfe152", "patch": "@@ -128,7 +128,7 @@ impl<'cx, 'tcx, 'v> Visitor<'v> for WritebackCx<'cx, 'tcx> {\n             return;\n         }\n \n-        self.visit_node_id(ResolvingExpr(s.span), ty::stmt_node_id(s));\n+        self.visit_node_id(ResolvingExpr(s.span), ast_util::stmt_id(s));\n         visit::walk_stmt(self, s);\n     }\n "}]}