{"sha": "1ddbda28e38acba5f076ef7b92559bd941d842a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZGJkYTI4ZTM4YWNiYTVmMDc2ZWY3YjkyNTU5YmQ5NDFkODQyYTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-10T18:54:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-10T18:54:21Z"}, "message": "Auto merge of #1646 - RalfJung:rustup, r=RalfJung\n\nrustup", "tree": {"sha": "051c3e6d504526b46646c7ea73fa09a600d8c632", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/051c3e6d504526b46646c7ea73fa09a600d8c632"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ddbda28e38acba5f076ef7b92559bd941d842a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ddbda28e38acba5f076ef7b92559bd941d842a8", "html_url": "https://github.com/rust-lang/rust/commit/1ddbda28e38acba5f076ef7b92559bd941d842a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ddbda28e38acba5f076ef7b92559bd941d842a8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75ea76d6f5721dfe7525c818e0cd1d61ef90e464", "url": "https://api.github.com/repos/rust-lang/rust/commits/75ea76d6f5721dfe7525c818e0cd1d61ef90e464", "html_url": "https://github.com/rust-lang/rust/commit/75ea76d6f5721dfe7525c818e0cd1d61ef90e464"}, {"sha": "7bbd6bca7778210f6cddf8cc668d34bbd46f00dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bbd6bca7778210f6cddf8cc668d34bbd46f00dc", "html_url": "https://github.com/rust-lang/rust/commit/7bbd6bca7778210f6cddf8cc668d34bbd46f00dc"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "84526eacb7d8f01c16dee002af8cf6bf68bf75c3", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1 +1 @@\n-f0f68778f798d6d34649745b41770829b17ba5b8\n+39b841dfe36f90a7cd111e7f0c55f32594f6e578"}, {"sha": "3f1f67218fdb6033115ab8be0a8f60945d8bfec9", "filename": "src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -12,7 +12,7 @@ use crate::*;\n /// Details of premature program termination.\n pub enum TerminationInfo {\n     Exit(i64),\n-    Abort(Option<String>),\n+    Abort(String),\n     UnsupportedInIsolation(String),\n     ExperimentalUb { msg: String, url: String },\n     Deadlock,\n@@ -24,10 +24,8 @@ impl fmt::Display for TerminationInfo {\n         match self {\n             Exit(code) =>\n                 write!(f, \"the evaluated program completed with exit code {}\", code),\n-            Abort(None) =>\n-                write!(f, \"the evaluated program aborted execution\"),\n-            Abort(Some(msg)) =>\n-                write!(f, \"the evaluated program aborted execution: {}\", msg),\n+            Abort(msg) =>\n+                write!(f, \"{}\", msg),\n             UnsupportedInIsolation(msg) =>\n                 write!(f, \"{}\", msg),\n             ExperimentalUb { msg, .. } =>"}, {"sha": "4b9cad8420db8a616cd127f6d23a5e5ddb0470d9", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -391,8 +391,8 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n     }\n \n     #[inline(always)]\n-    fn abort(_ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx, !> {\n-        throw_machine_stop!(TerminationInfo::Abort(None))\n+    fn abort(_ecx: &mut InterpCx<'mir, 'tcx, Self>, msg: String) -> InterpResult<'tcx, !> {\n+        throw_machine_stop!(TerminationInfo::Abort(msg))\n     }\n \n     #[inline(always)]"}, {"sha": "d588e2962a1501bf48a49172f5f8541c6d8e37b0", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -149,7 +149,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     throw_machine_stop!(TerminationInfo::Exit(code.into()));\n                 }\n                 \"abort\" => {\n-                    throw_machine_stop!(TerminationInfo::Abort(None))\n+                    throw_machine_stop!(TerminationInfo::Abort(\"the program aborted execution\".to_owned()))\n                 }\n                 _ => throw_unsup_format!(\"can't call (diverging) foreign function: {}\", link_name),\n             },"}, {"sha": "956f3b5bde4fbde668edccc0dd0cf2e40704df9c", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -419,21 +419,21 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n \n             // Query type information\n-            \"assert_inhabited\" |\n             \"assert_zero_valid\" |\n             \"assert_uninit_valid\" => {\n                 let &[] = check_arg_count(args)?;\n                 let ty = instance.substs.type_at(0);\n                 let layout = this.layout_of(ty)?;\n                 // Abort here because the caller might not be panic safe.\n                 if layout.abi.is_uninhabited() {\n-                    throw_machine_stop!(TerminationInfo::Abort(Some(format!(\"attempted to instantiate uninhabited type `{}`\", ty))))\n+                    // Use this message even for the other intrinsics, as that's what codegen does\n+                    throw_machine_stop!(TerminationInfo::Abort(format!(\"aborted execution: attempted to instantiate uninhabited type `{}`\", ty)))\n                 }\n                 if intrinsic_name == \"assert_zero_valid\" && !layout.might_permit_raw_init(this, /*zero:*/ true).unwrap() {\n-                    throw_machine_stop!(TerminationInfo::Abort(Some(format!(\"attempted to zero-initialize type `{}`, which is invalid\", ty))))\n+                    throw_machine_stop!(TerminationInfo::Abort(format!(\"aborted execution: attempted to zero-initialize type `{}`, which is invalid\", ty)))\n                 }\n                 if intrinsic_name == \"assert_uninit_valid\" && !layout.might_permit_raw_init(this, /*zero:*/ false).unwrap() {\n-                    throw_machine_stop!(TerminationInfo::Abort(Some(format!(\"attempted to leave type `{}` uninitialized, which is invalid\", ty))))\n+                    throw_machine_stop!(TerminationInfo::Abort(format!(\"aborted execution: attempted to leave type `{}` uninitialized, which is invalid\", ty)))\n                 }\n             }\n "}, {"sha": "73286a1759baf35b6ba5770e5bbbed226f6572af", "filename": "tests/compile-fail/abort-terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fabort-terminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fabort-terminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fabort-terminator.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted\n+// error-pattern: the program aborted\n #![feature(unwind_attributes)]\n \n #[unwind(aborts)]"}, {"sha": "2337ff0f6c26c600dc3a5394857fcfae85cdf9f3", "filename": "tests/compile-fail/intrinsics/uninit_uninhabited_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fintrinsics%2Funinit_uninhabited_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fintrinsics%2Funinit_uninhabited_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Funinit_uninhabited_type.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted execution: attempted to instantiate uninhabited type `!`\n+// error-pattern: attempted to instantiate uninhabited type `!`\n #![feature(never_type)]\n \n #[allow(deprecated, invalid_value)]"}, {"sha": "098a8e01347f3c2379ac40495be32605d746fc21", "filename": "tests/compile-fail/intrinsics/zero_fn_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fintrinsics%2Fzero_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fintrinsics%2Fzero_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fzero_fn_ptr.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted execution: attempted to zero-initialize type `fn()`, which is invalid\n+// error-pattern: attempted to zero-initialize type `fn()`, which is invalid\n \n #[allow(deprecated, invalid_value)]\n fn main() {"}, {"sha": "b42c1aff1032410c1d598e059dd71b0f5e194ffc", "filename": "tests/compile-fail/panic/double_panic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted\n+// error-pattern: the program aborted\n \n struct Foo;\n impl Drop for Foo {"}, {"sha": "095d9e3d75b02f1b1710e6f01ca7ad4a3753b4c0", "filename": "tests/compile-fail/panic/panic_abort1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted execution\n+// error-pattern: the program aborted execution\n // compile-flags: -C panic=abort\n \n fn main() {"}, {"sha": "de177bc4e7167e19c2c09feb53be88aa636b7080", "filename": "tests/compile-fail/panic/panic_abort2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted execution\n+// error-pattern: the program aborted execution\n // compile-flags: -C panic=abort\n \n fn main() {"}, {"sha": "2d65da4fe3416702ebc14e3c6508ce2ebab5dcbc", "filename": "tests/compile-fail/panic/panic_abort3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted execution\n+// error-pattern: the program aborted execution\n // compile-flags: -C panic=abort\n \n fn main() {"}, {"sha": "41d32a604fede0d76f592c61496a6bb0a4622a3d", "filename": "tests/compile-fail/panic/panic_abort4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddbda28e38acba5f076ef7b92559bd941d842a8/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.rs?ref=1ddbda28e38acba5f076ef7b92559bd941d842a8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: the evaluated program aborted execution\n+// error-pattern: the program aborted execution\n // compile-flags: -C panic=abort\n \n fn main() {"}]}