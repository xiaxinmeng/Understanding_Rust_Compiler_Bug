{"sha": "653ffa845d70b26a49e227ae4445729c369c9f80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1M2ZmYTg0NWQ3MGIyNmE0OWUyMjdhZTQ0NDU3MjljMzY5YzlmODA=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@composition.al", "date": "2013-09-14T23:34:03Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@composition.al", "date": "2013-09-14T23:38:22Z"}, "message": "Kill off method impls made redundant by default methods.", "tree": {"sha": "5d7072830eed37f5e5f102d5040d22f2e5c06472", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d7072830eed37f5e5f102d5040d22f2e5c06472"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/653ffa845d70b26a49e227ae4445729c369c9f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/653ffa845d70b26a49e227ae4445729c369c9f80", "html_url": "https://github.com/rust-lang/rust/commit/653ffa845d70b26a49e227ae4445729c369c9f80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/653ffa845d70b26a49e227ae4445729c369c9f80/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf7e93ff2571140abf299212ec9ebc0fcd9944eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf7e93ff2571140abf299212ec9ebc0fcd9944eb", "html_url": "https://github.com/rust-lang/rust/commit/cf7e93ff2571140abf299212ec9ebc0fcd9944eb"}], "stats": {"total": 39, "additions": 0, "deletions": 39}, "files": [{"sha": "67c47093ff62ca04794a12743bf7057b50dcdc1e", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/653ffa845d70b26a49e227ae4445729c369c9f80/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/653ffa845d70b26a49e227ae4445729c369c9f80/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=653ffa845d70b26a49e227ae4445729c369c9f80", "patch": "@@ -519,20 +519,11 @@ impl Visitor<()> for IdVisitor {\n         visit::walk_stmt(self, statement, env)\n     }\n \n-    // XXX: Default\n-    fn visit_arm(&mut self, arm: &Arm, env: ()) {\n-        visit::walk_arm(self, arm, env)\n-    }\n-\n     fn visit_pat(&mut self, pattern: @Pat, env: ()) {\n         (self.visit_callback)(pattern.id);\n         visit::walk_pat(self, pattern, env)\n     }\n \n-    // XXX: Default\n-    fn visit_decl(&mut self, declaration: @Decl, env: ()) {\n-        visit::walk_decl(self, declaration, env)\n-    }\n \n     fn visit_expr(&mut self, expression: @Expr, env: ()) {\n         {\n@@ -545,11 +536,6 @@ impl Visitor<()> for IdVisitor {\n         visit::walk_expr(self, expression, env)\n     }\n \n-    // XXX: Default\n-    fn visit_expr_post(&mut self, _: @Expr, _: ()) {\n-        // Empty!\n-    }\n-\n     fn visit_ty(&mut self, typ: &Ty, env: ()) {\n         (self.visit_callback)(typ.id);\n         match typ.node {\n@@ -612,31 +598,6 @@ impl Visitor<()> for IdVisitor {\n         }\n     }\n \n-    // XXX: Default\n-    fn visit_ty_method(&mut self, type_method: &TypeMethod, env: ()) {\n-        visit::walk_ty_method(self, type_method, env)\n-    }\n-\n-    // XXX: Default\n-    fn visit_trait_method(&mut self, trait_method: &trait_method, env: ()) {\n-        visit::walk_trait_method(self, trait_method, env)\n-    }\n-\n-    // XXX: Default\n-    fn visit_struct_def(&mut self,\n-                        struct_definition: @struct_def,\n-                        identifier: Ident,\n-                        generics: &Generics,\n-                        node_id: NodeId,\n-                        env: ()) {\n-        visit::walk_struct_def(self,\n-                                struct_definition,\n-                                identifier,\n-                                generics,\n-                                node_id,\n-                                env)\n-    }\n-\n     fn visit_struct_field(&mut self, struct_field: @struct_field, env: ()) {\n         (self.visit_callback)(struct_field.node.id);\n         visit::walk_struct_field(self, struct_field, env)"}]}