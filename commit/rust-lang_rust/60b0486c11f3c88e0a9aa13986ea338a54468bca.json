{"sha": "60b0486c11f3c88e0a9aa13986ea338a54468bca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYjA0ODZjMTFmM2M4OGUwYTlhYTEzOTg2ZWEzMzhhNTQ0NjhiY2E=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-07-28T06:38:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-29T03:30:28Z"}, "message": "Make circular buffer use only power-of-two sizes, cheaper arithmetic.", "tree": {"sha": "b73975eac835da03a61145a73b17f72c99a86d1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b73975eac835da03a61145a73b17f72c99a86d1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60b0486c11f3c88e0a9aa13986ea338a54468bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60b0486c11f3c88e0a9aa13986ea338a54468bca", "html_url": "https://github.com/rust-lang/rust/commit/60b0486c11f3c88e0a9aa13986ea338a54468bca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60b0486c11f3c88e0a9aa13986ea338a54468bca/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7864697854fc07192d537949f7712776d652156", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7864697854fc07192d537949f7712776d652156", "html_url": "https://github.com/rust-lang/rust/commit/d7864697854fc07192d537949f7712776d652156"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "ee9cc58e9a7a0ac7ead1accc2be8555206539910", "filename": "src/rt/circular_buffer.cpp", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/60b0486c11f3c88e0a9aa13986ea338a54468bca/src%2Frt%2Fcircular_buffer.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/60b0486c11f3c88e0a9aa13986ea338a54468bca/src%2Frt%2Fcircular_buffer.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fcircular_buffer.cpp?ref=60b0486c11f3c88e0a9aa13986ea338a54468bca", "patch": "@@ -4,6 +4,14 @@\n \n #include \"rust_internal.h\"\n \n+bool\n+is_power_of_two(size_t value) {\n+    if (value > 0) {\n+        return (value & (value - 1)) == 0;\n+    }\n+    return false;\n+}\n+\n circular_buffer::circular_buffer(rust_dom *dom, size_t unit_sz) :\n     dom(dom),\n     _buffer_sz(INITIAL_CIRCULAR_BUFFFER_SIZE_IN_UNITS * unit_sz),\n@@ -37,9 +45,10 @@ circular_buffer::~circular_buffer() {\n void\n circular_buffer::transfer(void *dst) {\n     I(dom, dst);\n+    I(dom, is_power_of_two(_buffer_sz));\n     uint8_t *ptr = (uint8_t *) dst;\n     for (size_t i = 0; i < _unread; i += _unit_sz) {\n-        memcpy(&ptr[i], &_buffer[(_next + i) % _buffer_sz], _unit_sz);\n+        memcpy(&ptr[i], &_buffer[(_next + i) & (_buffer_sz - 1)], _unit_sz);\n     }\n }\n \n@@ -67,11 +76,12 @@ circular_buffer::enqueue(void *src) {\n              \"unread: %d, buffer_sz: %d, unit_sz: %d\",\n              _unread, _buffer_sz, _unit_sz);\n \n+    I(dom, is_power_of_two(_buffer_sz));\n     I(dom, _unread < _buffer_sz);\n     I(dom, _unread + _unit_sz <= _buffer_sz);\n \n     // Copy data\n-    size_t i = (_next + _unread) % _buffer_sz;\n+    size_t i = (_next + _unread) & (_buffer_sz - 1);\n     memcpy(&_buffer[i], src, _unit_sz);\n     _unread += _unit_sz;\n "}, {"sha": "3d11b37fb781e606ec79bd267415a085c5bc970c", "filename": "src/rt/circular_buffer.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60b0486c11f3c88e0a9aa13986ea338a54468bca/src%2Frt%2Fcircular_buffer.h", "raw_url": "https://github.com/rust-lang/rust/raw/60b0486c11f3c88e0a9aa13986ea338a54468bca/src%2Frt%2Fcircular_buffer.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fcircular_buffer.h?ref=60b0486c11f3c88e0a9aa13986ea338a54468bca", "patch": "@@ -20,7 +20,9 @@ circular_buffer : public dom_owned<circular_buffer> {\n     bool is_empty();\n \n private:\n-    // Size of the buffer in bytes.\n+    // Size of the buffer in bytes, should always be a power of two so that\n+    // modulo arithmetic (x % _buffer_sz) can optimized away with\n+    // (x & (_buffer_sz - 1)).\n     size_t _buffer_sz;\n \n     // Size of the data unit in bytes."}]}