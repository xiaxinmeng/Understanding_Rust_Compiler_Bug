{"sha": "530d866aef047fa0f20a655676fd0b3ff4cbf86b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMGQ4NjZhZWYwNDdmYTBmMjBhNjU1Njc2ZmQwYjNmZjRjYmY4NmI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-10-10T10:09:01Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-18T15:43:48Z"}, "message": "Apply review comments", "tree": {"sha": "4ea67a6ed746ad68f458de5e8060f0e91f0c12b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ea67a6ed746ad68f458de5e8060f0e91f0c12b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/530d866aef047fa0f20a655676fd0b3ff4cbf86b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/530d866aef047fa0f20a655676fd0b3ff4cbf86b", "html_url": "https://github.com/rust-lang/rust/commit/530d866aef047fa0f20a655676fd0b3ff4cbf86b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/530d866aef047fa0f20a655676fd0b3ff4cbf86b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "html_url": "https://github.com/rust-lang/rust/commit/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "40bd6f43c61f01ff7b1e56ee74542421fbdea579", "filename": "src/doc/rustdoc/src/command-line-arguments.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/530d866aef047fa0f20a655676fd0b3ff4cbf86b/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/530d866aef047fa0f20a655676fd0b3ff4cbf86b/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md?ref=530d866aef047fa0f20a655676fd0b3ff4cbf86b", "patch": "@@ -374,7 +374,7 @@ Note that the theme's name will be the file name without its extension. So if yo\n ### `check-theme`: check if your themes implement all the required rules\n \n This flag allows you to check if your themes implement the necessary CSS rules. To put it more\n-simply, when adding a new theme, it needs to implements all the CSS rules present in the \"light\"\n+simply, when adding a new theme, it needs to implement all the CSS rules present in the \"light\"\n CSS theme.\n \n You can use this flag like this:"}, {"sha": "8249e69e9a74f65352c23d387ae8210c6ce98fa6", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/530d866aef047fa0f20a655676fd0b3ff4cbf86b/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/530d866aef047fa0f20a655676fd0b3ff4cbf86b/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=530d866aef047fa0f20a655676fd0b3ff4cbf86b", "patch": "@@ -1,6 +1,7 @@\n use std::path::PathBuf;\n \n use crate::externalfiles::ExternalHtml;\n+use crate::html::escape::Escape;\n use crate::html::render::ensure_trailing_slash;\n use crate::html::format::{Buffer, Print};\n \n@@ -166,10 +167,11 @@ pub fn render<T: Print, S: Print>(\n     themes = themes.iter()\n                    .filter_map(|t| t.file_stem())\n                    .filter_map(|t| t.to_str())\n-                   .map(|t| format!(r#\"<link rel=\"stylesheet\" type=\"text/css\" href=\"{}{}{}.css\">\"#,\n-                                    static_root_path,\n-                                    t,\n-                                    page.resource_suffix))\n+                   .map(|t| format!(r#\"<link rel=\"stylesheet\" type=\"text/css\" href=\"{}.css\">\"#,\n+                                    Escape(&format!(\"{}{}{}\",\n+                                                    static_root_path,\n+                                                    t,\n+                                                    page.resource_suffix))))\n                    .collect::<String>(),\n     suffix=page.resource_suffix,\n     static_extra_scripts=page.static_extra_scripts.iter().map(|e| {"}, {"sha": "1207c5e3bc58dfae106fc5fd859c90d18302521e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/530d866aef047fa0f20a655676fd0b3ff4cbf86b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/530d866aef047fa0f20a655676fd0b3ff4cbf86b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=530d866aef047fa0f20a655676fd0b3ff4cbf86b", "patch": "@@ -569,9 +569,7 @@ fn write_shared(\n         let content = try_err!(fs::read(&entry), &entry);\n         let theme = try_none!(try_none!(entry.file_stem(), &entry).to_str(), &entry);\n         let extension = try_none!(try_none!(entry.extension(), &entry).to_str(), &entry);\n-        cx.shared.fs.write(\n-            cx.path(&format!(\"{}.{}\", Escape(theme), extension)),\n-            content.as_slice())?;\n+        cx.shared.fs.write(cx.path(&format!(\"{}.{}\", theme, extension)), content.as_slice())?;\n         themes.insert(theme.to_owned());\n     }\n \n@@ -637,7 +635,7 @@ themePicker.onclick = switchThemeButtonState;\n themePicker.onblur = handleThemeButtonsBlur;\n {}.forEach(function(item) {{\n     var but = document.createElement('button');\n-    but.innerHTML = item;\n+    but.textContent = item;\n     but.onclick = function(el) {{\n         switchTheme(currentTheme, mainTheme, item, true);\n     }};"}]}