{"sha": "7e378edb39df4c5499fc37103feeeddc8e3e6269", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMzc4ZWRiMzlkZjRjNTQ5OWZjMzcxMDNmZWVlZGRjOGUzZTYyNjk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-10T16:42:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-10T16:42:45Z"}, "message": "rollup merge of #22094: alkor/cleanup-show-string\n\nRename several remaining `Show`s to Debug, `String`s to Display (mostly in comments and docs).\nUpdate reference.md:\n - derive() no longer supports Zero trait\n - derive() now supports Copy trait", "tree": {"sha": "af12fb440fe1696ee71b4256c082996ab4787205", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af12fb440fe1696ee71b4256c082996ab4787205"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e378edb39df4c5499fc37103feeeddc8e3e6269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e378edb39df4c5499fc37103feeeddc8e3e6269", "html_url": "https://github.com/rust-lang/rust/commit/7e378edb39df4c5499fc37103feeeddc8e3e6269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e378edb39df4c5499fc37103feeeddc8e3e6269/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0568422a27ce4dd9a7f2b1c71710700be54a1da4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0568422a27ce4dd9a7f2b1c71710700be54a1da4", "html_url": "https://github.com/rust-lang/rust/commit/0568422a27ce4dd9a7f2b1c71710700be54a1da4"}, {"sha": "34afe5e193182a0029abe1ae8258f79f4cd56cd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/34afe5e193182a0029abe1ae8258f79f4cd56cd9", "html_url": "https://github.com/rust-lang/rust/commit/34afe5e193182a0029abe1ae8258f79f4cd56cd9"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "1b1913ea65ea5635e2c2891b7614316fe4d33341", "filename": "src/doc/reference.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -2356,8 +2356,8 @@ Supported traits for `derive` are:\n * `FromPrimitive`, to create an instance from a numeric primitive.\n * `Hash`, to iterate over the bytes in a data type.\n * `Rand`, to create a random instance of a data type.\n-* `Show`, to format a value using the `{}` formatter.\n-* `Zero`, to create a zero instance of a numeric data type.\n+* `Debug`, to format a value using the `{:?}` formatter.\n+* `Copy`, for \"Plain Old Data\" types which can be copied by simply moving bits.\n \n ### Compiler Features\n "}, {"sha": "462b6771b4a9af77a50d635857475953a445f1e8", "filename": "src/libcore/any.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -27,7 +27,7 @@\n //! # Examples\n //!\n //! Consider a situation where we want to log out a value passed to a function.\n-//! We know the value we're working on implements Show, but we don't know its\n+//! We know the value we're working on implements Debug, but we don't know its\n //! concrete type.  We want to give special treatment to certain types: in this\n //! case printing out the length of String values prior to their value.\n //! We don't know the concrete type of our value at compile time, so we need to"}, {"sha": "72832cb946680c07e1619408d702785ae9ccbcb1", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -195,7 +195,7 @@ pub struct Matches {\n }\n \n /// The type returned when the command line does not conform to the\n-/// expected format. Use the `Show` implementation to output detailed\n+/// expected format. Use the `Debug` implementation to output detailed\n /// information.\n #[derive(Clone, PartialEq, Eq, Debug)]\n pub enum Fail {\n@@ -545,7 +545,7 @@ impl Fail {\n     /// Convert a `Fail` enum into an error string.\n     #[unstable(feature = \"rustc_private\")]\n     #[deprecated(since = \"1.0.0\",\n-                 reason = \"use `fmt::String` (`{}` format specifier)\")]\n+                 reason = \"use `fmt::Display` (`{}` format specifier)\")]\n     pub fn to_err_msg(self) -> String {\n         self.to_string()\n     }\n@@ -579,7 +579,7 @@ impl fmt::Display for Fail {\n /// `opt_str`, etc. to interrogate results.\n /// # Panics\n ///\n-/// Returns `Err(Fail)` on failure: use the `Show` implementation of `Fail` to display\n+/// Returns `Err(Fail)` on failure: use the `Debug` implementation of `Fail` to display\n /// information about it.\n pub fn getopts(args: &[String], optgrps: &[OptGroup]) -> Result {\n     let opts: Vec<Opt> = optgrps.iter().map(|x| x.long_to_short()).collect();"}, {"sha": "97e6517a61517b6d8be4a426934b72152f6a22a5", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -70,7 +70,7 @@ use arena::TypedArena;\n use std::borrow::{BorrowFrom, Cow};\n use std::cell::{Cell, RefCell};\n use std::cmp;\n-use std::fmt::{self, Show};\n+use std::fmt;\n use std::hash::{Hash, Writer, SipHasher, Hasher};\n use std::mem;\n use std::ops;"}, {"sha": "e916b63eb8dc7f9b9ee96ce256da768f1c6215b9", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -10,7 +10,7 @@\n \n //! HTML formatting module\n //!\n-//! This module contains a large number of `fmt::String` implementations for\n+//! This module contains a large number of `fmt::Display` implementations for\n //! various types in `rustdoc::clean`. These implementations all currently\n //! assume that HTML output is desired, although it may be possible to redesign\n //! them in the future to instead emit any format desired."}, {"sha": "daa358647d8e6bec3bcea870fb089d3f74217046", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -1032,7 +1032,7 @@ pub fn as_pretty_json<T>(t: &T) -> AsPrettyJson<T> {\n \n impl Json {\n     /// Borrow this json object as a pretty object to generate a pretty\n-    /// representation for it via `Show`.\n+    /// representation for it via `Display`.\n     pub fn pretty(&self) -> PrettyJson {\n         PrettyJson { inner: self }\n     }\n@@ -3540,7 +3540,7 @@ mod tests {\n     fn test_hashmap_with_enum_key() {\n         use std::collections::HashMap;\n         use json;\n-        #[derive(RustcEncodable, Eq, Hash, PartialEq, RustcDecodable, Show)]\n+        #[derive(RustcEncodable, Eq, Hash, PartialEq, RustcDecodable, Debug)]\n         enum Enum {\n             Foo,\n             #[allow(dead_code)]"}, {"sha": "17cfe1c82972f33c6a7a1d30d166bcafee15c82d", "filename": "src/libstd/old_path/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibstd%2Fold_path%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibstd%2Fold_path%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_path%2Fmod.rs?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -228,7 +228,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     /// ```\n     fn into_vec(self) -> Vec<u8>;\n \n-    /// Returns an object that implements `Show` for printing paths\n+    /// Returns an object that implements `Display` for printing paths\n     ///\n     /// # Example\n     ///\n@@ -244,7 +244,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n         Display{ path: self, filename: false }\n     }\n \n-    /// Returns an object that implements `Show` for printing filenames\n+    /// Returns an object that implements `Display` for printing filenames\n     ///\n     /// If there is no filename, nothing will be printed.\n     ///"}, {"sha": "5979d339e17a46263cf9abb3cec2626b555ec9a8", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e378edb39df4c5499fc37103feeeddc8e3e6269/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=7e378edb39df4c5499fc37103feeeddc8e3e6269", "patch": "@@ -64,7 +64,6 @@ use parse::token;\n use ptr::P;\n \n use std::fmt;\n-use std::fmt::Show;\n use std::num::Int;\n use std::rc::Rc;\n use serialize::{Encodable, Decodable, Encoder, Decoder};"}]}