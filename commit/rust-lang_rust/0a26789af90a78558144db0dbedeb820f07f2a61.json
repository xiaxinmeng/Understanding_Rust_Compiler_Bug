{"sha": "0a26789af90a78558144db0dbedeb820f07f2a61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMjY3ODlhZjkwYTc4NTU4MTQ0ZGIwZGJlZGViODIwZjA3ZjJhNjE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-04-25T21:03:45Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-04-25T21:03:45Z"}, "message": "Make `-Z allow-features` work for stdlib features", "tree": {"sha": "591c7a6f54c53654c5dbc317166f5a67b3d7e64f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/591c7a6f54c53654c5dbc317166f5a67b3d7e64f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a26789af90a78558144db0dbedeb820f07f2a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a26789af90a78558144db0dbedeb820f07f2a61", "html_url": "https://github.com/rust-lang/rust/commit/0a26789af90a78558144db0dbedeb820f07f2a61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a26789af90a78558144db0dbedeb820f07f2a61/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd31c392f286d61caac0babee68c900cdaa8b504", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd31c392f286d61caac0babee68c900cdaa8b504", "html_url": "https://github.com/rust-lang/rust/commit/bd31c392f286d61caac0babee68c900cdaa8b504"}], "stats": {"total": 54, "additions": 35, "deletions": 19}, "files": [{"sha": "5a92e7fefab6c08050987a53a2c892c1b1663667", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=0a26789af90a78558144db0dbedeb820f07f2a61", "patch": "@@ -2258,32 +2258,32 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n                 continue;\n             }\n \n-            if let Some((.., set)) = ACTIVE_FEATURES.iter().find(|f| name == f.0) {\n-                if let Some(allowed) = allow_features.as_ref() {\n-                    if allowed.iter().find(|f| *f == name.as_str()).is_none() {\n-                        span_err!(span_handler, mi.span(), E0725,\n-                                  \"the feature `{}` is not in the list of allowed features\",\n-                                  name);\n-                        continue;\n-                    }\n-                }\n-\n-                set(&mut features, mi.span());\n-                features.declared_lang_features.push((name, mi.span(), None));\n-                continue\n-            }\n-\n             let removed = REMOVED_FEATURES.iter().find(|f| name == f.0);\n             let stable_removed = STABLE_REMOVED_FEATURES.iter().find(|f| name == f.0);\n             if let Some((.., reason)) = removed.or(stable_removed) {\n                 feature_removed(span_handler, mi.span(), *reason);\n-                continue\n+                continue;\n             }\n \n             if let Some((_, since, ..)) = ACCEPTED_FEATURES.iter().find(|f| name == f.0) {\n                 let since = Some(Symbol::intern(since));\n                 features.declared_lang_features.push((name, mi.span(), since));\n-                continue\n+                continue;\n+            }\n+\n+            if let Some(allowed) = allow_features.as_ref() {\n+                if allowed.iter().find(|f| *f == name.as_str()).is_none() {\n+                    span_err!(span_handler, mi.span(), E0725,\n+                              \"the feature `{}` is not in the list of allowed features\",\n+                              name);\n+                    continue;\n+                }\n+            }\n+\n+            if let Some((.., set)) = ACTIVE_FEATURES.iter().find(|f| name == f.0) {\n+                set(&mut features, mi.span());\n+                features.declared_lang_features.push((name, mi.span(), None));\n+                continue;\n             }\n \n             features.declared_lib_features.push((name, mi.span()));"}, {"sha": "784a1d2697d672b7816b3c42efab2c0bee0f7c13", "filename": "src/test/ui/feature-gate/allow-features-empty.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features-empty.rs?ref=0a26789af90a78558144db0dbedeb820f07f2a61", "patch": "@@ -7,4 +7,6 @@\n \n #![feature(lang_items)] //~ ERROR\n \n+#![feature(unknown_stdlib_feature)] //~ ERROR\n+\n fn main() {}"}, {"sha": "ab41422ed05b858851ccd2499ad9712e258488e5", "filename": "src/test/ui/feature-gate/allow-features-empty.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features-empty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features-empty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features-empty.stderr?ref=0a26789af90a78558144db0dbedeb820f07f2a61", "patch": "@@ -16,6 +16,12 @@ error[E0725]: the feature `lang_items` is not in the list of allowed features\n LL | #![feature(lang_items)]\n    |            ^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error[E0725]: the feature `unknown_stdlib_feature` is not in the list of allowed features\n+  --> $DIR/allow-features-empty.rs:10:12\n+   |\n+LL | #![feature(unknown_stdlib_feature)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0725`."}, {"sha": "de3439a5b628f1868d81564a63019968dddbedb9", "filename": "src/test/ui/feature-gate/allow-features.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features.rs?ref=0a26789af90a78558144db0dbedeb820f07f2a61", "patch": "@@ -7,4 +7,6 @@\n \n #![feature(lang_items)]\n \n+#![feature(unknown_stdlib_feature)] //~ ERROR\n+\n fn main() {}"}, {"sha": "5b39a6f053bde479da20e4973a96897903561119", "filename": "src/test/ui/feature-gate/allow-features.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a26789af90a78558144db0dbedeb820f07f2a61/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fallow-features.stderr?ref=0a26789af90a78558144db0dbedeb820f07f2a61", "patch": "@@ -4,6 +4,12 @@ error[E0725]: the feature `rustc_const_unstable` is not in the list of allowed f\n LL | #![feature(rustc_const_unstable)]\n    |            ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error[E0725]: the feature `unknown_stdlib_feature` is not in the list of allowed features\n+  --> $DIR/allow-features.rs:10:12\n+   |\n+LL | #![feature(unknown_stdlib_feature)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0725`."}]}