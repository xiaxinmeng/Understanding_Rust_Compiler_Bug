{"sha": "1ee24d31e139683a93c6afa93689f5a4122341be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZTI0ZDMxZTEzOTY4M2E5M2M2YWZhOTM2ODlmNWE0MTIyMzQxYmU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-15T10:18:27Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-15T10:18:27Z"}, "message": "Make tuples constructable", "tree": {"sha": "2a052b7fcc6e86281378ebe6f682d0c5e0bd3070", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a052b7fcc6e86281378ebe6f682d0c5e0bd3070"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ee24d31e139683a93c6afa93689f5a4122341be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee24d31e139683a93c6afa93689f5a4122341be", "html_url": "https://github.com/rust-lang/rust/commit/1ee24d31e139683a93c6afa93689f5a4122341be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ee24d31e139683a93c6afa93689f5a4122341be/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29ea87542f8d3996e2bde9a406c4bf7b2ac68af4", "url": "https://api.github.com/repos/rust-lang/rust/commits/29ea87542f8d3996e2bde9a406c4bf7b2ac68af4", "html_url": "https://github.com/rust-lang/rust/commit/29ea87542f8d3996e2bde9a406c4bf7b2ac68af4"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "8f7dbd184c307e2c6eb1879d5a2fc9e48fc89397", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1ee24d31e139683a93c6afa93689f5a4122341be/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ee24d31e139683a93c6afa93689f5a4122341be/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=1ee24d31e139683a93c6afa93689f5a4122341be", "patch": "@@ -499,13 +499,23 @@ fn parse_ty(p: &parser) -> @ast::ty {\n         t = ast::ty_machine(ast::ty_f64);\n     } else if (p.peek() == token::LPAREN) {\n         p.bump();\n-        alt p.peek() {\n-          token::RPAREN. { hi = p.get_hi_pos(); p.bump(); t = ast::ty_nil; }\n-          _ {\n-            t = parse_ty(p).node;\n+        if p.peek() == token::RPAREN {\n+            hi = p.get_hi_pos();\n+            p.bump();\n+            t = ast::ty_nil;\n+        } else {\n+            let ts = ~[parse_ty(p)];\n+            while p.peek() == token::COMMA {\n+                p.bump();\n+                ts += ~[parse_ty(p)];\n+            }\n+            if ivec::len(ts) == 1u {\n+                t = ts.(0).node;\n+            } else {\n+                t = ast::ty_tup(ts);\n+            }\n             hi = p.get_hi_pos();\n             expect(p, token::RPAREN);\n-          }\n         }\n     } else if (p.peek() == token::AT) {\n         p.bump();\n@@ -748,19 +758,24 @@ fn parse_bottom_expr(p: &parser) -> @ast::expr {\n     let ex: ast::expr_;\n     if p.peek() == token::LPAREN {\n         p.bump();\n-        alt p.peek() {\n-          token::RPAREN. {\n+        if p.peek() == token::RPAREN {\n             hi = p.get_hi_pos();\n             p.bump();\n             let lit = @spanned(lo, hi, ast::lit_nil);\n             ret mk_expr(p, lo, hi, ast::expr_lit(lit));\n-          }\n-          _ {/* fall through */ }\n         }\n-        let e = parse_expr(p);\n+        let es = ~[parse_expr(p)];\n+        while p.peek() == token::COMMA {\n+            p.bump();\n+            es += ~[parse_expr(p)];\n+        }\n         hi = p.get_hi_pos();\n         expect(p, token::RPAREN);\n-        ret mk_expr(p, lo, hi, e.node);\n+        if ivec::len(es) == 1u {\n+            ret mk_expr(p, lo, hi, es.(0).node);\n+        } else {\n+            ret mk_expr(p, lo, hi, ast::expr_tup(es));\n+        }\n     } else if (p.peek() == token::LBRACE) {\n         p.bump();\n         if is_word(p, \"mutable\") ||"}]}