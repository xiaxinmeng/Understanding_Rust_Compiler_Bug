{"sha": "1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNDhhZTI5YTExZjVlNGVlMTg4ZGRlMGQzYmEzOWJlMmIwNWQ4ZWQ=", "commit": {"author": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2018-06-06T06:52:38Z"}, "committer": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2018-06-06T06:52:38Z"}, "message": "append unused variables with _", "tree": {"sha": "36598fde59ad42f6ef750dd4e7cac547bb7392d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36598fde59ad42f6ef750dd4e7cac547bb7392d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed", "html_url": "https://github.com/rust-lang/rust/commit/1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8fd74a11d66849c0b5b737d3bbe0cf121f8908e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8fd74a11d66849c0b5b737d3bbe0cf121f8908e", "html_url": "https://github.com/rust-lang/rust/commit/e8fd74a11d66849c0b5b737d3bbe0cf121f8908e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0c7f70a578a2687477b4fe12e1ac3144f987bf11", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=1048ae29a11f5e4ee188dde0d3ba39be2b05d8ed", "patch": "@@ -335,7 +335,7 @@ enum BadTestSignature {\n fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     let has_test_attr = attr::contains_name(&i.attrs, \"test\");\n \n-    fn has_test_signature(cx: &TestCtxt, i: &ast::Item) -> HasTestSignature {\n+    fn has_test_signature(_cx: &TestCtxt, i: &ast::Item) -> HasTestSignature {\n         let has_should_panic_attr = attr::contains_name(&i.attrs, \"should_panic\");\n         match i.node {\n             ast::ItemKind::Fn(ref decl, _, _, _, ref generics, _) => {\n@@ -394,9 +394,9 @@ fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     let has_bench_attr = attr::contains_name(&i.attrs, \"bench\");\n \n-    fn has_bench_signature(cx: &TestCtxt, i: &ast::Item) -> bool {\n+    fn has_bench_signature(_cx: &TestCtxt, i: &ast::Item) -> bool {\n         match i.node {\n-            ast::ItemKind::Fn(ref decl, _, _, _, ref generics, _) => {\n+            ast::ItemKind::Fn(ref decl, _, _, _, _, _) => {\n                 // NB: inadequate check, but we're running\n                 // well before resolve, can't get too deep.\n                 decl.inputs.len() == 1"}]}