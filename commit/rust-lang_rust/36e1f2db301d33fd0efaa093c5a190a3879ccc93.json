{"sha": "36e1f2db301d33fd0efaa093c5a190a3879ccc93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZTFmMmRiMzAxZDMzZmQwZWZhYTA5M2M1YTE5MGEzODc5Y2NjOTM=", "commit": {"author": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-07-20T15:20:37Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-21T16:55:04Z"}, "message": "Get rid of few warnings in tests", "tree": {"sha": "83e9f0c3ff9523a7f6d5de7e2c5513a047988e2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83e9f0c3ff9523a7f6d5de7e2c5513a047988e2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36e1f2db301d33fd0efaa093c5a190a3879ccc93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36e1f2db301d33fd0efaa093c5a190a3879ccc93", "html_url": "https://github.com/rust-lang/rust/commit/36e1f2db301d33fd0efaa093c5a190a3879ccc93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36e1f2db301d33fd0efaa093c5a190a3879ccc93/comments", "author": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfacef532d61b1ab3cefb4164faa77b290f9abc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfacef532d61b1ab3cefb4164faa77b290f9abc5", "html_url": "https://github.com/rust-lang/rust/commit/dfacef532d61b1ab3cefb4164faa77b290f9abc5"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "f55a1ca62f72f06ef7e91f37fb0f92427c7b7e6e", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/36e1f2db301d33fd0efaa093c5a190a3879ccc93/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e1f2db301d33fd0efaa093c5a190a3879ccc93/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=36e1f2db301d33fd0efaa093c5a190a3879ccc93", "patch": "@@ -548,7 +548,7 @@ mod tests {\n         from: uint, to: uint, label: &'static str\n     }\n \n-    fn Edge(from: uint, to: uint, label: &'static str) -> Edge {\n+    fn edge(from: uint, to: uint, label: &'static str) -> Edge {\n         Edge { from: from, to: to, label: label }\n     }\n \n@@ -723,7 +723,7 @@ r#\"digraph single_node {\n     fn single_edge() {\n         let labels : Trivial = UnlabelledNodes(2);\n         let result = test_input(LabelledGraph::new(\"single_edge\", labels,\n-                                                   vec!(Edge(0, 1, \"E\"))));\n+                                                   vec!(edge(0, 1, \"E\"))));\n         assert_eq!(result.unwrap().as_slice(),\n r#\"digraph single_edge {\n     N0[label=\"N0\"];\n@@ -737,7 +737,7 @@ r#\"digraph single_edge {\n     fn single_cyclic_node() {\n         let labels : Trivial = UnlabelledNodes(1);\n         let r = test_input(LabelledGraph::new(\"single_cyclic_node\", labels,\n-                                              vec!(Edge(0, 0, \"E\"))));\n+                                              vec!(edge(0, 0, \"E\"))));\n         assert_eq!(r.unwrap().as_slice(),\n r#\"digraph single_cyclic_node {\n     N0[label=\"N0\"];\n@@ -751,8 +751,8 @@ r#\"digraph single_cyclic_node {\n         let labels = AllNodesLabelled(vec!(\"{x,y}\", \"{x}\", \"{y}\", \"{}\"));\n         let r = test_input(LabelledGraph::new(\n             \"hasse_diagram\", labels,\n-            vec!(Edge(0, 1, \"\"), Edge(0, 2, \"\"),\n-                 Edge(1, 3, \"\"), Edge(2, 3, \"\"))));\n+            vec!(edge(0, 1, \"\"), edge(0, 2, \"\"),\n+                 edge(1, 3, \"\"), edge(2, 3, \"\"))));\n         assert_eq!(r.unwrap().as_slice(),\n r#\"digraph hasse_diagram {\n     N0[label=\"{x,y}\"];\n@@ -785,8 +785,8 @@ r#\"digraph hasse_diagram {\n \n         let g = LabelledGraphWithEscStrs::new(\n             \"syntax_tree\", labels,\n-            vec!(Edge(0, 1, \"then\"), Edge(0, 2, \"else\"),\n-                 Edge(1, 3, \";\"),    Edge(2, 3, \";\"   )));\n+            vec!(edge(0, 1, \"then\"), edge(0, 2, \"else\"),\n+                 edge(1, 3, \";\"),    edge(2, 3, \";\"   )));\n \n         render(&g, &mut writer).unwrap();\n         let mut r = BufReader::new(writer.get_ref());"}, {"sha": "46e2ca03ef6ed5b6f71a7ab05153a608f8574411", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/36e1f2db301d33fd0efaa093c5a190a3879ccc93/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e1f2db301d33fd0efaa093c5a190a3879ccc93/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=36e1f2db301d33fd0efaa093c5a190a3879ccc93", "patch": "@@ -842,7 +842,6 @@ pub fn run_tests_console(opts: &TestOpts, tests: Vec<TestDescAndFn> ) -> io::IoR\n #[test]\n fn should_sort_failures_before_printing_them() {\n     use std::io::MemWriter;\n-    use std::str;\n \n     let test_a = TestDesc {\n         name: StaticTestName(\"a\"),"}, {"sha": "0e29e6215032ae104c3531a8748424bae6c0b94b", "filename": "src/libuuid/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/36e1f2db301d33fd0efaa093c5a190a3879ccc93/src%2Flibuuid%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e1f2db301d33fd0efaa093c5a190a3879ccc93/src%2Flibuuid%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuuid%2Flib.rs?ref=36e1f2db301d33fd0efaa093c5a190a3879ccc93", "patch": "@@ -520,7 +520,6 @@ mod test {\n     use super::{Uuid, VariantMicrosoft, VariantNCS, VariantRFC4122,\n                 Version1Mac, Version2Dce, Version3Md5, Version4Random,\n                 Version5Sha1};\n-    use std::str;\n     use std::io::MemWriter;\n     use std::rand;\n "}]}