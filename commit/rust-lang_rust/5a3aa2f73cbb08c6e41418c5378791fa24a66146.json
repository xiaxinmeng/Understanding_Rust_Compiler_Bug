{"sha": "5a3aa2f73cbb08c6e41418c5378791fa24a66146", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhM2FhMmY3M2NiYjA4YzZlNDE0MThjNTM3ODc5MWZhMjRhNjYxNDY=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-11-19T22:18:43Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-11-19T22:46:39Z"}, "message": "str: Improve .chars().count()\n\nUse a simpler loop to count the `char` of a string: count the\nnumber of non-continuation bytes. Use `count += <conditional>` which the\ncompiler understands well and can apply loop optimizations to.", "tree": {"sha": "03301105253b3f64744f0c32d7e5f8a5dc4c206c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03301105253b3f64744f0c32d7e5f8a5dc4c206c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a3aa2f73cbb08c6e41418c5378791fa24a66146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a3aa2f73cbb08c6e41418c5378791fa24a66146", "html_url": "https://github.com/rust-lang/rust/commit/5a3aa2f73cbb08c6e41418c5378791fa24a66146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a3aa2f73cbb08c6e41418c5378791fa24a66146/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1da18fe9be180ecfcfb1691c4eb669c496996f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1da18fe9be180ecfcfb1691c4eb669c496996f5", "html_url": "https://github.com/rust-lang/rust/commit/b1da18fe9be180ecfcfb1691c4eb669c496996f5"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "c7efd4ab2b1256451f235e9fbdfe34452d3171e8", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a3aa2f73cbb08c6e41418c5378791fa24a66146/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a3aa2f73cbb08c6e41418c5378791fa24a66146/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=5a3aa2f73cbb08c6e41418c5378791fa24a66146", "patch": "@@ -767,6 +767,7 @@ fn test_iterator() {\n         pos += 1;\n     }\n     assert_eq!(pos, v.len());\n+    assert_eq!(s.chars().count(), v.len());\n }\n \n #[test]"}, {"sha": "7f91da5314247d104066b4289b4ba41578510bed", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5a3aa2f73cbb08c6e41418c5378791fa24a66146/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a3aa2f73cbb08c6e41418c5378791fa24a66146/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=5a3aa2f73cbb08c6e41418c5378791fa24a66146", "patch": "@@ -424,6 +424,17 @@ impl<'a> Iterator for Chars<'a> {\n         })\n     }\n \n+    #[inline]\n+    fn count(self) -> usize {\n+        // length in `char` is equal to the number of non-continuation bytes\n+        let bytes_len = self.iter.len();\n+        let mut cont_bytes = 0;\n+        for &byte in self.iter {\n+            cont_bytes += utf8_is_cont_byte(byte) as usize;\n+        }\n+        bytes_len - cont_bytes\n+    }\n+\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         let len = self.iter.len();\n@@ -501,6 +512,11 @@ impl<'a> Iterator for CharIndices<'a> {\n         }\n     }\n \n+    #[inline]\n+    fn count(self) -> usize {\n+        self.iter.count()\n+    }\n+\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()"}]}