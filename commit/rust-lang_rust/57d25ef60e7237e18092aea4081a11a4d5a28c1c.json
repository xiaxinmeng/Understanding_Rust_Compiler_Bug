{"sha": "57d25ef60e7237e18092aea4081a11a4d5a28c1c", "node_id": "C_kwDOAAsO6NoAKDU3ZDI1ZWY2MGU3MjM3ZTE4MDkyYWVhNDA4MWExMWE0ZDVhMjhjMWM", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-09T17:32:27Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-09T17:32:27Z"}, "message": "Use simplified version of bool_to_zero_or_max_uint in simd_cmp", "tree": {"sha": "8c5cfccc8723d3ee5f1e683c3977d0574f2e4570", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c5cfccc8723d3ee5f1e683c3977d0574f2e4570"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57d25ef60e7237e18092aea4081a11a4d5a28c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57d25ef60e7237e18092aea4081a11a4d5a28c1c", "html_url": "https://github.com/rust-lang/rust/commit/57d25ef60e7237e18092aea4081a11a4d5a28c1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57d25ef60e7237e18092aea4081a11a4d5a28c1c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4d2b24d5530c50aa80985938fe13e51e6db8750", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d2b24d5530c50aa80985938fe13e51e6db8750", "html_url": "https://github.com/rust-lang/rust/commit/d4d2b24d5530c50aa80985938fe13e51e6db8750"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f38a30011d395eb56e6b1d4097f4cda2bd61ab8e", "filename": "src/intrinsics/simd.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57d25ef60e7237e18092aea4081a11a4d5a28c1c/src%2Fintrinsics%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d25ef60e7237e18092aea4081a11a4d5a28c1c/src%2Fintrinsics%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fsimd.rs?ref=57d25ef60e7237e18092aea4081a11a4d5a28c1c", "patch": "@@ -29,7 +29,13 @@ macro simd_cmp($fx:expr, $cc_u:ident|$cc_s:ident|$cc_f:ident($x:ident, $y:ident)\n                 ty::Float(_) => fx.bcx.ins().fcmp(FloatCC::$cc_f, x_lane, y_lane),\n                 _ => unreachable!(\"{:?}\", lane_layout.ty),\n             };\n-            bool_to_zero_or_max_uint(fx, res_lane_layout, res_lane)\n+\n+            let ty = fx.clif_type(res_lane_layout.ty).unwrap();\n+\n+            let res_lane = fx.bcx.ins().bint(ty, res_lane);\n+            let res_lane = fx.bcx.ins().ineg(res_lane);\n+\n+            CValue::by_val(res_lane, res_lane_layout)\n         },\n     );\n }"}]}