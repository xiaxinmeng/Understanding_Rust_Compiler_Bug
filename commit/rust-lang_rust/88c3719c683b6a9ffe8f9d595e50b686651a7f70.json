{"sha": "88c3719c683b6a9ffe8f9d595e50b686651a7f70", "node_id": "C_kwDOAAsO6NoAKDg4YzM3MTljNjgzYjZhOWZmZThmOWQ1OTVlNTBiNjg2NjUxYTdmNzA", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-15T16:42:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-15T18:25:33Z"}, "message": "Avoid once_cell unstable feature in cg_clif.rs", "tree": {"sha": "d804ecdcc55e7a5beadc2264f556ac2e6193753f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d804ecdcc55e7a5beadc2264f556ac2e6193753f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88c3719c683b6a9ffe8f9d595e50b686651a7f70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88c3719c683b6a9ffe8f9d595e50b686651a7f70", "html_url": "https://github.com/rust-lang/rust/commit/88c3719c683b6a9ffe8f9d595e50b686651a7f70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88c3719c683b6a9ffe8f9d595e50b686651a7f70/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a900a5229a40dbffee2b7b6a7df3ec94b6577c35", "url": "https://api.github.com/repos/rust-lang/rust/commits/a900a5229a40dbffee2b7b6a7df3ec94b6577c35", "html_url": "https://github.com/rust-lang/rust/commit/a900a5229a40dbffee2b7b6a7df3ec94b6577c35"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "70c03da3f29fa9808169e415ae6417cb99e3eefd", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88c3719c683b6a9ffe8f9d595e50b686651a7f70/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/88c3719c683b6a9ffe8f9d595e50b686651a7f70/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=88c3719c683b6a9ffe8f9d595e50b686651a7f70", "patch": "@@ -21,7 +21,7 @@ object = { version = \"0.27.0\", default-features = false, features = [\"std\", \"rea\n ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg_clif_ranlib\" }\n indexmap = \"1.8.0\"\n libloading = { version = \"0.6.0\", optional = true }\n-once_cell = { version = \"1.10.0\", optional = true }\n+once_cell = \"1.10.0\"\n smallvec = \"1.6.1\"\n \n [patch.crates-io]\n@@ -38,7 +38,7 @@ smallvec = \"1.6.1\"\n [features]\n # Enable features not ready to be enabled when compiling as part of rustc\n unstable-features = [\"jit\", \"inline_asm\"]\n-jit = [\"cranelift-jit\", \"libloading\", \"once_cell\"]\n+jit = [\"cranelift-jit\", \"libloading\"]\n inline_asm = []\n \n # Disable optimizations and debuginfo of build scripts and some of the heavy build deps, as the"}, {"sha": "a8fb09e69b7ef1e5c377d674f8eae416dc99fd7a", "filename": "src/bin/cg_clif.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/88c3719c683b6a9ffe8f9d595e50b686651a7f70/src%2Fbin%2Fcg_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88c3719c683b6a9ffe8f9d595e50b686651a7f70/src%2Fbin%2Fcg_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcg_clif.rs?ref=88c3719c683b6a9ffe8f9d595e50b686651a7f70", "patch": "@@ -1,4 +1,4 @@\n-#![feature(rustc_private, once_cell)]\n+#![feature(rustc_private)]\n #![warn(rust_2018_idioms)]\n #![warn(unused_lifetimes)]\n #![warn(unreachable_pub)]\n@@ -9,7 +9,6 @@ extern crate rustc_interface;\n extern crate rustc_session;\n extern crate rustc_target;\n \n-use std::lazy::SyncLazy;\n use std::panic;\n \n use rustc_data_structures::profiling::{get_resident_set_size, print_time_passes_entry};\n@@ -18,10 +17,13 @@ use rustc_session::config::ErrorOutputType;\n use rustc_session::early_error;\n use rustc_target::spec::PanicStrategy;\n \n+// FIXME use std::lazy::SyncLazy once it stabilizes\n+use once_cell::sync::Lazy;\n+\n const BUG_REPORT_URL: &str = \"https://github.com/bjorn3/rustc_codegen_cranelift/issues/new\";\n \n-static DEFAULT_HOOK: SyncLazy<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send + 'static>> =\n-    SyncLazy::new(|| {\n+static DEFAULT_HOOK: Lazy<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send + 'static>> =\n+    Lazy::new(|| {\n         let hook = panic::take_hook();\n         panic::set_hook(Box::new(|info| {\n             // Invoke the default handler, which prints the actual panic message and optionally a backtrace\n@@ -61,7 +63,7 @@ fn main() {\n     let start_rss = get_resident_set_size();\n     rustc_driver::init_rustc_env_logger();\n     let mut callbacks = CraneliftPassesCallbacks::default();\n-    SyncLazy::force(&DEFAULT_HOOK); // Install ice hook\n+    Lazy::force(&DEFAULT_HOOK); // Install ice hook\n     let exit_code = rustc_driver::catch_with_exit_code(|| {\n         let args = std::env::args_os()\n             .enumerate()"}]}