{"sha": "e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff", "node_id": "C_kwDOAAsO6NoAKGUyZDdjZGNmMmJhZGY0ZDhkMmQ4OWRhZGI2NWEzMmEyZWJhMDFhZmY", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-09-21T20:43:21Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-09-21T20:43:21Z"}, "message": "Add `rustc_allow_const_fn_unstable` annotations to pre-existing `Layout` methods", "tree": {"sha": "a859124a4e0ea374ce965f1c13747cb8bf8593f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a859124a4e0ea374ce965f1c13747cb8bf8593f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff", "html_url": "https://github.com/rust-lang/rust/commit/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "585bcc69807b3730e3de11c5dbceccbab12e874d", "url": "https://api.github.com/repos/rust-lang/rust/commits/585bcc69807b3730e3de11c5dbceccbab12e874d", "html_url": "https://github.com/rust-lang/rust/commit/585bcc69807b3730e3de11c5dbceccbab12e874d"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "03681a16b9d2a96653f64113cb1cfc9e0c215e06", "filename": "library/core/src/alloc/layout.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs?ref=e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff", "patch": "@@ -65,6 +65,7 @@ impl Layout {\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n     #[rustc_const_stable(feature = \"const_alloc_layout_size_align\", since = \"1.50.0\")]\n     #[inline]\n+    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n     pub const fn from_size_align(size: usize, align: usize) -> Result<Self, LayoutError> {\n         if !align.is_power_of_two() {\n             return Err(LayoutError);\n@@ -114,6 +115,7 @@ impl Layout {\n     #[rustc_const_stable(feature = \"const_alloc_layout_unchecked\", since = \"1.36.0\")]\n     #[must_use]\n     #[inline]\n+    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n     pub const unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {\n         // SAFETY: the caller is required to uphold the preconditions.\n         unsafe { Layout { size, align: ValidAlign::new_unchecked(align) } }\n@@ -134,6 +136,7 @@ impl Layout {\n     #[must_use = \"this returns the minimum alignment, \\\n                   without modifying the layout\"]\n     #[inline]\n+    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n     pub const fn align(&self) -> usize {\n         self.align.as_usize()\n     }"}, {"sha": "eeb5cb45f614fcc67cb67ad1765165a022f692d5", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff", "patch": "@@ -148,6 +148,7 @@\n #![feature(core_panic)]\n #![feature(duration_consts_float)]\n #![feature(maybe_uninit_uninit_array)]\n+#![feature(ptr_alignment_type)]\n #![feature(ptr_metadata)]\n #![feature(slice_ptr_get)]\n #![feature(slice_split_at_unchecked)]"}, {"sha": "d0df316c770144fb19c7783398fc8a54aa1b6660", "filename": "library/core/src/ptr/alignment.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff/library%2Fcore%2Fsrc%2Fptr%2Falignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff/library%2Fcore%2Fsrc%2Fptr%2Falignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Falignment.rs?ref=e2d7cdcf2badf4d8d2d89dadb65a32a2eba01aff", "patch": "@@ -24,7 +24,7 @@ impl Alignment {\n     /// but in an `Alignment` instead of a `usize.\n     #[unstable(feature = \"ptr_alignment_type\", issue = \"102070\")]\n     #[inline]\n-    pub(crate) fn of<T>() -> Self {\n+    pub const fn of<T>() -> Self {\n         // SAFETY: rustc ensures that type alignment is always a power of two.\n         unsafe { Alignment::new_unchecked(mem::align_of::<T>()) }\n     }\n@@ -53,6 +53,7 @@ impl Alignment {\n     /// Equivalently, it must be `1 << exp` for some `exp` in `0..usize::BITS`.\n     /// It must *not* be zero.\n     #[unstable(feature = \"ptr_alignment_type\", issue = \"102070\")]\n+    #[rustc_const_unstable(feature = \"ptr_alignment_type\", issue = \"102070\")]\n     #[inline]\n     pub const unsafe fn new_unchecked(align: usize) -> Self {\n         // SAFETY: Precondition passed to the caller.\n@@ -65,6 +66,7 @@ impl Alignment {\n \n     /// Returns the alignment as a [`NonZeroUsize`]\n     #[unstable(feature = \"ptr_alignment_type\", issue = \"102070\")]\n+    #[rustc_const_unstable(feature = \"ptr_alignment_type\", issue = \"102070\")]\n     #[inline]\n     pub const fn as_usize(self) -> usize {\n         self.0 as usize"}]}