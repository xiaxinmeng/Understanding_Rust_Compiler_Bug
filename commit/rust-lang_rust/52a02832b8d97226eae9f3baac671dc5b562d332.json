{"sha": "52a02832b8d97226eae9f3baac671dc5b562d332", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYTAyODMyYjhkOTcyMjZlYWU5ZjNiYWFjNjcxZGM1YjU2MmQzMzI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-09-30T12:33:22Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-10-01T14:43:07Z"}, "message": "convert the creepy case to just return None -- in practice, it would\nhave always been returning None anyway, since it was comparing node-ids\nacross crates incorrectly -- and remove the now unused map\n`extern_const_variants`", "tree": {"sha": "904c98bc2a686d0779bc549625de73007fc874db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/904c98bc2a686d0779bc549625de73007fc874db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52a02832b8d97226eae9f3baac671dc5b562d332", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52a02832b8d97226eae9f3baac671dc5b562d332", "html_url": "https://github.com/rust-lang/rust/commit/52a02832b8d97226eae9f3baac671dc5b562d332", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52a02832b8d97226eae9f3baac671dc5b562d332/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01f32ace0302373fb69ef9e2d0e21cc841981eba", "url": "https://api.github.com/repos/rust-lang/rust/commits/01f32ace0302373fb69ef9e2d0e21cc841981eba", "html_url": "https://github.com/rust-lang/rust/commit/01f32ace0302373fb69ef9e2d0e21cc841981eba"}], "stats": {"total": 29, "additions": 1, "deletions": 28}, "files": [{"sha": "2d74525e4edfcdf7579536eeea6594e02daaae83", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/52a02832b8d97226eae9f3baac671dc5b562d332/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a02832b8d97226eae9f3baac671dc5b562d332/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=52a02832b8d97226eae9f3baac671dc5b562d332", "patch": "@@ -82,32 +82,7 @@ fn lookup_variant_by_id<'a>(tcx: &'a ty::ctxt,\n             Some(_) => None\n         }\n     } else {\n-        match tcx.extern_const_variants.borrow().get(&variant_def) {\n-            Some(&ast::DUMMY_NODE_ID) => return None,\n-            Some(&expr_id) => {\n-                return Some(tcx.map.expect_expr(expr_id));\n-            }\n-            None => {}\n-        }\n-        let expr_id = match\n-            csearch::maybe_get_item_ast(\n-                tcx, enum_def,\n-                Box::new(|a, b, c, d, e| astencode::decode_inlined_item(a, b, c, d, e)))\n-        {\n-            csearch::FoundAst::Found(&InlinedItem::Item(ref item)) => match item.node {\n-                hir::ItemEnum(hir::EnumDef { .. }, _) => {\n-                    tcx.sess.span_bug(\n-                        item.span,\n-                        &format!(\"cross-crate enum discr constant with enum {:?} variant {:?}\",\n-                                 enum_def, variant_def));\n-                }\n-                _ => None\n-            },\n-            _ => None\n-        };\n-        tcx.extern_const_variants.borrow_mut().insert(variant_def,\n-                                                      expr_id.unwrap_or(ast::DUMMY_NODE_ID));\n-        expr_id.map(|id| tcx.map.expect_expr(id))\n+        None\n     }\n }\n "}, {"sha": "e506e5b2c077286dc7522f1a7a3308f0ef0f3de5", "filename": "src/librustc/middle/ty/context.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a02832b8d97226eae9f3baac671dc5b562d332/src%2Flibrustc%2Fmiddle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a02832b8d97226eae9f3baac671dc5b562d332/src%2Flibrustc%2Fmiddle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty%2Fcontext.rs?ref=52a02832b8d97226eae9f3baac671dc5b562d332", "patch": "@@ -307,7 +307,6 @@ pub struct ctxt<'tcx> {\n \n     /// These caches are used by const_eval when decoding external constants.\n     pub extern_const_statics: RefCell<DefIdMap<NodeId>>,\n-    pub extern_const_variants: RefCell<DefIdMap<NodeId>>,\n     pub extern_const_fns: RefCell<DefIdMap<NodeId>>,\n \n     pub node_lint_levels: RefCell<FnvHashMap<(NodeId, lint::LintId),\n@@ -500,7 +499,6 @@ impl<'tcx> ctxt<'tcx> {\n             populated_external_types: RefCell::new(DefIdSet()),\n             populated_external_primitive_impls: RefCell::new(DefIdSet()),\n             extern_const_statics: RefCell::new(DefIdMap()),\n-            extern_const_variants: RefCell::new(DefIdMap()),\n             extern_const_fns: RefCell::new(DefIdMap()),\n             node_lint_levels: RefCell::new(FnvHashMap()),\n             transmute_restrictions: RefCell::new(Vec::new()),"}]}