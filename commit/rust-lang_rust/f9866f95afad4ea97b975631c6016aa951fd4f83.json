{"sha": "f9866f95afad4ea97b975631c6016aa951fd4f83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ODY2Zjk1YWZhZDRlYTk3Yjk3NTYzMWM2MDE2YWE5NTFmZDRmODM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-05T07:08:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-05T07:08:00Z"}, "message": "rely on rdlock/wrlock not returning anything but the specified error codes", "tree": {"sha": "7731f8889e88b18d38d33f35d3d71d6870c7591f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7731f8889e88b18d38d33f35d3d71d6870c7591f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9866f95afad4ea97b975631c6016aa951fd4f83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9866f95afad4ea97b975631c6016aa951fd4f83", "html_url": "https://github.com/rust-lang/rust/commit/f9866f95afad4ea97b975631c6016aa951fd4f83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9866f95afad4ea97b975631c6016aa951fd4f83/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f50292edce92fb889bcd7318fead1a8905b6342", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f50292edce92fb889bcd7318fead1a8905b6342", "html_url": "https://github.com/rust-lang/rust/commit/3f50292edce92fb889bcd7318fead1a8905b6342"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "2b5067a34f648fa41baa290706ad3a53a347cce3", "filename": "src/libstd/sys/unix/rwlock.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f9866f95afad4ea97b975631c6016aa951fd4f83/src%2Flibstd%2Fsys%2Funix%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9866f95afad4ea97b975631c6016aa951fd4f83/src%2Flibstd%2Fsys%2Funix%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Frwlock.rs?ref=f9866f95afad4ea97b975631c6016aa951fd4f83", "patch": "@@ -46,7 +46,9 @@ impl RWLock {\n             }\n             panic!(\"rwlock read lock would result in deadlock\");\n         } else {\n-            assert_eq!(r, 0);\n+            // According to POSIX, for a properly initialized rwlock this can only\n+            // return EAGAIN or EDEADLK or 0. We rely on that.\n+            debug_assert_eq!(r, 0);\n             self.num_readers.fetch_add(1, Ordering::Relaxed);\n         }\n     }\n@@ -83,7 +85,9 @@ impl RWLock {\n             }\n             panic!(\"rwlock write lock would result in deadlock\");\n         } else {\n-            assert_eq!(r, 0);\n+            // According to POSIX, for a properly initialized rwlock this can only\n+            // return EDEADLK or 0. We rely on that.\n+            debug_assert_eq!(r, 0);\n         }\n         *self.write_locked.get() = true;\n     }"}]}