{"sha": "626d93b86d3fe0c3f12f0299d72a8f65185ec268", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNmQ5M2I4NmQzZmUwYzNmMTJmMDI5OWQ3MmE4ZjY1MTg1ZWMyNjg=", "commit": {"author": {"name": "Dan Gohman", "email": "sunfish@mozilla.com", "date": "2017-11-10T23:32:06Z"}, "committer": {"name": "Dan Gohman", "email": "sunfish@mozilla.com", "date": "2017-11-10T23:32:06Z"}, "message": "Update the \"[run-make] run-make/intrinsic-unreachable\" test.\n\nWith rustc now emitting \"ud2\" on unreachable code, a \"return nothing\"\nsequence may take the same number of lines as an \"unreachable\" sequence\nin assembly code. This test is testing that intrinsics::unreachable()\nworks by testing that it reduces the number of lines in the assembly\ncode. Fix it by adding a return value, which requires an extra\ninstruction in the reachable case, which provides the test what it's\nlooking for.", "tree": {"sha": "e92864422d9b6e46ab3cc4982c22e849ab41da71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e92864422d9b6e46ab3cc4982c22e849ab41da71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/626d93b86d3fe0c3f12f0299d72a8f65185ec268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/626d93b86d3fe0c3f12f0299d72a8f65185ec268", "html_url": "https://github.com/rust-lang/rust/commit/626d93b86d3fe0c3f12f0299d72a8f65185ec268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/626d93b86d3fe0c3f12f0299d72a8f65185ec268/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89652d66c9bd430e9c59bf5167f30c2016ae1e09", "url": "https://api.github.com/repos/rust-lang/rust/commits/89652d66c9bd430e9c59bf5167f30c2016ae1e09", "html_url": "https://github.com/rust-lang/rust/commit/89652d66c9bd430e9c59bf5167f30c2016ae1e09"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "3de079be2a5494d349e92e7c672988be05a5a67f", "filename": "src/test/run-make/intrinsic-unreachable/exit-ret.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/626d93b86d3fe0c3f12f0299d72a8f65185ec268/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/626d93b86d3fe0c3f12f0299d72a8f65185ec268/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-ret.rs?ref=626d93b86d3fe0c3f12f0299d72a8f65185ec268", "patch": "@@ -11,10 +11,12 @@\n #![feature(asm)]\n #![crate_type=\"lib\"]\n \n-pub fn exit(n: usize) {\n+#[deny(unreachable_code)]\n+pub fn exit(n: usize) -> i32 {\n     unsafe {\n         // Pretend this asm is an exit() syscall.\n         asm!(\"\" :: \"r\"(n) :: \"volatile\");\n         // Can't actually reach this point, but rustc doesn't know that.\n     }\n+    42\n }"}, {"sha": "2a9dea1705aeb7478988dcfe53023d6e4f8de6d7", "filename": "src/test/run-make/intrinsic-unreachable/exit-unreachable.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/626d93b86d3fe0c3f12f0299d72a8f65185ec268/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-unreachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/626d93b86d3fe0c3f12f0299d72a8f65185ec268/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-unreachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fintrinsic-unreachable%2Fexit-unreachable.rs?ref=626d93b86d3fe0c3f12f0299d72a8f65185ec268", "patch": "@@ -13,10 +13,12 @@\n \n use std::intrinsics;\n \n-pub fn exit(n: usize) -> ! {\n+#[allow(unreachable_code)]\n+pub fn exit(n: usize) -> i32 {\n     unsafe {\n         // Pretend this asm is an exit() syscall.\n         asm!(\"\" :: \"r\"(n) :: \"volatile\");\n         intrinsics::unreachable()\n     }\n+    42\n }"}]}