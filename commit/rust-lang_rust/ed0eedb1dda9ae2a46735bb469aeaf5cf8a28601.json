{"sha": "ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMGVlZGIxZGRhOWFlMmE0NjczNWJiNDY5YWVhZjVjZjhhMjg2MDE=", "commit": {"author": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-13T17:59:30Z"}, "committer": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-13T17:59:30Z"}, "message": "Fix PR", "tree": {"sha": "22e314355935ba5467afe7932fbe342cbc14f6f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22e314355935ba5467afe7932fbe342cbc14f6f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601", "html_url": "https://github.com/rust-lang/rust/commit/ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601/comments", "author": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e279ca031a52e90cd19dff513ee9d5b80cee8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e279ca031a52e90cd19dff513ee9d5b80cee8aa", "html_url": "https://github.com/rust-lang/rust/commit/2e279ca031a52e90cd19dff513ee9d5b80cee8aa"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "ef0ce058617aef9108e2d3565df388bf8bbc4e90", "filename": "crates/ra_assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=ed0eedb1dda9ae2a46735bb469aeaf5cf8a28601", "patch": "@@ -1,9 +1,9 @@\n use std::iter::successors;\n \n use ra_syntax::{\n-    algo::{neighbor, SyntaxRewriter},\n+    algo::{neighbor, skip_trivia_token, SyntaxRewriter},\n     ast::{self, edit::AstNodeEdit, make},\n-    AstNode, Direction, InsertPosition, NodeOrToken, SyntaxElement, T,\n+    AstNode, Direction, InsertPosition, SyntaxElement, T,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -72,18 +72,12 @@ fn try_merge_trees(old: &ast::UseTree, new: &ast::UseTree) -> Option<ast::UseTre\n     let lhs = old.split_prefix(&lhs_prefix);\n     let rhs = new.split_prefix(&rhs_prefix);\n \n-    let mut should_insert_comma = true;\n-\n-    lhs.syntax()\n-        .last_child()\n-        .and_then(|child| child.children().last())\n-        .and_then(|last| last.next_sibling_or_token())\n-        .map(|next_sibling| {\n-            // FIXME: there's probably a better way to check if it's a COMMA\n-            if let NodeOrToken::Token(maybe_comma) = next_sibling {\n-                should_insert_comma = maybe_comma.to_string() != \",\";\n-            }\n-        });\n+    let should_insert_comma = lhs\n+        .use_tree_list()?\n+        .r_curly_token()\n+        .and_then(|it| skip_trivia_token(it.prev_token()?, Direction::Prev))\n+        .map(|it| it.kind() != T![,])\n+        .unwrap_or(true);\n \n     let mut to_insert: Vec<SyntaxElement> = Vec::new();\n     if should_insert_comma {"}]}