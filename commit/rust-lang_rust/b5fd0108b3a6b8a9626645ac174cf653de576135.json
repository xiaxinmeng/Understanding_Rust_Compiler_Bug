{"sha": "b5fd0108b3a6b8a9626645ac174cf653de576135", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZmQwMTA4YjNhNmI4YTk2MjY2NDVhYzE3NGNmNjUzZGU1NzYxMzU=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2019-01-15T18:56:09Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2019-02-02T19:43:20Z"}, "message": "clippy-driver: more robust test to see if we're clippy-enabled\n\nRather than looking for a fixed --emit arg set, just check to see\nif we're emitting metadata at all. This makes it more robust to\nbeing invoked by tools other than cargo (or if cargo changes its\ninvocation).\n\nIssue #3663", "tree": {"sha": "a988f15a03dc859290f9833a4dd5ecca520048b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a988f15a03dc859290f9833a4dd5ecca520048b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5fd0108b3a6b8a9626645ac174cf653de576135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5fd0108b3a6b8a9626645ac174cf653de576135", "html_url": "https://github.com/rust-lang/rust/commit/b5fd0108b3a6b8a9626645ac174cf653de576135", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5fd0108b3a6b8a9626645ac174cf653de576135/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27b5dd8886ac0423e059c0817b55a4e618b344a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/27b5dd8886ac0423e059c0817b55a4e618b344a0", "html_url": "https://github.com/rust-lang/rust/commit/27b5dd8886ac0423e059c0817b55a4e618b344a0"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "c371048502735f041da9bdbf489c51c6e1b9ea16", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b5fd0108b3a6b8a9626645ac174cf653de576135/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b5fd0108b3a6b8a9626645ac174cf653de576135/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=b5fd0108b3a6b8a9626645ac174cf653de576135", "patch": "@@ -34,7 +34,6 @@ path = \"src/main.rs\"\n \n [[bin]]\n name = \"clippy-driver\"\n-test = false\n path = \"src/driver.rs\"\n \n [dependencies]"}, {"sha": "d290e403a315c54503fffed751ff1cabb5f46be1", "filename": "src/driver.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/b5fd0108b3a6b8a9626645ac174cf653de576135/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5fd0108b3a6b8a9626645ac174cf653de576135/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=b5fd0108b3a6b8a9626645ac174cf653de576135", "patch": "@@ -20,6 +20,46 @@ fn show_version() {\n     println!(env!(\"CARGO_PKG_VERSION\"));\n }\n \n+/// If a command-line option matches `find_arg`, then apply the predicate `pred` on its value. If\n+/// true, then return it. The parameter is assumed to be either `--arg=value` or `--arg value`.\n+fn arg_value<'a>(\n+    args: impl IntoIterator<Item = &'a String>,\n+    find_arg: &str,\n+    pred: impl Fn(&str) -> bool,\n+) -> Option<&'a str> {\n+    let mut args = args.into_iter().map(String::as_str);\n+\n+    while let Some(arg) = args.next() {\n+        let arg: Vec<_> = arg.splitn(2, '=').collect();\n+        if arg.get(0) != Some(&find_arg) {\n+            continue;\n+        }\n+\n+        let value = arg.get(1).cloned().or_else(|| args.next());\n+        if value.as_ref().map_or(false, |p| pred(p)) {\n+            return value;\n+        }\n+    }\n+    None\n+}\n+\n+#[test]\n+fn test_arg_value() {\n+    let args: Vec<_> = [\"--bar=bar\", \"--foobar\", \"123\", \"--foo\"]\n+        .iter()\n+        .map(|s| s.to_string())\n+        .collect();\n+\n+    assert_eq!(arg_value(None, \"--foobar\", |_| true), None);\n+    assert_eq!(arg_value(&args, \"--bar\", |_| false), None);\n+    assert_eq!(arg_value(&args, \"--bar\", |_| true), Some(\"bar\"));\n+    assert_eq!(arg_value(&args, \"--bar\", |p| p == \"bar\"), Some(\"bar\"));\n+    assert_eq!(arg_value(&args, \"--bar\", |p| p == \"foo\"), None);\n+    assert_eq!(arg_value(&args, \"--foobar\", |p| p == \"foo\"), None);\n+    assert_eq!(arg_value(&args, \"--foobar\", |p| p == \"123\"), Some(\"123\"));\n+    assert_eq!(arg_value(&args, \"--foo\", |_| true), None);\n+}\n+\n #[allow(clippy::too_many_lines)]\n pub fn main() {\n     rustc_driver::init_rustc_env_logger();\n@@ -79,7 +119,7 @@ pub fn main() {\n             // crate is\n             // linted but not built\n             let clippy_enabled = env::var(\"CLIPPY_TESTS\").ok().map_or(false, |val| val == \"true\")\n-                || orig_args.iter().any(|s| s == \"--emit=dep-info,metadata\");\n+                || arg_value(&orig_args, \"--emit\", |val| val.split(',').any(|e| e == \"metadata\")).is_some();\n \n             if clippy_enabled {\n                 args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-clippy\"\"#.to_owned()]);"}]}