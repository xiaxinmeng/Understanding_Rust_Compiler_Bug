{"sha": "39e19ccdb6c89703a9c88eb88a26f61ec10d31f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZTE5Y2NkYjZjODk3MDNhOWM4OGViODhhMjZmNjFlYzEwZDMxZjM=", "commit": {"author": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2015-01-17T18:23:52Z"}, "committer": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2015-01-17T18:23:52Z"}, "message": "tests: Tidy and allows multi-line htmldocck commands.", "tree": {"sha": "a63f74b0a2b07262c538db4dceefc72f797540ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a63f74b0a2b07262c538db4dceefc72f797540ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3", "html_url": "https://github.com/rust-lang/rust/commit/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3/comments", "author": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de6f520192d76151bf99f2250afac75da3f040d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/de6f520192d76151bf99f2250afac75da3f040d5", "html_url": "https://github.com/rust-lang/rust/commit/de6f520192d76151bf99f2250afac75da3f040d5"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "2573421758972fa73c6723cfc37d9536996f008e", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=39e19ccdb6c89703a9c88eb88a26f61ec10d31f3", "patch": "@@ -148,11 +148,43 @@ def close(self):\n \n Command = namedtuple('Command', 'negated cmd args lineno')\n \n-LINE_PATTERN = re.compile(r'(?<=(?<!\\S)@)(?P<negated>!?)(?P<cmd>[A-Za-z]+(?:-[A-Za-z]+)*)(?P<args>.*)$')\n+# returns a generator out of the file object, which\n+# - removes `\\\\` then `\\n` then a shared prefix with the previous line then optional whitespace;\n+# - keeps a line number (starting from 0) of the first line being concatenated.\n+def concat_multi_lines(f):\n+    lastline = None # set to the last line when the last line has a backslash\n+    firstlineno = None\n+    catenated = ''\n+    for lineno, line in enumerate(f):\n+        line = line.rstrip('\\r\\n')\n+\n+        # strip the common prefix from the current line if needed\n+        if lastline is not None:\n+            maxprefix = 0\n+            for i in xrange(min(len(line), len(lastline))):\n+                if line[i] != lastline[i]: break\n+                maxprefix += 1\n+            line = line[maxprefix:].lstrip()\n+\n+        firstlineno = firstlineno or lineno\n+        if line.endswith('\\\\'):\n+            lastline = line[:-1]\n+            catenated += line[:-1]\n+        else:\n+            yield firstlineno, catenated + line\n+            lastline = None\n+            firstlineno = None\n+            catenated = ''\n+\n+LINE_PATTERN = re.compile(r'''\n+    (?<=(?<!\\S)@)(?P<negated>!?)\n+    (?P<cmd>[A-Za-z]+(?:-[A-Za-z]+)*)\n+    (?P<args>.*)$\n+''', re.X)\n def get_commands(template):\n     with open(template, 'rUb') as f:\n-        for lineno, line in enumerate(f):\n-            m = LINE_PATTERN.search(line.rstrip('\\r\\n'))\n+        for lineno, line in concat_multi_lines(f):\n+            m = LINE_PATTERN.search(line)\n             if not m: continue\n \n             negated = (m.group('negated') == '!')"}, {"sha": "9f38ff138051c81a39da2a24e25158e087d196e4", "filename": "src/test/run-make/rustdoc-where/foo.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3/src%2Ftest%2Frun-make%2Frustdoc-where%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e19ccdb6c89703a9c88eb88a26f61ec10d31f3/src%2Ftest%2Frun-make%2Frustdoc-where%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-where%2Ffoo.rs?ref=39e19ccdb6c89703a9c88eb88a26f61ec10d31f3", "patch": "@@ -24,11 +24,15 @@ impl<D> Delta<D> where D: MyTrait {\n }\n \n pub struct Echo<E>;\n-// @matches foo/struct.Echo.html '//*[@class=\"impl\"]//code' \"impl.*MyTrait.*for.*Echo.*where.*E:.*MyTrait\" \n-// @matches foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//code' \"impl.*MyTrait.*for.*Echo.*where.*E:.*MyTrait\"\n+// @matches foo/struct.Echo.html '//*[@class=\"impl\"]//code' \\\n+//          \"impl.*MyTrait.*for.*Echo.*where.*E:.*MyTrait\"\n+// @matches foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//code' \\\n+//          \"impl.*MyTrait.*for.*Echo.*where.*E:.*MyTrait\"\n impl<E> MyTrait for Echo<E> where E: MyTrait {}\n \n pub enum Foxtrot<F> {}\n-// @matches foo/enum.Foxtrot.html '//*[@class=\"impl\"]//code' \"impl.*MyTrait.*for.*Foxtrot.*where.*F:.*MyTrait\" \n-// @matches foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//code' \"impl.*MyTrait.*for.*Foxtrot.*where.*F:.*MyTrait\"\n+// @matches foo/enum.Foxtrot.html '//*[@class=\"impl\"]//code' \\\n+//          \"impl.*MyTrait.*for.*Foxtrot.*where.*F:.*MyTrait\"\n+// @matches foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//code' \\\n+//          \"impl.*MyTrait.*for.*Foxtrot.*where.*F:.*MyTrait\"\n impl<F> MyTrait for Foxtrot<F> where F: MyTrait {}"}]}