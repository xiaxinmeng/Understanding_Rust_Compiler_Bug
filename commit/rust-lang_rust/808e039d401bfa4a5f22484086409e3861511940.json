{"sha": "808e039d401bfa4a5f22484086409e3861511940", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOGUwMzlkNDAxYmZhNGE1ZjIyNDg0MDg2NDA5ZTM4NjE1MTE5NDA=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2014-09-06T00:46:05Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2014-09-06T11:31:05Z"}, "message": "Fix ICE with trans of calls to foreign fns\n\nIt was failing occasionally.", "tree": {"sha": "c533aab55ac3b211ddc3bcab621d1a667ecfc5e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c533aab55ac3b211ddc3bcab621d1a667ecfc5e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/808e039d401bfa4a5f22484086409e3861511940", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/808e039d401bfa4a5f22484086409e3861511940", "html_url": "https://github.com/rust-lang/rust/commit/808e039d401bfa4a5f22484086409e3861511940", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/808e039d401bfa4a5f22484086409e3861511940/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10935de0cdb34b9405c71a813cc89eb1cb44fd01", "url": "https://api.github.com/repos/rust-lang/rust/commits/10935de0cdb34b9405c71a813cc89eb1cb44fd01", "html_url": "https://github.com/rust-lang/rust/commit/10935de0cdb34b9405c71a813cc89eb1cb44fd01"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "794e42563a9f0c8e2d3f116027873c191e9fc709", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/808e039d401bfa4a5f22484086409e3861511940/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/808e039d401bfa4a5f22484086409e3861511940/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=808e039d401bfa4a5f22484086409e3861511940", "patch": "@@ -141,8 +141,10 @@ fn trans<'a>(bcx: &'a Block<'a>, expr: &ast::Expr) -> Callee<'a> {\n         let expr_ty = node_id_type(bcx, ref_expr.id);\n         match def {\n             def::DefFn(did, _) if {\n-                let def_id = inline::maybe_instantiate_inline(bcx.ccx(), did);\n-                match bcx.tcx().map.find(def_id.node) {\n+                let maybe_def_id = inline::get_local_instance(bcx.ccx(), did);\n+                let maybe_ast_node = maybe_def_id.and_then(|def_id| bcx.tcx().map\n+                                                                             .find(def_id.node));\n+                match maybe_ast_node {\n                     Some(ast_map::NodeStructCtor(_)) => true,\n                     _ => false\n                 }"}]}