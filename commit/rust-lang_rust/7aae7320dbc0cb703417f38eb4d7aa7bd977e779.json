{"sha": "7aae7320dbc0cb703417f38eb4d7aa7bd977e779", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYWU3MzIwZGJjMGNiNzAzNDE3ZjM4ZWI0ZDdhYTdiZDk3N2U3Nzk=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-04-03T03:38:43Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-04-04T05:43:08Z"}, "message": "std: change time::timeval to be {sec: i64, usec: i32}.\n\nIt's possible to have negative times if expressing time before 1970, so\nwe should use signed types. Other platforms can return times at a higher\nresolution, so we should use 64 bits.", "tree": {"sha": "fb056c1b1594f2333ad7d912a3ea690f9655f603", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb056c1b1594f2333ad7d912a3ea690f9655f603"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7aae7320dbc0cb703417f38eb4d7aa7bd977e779", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7aae7320dbc0cb703417f38eb4d7aa7bd977e779", "html_url": "https://github.com/rust-lang/rust/commit/7aae7320dbc0cb703417f38eb4d7aa7bd977e779", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7aae7320dbc0cb703417f38eb4d7aa7bd977e779/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d3d4f125c1209fe9f4337f0567a2dea6219ba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/12d3d4f125c1209fe9f4337f0567a2dea6219ba6", "html_url": "https://github.com/rust-lang/rust/commit/12d3d4f125c1209fe9f4337f0567a2dea6219ba6"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "b0470fb1cd1fc8b83c774fbcb6ac8237c317f6c9", "filename": "src/libstd/time.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7aae7320dbc0cb703417f38eb4d7aa7bd977e779/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aae7320dbc0cb703417f38eb4d7aa7bd977e779/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=7aae7320dbc0cb703417f38eb4d7aa7bd977e779", "patch": "@@ -1,19 +1,19 @@\n #[abi = \"cdecl\"]\n native mod rustrt {\n-    fn get_time(&sec: u32, &usec: u32);\n+    fn get_time(&sec: i64, &usec: i32);\n     fn precise_time_ns(&ns: u64);\n }\n \n #[doc = \"A record specifying a time value in seconds and microseconds.\"]\n-type timeval = {sec: u32, usec: u32};\n+type timeval = {sec: i64, usec: i32};\n \n #[doc = \"\n Returns the current time as a `timeval` containing the seconds and\n microseconds since 1970-01-01T00:00:00Z.\n \"]\n fn get_time() -> timeval {\n-    let mut sec = 0u32;\n-    let mut usec = 0u32;\n+    let mut sec = 0i64;\n+    let mut usec = 0i32;\n     rustrt::get_time(sec, usec);\n     ret {sec: sec, usec: usec};\n }\n@@ -42,23 +42,23 @@ mod tests {\n \n     #[test]\n     fn test_get_time() {\n-        const some_recent_date: u32 = 1325376000u32; // 2012-01-01T00:00:00Z\n-        const some_future_date: u32 = 1577836800u32; // 2020-01-01T00:00:00Z\n+        const some_recent_date: i64 = 1325376000i64; // 2012-01-01T00:00:00Z\n+        const some_future_date: i64 = 1577836800i64; // 2020-01-01T00:00:00Z\n \n         let tv1 = get_time();\n         log(debug, \"tv1=\" + uint::str(tv1.sec as uint) + \" sec + \"\n                    + uint::str(tv1.usec as uint) + \" usec\");\n \n         assert tv1.sec > some_recent_date;\n-        assert tv1.usec < 1000000u32;\n+        assert tv1.usec < 1000000i32;\n \n         let tv2 = get_time();\n         log(debug, \"tv2=\" + uint::str(tv2.sec as uint) + \" sec + \"\n                    + uint::str(tv2.usec as uint) + \" usec\");\n \n         assert tv2.sec >= tv1.sec;\n         assert tv2.sec < some_future_date;\n-        assert tv2.usec < 1000000u32;\n+        assert tv2.usec < 1000000i32;\n         if tv2.sec == tv1.sec {\n             assert tv2.usec >= tv1.usec;\n         }"}, {"sha": "a5ef89bc201c47be74e7df1b38842d04bdacc1bd", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7aae7320dbc0cb703417f38eb4d7aa7bd977e779/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7aae7320dbc0cb703417f38eb4d7aa7bd977e779/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=7aae7320dbc0cb703417f38eb4d7aa7bd977e779", "patch": "@@ -408,7 +408,7 @@ rust_ptr_eq(type_desc *t, rust_box *a, rust_box *b) {\n \n #if defined(__WIN32__)\n extern \"C\" CDECL void\n-get_time(uint32_t *sec, uint32_t *usec) {\n+get_time(int64_t *sec, int32_t *usec) {\n     FILETIME fileTime;\n     GetSystemTimeAsFileTime(&fileTime);\n \n@@ -427,7 +427,7 @@ get_time(uint32_t *sec, uint32_t *usec) {\n }\n #else\n extern \"C\" CDECL void\n-get_time(uint32_t *sec, uint32_t *usec) {\n+get_time(int64_t *sec, int32_t *usec) {\n     struct timeval tv;\n     gettimeofday(&tv, NULL);\n     *sec = tv.tv_sec;"}, {"sha": "ff2654e59da6bff4a8e0324bd88a6d95fa3f41c7", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7aae7320dbc0cb703417f38eb4d7aa7bd977e779/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aae7320dbc0cb703417f38eb4d7aa7bd977e779/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=7aae7320dbc0cb703417f38eb4d7aa7bd977e779", "patch": "@@ -4056,7 +4056,7 @@ fn trans_fn(ccx: @crate_ctxt,\n             id: ast::node_id) {\n     let do_time = ccx.sess.opts.stats;\n     let start = if do_time { time::get_time() }\n-                else { {sec: 0u32, usec: 0u32} };\n+                else { {sec: 0i64, usec: 0i32} };\n     let _icx = ccx.insn_ctxt(\"trans_fn\");\n     trans_closure(ccx, path, decl, body, llfndecl, ty_self,\n                   param_substs, id, {|fcx|"}]}