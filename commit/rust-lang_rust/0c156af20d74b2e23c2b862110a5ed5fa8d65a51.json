{"sha": "0c156af20d74b2e23c2b862110a5ed5fa8d65a51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMTU2YWYyMGQ3NGIyZTIzYzJiODYyMTEwYTVlZDVmYThkNjVhNTE=", "commit": {"author": {"name": "sapir", "email": "yasapir@gmail.com", "date": "2019-12-31T23:51:37Z"}, "committer": {"name": "sapir", "email": "yasapir@gmail.com", "date": "2020-04-10T00:52:13Z"}, "message": "Add tests for issue #67691", "tree": {"sha": "a591f7da7c8ce441058d31c0ed1f2ae269a9b6cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a591f7da7c8ce441058d31c0ed1f2ae269a9b6cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c156af20d74b2e23c2b862110a5ed5fa8d65a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c156af20d74b2e23c2b862110a5ed5fa8d65a51", "html_url": "https://github.com/rust-lang/rust/commit/0c156af20d74b2e23c2b862110a5ed5fa8d65a51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c156af20d74b2e23c2b862110a5ed5fa8d65a51/comments", "author": {"login": "sapir", "id": 896766, "node_id": "MDQ6VXNlcjg5Njc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/896766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sapir", "html_url": "https://github.com/sapir", "followers_url": "https://api.github.com/users/sapir/followers", "following_url": "https://api.github.com/users/sapir/following{/other_user}", "gists_url": "https://api.github.com/users/sapir/gists{/gist_id}", "starred_url": "https://api.github.com/users/sapir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sapir/subscriptions", "organizations_url": "https://api.github.com/users/sapir/orgs", "repos_url": "https://api.github.com/users/sapir/repos", "events_url": "https://api.github.com/users/sapir/events{/privacy}", "received_events_url": "https://api.github.com/users/sapir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sapir", "id": 896766, "node_id": "MDQ6VXNlcjg5Njc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/896766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sapir", "html_url": "https://github.com/sapir", "followers_url": "https://api.github.com/users/sapir/followers", "following_url": "https://api.github.com/users/sapir/following{/other_user}", "gists_url": "https://api.github.com/users/sapir/gists{/gist_id}", "starred_url": "https://api.github.com/users/sapir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sapir/subscriptions", "organizations_url": "https://api.github.com/users/sapir/orgs", "repos_url": "https://api.github.com/users/sapir/repos", "events_url": "https://api.github.com/users/sapir/events{/privacy}", "received_events_url": "https://api.github.com/users/sapir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94d346360da50f159e0dc777dc9bc3c5b6b51a00", "url": "https://api.github.com/repos/rust-lang/rust/commits/94d346360da50f159e0dc777dc9bc3c5b6b51a00", "html_url": "https://github.com/rust-lang/rust/commit/94d346360da50f159e0dc777dc9bc3c5b6b51a00"}], "stats": {"total": 174, "additions": 174, "deletions": 0}, "files": [{"sha": "7ec0b33f919b7ee7ac1b57c36e2f2b6f751d50da", "filename": "src/test/ui/lint/issue-67691-unused-field-in-or-pattern.fixed", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/0c156af20d74b2e23c2b862110a5ed5fa8d65a51/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0c156af20d74b2e23c2b862110a5ed5fa8d65a51/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.fixed?ref=0c156af20d74b2e23c2b862110a5ed5fa8d65a51", "patch": "@@ -0,0 +1,61 @@\n+// run-rustfix\n+\n+#![feature(or_patterns)]\n+#![deny(unused)]\n+\n+pub enum MyEnum {\n+    A { i: i32, j: i32 },\n+    B { i: i32, j: i32 },\n+}\n+\n+pub fn no_ref(x: MyEnum) {\n+    use MyEnum::*;\n+\n+    match x {\n+        A { i, j: _ } | B { i, j: _ } => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+    }\n+}\n+\n+pub fn with_ref(x: MyEnum) {\n+    use MyEnum::*;\n+\n+    match x {\n+        A { i, j: _ } | B { i, j: _ } => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+    }\n+}\n+\n+pub fn inner_no_ref(x: Option<MyEnum>) {\n+    use MyEnum::*;\n+\n+    match x {\n+        Some(A { i, j: _ } | B { i, j: _ }) => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+\n+        _ => {}\n+    }\n+}\n+\n+pub fn inner_with_ref(x: Option<MyEnum>) {\n+    use MyEnum::*;\n+\n+    match x {\n+        Some(A { i, j: _ } | B { i, j: _ }) => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+\n+        _ => {}\n+    }\n+}\n+\n+pub fn main() {\n+    no_ref(MyEnum::A { i: 1, j: 2 });\n+    with_ref(MyEnum::A { i: 1, j: 2 });\n+\n+    inner_no_ref(Some(MyEnum::A { i: 1, j: 2 }));\n+    inner_with_ref(Some(MyEnum::A { i: 1, j: 2 }));\n+}"}, {"sha": "d43c637767ad97eeb8a309eb5e43f6793da991f6", "filename": "src/test/ui/lint/issue-67691-unused-field-in-or-pattern.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/0c156af20d74b2e23c2b862110a5ed5fa8d65a51/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c156af20d74b2e23c2b862110a5ed5fa8d65a51/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.rs?ref=0c156af20d74b2e23c2b862110a5ed5fa8d65a51", "patch": "@@ -0,0 +1,61 @@\n+// run-rustfix\n+\n+#![feature(or_patterns)]\n+#![deny(unused)]\n+\n+pub enum MyEnum {\n+    A { i: i32, j: i32 },\n+    B { i: i32, j: i32 },\n+}\n+\n+pub fn no_ref(x: MyEnum) {\n+    use MyEnum::*;\n+\n+    match x {\n+        A { i, j } | B { i, j } => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+    }\n+}\n+\n+pub fn with_ref(x: MyEnum) {\n+    use MyEnum::*;\n+\n+    match x {\n+        A { i, ref j } | B { i, ref j } => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+    }\n+}\n+\n+pub fn inner_no_ref(x: Option<MyEnum>) {\n+    use MyEnum::*;\n+\n+    match x {\n+        Some(A { i, j } | B { i, j }) => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+\n+        _ => {}\n+    }\n+}\n+\n+pub fn inner_with_ref(x: Option<MyEnum>) {\n+    use MyEnum::*;\n+\n+    match x {\n+        Some(A { i, ref j } | B { i, ref j }) => { //~ ERROR unused variable\n+            println!(\"{}\", i);\n+        }\n+\n+        _ => {}\n+    }\n+}\n+\n+pub fn main() {\n+    no_ref(MyEnum::A { i: 1, j: 2 });\n+    with_ref(MyEnum::A { i: 1, j: 2 });\n+\n+    inner_no_ref(Some(MyEnum::A { i: 1, j: 2 }));\n+    inner_with_ref(Some(MyEnum::A { i: 1, j: 2 }));\n+}"}, {"sha": "bda53c67331832839f15796b7df1fa2fb3242315", "filename": "src/test/ui/lint/issue-67691-unused-field-in-or-pattern.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/0c156af20d74b2e23c2b862110a5ed5fa8d65a51/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c156af20d74b2e23c2b862110a5ed5fa8d65a51/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.stderr?ref=0c156af20d74b2e23c2b862110a5ed5fa8d65a51", "patch": "@@ -0,0 +1,52 @@\n+error: unused variable: `j`\n+  --> $DIR/issue-67691-unused-field-in-or-pattern.rs:15:16\n+   |\n+LL |         A { i, j } | B { i, j } => {\n+   |                ^            ^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-67691-unused-field-in-or-pattern.rs:4:9\n+   |\n+LL | #![deny(unused)]\n+   |         ^^^^^^\n+   = note: `#[deny(unused_variables)]` implied by `#[deny(unused)]`\n+help: try ignoring the field\n+   |\n+LL |         A { i, j: _ } | B { i, j: _ } => {\n+   |                ^^^^            ^^^^\n+\n+error: unused variable: `j`\n+  --> $DIR/issue-67691-unused-field-in-or-pattern.rs:25:16\n+   |\n+LL |         A { i, ref j } | B { i, ref j } => {\n+   |                ^^^^^            ^^^^^\n+   |\n+help: try ignoring the field\n+   |\n+LL |         A { i, j: _ } | B { i, j: _ } => {\n+   |                ^^^^            ^^^^\n+\n+error: unused variable: `j`\n+  --> $DIR/issue-67691-unused-field-in-or-pattern.rs:35:21\n+   |\n+LL |         Some(A { i, j } | B { i, j }) => {\n+   |                     ^            ^\n+   |\n+help: try ignoring the field\n+   |\n+LL |         Some(A { i, j: _ } | B { i, j: _ }) => {\n+   |                     ^^^^            ^^^^\n+\n+error: unused variable: `j`\n+  --> $DIR/issue-67691-unused-field-in-or-pattern.rs:47:21\n+   |\n+LL |         Some(A { i, ref j } | B { i, ref j }) => {\n+   |                     ^^^^^            ^^^^^\n+   |\n+help: try ignoring the field\n+   |\n+LL |         Some(A { i, j: _ } | B { i, j: _ }) => {\n+   |                     ^^^^            ^^^^\n+\n+error: aborting due to 5 previous errors\n+"}]}