{"sha": "8e5910fdf26cf0db4c0002954c10500c6fcac41b", "node_id": "C_kwDOAAsO6NoAKDhlNTkxMGZkZjI2Y2YwZGI0YzAwMDI5NTRjMTA1MDBjNmZjYWM0MWI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-07T12:19:46Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-09T17:59:35Z"}, "message": "Separate test cases into bbs.", "tree": {"sha": "3d36537b6292cd49a3ff5ffa02e00d0c73ca5b90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d36537b6292cd49a3ff5ffa02e00d0c73ca5b90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e5910fdf26cf0db4c0002954c10500c6fcac41b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e5910fdf26cf0db4c0002954c10500c6fcac41b", "html_url": "https://github.com/rust-lang/rust/commit/8e5910fdf26cf0db4c0002954c10500c6fcac41b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e5910fdf26cf0db4c0002954c10500c6fcac41b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c17e878fb86bd65b1148e7b08cbb465d396596a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c17e878fb86bd65b1148e7b08cbb465d396596a2", "html_url": "https://github.com/rust-lang/rust/commit/c17e878fb86bd65b1148e7b08cbb465d396596a2"}], "stats": {"total": 2031, "additions": 1207, "deletions": 824}, "files": [{"sha": "c8488400f9059bf67a48113393ea1dc2c7e4d573", "filename": "tests/mir-opt/reference_prop.dominate_storage.ReferencePropagation.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.dominate_storage.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.dominate_storage.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.dominate_storage.ReferencePropagation.diff?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -24,7 +24,7 @@\n           _5 = (*_2);                      // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n           _0 = opaque::<i32>(_5) -> bb3;   // scope 0 at $DIR/reference_prop.rs:+16:13: +16:38\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:357:28: 357:34\n+                                           // + span: $DIR/reference_prop.rs:382:28: 382:34\n                                            // + literal: Const { ty: fn(i32) {opaque::<i32>}, val: Value(<ZST>) }\n       }\n   "}, {"sha": "50b2e152afdbd9e19a52846422c4e6d324ac8b70", "filename": "tests/mir-opt/reference_prop.maybe_dead.ReferencePropagation.diff", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.maybe_dead.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.maybe_dead.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.maybe_dead.ReferencePropagation.diff?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -9,6 +9,7 @@\n       let mut _5: &mut i32;                // in scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n       let mut _6: i32;                     // in scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n       let mut _7: i32;                     // in scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n+      let mut _8: i32;                     // in scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n   \n       bb0: {\n           StorageLive(_2);                 // scope 0 at $DIR/reference_prop.rs:+7:13: +7:27\n@@ -18,33 +19,38 @@\n           _4 = &_2;                        // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n           _5 = &mut _3;                    // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n           (*_5) = const 7_i32;             // scope 0 at $DIR/reference_prop.rs:+14:13: +14:19\n-          switchInt(_1) -> [1: bb1, otherwise: bb2]; // scope 0 at $DIR/reference_prop.rs:+15:13: +15:46\n+-         _6 = (*_4);                      // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n++         _6 = _2;                         // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n+          switchInt(_1) -> [1: bb1, otherwise: bb2]; // scope 0 at $DIR/reference_prop.rs:+17:13: +17:46\n       }\n   \n       bb1: {\n-          StorageDead(_2);                 // scope 0 at $DIR/reference_prop.rs:+18:13: +18:27\n-          StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+19:13: +19:27\n-          goto -> bb2;                     // scope 0 at $DIR/reference_prop.rs:+20:13: +20:22\n+          StorageDead(_2);                 // scope 0 at $DIR/reference_prop.rs:+20:13: +20:27\n+          StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+21:13: +21:27\n+          _0 = opaque::<i32>(_6) -> bb2;   // scope 0 at $DIR/reference_prop.rs:+22:13: +22:38\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:416:28: 416:34\n+                                           // + literal: Const { ty: fn(i32) {opaque::<i32>}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          _6 = (*_4);                      // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n-          _0 = opaque::<i32>(_6) -> bb3;   // scope 0 at $DIR/reference_prop.rs:+25:13: +25:38\n+          _7 = (*_4);                      // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n+          _0 = opaque::<i32>(_7) -> bb3;   // scope 0 at $DIR/reference_prop.rs:+27:13: +27:38\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:394:28: 394:34\n+                                           // + span: $DIR/reference_prop.rs:421:28: 421:34\n                                            // + literal: Const { ty: fn(i32) {opaque::<i32>}, val: Value(<ZST>) }\n       }\n   \n       bb3: {\n-          _7 = (*_5);                      // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n-          _0 = opaque::<i32>(_7) -> bb4;   // scope 0 at $DIR/reference_prop.rs:+31:13: +31:43\n+          _8 = (*_5);                      // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n+          _0 = opaque::<i32>(_8) -> bb4;   // scope 0 at $DIR/reference_prop.rs:+33:13: +33:43\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:400:33: 400:39\n+                                           // + span: $DIR/reference_prop.rs:427:33: 427:39\n                                            // + literal: Const { ty: fn(i32) {opaque::<i32>}, val: Value(<ZST>) }\n       }\n   \n       bb4: {\n-          return;                          // scope 0 at $DIR/reference_prop.rs:+34:13: +34:21\n+          return;                          // scope 0 at $DIR/reference_prop.rs:+36:13: +36:21\n       }\n   }\n   "}, {"sha": "08de44659e987ce1ef74a8d7589d1c9e13e3a77d", "filename": "tests/mir-opt/reference_prop.multiple_storage.ReferencePropagation.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.multiple_storage.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.multiple_storage.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.multiple_storage.ReferencePropagation.diff?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -16,7 +16,7 @@\n           _3 = (*_2);                      // scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n           _0 = opaque::<i32>(_3) -> bb1;   // scope 0 at $DIR/reference_prop.rs:+14:13: +14:43\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:331:33: 331:39\n+                                           // + span: $DIR/reference_prop.rs:356:33: 356:39\n                                            // + literal: Const { ty: fn(i32) {opaque::<i32>}, val: Value(<ZST>) }\n       }\n   "}, {"sha": "04f5cc9d41f5b5633b1ececbc9509c3fce4583c6", "filename": "tests/mir-opt/reference_prop.reference_propagation.ReferencePropagation.diff", "status": "modified", "additions": 286, "deletions": 202, "changes": 488, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.reference_propagation.ReferencePropagation.diff?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -5,29 +5,41 @@\n       debug single => _1;                  // in scope 0 at $DIR/reference_prop.rs:+0:39: +0:45\n       debug multiple => _2;                // in scope 0 at $DIR/reference_prop.rs:+0:54: +0:66\n       let mut _0: ();                      // return place in scope 0 at $DIR/reference_prop.rs:+0:75: +0:75\n-      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n+      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n       let _4: usize;                       // in scope 0 at $DIR/reference_prop.rs:+3:13: +3:14\n-      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-      let _8: usize;                       // in scope 0 at $DIR/reference_prop.rs:+10:13: +10:14\n-      let mut _11: &usize;                 // in scope 0 at $DIR/reference_prop.rs:+13:13: +13:16\n-      let _12: &usize;                     // in scope 0 at $DIR/reference_prop.rs:+13:13: +13:16\n-      let _14: ();                         // in scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-      let _15: usize;                      // in scope 0 at $DIR/reference_prop.rs:+20:13: +20:14\n-      let _19: ();                         // in scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-      let _20: usize;                      // in scope 0 at $DIR/reference_prop.rs:+28:13: +28:14\n-      let _24: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-      let _25: usize;                      // in scope 0 at $DIR/reference_prop.rs:+36:13: +36:14\n-      let _28: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:9: +39:18\n-      let mut _29: &usize;                 // in scope 0 at $DIR/reference_prop.rs:+39:16: +39:17\n-      let _30: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-      let _31: usize;                      // in scope 0 at $DIR/reference_prop.rs:+44:13: +44:14\n-      let _37: ();                         // in scope 0 at $DIR/reference_prop.rs:+52:9: +52:19\n-      let mut _38: &usize;                 // in scope 0 at $DIR/reference_prop.rs:+52:16: +52:18\n-      let _39: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-      let _40: &T;                         // in scope 0 at $DIR/reference_prop.rs:+57:13: +57:14\n-      let _42: &T;                         // in scope 0 at $DIR/reference_prop.rs:+63:13: +63:14\n-      let mut _43: &T;                     // in scope 0 at $DIR/reference_prop.rs:+64:20: +64:28\n-      let _44: &T;                         // in scope 0 at $DIR/reference_prop.rs:+64:20: +64:28\n+      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+6:9: +6:19\n+      let mut _8: ();                      // in scope 0 at $DIR/reference_prop.rs:+6:16: +6:18\n+      let _9: ();                          // in scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+      let _10: usize;                      // in scope 0 at $DIR/reference_prop.rs:+11:13: +11:14\n+      let mut _13: &usize;                 // in scope 0 at $DIR/reference_prop.rs:+14:13: +14:16\n+      let _14: &usize;                     // in scope 0 at $DIR/reference_prop.rs:+14:13: +14:16\n+      let _16: ();                         // in scope 0 at $DIR/reference_prop.rs:+17:9: +17:19\n+      let mut _17: ();                     // in scope 0 at $DIR/reference_prop.rs:+17:16: +17:18\n+      let _18: ();                         // in scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+      let _19: usize;                      // in scope 0 at $DIR/reference_prop.rs:+22:13: +22:14\n+      let _23: ();                         // in scope 0 at $DIR/reference_prop.rs:+26:9: +26:19\n+      let mut _24: ();                     // in scope 0 at $DIR/reference_prop.rs:+26:16: +26:18\n+      let _25: ();                         // in scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+      let _26: usize;                      // in scope 0 at $DIR/reference_prop.rs:+31:13: +31:14\n+      let _30: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:9: +35:19\n+      let mut _31: ();                     // in scope 0 at $DIR/reference_prop.rs:+35:16: +35:18\n+      let _32: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+      let _33: usize;                      // in scope 0 at $DIR/reference_prop.rs:+40:13: +40:14\n+      let _36: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:9: +43:18\n+      let mut _37: &usize;                 // in scope 0 at $DIR/reference_prop.rs:+43:16: +43:17\n+      let _38: ();                         // in scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+      let _39: usize;                      // in scope 0 at $DIR/reference_prop.rs:+48:13: +48:14\n+      let _45: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:9: +56:19\n+      let mut _46: &usize;                 // in scope 0 at $DIR/reference_prop.rs:+56:16: +56:18\n+      let _47: ();                         // in scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+      let _48: &T;                         // in scope 0 at $DIR/reference_prop.rs:+61:13: +61:14\n+      let _50: ();                         // in scope 0 at $DIR/reference_prop.rs:+63:9: +63:19\n+      let mut _51: ();                     // in scope 0 at $DIR/reference_prop.rs:+63:16: +63:18\n+      let _52: &T;                         // in scope 0 at $DIR/reference_prop.rs:+68:13: +68:14\n+      let mut _53: &T;                     // in scope 0 at $DIR/reference_prop.rs:+69:20: +69:28\n+      let _54: &T;                         // in scope 0 at $DIR/reference_prop.rs:+69:20: +69:28\n+      let _56: ();                         // in scope 0 at $DIR/reference_prop.rs:+71:9: +71:19\n+      let mut _57: ();                     // in scope 0 at $DIR/reference_prop.rs:+71:16: +71:18\n       scope 1 {\n           debug a => _4;                   // in scope 1 at $DIR/reference_prop.rs:+3:13: +3:14\n           let _5: &usize;                  // in scope 1 at $DIR/reference_prop.rs:+4:13: +4:14\n@@ -40,252 +52,324 @@\n           }\n       }\n       scope 4 {\n-          debug a => _8;                   // in scope 4 at $DIR/reference_prop.rs:+10:13: +10:14\n-          let _9: usize;                   // in scope 4 at $DIR/reference_prop.rs:+11:13: +11:15\n+          debug a => _10;                  // in scope 4 at $DIR/reference_prop.rs:+11:13: +11:14\n+          let _11: usize;                  // in scope 4 at $DIR/reference_prop.rs:+12:13: +12:15\n           scope 5 {\n-              debug a2 => _9;              // in scope 5 at $DIR/reference_prop.rs:+11:13: +11:15\n-              let mut _10: &usize;         // in scope 5 at $DIR/reference_prop.rs:+12:13: +12:18\n+              debug a2 => _11;             // in scope 5 at $DIR/reference_prop.rs:+12:13: +12:15\n+              let mut _12: &usize;         // in scope 5 at $DIR/reference_prop.rs:+13:13: +13:18\n               scope 6 {\n-                  debug b => _10;          // in scope 6 at $DIR/reference_prop.rs:+12:13: +12:18\n-                  let _13: usize;          // in scope 6 at $DIR/reference_prop.rs:+15:13: +15:14\n+                  debug b => _12;          // in scope 6 at $DIR/reference_prop.rs:+13:13: +13:18\n+                  let _15: usize;          // in scope 6 at $DIR/reference_prop.rs:+16:13: +16:14\n                   scope 7 {\n-                      debug c => _13;      // in scope 7 at $DIR/reference_prop.rs:+15:13: +15:14\n+                      debug c => _15;      // in scope 7 at $DIR/reference_prop.rs:+16:13: +16:14\n                   }\n               }\n           }\n       }\n       scope 8 {\n-          debug a => _15;                  // in scope 8 at $DIR/reference_prop.rs:+20:13: +20:14\n-          let _16: &usize;                 // in scope 8 at $DIR/reference_prop.rs:+21:13: +21:14\n+          debug a => _19;                  // in scope 8 at $DIR/reference_prop.rs:+22:13: +22:14\n+          let _20: &usize;                 // in scope 8 at $DIR/reference_prop.rs:+23:13: +23:14\n           scope 9 {\n-              debug b => _16;              // in scope 9 at $DIR/reference_prop.rs:+21:13: +21:14\n-              let _17: &&usize;            // in scope 9 at $DIR/reference_prop.rs:+22:13: +22:14\n+              debug b => _20;              // in scope 9 at $DIR/reference_prop.rs:+23:13: +23:14\n+              let _21: &&usize;            // in scope 9 at $DIR/reference_prop.rs:+24:13: +24:14\n               scope 10 {\n-                  debug d => _17;          // in scope 10 at $DIR/reference_prop.rs:+22:13: +22:14\n-                  let _18: usize;          // in scope 10 at $DIR/reference_prop.rs:+23:13: +23:14\n+                  debug d => _21;          // in scope 10 at $DIR/reference_prop.rs:+24:13: +24:14\n+                  let _22: usize;          // in scope 10 at $DIR/reference_prop.rs:+25:13: +25:14\n                   scope 11 {\n-                      debug c => _18;      // in scope 11 at $DIR/reference_prop.rs:+23:13: +23:14\n+                      debug c => _22;      // in scope 11 at $DIR/reference_prop.rs:+25:13: +25:14\n                   }\n               }\n           }\n       }\n       scope 12 {\n-          debug a => _20;                  // in scope 12 at $DIR/reference_prop.rs:+28:13: +28:14\n-          let mut _21: &usize;             // in scope 12 at $DIR/reference_prop.rs:+29:13: +29:18\n+          debug a => _26;                  // in scope 12 at $DIR/reference_prop.rs:+31:13: +31:14\n+          let mut _27: &usize;             // in scope 12 at $DIR/reference_prop.rs:+32:13: +32:18\n           scope 13 {\n-              debug b => _21;              // in scope 13 at $DIR/reference_prop.rs:+29:13: +29:18\n-              let _22: &mut &usize;        // in scope 13 at $DIR/reference_prop.rs:+30:13: +30:14\n+              debug b => _27;              // in scope 13 at $DIR/reference_prop.rs:+32:13: +32:18\n+              let _28: &mut &usize;        // in scope 13 at $DIR/reference_prop.rs:+33:13: +33:14\n               scope 14 {\n-                  debug d => _22;          // in scope 14 at $DIR/reference_prop.rs:+30:13: +30:14\n-                  let _23: usize;          // in scope 14 at $DIR/reference_prop.rs:+31:13: +31:14\n+                  debug d => _28;          // in scope 14 at $DIR/reference_prop.rs:+33:13: +33:14\n+                  let _29: usize;          // in scope 14 at $DIR/reference_prop.rs:+34:13: +34:14\n                   scope 15 {\n-                      debug c => _23;      // in scope 15 at $DIR/reference_prop.rs:+31:13: +31:14\n+                      debug c => _29;      // in scope 15 at $DIR/reference_prop.rs:+34:13: +34:14\n                   }\n               }\n           }\n       }\n       scope 16 {\n-          debug a => _25;                  // in scope 16 at $DIR/reference_prop.rs:+36:13: +36:14\n-          let _26: &usize;                 // in scope 16 at $DIR/reference_prop.rs:+37:13: +37:14\n+          debug a => _33;                  // in scope 16 at $DIR/reference_prop.rs:+40:13: +40:14\n+          let _34: &usize;                 // in scope 16 at $DIR/reference_prop.rs:+41:13: +41:14\n           scope 17 {\n-              debug b => _26;              // in scope 17 at $DIR/reference_prop.rs:+37:13: +37:14\n-              let _27: usize;              // in scope 17 at $DIR/reference_prop.rs:+38:13: +38:14\n+              debug b => _34;              // in scope 17 at $DIR/reference_prop.rs:+41:13: +41:14\n+              let _35: usize;              // in scope 17 at $DIR/reference_prop.rs:+42:13: +42:14\n               scope 18 {\n-                  debug c => _27;          // in scope 18 at $DIR/reference_prop.rs:+38:13: +38:14\n+                  debug c => _35;          // in scope 18 at $DIR/reference_prop.rs:+42:13: +42:14\n               }\n           }\n       }\n       scope 19 {\n-          debug a => _31;                  // in scope 19 at $DIR/reference_prop.rs:+44:13: +44:14\n-          let _32: &usize;                 // in scope 19 at $DIR/reference_prop.rs:+45:13: +45:15\n+          debug a => _39;                  // in scope 19 at $DIR/reference_prop.rs:+48:13: +48:14\n+          let _40: &usize;                 // in scope 19 at $DIR/reference_prop.rs:+49:13: +49:15\n           scope 20 {\n-              debug b1 => _32;             // in scope 20 at $DIR/reference_prop.rs:+45:13: +45:15\n-              let _33: usize;              // in scope 20 at $DIR/reference_prop.rs:+46:13: +46:14\n+              debug b1 => _40;             // in scope 20 at $DIR/reference_prop.rs:+49:13: +49:15\n+              let _41: usize;              // in scope 20 at $DIR/reference_prop.rs:+50:13: +50:14\n               scope 21 {\n-                  debug c => _33;          // in scope 21 at $DIR/reference_prop.rs:+46:13: +46:14\n-                  let _34: &usize;         // in scope 21 at $DIR/reference_prop.rs:+47:13: +47:15\n+                  debug c => _41;          // in scope 21 at $DIR/reference_prop.rs:+50:13: +50:14\n+                  let _42: &usize;         // in scope 21 at $DIR/reference_prop.rs:+51:13: +51:15\n                   scope 22 {\n-                      debug b2 => _34;     // in scope 22 at $DIR/reference_prop.rs:+47:13: +47:15\n-                      let _35: usize;      // in scope 22 at $DIR/reference_prop.rs:+48:13: +48:15\n+                      debug b2 => _42;     // in scope 22 at $DIR/reference_prop.rs:+51:13: +51:15\n+                      let _43: usize;      // in scope 22 at $DIR/reference_prop.rs:+52:13: +52:15\n                       scope 23 {\n-                          debug c2 => _35; // in scope 23 at $DIR/reference_prop.rs:+48:13: +48:15\n-                          let _36: &usize; // in scope 23 at $DIR/reference_prop.rs:+49:13: +49:15\n+                          debug c2 => _43; // in scope 23 at $DIR/reference_prop.rs:+52:13: +52:15\n+                          let _44: &usize; // in scope 23 at $DIR/reference_prop.rs:+53:13: +53:15\n                           scope 24 {\n-                              debug b3 => _36; // in scope 24 at $DIR/reference_prop.rs:+49:13: +49:15\n+                              debug b3 => _44; // in scope 24 at $DIR/reference_prop.rs:+53:13: +53:15\n                           }\n                       }\n                   }\n               }\n           }\n       }\n       scope 25 {\n-          debug a => _40;                  // in scope 25 at $DIR/reference_prop.rs:+57:13: +57:14\n-          let _41: T;                      // in scope 25 at $DIR/reference_prop.rs:+58:13: +58:14\n+          debug a => _48;                  // in scope 25 at $DIR/reference_prop.rs:+61:13: +61:14\n+          let _49: T;                      // in scope 25 at $DIR/reference_prop.rs:+62:13: +62:14\n           scope 26 {\n-              debug b => _41;              // in scope 26 at $DIR/reference_prop.rs:+58:13: +58:14\n+              debug b => _49;              // in scope 26 at $DIR/reference_prop.rs:+62:13: +62:14\n           }\n       }\n       scope 27 {\n-          debug a => _42;                  // in scope 27 at $DIR/reference_prop.rs:+63:13: +63:14\n-          let _45: T;                      // in scope 27 at $DIR/reference_prop.rs:+65:13: +65:14\n+          debug a => _52;                  // in scope 27 at $DIR/reference_prop.rs:+68:13: +68:14\n+          let _55: T;                      // in scope 27 at $DIR/reference_prop.rs:+70:13: +70:14\n           scope 28 {\n-              debug b => _45;              // in scope 28 at $DIR/reference_prop.rs:+65:13: +65:14\n+              debug b => _55;              // in scope 28 at $DIR/reference_prop.rs:+70:13: +70:14\n           }\n       }\n   \n       bb0: {\n--         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n+-         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n           StorageLive(_4);                 // scope 0 at $DIR/reference_prop.rs:+3:13: +3:14\n           _4 = const 5_usize;              // scope 0 at $DIR/reference_prop.rs:+3:17: +3:24\n           StorageLive(_5);                 // scope 1 at $DIR/reference_prop.rs:+4:13: +4:14\n           _5 = &_4;                        // scope 1 at $DIR/reference_prop.rs:+4:17: +4:19\n           StorageLive(_6);                 // scope 2 at $DIR/reference_prop.rs:+5:13: +5:14\n -         _6 = (*_5);                      // scope 2 at $DIR/reference_prop.rs:+5:17: +5:19\n--         _3 = const ();                   // scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n +         _6 = _4;                         // scope 2 at $DIR/reference_prop.rs:+5:17: +5:19\n-          StorageDead(_6);                 // scope 2 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_5);                 // scope 1 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_4);                 // scope 0 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageLive(_7);                 // scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageLive(_8);                 // scope 0 at $DIR/reference_prop.rs:+10:13: +10:14\n-          _8 = const 5_usize;              // scope 0 at $DIR/reference_prop.rs:+10:17: +10:24\n-          StorageLive(_9);                 // scope 4 at $DIR/reference_prop.rs:+11:13: +11:15\n-          _9 = const 7_usize;              // scope 4 at $DIR/reference_prop.rs:+11:18: +11:25\n-          StorageLive(_10);                // scope 5 at $DIR/reference_prop.rs:+12:13: +12:18\n-          _10 = &_8;                       // scope 5 at $DIR/reference_prop.rs:+12:21: +12:23\n-          StorageLive(_11);                // scope 6 at $DIR/reference_prop.rs:+13:13: +13:16\n--         StorageLive(_12);                // scope 6 at $DIR/reference_prop.rs:+13:13: +13:16\n--         _12 = &_9;                       // scope 6 at $DIR/reference_prop.rs:+13:13: +13:16\n--         _11 = &(*_12);                   // scope 6 at $DIR/reference_prop.rs:+13:13: +13:16\n-+         _11 = &_9;                       // scope 6 at $DIR/reference_prop.rs:+13:13: +13:16\n-          _10 = move _11;                  // scope 6 at $DIR/reference_prop.rs:+13:9: +13:16\n-          StorageDead(_11);                // scope 6 at $DIR/reference_prop.rs:+13:15: +13:16\n--         StorageDead(_12);                // scope 6 at $DIR/reference_prop.rs:+13:16: +13:17\n-          StorageLive(_13);                // scope 6 at $DIR/reference_prop.rs:+15:13: +15:14\n-          _13 = (*_10);                    // scope 6 at $DIR/reference_prop.rs:+15:17: +15:19\n--         _7 = const ();                   // scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageDead(_13);                // scope 6 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_10);                // scope 5 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_9);                 // scope 4 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_8);                 // scope 0 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageDead(_7);                 // scope 0 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageLive(_14);                // scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageLive(_15);                // scope 0 at $DIR/reference_prop.rs:+20:13: +20:14\n-          _15 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+20:17: +20:24\n-          StorageLive(_16);                // scope 8 at $DIR/reference_prop.rs:+21:13: +21:14\n-          _16 = &_15;                      // scope 8 at $DIR/reference_prop.rs:+21:17: +21:19\n-          StorageLive(_17);                // scope 9 at $DIR/reference_prop.rs:+22:13: +22:14\n-          _17 = &_16;                      // scope 9 at $DIR/reference_prop.rs:+22:17: +22:19\n-          StorageLive(_18);                // scope 10 at $DIR/reference_prop.rs:+23:13: +23:14\n-          _18 = (*_16);                    // scope 10 at $DIR/reference_prop.rs:+23:17: +23:19\n--         _14 = const ();                  // scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageDead(_18);                // scope 10 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_17);                // scope 9 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_16);                // scope 8 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_15);                // scope 0 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageDead(_14);                // scope 0 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageLive(_19);                // scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageLive(_20);                // scope 0 at $DIR/reference_prop.rs:+28:13: +28:14\n-          _20 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+28:17: +28:24\n-          StorageLive(_21);                // scope 12 at $DIR/reference_prop.rs:+29:13: +29:18\n-          _21 = &_20;                      // scope 12 at $DIR/reference_prop.rs:+29:21: +29:23\n-          StorageLive(_22);                // scope 13 at $DIR/reference_prop.rs:+30:13: +30:14\n-          _22 = &mut _21;                  // scope 13 at $DIR/reference_prop.rs:+30:17: +30:23\n-          StorageLive(_23);                // scope 14 at $DIR/reference_prop.rs:+31:13: +31:14\n-          _23 = (*_21);                    // scope 14 at $DIR/reference_prop.rs:+31:17: +31:19\n--         _19 = const ();                  // scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageDead(_23);                // scope 14 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_22);                // scope 13 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_21);                // scope 12 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_20);                // scope 0 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageDead(_19);                // scope 0 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageLive(_24);                // scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageLive(_25);                // scope 0 at $DIR/reference_prop.rs:+36:13: +36:14\n-          _25 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+36:17: +36:24\n-          StorageLive(_26);                // scope 16 at $DIR/reference_prop.rs:+37:13: +37:14\n-          _26 = &_25;                      // scope 16 at $DIR/reference_prop.rs:+37:17: +37:19\n-          StorageLive(_27);                // scope 17 at $DIR/reference_prop.rs:+38:13: +38:14\n--         _27 = (*_26);                    // scope 17 at $DIR/reference_prop.rs:+38:17: +38:19\n-+         _27 = _25;                       // scope 17 at $DIR/reference_prop.rs:+38:17: +38:19\n-          StorageLive(_28);                // scope 18 at $DIR/reference_prop.rs:+39:9: +39:18\n-          StorageLive(_29);                // scope 18 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _29 = _26;                       // scope 18 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _28 = opaque::<&usize>(move _29) -> bb1; // scope 18 at $DIR/reference_prop.rs:+39:9: +39:18\n+          StorageLive(_7);                 // scope 3 at $DIR/reference_prop.rs:+6:9: +6:19\n+          StorageLive(_8);                 // scope 3 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _8 = ();                         // scope 3 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _7 = opaque::<()>(move _8) -> bb1; // scope 3 at $DIR/reference_prop.rs:+6:9: +6:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:48:9: 48:15\n-                                           // + literal: Const { ty: fn(&usize) {opaque::<&usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:15:9: 15:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageDead(_29);                // scope 18 at $DIR/reference_prop.rs:+39:17: +39:18\n-          StorageDead(_28);                // scope 18 at $DIR/reference_prop.rs:+39:18: +39:19\n--         _24 = const ();                  // scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageDead(_27);                // scope 17 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_26);                // scope 16 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_25);                // scope 0 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageDead(_24);                // scope 0 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageLive(_30);                // scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageLive(_31);                // scope 0 at $DIR/reference_prop.rs:+44:13: +44:14\n-          _31 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+44:17: +44:24\n-          StorageLive(_32);                // scope 19 at $DIR/reference_prop.rs:+45:13: +45:15\n-          _32 = &_31;                      // scope 19 at $DIR/reference_prop.rs:+45:18: +45:20\n-          StorageLive(_33);                // scope 20 at $DIR/reference_prop.rs:+46:13: +46:14\n--         _33 = (*_32);                    // scope 20 at $DIR/reference_prop.rs:+46:17: +46:20\n-+         _33 = _31;                       // scope 20 at $DIR/reference_prop.rs:+46:17: +46:20\n-          StorageLive(_34);                // scope 21 at $DIR/reference_prop.rs:+47:13: +47:15\n-          _34 = _32;                       // scope 21 at $DIR/reference_prop.rs:+47:18: +47:20\n-          StorageLive(_35);                // scope 22 at $DIR/reference_prop.rs:+48:13: +48:15\n--         _35 = (*_34);                    // scope 22 at $DIR/reference_prop.rs:+48:18: +48:21\n-+         _35 = _31;                       // scope 22 at $DIR/reference_prop.rs:+48:18: +48:21\n-          StorageLive(_36);                // scope 23 at $DIR/reference_prop.rs:+49:13: +49:15\n-          _36 = _34;                       // scope 23 at $DIR/reference_prop.rs:+49:18: +49:20\n-          StorageLive(_37);                // scope 24 at $DIR/reference_prop.rs:+52:9: +52:19\n-          StorageLive(_38);                // scope 24 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _38 = _36;                       // scope 24 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _37 = opaque::<&usize>(move _38) -> bb2; // scope 24 at $DIR/reference_prop.rs:+52:9: +52:19\n+          StorageDead(_8);                 // scope 3 at $DIR/reference_prop.rs:+6:18: +6:19\n+          StorageDead(_7);                 // scope 3 at $DIR/reference_prop.rs:+6:19: +6:20\n+-         _3 = const ();                   // scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n+          StorageDead(_6);                 // scope 2 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_5);                 // scope 1 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_4);                 // scope 0 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageLive(_9);                 // scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageLive(_10);                // scope 0 at $DIR/reference_prop.rs:+11:13: +11:14\n+          _10 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+11:17: +11:24\n+          StorageLive(_11);                // scope 4 at $DIR/reference_prop.rs:+12:13: +12:15\n+          _11 = const 7_usize;             // scope 4 at $DIR/reference_prop.rs:+12:18: +12:25\n+          StorageLive(_12);                // scope 5 at $DIR/reference_prop.rs:+13:13: +13:18\n+          _12 = &_10;                      // scope 5 at $DIR/reference_prop.rs:+13:21: +13:23\n+          StorageLive(_13);                // scope 6 at $DIR/reference_prop.rs:+14:13: +14:16\n+-         StorageLive(_14);                // scope 6 at $DIR/reference_prop.rs:+14:13: +14:16\n+-         _14 = &_11;                      // scope 6 at $DIR/reference_prop.rs:+14:13: +14:16\n+-         _13 = &(*_14);                   // scope 6 at $DIR/reference_prop.rs:+14:13: +14:16\n++         _13 = &_11;                      // scope 6 at $DIR/reference_prop.rs:+14:13: +14:16\n+          _12 = move _13;                  // scope 6 at $DIR/reference_prop.rs:+14:9: +14:16\n+          StorageDead(_13);                // scope 6 at $DIR/reference_prop.rs:+14:15: +14:16\n+-         StorageDead(_14);                // scope 6 at $DIR/reference_prop.rs:+14:16: +14:17\n+          StorageLive(_15);                // scope 6 at $DIR/reference_prop.rs:+16:13: +16:14\n+          _15 = (*_12);                    // scope 6 at $DIR/reference_prop.rs:+16:17: +16:19\n+          StorageLive(_16);                // scope 7 at $DIR/reference_prop.rs:+17:9: +17:19\n+          StorageLive(_17);                // scope 7 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _17 = ();                        // scope 7 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _16 = opaque::<()>(move _17) -> bb2; // scope 7 at $DIR/reference_prop.rs:+17:9: +17:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:61:9: 61:15\n-                                           // + literal: Const { ty: fn(&usize) {opaque::<&usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:26:9: 26:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          StorageDead(_38);                // scope 24 at $DIR/reference_prop.rs:+52:18: +52:19\n-          StorageDead(_37);                // scope 24 at $DIR/reference_prop.rs:+52:19: +52:20\n--         _30 = const ();                  // scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageDead(_36);                // scope 23 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_35);                // scope 22 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_34);                // scope 21 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_33);                // scope 20 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_32);                // scope 19 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_31);                // scope 0 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageDead(_30);                // scope 0 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageLive(_39);                // scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-          StorageLive(_40);                // scope 0 at $DIR/reference_prop.rs:+57:13: +57:14\n-          _40 = &(*_1);                    // scope 0 at $DIR/reference_prop.rs:+57:17: +57:25\n-          StorageLive(_41);                // scope 25 at $DIR/reference_prop.rs:+58:13: +58:14\n--         _41 = (*_40);                    // scope 25 at $DIR/reference_prop.rs:+58:17: +58:19\n--         _39 = const ();                  // scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-+         _41 = (*_1);                     // scope 25 at $DIR/reference_prop.rs:+58:17: +58:19\n-          StorageDead(_41);                // scope 25 at $DIR/reference_prop.rs:+59:5: +59:6\n-          StorageDead(_40);                // scope 0 at $DIR/reference_prop.rs:+59:5: +59:6\n--         StorageDead(_39);                // scope 0 at $DIR/reference_prop.rs:+59:5: +59:6\n-          StorageLive(_42);                // scope 0 at $DIR/reference_prop.rs:+63:13: +63:14\n-          _42 = &(*_2);                    // scope 0 at $DIR/reference_prop.rs:+63:17: +63:27\n-          StorageLive(_43);                // scope 27 at $DIR/reference_prop.rs:+64:20: +64:28\n--         StorageLive(_44);                // scope 27 at $DIR/reference_prop.rs:+64:20: +64:28\n--         _44 = &(*_1);                    // scope 27 at $DIR/reference_prop.rs:+64:20: +64:28\n--         _43 = &(*_44);                   // scope 27 at $DIR/reference_prop.rs:+64:20: +64:28\n-+         _43 = &(*_1);                    // scope 27 at $DIR/reference_prop.rs:+64:20: +64:28\n-          _2 = move _43;                   // scope 27 at $DIR/reference_prop.rs:+64:9: +64:28\n-          StorageDead(_43);                // scope 27 at $DIR/reference_prop.rs:+64:27: +64:28\n--         StorageDead(_44);                // scope 27 at $DIR/reference_prop.rs:+64:28: +64:29\n-          StorageLive(_45);                // scope 27 at $DIR/reference_prop.rs:+65:13: +65:14\n-          _45 = (*_42);                    // scope 27 at $DIR/reference_prop.rs:+65:17: +65:19\n-          _0 = const ();                   // scope 0 at $DIR/reference_prop.rs:+62:5: +66:6\n-          StorageDead(_45);                // scope 27 at $DIR/reference_prop.rs:+66:5: +66:6\n-          StorageDead(_42);                // scope 0 at $DIR/reference_prop.rs:+66:5: +66:6\n-          return;                          // scope 0 at $DIR/reference_prop.rs:+67:2: +67:2\n+          StorageDead(_17);                // scope 7 at $DIR/reference_prop.rs:+17:18: +17:19\n+          StorageDead(_16);                // scope 7 at $DIR/reference_prop.rs:+17:19: +17:20\n+-         _9 = const ();                   // scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageDead(_15);                // scope 6 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_12);                // scope 5 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_11);                // scope 4 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_10);                // scope 0 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageDead(_9);                 // scope 0 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageLive(_18);                // scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageLive(_19);                // scope 0 at $DIR/reference_prop.rs:+22:13: +22:14\n+          _19 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+22:17: +22:24\n+          StorageLive(_20);                // scope 8 at $DIR/reference_prop.rs:+23:13: +23:14\n+          _20 = &_19;                      // scope 8 at $DIR/reference_prop.rs:+23:17: +23:19\n+          StorageLive(_21);                // scope 9 at $DIR/reference_prop.rs:+24:13: +24:14\n+          _21 = &_20;                      // scope 9 at $DIR/reference_prop.rs:+24:17: +24:19\n+          StorageLive(_22);                // scope 10 at $DIR/reference_prop.rs:+25:13: +25:14\n+          _22 = (*_20);                    // scope 10 at $DIR/reference_prop.rs:+25:17: +25:19\n+          StorageLive(_23);                // scope 11 at $DIR/reference_prop.rs:+26:9: +26:19\n+          StorageLive(_24);                // scope 11 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _24 = ();                        // scope 11 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _23 = opaque::<()>(move _24) -> bb3; // scope 11 at $DIR/reference_prop.rs:+26:9: +26:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:35:9: 35:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb3: {\n+          StorageDead(_24);                // scope 11 at $DIR/reference_prop.rs:+26:18: +26:19\n+          StorageDead(_23);                // scope 11 at $DIR/reference_prop.rs:+26:19: +26:20\n+-         _18 = const ();                  // scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageDead(_22);                // scope 10 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_21);                // scope 9 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_20);                // scope 8 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_19);                // scope 0 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageDead(_18);                // scope 0 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageLive(_25);                // scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageLive(_26);                // scope 0 at $DIR/reference_prop.rs:+31:13: +31:14\n+          _26 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+31:17: +31:24\n+          StorageLive(_27);                // scope 12 at $DIR/reference_prop.rs:+32:13: +32:18\n+          _27 = &_26;                      // scope 12 at $DIR/reference_prop.rs:+32:21: +32:23\n+          StorageLive(_28);                // scope 13 at $DIR/reference_prop.rs:+33:13: +33:14\n+          _28 = &mut _27;                  // scope 13 at $DIR/reference_prop.rs:+33:17: +33:23\n+          StorageLive(_29);                // scope 14 at $DIR/reference_prop.rs:+34:13: +34:14\n+          _29 = (*_27);                    // scope 14 at $DIR/reference_prop.rs:+34:17: +34:19\n+          StorageLive(_30);                // scope 15 at $DIR/reference_prop.rs:+35:9: +35:19\n+          StorageLive(_31);                // scope 15 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _31 = ();                        // scope 15 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _30 = opaque::<()>(move _31) -> bb4; // scope 15 at $DIR/reference_prop.rs:+35:9: +35:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:44:9: 44:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb4: {\n+          StorageDead(_31);                // scope 15 at $DIR/reference_prop.rs:+35:18: +35:19\n+          StorageDead(_30);                // scope 15 at $DIR/reference_prop.rs:+35:19: +35:20\n+-         _25 = const ();                  // scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageDead(_29);                // scope 14 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_28);                // scope 13 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_27);                // scope 12 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_26);                // scope 0 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageDead(_25);                // scope 0 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageLive(_32);                // scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageLive(_33);                // scope 0 at $DIR/reference_prop.rs:+40:13: +40:14\n+          _33 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+40:17: +40:24\n+          StorageLive(_34);                // scope 16 at $DIR/reference_prop.rs:+41:13: +41:14\n+          _34 = &_33;                      // scope 16 at $DIR/reference_prop.rs:+41:17: +41:19\n+          StorageLive(_35);                // scope 17 at $DIR/reference_prop.rs:+42:13: +42:14\n+-         _35 = (*_34);                    // scope 17 at $DIR/reference_prop.rs:+42:17: +42:19\n++         _35 = _33;                       // scope 17 at $DIR/reference_prop.rs:+42:17: +42:19\n+          StorageLive(_36);                // scope 18 at $DIR/reference_prop.rs:+43:9: +43:18\n+          StorageLive(_37);                // scope 18 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _37 = _34;                       // scope 18 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _36 = opaque::<&usize>(move _37) -> bb5; // scope 18 at $DIR/reference_prop.rs:+43:9: +43:18\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:52:9: 52:15\n+                                           // + literal: Const { ty: fn(&usize) {opaque::<&usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb5: {\n+          StorageDead(_37);                // scope 18 at $DIR/reference_prop.rs:+43:17: +43:18\n+          StorageDead(_36);                // scope 18 at $DIR/reference_prop.rs:+43:18: +43:19\n+-         _32 = const ();                  // scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageDead(_35);                // scope 17 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_34);                // scope 16 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_33);                // scope 0 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageDead(_32);                // scope 0 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageLive(_38);                // scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageLive(_39);                // scope 0 at $DIR/reference_prop.rs:+48:13: +48:14\n+          _39 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+48:17: +48:24\n+          StorageLive(_40);                // scope 19 at $DIR/reference_prop.rs:+49:13: +49:15\n+          _40 = &_39;                      // scope 19 at $DIR/reference_prop.rs:+49:18: +49:20\n+          StorageLive(_41);                // scope 20 at $DIR/reference_prop.rs:+50:13: +50:14\n+-         _41 = (*_40);                    // scope 20 at $DIR/reference_prop.rs:+50:17: +50:20\n++         _41 = _39;                       // scope 20 at $DIR/reference_prop.rs:+50:17: +50:20\n+          StorageLive(_42);                // scope 21 at $DIR/reference_prop.rs:+51:13: +51:15\n+          _42 = _40;                       // scope 21 at $DIR/reference_prop.rs:+51:18: +51:20\n+          StorageLive(_43);                // scope 22 at $DIR/reference_prop.rs:+52:13: +52:15\n+-         _43 = (*_42);                    // scope 22 at $DIR/reference_prop.rs:+52:18: +52:21\n++         _43 = _39;                       // scope 22 at $DIR/reference_prop.rs:+52:18: +52:21\n+          StorageLive(_44);                // scope 23 at $DIR/reference_prop.rs:+53:13: +53:15\n+          _44 = _42;                       // scope 23 at $DIR/reference_prop.rs:+53:18: +53:20\n+          StorageLive(_45);                // scope 24 at $DIR/reference_prop.rs:+56:9: +56:19\n+          StorageLive(_46);                // scope 24 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _46 = _44;                       // scope 24 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _45 = opaque::<&usize>(move _46) -> bb6; // scope 24 at $DIR/reference_prop.rs:+56:9: +56:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:65:9: 65:15\n+                                           // + literal: Const { ty: fn(&usize) {opaque::<&usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb6: {\n+          StorageDead(_46);                // scope 24 at $DIR/reference_prop.rs:+56:18: +56:19\n+          StorageDead(_45);                // scope 24 at $DIR/reference_prop.rs:+56:19: +56:20\n+-         _38 = const ();                  // scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageDead(_44);                // scope 23 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_43);                // scope 22 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_42);                // scope 21 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_41);                // scope 20 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_40);                // scope 19 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_39);                // scope 0 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageDead(_38);                // scope 0 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageLive(_47);                // scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageLive(_48);                // scope 0 at $DIR/reference_prop.rs:+61:13: +61:14\n+          _48 = &(*_1);                    // scope 0 at $DIR/reference_prop.rs:+61:17: +61:25\n+          StorageLive(_49);                // scope 25 at $DIR/reference_prop.rs:+62:13: +62:14\n+-         _49 = (*_48);                    // scope 25 at $DIR/reference_prop.rs:+62:17: +62:19\n++         _49 = (*_1);                     // scope 25 at $DIR/reference_prop.rs:+62:17: +62:19\n+          StorageLive(_50);                // scope 26 at $DIR/reference_prop.rs:+63:9: +63:19\n+          StorageLive(_51);                // scope 26 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _51 = ();                        // scope 26 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _50 = opaque::<()>(move _51) -> bb7; // scope 26 at $DIR/reference_prop.rs:+63:9: +63:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:72:9: 72:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb7: {\n+          StorageDead(_51);                // scope 26 at $DIR/reference_prop.rs:+63:18: +63:19\n+          StorageDead(_50);                // scope 26 at $DIR/reference_prop.rs:+63:19: +63:20\n+-         _47 = const ();                  // scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageDead(_49);                // scope 25 at $DIR/reference_prop.rs:+64:5: +64:6\n+          StorageDead(_48);                // scope 0 at $DIR/reference_prop.rs:+64:5: +64:6\n+-         StorageDead(_47);                // scope 0 at $DIR/reference_prop.rs:+64:5: +64:6\n+          StorageLive(_52);                // scope 0 at $DIR/reference_prop.rs:+68:13: +68:14\n+          _52 = &(*_2);                    // scope 0 at $DIR/reference_prop.rs:+68:17: +68:27\n+          StorageLive(_53);                // scope 27 at $DIR/reference_prop.rs:+69:20: +69:28\n+-         StorageLive(_54);                // scope 27 at $DIR/reference_prop.rs:+69:20: +69:28\n+-         _54 = &(*_1);                    // scope 27 at $DIR/reference_prop.rs:+69:20: +69:28\n+-         _53 = &(*_54);                   // scope 27 at $DIR/reference_prop.rs:+69:20: +69:28\n++         _53 = &(*_1);                    // scope 27 at $DIR/reference_prop.rs:+69:20: +69:28\n+          _2 = move _53;                   // scope 27 at $DIR/reference_prop.rs:+69:9: +69:28\n+          StorageDead(_53);                // scope 27 at $DIR/reference_prop.rs:+69:27: +69:28\n+-         StorageDead(_54);                // scope 27 at $DIR/reference_prop.rs:+69:28: +69:29\n+          StorageLive(_55);                // scope 27 at $DIR/reference_prop.rs:+70:13: +70:14\n+          _55 = (*_52);                    // scope 27 at $DIR/reference_prop.rs:+70:17: +70:19\n+          StorageLive(_56);                // scope 28 at $DIR/reference_prop.rs:+71:9: +71:19\n+          StorageLive(_57);                // scope 28 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _57 = ();                        // scope 28 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _56 = opaque::<()>(move _57) -> bb8; // scope 28 at $DIR/reference_prop.rs:+71:9: +71:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:80:9: 80:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb8: {\n+          StorageDead(_57);                // scope 28 at $DIR/reference_prop.rs:+71:18: +71:19\n+          StorageDead(_56);                // scope 28 at $DIR/reference_prop.rs:+71:19: +71:20\n+          _0 = const ();                   // scope 0 at $DIR/reference_prop.rs:+67:5: +72:6\n+          StorageDead(_55);                // scope 27 at $DIR/reference_prop.rs:+72:5: +72:6\n+          StorageDead(_52);                // scope 0 at $DIR/reference_prop.rs:+72:5: +72:6\n+          return;                          // scope 0 at $DIR/reference_prop.rs:+73:2: +73:2\n       }\n   }\n   "}, {"sha": "c1c084753324e6fcde7e32a11e3155e6b85eaf52", "filename": "tests/mir-opt/reference_prop.reference_propagation_const_ptr.ReferencePropagation.diff", "status": "modified", "additions": 316, "deletions": 218, "changes": 534, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation_const_ptr.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation_const_ptr.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.reference_propagation_const_ptr.ReferencePropagation.diff?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -5,20 +5,34 @@\n       debug single => _1;                  // in scope 0 at $DIR/reference_prop.rs:+0:45: +0:51\n       debug multiple => _2;                // in scope 0 at $DIR/reference_prop.rs:+0:63: +0:75\n       let mut _0: ();                      // return place in scope 0 at $DIR/reference_prop.rs:+0:87: +0:87\n-      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n-      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-      let mut _11: *const usize;           // in scope 0 at $DIR/reference_prop.rs:+13:13: +13:26\n-      let _13: ();                         // in scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-      let _18: ();                         // in scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-      let _23: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-      let _27: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:9: +39:18\n-      let mut _28: *const usize;           // in scope 0 at $DIR/reference_prop.rs:+39:16: +39:17\n-      let _29: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-      let _36: ();                         // in scope 0 at $DIR/reference_prop.rs:+52:9: +52:19\n-      let mut _37: *const usize;           // in scope 0 at $DIR/reference_prop.rs:+52:16: +52:18\n-      let _38: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-      let _41: ();                         // in scope 0 at $DIR/reference_prop.rs:+62:5: +66:6\n-      let mut _43: *const T;               // in scope 0 at $DIR/reference_prop.rs:+64:20: +64:38\n+      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n+      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+6:9: +6:19\n+      let mut _8: ();                      // in scope 0 at $DIR/reference_prop.rs:+6:16: +6:18\n+      let _9: ();                          // in scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+      let mut _13: *const usize;           // in scope 0 at $DIR/reference_prop.rs:+14:13: +14:26\n+      let _15: ();                         // in scope 0 at $DIR/reference_prop.rs:+17:9: +17:19\n+      let mut _16: ();                     // in scope 0 at $DIR/reference_prop.rs:+17:16: +17:18\n+      let _17: ();                         // in scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+      let _22: ();                         // in scope 0 at $DIR/reference_prop.rs:+26:9: +26:19\n+      let mut _23: ();                     // in scope 0 at $DIR/reference_prop.rs:+26:16: +26:18\n+      let _24: ();                         // in scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+      let _29: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:9: +35:19\n+      let mut _30: ();                     // in scope 0 at $DIR/reference_prop.rs:+35:16: +35:18\n+      let _31: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+      let _35: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:9: +43:18\n+      let mut _36: *const usize;           // in scope 0 at $DIR/reference_prop.rs:+43:16: +43:17\n+      let _37: ();                         // in scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+      let _44: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:9: +56:19\n+      let mut _45: *const usize;           // in scope 0 at $DIR/reference_prop.rs:+56:16: +56:18\n+      let _46: ();                         // in scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+      let _49: ();                         // in scope 0 at $DIR/reference_prop.rs:+63:9: +63:19\n+      let mut _50: ();                     // in scope 0 at $DIR/reference_prop.rs:+63:16: +63:18\n+      let _51: ();                         // in scope 0 at $DIR/reference_prop.rs:+67:5: +72:6\n+      let mut _53: *const T;               // in scope 0 at $DIR/reference_prop.rs:+69:20: +69:38\n+      let _55: ();                         // in scope 0 at $DIR/reference_prop.rs:+71:9: +71:19\n+      let mut _56: ();                     // in scope 0 at $DIR/reference_prop.rs:+71:16: +71:18\n+      let _61: ();                         // in scope 0 at $DIR/reference_prop.rs:+80:9: +80:19\n+      let mut _62: ();                     // in scope 0 at $DIR/reference_prop.rs:+80:16: +80:18\n       scope 1 {\n           let _4: usize;                   // in scope 1 at $DIR/reference_prop.rs:+3:13: +3:14\n           scope 2 {\n@@ -34,92 +48,92 @@\n           }\n       }\n       scope 5 {\n-          let _8: usize;                   // in scope 5 at $DIR/reference_prop.rs:+10:13: +10:14\n+          let _10: usize;                  // in scope 5 at $DIR/reference_prop.rs:+11:13: +11:14\n           scope 6 {\n-              debug a => _8;               // in scope 6 at $DIR/reference_prop.rs:+10:13: +10:14\n-              let _9: usize;               // in scope 6 at $DIR/reference_prop.rs:+11:13: +11:15\n+              debug a => _10;              // in scope 6 at $DIR/reference_prop.rs:+11:13: +11:14\n+              let _11: usize;              // in scope 6 at $DIR/reference_prop.rs:+12:13: +12:15\n               scope 7 {\n-                  debug a2 => _9;          // in scope 7 at $DIR/reference_prop.rs:+11:13: +11:15\n-                  let mut _10: *const usize; // in scope 7 at $DIR/reference_prop.rs:+12:13: +12:18\n+                  debug a2 => _11;         // in scope 7 at $DIR/reference_prop.rs:+12:13: +12:15\n+                  let mut _12: *const usize; // in scope 7 at $DIR/reference_prop.rs:+13:13: +13:18\n                   scope 8 {\n-                      debug b => _10;      // in scope 8 at $DIR/reference_prop.rs:+12:13: +12:18\n-                      let _12: usize;      // in scope 8 at $DIR/reference_prop.rs:+15:13: +15:14\n+                      debug b => _12;      // in scope 8 at $DIR/reference_prop.rs:+13:13: +13:18\n+                      let _14: usize;      // in scope 8 at $DIR/reference_prop.rs:+16:13: +16:14\n                       scope 9 {\n-                          debug c => _12;  // in scope 9 at $DIR/reference_prop.rs:+15:13: +15:14\n+                          debug c => _14;  // in scope 9 at $DIR/reference_prop.rs:+16:13: +16:14\n                       }\n                   }\n               }\n           }\n       }\n       scope 10 {\n-          let _14: usize;                  // in scope 10 at $DIR/reference_prop.rs:+20:13: +20:14\n+          let _18: usize;                  // in scope 10 at $DIR/reference_prop.rs:+22:13: +22:14\n           scope 11 {\n-              debug a => _14;              // in scope 11 at $DIR/reference_prop.rs:+20:13: +20:14\n-              let _15: *const usize;       // in scope 11 at $DIR/reference_prop.rs:+21:13: +21:14\n+              debug a => _18;              // in scope 11 at $DIR/reference_prop.rs:+22:13: +22:14\n+              let _19: *const usize;       // in scope 11 at $DIR/reference_prop.rs:+23:13: +23:14\n               scope 12 {\n-                  debug b => _15;          // in scope 12 at $DIR/reference_prop.rs:+21:13: +21:14\n-                  let _16: &*const usize;  // in scope 12 at $DIR/reference_prop.rs:+22:13: +22:14\n+                  debug b => _19;          // in scope 12 at $DIR/reference_prop.rs:+23:13: +23:14\n+                  let _20: &*const usize;  // in scope 12 at $DIR/reference_prop.rs:+24:13: +24:14\n                   scope 13 {\n-                      debug d => _16;      // in scope 13 at $DIR/reference_prop.rs:+22:13: +22:14\n-                      let _17: usize;      // in scope 13 at $DIR/reference_prop.rs:+23:13: +23:14\n+                      debug d => _20;      // in scope 13 at $DIR/reference_prop.rs:+24:13: +24:14\n+                      let _21: usize;      // in scope 13 at $DIR/reference_prop.rs:+25:13: +25:14\n                       scope 14 {\n-                          debug c => _17;  // in scope 14 at $DIR/reference_prop.rs:+23:13: +23:14\n+                          debug c => _21;  // in scope 14 at $DIR/reference_prop.rs:+25:13: +25:14\n                       }\n                   }\n               }\n           }\n       }\n       scope 15 {\n-          let _19: usize;                  // in scope 15 at $DIR/reference_prop.rs:+28:13: +28:14\n+          let _25: usize;                  // in scope 15 at $DIR/reference_prop.rs:+31:13: +31:14\n           scope 16 {\n-              debug a => _19;              // in scope 16 at $DIR/reference_prop.rs:+28:13: +28:14\n-              let mut _20: *const usize;   // in scope 16 at $DIR/reference_prop.rs:+29:13: +29:18\n+              debug a => _25;              // in scope 16 at $DIR/reference_prop.rs:+31:13: +31:14\n+              let mut _26: *const usize;   // in scope 16 at $DIR/reference_prop.rs:+32:13: +32:18\n               scope 17 {\n-                  debug b => _20;          // in scope 17 at $DIR/reference_prop.rs:+29:13: +29:18\n-                  let _21: &mut *const usize; // in scope 17 at $DIR/reference_prop.rs:+30:13: +30:14\n+                  debug b => _26;          // in scope 17 at $DIR/reference_prop.rs:+32:13: +32:18\n+                  let _27: &mut *const usize; // in scope 17 at $DIR/reference_prop.rs:+33:13: +33:14\n                   scope 18 {\n-                      debug d => _21;      // in scope 18 at $DIR/reference_prop.rs:+30:13: +30:14\n-                      let _22: usize;      // in scope 18 at $DIR/reference_prop.rs:+31:13: +31:14\n+                      debug d => _27;      // in scope 18 at $DIR/reference_prop.rs:+33:13: +33:14\n+                      let _28: usize;      // in scope 18 at $DIR/reference_prop.rs:+34:13: +34:14\n                       scope 19 {\n-                          debug c => _22;  // in scope 19 at $DIR/reference_prop.rs:+31:13: +31:14\n+                          debug c => _28;  // in scope 19 at $DIR/reference_prop.rs:+34:13: +34:14\n                       }\n                   }\n               }\n           }\n       }\n       scope 20 {\n-          let _24: usize;                  // in scope 20 at $DIR/reference_prop.rs:+36:13: +36:14\n+          let _32: usize;                  // in scope 20 at $DIR/reference_prop.rs:+40:13: +40:14\n           scope 21 {\n-              debug a => _24;              // in scope 21 at $DIR/reference_prop.rs:+36:13: +36:14\n-              let _25: *const usize;       // in scope 21 at $DIR/reference_prop.rs:+37:13: +37:14\n+              debug a => _32;              // in scope 21 at $DIR/reference_prop.rs:+40:13: +40:14\n+              let _33: *const usize;       // in scope 21 at $DIR/reference_prop.rs:+41:13: +41:14\n               scope 22 {\n-                  debug b => _25;          // in scope 22 at $DIR/reference_prop.rs:+37:13: +37:14\n-                  let _26: usize;          // in scope 22 at $DIR/reference_prop.rs:+38:13: +38:14\n+                  debug b => _33;          // in scope 22 at $DIR/reference_prop.rs:+41:13: +41:14\n+                  let _34: usize;          // in scope 22 at $DIR/reference_prop.rs:+42:13: +42:14\n                   scope 23 {\n-                      debug c => _26;      // in scope 23 at $DIR/reference_prop.rs:+38:13: +38:14\n+                      debug c => _34;      // in scope 23 at $DIR/reference_prop.rs:+42:13: +42:14\n                   }\n               }\n           }\n       }\n       scope 24 {\n-          let _30: usize;                  // in scope 24 at $DIR/reference_prop.rs:+44:13: +44:14\n+          let _38: usize;                  // in scope 24 at $DIR/reference_prop.rs:+48:13: +48:14\n           scope 25 {\n-              debug a => _30;              // in scope 25 at $DIR/reference_prop.rs:+44:13: +44:14\n-              let _31: *const usize;       // in scope 25 at $DIR/reference_prop.rs:+45:13: +45:15\n+              debug a => _38;              // in scope 25 at $DIR/reference_prop.rs:+48:13: +48:14\n+              let _39: *const usize;       // in scope 25 at $DIR/reference_prop.rs:+49:13: +49:15\n               scope 26 {\n-                  debug b1 => _31;         // in scope 26 at $DIR/reference_prop.rs:+45:13: +45:15\n-                  let _32: usize;          // in scope 26 at $DIR/reference_prop.rs:+46:13: +46:14\n+                  debug b1 => _39;         // in scope 26 at $DIR/reference_prop.rs:+49:13: +49:15\n+                  let _40: usize;          // in scope 26 at $DIR/reference_prop.rs:+50:13: +50:14\n                   scope 27 {\n-                      debug c => _32;      // in scope 27 at $DIR/reference_prop.rs:+46:13: +46:14\n-                      let _33: *const usize; // in scope 27 at $DIR/reference_prop.rs:+47:13: +47:15\n+                      debug c => _40;      // in scope 27 at $DIR/reference_prop.rs:+50:13: +50:14\n+                      let _41: *const usize; // in scope 27 at $DIR/reference_prop.rs:+51:13: +51:15\n                       scope 28 {\n-                          debug b2 => _33; // in scope 28 at $DIR/reference_prop.rs:+47:13: +47:15\n-                          let _34: usize;  // in scope 28 at $DIR/reference_prop.rs:+48:13: +48:15\n+                          debug b2 => _41; // in scope 28 at $DIR/reference_prop.rs:+51:13: +51:15\n+                          let _42: usize;  // in scope 28 at $DIR/reference_prop.rs:+52:13: +52:15\n                           scope 29 {\n-                              debug c2 => _34; // in scope 29 at $DIR/reference_prop.rs:+48:13: +48:15\n-                              let _35: *const usize; // in scope 29 at $DIR/reference_prop.rs:+49:13: +49:15\n+                              debug c2 => _42; // in scope 29 at $DIR/reference_prop.rs:+52:13: +52:15\n+                              let _43: *const usize; // in scope 29 at $DIR/reference_prop.rs:+53:13: +53:15\n                               scope 30 {\n-                                  debug b3 => _35; // in scope 30 at $DIR/reference_prop.rs:+49:13: +49:15\n+                                  debug b3 => _43; // in scope 30 at $DIR/reference_prop.rs:+53:13: +53:15\n                               }\n                           }\n                       }\n@@ -128,206 +142,290 @@\n           }\n       }\n       scope 31 {\n-          let _39: *const T;               // in scope 31 at $DIR/reference_prop.rs:+57:13: +57:14\n+          let _47: *const T;               // in scope 31 at $DIR/reference_prop.rs:+61:13: +61:14\n           scope 32 {\n-              debug a => _39;              // in scope 32 at $DIR/reference_prop.rs:+57:13: +57:14\n-              let _40: T;                  // in scope 32 at $DIR/reference_prop.rs:+58:13: +58:14\n+              debug a => _47;              // in scope 32 at $DIR/reference_prop.rs:+61:13: +61:14\n+              let _48: T;                  // in scope 32 at $DIR/reference_prop.rs:+62:13: +62:14\n               scope 33 {\n-                  debug b => _40;          // in scope 33 at $DIR/reference_prop.rs:+58:13: +58:14\n+                  debug b => _48;          // in scope 33 at $DIR/reference_prop.rs:+62:13: +62:14\n               }\n           }\n       }\n       scope 34 {\n-          let _42: *const T;               // in scope 34 at $DIR/reference_prop.rs:+63:13: +63:14\n+          let _52: *const T;               // in scope 34 at $DIR/reference_prop.rs:+68:13: +68:14\n           scope 35 {\n-              debug a => _42;              // in scope 35 at $DIR/reference_prop.rs:+63:13: +63:14\n-              let _44: T;                  // in scope 35 at $DIR/reference_prop.rs:+65:13: +65:14\n+              debug a => _52;              // in scope 35 at $DIR/reference_prop.rs:+68:13: +68:14\n+              let _54: T;                  // in scope 35 at $DIR/reference_prop.rs:+70:13: +70:14\n               scope 36 {\n-                  debug b => _44;          // in scope 36 at $DIR/reference_prop.rs:+65:13: +65:14\n+                  debug b => _54;          // in scope 36 at $DIR/reference_prop.rs:+70:13: +70:14\n               }\n           }\n       }\n       scope 37 {\n-          let _45: usize;                  // in scope 37 at $DIR/reference_prop.rs:+70:13: +70:14\n+          let _57: usize;                  // in scope 37 at $DIR/reference_prop.rs:+76:13: +76:14\n           scope 38 {\n-              debug a => _45;              // in scope 38 at $DIR/reference_prop.rs:+70:13: +70:14\n-              let _46: *const usize;       // in scope 38 at $DIR/reference_prop.rs:+71:13: +71:14\n+              debug a => _57;              // in scope 38 at $DIR/reference_prop.rs:+76:13: +76:14\n+              let _58: *const usize;       // in scope 38 at $DIR/reference_prop.rs:+77:13: +77:14\n               scope 39 {\n-                  debug b => _46;          // in scope 39 at $DIR/reference_prop.rs:+71:13: +71:14\n-                  let _47: *const usize;   // in scope 39 at $DIR/reference_prop.rs:+72:13: +72:14\n+                  debug b => _58;          // in scope 39 at $DIR/reference_prop.rs:+77:13: +77:14\n+                  let _59: *const usize;   // in scope 39 at $DIR/reference_prop.rs:+78:13: +78:14\n                   scope 40 {\n-                      debug c => _47;      // in scope 40 at $DIR/reference_prop.rs:+72:13: +72:14\n-                      let _48: usize;      // in scope 40 at $DIR/reference_prop.rs:+73:13: +73:14\n+                      debug c => _59;      // in scope 40 at $DIR/reference_prop.rs:+78:13: +78:14\n+                      let _60: usize;      // in scope 40 at $DIR/reference_prop.rs:+79:13: +79:14\n                       scope 41 {\n-                          debug e => _48;  // in scope 41 at $DIR/reference_prop.rs:+73:13: +73:14\n+                          debug e => _60;  // in scope 41 at $DIR/reference_prop.rs:+79:13: +79:14\n                       }\n                   }\n               }\n           }\n       }\n   \n       bb0: {\n--         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n+-         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n           StorageLive(_4);                 // scope 1 at $DIR/reference_prop.rs:+3:13: +3:14\n           _4 = const 5_usize;              // scope 1 at $DIR/reference_prop.rs:+3:17: +3:24\n           StorageLive(_5);                 // scope 2 at $DIR/reference_prop.rs:+4:13: +4:14\n           _5 = &raw const _4;              // scope 2 at $DIR/reference_prop.rs:+4:17: +4:29\n           StorageLive(_6);                 // scope 3 at $DIR/reference_prop.rs:+5:13: +5:14\n -         _6 = (*_5);                      // scope 3 at $DIR/reference_prop.rs:+5:17: +5:19\n--         _3 = const ();                   // scope 1 at $DIR/reference_prop.rs:+2:5: +6:6\n +         _6 = _4;                         // scope 3 at $DIR/reference_prop.rs:+5:17: +5:19\n-          StorageDead(_6);                 // scope 3 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_5);                 // scope 2 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_4);                 // scope 1 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageLive(_7);                 // scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageLive(_8);                 // scope 5 at $DIR/reference_prop.rs:+10:13: +10:14\n-          _8 = const 5_usize;              // scope 5 at $DIR/reference_prop.rs:+10:17: +10:24\n-          StorageLive(_9);                 // scope 6 at $DIR/reference_prop.rs:+11:13: +11:15\n-          _9 = const 7_usize;              // scope 6 at $DIR/reference_prop.rs:+11:18: +11:25\n-          StorageLive(_10);                // scope 7 at $DIR/reference_prop.rs:+12:13: +12:18\n-          _10 = &raw const _8;             // scope 7 at $DIR/reference_prop.rs:+12:21: +12:33\n-          StorageLive(_11);                // scope 8 at $DIR/reference_prop.rs:+13:13: +13:26\n-          _11 = &raw const _9;             // scope 8 at $DIR/reference_prop.rs:+13:13: +13:26\n-          _10 = move _11;                  // scope 8 at $DIR/reference_prop.rs:+13:9: +13:26\n-          StorageDead(_11);                // scope 8 at $DIR/reference_prop.rs:+13:25: +13:26\n-          StorageLive(_12);                // scope 8 at $DIR/reference_prop.rs:+15:13: +15:14\n-          _12 = (*_10);                    // scope 8 at $DIR/reference_prop.rs:+15:17: +15:19\n--         _7 = const ();                   // scope 5 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageDead(_12);                // scope 8 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_10);                // scope 7 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_9);                 // scope 6 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_8);                 // scope 5 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageDead(_7);                 // scope 0 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageLive(_13);                // scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageLive(_14);                // scope 10 at $DIR/reference_prop.rs:+20:13: +20:14\n-          _14 = const 5_usize;             // scope 10 at $DIR/reference_prop.rs:+20:17: +20:24\n-          StorageLive(_15);                // scope 11 at $DIR/reference_prop.rs:+21:13: +21:14\n-          _15 = &raw const _14;            // scope 11 at $DIR/reference_prop.rs:+21:17: +21:29\n-          StorageLive(_16);                // scope 12 at $DIR/reference_prop.rs:+22:13: +22:14\n-          _16 = &_15;                      // scope 12 at $DIR/reference_prop.rs:+22:17: +22:19\n-          StorageLive(_17);                // scope 13 at $DIR/reference_prop.rs:+23:13: +23:14\n-          _17 = (*_15);                    // scope 13 at $DIR/reference_prop.rs:+23:17: +23:19\n--         _13 = const ();                  // scope 10 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageDead(_17);                // scope 13 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_16);                // scope 12 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_15);                // scope 11 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_14);                // scope 10 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageDead(_13);                // scope 0 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageLive(_18);                // scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageLive(_19);                // scope 15 at $DIR/reference_prop.rs:+28:13: +28:14\n-          _19 = const 5_usize;             // scope 15 at $DIR/reference_prop.rs:+28:17: +28:24\n-          StorageLive(_20);                // scope 16 at $DIR/reference_prop.rs:+29:13: +29:18\n-          _20 = &raw const _19;            // scope 16 at $DIR/reference_prop.rs:+29:21: +29:33\n-          StorageLive(_21);                // scope 17 at $DIR/reference_prop.rs:+30:13: +30:14\n-          _21 = &mut _20;                  // scope 17 at $DIR/reference_prop.rs:+30:17: +30:23\n-          StorageLive(_22);                // scope 18 at $DIR/reference_prop.rs:+31:13: +31:14\n-          _22 = (*_20);                    // scope 18 at $DIR/reference_prop.rs:+31:17: +31:19\n--         _18 = const ();                  // scope 15 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageDead(_22);                // scope 18 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_21);                // scope 17 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_20);                // scope 16 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_19);                // scope 15 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageDead(_18);                // scope 0 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageLive(_23);                // scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageLive(_24);                // scope 20 at $DIR/reference_prop.rs:+36:13: +36:14\n-          _24 = const 7_usize;             // scope 20 at $DIR/reference_prop.rs:+36:17: +36:24\n-          StorageLive(_25);                // scope 21 at $DIR/reference_prop.rs:+37:13: +37:14\n-          _25 = &raw const _24;            // scope 21 at $DIR/reference_prop.rs:+37:17: +37:29\n-          StorageLive(_26);                // scope 22 at $DIR/reference_prop.rs:+38:13: +38:14\n--         _26 = (*_25);                    // scope 22 at $DIR/reference_prop.rs:+38:17: +38:19\n-+         _26 = _24;                       // scope 22 at $DIR/reference_prop.rs:+38:17: +38:19\n-          StorageLive(_27);                // scope 23 at $DIR/reference_prop.rs:+39:9: +39:18\n-          StorageLive(_28);                // scope 23 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _28 = _25;                       // scope 23 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _27 = opaque::<*const usize>(move _28) -> bb1; // scope 23 at $DIR/reference_prop.rs:+39:9: +39:18\n+          StorageLive(_7);                 // scope 4 at $DIR/reference_prop.rs:+6:9: +6:19\n+          StorageLive(_8);                 // scope 4 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _8 = ();                         // scope 4 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _7 = opaque::<()>(move _8) -> bb1; // scope 4 at $DIR/reference_prop.rs:+6:9: +6:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:186:9: 186:15\n-                                           // + literal: Const { ty: fn(*const usize) {opaque::<*const usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:165:9: 165:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageDead(_28);                // scope 23 at $DIR/reference_prop.rs:+39:17: +39:18\n-          StorageDead(_27);                // scope 23 at $DIR/reference_prop.rs:+39:18: +39:19\n--         _23 = const ();                  // scope 20 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageDead(_26);                // scope 22 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_25);                // scope 21 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_24);                // scope 20 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageDead(_23);                // scope 0 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageLive(_29);                // scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageLive(_30);                // scope 24 at $DIR/reference_prop.rs:+44:13: +44:14\n-          _30 = const 7_usize;             // scope 24 at $DIR/reference_prop.rs:+44:17: +44:24\n-          StorageLive(_31);                // scope 25 at $DIR/reference_prop.rs:+45:13: +45:15\n-          _31 = &raw const _30;            // scope 25 at $DIR/reference_prop.rs:+45:18: +45:30\n-          StorageLive(_32);                // scope 26 at $DIR/reference_prop.rs:+46:13: +46:14\n--         _32 = (*_31);                    // scope 26 at $DIR/reference_prop.rs:+46:17: +46:20\n-+         _32 = _30;                       // scope 26 at $DIR/reference_prop.rs:+46:17: +46:20\n-          StorageLive(_33);                // scope 27 at $DIR/reference_prop.rs:+47:13: +47:15\n-          _33 = _31;                       // scope 27 at $DIR/reference_prop.rs:+47:18: +47:20\n-          StorageLive(_34);                // scope 28 at $DIR/reference_prop.rs:+48:13: +48:15\n--         _34 = (*_33);                    // scope 28 at $DIR/reference_prop.rs:+48:18: +48:21\n-+         _34 = _30;                       // scope 28 at $DIR/reference_prop.rs:+48:18: +48:21\n-          StorageLive(_35);                // scope 29 at $DIR/reference_prop.rs:+49:13: +49:15\n-          _35 = _33;                       // scope 29 at $DIR/reference_prop.rs:+49:18: +49:20\n-          StorageLive(_36);                // scope 30 at $DIR/reference_prop.rs:+52:9: +52:19\n-          StorageLive(_37);                // scope 30 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _37 = _35;                       // scope 30 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _36 = opaque::<*const usize>(move _37) -> bb2; // scope 30 at $DIR/reference_prop.rs:+52:9: +52:19\n+          StorageDead(_8);                 // scope 4 at $DIR/reference_prop.rs:+6:18: +6:19\n+          StorageDead(_7);                 // scope 4 at $DIR/reference_prop.rs:+6:19: +6:20\n+-         _3 = const ();                   // scope 1 at $DIR/reference_prop.rs:+2:5: +7:6\n+          StorageDead(_6);                 // scope 3 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_5);                 // scope 2 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_4);                 // scope 1 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageLive(_9);                 // scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageLive(_10);                // scope 5 at $DIR/reference_prop.rs:+11:13: +11:14\n+          _10 = const 5_usize;             // scope 5 at $DIR/reference_prop.rs:+11:17: +11:24\n+          StorageLive(_11);                // scope 6 at $DIR/reference_prop.rs:+12:13: +12:15\n+          _11 = const 7_usize;             // scope 6 at $DIR/reference_prop.rs:+12:18: +12:25\n+          StorageLive(_12);                // scope 7 at $DIR/reference_prop.rs:+13:13: +13:18\n+          _12 = &raw const _10;            // scope 7 at $DIR/reference_prop.rs:+13:21: +13:33\n+          StorageLive(_13);                // scope 8 at $DIR/reference_prop.rs:+14:13: +14:26\n+          _13 = &raw const _11;            // scope 8 at $DIR/reference_prop.rs:+14:13: +14:26\n+          _12 = move _13;                  // scope 8 at $DIR/reference_prop.rs:+14:9: +14:26\n+          StorageDead(_13);                // scope 8 at $DIR/reference_prop.rs:+14:25: +14:26\n+          StorageLive(_14);                // scope 8 at $DIR/reference_prop.rs:+16:13: +16:14\n+          _14 = (*_12);                    // scope 8 at $DIR/reference_prop.rs:+16:17: +16:19\n+          StorageLive(_15);                // scope 9 at $DIR/reference_prop.rs:+17:9: +17:19\n+          StorageLive(_16);                // scope 9 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _16 = ();                        // scope 9 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _15 = opaque::<()>(move _16) -> bb2; // scope 9 at $DIR/reference_prop.rs:+17:9: +17:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:199:9: 199:15\n-                                           // + literal: Const { ty: fn(*const usize) {opaque::<*const usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:176:9: 176:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          StorageDead(_37);                // scope 30 at $DIR/reference_prop.rs:+52:18: +52:19\n-          StorageDead(_36);                // scope 30 at $DIR/reference_prop.rs:+52:19: +52:20\n--         _29 = const ();                  // scope 24 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageDead(_35);                // scope 29 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_34);                // scope 28 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_33);                // scope 27 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_32);                // scope 26 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_31);                // scope 25 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_30);                // scope 24 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageDead(_29);                // scope 0 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageLive(_38);                // scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-          StorageLive(_39);                // scope 31 at $DIR/reference_prop.rs:+57:13: +57:14\n-          _39 = &raw const (*_1);          // scope 31 at $DIR/reference_prop.rs:+57:17: +57:35\n-          StorageLive(_40);                // scope 32 at $DIR/reference_prop.rs:+58:13: +58:14\n--         _40 = (*_39);                    // scope 32 at $DIR/reference_prop.rs:+58:17: +58:19\n--         _38 = const ();                  // scope 31 at $DIR/reference_prop.rs:+56:5: +59:6\n-+         _40 = (*_1);                     // scope 32 at $DIR/reference_prop.rs:+58:17: +58:19\n-          StorageDead(_40);                // scope 32 at $DIR/reference_prop.rs:+59:5: +59:6\n-          StorageDead(_39);                // scope 31 at $DIR/reference_prop.rs:+59:5: +59:6\n--         StorageDead(_38);                // scope 0 at $DIR/reference_prop.rs:+59:5: +59:6\n--         StorageLive(_41);                // scope 0 at $DIR/reference_prop.rs:+62:5: +66:6\n-          StorageLive(_42);                // scope 34 at $DIR/reference_prop.rs:+63:13: +63:14\n-          _42 = &raw const (*_2);          // scope 34 at $DIR/reference_prop.rs:+63:17: +63:37\n-          StorageLive(_43);                // scope 35 at $DIR/reference_prop.rs:+64:20: +64:38\n-          _43 = &raw const (*_1);          // scope 35 at $DIR/reference_prop.rs:+64:20: +64:38\n-          _2 = move _43;                   // scope 35 at $DIR/reference_prop.rs:+64:9: +64:38\n-          StorageDead(_43);                // scope 35 at $DIR/reference_prop.rs:+64:37: +64:38\n-          StorageLive(_44);                // scope 35 at $DIR/reference_prop.rs:+65:13: +65:14\n-          _44 = (*_42);                    // scope 35 at $DIR/reference_prop.rs:+65:17: +65:19\n--         _41 = const ();                  // scope 34 at $DIR/reference_prop.rs:+62:5: +66:6\n-          StorageDead(_44);                // scope 35 at $DIR/reference_prop.rs:+66:5: +66:6\n-          StorageDead(_42);                // scope 34 at $DIR/reference_prop.rs:+66:5: +66:6\n--         StorageDead(_41);                // scope 0 at $DIR/reference_prop.rs:+66:5: +66:6\n-          StorageLive(_45);                // scope 37 at $DIR/reference_prop.rs:+70:13: +70:14\n-          _45 = const 13_usize;            // scope 37 at $DIR/reference_prop.rs:+70:17: +70:25\n-          StorageLive(_46);                // scope 38 at $DIR/reference_prop.rs:+71:13: +71:14\n-          _46 = &raw const _45;            // scope 38 at $DIR/reference_prop.rs:+71:17: +71:29\n-          StorageLive(_47);                // scope 39 at $DIR/reference_prop.rs:+72:13: +72:14\n--         _47 = &raw const (*_46);         // scope 39 at $DIR/reference_prop.rs:+72:17: +72:30\n-+         _47 = &raw const _45;            // scope 39 at $DIR/reference_prop.rs:+72:17: +72:30\n-          StorageLive(_48);                // scope 40 at $DIR/reference_prop.rs:+73:13: +73:14\n--         _48 = (*_47);                    // scope 40 at $DIR/reference_prop.rs:+73:17: +73:19\n-+         _48 = _45;                       // scope 40 at $DIR/reference_prop.rs:+73:17: +73:19\n-          _0 = const ();                   // scope 37 at $DIR/reference_prop.rs:+69:5: +74:6\n-          StorageDead(_48);                // scope 40 at $DIR/reference_prop.rs:+74:5: +74:6\n-          StorageDead(_47);                // scope 39 at $DIR/reference_prop.rs:+74:5: +74:6\n-          StorageDead(_46);                // scope 38 at $DIR/reference_prop.rs:+74:5: +74:6\n-          StorageDead(_45);                // scope 37 at $DIR/reference_prop.rs:+74:5: +74:6\n-          return;                          // scope 0 at $DIR/reference_prop.rs:+75:2: +75:2\n+          StorageDead(_16);                // scope 9 at $DIR/reference_prop.rs:+17:18: +17:19\n+          StorageDead(_15);                // scope 9 at $DIR/reference_prop.rs:+17:19: +17:20\n+-         _9 = const ();                   // scope 5 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageDead(_14);                // scope 8 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_12);                // scope 7 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_11);                // scope 6 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_10);                // scope 5 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageDead(_9);                 // scope 0 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageLive(_17);                // scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageLive(_18);                // scope 10 at $DIR/reference_prop.rs:+22:13: +22:14\n+          _18 = const 5_usize;             // scope 10 at $DIR/reference_prop.rs:+22:17: +22:24\n+          StorageLive(_19);                // scope 11 at $DIR/reference_prop.rs:+23:13: +23:14\n+          _19 = &raw const _18;            // scope 11 at $DIR/reference_prop.rs:+23:17: +23:29\n+          StorageLive(_20);                // scope 12 at $DIR/reference_prop.rs:+24:13: +24:14\n+          _20 = &_19;                      // scope 12 at $DIR/reference_prop.rs:+24:17: +24:19\n+          StorageLive(_21);                // scope 13 at $DIR/reference_prop.rs:+25:13: +25:14\n+          _21 = (*_19);                    // scope 13 at $DIR/reference_prop.rs:+25:17: +25:19\n+          StorageLive(_22);                // scope 14 at $DIR/reference_prop.rs:+26:9: +26:19\n+          StorageLive(_23);                // scope 14 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _23 = ();                        // scope 14 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _22 = opaque::<()>(move _23) -> bb3; // scope 14 at $DIR/reference_prop.rs:+26:9: +26:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:185:9: 185:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb3: {\n+          StorageDead(_23);                // scope 14 at $DIR/reference_prop.rs:+26:18: +26:19\n+          StorageDead(_22);                // scope 14 at $DIR/reference_prop.rs:+26:19: +26:20\n+-         _17 = const ();                  // scope 10 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageDead(_21);                // scope 13 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_20);                // scope 12 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_19);                // scope 11 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_18);                // scope 10 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageDead(_17);                // scope 0 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageLive(_24);                // scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageLive(_25);                // scope 15 at $DIR/reference_prop.rs:+31:13: +31:14\n+          _25 = const 5_usize;             // scope 15 at $DIR/reference_prop.rs:+31:17: +31:24\n+          StorageLive(_26);                // scope 16 at $DIR/reference_prop.rs:+32:13: +32:18\n+          _26 = &raw const _25;            // scope 16 at $DIR/reference_prop.rs:+32:21: +32:33\n+          StorageLive(_27);                // scope 17 at $DIR/reference_prop.rs:+33:13: +33:14\n+          _27 = &mut _26;                  // scope 17 at $DIR/reference_prop.rs:+33:17: +33:23\n+          StorageLive(_28);                // scope 18 at $DIR/reference_prop.rs:+34:13: +34:14\n+          _28 = (*_26);                    // scope 18 at $DIR/reference_prop.rs:+34:17: +34:19\n+          StorageLive(_29);                // scope 19 at $DIR/reference_prop.rs:+35:9: +35:19\n+          StorageLive(_30);                // scope 19 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _30 = ();                        // scope 19 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _29 = opaque::<()>(move _30) -> bb4; // scope 19 at $DIR/reference_prop.rs:+35:9: +35:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:194:9: 194:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb4: {\n+          StorageDead(_30);                // scope 19 at $DIR/reference_prop.rs:+35:18: +35:19\n+          StorageDead(_29);                // scope 19 at $DIR/reference_prop.rs:+35:19: +35:20\n+-         _24 = const ();                  // scope 15 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageDead(_28);                // scope 18 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_27);                // scope 17 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_26);                // scope 16 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_25);                // scope 15 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageDead(_24);                // scope 0 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageLive(_31);                // scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageLive(_32);                // scope 20 at $DIR/reference_prop.rs:+40:13: +40:14\n+          _32 = const 7_usize;             // scope 20 at $DIR/reference_prop.rs:+40:17: +40:24\n+          StorageLive(_33);                // scope 21 at $DIR/reference_prop.rs:+41:13: +41:14\n+          _33 = &raw const _32;            // scope 21 at $DIR/reference_prop.rs:+41:17: +41:29\n+          StorageLive(_34);                // scope 22 at $DIR/reference_prop.rs:+42:13: +42:14\n+-         _34 = (*_33);                    // scope 22 at $DIR/reference_prop.rs:+42:17: +42:19\n++         _34 = _32;                       // scope 22 at $DIR/reference_prop.rs:+42:17: +42:19\n+          StorageLive(_35);                // scope 23 at $DIR/reference_prop.rs:+43:9: +43:18\n+          StorageLive(_36);                // scope 23 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _36 = _33;                       // scope 23 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _35 = opaque::<*const usize>(move _36) -> bb5; // scope 23 at $DIR/reference_prop.rs:+43:9: +43:18\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:202:9: 202:15\n+                                           // + literal: Const { ty: fn(*const usize) {opaque::<*const usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb5: {\n+          StorageDead(_36);                // scope 23 at $DIR/reference_prop.rs:+43:17: +43:18\n+          StorageDead(_35);                // scope 23 at $DIR/reference_prop.rs:+43:18: +43:19\n+-         _31 = const ();                  // scope 20 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageDead(_34);                // scope 22 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_33);                // scope 21 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_32);                // scope 20 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageDead(_31);                // scope 0 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageLive(_37);                // scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageLive(_38);                // scope 24 at $DIR/reference_prop.rs:+48:13: +48:14\n+          _38 = const 7_usize;             // scope 24 at $DIR/reference_prop.rs:+48:17: +48:24\n+          StorageLive(_39);                // scope 25 at $DIR/reference_prop.rs:+49:13: +49:15\n+          _39 = &raw const _38;            // scope 25 at $DIR/reference_prop.rs:+49:18: +49:30\n+          StorageLive(_40);                // scope 26 at $DIR/reference_prop.rs:+50:13: +50:14\n+-         _40 = (*_39);                    // scope 26 at $DIR/reference_prop.rs:+50:17: +50:20\n++         _40 = _38;                       // scope 26 at $DIR/reference_prop.rs:+50:17: +50:20\n+          StorageLive(_41);                // scope 27 at $DIR/reference_prop.rs:+51:13: +51:15\n+          _41 = _39;                       // scope 27 at $DIR/reference_prop.rs:+51:18: +51:20\n+          StorageLive(_42);                // scope 28 at $DIR/reference_prop.rs:+52:13: +52:15\n+-         _42 = (*_41);                    // scope 28 at $DIR/reference_prop.rs:+52:18: +52:21\n++         _42 = _38;                       // scope 28 at $DIR/reference_prop.rs:+52:18: +52:21\n+          StorageLive(_43);                // scope 29 at $DIR/reference_prop.rs:+53:13: +53:15\n+          _43 = _41;                       // scope 29 at $DIR/reference_prop.rs:+53:18: +53:20\n+          StorageLive(_44);                // scope 30 at $DIR/reference_prop.rs:+56:9: +56:19\n+          StorageLive(_45);                // scope 30 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _45 = _43;                       // scope 30 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _44 = opaque::<*const usize>(move _45) -> bb6; // scope 30 at $DIR/reference_prop.rs:+56:9: +56:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:215:9: 215:15\n+                                           // + literal: Const { ty: fn(*const usize) {opaque::<*const usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb6: {\n+          StorageDead(_45);                // scope 30 at $DIR/reference_prop.rs:+56:18: +56:19\n+          StorageDead(_44);                // scope 30 at $DIR/reference_prop.rs:+56:19: +56:20\n+-         _37 = const ();                  // scope 24 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageDead(_43);                // scope 29 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_42);                // scope 28 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_41);                // scope 27 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_40);                // scope 26 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_39);                // scope 25 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_38);                // scope 24 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageDead(_37);                // scope 0 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageLive(_46);                // scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageLive(_47);                // scope 31 at $DIR/reference_prop.rs:+61:13: +61:14\n+          _47 = &raw const (*_1);          // scope 31 at $DIR/reference_prop.rs:+61:17: +61:35\n+          StorageLive(_48);                // scope 32 at $DIR/reference_prop.rs:+62:13: +62:14\n+-         _48 = (*_47);                    // scope 32 at $DIR/reference_prop.rs:+62:17: +62:19\n++         _48 = (*_1);                     // scope 32 at $DIR/reference_prop.rs:+62:17: +62:19\n+          StorageLive(_49);                // scope 33 at $DIR/reference_prop.rs:+63:9: +63:19\n+          StorageLive(_50);                // scope 33 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _50 = ();                        // scope 33 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _49 = opaque::<()>(move _50) -> bb7; // scope 33 at $DIR/reference_prop.rs:+63:9: +63:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:222:9: 222:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb7: {\n+          StorageDead(_50);                // scope 33 at $DIR/reference_prop.rs:+63:18: +63:19\n+          StorageDead(_49);                // scope 33 at $DIR/reference_prop.rs:+63:19: +63:20\n+-         _46 = const ();                  // scope 31 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageDead(_48);                // scope 32 at $DIR/reference_prop.rs:+64:5: +64:6\n+          StorageDead(_47);                // scope 31 at $DIR/reference_prop.rs:+64:5: +64:6\n+-         StorageDead(_46);                // scope 0 at $DIR/reference_prop.rs:+64:5: +64:6\n+-         StorageLive(_51);                // scope 0 at $DIR/reference_prop.rs:+67:5: +72:6\n+          StorageLive(_52);                // scope 34 at $DIR/reference_prop.rs:+68:13: +68:14\n+          _52 = &raw const (*_2);          // scope 34 at $DIR/reference_prop.rs:+68:17: +68:37\n+          StorageLive(_53);                // scope 35 at $DIR/reference_prop.rs:+69:20: +69:38\n+          _53 = &raw const (*_1);          // scope 35 at $DIR/reference_prop.rs:+69:20: +69:38\n+          _2 = move _53;                   // scope 35 at $DIR/reference_prop.rs:+69:9: +69:38\n+          StorageDead(_53);                // scope 35 at $DIR/reference_prop.rs:+69:37: +69:38\n+          StorageLive(_54);                // scope 35 at $DIR/reference_prop.rs:+70:13: +70:14\n+          _54 = (*_52);                    // scope 35 at $DIR/reference_prop.rs:+70:17: +70:19\n+          StorageLive(_55);                // scope 36 at $DIR/reference_prop.rs:+71:9: +71:19\n+          StorageLive(_56);                // scope 36 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _56 = ();                        // scope 36 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _55 = opaque::<()>(move _56) -> bb8; // scope 36 at $DIR/reference_prop.rs:+71:9: +71:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:230:9: 230:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb8: {\n+          StorageDead(_56);                // scope 36 at $DIR/reference_prop.rs:+71:18: +71:19\n+          StorageDead(_55);                // scope 36 at $DIR/reference_prop.rs:+71:19: +71:20\n+-         _51 = const ();                  // scope 34 at $DIR/reference_prop.rs:+67:5: +72:6\n+          StorageDead(_54);                // scope 35 at $DIR/reference_prop.rs:+72:5: +72:6\n+          StorageDead(_52);                // scope 34 at $DIR/reference_prop.rs:+72:5: +72:6\n+-         StorageDead(_51);                // scope 0 at $DIR/reference_prop.rs:+72:5: +72:6\n+          StorageLive(_57);                // scope 37 at $DIR/reference_prop.rs:+76:13: +76:14\n+          _57 = const 13_usize;            // scope 37 at $DIR/reference_prop.rs:+76:17: +76:25\n+          StorageLive(_58);                // scope 38 at $DIR/reference_prop.rs:+77:13: +77:14\n+          _58 = &raw const _57;            // scope 38 at $DIR/reference_prop.rs:+77:17: +77:29\n+          StorageLive(_59);                // scope 39 at $DIR/reference_prop.rs:+78:13: +78:14\n+-         _59 = &raw const (*_58);         // scope 39 at $DIR/reference_prop.rs:+78:17: +78:30\n++         _59 = &raw const _57;            // scope 39 at $DIR/reference_prop.rs:+78:17: +78:30\n+          StorageLive(_60);                // scope 40 at $DIR/reference_prop.rs:+79:13: +79:14\n+-         _60 = (*_59);                    // scope 40 at $DIR/reference_prop.rs:+79:17: +79:19\n++         _60 = _57;                       // scope 40 at $DIR/reference_prop.rs:+79:17: +79:19\n+          StorageLive(_61);                // scope 41 at $DIR/reference_prop.rs:+80:9: +80:19\n+          StorageLive(_62);                // scope 41 at $DIR/reference_prop.rs:+80:16: +80:18\n+          _62 = ();                        // scope 41 at $DIR/reference_prop.rs:+80:16: +80:18\n+          _61 = opaque::<()>(move _62) -> bb9; // scope 41 at $DIR/reference_prop.rs:+80:9: +80:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:239:9: 239:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb9: {\n+          StorageDead(_62);                // scope 41 at $DIR/reference_prop.rs:+80:18: +80:19\n+          StorageDead(_61);                // scope 41 at $DIR/reference_prop.rs:+80:19: +80:20\n+          _0 = const ();                   // scope 37 at $DIR/reference_prop.rs:+75:5: +81:6\n+          StorageDead(_60);                // scope 40 at $DIR/reference_prop.rs:+81:5: +81:6\n+          StorageDead(_59);                // scope 39 at $DIR/reference_prop.rs:+81:5: +81:6\n+          StorageDead(_58);                // scope 38 at $DIR/reference_prop.rs:+81:5: +81:6\n+          StorageDead(_57);                // scope 37 at $DIR/reference_prop.rs:+81:5: +81:6\n+          return;                          // scope 0 at $DIR/reference_prop.rs:+82:2: +82:2\n       }\n   }\n   "}, {"sha": "9ad9dd86d1ca4f0d2383ad69bb608e0923347a90", "filename": "tests/mir-opt/reference_prop.reference_propagation_mut.ReferencePropagation.diff", "status": "modified", "additions": 283, "deletions": 199, "changes": 482, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation_mut.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation_mut.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.reference_propagation_mut.ReferencePropagation.diff?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -5,29 +5,41 @@\n       debug single => _1;                  // in scope 0 at $DIR/reference_prop.rs:+0:43: +0:49\n       debug multiple => _2;                // in scope 0 at $DIR/reference_prop.rs:+0:62: +0:74\n       let mut _0: ();                      // return place in scope 0 at $DIR/reference_prop.rs:+0:87: +0:87\n-      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n+      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n       let mut _4: usize;                   // in scope 0 at $DIR/reference_prop.rs:+3:13: +3:18\n-      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-      let mut _8: usize;                   // in scope 0 at $DIR/reference_prop.rs:+10:13: +10:18\n-      let mut _11: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+13:13: +13:20\n-      let mut _12: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+13:13: +13:20\n-      let _14: ();                         // in scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-      let mut _15: usize;                  // in scope 0 at $DIR/reference_prop.rs:+20:13: +20:18\n-      let _19: ();                         // in scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-      let mut _20: usize;                  // in scope 0 at $DIR/reference_prop.rs:+28:13: +28:18\n-      let _24: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-      let mut _25: usize;                  // in scope 0 at $DIR/reference_prop.rs:+36:13: +36:18\n-      let _28: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:9: +39:18\n-      let mut _29: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+39:16: +39:17\n-      let _30: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-      let mut _31: usize;                  // in scope 0 at $DIR/reference_prop.rs:+44:13: +44:18\n-      let _37: ();                         // in scope 0 at $DIR/reference_prop.rs:+52:9: +52:19\n-      let mut _38: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+52:16: +52:18\n-      let _39: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-      let _40: &mut T;                     // in scope 0 at $DIR/reference_prop.rs:+57:13: +57:14\n-      let _42: &mut T;                     // in scope 0 at $DIR/reference_prop.rs:+63:13: +63:14\n-      let mut _43: &mut T;                 // in scope 0 at $DIR/reference_prop.rs:+64:20: +64:32\n-      let mut _44: &mut T;                 // in scope 0 at $DIR/reference_prop.rs:+64:20: +64:32\n+      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+6:9: +6:19\n+      let mut _8: ();                      // in scope 0 at $DIR/reference_prop.rs:+6:16: +6:18\n+      let _9: ();                          // in scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+      let mut _10: usize;                  // in scope 0 at $DIR/reference_prop.rs:+11:13: +11:18\n+      let mut _13: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+14:13: +14:20\n+      let mut _14: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+14:13: +14:20\n+      let _16: ();                         // in scope 0 at $DIR/reference_prop.rs:+17:9: +17:19\n+      let mut _17: ();                     // in scope 0 at $DIR/reference_prop.rs:+17:16: +17:18\n+      let _18: ();                         // in scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+      let mut _19: usize;                  // in scope 0 at $DIR/reference_prop.rs:+22:13: +22:18\n+      let _23: ();                         // in scope 0 at $DIR/reference_prop.rs:+26:9: +26:19\n+      let mut _24: ();                     // in scope 0 at $DIR/reference_prop.rs:+26:16: +26:18\n+      let _25: ();                         // in scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+      let mut _26: usize;                  // in scope 0 at $DIR/reference_prop.rs:+31:13: +31:18\n+      let _30: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:9: +35:19\n+      let mut _31: ();                     // in scope 0 at $DIR/reference_prop.rs:+35:16: +35:18\n+      let _32: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+      let mut _33: usize;                  // in scope 0 at $DIR/reference_prop.rs:+40:13: +40:18\n+      let _36: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:9: +43:18\n+      let mut _37: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+43:16: +43:17\n+      let _38: ();                         // in scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+      let mut _39: usize;                  // in scope 0 at $DIR/reference_prop.rs:+48:13: +48:18\n+      let _45: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:9: +56:19\n+      let mut _46: &mut usize;             // in scope 0 at $DIR/reference_prop.rs:+56:16: +56:18\n+      let _47: ();                         // in scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+      let _48: &mut T;                     // in scope 0 at $DIR/reference_prop.rs:+61:13: +61:14\n+      let _50: ();                         // in scope 0 at $DIR/reference_prop.rs:+63:9: +63:19\n+      let mut _51: ();                     // in scope 0 at $DIR/reference_prop.rs:+63:16: +63:18\n+      let _52: &mut T;                     // in scope 0 at $DIR/reference_prop.rs:+68:13: +68:14\n+      let mut _53: &mut T;                 // in scope 0 at $DIR/reference_prop.rs:+69:20: +69:32\n+      let mut _54: &mut T;                 // in scope 0 at $DIR/reference_prop.rs:+69:20: +69:32\n+      let _56: ();                         // in scope 0 at $DIR/reference_prop.rs:+71:9: +71:19\n+      let mut _57: ();                     // in scope 0 at $DIR/reference_prop.rs:+71:16: +71:18\n       scope 1 {\n           debug a => _4;                   // in scope 1 at $DIR/reference_prop.rs:+3:13: +3:18\n           let _5: &mut usize;              // in scope 1 at $DIR/reference_prop.rs:+4:13: +4:14\n@@ -40,249 +52,321 @@\n           }\n       }\n       scope 4 {\n-          debug a => _8;                   // in scope 4 at $DIR/reference_prop.rs:+10:13: +10:18\n-          let mut _9: usize;               // in scope 4 at $DIR/reference_prop.rs:+11:13: +11:19\n+          debug a => _10;                  // in scope 4 at $DIR/reference_prop.rs:+11:13: +11:18\n+          let mut _11: usize;              // in scope 4 at $DIR/reference_prop.rs:+12:13: +12:19\n           scope 5 {\n-              debug a2 => _9;              // in scope 5 at $DIR/reference_prop.rs:+11:13: +11:19\n-              let mut _10: &mut usize;     // in scope 5 at $DIR/reference_prop.rs:+12:13: +12:18\n+              debug a2 => _11;             // in scope 5 at $DIR/reference_prop.rs:+12:13: +12:19\n+              let mut _12: &mut usize;     // in scope 5 at $DIR/reference_prop.rs:+13:13: +13:18\n               scope 6 {\n-                  debug b => _10;          // in scope 6 at $DIR/reference_prop.rs:+12:13: +12:18\n-                  let _13: usize;          // in scope 6 at $DIR/reference_prop.rs:+15:13: +15:14\n+                  debug b => _12;          // in scope 6 at $DIR/reference_prop.rs:+13:13: +13:18\n+                  let _15: usize;          // in scope 6 at $DIR/reference_prop.rs:+16:13: +16:14\n                   scope 7 {\n-                      debug c => _13;      // in scope 7 at $DIR/reference_prop.rs:+15:13: +15:14\n+                      debug c => _15;      // in scope 7 at $DIR/reference_prop.rs:+16:13: +16:14\n                   }\n               }\n           }\n       }\n       scope 8 {\n-          debug a => _15;                  // in scope 8 at $DIR/reference_prop.rs:+20:13: +20:18\n-          let _16: &mut usize;             // in scope 8 at $DIR/reference_prop.rs:+21:13: +21:14\n+          debug a => _19;                  // in scope 8 at $DIR/reference_prop.rs:+22:13: +22:18\n+          let _20: &mut usize;             // in scope 8 at $DIR/reference_prop.rs:+23:13: +23:14\n           scope 9 {\n-              debug b => _16;              // in scope 9 at $DIR/reference_prop.rs:+21:13: +21:14\n-              let _17: &&mut usize;        // in scope 9 at $DIR/reference_prop.rs:+22:13: +22:14\n+              debug b => _20;              // in scope 9 at $DIR/reference_prop.rs:+23:13: +23:14\n+              let _21: &&mut usize;        // in scope 9 at $DIR/reference_prop.rs:+24:13: +24:14\n               scope 10 {\n-                  debug d => _17;          // in scope 10 at $DIR/reference_prop.rs:+22:13: +22:14\n-                  let _18: usize;          // in scope 10 at $DIR/reference_prop.rs:+23:13: +23:14\n+                  debug d => _21;          // in scope 10 at $DIR/reference_prop.rs:+24:13: +24:14\n+                  let _22: usize;          // in scope 10 at $DIR/reference_prop.rs:+25:13: +25:14\n                   scope 11 {\n-                      debug c => _18;      // in scope 11 at $DIR/reference_prop.rs:+23:13: +23:14\n+                      debug c => _22;      // in scope 11 at $DIR/reference_prop.rs:+25:13: +25:14\n                   }\n               }\n           }\n       }\n       scope 12 {\n-          debug a => _20;                  // in scope 12 at $DIR/reference_prop.rs:+28:13: +28:18\n-          let mut _21: &mut usize;         // in scope 12 at $DIR/reference_prop.rs:+29:13: +29:18\n+          debug a => _26;                  // in scope 12 at $DIR/reference_prop.rs:+31:13: +31:18\n+          let mut _27: &mut usize;         // in scope 12 at $DIR/reference_prop.rs:+32:13: +32:18\n           scope 13 {\n-              debug b => _21;              // in scope 13 at $DIR/reference_prop.rs:+29:13: +29:18\n-              let _22: &mut &mut usize;    // in scope 13 at $DIR/reference_prop.rs:+30:13: +30:14\n+              debug b => _27;              // in scope 13 at $DIR/reference_prop.rs:+32:13: +32:18\n+              let _28: &mut &mut usize;    // in scope 13 at $DIR/reference_prop.rs:+33:13: +33:14\n               scope 14 {\n-                  debug d => _22;          // in scope 14 at $DIR/reference_prop.rs:+30:13: +30:14\n-                  let _23: usize;          // in scope 14 at $DIR/reference_prop.rs:+31:13: +31:14\n+                  debug d => _28;          // in scope 14 at $DIR/reference_prop.rs:+33:13: +33:14\n+                  let _29: usize;          // in scope 14 at $DIR/reference_prop.rs:+34:13: +34:14\n                   scope 15 {\n-                      debug c => _23;      // in scope 15 at $DIR/reference_prop.rs:+31:13: +31:14\n+                      debug c => _29;      // in scope 15 at $DIR/reference_prop.rs:+34:13: +34:14\n                   }\n               }\n           }\n       }\n       scope 16 {\n-          debug a => _25;                  // in scope 16 at $DIR/reference_prop.rs:+36:13: +36:18\n-          let _26: &mut usize;             // in scope 16 at $DIR/reference_prop.rs:+37:13: +37:14\n+          debug a => _33;                  // in scope 16 at $DIR/reference_prop.rs:+40:13: +40:18\n+          let _34: &mut usize;             // in scope 16 at $DIR/reference_prop.rs:+41:13: +41:14\n           scope 17 {\n-              debug b => _26;              // in scope 17 at $DIR/reference_prop.rs:+37:13: +37:14\n-              let _27: usize;              // in scope 17 at $DIR/reference_prop.rs:+38:13: +38:14\n+              debug b => _34;              // in scope 17 at $DIR/reference_prop.rs:+41:13: +41:14\n+              let _35: usize;              // in scope 17 at $DIR/reference_prop.rs:+42:13: +42:14\n               scope 18 {\n-                  debug c => _27;          // in scope 18 at $DIR/reference_prop.rs:+38:13: +38:14\n+                  debug c => _35;          // in scope 18 at $DIR/reference_prop.rs:+42:13: +42:14\n               }\n           }\n       }\n       scope 19 {\n-          debug a => _31;                  // in scope 19 at $DIR/reference_prop.rs:+44:13: +44:18\n-          let _32: &mut usize;             // in scope 19 at $DIR/reference_prop.rs:+45:13: +45:15\n+          debug a => _39;                  // in scope 19 at $DIR/reference_prop.rs:+48:13: +48:18\n+          let _40: &mut usize;             // in scope 19 at $DIR/reference_prop.rs:+49:13: +49:15\n           scope 20 {\n-              debug b1 => _32;             // in scope 20 at $DIR/reference_prop.rs:+45:13: +45:15\n-              let _33: usize;              // in scope 20 at $DIR/reference_prop.rs:+46:13: +46:14\n+              debug b1 => _40;             // in scope 20 at $DIR/reference_prop.rs:+49:13: +49:15\n+              let _41: usize;              // in scope 20 at $DIR/reference_prop.rs:+50:13: +50:14\n               scope 21 {\n-                  debug c => _33;          // in scope 21 at $DIR/reference_prop.rs:+46:13: +46:14\n-                  let _34: &mut usize;     // in scope 21 at $DIR/reference_prop.rs:+47:13: +47:15\n+                  debug c => _41;          // in scope 21 at $DIR/reference_prop.rs:+50:13: +50:14\n+                  let _42: &mut usize;     // in scope 21 at $DIR/reference_prop.rs:+51:13: +51:15\n                   scope 22 {\n-                      debug b2 => _34;     // in scope 22 at $DIR/reference_prop.rs:+47:13: +47:15\n-                      let _35: usize;      // in scope 22 at $DIR/reference_prop.rs:+48:13: +48:15\n+                      debug b2 => _42;     // in scope 22 at $DIR/reference_prop.rs:+51:13: +51:15\n+                      let _43: usize;      // in scope 22 at $DIR/reference_prop.rs:+52:13: +52:15\n                       scope 23 {\n-                          debug c2 => _35; // in scope 23 at $DIR/reference_prop.rs:+48:13: +48:15\n-                          let _36: &mut usize; // in scope 23 at $DIR/reference_prop.rs:+49:13: +49:15\n+                          debug c2 => _43; // in scope 23 at $DIR/reference_prop.rs:+52:13: +52:15\n+                          let _44: &mut usize; // in scope 23 at $DIR/reference_prop.rs:+53:13: +53:15\n                           scope 24 {\n-                              debug b3 => _36; // in scope 24 at $DIR/reference_prop.rs:+49:13: +49:15\n+                              debug b3 => _44; // in scope 24 at $DIR/reference_prop.rs:+53:13: +53:15\n                           }\n                       }\n                   }\n               }\n           }\n       }\n       scope 25 {\n-          debug a => _40;                  // in scope 25 at $DIR/reference_prop.rs:+57:13: +57:14\n-          let _41: T;                      // in scope 25 at $DIR/reference_prop.rs:+58:13: +58:14\n+          debug a => _48;                  // in scope 25 at $DIR/reference_prop.rs:+61:13: +61:14\n+          let _49: T;                      // in scope 25 at $DIR/reference_prop.rs:+62:13: +62:14\n           scope 26 {\n-              debug b => _41;              // in scope 26 at $DIR/reference_prop.rs:+58:13: +58:14\n+              debug b => _49;              // in scope 26 at $DIR/reference_prop.rs:+62:13: +62:14\n           }\n       }\n       scope 27 {\n-          debug a => _42;                  // in scope 27 at $DIR/reference_prop.rs:+63:13: +63:14\n-          let _45: T;                      // in scope 27 at $DIR/reference_prop.rs:+65:13: +65:14\n+          debug a => _52;                  // in scope 27 at $DIR/reference_prop.rs:+68:13: +68:14\n+          let _55: T;                      // in scope 27 at $DIR/reference_prop.rs:+70:13: +70:14\n           scope 28 {\n-              debug b => _45;              // in scope 28 at $DIR/reference_prop.rs:+65:13: +65:14\n+              debug b => _55;              // in scope 28 at $DIR/reference_prop.rs:+70:13: +70:14\n           }\n       }\n   \n       bb0: {\n--         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n+-         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n           StorageLive(_4);                 // scope 0 at $DIR/reference_prop.rs:+3:13: +3:18\n           _4 = const 5_usize;              // scope 0 at $DIR/reference_prop.rs:+3:21: +3:28\n           StorageLive(_5);                 // scope 1 at $DIR/reference_prop.rs:+4:13: +4:14\n           _5 = &mut _4;                    // scope 1 at $DIR/reference_prop.rs:+4:17: +4:23\n           StorageLive(_6);                 // scope 2 at $DIR/reference_prop.rs:+5:13: +5:14\n -         _6 = (*_5);                      // scope 2 at $DIR/reference_prop.rs:+5:17: +5:19\n--         _3 = const ();                   // scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n +         _6 = _4;                         // scope 2 at $DIR/reference_prop.rs:+5:17: +5:19\n-          StorageDead(_6);                 // scope 2 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_5);                 // scope 1 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_4);                 // scope 0 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageLive(_7);                 // scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageLive(_8);                 // scope 0 at $DIR/reference_prop.rs:+10:13: +10:18\n-          _8 = const 5_usize;              // scope 0 at $DIR/reference_prop.rs:+10:21: +10:28\n-          StorageLive(_9);                 // scope 4 at $DIR/reference_prop.rs:+11:13: +11:19\n-          _9 = const 7_usize;              // scope 4 at $DIR/reference_prop.rs:+11:22: +11:29\n-          StorageLive(_10);                // scope 5 at $DIR/reference_prop.rs:+12:13: +12:18\n-          _10 = &mut _8;                   // scope 5 at $DIR/reference_prop.rs:+12:21: +12:27\n-          StorageLive(_11);                // scope 6 at $DIR/reference_prop.rs:+13:13: +13:20\n--         StorageLive(_12);                // scope 6 at $DIR/reference_prop.rs:+13:13: +13:20\n--         _12 = &mut _9;                   // scope 6 at $DIR/reference_prop.rs:+13:13: +13:20\n--         _11 = &mut (*_12);               // scope 6 at $DIR/reference_prop.rs:+13:13: +13:20\n-+         _11 = &mut _9;                   // scope 6 at $DIR/reference_prop.rs:+13:13: +13:20\n-          _10 = move _11;                  // scope 6 at $DIR/reference_prop.rs:+13:9: +13:20\n-          StorageDead(_11);                // scope 6 at $DIR/reference_prop.rs:+13:19: +13:20\n--         StorageDead(_12);                // scope 6 at $DIR/reference_prop.rs:+13:20: +13:21\n-          StorageLive(_13);                // scope 6 at $DIR/reference_prop.rs:+15:13: +15:14\n-          _13 = (*_10);                    // scope 6 at $DIR/reference_prop.rs:+15:17: +15:19\n--         _7 = const ();                   // scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageDead(_13);                // scope 6 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_10);                // scope 5 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_9);                 // scope 4 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_8);                 // scope 0 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageDead(_7);                 // scope 0 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageLive(_14);                // scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageLive(_15);                // scope 0 at $DIR/reference_prop.rs:+20:13: +20:18\n-          _15 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+20:21: +20:28\n-          StorageLive(_16);                // scope 8 at $DIR/reference_prop.rs:+21:13: +21:14\n-          _16 = &mut _15;                  // scope 8 at $DIR/reference_prop.rs:+21:17: +21:23\n-          StorageLive(_17);                // scope 9 at $DIR/reference_prop.rs:+22:13: +22:14\n-          _17 = &_16;                      // scope 9 at $DIR/reference_prop.rs:+22:17: +22:19\n-          StorageLive(_18);                // scope 10 at $DIR/reference_prop.rs:+23:13: +23:14\n-          _18 = (*_16);                    // scope 10 at $DIR/reference_prop.rs:+23:17: +23:19\n--         _14 = const ();                  // scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageDead(_18);                // scope 10 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_17);                // scope 9 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_16);                // scope 8 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_15);                // scope 0 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageDead(_14);                // scope 0 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageLive(_19);                // scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageLive(_20);                // scope 0 at $DIR/reference_prop.rs:+28:13: +28:18\n-          _20 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+28:21: +28:28\n-          StorageLive(_21);                // scope 12 at $DIR/reference_prop.rs:+29:13: +29:18\n-          _21 = &mut _20;                  // scope 12 at $DIR/reference_prop.rs:+29:21: +29:27\n-          StorageLive(_22);                // scope 13 at $DIR/reference_prop.rs:+30:13: +30:14\n-          _22 = &mut _21;                  // scope 13 at $DIR/reference_prop.rs:+30:17: +30:23\n-          StorageLive(_23);                // scope 14 at $DIR/reference_prop.rs:+31:13: +31:14\n-          _23 = (*_21);                    // scope 14 at $DIR/reference_prop.rs:+31:17: +31:19\n--         _19 = const ();                  // scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageDead(_23);                // scope 14 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_22);                // scope 13 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_21);                // scope 12 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_20);                // scope 0 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageDead(_19);                // scope 0 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageLive(_24);                // scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageLive(_25);                // scope 0 at $DIR/reference_prop.rs:+36:13: +36:18\n-          _25 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+36:21: +36:28\n-          StorageLive(_26);                // scope 16 at $DIR/reference_prop.rs:+37:13: +37:14\n-          _26 = &mut _25;                  // scope 16 at $DIR/reference_prop.rs:+37:17: +37:23\n-          StorageLive(_27);                // scope 17 at $DIR/reference_prop.rs:+38:13: +38:14\n-          _27 = (*_26);                    // scope 17 at $DIR/reference_prop.rs:+38:17: +38:19\n-          StorageLive(_28);                // scope 18 at $DIR/reference_prop.rs:+39:9: +39:18\n-          StorageLive(_29);                // scope 18 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _29 = move _26;                  // scope 18 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _28 = opaque::<&mut usize>(move _29) -> bb1; // scope 18 at $DIR/reference_prop.rs:+39:9: +39:18\n+          StorageLive(_7);                 // scope 3 at $DIR/reference_prop.rs:+6:9: +6:19\n+          StorageLive(_8);                 // scope 3 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _8 = ();                         // scope 3 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _7 = opaque::<()>(move _8) -> bb1; // scope 3 at $DIR/reference_prop.rs:+6:9: +6:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:117:9: 117:15\n-                                           // + literal: Const { ty: fn(&mut usize) {opaque::<&mut usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:90:9: 90:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageDead(_29);                // scope 18 at $DIR/reference_prop.rs:+39:17: +39:18\n-          StorageDead(_28);                // scope 18 at $DIR/reference_prop.rs:+39:18: +39:19\n--         _24 = const ();                  // scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageDead(_27);                // scope 17 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_26);                // scope 16 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_25);                // scope 0 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageDead(_24);                // scope 0 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageLive(_30);                // scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageLive(_31);                // scope 0 at $DIR/reference_prop.rs:+44:13: +44:18\n-          _31 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+44:21: +44:28\n-          StorageLive(_32);                // scope 19 at $DIR/reference_prop.rs:+45:13: +45:15\n-          _32 = &mut _31;                  // scope 19 at $DIR/reference_prop.rs:+45:18: +45:24\n-          StorageLive(_33);                // scope 20 at $DIR/reference_prop.rs:+46:13: +46:14\n-          _33 = (*_32);                    // scope 20 at $DIR/reference_prop.rs:+46:17: +46:20\n-          StorageLive(_34);                // scope 21 at $DIR/reference_prop.rs:+47:13: +47:15\n-          _34 = move _32;                  // scope 21 at $DIR/reference_prop.rs:+47:18: +47:20\n-          StorageLive(_35);                // scope 22 at $DIR/reference_prop.rs:+48:13: +48:15\n-          _35 = (*_34);                    // scope 22 at $DIR/reference_prop.rs:+48:18: +48:21\n-          StorageLive(_36);                // scope 23 at $DIR/reference_prop.rs:+49:13: +49:15\n-          _36 = move _34;                  // scope 23 at $DIR/reference_prop.rs:+49:18: +49:20\n-          StorageLive(_37);                // scope 24 at $DIR/reference_prop.rs:+52:9: +52:19\n-          StorageLive(_38);                // scope 24 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _38 = move _36;                  // scope 24 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _37 = opaque::<&mut usize>(move _38) -> bb2; // scope 24 at $DIR/reference_prop.rs:+52:9: +52:19\n+          StorageDead(_8);                 // scope 3 at $DIR/reference_prop.rs:+6:18: +6:19\n+          StorageDead(_7);                 // scope 3 at $DIR/reference_prop.rs:+6:19: +6:20\n+-         _3 = const ();                   // scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n+          StorageDead(_6);                 // scope 2 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_5);                 // scope 1 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_4);                 // scope 0 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageLive(_9);                 // scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageLive(_10);                // scope 0 at $DIR/reference_prop.rs:+11:13: +11:18\n+          _10 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+11:21: +11:28\n+          StorageLive(_11);                // scope 4 at $DIR/reference_prop.rs:+12:13: +12:19\n+          _11 = const 7_usize;             // scope 4 at $DIR/reference_prop.rs:+12:22: +12:29\n+          StorageLive(_12);                // scope 5 at $DIR/reference_prop.rs:+13:13: +13:18\n+          _12 = &mut _10;                  // scope 5 at $DIR/reference_prop.rs:+13:21: +13:27\n+          StorageLive(_13);                // scope 6 at $DIR/reference_prop.rs:+14:13: +14:20\n+-         StorageLive(_14);                // scope 6 at $DIR/reference_prop.rs:+14:13: +14:20\n+-         _14 = &mut _11;                  // scope 6 at $DIR/reference_prop.rs:+14:13: +14:20\n+-         _13 = &mut (*_14);               // scope 6 at $DIR/reference_prop.rs:+14:13: +14:20\n++         _13 = &mut _11;                  // scope 6 at $DIR/reference_prop.rs:+14:13: +14:20\n+          _12 = move _13;                  // scope 6 at $DIR/reference_prop.rs:+14:9: +14:20\n+          StorageDead(_13);                // scope 6 at $DIR/reference_prop.rs:+14:19: +14:20\n+-         StorageDead(_14);                // scope 6 at $DIR/reference_prop.rs:+14:20: +14:21\n+          StorageLive(_15);                // scope 6 at $DIR/reference_prop.rs:+16:13: +16:14\n+          _15 = (*_12);                    // scope 6 at $DIR/reference_prop.rs:+16:17: +16:19\n+          StorageLive(_16);                // scope 7 at $DIR/reference_prop.rs:+17:9: +17:19\n+          StorageLive(_17);                // scope 7 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _17 = ();                        // scope 7 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _16 = opaque::<()>(move _17) -> bb2; // scope 7 at $DIR/reference_prop.rs:+17:9: +17:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:130:9: 130:15\n-                                           // + literal: Const { ty: fn(&mut usize) {opaque::<&mut usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:101:9: 101:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          StorageDead(_38);                // scope 24 at $DIR/reference_prop.rs:+52:18: +52:19\n-          StorageDead(_37);                // scope 24 at $DIR/reference_prop.rs:+52:19: +52:20\n--         _30 = const ();                  // scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageDead(_36);                // scope 23 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_35);                // scope 22 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_34);                // scope 21 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_33);                // scope 20 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_32);                // scope 19 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_31);                // scope 0 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageDead(_30);                // scope 0 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageLive(_39);                // scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-          StorageLive(_40);                // scope 0 at $DIR/reference_prop.rs:+57:13: +57:14\n-          _40 = &mut (*_1);                // scope 0 at $DIR/reference_prop.rs:+57:17: +57:29\n-          StorageLive(_41);                // scope 25 at $DIR/reference_prop.rs:+58:13: +58:14\n--         _41 = (*_40);                    // scope 25 at $DIR/reference_prop.rs:+58:17: +58:19\n--         _39 = const ();                  // scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-+         _41 = (*_1);                     // scope 25 at $DIR/reference_prop.rs:+58:17: +58:19\n-          StorageDead(_41);                // scope 25 at $DIR/reference_prop.rs:+59:5: +59:6\n-          StorageDead(_40);                // scope 0 at $DIR/reference_prop.rs:+59:5: +59:6\n--         StorageDead(_39);                // scope 0 at $DIR/reference_prop.rs:+59:5: +59:6\n-          StorageLive(_42);                // scope 0 at $DIR/reference_prop.rs:+63:13: +63:14\n-          _42 = &mut (*_2);                // scope 0 at $DIR/reference_prop.rs:+63:17: +63:31\n-          StorageLive(_43);                // scope 27 at $DIR/reference_prop.rs:+64:20: +64:32\n--         StorageLive(_44);                // scope 27 at $DIR/reference_prop.rs:+64:20: +64:32\n--         _44 = &mut (*_1);                // scope 27 at $DIR/reference_prop.rs:+64:20: +64:32\n--         _43 = &mut (*_44);               // scope 27 at $DIR/reference_prop.rs:+64:20: +64:32\n-+         _43 = &mut (*_1);                // scope 27 at $DIR/reference_prop.rs:+64:20: +64:32\n-          _2 = move _43;                   // scope 27 at $DIR/reference_prop.rs:+64:9: +64:32\n-          StorageDead(_43);                // scope 27 at $DIR/reference_prop.rs:+64:31: +64:32\n--         StorageDead(_44);                // scope 27 at $DIR/reference_prop.rs:+64:32: +64:33\n-          StorageLive(_45);                // scope 27 at $DIR/reference_prop.rs:+65:13: +65:14\n-          _45 = (*_42);                    // scope 27 at $DIR/reference_prop.rs:+65:17: +65:19\n-          _0 = const ();                   // scope 0 at $DIR/reference_prop.rs:+62:5: +66:6\n-          StorageDead(_45);                // scope 27 at $DIR/reference_prop.rs:+66:5: +66:6\n-          StorageDead(_42);                // scope 0 at $DIR/reference_prop.rs:+66:5: +66:6\n-          return;                          // scope 0 at $DIR/reference_prop.rs:+67:2: +67:2\n+          StorageDead(_17);                // scope 7 at $DIR/reference_prop.rs:+17:18: +17:19\n+          StorageDead(_16);                // scope 7 at $DIR/reference_prop.rs:+17:19: +17:20\n+-         _9 = const ();                   // scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageDead(_15);                // scope 6 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_12);                // scope 5 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_11);                // scope 4 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_10);                // scope 0 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageDead(_9);                 // scope 0 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageLive(_18);                // scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageLive(_19);                // scope 0 at $DIR/reference_prop.rs:+22:13: +22:18\n+          _19 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+22:21: +22:28\n+          StorageLive(_20);                // scope 8 at $DIR/reference_prop.rs:+23:13: +23:14\n+          _20 = &mut _19;                  // scope 8 at $DIR/reference_prop.rs:+23:17: +23:23\n+          StorageLive(_21);                // scope 9 at $DIR/reference_prop.rs:+24:13: +24:14\n+          _21 = &_20;                      // scope 9 at $DIR/reference_prop.rs:+24:17: +24:19\n+          StorageLive(_22);                // scope 10 at $DIR/reference_prop.rs:+25:13: +25:14\n+          _22 = (*_20);                    // scope 10 at $DIR/reference_prop.rs:+25:17: +25:19\n+          StorageLive(_23);                // scope 11 at $DIR/reference_prop.rs:+26:9: +26:19\n+          StorageLive(_24);                // scope 11 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _24 = ();                        // scope 11 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _23 = opaque::<()>(move _24) -> bb3; // scope 11 at $DIR/reference_prop.rs:+26:9: +26:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:110:9: 110:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb3: {\n+          StorageDead(_24);                // scope 11 at $DIR/reference_prop.rs:+26:18: +26:19\n+          StorageDead(_23);                // scope 11 at $DIR/reference_prop.rs:+26:19: +26:20\n+-         _18 = const ();                  // scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageDead(_22);                // scope 10 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_21);                // scope 9 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_20);                // scope 8 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_19);                // scope 0 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageDead(_18);                // scope 0 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageLive(_25);                // scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageLive(_26);                // scope 0 at $DIR/reference_prop.rs:+31:13: +31:18\n+          _26 = const 5_usize;             // scope 0 at $DIR/reference_prop.rs:+31:21: +31:28\n+          StorageLive(_27);                // scope 12 at $DIR/reference_prop.rs:+32:13: +32:18\n+          _27 = &mut _26;                  // scope 12 at $DIR/reference_prop.rs:+32:21: +32:27\n+          StorageLive(_28);                // scope 13 at $DIR/reference_prop.rs:+33:13: +33:14\n+          _28 = &mut _27;                  // scope 13 at $DIR/reference_prop.rs:+33:17: +33:23\n+          StorageLive(_29);                // scope 14 at $DIR/reference_prop.rs:+34:13: +34:14\n+          _29 = (*_27);                    // scope 14 at $DIR/reference_prop.rs:+34:17: +34:19\n+          StorageLive(_30);                // scope 15 at $DIR/reference_prop.rs:+35:9: +35:19\n+          StorageLive(_31);                // scope 15 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _31 = ();                        // scope 15 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _30 = opaque::<()>(move _31) -> bb4; // scope 15 at $DIR/reference_prop.rs:+35:9: +35:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:119:9: 119:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb4: {\n+          StorageDead(_31);                // scope 15 at $DIR/reference_prop.rs:+35:18: +35:19\n+          StorageDead(_30);                // scope 15 at $DIR/reference_prop.rs:+35:19: +35:20\n+-         _25 = const ();                  // scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageDead(_29);                // scope 14 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_28);                // scope 13 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_27);                // scope 12 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_26);                // scope 0 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageDead(_25);                // scope 0 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageLive(_32);                // scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageLive(_33);                // scope 0 at $DIR/reference_prop.rs:+40:13: +40:18\n+          _33 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+40:21: +40:28\n+          StorageLive(_34);                // scope 16 at $DIR/reference_prop.rs:+41:13: +41:14\n+          _34 = &mut _33;                  // scope 16 at $DIR/reference_prop.rs:+41:17: +41:23\n+          StorageLive(_35);                // scope 17 at $DIR/reference_prop.rs:+42:13: +42:14\n+          _35 = (*_34);                    // scope 17 at $DIR/reference_prop.rs:+42:17: +42:19\n+          StorageLive(_36);                // scope 18 at $DIR/reference_prop.rs:+43:9: +43:18\n+          StorageLive(_37);                // scope 18 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _37 = move _34;                  // scope 18 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _36 = opaque::<&mut usize>(move _37) -> bb5; // scope 18 at $DIR/reference_prop.rs:+43:9: +43:18\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:127:9: 127:15\n+                                           // + literal: Const { ty: fn(&mut usize) {opaque::<&mut usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb5: {\n+          StorageDead(_37);                // scope 18 at $DIR/reference_prop.rs:+43:17: +43:18\n+          StorageDead(_36);                // scope 18 at $DIR/reference_prop.rs:+43:18: +43:19\n+-         _32 = const ();                  // scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageDead(_35);                // scope 17 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_34);                // scope 16 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_33);                // scope 0 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageDead(_32);                // scope 0 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageLive(_38);                // scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageLive(_39);                // scope 0 at $DIR/reference_prop.rs:+48:13: +48:18\n+          _39 = const 7_usize;             // scope 0 at $DIR/reference_prop.rs:+48:21: +48:28\n+          StorageLive(_40);                // scope 19 at $DIR/reference_prop.rs:+49:13: +49:15\n+          _40 = &mut _39;                  // scope 19 at $DIR/reference_prop.rs:+49:18: +49:24\n+          StorageLive(_41);                // scope 20 at $DIR/reference_prop.rs:+50:13: +50:14\n+          _41 = (*_40);                    // scope 20 at $DIR/reference_prop.rs:+50:17: +50:20\n+          StorageLive(_42);                // scope 21 at $DIR/reference_prop.rs:+51:13: +51:15\n+          _42 = move _40;                  // scope 21 at $DIR/reference_prop.rs:+51:18: +51:20\n+          StorageLive(_43);                // scope 22 at $DIR/reference_prop.rs:+52:13: +52:15\n+          _43 = (*_42);                    // scope 22 at $DIR/reference_prop.rs:+52:18: +52:21\n+          StorageLive(_44);                // scope 23 at $DIR/reference_prop.rs:+53:13: +53:15\n+          _44 = move _42;                  // scope 23 at $DIR/reference_prop.rs:+53:18: +53:20\n+          StorageLive(_45);                // scope 24 at $DIR/reference_prop.rs:+56:9: +56:19\n+          StorageLive(_46);                // scope 24 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _46 = move _44;                  // scope 24 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _45 = opaque::<&mut usize>(move _46) -> bb6; // scope 24 at $DIR/reference_prop.rs:+56:9: +56:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:140:9: 140:15\n+                                           // + literal: Const { ty: fn(&mut usize) {opaque::<&mut usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb6: {\n+          StorageDead(_46);                // scope 24 at $DIR/reference_prop.rs:+56:18: +56:19\n+          StorageDead(_45);                // scope 24 at $DIR/reference_prop.rs:+56:19: +56:20\n+-         _38 = const ();                  // scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageDead(_44);                // scope 23 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_43);                // scope 22 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_42);                // scope 21 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_41);                // scope 20 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_40);                // scope 19 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_39);                // scope 0 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageDead(_38);                // scope 0 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageLive(_47);                // scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageLive(_48);                // scope 0 at $DIR/reference_prop.rs:+61:13: +61:14\n+          _48 = &mut (*_1);                // scope 0 at $DIR/reference_prop.rs:+61:17: +61:29\n+          StorageLive(_49);                // scope 25 at $DIR/reference_prop.rs:+62:13: +62:14\n+-         _49 = (*_48);                    // scope 25 at $DIR/reference_prop.rs:+62:17: +62:19\n++         _49 = (*_1);                     // scope 25 at $DIR/reference_prop.rs:+62:17: +62:19\n+          StorageLive(_50);                // scope 26 at $DIR/reference_prop.rs:+63:9: +63:19\n+          StorageLive(_51);                // scope 26 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _51 = ();                        // scope 26 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _50 = opaque::<()>(move _51) -> bb7; // scope 26 at $DIR/reference_prop.rs:+63:9: +63:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:147:9: 147:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb7: {\n+          StorageDead(_51);                // scope 26 at $DIR/reference_prop.rs:+63:18: +63:19\n+          StorageDead(_50);                // scope 26 at $DIR/reference_prop.rs:+63:19: +63:20\n+-         _47 = const ();                  // scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageDead(_49);                // scope 25 at $DIR/reference_prop.rs:+64:5: +64:6\n+          StorageDead(_48);                // scope 0 at $DIR/reference_prop.rs:+64:5: +64:6\n+-         StorageDead(_47);                // scope 0 at $DIR/reference_prop.rs:+64:5: +64:6\n+          StorageLive(_52);                // scope 0 at $DIR/reference_prop.rs:+68:13: +68:14\n+          _52 = &mut (*_2);                // scope 0 at $DIR/reference_prop.rs:+68:17: +68:31\n+          StorageLive(_53);                // scope 27 at $DIR/reference_prop.rs:+69:20: +69:32\n+-         StorageLive(_54);                // scope 27 at $DIR/reference_prop.rs:+69:20: +69:32\n+-         _54 = &mut (*_1);                // scope 27 at $DIR/reference_prop.rs:+69:20: +69:32\n+-         _53 = &mut (*_54);               // scope 27 at $DIR/reference_prop.rs:+69:20: +69:32\n++         _53 = &mut (*_1);                // scope 27 at $DIR/reference_prop.rs:+69:20: +69:32\n+          _2 = move _53;                   // scope 27 at $DIR/reference_prop.rs:+69:9: +69:32\n+          StorageDead(_53);                // scope 27 at $DIR/reference_prop.rs:+69:31: +69:32\n+-         StorageDead(_54);                // scope 27 at $DIR/reference_prop.rs:+69:32: +69:33\n+          StorageLive(_55);                // scope 27 at $DIR/reference_prop.rs:+70:13: +70:14\n+          _55 = (*_52);                    // scope 27 at $DIR/reference_prop.rs:+70:17: +70:19\n+          StorageLive(_56);                // scope 28 at $DIR/reference_prop.rs:+71:9: +71:19\n+          StorageLive(_57);                // scope 28 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _57 = ();                        // scope 28 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _56 = opaque::<()>(move _57) -> bb8; // scope 28 at $DIR/reference_prop.rs:+71:9: +71:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:155:9: 155:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb8: {\n+          StorageDead(_57);                // scope 28 at $DIR/reference_prop.rs:+71:18: +71:19\n+          StorageDead(_56);                // scope 28 at $DIR/reference_prop.rs:+71:19: +71:20\n+          _0 = const ();                   // scope 0 at $DIR/reference_prop.rs:+67:5: +72:6\n+          StorageDead(_55);                // scope 27 at $DIR/reference_prop.rs:+72:5: +72:6\n+          StorageDead(_52);                // scope 0 at $DIR/reference_prop.rs:+72:5: +72:6\n+          return;                          // scope 0 at $DIR/reference_prop.rs:+73:2: +73:2\n       }\n   }\n   "}, {"sha": "7e3cafd6380ae6ecd48458232d8397c83082959a", "filename": "tests/mir-opt/reference_prop.reference_propagation_mut_ptr.ReferencePropagation.diff", "status": "modified", "additions": 273, "deletions": 189, "changes": 462, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation_mut_ptr.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.reference_propagation_mut_ptr.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.reference_propagation_mut_ptr.ReferencePropagation.diff?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -5,19 +5,31 @@\n       debug single => _1;                  // in scope 0 at $DIR/reference_prop.rs:+0:43: +0:49\n       debug multiple => _2;                // in scope 0 at $DIR/reference_prop.rs:+0:59: +0:71\n       let mut _0: ();                      // return place in scope 0 at $DIR/reference_prop.rs:+0:81: +0:81\n-      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n-      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-      let mut _11: *mut usize;             // in scope 0 at $DIR/reference_prop.rs:+13:13: +13:24\n-      let _13: ();                         // in scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-      let _18: ();                         // in scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-      let _23: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-      let _27: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:9: +39:18\n-      let mut _28: *mut usize;             // in scope 0 at $DIR/reference_prop.rs:+39:16: +39:17\n-      let _29: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-      let _36: ();                         // in scope 0 at $DIR/reference_prop.rs:+52:9: +52:19\n-      let mut _37: *mut usize;             // in scope 0 at $DIR/reference_prop.rs:+52:16: +52:18\n-      let _38: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-      let mut _42: *mut T;                 // in scope 0 at $DIR/reference_prop.rs:+64:20: +64:36\n+      let _3: ();                          // in scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n+      let _7: ();                          // in scope 0 at $DIR/reference_prop.rs:+6:9: +6:19\n+      let mut _8: ();                      // in scope 0 at $DIR/reference_prop.rs:+6:16: +6:18\n+      let _9: ();                          // in scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+      let mut _13: *mut usize;             // in scope 0 at $DIR/reference_prop.rs:+14:13: +14:24\n+      let _15: ();                         // in scope 0 at $DIR/reference_prop.rs:+17:9: +17:19\n+      let mut _16: ();                     // in scope 0 at $DIR/reference_prop.rs:+17:16: +17:18\n+      let _17: ();                         // in scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+      let _22: ();                         // in scope 0 at $DIR/reference_prop.rs:+26:9: +26:19\n+      let mut _23: ();                     // in scope 0 at $DIR/reference_prop.rs:+26:16: +26:18\n+      let _24: ();                         // in scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+      let _29: ();                         // in scope 0 at $DIR/reference_prop.rs:+35:9: +35:19\n+      let mut _30: ();                     // in scope 0 at $DIR/reference_prop.rs:+35:16: +35:18\n+      let _31: ();                         // in scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+      let _35: ();                         // in scope 0 at $DIR/reference_prop.rs:+43:9: +43:18\n+      let mut _36: *mut usize;             // in scope 0 at $DIR/reference_prop.rs:+43:16: +43:17\n+      let _37: ();                         // in scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+      let _44: ();                         // in scope 0 at $DIR/reference_prop.rs:+56:9: +56:19\n+      let mut _45: *mut usize;             // in scope 0 at $DIR/reference_prop.rs:+56:16: +56:18\n+      let _46: ();                         // in scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+      let _49: ();                         // in scope 0 at $DIR/reference_prop.rs:+63:9: +63:19\n+      let mut _50: ();                     // in scope 0 at $DIR/reference_prop.rs:+63:16: +63:18\n+      let mut _52: *mut T;                 // in scope 0 at $DIR/reference_prop.rs:+69:20: +69:36\n+      let _54: ();                         // in scope 0 at $DIR/reference_prop.rs:+71:9: +71:19\n+      let mut _55: ();                     // in scope 0 at $DIR/reference_prop.rs:+71:16: +71:18\n       scope 1 {\n           let mut _4: usize;               // in scope 1 at $DIR/reference_prop.rs:+3:13: +3:18\n           scope 2 {\n@@ -33,92 +45,92 @@\n           }\n       }\n       scope 5 {\n-          let mut _8: usize;               // in scope 5 at $DIR/reference_prop.rs:+10:13: +10:18\n+          let mut _10: usize;              // in scope 5 at $DIR/reference_prop.rs:+11:13: +11:18\n           scope 6 {\n-              debug a => _8;               // in scope 6 at $DIR/reference_prop.rs:+10:13: +10:18\n-              let mut _9: usize;           // in scope 6 at $DIR/reference_prop.rs:+11:13: +11:19\n+              debug a => _10;              // in scope 6 at $DIR/reference_prop.rs:+11:13: +11:18\n+              let mut _11: usize;          // in scope 6 at $DIR/reference_prop.rs:+12:13: +12:19\n               scope 7 {\n-                  debug a2 => _9;          // in scope 7 at $DIR/reference_prop.rs:+11:13: +11:19\n-                  let mut _10: *mut usize; // in scope 7 at $DIR/reference_prop.rs:+12:13: +12:18\n+                  debug a2 => _11;         // in scope 7 at $DIR/reference_prop.rs:+12:13: +12:19\n+                  let mut _12: *mut usize; // in scope 7 at $DIR/reference_prop.rs:+13:13: +13:18\n                   scope 8 {\n-                      debug b => _10;      // in scope 8 at $DIR/reference_prop.rs:+12:13: +12:18\n-                      let _12: usize;      // in scope 8 at $DIR/reference_prop.rs:+15:13: +15:14\n+                      debug b => _12;      // in scope 8 at $DIR/reference_prop.rs:+13:13: +13:18\n+                      let _14: usize;      // in scope 8 at $DIR/reference_prop.rs:+16:13: +16:14\n                       scope 9 {\n-                          debug c => _12;  // in scope 9 at $DIR/reference_prop.rs:+15:13: +15:14\n+                          debug c => _14;  // in scope 9 at $DIR/reference_prop.rs:+16:13: +16:14\n                       }\n                   }\n               }\n           }\n       }\n       scope 10 {\n-          let mut _14: usize;              // in scope 10 at $DIR/reference_prop.rs:+20:13: +20:18\n+          let mut _18: usize;              // in scope 10 at $DIR/reference_prop.rs:+22:13: +22:18\n           scope 11 {\n-              debug a => _14;              // in scope 11 at $DIR/reference_prop.rs:+20:13: +20:18\n-              let _15: *mut usize;         // in scope 11 at $DIR/reference_prop.rs:+21:13: +21:14\n+              debug a => _18;              // in scope 11 at $DIR/reference_prop.rs:+22:13: +22:18\n+              let _19: *mut usize;         // in scope 11 at $DIR/reference_prop.rs:+23:13: +23:14\n               scope 12 {\n-                  debug b => _15;          // in scope 12 at $DIR/reference_prop.rs:+21:13: +21:14\n-                  let _16: &*mut usize;    // in scope 12 at $DIR/reference_prop.rs:+22:13: +22:14\n+                  debug b => _19;          // in scope 12 at $DIR/reference_prop.rs:+23:13: +23:14\n+                  let _20: &*mut usize;    // in scope 12 at $DIR/reference_prop.rs:+24:13: +24:14\n                   scope 13 {\n-                      debug d => _16;      // in scope 13 at $DIR/reference_prop.rs:+22:13: +22:14\n-                      let _17: usize;      // in scope 13 at $DIR/reference_prop.rs:+23:13: +23:14\n+                      debug d => _20;      // in scope 13 at $DIR/reference_prop.rs:+24:13: +24:14\n+                      let _21: usize;      // in scope 13 at $DIR/reference_prop.rs:+25:13: +25:14\n                       scope 14 {\n-                          debug c => _17;  // in scope 14 at $DIR/reference_prop.rs:+23:13: +23:14\n+                          debug c => _21;  // in scope 14 at $DIR/reference_prop.rs:+25:13: +25:14\n                       }\n                   }\n               }\n           }\n       }\n       scope 15 {\n-          let mut _19: usize;              // in scope 15 at $DIR/reference_prop.rs:+28:13: +28:18\n+          let mut _25: usize;              // in scope 15 at $DIR/reference_prop.rs:+31:13: +31:18\n           scope 16 {\n-              debug a => _19;              // in scope 16 at $DIR/reference_prop.rs:+28:13: +28:18\n-              let mut _20: *mut usize;     // in scope 16 at $DIR/reference_prop.rs:+29:13: +29:18\n+              debug a => _25;              // in scope 16 at $DIR/reference_prop.rs:+31:13: +31:18\n+              let mut _26: *mut usize;     // in scope 16 at $DIR/reference_prop.rs:+32:13: +32:18\n               scope 17 {\n-                  debug b => _20;          // in scope 17 at $DIR/reference_prop.rs:+29:13: +29:18\n-                  let _21: &mut *mut usize; // in scope 17 at $DIR/reference_prop.rs:+30:13: +30:14\n+                  debug b => _26;          // in scope 17 at $DIR/reference_prop.rs:+32:13: +32:18\n+                  let _27: &mut *mut usize; // in scope 17 at $DIR/reference_prop.rs:+33:13: +33:14\n                   scope 18 {\n-                      debug d => _21;      // in scope 18 at $DIR/reference_prop.rs:+30:13: +30:14\n-                      let _22: usize;      // in scope 18 at $DIR/reference_prop.rs:+31:13: +31:14\n+                      debug d => _27;      // in scope 18 at $DIR/reference_prop.rs:+33:13: +33:14\n+                      let _28: usize;      // in scope 18 at $DIR/reference_prop.rs:+34:13: +34:14\n                       scope 19 {\n-                          debug c => _22;  // in scope 19 at $DIR/reference_prop.rs:+31:13: +31:14\n+                          debug c => _28;  // in scope 19 at $DIR/reference_prop.rs:+34:13: +34:14\n                       }\n                   }\n               }\n           }\n       }\n       scope 20 {\n-          let mut _24: usize;              // in scope 20 at $DIR/reference_prop.rs:+36:13: +36:18\n+          let mut _32: usize;              // in scope 20 at $DIR/reference_prop.rs:+40:13: +40:18\n           scope 21 {\n-              debug a => _24;              // in scope 21 at $DIR/reference_prop.rs:+36:13: +36:18\n-              let _25: *mut usize;         // in scope 21 at $DIR/reference_prop.rs:+37:13: +37:14\n+              debug a => _32;              // in scope 21 at $DIR/reference_prop.rs:+40:13: +40:18\n+              let _33: *mut usize;         // in scope 21 at $DIR/reference_prop.rs:+41:13: +41:14\n               scope 22 {\n-                  debug b => _25;          // in scope 22 at $DIR/reference_prop.rs:+37:13: +37:14\n-                  let _26: usize;          // in scope 22 at $DIR/reference_prop.rs:+38:13: +38:14\n+                  debug b => _33;          // in scope 22 at $DIR/reference_prop.rs:+41:13: +41:14\n+                  let _34: usize;          // in scope 22 at $DIR/reference_prop.rs:+42:13: +42:14\n                   scope 23 {\n-                      debug c => _26;      // in scope 23 at $DIR/reference_prop.rs:+38:13: +38:14\n+                      debug c => _34;      // in scope 23 at $DIR/reference_prop.rs:+42:13: +42:14\n                   }\n               }\n           }\n       }\n       scope 24 {\n-          let mut _30: usize;              // in scope 24 at $DIR/reference_prop.rs:+44:13: +44:18\n+          let mut _38: usize;              // in scope 24 at $DIR/reference_prop.rs:+48:13: +48:18\n           scope 25 {\n-              debug a => _30;              // in scope 25 at $DIR/reference_prop.rs:+44:13: +44:18\n-              let _31: *mut usize;         // in scope 25 at $DIR/reference_prop.rs:+45:13: +45:15\n+              debug a => _38;              // in scope 25 at $DIR/reference_prop.rs:+48:13: +48:18\n+              let _39: *mut usize;         // in scope 25 at $DIR/reference_prop.rs:+49:13: +49:15\n               scope 26 {\n-                  debug b1 => _31;         // in scope 26 at $DIR/reference_prop.rs:+45:13: +45:15\n-                  let _32: usize;          // in scope 26 at $DIR/reference_prop.rs:+46:13: +46:14\n+                  debug b1 => _39;         // in scope 26 at $DIR/reference_prop.rs:+49:13: +49:15\n+                  let _40: usize;          // in scope 26 at $DIR/reference_prop.rs:+50:13: +50:14\n                   scope 27 {\n-                      debug c => _32;      // in scope 27 at $DIR/reference_prop.rs:+46:13: +46:14\n-                      let _33: *mut usize; // in scope 27 at $DIR/reference_prop.rs:+47:13: +47:15\n+                      debug c => _40;      // in scope 27 at $DIR/reference_prop.rs:+50:13: +50:14\n+                      let _41: *mut usize; // in scope 27 at $DIR/reference_prop.rs:+51:13: +51:15\n                       scope 28 {\n-                          debug b2 => _33; // in scope 28 at $DIR/reference_prop.rs:+47:13: +47:15\n-                          let _34: usize;  // in scope 28 at $DIR/reference_prop.rs:+48:13: +48:15\n+                          debug b2 => _41; // in scope 28 at $DIR/reference_prop.rs:+51:13: +51:15\n+                          let _42: usize;  // in scope 28 at $DIR/reference_prop.rs:+52:13: +52:15\n                           scope 29 {\n-                              debug c2 => _34; // in scope 29 at $DIR/reference_prop.rs:+48:13: +48:15\n-                              let _35: *mut usize; // in scope 29 at $DIR/reference_prop.rs:+49:13: +49:15\n+                              debug c2 => _42; // in scope 29 at $DIR/reference_prop.rs:+52:13: +52:15\n+                              let _43: *mut usize; // in scope 29 at $DIR/reference_prop.rs:+53:13: +53:15\n                               scope 30 {\n-                                  debug b3 => _35; // in scope 30 at $DIR/reference_prop.rs:+49:13: +49:15\n+                                  debug b3 => _43; // in scope 30 at $DIR/reference_prop.rs:+53:13: +53:15\n                               }\n                           }\n                       }\n@@ -127,168 +139,240 @@\n           }\n       }\n       scope 31 {\n-          let _39: *mut T;                 // in scope 31 at $DIR/reference_prop.rs:+57:13: +57:14\n+          let _47: *mut T;                 // in scope 31 at $DIR/reference_prop.rs:+61:13: +61:14\n           scope 32 {\n-              debug a => _39;              // in scope 32 at $DIR/reference_prop.rs:+57:13: +57:14\n-              let _40: T;                  // in scope 32 at $DIR/reference_prop.rs:+58:13: +58:14\n+              debug a => _47;              // in scope 32 at $DIR/reference_prop.rs:+61:13: +61:14\n+              let _48: T;                  // in scope 32 at $DIR/reference_prop.rs:+62:13: +62:14\n               scope 33 {\n-                  debug b => _40;          // in scope 33 at $DIR/reference_prop.rs:+58:13: +58:14\n+                  debug b => _48;          // in scope 33 at $DIR/reference_prop.rs:+62:13: +62:14\n               }\n           }\n       }\n       scope 34 {\n-          let _41: *mut T;                 // in scope 34 at $DIR/reference_prop.rs:+63:13: +63:14\n+          let _51: *mut T;                 // in scope 34 at $DIR/reference_prop.rs:+68:13: +68:14\n           scope 35 {\n-              debug a => _41;              // in scope 35 at $DIR/reference_prop.rs:+63:13: +63:14\n-              let _43: T;                  // in scope 35 at $DIR/reference_prop.rs:+65:13: +65:14\n+              debug a => _51;              // in scope 35 at $DIR/reference_prop.rs:+68:13: +68:14\n+              let _53: T;                  // in scope 35 at $DIR/reference_prop.rs:+70:13: +70:14\n               scope 36 {\n-                  debug b => _43;          // in scope 36 at $DIR/reference_prop.rs:+65:13: +65:14\n+                  debug b => _53;          // in scope 36 at $DIR/reference_prop.rs:+70:13: +70:14\n               }\n           }\n       }\n   \n       bb0: {\n--         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +6:6\n+-         StorageLive(_3);                 // scope 0 at $DIR/reference_prop.rs:+2:5: +7:6\n           StorageLive(_4);                 // scope 1 at $DIR/reference_prop.rs:+3:13: +3:18\n           _4 = const 5_usize;              // scope 1 at $DIR/reference_prop.rs:+3:21: +3:28\n           StorageLive(_5);                 // scope 2 at $DIR/reference_prop.rs:+4:13: +4:14\n           _5 = &raw mut _4;                // scope 2 at $DIR/reference_prop.rs:+4:17: +4:27\n           StorageLive(_6);                 // scope 3 at $DIR/reference_prop.rs:+5:13: +5:14\n -         _6 = (*_5);                      // scope 3 at $DIR/reference_prop.rs:+5:17: +5:19\n--         _3 = const ();                   // scope 1 at $DIR/reference_prop.rs:+2:5: +6:6\n +         _6 = _4;                         // scope 3 at $DIR/reference_prop.rs:+5:17: +5:19\n-          StorageDead(_6);                 // scope 3 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_5);                 // scope 2 at $DIR/reference_prop.rs:+6:5: +6:6\n-          StorageDead(_4);                 // scope 1 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+6:5: +6:6\n--         StorageLive(_7);                 // scope 0 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageLive(_8);                 // scope 5 at $DIR/reference_prop.rs:+10:13: +10:18\n-          _8 = const 5_usize;              // scope 5 at $DIR/reference_prop.rs:+10:21: +10:28\n-          StorageLive(_9);                 // scope 6 at $DIR/reference_prop.rs:+11:13: +11:19\n-          _9 = const 7_usize;              // scope 6 at $DIR/reference_prop.rs:+11:22: +11:29\n-          StorageLive(_10);                // scope 7 at $DIR/reference_prop.rs:+12:13: +12:18\n-          _10 = &raw mut _8;               // scope 7 at $DIR/reference_prop.rs:+12:21: +12:31\n-          StorageLive(_11);                // scope 8 at $DIR/reference_prop.rs:+13:13: +13:24\n-          _11 = &raw mut _9;               // scope 8 at $DIR/reference_prop.rs:+13:13: +13:24\n-          _10 = move _11;                  // scope 8 at $DIR/reference_prop.rs:+13:9: +13:24\n-          StorageDead(_11);                // scope 8 at $DIR/reference_prop.rs:+13:23: +13:24\n-          StorageLive(_12);                // scope 8 at $DIR/reference_prop.rs:+15:13: +15:14\n-          _12 = (*_10);                    // scope 8 at $DIR/reference_prop.rs:+15:17: +15:19\n--         _7 = const ();                   // scope 5 at $DIR/reference_prop.rs:+9:5: +16:6\n-          StorageDead(_12);                // scope 8 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_10);                // scope 7 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_9);                 // scope 6 at $DIR/reference_prop.rs:+16:5: +16:6\n-          StorageDead(_8);                 // scope 5 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageDead(_7);                 // scope 0 at $DIR/reference_prop.rs:+16:5: +16:6\n--         StorageLive(_13);                // scope 0 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageLive(_14);                // scope 10 at $DIR/reference_prop.rs:+20:13: +20:18\n-          _14 = const 5_usize;             // scope 10 at $DIR/reference_prop.rs:+20:21: +20:28\n-          StorageLive(_15);                // scope 11 at $DIR/reference_prop.rs:+21:13: +21:14\n-          _15 = &raw mut _14;              // scope 11 at $DIR/reference_prop.rs:+21:17: +21:27\n-          StorageLive(_16);                // scope 12 at $DIR/reference_prop.rs:+22:13: +22:14\n-          _16 = &_15;                      // scope 12 at $DIR/reference_prop.rs:+22:17: +22:19\n-          StorageLive(_17);                // scope 13 at $DIR/reference_prop.rs:+23:13: +23:14\n-          _17 = (*_15);                    // scope 13 at $DIR/reference_prop.rs:+23:17: +23:19\n--         _13 = const ();                  // scope 10 at $DIR/reference_prop.rs:+19:5: +24:6\n-          StorageDead(_17);                // scope 13 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_16);                // scope 12 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_15);                // scope 11 at $DIR/reference_prop.rs:+24:5: +24:6\n-          StorageDead(_14);                // scope 10 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageDead(_13);                // scope 0 at $DIR/reference_prop.rs:+24:5: +24:6\n--         StorageLive(_18);                // scope 0 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageLive(_19);                // scope 15 at $DIR/reference_prop.rs:+28:13: +28:18\n-          _19 = const 5_usize;             // scope 15 at $DIR/reference_prop.rs:+28:21: +28:28\n-          StorageLive(_20);                // scope 16 at $DIR/reference_prop.rs:+29:13: +29:18\n-          _20 = &raw mut _19;              // scope 16 at $DIR/reference_prop.rs:+29:21: +29:31\n-          StorageLive(_21);                // scope 17 at $DIR/reference_prop.rs:+30:13: +30:14\n-          _21 = &mut _20;                  // scope 17 at $DIR/reference_prop.rs:+30:17: +30:23\n-          StorageLive(_22);                // scope 18 at $DIR/reference_prop.rs:+31:13: +31:14\n-          _22 = (*_20);                    // scope 18 at $DIR/reference_prop.rs:+31:17: +31:19\n--         _18 = const ();                  // scope 15 at $DIR/reference_prop.rs:+27:5: +32:6\n-          StorageDead(_22);                // scope 18 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_21);                // scope 17 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_20);                // scope 16 at $DIR/reference_prop.rs:+32:5: +32:6\n-          StorageDead(_19);                // scope 15 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageDead(_18);                // scope 0 at $DIR/reference_prop.rs:+32:5: +32:6\n--         StorageLive(_23);                // scope 0 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageLive(_24);                // scope 20 at $DIR/reference_prop.rs:+36:13: +36:18\n-          _24 = const 7_usize;             // scope 20 at $DIR/reference_prop.rs:+36:21: +36:28\n-          StorageLive(_25);                // scope 21 at $DIR/reference_prop.rs:+37:13: +37:14\n-          _25 = &raw mut _24;              // scope 21 at $DIR/reference_prop.rs:+37:17: +37:27\n-          StorageLive(_26);                // scope 22 at $DIR/reference_prop.rs:+38:13: +38:14\n-          _26 = (*_25);                    // scope 22 at $DIR/reference_prop.rs:+38:17: +38:19\n-          StorageLive(_27);                // scope 23 at $DIR/reference_prop.rs:+39:9: +39:18\n-          StorageLive(_28);                // scope 23 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _28 = _25;                       // scope 23 at $DIR/reference_prop.rs:+39:16: +39:17\n-          _27 = opaque::<*mut usize>(move _28) -> bb1; // scope 23 at $DIR/reference_prop.rs:+39:9: +39:18\n+          StorageLive(_7);                 // scope 4 at $DIR/reference_prop.rs:+6:9: +6:19\n+          StorageLive(_8);                 // scope 4 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _8 = ();                         // scope 4 at $DIR/reference_prop.rs:+6:16: +6:18\n+          _7 = opaque::<()>(move _8) -> bb1; // scope 4 at $DIR/reference_prop.rs:+6:9: +6:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:263:9: 263:15\n-                                           // + literal: Const { ty: fn(*mut usize) {opaque::<*mut usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:249:9: 249:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageDead(_28);                // scope 23 at $DIR/reference_prop.rs:+39:17: +39:18\n-          StorageDead(_27);                // scope 23 at $DIR/reference_prop.rs:+39:18: +39:19\n--         _23 = const ();                  // scope 20 at $DIR/reference_prop.rs:+35:5: +40:6\n-          StorageDead(_26);                // scope 22 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_25);                // scope 21 at $DIR/reference_prop.rs:+40:5: +40:6\n-          StorageDead(_24);                // scope 20 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageDead(_23);                // scope 0 at $DIR/reference_prop.rs:+40:5: +40:6\n--         StorageLive(_29);                // scope 0 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageLive(_30);                // scope 24 at $DIR/reference_prop.rs:+44:13: +44:18\n-          _30 = const 7_usize;             // scope 24 at $DIR/reference_prop.rs:+44:21: +44:28\n-          StorageLive(_31);                // scope 25 at $DIR/reference_prop.rs:+45:13: +45:15\n-          _31 = &raw mut _30;              // scope 25 at $DIR/reference_prop.rs:+45:18: +45:28\n-          StorageLive(_32);                // scope 26 at $DIR/reference_prop.rs:+46:13: +46:14\n-          _32 = (*_31);                    // scope 26 at $DIR/reference_prop.rs:+46:17: +46:20\n-          StorageLive(_33);                // scope 27 at $DIR/reference_prop.rs:+47:13: +47:15\n-          _33 = _31;                       // scope 27 at $DIR/reference_prop.rs:+47:18: +47:20\n-          StorageLive(_34);                // scope 28 at $DIR/reference_prop.rs:+48:13: +48:15\n-          _34 = (*_33);                    // scope 28 at $DIR/reference_prop.rs:+48:18: +48:21\n-          StorageLive(_35);                // scope 29 at $DIR/reference_prop.rs:+49:13: +49:15\n-          _35 = _33;                       // scope 29 at $DIR/reference_prop.rs:+49:18: +49:20\n-          StorageLive(_36);                // scope 30 at $DIR/reference_prop.rs:+52:9: +52:19\n-          StorageLive(_37);                // scope 30 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _37 = _35;                       // scope 30 at $DIR/reference_prop.rs:+52:16: +52:18\n-          _36 = opaque::<*mut usize>(move _37) -> bb2; // scope 30 at $DIR/reference_prop.rs:+52:9: +52:19\n+          StorageDead(_8);                 // scope 4 at $DIR/reference_prop.rs:+6:18: +6:19\n+          StorageDead(_7);                 // scope 4 at $DIR/reference_prop.rs:+6:19: +6:20\n+-         _3 = const ();                   // scope 1 at $DIR/reference_prop.rs:+2:5: +7:6\n+          StorageDead(_6);                 // scope 3 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_5);                 // scope 2 at $DIR/reference_prop.rs:+7:5: +7:6\n+          StorageDead(_4);                 // scope 1 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageDead(_3);                 // scope 0 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageLive(_9);                 // scope 0 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageLive(_10);                // scope 5 at $DIR/reference_prop.rs:+11:13: +11:18\n+          _10 = const 5_usize;             // scope 5 at $DIR/reference_prop.rs:+11:21: +11:28\n+          StorageLive(_11);                // scope 6 at $DIR/reference_prop.rs:+12:13: +12:19\n+          _11 = const 7_usize;             // scope 6 at $DIR/reference_prop.rs:+12:22: +12:29\n+          StorageLive(_12);                // scope 7 at $DIR/reference_prop.rs:+13:13: +13:18\n+          _12 = &raw mut _10;              // scope 7 at $DIR/reference_prop.rs:+13:21: +13:31\n+          StorageLive(_13);                // scope 8 at $DIR/reference_prop.rs:+14:13: +14:24\n+          _13 = &raw mut _11;              // scope 8 at $DIR/reference_prop.rs:+14:13: +14:24\n+          _12 = move _13;                  // scope 8 at $DIR/reference_prop.rs:+14:9: +14:24\n+          StorageDead(_13);                // scope 8 at $DIR/reference_prop.rs:+14:23: +14:24\n+          StorageLive(_14);                // scope 8 at $DIR/reference_prop.rs:+16:13: +16:14\n+          _14 = (*_12);                    // scope 8 at $DIR/reference_prop.rs:+16:17: +16:19\n+          StorageLive(_15);                // scope 9 at $DIR/reference_prop.rs:+17:9: +17:19\n+          StorageLive(_16);                // scope 9 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _16 = ();                        // scope 9 at $DIR/reference_prop.rs:+17:16: +17:18\n+          _15 = opaque::<()>(move _16) -> bb2; // scope 9 at $DIR/reference_prop.rs:+17:9: +17:19\n                                            // mir::Constant\n-                                           // + span: $DIR/reference_prop.rs:276:9: 276:15\n-                                           // + literal: Const { ty: fn(*mut usize) {opaque::<*mut usize>}, val: Value(<ZST>) }\n+                                           // + span: $DIR/reference_prop.rs:260:9: 260:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          StorageDead(_37);                // scope 30 at $DIR/reference_prop.rs:+52:18: +52:19\n-          StorageDead(_36);                // scope 30 at $DIR/reference_prop.rs:+52:19: +52:20\n--         _29 = const ();                  // scope 24 at $DIR/reference_prop.rs:+43:5: +53:6\n-          StorageDead(_35);                // scope 29 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_34);                // scope 28 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_33);                // scope 27 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_32);                // scope 26 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_31);                // scope 25 at $DIR/reference_prop.rs:+53:5: +53:6\n-          StorageDead(_30);                // scope 24 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageDead(_29);                // scope 0 at $DIR/reference_prop.rs:+53:5: +53:6\n--         StorageLive(_38);                // scope 0 at $DIR/reference_prop.rs:+56:5: +59:6\n-          StorageLive(_39);                // scope 31 at $DIR/reference_prop.rs:+57:13: +57:14\n-          _39 = &raw mut (*_1);            // scope 31 at $DIR/reference_prop.rs:+57:17: +57:33\n-          StorageLive(_40);                // scope 32 at $DIR/reference_prop.rs:+58:13: +58:14\n--         _40 = (*_39);                    // scope 32 at $DIR/reference_prop.rs:+58:17: +58:19\n--         _38 = const ();                  // scope 31 at $DIR/reference_prop.rs:+56:5: +59:6\n-+         _40 = (*_1);                     // scope 32 at $DIR/reference_prop.rs:+58:17: +58:19\n-          StorageDead(_40);                // scope 32 at $DIR/reference_prop.rs:+59:5: +59:6\n-          StorageDead(_39);                // scope 31 at $DIR/reference_prop.rs:+59:5: +59:6\n--         StorageDead(_38);                // scope 0 at $DIR/reference_prop.rs:+59:5: +59:6\n-          StorageLive(_41);                // scope 34 at $DIR/reference_prop.rs:+63:13: +63:14\n-          _41 = &raw mut (*_2);            // scope 34 at $DIR/reference_prop.rs:+63:17: +63:35\n-          StorageLive(_42);                // scope 35 at $DIR/reference_prop.rs:+64:20: +64:36\n-          _42 = &raw mut (*_1);            // scope 35 at $DIR/reference_prop.rs:+64:20: +64:36\n-          _2 = move _42;                   // scope 35 at $DIR/reference_prop.rs:+64:9: +64:36\n-          StorageDead(_42);                // scope 35 at $DIR/reference_prop.rs:+64:35: +64:36\n-          StorageLive(_43);                // scope 35 at $DIR/reference_prop.rs:+65:13: +65:14\n-          _43 = (*_41);                    // scope 35 at $DIR/reference_prop.rs:+65:17: +65:19\n-          _0 = const ();                   // scope 34 at $DIR/reference_prop.rs:+62:5: +66:6\n-          StorageDead(_43);                // scope 35 at $DIR/reference_prop.rs:+66:5: +66:6\n-          StorageDead(_41);                // scope 34 at $DIR/reference_prop.rs:+66:5: +66:6\n-          return;                          // scope 0 at $DIR/reference_prop.rs:+67:2: +67:2\n+          StorageDead(_16);                // scope 9 at $DIR/reference_prop.rs:+17:18: +17:19\n+          StorageDead(_15);                // scope 9 at $DIR/reference_prop.rs:+17:19: +17:20\n+-         _9 = const ();                   // scope 5 at $DIR/reference_prop.rs:+10:5: +18:6\n+          StorageDead(_14);                // scope 8 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_12);                // scope 7 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_11);                // scope 6 at $DIR/reference_prop.rs:+18:5: +18:6\n+          StorageDead(_10);                // scope 5 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageDead(_9);                 // scope 0 at $DIR/reference_prop.rs:+18:5: +18:6\n+-         StorageLive(_17);                // scope 0 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageLive(_18);                // scope 10 at $DIR/reference_prop.rs:+22:13: +22:18\n+          _18 = const 5_usize;             // scope 10 at $DIR/reference_prop.rs:+22:21: +22:28\n+          StorageLive(_19);                // scope 11 at $DIR/reference_prop.rs:+23:13: +23:14\n+          _19 = &raw mut _18;              // scope 11 at $DIR/reference_prop.rs:+23:17: +23:27\n+          StorageLive(_20);                // scope 12 at $DIR/reference_prop.rs:+24:13: +24:14\n+          _20 = &_19;                      // scope 12 at $DIR/reference_prop.rs:+24:17: +24:19\n+          StorageLive(_21);                // scope 13 at $DIR/reference_prop.rs:+25:13: +25:14\n+          _21 = (*_19);                    // scope 13 at $DIR/reference_prop.rs:+25:17: +25:19\n+          StorageLive(_22);                // scope 14 at $DIR/reference_prop.rs:+26:9: +26:19\n+          StorageLive(_23);                // scope 14 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _23 = ();                        // scope 14 at $DIR/reference_prop.rs:+26:16: +26:18\n+          _22 = opaque::<()>(move _23) -> bb3; // scope 14 at $DIR/reference_prop.rs:+26:9: +26:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:269:9: 269:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb3: {\n+          StorageDead(_23);                // scope 14 at $DIR/reference_prop.rs:+26:18: +26:19\n+          StorageDead(_22);                // scope 14 at $DIR/reference_prop.rs:+26:19: +26:20\n+-         _17 = const ();                  // scope 10 at $DIR/reference_prop.rs:+21:5: +27:6\n+          StorageDead(_21);                // scope 13 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_20);                // scope 12 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_19);                // scope 11 at $DIR/reference_prop.rs:+27:5: +27:6\n+          StorageDead(_18);                // scope 10 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageDead(_17);                // scope 0 at $DIR/reference_prop.rs:+27:5: +27:6\n+-         StorageLive(_24);                // scope 0 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageLive(_25);                // scope 15 at $DIR/reference_prop.rs:+31:13: +31:18\n+          _25 = const 5_usize;             // scope 15 at $DIR/reference_prop.rs:+31:21: +31:28\n+          StorageLive(_26);                // scope 16 at $DIR/reference_prop.rs:+32:13: +32:18\n+          _26 = &raw mut _25;              // scope 16 at $DIR/reference_prop.rs:+32:21: +32:31\n+          StorageLive(_27);                // scope 17 at $DIR/reference_prop.rs:+33:13: +33:14\n+          _27 = &mut _26;                  // scope 17 at $DIR/reference_prop.rs:+33:17: +33:23\n+          StorageLive(_28);                // scope 18 at $DIR/reference_prop.rs:+34:13: +34:14\n+          _28 = (*_26);                    // scope 18 at $DIR/reference_prop.rs:+34:17: +34:19\n+          StorageLive(_29);                // scope 19 at $DIR/reference_prop.rs:+35:9: +35:19\n+          StorageLive(_30);                // scope 19 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _30 = ();                        // scope 19 at $DIR/reference_prop.rs:+35:16: +35:18\n+          _29 = opaque::<()>(move _30) -> bb4; // scope 19 at $DIR/reference_prop.rs:+35:9: +35:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:278:9: 278:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb4: {\n+          StorageDead(_30);                // scope 19 at $DIR/reference_prop.rs:+35:18: +35:19\n+          StorageDead(_29);                // scope 19 at $DIR/reference_prop.rs:+35:19: +35:20\n+-         _24 = const ();                  // scope 15 at $DIR/reference_prop.rs:+30:5: +36:6\n+          StorageDead(_28);                // scope 18 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_27);                // scope 17 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_26);                // scope 16 at $DIR/reference_prop.rs:+36:5: +36:6\n+          StorageDead(_25);                // scope 15 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageDead(_24);                // scope 0 at $DIR/reference_prop.rs:+36:5: +36:6\n+-         StorageLive(_31);                // scope 0 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageLive(_32);                // scope 20 at $DIR/reference_prop.rs:+40:13: +40:18\n+          _32 = const 7_usize;             // scope 20 at $DIR/reference_prop.rs:+40:21: +40:28\n+          StorageLive(_33);                // scope 21 at $DIR/reference_prop.rs:+41:13: +41:14\n+          _33 = &raw mut _32;              // scope 21 at $DIR/reference_prop.rs:+41:17: +41:27\n+          StorageLive(_34);                // scope 22 at $DIR/reference_prop.rs:+42:13: +42:14\n+          _34 = (*_33);                    // scope 22 at $DIR/reference_prop.rs:+42:17: +42:19\n+          StorageLive(_35);                // scope 23 at $DIR/reference_prop.rs:+43:9: +43:18\n+          StorageLive(_36);                // scope 23 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _36 = _33;                       // scope 23 at $DIR/reference_prop.rs:+43:16: +43:17\n+          _35 = opaque::<*mut usize>(move _36) -> bb5; // scope 23 at $DIR/reference_prop.rs:+43:9: +43:18\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:286:9: 286:15\n+                                           // + literal: Const { ty: fn(*mut usize) {opaque::<*mut usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb5: {\n+          StorageDead(_36);                // scope 23 at $DIR/reference_prop.rs:+43:17: +43:18\n+          StorageDead(_35);                // scope 23 at $DIR/reference_prop.rs:+43:18: +43:19\n+-         _31 = const ();                  // scope 20 at $DIR/reference_prop.rs:+39:5: +44:6\n+          StorageDead(_34);                // scope 22 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_33);                // scope 21 at $DIR/reference_prop.rs:+44:5: +44:6\n+          StorageDead(_32);                // scope 20 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageDead(_31);                // scope 0 at $DIR/reference_prop.rs:+44:5: +44:6\n+-         StorageLive(_37);                // scope 0 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageLive(_38);                // scope 24 at $DIR/reference_prop.rs:+48:13: +48:18\n+          _38 = const 7_usize;             // scope 24 at $DIR/reference_prop.rs:+48:21: +48:28\n+          StorageLive(_39);                // scope 25 at $DIR/reference_prop.rs:+49:13: +49:15\n+          _39 = &raw mut _38;              // scope 25 at $DIR/reference_prop.rs:+49:18: +49:28\n+          StorageLive(_40);                // scope 26 at $DIR/reference_prop.rs:+50:13: +50:14\n+          _40 = (*_39);                    // scope 26 at $DIR/reference_prop.rs:+50:17: +50:20\n+          StorageLive(_41);                // scope 27 at $DIR/reference_prop.rs:+51:13: +51:15\n+          _41 = _39;                       // scope 27 at $DIR/reference_prop.rs:+51:18: +51:20\n+          StorageLive(_42);                // scope 28 at $DIR/reference_prop.rs:+52:13: +52:15\n+          _42 = (*_41);                    // scope 28 at $DIR/reference_prop.rs:+52:18: +52:21\n+          StorageLive(_43);                // scope 29 at $DIR/reference_prop.rs:+53:13: +53:15\n+          _43 = _41;                       // scope 29 at $DIR/reference_prop.rs:+53:18: +53:20\n+          StorageLive(_44);                // scope 30 at $DIR/reference_prop.rs:+56:9: +56:19\n+          StorageLive(_45);                // scope 30 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _45 = _43;                       // scope 30 at $DIR/reference_prop.rs:+56:16: +56:18\n+          _44 = opaque::<*mut usize>(move _45) -> bb6; // scope 30 at $DIR/reference_prop.rs:+56:9: +56:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:299:9: 299:15\n+                                           // + literal: Const { ty: fn(*mut usize) {opaque::<*mut usize>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb6: {\n+          StorageDead(_45);                // scope 30 at $DIR/reference_prop.rs:+56:18: +56:19\n+          StorageDead(_44);                // scope 30 at $DIR/reference_prop.rs:+56:19: +56:20\n+-         _37 = const ();                  // scope 24 at $DIR/reference_prop.rs:+47:5: +57:6\n+          StorageDead(_43);                // scope 29 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_42);                // scope 28 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_41);                // scope 27 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_40);                // scope 26 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_39);                // scope 25 at $DIR/reference_prop.rs:+57:5: +57:6\n+          StorageDead(_38);                // scope 24 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageDead(_37);                // scope 0 at $DIR/reference_prop.rs:+57:5: +57:6\n+-         StorageLive(_46);                // scope 0 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageLive(_47);                // scope 31 at $DIR/reference_prop.rs:+61:13: +61:14\n+          _47 = &raw mut (*_1);            // scope 31 at $DIR/reference_prop.rs:+61:17: +61:33\n+          StorageLive(_48);                // scope 32 at $DIR/reference_prop.rs:+62:13: +62:14\n+-         _48 = (*_47);                    // scope 32 at $DIR/reference_prop.rs:+62:17: +62:19\n++         _48 = (*_1);                     // scope 32 at $DIR/reference_prop.rs:+62:17: +62:19\n+          StorageLive(_49);                // scope 33 at $DIR/reference_prop.rs:+63:9: +63:19\n+          StorageLive(_50);                // scope 33 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _50 = ();                        // scope 33 at $DIR/reference_prop.rs:+63:16: +63:18\n+          _49 = opaque::<()>(move _50) -> bb7; // scope 33 at $DIR/reference_prop.rs:+63:9: +63:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:306:9: 306:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb7: {\n+          StorageDead(_50);                // scope 33 at $DIR/reference_prop.rs:+63:18: +63:19\n+          StorageDead(_49);                // scope 33 at $DIR/reference_prop.rs:+63:19: +63:20\n+-         _46 = const ();                  // scope 31 at $DIR/reference_prop.rs:+60:5: +64:6\n+          StorageDead(_48);                // scope 32 at $DIR/reference_prop.rs:+64:5: +64:6\n+          StorageDead(_47);                // scope 31 at $DIR/reference_prop.rs:+64:5: +64:6\n+-         StorageDead(_46);                // scope 0 at $DIR/reference_prop.rs:+64:5: +64:6\n+          StorageLive(_51);                // scope 34 at $DIR/reference_prop.rs:+68:13: +68:14\n+          _51 = &raw mut (*_2);            // scope 34 at $DIR/reference_prop.rs:+68:17: +68:35\n+          StorageLive(_52);                // scope 35 at $DIR/reference_prop.rs:+69:20: +69:36\n+          _52 = &raw mut (*_1);            // scope 35 at $DIR/reference_prop.rs:+69:20: +69:36\n+          _2 = move _52;                   // scope 35 at $DIR/reference_prop.rs:+69:9: +69:36\n+          StorageDead(_52);                // scope 35 at $DIR/reference_prop.rs:+69:35: +69:36\n+          StorageLive(_53);                // scope 35 at $DIR/reference_prop.rs:+70:13: +70:14\n+          _53 = (*_51);                    // scope 35 at $DIR/reference_prop.rs:+70:17: +70:19\n+          StorageLive(_54);                // scope 36 at $DIR/reference_prop.rs:+71:9: +71:19\n+          StorageLive(_55);                // scope 36 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _55 = ();                        // scope 36 at $DIR/reference_prop.rs:+71:16: +71:18\n+          _54 = opaque::<()>(move _55) -> bb8; // scope 36 at $DIR/reference_prop.rs:+71:9: +71:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/reference_prop.rs:314:9: 314:15\n+                                           // + literal: Const { ty: fn(()) {opaque::<()>}, val: Value(<ZST>) }\n+      }\n+  \n+      bb8: {\n+          StorageDead(_55);                // scope 36 at $DIR/reference_prop.rs:+71:18: +71:19\n+          StorageDead(_54);                // scope 36 at $DIR/reference_prop.rs:+71:19: +71:20\n+          _0 = const ();                   // scope 34 at $DIR/reference_prop.rs:+67:5: +72:6\n+          StorageDead(_53);                // scope 35 at $DIR/reference_prop.rs:+72:5: +72:6\n+          StorageDead(_51);                // scope 34 at $DIR/reference_prop.rs:+72:5: +72:6\n+          return;                          // scope 0 at $DIR/reference_prop.rs:+73:2: +73:2\n       }\n   }\n   "}, {"sha": "e75f376bb398ff671f4ad3ebdf70cf939c3541b0", "filename": "tests/mir-opt/reference_prop.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e5910fdf26cf0db4c0002954c10500c6fcac41b/tests%2Fmir-opt%2Freference_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.rs?ref=8e5910fdf26cf0db4c0002954c10500c6fcac41b", "patch": "@@ -12,6 +12,7 @@ fn reference_propagation<'a, T: Copy>(single: &'a T, mut multiple: &'a T) {\n         let a = 5_usize;\n         let b = &a; // This borrow is only used once.\n         let c = *b; // This should be optimized.\n+        opaque(()); // We use opaque to separate cases into basic blocks in the MIR.\n     }\n \n     // Propagation through a two references.\n@@ -22,14 +23,16 @@ fn reference_propagation<'a, T: Copy>(single: &'a T, mut multiple: &'a T) {\n         b = &a2;\n         // `b` is assigned twice, so we cannot propagate it.\n         let c = *b;\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n     {\n         let a = 5_usize;\n         let b = &a;\n         let d = &b;\n-        let c = *b; // `b` is immutably borrowed, we know its value, but cannot be removed.\n+        let c = *b; // `b` is immutably borrowed, we know its value, but do not propagate it\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n@@ -38,14 +41,15 @@ fn reference_propagation<'a, T: Copy>(single: &'a T, mut multiple: &'a T) {\n         let mut b = &a;\n         let d = &mut b;\n         let c = *b; // `b` is mutably borrowed, we cannot know its value.\n+        opaque(());\n     }\n \n     // Propagation through an escaping borrow.\n     {\n         let a = 7_usize;\n         let b = &a;\n         let c = *b;\n-        opaque(b); // `b` escapes here, so we can only replace immutable borrow\n+        opaque(b); // `b` escapes here, but we can still replace immutable borrow\n     }\n \n     // Propagation through a transitively escaping borrow.\n@@ -65,13 +69,15 @@ fn reference_propagation<'a, T: Copy>(single: &'a T, mut multiple: &'a T) {\n     {\n         let a = &*single;\n         let b = *a; // This should be optimized as `*single`.\n+        opaque(());\n     }\n \n     // Propagation a reborrow of a mutated argument.\n     {\n         let a = &*multiple;\n         multiple = &*single;\n         let b = *a; // This should not be optimized.\n+        opaque(());\n     }\n }\n \n@@ -81,6 +87,7 @@ fn reference_propagation_mut<'a, T: Copy>(single: &'a mut T, mut multiple: &'a m\n         let mut a = 5_usize;\n         let b = &mut a; // This borrow is only used once.\n         let c = *b; // This should be optimized.\n+        opaque(());\n     }\n \n     // Propagation through a two references.\n@@ -91,6 +98,7 @@ fn reference_propagation_mut<'a, T: Copy>(single: &'a mut T, mut multiple: &'a m\n         b = &mut a2;\n         // `b` is assigned twice, so we cannot propagate it.\n         let c = *b;\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n@@ -99,6 +107,7 @@ fn reference_propagation_mut<'a, T: Copy>(single: &'a mut T, mut multiple: &'a m\n         let b = &mut a;\n         let d = &b;\n         let c = *b; // `b` is immutably borrowed, we know its value, but cannot be removed.\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n@@ -107,6 +116,7 @@ fn reference_propagation_mut<'a, T: Copy>(single: &'a mut T, mut multiple: &'a m\n         let mut b = &mut a;\n         let d = &mut b;\n         let c = *b; // `b` is mutably borrowed, we cannot know its value.\n+        opaque(());\n     }\n \n     // Propagation through an escaping borrow.\n@@ -134,13 +144,15 @@ fn reference_propagation_mut<'a, T: Copy>(single: &'a mut T, mut multiple: &'a m\n     {\n         let a = &mut *single;\n         let b = *a; // This should be optimized as `*single`.\n+        opaque(());\n     }\n \n     // Propagation a reborrow of a mutated argument.\n     {\n         let a = &mut *multiple;\n         multiple = &mut *single;\n         let b = *a; // This should not be optimized.\n+        opaque(());\n     }\n }\n \n@@ -150,6 +162,7 @@ fn reference_propagation_const_ptr<T: Copy>(single: *const T, mut multiple: *con\n         let a = 5_usize;\n         let b = &raw const a; // This borrow is only used once.\n         let c = *b; // This should be optimized.\n+        opaque(());\n     }\n \n     // Propagation through a two references.\n@@ -160,6 +173,7 @@ fn reference_propagation_const_ptr<T: Copy>(single: *const T, mut multiple: *con\n         b = &raw const a2;\n         // `b` is assigned twice, so we cannot propagate it.\n         let c = *b;\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n@@ -168,6 +182,7 @@ fn reference_propagation_const_ptr<T: Copy>(single: *const T, mut multiple: *con\n         let b = &raw const a;\n         let d = &b;\n         let c = *b; // `b` is immutably borrowed, we know its value, but cannot be removed.\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n@@ -176,6 +191,7 @@ fn reference_propagation_const_ptr<T: Copy>(single: *const T, mut multiple: *con\n         let mut b = &raw const a;\n         let d = &mut b;\n         let c = *b; // `b` is mutably borrowed, we cannot know its value.\n+        opaque(());\n     }\n \n     // Propagation through an escaping borrow.\n@@ -203,13 +219,15 @@ fn reference_propagation_const_ptr<T: Copy>(single: *const T, mut multiple: *con\n     unsafe {\n         let a = &raw const *single;\n         let b = *a; // This should be optimized as `*single`.\n+        opaque(());\n     }\n \n     // Propagation a reborrow of a mutated argument.\n     unsafe {\n         let a = &raw const *multiple;\n         multiple = &raw const *single;\n         let b = *a; // This should not be optimized.\n+        opaque(());\n     }\n \n     // Propagation through a reborrow.\n@@ -218,6 +236,7 @@ fn reference_propagation_const_ptr<T: Copy>(single: *const T, mut multiple: *con\n         let b = &raw const a;\n         let c = &raw const *b;\n         let e = *c;\n+        opaque(());\n     }\n }\n \n@@ -227,6 +246,7 @@ fn reference_propagation_mut_ptr<T: Copy>(single: *mut T, mut multiple: *mut T)\n         let mut a = 5_usize;\n         let b = &raw mut a; // This borrow is only used once.\n         let c = *b; // This should be optimized.\n+        opaque(());\n     }\n \n     // Propagation through a two references.\n@@ -237,6 +257,7 @@ fn reference_propagation_mut_ptr<T: Copy>(single: *mut T, mut multiple: *mut T)\n         b = &raw mut a2;\n         // `b` is assigned twice, so we cannot propagate it.\n         let c = *b;\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n@@ -245,6 +266,7 @@ fn reference_propagation_mut_ptr<T: Copy>(single: *mut T, mut multiple: *mut T)\n         let b = &raw mut a;\n         let d = &b;\n         let c = *b; // `b` is immutably borrowed, we know its value, but cannot be removed.\n+        opaque(());\n     }\n \n     // Propagation through a borrowed reference.\n@@ -253,6 +275,7 @@ fn reference_propagation_mut_ptr<T: Copy>(single: *mut T, mut multiple: *mut T)\n         let mut b = &raw mut a;\n         let d = &mut b;\n         let c = *b; // `b` is mutably borrowed, we cannot know its value.\n+        opaque(());\n     }\n \n     // Propagation through an escaping borrow.\n@@ -280,13 +303,15 @@ fn reference_propagation_mut_ptr<T: Copy>(single: *mut T, mut multiple: *mut T)\n     unsafe {\n         let a = &raw mut *single;\n         let b = *a; // This should be optimized as `*single`.\n+        opaque(());\n     }\n \n     // Propagation a reborrow of a mutated argument.\n     unsafe {\n         let a = &raw mut *multiple;\n         multiple = &raw mut *single;\n         let b = *a; // This should not be optimized.\n+        opaque(());\n     }\n }\n \n@@ -381,12 +406,14 @@ fn maybe_dead(m: bool) {\n             let b = &mut y;\n             // As we don't replace `b` in `bb2`, we cannot replace it here either.\n             *b = 7;\n+            // But this can still be replaced.\n+            let u = *a;\n             match m { true => bb1, _ => bb2 }\n         }\n         bb1 = {\n             StorageDead(x);\n             StorageDead(y);\n-            Goto(bb2)\n+            Call(RET, bb2, opaque(u))\n         }\n         bb2 = {\n             // As `x` may be `StorageDead`, `a` may be dangling, so we do nothing."}]}