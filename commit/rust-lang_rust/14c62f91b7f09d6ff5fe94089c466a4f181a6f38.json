{"sha": "14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YzYyZjkxYjdmMDlkNmZmNWZlOTQwODljNDY2YTRmMTgxYTZmMzg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-06T05:28:27Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-11T19:40:22Z"}, "message": "Deprecate `Reflect`\n\n[tracking issue](https://github.com/rust-lang/rust/issues/27749)", "tree": {"sha": "955d9955cd273c901b64ea819ad881fb7d76b7a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/955d9955cd273c901b64ea819ad881fb7d76b7a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "html_url": "https://github.com/rust-lang/rust/commit/14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "url": "https://api.github.com/repos/rust-lang/rust/commits/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "html_url": "https://github.com/rust-lang/rust/commit/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "f7edcb998a927328a8c33dadeea5841fc43ac5c8", "filename": "src/libcore/any.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -73,7 +73,6 @@\n \n use fmt;\n use intrinsics;\n-use marker::Reflect;\n \n ///////////////////////////////////////////////////////////////////////////////\n // Any trait\n@@ -86,7 +85,7 @@ use marker::Reflect;\n ///\n /// [mod]: index.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub trait Any: Reflect + 'static {\n+pub trait Any: 'static {\n     /// Gets the `TypeId` of `self`.\n     ///\n     /// # Examples\n@@ -112,7 +111,7 @@ pub trait Any: Reflect + 'static {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Reflect + 'static + ?Sized > Any for T {\n+impl<T: 'static + ?Sized > Any for T {\n     fn get_type_id(&self) -> TypeId { TypeId::of::<T>() }\n }\n \n@@ -366,7 +365,7 @@ impl TypeId {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn of<T: ?Sized + Reflect + 'static>() -> TypeId {\n+    pub fn of<T: ?Sized + 'static>() -> TypeId {\n         TypeId {\n             t: unsafe { intrinsics::type_id::<T>() },\n         }"}, {"sha": "03d8af1563d6de1e639bd7fc4ea73068acb077d9", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -587,11 +587,14 @@ mod impls {\n #[unstable(feature = \"reflect_marker\",\n            reason = \"requires RFC and more experience\",\n            issue = \"27749\")]\n+#[rustc_deprecated(since = \"1.14.0\", reason = \"Specialization makes parametricity impossible\")]\n #[rustc_on_unimplemented = \"`{Self}` does not implement `Any`; \\\n                             ensure all type parameters are bounded by `Any`\"]\n pub trait Reflect {}\n \n #[unstable(feature = \"reflect_marker\",\n            reason = \"requires RFC and more experience\",\n            issue = \"27749\")]\n+#[rustc_deprecated(since = \"1.14.0\", reason = \"Specialization makes parametricity impossible\")]\n+#[allow(deprecated)]\n impl Reflect for .. { }"}, {"sha": "398bb55ea1bf69f65a5f037212d0d3381d069824", "filename": "src/libstd/error.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -55,15 +55,14 @@ use any::TypeId;\n use cell;\n use char;\n use fmt::{self, Debug, Display};\n-use marker::Reflect;\n use mem::transmute;\n use num;\n use str;\n use string;\n \n /// Base functionality for all errors in Rust.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub trait Error: Debug + Display + Reflect {\n+pub trait Error: Debug + Display {\n     /// A short description of the error.\n     ///\n     /// The description should not contain newlines or sentence-ending"}, {"sha": "39b64e723933bed9d196298beafcd2391f4649f6", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -12,7 +12,6 @@\n \n use io::prelude::*;\n \n-use marker::Reflect;\n use cmp;\n use error;\n use fmt;\n@@ -578,7 +577,7 @@ impl<W> From<IntoInnerError<W>> for Error {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<W: Reflect + Send + fmt::Debug> error::Error for IntoInnerError<W> {\n+impl<W: Send + fmt::Debug> error::Error for IntoInnerError<W> {\n     fn description(&self) -> &str {\n         error::Error::description(self.error())\n     }"}, {"sha": "c2f6a6f660c48c4971cd04b809d228a2417cda7f", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -258,7 +258,6 @@\n #![cfg_attr(stage0, feature(question_mark))]\n #![feature(rand)]\n #![feature(raw)]\n-#![feature(reflect_marker)]\n #![feature(repr_simd)]\n #![feature(rustc_attrs)]\n #![feature(shared)]"}, {"sha": "fce640e7c7a2c4e504c64138c596b70c7372d89f", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -270,7 +270,6 @@ use error;\n use fmt;\n use mem;\n use cell::UnsafeCell;\n-use marker::Reflect;\n use time::{Duration, Instant};\n \n #[unstable(feature = \"mpsc_select\", issue = \"27800\")]\n@@ -1163,7 +1162,7 @@ impl<T> fmt::Display for SendError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Send + Reflect> error::Error for SendError<T> {\n+impl<T: Send> error::Error for SendError<T> {\n     fn description(&self) -> &str {\n         \"sending on a closed channel\"\n     }\n@@ -1198,7 +1197,7 @@ impl<T> fmt::Display for TrySendError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Send + Reflect> error::Error for TrySendError<T> {\n+impl<T: Send> error::Error for TrySendError<T> {\n \n     fn description(&self) -> &str {\n         match *self {"}, {"sha": "bdc727f1dfcfe0f20536ce50054f7ec5e6cff3e7", "filename": "src/libstd/sys/common/poison.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -10,7 +10,6 @@\n \n use error::{Error};\n use fmt;\n-use marker::Reflect;\n use sync::atomic::{AtomicBool, Ordering};\n use thread;\n \n@@ -117,7 +116,7 @@ impl<T> fmt::Display for PoisonError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Reflect> Error for PoisonError<T> {\n+impl<T> Error for PoisonError<T> {\n     fn description(&self) -> &str {\n         \"poisoned lock: another task failed inside\"\n     }\n@@ -174,7 +173,7 @@ impl<T> fmt::Display for TryLockError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Reflect> Error for TryLockError<T> {\n+impl<T> Error for TryLockError<T> {\n     fn description(&self) -> &str {\n         match *self {\n             TryLockError::Poisoned(ref p) => p.description(),"}, {"sha": "87747d2851f5e3aa32fe464d516d91ba5b591b35", "filename": "src/test/compile-fail/issue-33876.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Ftest%2Fcompile-fail%2Fissue-33876.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Ftest%2Fcompile-fail%2Fissue-33876.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-33876.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(reflect_marker)]\n-\n-use std::marker::Reflect;\n use std::any::Any;\n \n struct Foo;"}, {"sha": "c0f13b0b6c7ad35f60f562e26496e0dc2a0da010", "filename": "src/test/run-pass/issue-19404.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Ftest%2Frun-pass%2Fissue-19404.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c62f91b7f09d6ff5fe94089c466a4f181a6f38/src%2Ftest%2Frun-pass%2Fissue-19404.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19404.rs?ref=14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "patch": "@@ -8,17 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(reflect_marker)]\n-\n use std::any::TypeId;\n-use std::marker::Reflect;\n use std::rc::Rc;\n \n type Fp<T> = Rc<T>;\n \n struct Engine;\n \n-trait Component: 'static + Reflect {}\n+trait Component: 'static {}\n impl Component for Engine {}\n \n trait Env {"}]}