{"sha": "664838582b6d973620930a2ba75f369f44debecd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NDgzODU4MmI2ZDk3MzYyMDkzMGEyYmE3NWYzNjlmNDRkZWJlY2Q=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-03-19T20:01:14Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-03-19T20:01:14Z"}, "message": "rustc: Update linker flavor inference from filename\n\nThis commit fixes what is believed to be a preexisting bug in the linker\nflavor inference and additionally adds a new features. Previously if the\nlinker didn't end in `exe` the entire file name was compared to infer\nthe linker's flavor. This commit fixes the code to instead\nunconditionally inspect `file_stem()` which is the relevant part we're\nlooking at to figure out what the linker flavor is.\n\nAdditionally this commit now also adds recognition of `clang` and clang\nwrappers that end in `-clang` (which look like gcc wrappers). This\nshould allow clang-specific wrappers to get correctly inferred to the\n`Gcc` linker flavor rather than the default linker flavor configured for\na target.", "tree": {"sha": "b05d8a6703fb905672130d1ac7eb52b6d7183b39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b05d8a6703fb905672130d1ac7eb52b6d7183b39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/664838582b6d973620930a2ba75f369f44debecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/664838582b6d973620930a2ba75f369f44debecd", "html_url": "https://github.com/rust-lang/rust/commit/664838582b6d973620930a2ba75f369f44debecd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/664838582b6d973620930a2ba75f369f44debecd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a4df3b53da369110984a2b57419c05a53e33b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a4df3b53da369110984a2b57419c05a53e33b38", "html_url": "https://github.com/rust-lang/rust/commit/7a4df3b53da369110984a2b57419c05a53e33b38"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "a0e2dcd646df88361d4b4da61ee2c6ec00e2eca3", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/664838582b6d973620930a2ba75f369f44debecd/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664838582b6d973620930a2ba75f369f44debecd/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=664838582b6d973620930a2ba75f369f44debecd", "patch": "@@ -152,17 +152,20 @@ pub fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n                 LinkerFlavor::PtxLinker => \"rust-ptx-linker\",\n             }), flavor)),\n             (Some(linker), None) => {\n-                let stem = if linker.extension().and_then(|ext| ext.to_str()) == Some(\"exe\") {\n-                    linker.file_stem().and_then(|stem| stem.to_str())\n-                } else {\n-                    linker.to_str()\n-                }.unwrap_or_else(|| {\n-                    sess.fatal(\"couldn't extract file stem from specified linker\");\n-                }).to_owned();\n+                let stem = linker\n+                    .file_stem()\n+                    .and_then(|stem| stem.to_str())\n+                    .unwrap_or_else(|| {\n+                        sess.fatal(\"couldn't extract file stem from specified linker\")\n+                    });\n \n                 let flavor = if stem == \"emcc\" {\n                     LinkerFlavor::Em\n-                } else if stem == \"gcc\" || stem.ends_with(\"-gcc\") {\n+                } else if stem == \"gcc\"\n+                    || stem.ends_with(\"-gcc\")\n+                    || stem == \"clang\"\n+                    || stem.ends_with(\"-clang\")\n+                {\n                     LinkerFlavor::Gcc\n                 } else if stem == \"ld\" || stem == \"ld.lld\" || stem.ends_with(\"-ld\") {\n                     LinkerFlavor::Ld"}]}