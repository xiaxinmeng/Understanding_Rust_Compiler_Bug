{"sha": "01f64616adbeb6162a6aecabbdf562810f14e20f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZjY0NjE2YWRiZWI2MTYyYTZhZWNhYmJkZjU2MjgxMGYxNGUyMGY=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-25T16:11:20Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-25T16:11:20Z"}, "message": "Check that the only flag change is done to enable `FD_CLOEXEC`", "tree": {"sha": "e73c839140afb1a08ad6cdc9bcee048decbf947c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e73c839140afb1a08ad6cdc9bcee048decbf947c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01f64616adbeb6162a6aecabbdf562810f14e20f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01f64616adbeb6162a6aecabbdf562810f14e20f", "html_url": "https://github.com/rust-lang/rust/commit/01f64616adbeb6162a6aecabbdf562810f14e20f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01f64616adbeb6162a6aecabbdf562810f14e20f/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3726081857e3759ce7b7caeb836d6dce9f515227", "url": "https://api.github.com/repos/rust-lang/rust/commits/3726081857e3759ce7b7caeb836d6dce9f515227", "html_url": "https://github.com/rust-lang/rust/commit/3726081857e3759ce7b7caeb836d6dce9f515227"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "180748a075504b89a6896356a6d3dac42e1c7b99", "filename": "src/shims/io.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01f64616adbeb6162a6aecabbdf562810f14e20f/src%2Fshims%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f64616adbeb6162a6aecabbdf562810f14e20f/src%2Fshims%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fio.rs?ref=01f64616adbeb6162a6aecabbdf562810f14e20f", "patch": "@@ -69,8 +69,18 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let cmd = this.read_scalar(cmd_op)?.to_i32()?;\n \n         if cmd == this.eval_libc_i32(\"F_SETFD\")? {\n+            // This does not affect the file itself. Certain flags might require changing the file\n+            // or the way it is accessed somehow.\n             let flag = this.read_scalar(arg_op.unwrap())?.to_i32()?;\n-            this.machine.file_handler.flags.insert(fd, flag);\n+            // The only usage of this in stdlib at the moment is to enable the `FD_CLOEXEC` flag.\n+            let fd_cloexec = this.eval_libc_i32(\"FD_CLOEXEC\")?;\n+            if let Some(old_flag) = this.machine.file_handler.flags.get_mut(&fd) {\n+                if flag ^ *old_flag == fd_cloexec {\n+                    *old_flag = flag;\n+                } else {\n+                    throw_unsup_format!(\"Unsupported arg {:#x} for `F_SETFD`\", flag);\n+                }\n+            }\n             Ok(0)\n         } else if cmd == this.eval_libc_i32(\"F_GETFD\")? {\n             if let Some(flag) = this.machine.file_handler.flags.get(&fd) {"}]}