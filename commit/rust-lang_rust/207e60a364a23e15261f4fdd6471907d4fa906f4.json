{"sha": "207e60a364a23e15261f4fdd6471907d4fa906f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwN2U2MGEzNjRhMjNlMTUyNjFmNGZkZDY0NzE5MDdkNGZhOTA2ZjQ=", "commit": {"author": {"name": "Matt Brubeck", "email": "mattbrubeck@fullstory.com", "date": "2019-12-06T02:58:56Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2019-12-26T22:15:05Z"}, "message": "Stabilize Condvar::wait_until and wait_timeout_until", "tree": {"sha": "fd1d5b0ff53bc4716064726f163543fd20b78465", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd1d5b0ff53bc4716064726f163543fd20b78465"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/207e60a364a23e15261f4fdd6471907d4fa906f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/207e60a364a23e15261f4fdd6471907d4fa906f4", "html_url": "https://github.com/rust-lang/rust/commit/207e60a364a23e15261f4fdd6471907d4fa906f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/207e60a364a23e15261f4fdd6471907d4fa906f4/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac40b69c75929dac5115b6a49eb4f1ecc352416", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac40b69c75929dac5115b6a49eb4f1ecc352416", "html_url": "https://github.com/rust-lang/rust/commit/3ac40b69c75929dac5115b6a49eb4f1ecc352416"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "62bf0125c369290d134bf129e9e8553279059dd5", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/207e60a364a23e15261f4fdd6471907d4fa906f4/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/207e60a364a23e15261f4fdd6471907d4fa906f4/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=207e60a364a23e15261f4fdd6471907d4fa906f4", "patch": "@@ -228,8 +228,6 @@ impl Condvar {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(wait_until)]\n-    ///\n     /// use std::sync::{Arc, Mutex, Condvar};\n     /// use std::thread;\n     ///\n@@ -249,7 +247,7 @@ impl Condvar {\n     /// // As long as the value inside the `Mutex<bool>` is `false`, we wait.\n     /// let _guard = cvar.wait_until(lock.lock().unwrap(), |started| { *started }).unwrap();\n     /// ```\n-    #[unstable(feature = \"wait_until\", issue = \"47960\")]\n+    #[stable(feature = \"wait_until\", since = \"1.42.0\")]\n     pub fn wait_until<'a, T, F>(\n         &self,\n         mut guard: MutexGuard<'a, T>,\n@@ -433,8 +431,6 @@ impl Condvar {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(wait_timeout_until)]\n-    ///\n     /// use std::sync::{Arc, Mutex, Condvar};\n     /// use std::thread;\n     /// use std::time::Duration;\n@@ -462,7 +458,7 @@ impl Condvar {\n     /// }\n     /// // access the locked mutex via result.0\n     /// ```\n-    #[unstable(feature = \"wait_timeout_until\", issue = \"47960\")]\n+    #[stable(feature = \"wait_timeout_until\", since = \"1.42.0\")]\n     pub fn wait_timeout_until<'a, T, F>(\n         &self,\n         mut guard: MutexGuard<'a, T>,\n@@ -613,7 +609,6 @@ impl Drop for Condvar {\n #[cfg(test)]\n mod tests {\n     use crate::sync::atomic::{AtomicBool, Ordering};\n-    /// #![feature(wait_until)]\n     use crate::sync::mpsc::channel;\n     use crate::sync::{Arc, Condvar, Mutex};\n     use crate::thread;"}]}