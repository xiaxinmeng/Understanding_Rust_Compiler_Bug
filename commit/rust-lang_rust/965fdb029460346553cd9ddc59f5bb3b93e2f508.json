{"sha": "965fdb029460346553cd9ddc59f5bb3b93e2f508", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NWZkYjAyOTQ2MDM0NjU1M2NkOWRkYzU5ZjViYjNiOTNlMmY1MDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-28T09:35:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-28T09:35:56Z"}, "message": "fix build", "tree": {"sha": "c6bba9e2cdec4b5a70fb13cdac0e39f8fd06f5ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6bba9e2cdec4b5a70fb13cdac0e39f8fd06f5ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/965fdb029460346553cd9ddc59f5bb3b93e2f508", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/965fdb029460346553cd9ddc59f5bb3b93e2f508", "html_url": "https://github.com/rust-lang/rust/commit/965fdb029460346553cd9ddc59f5bb3b93e2f508", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/965fdb029460346553cd9ddc59f5bb3b93e2f508/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d90aa949f34712a374984bfaf88a5bf2f08685", "url": "https://api.github.com/repos/rust-lang/rust/commits/12d90aa949f34712a374984bfaf88a5bf2f08685", "html_url": "https://github.com/rust-lang/rust/commit/12d90aa949f34712a374984bfaf88a5bf2f08685"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "e54bbfca056170d05e2156a4cfb95492ae5a4ca3", "filename": "src/libstd/sys/windows/mutex.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/965fdb029460346553cd9ddc59f5bb3b93e2f508/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/965fdb029460346553cd9ddc59f5bb3b93e2f508/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs?ref=965fdb029460346553cd9ddc59f5bb3b93e2f508", "patch": "@@ -168,23 +168,31 @@ impl ReentrantMutex {\n     }\n \n     pub unsafe fn init(&mut self) {\n-        c::InitializeCriticalSection(self.inner.get().as_mut_ptr());\n+        c::InitializeCriticalSection((&mut *self.inner.get()).as_mut_ptr());\n     }\n \n     pub unsafe fn lock(&self) {\n-        c::EnterCriticalSection(self.inner.get().get_ref());\n+        // `init` must have been called, so this is now initialized and\n+        // we can call `get_ref`.\n+        c::EnterCriticalSection((&mut *self.inner.get()).get_ref());\n     }\n \n     #[inline]\n     pub unsafe fn try_lock(&self) -> bool {\n-        c::TryEnterCriticalSection(self.inner.get().get_ref()) != 0\n+        // `init` must have been called, so this is now initialized and\n+        // we can call `get_ref`.\n+        c::TryEnterCriticalSection((&mut *self.inner.get()).get_ref()) != 0\n     }\n \n     pub unsafe fn unlock(&self) {\n-        c::LeaveCriticalSection(self.inner.get().get_ref());\n+        // `init` must have been called, so this is now initialized and\n+        // we can call `get_ref`.\n+        c::LeaveCriticalSection((&mut *self.inner.get()).get_ref());\n     }\n \n     pub unsafe fn destroy(&self) {\n-        c::DeleteCriticalSection(self.inner.get().get_ref());\n+        // `init` must have been called, so this is now initialized and\n+        // we can call `get_ref`.\n+        c::DeleteCriticalSection((&mut *self.inner.get()).get_ref());\n     }\n }"}]}