{"sha": "452e5cdf11b30e17c69805a0bfc418feebb84081", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MmU1Y2RmMTFiMzBlMTdjNjk4MDVhMGJmYzQxOGZlZWJiODQwODE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-30T22:10:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-30T22:17:11Z"}, "message": "Make Writer::flush a no-op default method\n\nCloses #9126", "tree": {"sha": "5bed2b6e32c6647e7ec45f05768c69e564e9a716", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bed2b6e32c6647e7ec45f05768c69e564e9a716"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/452e5cdf11b30e17c69805a0bfc418feebb84081", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/452e5cdf11b30e17c69805a0bfc418feebb84081", "html_url": "https://github.com/rust-lang/rust/commit/452e5cdf11b30e17c69805a0bfc418feebb84081", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/452e5cdf11b30e17c69805a0bfc418feebb84081/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6789a77fa02b5f7c3f9ca0261a5387a951d23caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/6789a77fa02b5f7c3f9ca0261a5387a951d23caf", "html_url": "https://github.com/rust-lang/rust/commit/6789a77fa02b5f7c3f9ca0261a5387a951d23caf"}], "stats": {"total": 40, "additions": 6, "deletions": 34}, "files": [{"sha": "37910cef60eca507c83cfe218eee692acb74d2e0", "filename": "src/librustuv/uvio.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibrustuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibrustuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvio.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -1653,9 +1653,6 @@ impl RtioFileStream for UvFileStream {\n         let self_ = unsafe { cast::transmute::<&UvFileStream, &mut UvFileStream>(self) };\n         self_.seek_common(0, SEEK_CUR)\n     }\n-    fn flush(&mut self) -> Result<(), IoError> {\n-        Ok(())\n-    }\n }\n \n pub struct UvProcess {"}, {"sha": "fc6d43f551aa2c01b77608396655de7beffc85d3", "filename": "src/libstd/rt/io/buffered.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fbuffered.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -418,7 +418,6 @@ mod test {\n \n         impl rt::io::Writer for S {\n             fn write(&mut self, _: &[u8]) {}\n-            fn flush(&mut self) {}\n         }\n \n         impl rt::io::Reader for S {"}, {"sha": "98dbec27fb9612fea2dd0e7e42bc544589b794a2", "filename": "src/libstd/rt/io/comm_adapters.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fcomm_adapters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fcomm_adapters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fcomm_adapters.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -32,8 +32,6 @@ impl<C: GenericChan<~[u8]>> ChanWriter<C> {\n \n impl<C: GenericChan<~[u8]>> Writer for ChanWriter<C> {\n     fn write(&mut self, _buf: &[u8]) { fail!() }\n-\n-    fn flush(&mut self) { fail!() }\n }\n \n struct ReaderPort<R>;"}, {"sha": "99a4a709504e48ef4e3692aeaf36badae8b27a45", "filename": "src/libstd/rt/io/file.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Ffile.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -383,15 +383,6 @@ impl Writer for FileStream {\n             }\n         }\n     }\n-\n-    fn flush(&mut self) {\n-        match self.fd.flush() {\n-            Ok(_) => (),\n-            Err(ioerr) => {\n-                io_error::cond.raise(ioerr);\n-            }\n-        }\n-    }\n }\n \n /// a `std::rt::io:Seek` trait impl for file I/O."}, {"sha": "6803637d7cb14dc29eaeddf122d058ead6ccf35f", "filename": "src/libstd/rt/io/mem.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fmem.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -62,8 +62,6 @@ impl Writer for MemWriter {\n         // Bump us forward\n         self.pos += buf.len();\n     }\n-\n-    fn flush(&mut self) { /* no-op */ }\n }\n \n impl Seek for MemWriter {"}, {"sha": "a0fd6846ce9b4ed830c5313441e5514d362cfdf4", "filename": "src/libstd/rt/io/mock.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fmock.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -32,19 +32,16 @@ impl Reader for MockReader {\n \n pub struct MockWriter {\n     priv write: ~fn(buf: &[u8]),\n-    priv flush: ~fn()\n }\n \n impl MockWriter {\n     pub fn new() -> MockWriter {\n         MockWriter {\n             write: |_| (),\n-            flush: || ()\n         }\n     }\n }\n \n impl Writer for MockWriter {\n     fn write(&mut self, buf: &[u8]) { (self.write)(buf) }\n-    fn flush(&mut self) { (self.flush)() }\n }"}, {"sha": "1fd3bf1f238097dcdcdf1d13dba9a1c5eea73368", "filename": "src/libstd/rt/io/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fmod.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -810,8 +810,12 @@ pub trait Writer {\n     /// Raises the `io_error` condition on error\n     fn write(&mut self, buf: &[u8]);\n \n-    /// Flush output\n-    fn flush(&mut self);\n+    /// Flush this output stream, ensuring that all intermediately buffered\n+    /// contents reach their destination.\n+    ///\n+    /// This is by default a no-op and implementors of the `Writer` trait should\n+    /// decide whether their stream needs to be buffered or not.\n+    fn flush(&mut self) {}\n \n     /// Write the result of passing n through `int::to_str_bytes`.\n     fn write_int(&mut self, n: int) {"}, {"sha": "9f9e7dcee9fd6178de8c616b96c626652d37c0a5", "filename": "src/libstd/rt/io/native/file.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnative%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnative%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fnative%2Ffile.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -132,8 +132,6 @@ impl Writer for FileDesc {\n             raise_error();\n         }\n     }\n-\n-    fn flush(&mut self) {}\n }\n \n impl Drop for FileDesc {"}, {"sha": "493ed6aba87d0bf84cbb47575686d5b3e4a78b14", "filename": "src/libstd/rt/io/net/tcp.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -84,8 +84,6 @@ impl Writer for TcpStream {\n             Err(ioerr) => io_error::cond.raise(ioerr),\n         }\n     }\n-\n-    fn flush(&mut self) { /* no-op */ }\n }\n \n pub struct TcpListener {"}, {"sha": "f9cf8f5f9ae2436479fa9a0368bc24fd113937e3", "filename": "src/libstd/rt/io/net/udp.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fnet%2Fudp.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -100,8 +100,6 @@ impl Writer for UdpStream {\n             sock.sendto(buf, self.connectedTo);\n         }\n     }\n-\n-    fn flush(&mut self) { fail!() }\n }\n \n #[cfg(test)]"}, {"sha": "f30423812ba6e41244394dfa585107d3c15bb51f", "filename": "src/libstd/rt/io/net/unix.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnet%2Funix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fnet%2Funix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fnet%2Funix.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -78,7 +78,6 @@ impl Reader for UnixStream {\n \n impl Writer for UnixStream {\n     fn write(&mut self, buf: &[u8]) { self.obj.write(buf) }\n-    fn flush(&mut self) { self.obj.flush() }\n }\n \n pub struct UnixListener {"}, {"sha": "fbbd5a83561ff16478fac5678ab1280399974a77", "filename": "src/libstd/rt/io/pipe.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fpipe.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -86,6 +86,4 @@ impl Writer for PipeStream {\n             }\n         }\n     }\n-\n-    fn flush(&mut self) {}\n }"}, {"sha": "eeffc20a336d50594bcbf46d4de3be0771023e27", "filename": "src/libstd/rt/io/stdio.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fstdio.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -294,8 +294,6 @@ impl Writer for StdWriter {\n             Err(e) => io_error::cond.raise(e)\n         }\n     }\n-\n-    fn flush(&mut self) { /* nothing to do */ }\n }\n \n #[cfg(test)]"}, {"sha": "82ff8071896fe07197fb7a46bebc26661882731e", "filename": "src/libstd/rt/rtio.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Frtio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e5cdf11b30e17c69805a0bfc418feebb84081/src%2Flibstd%2Frt%2Frtio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frtio.rs?ref=452e5cdf11b30e17c69805a0bfc418feebb84081", "patch": "@@ -173,7 +173,6 @@ pub trait RtioFileStream {\n     fn pwrite(&mut self, buf: &[u8], offset: u64) -> Result<(), IoError>;\n     fn seek(&mut self, pos: i64, whence: SeekStyle) -> Result<u64, IoError>;\n     fn tell(&self) -> Result<u64, IoError>;\n-    fn flush(&mut self) -> Result<(), IoError>;\n }\n \n pub trait RtioProcess {"}]}