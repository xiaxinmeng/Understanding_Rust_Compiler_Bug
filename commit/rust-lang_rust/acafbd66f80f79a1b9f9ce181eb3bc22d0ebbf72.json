{"sha": "acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYWZiZDY2ZjgwZjc5YTFiOWY5Y2UxODFlYjNiYzIyZDBlYmJmNzI=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-06-11T14:32:33Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-06-11T14:46:33Z"}, "message": "Fix hover for pat that shadows items", "tree": {"sha": "9ec3ca679d51c80edf127c8d08ac02b9f81df79a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ec3ca679d51c80edf127c8d08ac02b9f81df79a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72", "html_url": "https://github.com/rust-lang/rust/commit/acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e505fe9d7b96f3454711e923c70d763c5cee5f47", "url": "https://api.github.com/repos/rust-lang/rust/commits/e505fe9d7b96f3454711e923c70d763c5cee5f47", "html_url": "https://github.com/rust-lang/rust/commit/e505fe9d7b96f3454711e923c70d763c5cee5f47"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "bc8e8fd14e7151097b8b7483844e1cebd7280f14", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=acafbd66f80f79a1b9f9ce181eb3bc22d0ebbf72", "patch": "@@ -94,6 +94,8 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n     if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(file.syntax(), position.offset) {\n         let analyzer = hir::SourceAnalyzer::new(db, position.file_id, name_ref.syntax(), None);\n \n+        let mut no_fallback = false;\n+\n         match classify_name_ref(db, &analyzer, name_ref) {\n             Some(Method(it)) => {\n                 let it = it.source(db).1;\n@@ -190,19 +192,17 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n                     }\n                 }\n             }\n-            Some(Pat(_)) => {\n-                res.extend(None);\n-            }\n-            Some(SelfParam(_)) => {\n-                res.extend(None);\n+            Some(Pat(_)) | Some(SelfParam(_)) => {\n+                // Hover for these shows type names\n+                no_fallback = true;\n             }\n             Some(GenericParam(_)) => {\n                 // FIXME: Hover for generic param\n             }\n             None => {}\n         }\n \n-        if res.is_empty() {\n+        if res.is_empty() && !no_fallback {\n             // Fallback index based approach:\n             let symbols = crate::symbol_index::index_resolve(db, name_ref);\n             for sym in symbols {\n@@ -714,4 +714,21 @@ fn func(foo: i32) { if true { <|>foo; }; }\n         assert_eq!(trim_markup_opt(hover.info.first()), Some(\"enum Thing\"));\n         assert_eq!(hover.info.is_exact(), true);\n     }\n+\n+    #[test]\n+    fn test_hover_shadowing_pat() {\n+        let (analysis, position) = single_file_with_position(\n+            \"\n+            fn x() {}\n+\n+            fn y() {\n+                let x = 0i32;\n+                x<|>;\n+            }\n+            \",\n+        );\n+        let hover = analysis.hover(position).unwrap().unwrap();\n+        assert_eq!(trim_markup_opt(hover.info.first()), Some(\"i32\"));\n+        assert_eq!(hover.info.is_exact(), true);\n+    }\n }"}]}