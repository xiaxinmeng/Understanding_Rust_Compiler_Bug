{"sha": "1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNzRlZWQ4Y2EzYWJiMTRmYTZmZjQwNGQxNjIwMzk3ZjNiMmU0ZTg=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T11:33:21Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T11:33:21Z"}, "message": "Remove vertical ellipses from tests in complete_snippet.rs and presentation.rs", "tree": {"sha": "d6acddfde1152b4e72c714e79d493c108087e253", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6acddfde1152b4e72c714e79d493c108087e253"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8", "html_url": "https://github.com/rust-lang/rust/commit/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46c07ed57898251cd2821e41a3162d0c2d2e36d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/46c07ed57898251cd2821e41a3162d0c2d2e36d5", "html_url": "https://github.com/rust-lang/rust/commit/46c07ed57898251cd2821e41a3162d0c2d2e36d5"}], "stats": {"total": 196, "additions": 94, "deletions": 102}, "files": [{"sha": "a35f315118c7d0252139cd8259fd943f1444ee89", "filename": "crates/ra_ide_api/src/completion/complete_snippet.rs", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8", "patch": "@@ -84,33 +84,31 @@ mod tests {\n     #[test]\n     fn completes_snippets_in_items() {\n         assert_debug_snapshot_matches!(\n-                    do_snippet_completion(\n-                        r\"\n+            do_snippet_completion(\n+                r\"\n                 #[cfg(test)]\n                 mod tests {\n                     <|>\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"Test function\",\n-       \u22ee        source_range: [78; 78),\n-       \u22ee        delete: [78; 78),\n-       \u22ee        insert: \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\",\n-       \u22ee        kind: Snippet,\n-       \u22ee        lookup: \"tfn\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"pub(crate)\",\n-       \u22ee        source_range: [78; 78),\n-       \u22ee        delete: [78; 78),\n-       \u22ee        insert: \"pub(crate) $0\",\n-       \u22ee        kind: Snippet,\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Test function\",\n+        source_range: [78; 78),\n+        delete: [78; 78),\n+        insert: \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\",\n+        kind: Snippet,\n+        lookup: \"tfn\",\n+    },\n+    CompletionItem {\n+        label: \"pub(crate)\",\n+        source_range: [78; 78),\n+        delete: [78; 78),\n+        insert: \"pub(crate) $0\",\n+        kind: Snippet,\n+    },\n+]\"###\n+        );\n     }\n }"}, {"sha": "6878008d3f0ec661ade9b6db734475341132b3d8", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 73, "deletions": 79, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=1b74eed8ca3abb14fa6ff404d1620397f3b2e4e8", "patch": "@@ -194,64 +194,60 @@ mod tests {\n     fn inserts_parens_for_function_calls() {\n         covers!(inserts_parens_for_function_calls);\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 fn no_args() {}\n                 fn main() { no_<|> }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"main\",\n-       \u22ee        source_range: [61; 64),\n-       \u22ee        delete: [61; 64),\n-       \u22ee        insert: \"main()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn main()\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"no_args\",\n-       \u22ee        source_range: [61; 64),\n-       \u22ee        delete: [61; 64),\n-       \u22ee        insert: \"no_args()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn no_args()\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"main\",\n+        source_range: [61; 64),\n+        delete: [61; 64),\n+        insert: \"main()$0\",\n+        kind: Function,\n+        detail: \"fn main()\",\n+    },\n+    CompletionItem {\n+        label: \"no_args\",\n+        source_range: [61; 64),\n+        delete: [61; 64),\n+        insert: \"no_args()$0\",\n+        kind: Function,\n+        detail: \"fn no_args()\",\n+    },\n+]\"###\n+        );\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 fn with_args(x: i32, y: String) {}\n                 fn main() { with_<|> }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"main\",\n-       \u22ee        source_range: [80; 85),\n-       \u22ee        delete: [80; 85),\n-       \u22ee        insert: \"main()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn main()\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"with_args\",\n-       \u22ee        source_range: [80; 85),\n-       \u22ee        delete: [80; 85),\n-       \u22ee        insert: \"with_args($0)\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn with_args(x: i32, y: String)\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"main\",\n+        source_range: [80; 85),\n+        delete: [80; 85),\n+        insert: \"main()$0\",\n+        kind: Function,\n+        detail: \"fn main()\",\n+    },\n+    CompletionItem {\n+        label: \"with_args\",\n+        source_range: [80; 85),\n+        delete: [80; 85),\n+        insert: \"with_args($0)\",\n+        kind: Function,\n+        detail: \"fn with_args(x: i32, y: String)\",\n+    },\n+]\"###\n+        );\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 struct S {}\n                 impl S {\n                     fn foo(&self) {}\n@@ -260,33 +256,31 @@ mod tests {\n                     s.f<|>\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"foo\",\n-       \u22ee        source_range: [163; 164),\n-       \u22ee        delete: [163; 164),\n-       \u22ee        insert: \"foo()$0\",\n-       \u22ee        kind: Method,\n-       \u22ee        detail: \"fn foo(&self)\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [163; 164),\n+        delete: [163; 164),\n+        insert: \"foo()$0\",\n+        kind: Method,\n+        detail: \"fn foo(&self)\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn dont_render_function_parens_in_use_item() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        \"\n+            do_reference_completion(\n+                \"\n                 //- /lib.rs\n                 mod m { pub fn foo() {} }\n                 use crate::m::f<|>;\n                 \"\n-                    ),\n-        @r#\"[\n+            ),\n+            @r#\"[\n     CompletionItem {\n         label: \"foo\",\n         source_range: [40; 41),\n@@ -296,22 +290,22 @@ mod tests {\n         detail: \"pub fn foo()\",\n     },\n ]\"#\n-                );\n+        );\n     }\n \n     #[test]\n     fn dont_render_function_parens_if_already_call() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        \"\n+            do_reference_completion(\n+                \"\n                 //- /lib.rs\n                 fn frobnicate() {}\n                 fn main() {\n                     frob<|>();\n                 }\n                 \"\n-                    ),\n-        @r#\"[\n+            ),\n+            @r#\"[\n     CompletionItem {\n         label: \"frobnicate\",\n         source_range: [35; 39),\n@@ -329,19 +323,19 @@ mod tests {\n         detail: \"fn main()\",\n     },\n ]\"#\n-                );\n+        );\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        \"\n+            do_reference_completion(\n+                \"\n                 //- /lib.rs\n                 struct Foo {}\n                 impl Foo { fn new() -> Foo {} }\n                 fn main() {\n                     Foo::ne<|>();\n                 }\n                 \"\n-                    ),\n-        @r#\"[\n+            ),\n+            @r#\"[\n     CompletionItem {\n         label: \"new\",\n         source_range: [67; 69),\n@@ -351,6 +345,6 @@ mod tests {\n         detail: \"fn new() -> Foo\",\n     },\n ]\"#\n-                );\n+        );\n     }\n }"}]}