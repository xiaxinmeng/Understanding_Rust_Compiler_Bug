{"sha": "580559129b875137e80e066bf2c87673aed9a582", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MDU1OTEyOWI4NzUxMzdlODBlMDY2YmYyYzg3NjczYWVkOWE1ODI=", "commit": {"author": {"name": "John Paul Adrian Glaubitz", "email": "glaubitz@physik.fu-berlin.de", "date": "2021-08-25T07:45:06Z"}, "committer": {"name": "John Paul Adrian Glaubitz", "email": "glaubitz@physik.fu-berlin.de", "date": "2021-09-17T15:07:12Z"}, "message": "compiler/rustc_target: Add support for m68k-linux-gnu", "tree": {"sha": "b57e27c7f0eb19b0f019186c344943ee7a1f69a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b57e27c7f0eb19b0f019186c344943ee7a1f69a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/580559129b875137e80e066bf2c87673aed9a582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/580559129b875137e80e066bf2c87673aed9a582", "html_url": "https://github.com/rust-lang/rust/commit/580559129b875137e80e066bf2c87673aed9a582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/580559129b875137e80e066bf2c87673aed9a582/comments", "author": {"login": "glaubitz", "id": 1647645, "node_id": "MDQ6VXNlcjE2NDc2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1647645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaubitz", "html_url": "https://github.com/glaubitz", "followers_url": "https://api.github.com/users/glaubitz/followers", "following_url": "https://api.github.com/users/glaubitz/following{/other_user}", "gists_url": "https://api.github.com/users/glaubitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaubitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaubitz/subscriptions", "organizations_url": "https://api.github.com/users/glaubitz/orgs", "repos_url": "https://api.github.com/users/glaubitz/repos", "events_url": "https://api.github.com/users/glaubitz/events{/privacy}", "received_events_url": "https://api.github.com/users/glaubitz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glaubitz", "id": 1647645, "node_id": "MDQ6VXNlcjE2NDc2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1647645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaubitz", "html_url": "https://github.com/glaubitz", "followers_url": "https://api.github.com/users/glaubitz/followers", "following_url": "https://api.github.com/users/glaubitz/following{/other_user}", "gists_url": "https://api.github.com/users/glaubitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaubitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaubitz/subscriptions", "organizations_url": "https://api.github.com/users/glaubitz/orgs", "repos_url": "https://api.github.com/users/glaubitz/repos", "events_url": "https://api.github.com/users/glaubitz/events{/privacy}", "received_events_url": "https://api.github.com/users/glaubitz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df7ad3af210efbb42239780c62176eeaa73dcb5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/df7ad3af210efbb42239780c62176eeaa73dcb5b", "html_url": "https://github.com/rust-lang/rust/commit/df7ad3af210efbb42239780c62176eeaa73dcb5b"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "58fdc00b6962783e94d4f7995a7e7f24702f07b8", "filename": "compiler/rustc_target/src/abi/call/m68k.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fm68k.rs", "raw_url": "https://github.com/rust-lang/rust/raw/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fm68k.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fm68k.rs?ref=580559129b875137e80e066bf2c87673aed9a582", "patch": "@@ -0,0 +1,30 @@\n+use crate::abi::call::{ArgAbi, FnAbi};\n+\n+fn classify_ret<Ty>(ret: &mut ArgAbi<'_, Ty>) {\n+    if ret.layout.is_aggregate() {\n+        ret.make_indirect();\n+    } else {\n+        ret.extend_integer_width_to(32);\n+    }\n+}\n+\n+fn classify_arg<Ty>(arg: &mut ArgAbi<'_, Ty>) {\n+    if arg.layout.is_aggregate() {\n+        arg.make_indirect_byval();\n+    } else {\n+        arg.extend_integer_width_to(32);\n+    }\n+}\n+\n+pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n+    if !fn_abi.ret.is_ignore() {\n+        classify_ret(&mut fn_abi.ret);\n+    }\n+\n+    for arg in &mut fn_abi.args {\n+        if arg.is_ignore() {\n+            continue;\n+        }\n+        classify_arg(arg);\n+    }\n+}"}, {"sha": "4f52535aa50730d19032570c10c40d0101fbd495", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=580559129b875137e80e066bf2c87673aed9a582", "patch": "@@ -8,6 +8,7 @@ mod arm;\n mod avr;\n mod bpf;\n mod hexagon;\n+mod m68k;\n mod mips;\n mod mips64;\n mod msp430;\n@@ -634,6 +635,7 @@ impl<'a, Ty> FnAbi<'a, Ty> {\n             \"amdgpu\" => amdgpu::compute_abi_info(cx, self),\n             \"arm\" => arm::compute_abi_info(cx, self),\n             \"avr\" => avr::compute_abi_info(self),\n+            \"m68k\" => m68k::compute_abi_info(self),\n             \"mips\" => mips::compute_abi_info(cx, self),\n             \"mips64\" => mips64::compute_abi_info(cx, self),\n             \"powerpc\" => powerpc::compute_abi_info(self),"}, {"sha": "fff7b25a34937c6c505bfe84a3f21dcccfefe89e", "filename": "compiler/rustc_target/src/spec/m68k_unknown_linux_gnu.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fspec%2Fm68k_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fspec%2Fm68k_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fm68k_unknown_linux_gnu.rs?ref=580559129b875137e80e066bf2c87673aed9a582", "patch": "@@ -0,0 +1,15 @@\n+use crate::abi::Endian;\n+use crate::spec::{Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    let mut base = super::linux_base::opts();\n+    base.max_atomic_width = Some(32);\n+\n+    Target {\n+        llvm_target: \"m68k-unknown-linux-gnu\".to_string(),\n+        pointer_width: 32,\n+        data_layout: \"E-m:e-p:32:16:32-i8:8:8-i16:16:16-i32:16:32-n8:16:32-a:0:16-S16\".to_string(),\n+        arch: \"m68k\".to_string(),\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n+    }\n+}"}, {"sha": "c947721d63d39bf5f0d9c98fcb0c1dbbfc75ac44", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/580559129b875137e80e066bf2c87673aed9a582/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=580559129b875137e80e066bf2c87673aed9a582", "patch": "@@ -742,6 +742,7 @@ supported_targets! {\n     (\"x86_64-unknown-linux-gnux32\", x86_64_unknown_linux_gnux32),\n     (\"i686-unknown-linux-gnu\", i686_unknown_linux_gnu),\n     (\"i586-unknown-linux-gnu\", i586_unknown_linux_gnu),\n+    (\"m68k-unknown-linux-gnu\", m68k_unknown_linux_gnu),\n     (\"mips-unknown-linux-gnu\", mips_unknown_linux_gnu),\n     (\"mips64-unknown-linux-gnuabi64\", mips64_unknown_linux_gnuabi64),\n     (\"mips64el-unknown-linux-gnuabi64\", mips64el_unknown_linux_gnuabi64),"}]}