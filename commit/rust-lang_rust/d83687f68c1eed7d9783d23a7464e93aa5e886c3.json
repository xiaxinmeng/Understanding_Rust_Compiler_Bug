{"sha": "d83687f68c1eed7d9783d23a7464e93aa5e886c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MzY4N2Y2OGMxZWVkN2Q5NzgzZDIzYTc0NjRlOTNhYTVlODg2YzM=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2017-01-27T05:51:20Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2017-01-27T05:51:20Z"}, "message": "Fix can_begin_expr keyword behavior", "tree": {"sha": "8572a6ab7a7a9e97c86c0bdcfd4cd9d01d24d193", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8572a6ab7a7a9e97c86c0bdcfd4cd9d01d24d193"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d83687f68c1eed7d9783d23a7464e93aa5e886c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d83687f68c1eed7d9783d23a7464e93aa5e886c3", "html_url": "https://github.com/rust-lang/rust/commit/d83687f68c1eed7d9783d23a7464e93aa5e886c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d83687f68c1eed7d9783d23a7464e93aa5e886c3/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1283c029557bcde106adde71f467fe133b3ffeff", "url": "https://api.github.com/repos/rust-lang/rust/commits/1283c029557bcde106adde71f467fe133b3ffeff", "html_url": "https://github.com/rust-lang/rust/commit/1283c029557bcde106adde71f467fe133b3ffeff"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "43ad1eacf33b0f0b3547fb09be7fb9ed08b1a21c", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d83687f68c1eed7d9783d23a7464e93aa5e886c3/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d83687f68c1eed7d9783d23a7464e93aa5e886c3/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=d83687f68c1eed7d9783d23a7464e93aa5e886c3", "patch": "@@ -80,6 +80,28 @@ impl Lit {\n     }\n }\n \n+fn ident_can_begin_expr(ident: ast::Ident) -> bool {\n+    let ident_token: Token = Ident(ident);\n+\n+    !ident_token.is_any_keyword() ||\n+    ident_token.is_path_segment_keyword() ||\n+    [\n+        keywords::Box.name(),\n+        keywords::Break.name(),\n+        keywords::Continue.name(),\n+        keywords::False.name(),\n+        keywords::For.name(),\n+        keywords::If.name(),\n+        keywords::Loop.name(),\n+        keywords::Match.name(),\n+        keywords::Move.name(),\n+        keywords::Return.name(),\n+        keywords::True.name(),\n+        keywords::Unsafe.name(),\n+        keywords::While.name(),\n+    ].contains(&ident.name)\n+}\n+\n #[derive(Clone, RustcEncodable, RustcDecodable, PartialEq, Eq, Hash, Debug)]\n pub enum Token {\n     /* Expression-operator symbols. */\n@@ -163,7 +185,7 @@ impl Token {\n     pub fn can_begin_expr(&self) -> bool {\n         match *self {\n             OpenDelim(..)               => true,\n-            Ident(..)                   => true,\n+            Ident(ident)                => ident_can_begin_expr(ident),\n             Literal(..)                 => true,\n             Not                         => true,\n             BinOp(Minus)                => true,"}, {"sha": "68f219c6ed9935830b40f714c3a1a4be42dcc544", "filename": "src/test/compile-fail/can-begin-expr-check.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d83687f68c1eed7d9783d23a7464e93aa5e886c3/src%2Ftest%2Fcompile-fail%2Fcan-begin-expr-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d83687f68c1eed7d9783d23a7464e93aa5e886c3/src%2Ftest%2Fcompile-fail%2Fcan-begin-expr-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcan-begin-expr-check.rs?ref=d83687f68c1eed7d9783d23a7464e93aa5e886c3", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn main() {\n+\n+    return;\n+    return ();\n+    return as ();\n+    return return as ();\n+    return return return;\n+\n+    return if true {\n+        ()\n+    } else {\n+        ()\n+    };\n+\n+    loop {\n+        return break as ();\n+    }\n+\n+    return enum; //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `enum`\n+}"}]}