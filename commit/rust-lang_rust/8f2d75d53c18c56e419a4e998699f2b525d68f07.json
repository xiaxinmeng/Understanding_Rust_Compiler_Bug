{"sha": "8f2d75d53c18c56e419a4e998699f2b525d68f07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMmQ3NWQ1M2MxOGM1NmU0MTlhNGU5OTg2OTlmMmI1MjVkNjhmMDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-24T19:33:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-24T23:06:18Z"}, "message": "switch over sqrt from llvm to c-stack-cdecl, exposing a bug in\nthe supported return types of upcall_c_stack", "tree": {"sha": "8cd0901c43185b8e5f4a54c9d7ba47858c2d44bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cd0901c43185b8e5f4a54c9d7ba47858c2d44bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f2d75d53c18c56e419a4e998699f2b525d68f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f2d75d53c18c56e419a4e998699f2b525d68f07", "html_url": "https://github.com/rust-lang/rust/commit/8f2d75d53c18c56e419a4e998699f2b525d68f07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f2d75d53c18c56e419a4e998699f2b525d68f07/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d69a83b0213952f2fdd48cddad493ad7a8dc0d6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d69a83b0213952f2fdd48cddad493ad7a8dc0d6a", "html_url": "https://github.com/rust-lang/rust/commit/d69a83b0213952f2fdd48cddad493ad7a8dc0d6a"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "04bdebb04a171984e4a44139e86502d82a2fc7a6", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=8f2d75d53c18c56e419a4e998699f2b525d68f07", "patch": "@@ -5,7 +5,7 @@ import trans::decl_cdecl_fn;\n import middle::trans_common::{T_f32, T_f64, T_fn, T_bool, T_i1, T_i8, T_i32,\n                               T_int, T_vec, T_nil, T_opaque_chan_ptr,\n                               T_opaque_vec, T_opaque_port_ptr, T_ptr,\n-                              T_size_t, T_void};\n+                              T_size_t, T_void, T_float};\n import lib::llvm::type_names;\n import lib::llvm::llvm::ModuleRef;\n import lib::llvm::llvm::ValueRef;\n@@ -28,6 +28,7 @@ type upcalls =\n      dynastack_free: ValueRef,\n      alloc_c_stack: ValueRef,\n      call_c_stack: ValueRef,\n+     call_c_stack_float: ValueRef,\n      rust_personality: ValueRef};\n \n fn declare_upcalls(_tn: type_names, tydesc_type: TypeRef,\n@@ -77,6 +78,9 @@ fn declare_upcalls(_tn: type_names, tydesc_type: TypeRef,\n           call_c_stack: d(\"call_c_stack\",\n                           [T_ptr(T_fn([], T_int())), T_ptr(T_i8())],\n                           T_int()),\n+          call_c_stack_float: d(\"call_c_stack_float\",\n+                                [T_ptr(T_fn([], T_int())), T_ptr(T_i8())],\n+                                T_float()),\n           rust_personality: d(\"rust_personality\", [], T_i32())\n          };\n }"}, {"sha": "c655d7d4b5dc1129e0c9f81121eee9b24a7dcdd1", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=8f2d75d53c18c56e419a4e998699f2b525d68f07", "patch": "@@ -3864,20 +3864,33 @@ fn trans_c_stack_native_call(bcx: @block_ctxt, f: @ast::expr,\n         i += 1u;\n     }\n \n-    // Call.\n-    // TODO: Invoke instead.\n-    let llrawretval = Call(bcx, ccx.upcalls.call_c_stack,\n-                           [llfn, llrawargbundle]);\n-\n-    // Cast return type.\n+    // Determine return type.\n     let ret_ty = ty::ty_fn_ret(bcx_tcx(bcx), fn_ty);\n     check type_has_static_size(ccx, ret_ty);\n     let llretty = type_of(ccx, f.span, ret_ty);\n \n+    // Determine which upcall fn to use based on the return type.\n+    let upcall_fn = alt lib::llvm::llvm::LLVMGetTypeKind(llretty) {\n+      1 | 2 | 3 | 4 | 5 {\n+        // LLVMFloatTypeKind, LLVMDoubleTypeKind,\n+        // LLVMX86_FP80TypeKind, LLVMFP128TypeKind\n+        // LLVMPPC_FP128TypeKind\n+        ccx.upcalls.call_c_stack_float\n+      }\n+\n+      _ { ccx.upcalls.call_c_stack }\n+    };\n+\n+    // Call and cast the return type.\n+    // TODO: Invoke instead.\n+    let llrawretval = Call(bcx, upcall_fn,\n+                           [llfn, llrawargbundle]);\n     let llretval;\n     if lib::llvm::llvm::LLVMGetTypeKind(llretty) as int == 11 { // pointer\n         llretval = IntToPtr(bcx, llrawretval, llretty);\n     } else {\n+        log_err(\"TruncOrBitCast(\", val_str(ccx.tn, llrawretval), \", \",\n+                ty_str(ccx.tn, llretty), \")\");\n         llretval = TruncOrBitCast(bcx, llrawretval, llretty);\n     }\n "}, {"sha": "378ea5e0b67eb8517ff8ccceed96067d212fd0f7", "filename": "src/rt/arch/i386/ccall.S", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Frt%2Farch%2Fi386%2Fccall.S", "raw_url": "https://github.com/rust-lang/rust/raw/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Frt%2Farch%2Fi386%2Fccall.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fccall.S?ref=8f2d75d53c18c56e419a4e998699f2b525d68f07", "patch": "@@ -6,10 +6,14 @@\n // slower.\n #if defined(__APPLE__) || defined(_WIN32)\n .globl _upcall_call_c_stack\n+.globl _upcall_call_c_stack_float\n _upcall_call_c_stack:\n+_upcall_call_c_stack_float:\n #else\n .globl upcall_call_c_stack\n+.globl upcall_call_c_stack_float\n upcall_call_c_stack:\n+upcall_call_c_stack_float:\n #endif\n     pushl %ebp\n     movl %esp,%ebp          // save esp"}, {"sha": "6b70e283957207ca2af5f4d1f5a27c7ba91bf0ed", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=8f2d75d53c18c56e419a4e998699f2b525d68f07", "patch": "@@ -65,6 +65,7 @@ task_join\n unsupervise\n upcall_alloc_c_stack\n upcall_call_c_stack\n+upcall_call_c_stack_float\n upcall_cmp_type\n upcall_dynastack_alloc\n upcall_dynastack_alloc_2"}, {"sha": "e6f196f2869c520e07fa6032731a1c5b62062598", "filename": "src/test/bench/shootout-nbody.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f2d75d53c18c56e419a4e998699f2b525d68f07/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-nbody.rs?ref=8f2d75d53c18c56e419a4e998699f2b525d68f07", "patch": "@@ -1,8 +1,8 @@\n // based on:\n // http://shootout.alioth.debian.org/u32/benchmark.php?test=nbody&lang=java\n \n-native \"llvm\" mod llvm {\n-    fn sqrt(n: float) -> float = \"sqrt.f64\";\n+native \"c-stack-cdecl\" mod llvm = \"\" {\n+    fn sqrt(n: float) -> float;\n }\n \n fn main() {"}]}