{"sha": "8ac43366929e2ea66abbf0fc8fe535ecfbea0262", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYzQzMzY2OTI5ZTJlYTY2YWJiZjBmYzhmZTUzNWVjZmJlYTAyNjI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-08-08T20:16:08Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-08-08T20:16:08Z"}, "message": "Improve headers linking", "tree": {"sha": "2eb4e3804413135d4e5daf550837cde1514ddc64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eb4e3804413135d4e5daf550837cde1514ddc64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ac43366929e2ea66abbf0fc8fe535ecfbea0262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac43366929e2ea66abbf0fc8fe535ecfbea0262", "html_url": "https://github.com/rust-lang/rust/commit/8ac43366929e2ea66abbf0fc8fe535ecfbea0262", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ac43366929e2ea66abbf0fc8fe535ecfbea0262/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d84a355c34fc7dfc1a201478f99890046081398", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d84a355c34fc7dfc1a201478f99890046081398", "html_url": "https://github.com/rust-lang/rust/commit/6d84a355c34fc7dfc1a201478f99890046081398"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "563c5618759b721a11fa64c2975764d0acd8f194", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8ac43366929e2ea66abbf0fc8fe535ecfbea0262/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ac43366929e2ea66abbf0fc8fe535ecfbea0262/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8ac43366929e2ea66abbf0fc8fe535ecfbea0262", "patch": "@@ -2141,8 +2141,8 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n \n     if !types.is_empty() {\n         write!(w, \"\n-            <h2 id='associated-types' class='section-header'>\n-              <a href='#associated-types'>Associated Types</a>\n+            <h2 id='associated-types' class='small-section-header'>\n+              Associated Types<a href='#associated-types' class='anchor'></a>\n             </h2>\n             <div class='methods'>\n         \")?;\n@@ -2154,8 +2154,8 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n \n     if !consts.is_empty() {\n         write!(w, \"\n-            <h2 id='associated-const' class='section-header'>\n-              <a href='#associated-const'>Associated Constants</a>\n+            <h2 id='associated-const' class='small-section-header'>\n+              Associated Constants<a href='#associated-const' class='anchor'></a>\n             </h2>\n             <div class='methods'>\n         \")?;\n@@ -2168,8 +2168,8 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     // Output the documentation for each function individually\n     if !required.is_empty() {\n         write!(w, \"\n-            <h2 id='required-methods' class='section-header'>\n-              <a href='#required-methods'>Required Methods</a>\n+            <h2 id='required-methods' class='small-section-header'>\n+              Required Methods<a href='#required-methods' class='anchor'></a>\n             </h2>\n             <div class='methods'>\n         \")?;\n@@ -2180,8 +2180,8 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     }\n     if !provided.is_empty() {\n         write!(w, \"\n-            <h2 id='provided-methods' class='section-header'>\n-              <a href='#provided-methods'>Provided Methods</a>\n+            <h2 id='provided-methods' class='small-section-header'>\n+              Provided Methods<a href='#provided-methods' class='anchor'></a>\n             </h2>\n             <div class='methods'>\n         \")?;\n@@ -2196,8 +2196,8 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n \n     let cache = cache();\n     write!(w, \"\n-        <h2 id='implementors' class='section-header'>\n-          <a href='#implementors'>Implementors</a>\n+        <h2 id='implementors' class='small-section-header'>\n+          Implementors<a href='#implementors' class='anchor'></a>\n         </h2>\n         <ul class='item-list' id='implementors-list'>\n     \")?;\n@@ -2436,8 +2436,8 @@ fn item_struct(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     }).peekable();\n     if let doctree::Plain = s.struct_type {\n         if fields.peek().is_some() {\n-            write!(w, \"<h2 id='fields' class='fields section-header'>\n-                       <a href='#fields'>Fields</a></h2>\")?;\n+            write!(w, \"<h2 id='fields' class='fields small-section-header'>\n+                       Fields<a href='#fields' class='anchor'></a></h2>\")?;\n             for (field, ty) in fields {\n                 let id = derive_id(format!(\"{}.{}\",\n                                            ItemType::StructField,\n@@ -2485,8 +2485,8 @@ fn item_union(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n         }\n     }).peekable();\n     if fields.peek().is_some() {\n-        write!(w, \"<h2 id='fields' class='fields section-header'>\n-                   <a href='#fields'>Fields</a></h2>\")?;\n+        write!(w, \"<h2 id='fields' class='fields small-section-header'>\n+                   Fields<a href='#fields' class='anchor'></a></h2>\")?;\n         for (field, ty) in fields {\n             write!(w, \"<span id='{shortty}.{name}' class=\\\"{shortty}\\\"><code>{name}: {ty}</code>\n                        </span>\",\n@@ -2558,8 +2558,8 @@ fn item_enum(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n \n     document(w, cx, it)?;\n     if !e.variants.is_empty() {\n-        write!(w, \"<h2 id='variants' class='variants section-header'>\n-                   <a href='#variants'>Variants</a></h2>\\n\")?;\n+        write!(w, \"<h2 id='variants' class='variants small-section-header'>\n+                   Variants<a href='#variants' class='anchor'></a></h2>\\n\")?;\n         for variant in &e.variants {\n             let id = derive_id(format!(\"{}.{}\",\n                                        ItemType::Variant,\n@@ -2831,16 +2831,16 @@ fn render_assoc_items(w: &mut fmt::Formatter,\n         let render_mode = match what {\n             AssocItemRender::All => {\n                 write!(w, \"\n-                    <h2 id='methods' class='section-header'>\n-                      <a href='#methods'>Methods</a>\n+                    <h2 id='methods' class='small-section-header'>\n+                      Methods<a href='#methods' class='anchor'></a>\n                     </h2>\n                 \")?;\n                 RenderMode::Normal\n             }\n             AssocItemRender::DerefFor { trait_, type_, deref_mut_ } => {\n                 write!(w, \"\n-                    <h2 id='deref-methods' class='section-header'>\n-                      <a href='#deref-methods'>Methods from {}&lt;Target = {}&gt;</a>\n+                    <h2 id='deref-methods' class='small-section-header'>\n+                      Methods from {}&lt;Target = {}&gt;<a href='#deref-methods' class='anchor'></a>\n                     </h2>\n                 \", trait_, type_)?;\n                 RenderMode::ForDeref { mut_: deref_mut_ }\n@@ -2865,8 +2865,8 @@ fn render_assoc_items(w: &mut fmt::Formatter,\n             render_deref_methods(w, cx, impl_, containing_item, has_deref_mut)?;\n         }\n         write!(w, \"\n-            <h2 id='implementations' class='section-header'>\n-              <a href='#implementations'>Trait Implementations</a>\n+            <h2 id='implementations' class='small-section-header'>\n+              Trait Implementations<a href='#implementations' class='anchor'></a>\n             </h2>\n         \")?;\n         for i in &traits {"}, {"sha": "24c0ec04fa182644e8075838af2b4c3714d129af", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8ac43366929e2ea66abbf0fc8fe535ecfbea0262/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/8ac43366929e2ea66abbf0fc8fe535ecfbea0262/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=8ac43366929e2ea66abbf0fc8fe535ecfbea0262", "patch": "@@ -438,6 +438,16 @@ a {\n \tbackground: transparent;\n }\n \n+.small-section-header:hover > .anchor {\n+\tdisplay: initial;\n+}\n+.anchor {\n+\tdisplay: none;\n+}\n+.anchor:after {\n+\tcontent: '\\2002\\00a7\\2002';\n+}\n+\n .docblock a:hover, .docblock-short a:hover, .stability a {\n \ttext-decoration: underline;\n }"}]}