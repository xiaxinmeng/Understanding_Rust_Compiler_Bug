{"sha": "da0b9b6485585a3557e882acbf5054e826625031", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMGI5YjY0ODU1ODVhMzU1N2U4ODJhY2JmNTA1NGU4MjY2MjUwMzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-09T16:22:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-09T16:22:23Z"}, "message": "Auto merge of #81942 - the8472:reduce-ui-test-threads, r=Mark-Simulacrum\n\nreduce threads spawned by ui-tests\n\nThe test harness already spawns enough tests to keep all cores busy.\nIndividual tests should keep their own threading to a minimum to avoid context switch overhead.\n\nWhen running ui tests with lld enabled this shaves about 10% off that testsuite on my machine.\n\nResolves #81946", "tree": {"sha": "55d63cae2845cc91ff9a1b191f6e7905da78c8c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55d63cae2845cc91ff9a1b191f6e7905da78c8c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da0b9b6485585a3557e882acbf5054e826625031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da0b9b6485585a3557e882acbf5054e826625031", "html_url": "https://github.com/rust-lang/rust/commit/da0b9b6485585a3557e882acbf5054e826625031", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da0b9b6485585a3557e882acbf5054e826625031/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e43c2005f250b51e24d294da0b228e0a2dc4d9b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43c2005f250b51e24d294da0b228e0a2dc4d9b2", "html_url": "https://github.com/rust-lang/rust/commit/e43c2005f250b51e24d294da0b228e0a2dc4d9b2"}, {"sha": "27868700ec1e1fede8e94cfe704a9a8939bba32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/27868700ec1e1fede8e94cfe704a9a8939bba32f", "html_url": "https://github.com/rust-lang/rust/commit/27868700ec1e1fede8e94cfe704a9a8939bba32f"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "b9d7ecf8c0eb16888ff63242e4fa12645216c420", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -1232,13 +1232,15 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n         hostflags.push(format!(\"-Lnative={}\", builder.test_helpers_out(compiler.host).display()));\n         if builder.is_fuse_ld_lld(compiler.host) {\n             hostflags.push(\"-Clink-args=-fuse-ld=lld\".to_string());\n+            hostflags.push(\"-Clink-arg=-Wl,--threads=1\".to_string());\n         }\n         cmd.arg(\"--host-rustcflags\").arg(hostflags.join(\" \"));\n \n         let mut targetflags = flags;\n         targetflags.push(format!(\"-Lnative={}\", builder.test_helpers_out(target).display()));\n         if builder.is_fuse_ld_lld(target) {\n             targetflags.push(\"-Clink-args=-fuse-ld=lld\".to_string());\n+            targetflags.push(\"-Clink-arg=-Wl,--threads=1\".to_string());\n         }\n         cmd.arg(\"--target-rustcflags\").arg(targetflags.join(\" \"));\n "}, {"sha": "18be201d640c45a89bd5f6b62816a78748c93362", "filename": "src/test/ui/asm/sym.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fsym.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -1,4 +1,6 @@\n // min-llvm-version: 10.0.1\n+// FIXME(#84025): codegen-units=1 leads to linkage errors\n+// compile-flags: -C codegen-units=2\n // only-x86_64\n // only-linux\n // run-pass"}, {"sha": "7b731a1d71da30ca45626e075a34f80fce05f9f0", "filename": "src/test/ui/extern/issue-64655-allow-unwind-when-calling-panic-directly.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fextern%2Fissue-64655-allow-unwind-when-calling-panic-directly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fextern%2Fissue-64655-allow-unwind-when-calling-panic-directly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fissue-64655-allow-unwind-when-calling-panic-directly.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -19,7 +19,9 @@\n \n // revisions: no thin fat\n //[no]compile-flags: -C lto=no\n-//[thin]compile-flags: -C lto=thin\n+// FIXME(#83854) running this revision with 1 CGU triggers llvm assert in register allocator\n+//  when executed in i686-gnu-nopt runner.\n+//[thin]compile-flags: -C lto=thin -Ccodegen-units=2\n //[fat]compile-flags: -C lto=fat\n \n #![feature(core_panic)]"}, {"sha": "32e6d0c90b255ffe33bea1e074c424cbffb37b97", "filename": "src/test/ui/extern/issue-64655-extern-rust-must-allow-unwind.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fextern%2Fissue-64655-extern-rust-must-allow-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fextern%2Fissue-64655-extern-rust-must-allow-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fissue-64655-extern-rust-must-allow-unwind.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -40,7 +40,9 @@\n //[no1]compile-flags: -C opt-level=1 -C lto=no\n //[no2]compile-flags: -C opt-level=2 -C lto=no\n //[no3]compile-flags: -C opt-level=3 -C lto=no\n-//[thin0]compile-flags: -C opt-level=0 -C lto=thin\n+// FIXME(#83854) running this revision with 1 CGU triggers llvm assert in register allocator\n+//  when executed in dist-i586-gnu-i586-i686-musl runner.\n+//[thin0]compile-flags: -C opt-level=0 -C lto=thin -Ccodegen-units=2\n //[thin1]compile-flags: -C opt-level=1 -C lto=thin\n //[thin2]compile-flags: -C opt-level=2 -C lto=thin\n //[thin3]compile-flags: -C opt-level=3 -C lto=thin"}, {"sha": "e04dec24e445e9d1e625f715cf0a4e958adca493", "filename": "src/test/ui/issues/issue-69225-SCEVAddExpr-wrap-flag.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fissues%2Fissue-69225-SCEVAddExpr-wrap-flag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fissues%2Fissue-69225-SCEVAddExpr-wrap-flag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69225-SCEVAddExpr-wrap-flag.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -1,5 +1,6 @@\n // run-fail\n // compile-flags: -C opt-level=3\n+// min-llvm-version: 11.0\n // error-pattern: index out of bounds: the len is 0 but the index is 16777216\n // ignore-wasm no panic or subprocess support\n // ignore-emscripten no panic or subprocess support"}, {"sha": "3a0910658b7a9f1a45edd1f2c9ab77fea461107d", "filename": "src/test/ui/linkage-attr/linkage-detect-extern-generated-name-collision.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -4,6 +4,8 @@\n \n // build-fail\n // aux-build:def_colliding_external.rs\n+// FIXME(#83838) codegen-units=1 triggers llvm asserts\n+// compile-flags: -Ccodegen-units=16\n \n extern crate def_colliding_external as dep1;\n "}, {"sha": "c1df9ccef22737772036b1e2e11847fa421936c4", "filename": "src/test/ui/linkage-attr/linkage-detect-local-generated-name-collision.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -1,5 +1,6 @@\n // build-fail\n-\n+// FIXME(#83838) codegen-units=1 triggers llvm asserts\n+// compile-flags: -Ccodegen-units=16\n #![feature(linkage)]\n \n mod dep1 {"}, {"sha": "7e395e67378f8f58362db8719bd6118b527ed882", "filename": "src/test/ui/linkage-attr/linkage-detect-local-generated-name-collision.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.stderr?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -1,5 +1,5 @@\n error: symbol `collision` is already defined\n-  --> $DIR/linkage-detect-local-generated-name-collision.rs:9:9\n+  --> $DIR/linkage-detect-local-generated-name-collision.rs:10:9\n    |\n LL |         pub static collision: *const i32;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "88769b7cb4554562bf54b12e6f087eee82fb5d9e", "filename": "src/test/ui/sanitize/hwaddress.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fsanitize%2Fhwaddress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftest%2Fui%2Fsanitize%2Fhwaddress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Fhwaddress.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -1,7 +1,8 @@\n // needs-sanitizer-support\n // needs-sanitizer-hwaddress\n //\n-// compile-flags: -Z sanitizer=hwaddress -O -g\n+// FIXME(#83989): codegen-units=1 triggers linker errors on aarch64-gnu\n+// compile-flags: -Z sanitizer=hwaddress -O -g -C codegen-units=16\n //\n // run-fail\n // error-pattern: HWAddressSanitizer: tag-mismatch"}, {"sha": "ecbaccf744dcdd3d61b41b25b6ed82d66c282022", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0b9b6485585a3557e882acbf5054e826625031/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=da0b9b6485585a3557e882acbf5054e826625031", "patch": "@@ -1951,6 +1951,7 @@ impl<'test> TestCx<'test> {\n                 if !self.props.compile_flags.iter().any(|s| s.starts_with(\"--error-format\")) {\n                     rustc.args(&[\"--error-format\", \"json\"]);\n                 }\n+                rustc.arg(\"-Ccodegen-units=1\");\n                 rustc.arg(\"-Zui-testing\");\n                 rustc.arg(\"-Zdeduplicate-diagnostics=no\");\n                 rustc.arg(\"-Zemit-future-incompat-report\");"}]}