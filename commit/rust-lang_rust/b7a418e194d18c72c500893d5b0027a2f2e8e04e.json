{"sha": "b7a418e194d18c72c500893d5b0027a2f2e8e04e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YTQxOGUxOTRkMThjNzJjNTAwODkzZDViMDAyN2EyZjJlOGUwNGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-09T21:02:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-09T21:09:03Z"}, "message": "rustc: Conditionally compile view items. #2357", "tree": {"sha": "b99f42d00f0d459afa7b46bde8c13b70a8adb0b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b99f42d00f0d459afa7b46bde8c13b70a8adb0b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7a418e194d18c72c500893d5b0027a2f2e8e04e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7a418e194d18c72c500893d5b0027a2f2e8e04e", "html_url": "https://github.com/rust-lang/rust/commit/b7a418e194d18c72c500893d5b0027a2f2e8e04e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7a418e194d18c72c500893d5b0027a2f2e8e04e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b399afa89d8d346b095af444f73d99d62e4f3ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b399afa89d8d346b095af444f73d99d62e4f3ad", "html_url": "https://github.com/rust-lang/rust/commit/3b399afa89d8d346b095af444f73d99d62e4f3ad"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "a5e8f54ad650f1330a4b42f6c734277435986c84", "filename": "src/rustc/front/config.rs", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b7a418e194d18c72c500893d5b0027a2f2e8e04e/src%2Frustc%2Ffront%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7a418e194d18c72c500893d5b0027a2f2e8e04e/src%2Frustc%2Ffront%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Ffront%2Fconfig.rs?ref=b7a418e194d18c72c500893d5b0027a2f2e8e04e", "patch": "@@ -39,11 +39,22 @@ fn filter_item(cx: ctxt, &&item: @ast::item) ->\n     if item_in_cfg(cx, item) { option::some(item) } else { option::none }\n }\n \n+fn filter_view_item(cx: ctxt, &&view_item: @ast::view_item\n+                   )-> option<@ast::view_item> {\n+    if view_item_in_cfg(cx, view_item) {\n+        option::some(view_item)\n+    } else {\n+        option::none\n+    }\n+}\n+\n fn fold_mod(cx: ctxt, m: ast::_mod, fld: fold::ast_fold) ->\n    ast::_mod {\n-    let filter = |a| filter_item(cx, a);\n-    let filtered_items = vec::filter_map(m.items, filter);\n-    ret {view_items: vec::map(m.view_items, fld.fold_view_item),\n+    let item_filter = |a| filter_item(cx, a);\n+    let filtered_items = vec::filter_map(m.items, item_filter);\n+    let view_item_filter = |a| filter_view_item(cx, a);\n+    let filtered_view_items = vec::filter_map(m.view_items, view_item_filter);\n+    ret {view_items: vec::map(filtered_view_items, fld.fold_view_item),\n          items: vec::map(filtered_items, fld.fold_item)};\n }\n \n@@ -56,9 +67,12 @@ fn filter_foreign_item(cx: ctxt, &&item: @ast::foreign_item) ->\n \n fn fold_foreign_mod(cx: ctxt, nm: ast::foreign_mod,\n                    fld: fold::ast_fold) -> ast::foreign_mod {\n-    let filter = |a| filter_foreign_item(cx, a);\n-    let filtered_items = vec::filter_map(nm.items, filter);\n-    ret {view_items: vec::map(nm.view_items, fld.fold_view_item),\n+    let item_filter = |a| filter_foreign_item(cx, a);\n+    let filtered_items = vec::filter_map(nm.items, item_filter);\n+    let view_item_filter = |a| filter_view_item(cx, a);\n+    let filtered_view_items = vec::filter_map(\n+        nm.view_items, view_item_filter);\n+    ret {view_items: vec::map(filtered_view_items, fld.fold_view_item),\n          items: filtered_items};\n }\n \n@@ -98,6 +112,10 @@ fn foreign_item_in_cfg(cx: ctxt, item: @ast::foreign_item) -> bool {\n     ret cx.in_cfg(item.attrs);\n }\n \n+fn view_item_in_cfg(cx: ctxt, item: @ast::view_item) -> bool {\n+    ret cx.in_cfg(item.attrs);\n+}\n+\n // Determine if an item should be translated in the current crate\n // configuration based on the item's attributes\n fn in_cfg(cfg: ast::crate_cfg, attrs: ~[ast::attribute]) -> bool {"}, {"sha": "8e99ca0da123af5b28cac72fdabd886986d9eaa8", "filename": "src/test/run-pass/conditional-compile.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7a418e194d18c72c500893d5b0027a2f2e8e04e/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7a418e194d18c72c500893d5b0027a2f2e8e04e/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-compile.rs?ref=b7a418e194d18c72c500893d5b0027a2f2e8e04e", "patch": "@@ -87,3 +87,13 @@ mod test_foreign_items {\n         fn vec_from_buf_shared();\n     }\n }\n+\n+mod test_use_statements {\n+    #[cfg(bogus)]\n+    use flippity_foo;\n+\n+    extern mod rustrt {\n+        #[cfg(bogus)]\n+        use flippity_foo;\n+    }\n+}\n\\ No newline at end of file"}]}