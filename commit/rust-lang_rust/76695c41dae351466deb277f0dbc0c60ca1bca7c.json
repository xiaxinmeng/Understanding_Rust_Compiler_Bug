{"sha": "76695c41dae351466deb277f0dbc0c60ca1bca7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2Njk1YzQxZGFlMzUxNDY2ZGViMjc3ZjBkYmMwYzYwY2ExYmNhN2M=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-05-31T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-05-31T00:00:00Z"}, "message": "Remove special handling of `box_free` from `LocalAnalyzer`\n\nThe special casing of `box_free` predates the use of dominators in\nanalyzer. It is no longer necessary now that analyzer verifies that\nthe first assignment dominates all uses.", "tree": {"sha": "792959881b397364ad7e7e53c98586e7e8a6f76a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/792959881b397364ad7e7e53c98586e7e8a6f76a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76695c41dae351466deb277f0dbc0c60ca1bca7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76695c41dae351466deb277f0dbc0c60ca1bca7c", "html_url": "https://github.com/rust-lang/rust/commit/76695c41dae351466deb277f0dbc0c60ca1bca7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76695c41dae351466deb277f0dbc0c60ca1bca7c/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a3dce99f6ee4fd1ae317fe486b214dad7f4c1ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3dce99f6ee4fd1ae317fe486b214dad7f4c1ee", "html_url": "https://github.com/rust-lang/rust/commit/6a3dce99f6ee4fd1ae317fe486b214dad7f4c1ee"}], "stats": {"total": 29, "additions": 0, "deletions": 29}, "files": [{"sha": "e7e085d90184a1ca11065aa3e78024e02dcd089d", "filename": "compiler/rustc_codegen_ssa/src/mir/analyze.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/76695c41dae351466deb277f0dbc0c60ca1bca7c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76695c41dae351466deb277f0dbc0c60ca1bca7c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs?ref=76695c41dae351466deb277f0dbc0c60ca1bca7c", "patch": "@@ -11,7 +11,6 @@ use rustc_middle::mir::visit::{\n     MutatingUseContext, NonMutatingUseContext, NonUseContext, PlaceContext, Visitor,\n };\n use rustc_middle::mir::{self, Location, TerminatorKind};\n-use rustc_middle::ty;\n use rustc_middle::ty::layout::HasTyCtxt;\n use rustc_target::abi::LayoutOf;\n \n@@ -228,34 +227,6 @@ impl<'mir, 'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> Visitor<'tcx>\n         self.visit_rvalue(rvalue, location);\n     }\n \n-    fn visit_terminator(&mut self, terminator: &mir::Terminator<'tcx>, location: Location) {\n-        let check = match terminator.kind {\n-            mir::TerminatorKind::Call { func: mir::Operand::Constant(ref c), ref args, .. } => {\n-                match *c.ty().kind() {\n-                    ty::FnDef(did, _) => Some((did, args)),\n-                    _ => None,\n-                }\n-            }\n-            _ => None,\n-        };\n-        if let Some((def_id, args)) = check {\n-            if Some(def_id) == self.fx.cx.tcx().lang_items().box_free_fn() {\n-                // box_free(x) shares with `drop x` the property that it\n-                // is not guaranteed to be statically dominated by the\n-                // definition of x, so x must always be in an alloca.\n-                if let mir::Operand::Move(ref place) = args[0] {\n-                    self.visit_place(\n-                        place,\n-                        PlaceContext::MutatingUse(MutatingUseContext::Drop),\n-                        location,\n-                    );\n-                }\n-            }\n-        }\n-\n-        self.super_terminator(terminator, location);\n-    }\n-\n     fn visit_place(&mut self, place: &mir::Place<'tcx>, context: PlaceContext, location: Location) {\n         debug!(\"visit_place(place={:?}, context={:?})\", place, context);\n         self.process_place(&place.as_ref(), context, location);"}]}