{"sha": "ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7", "node_id": "C_kwDOAAsO6NoAKGVhMTMwMjNiMzY3ZDU2YWMzYThmY2I3MmM5YmJlNjM2Y2Y5YWUxZTc", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-14T11:44:25Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-14T11:44:25Z"}, "message": "Allocate one less vec in `parser/expr.rs`", "tree": {"sha": "d46f5bb2336427693efe1bc4d3c7cb3bcca5666e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d46f5bb2336427693efe1bc4d3c7cb3bcca5666e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7", "html_url": "https://github.com/rust-lang/rust/commit/ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ca6f7d2c34953ee360ccf7d3c84c7853ea2df4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca6f7d2c34953ee360ccf7d3c84c7853ea2df4b", "html_url": "https://github.com/rust-lang/rust/commit/5ca6f7d2c34953ee360ccf7d3c84c7853ea2df4b"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "9995b21486170f852d191e5e69cc75fd6179a368", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=ea13023b367d56ac3a8fcb72c9bbe636cf9ae1e7", "patch": "@@ -1471,9 +1471,8 @@ impl<'a> Parser<'a> {\n             } else if self.eat(&token::Comma) {\n                 // Vector with two or more elements.\n                 let sep = SeqSep::trailing_allowed(token::Comma);\n-                let (remaining_exprs, _) = self.parse_seq_to_end(close, sep, |p| p.parse_expr())?;\n-                let mut exprs = vec![first_expr];\n-                exprs.extend(remaining_exprs);\n+                let (mut exprs, _) = self.parse_seq_to_end(close, sep, |p| p.parse_expr())?;\n+                exprs.insert(0, first_expr);\n                 ExprKind::Array(exprs)\n             } else {\n                 // Vector with one element"}]}