{"sha": "2d8c7fd096c4b1551945e22b00266586a929b39c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkOGM3ZmQwOTZjNGIxNTUxOTQ1ZTIyYjAwMjY2NTg2YTkyOWIzOWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-02T01:49:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-02T02:16:09Z"}, "message": "syntax: Remove 'ret'", "tree": {"sha": "3f8d2e1c4c24c167ed08d08ea306202b4f443232", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f8d2e1c4c24c167ed08d08ea306202b4f443232"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d8c7fd096c4b1551945e22b00266586a929b39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8c7fd096c4b1551945e22b00266586a929b39c", "html_url": "https://github.com/rust-lang/rust/commit/2d8c7fd096c4b1551945e22b00266586a929b39c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d8c7fd096c4b1551945e22b00266586a929b39c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b355936b4da0831f47afe8f251daee503c8caa32", "url": "https://api.github.com/repos/rust-lang/rust/commits/b355936b4da0831f47afe8f251daee503c8caa32", "html_url": "https://github.com/rust-lang/rust/commit/b355936b4da0831f47afe8f251daee503c8caa32"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "06c0a6edc21d03ddb9c8a09d03f0d76fd4d68e57", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d8c7fd096c4b1551945e22b00266586a929b39c/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8c7fd096c4b1551945e22b00266586a929b39c/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2d8c7fd096c4b1551945e22b00266586a929b39c", "patch": "@@ -839,7 +839,7 @@ class parser {\n             let e = self.parse_expr();\n             ex = expr_assert(e);\n             hi = e.span.hi;\n-        } else if self.eat_keyword(~\"ret\") || self.eat_keyword(~\"return\") {\n+        } else if self.eat_keyword(~\"return\") {\n             if can_begin_expr(self.token) {\n                 let e = self.parse_expr();\n                 hi = e.span.hi;"}]}