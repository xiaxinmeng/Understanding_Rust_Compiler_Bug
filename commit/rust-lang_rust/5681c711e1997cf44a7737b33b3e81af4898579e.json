{"sha": "5681c711e1997cf44a7737b33b3e81af4898579e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ODFjNzExZTE5OTdjZjQ0YTc3MzdiMzNiM2U4MWFmNDg5ODU3OWU=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@composition.al", "date": "2014-01-02T17:52:00Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@composition.al", "date": "2014-01-06T03:03:12Z"}, "message": "Wording tweak suggested by @pcwalton.", "tree": {"sha": "6f4614dcca63dd914440e9e0905f57c0f849ba25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f4614dcca63dd914440e9e0905f57c0f849ba25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5681c711e1997cf44a7737b33b3e81af4898579e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5681c711e1997cf44a7737b33b3e81af4898579e", "html_url": "https://github.com/rust-lang/rust/commit/5681c711e1997cf44a7737b33b3e81af4898579e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5681c711e1997cf44a7737b33b3e81af4898579e/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62b74d9890ed92e55166088c0bc128d6e72e2810", "url": "https://api.github.com/repos/rust-lang/rust/commits/62b74d9890ed92e55166088c0bc128d6e72e2810", "html_url": "https://github.com/rust-lang/rust/commit/62b74d9890ed92e55166088c0bc128d6e72e2810"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "928815b8298afac29c1708c84ea599547c7d1d66", "filename": "doc/tutorial.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5681c711e1997cf44a7737b33b3e81af4898579e/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/5681c711e1997cf44a7737b33b3e81af4898579e/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=5681c711e1997cf44a7737b33b3e81af4898579e", "patch": "@@ -2080,9 +2080,10 @@ fn head<T: Clone>(v: &[T]) -> T {\n }\n ~~~~\n \n-The bounded type parameter `T: Clone` says that `head` is polymorphic\n-over any type `T`, so long as there is an implementation of the\n-`Clone` trait for that type.\n+The bounded type parameter `T: Clone` says that `head`\n+can be called on an argument of type `&[T]` for any `T`,\n+so long as there is an implementation of the\n+`Clone` trait for `T`.\n When instantiating a generic function,\n we can only instantiate it with types\n that implement the correct trait,"}]}