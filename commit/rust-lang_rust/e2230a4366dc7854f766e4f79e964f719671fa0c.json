{"sha": "e2230a4366dc7854f766e4f79e964f719671fa0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMjMwYTQzNjZkYzc4NTRmNzY2ZTRmNzllOTY0ZjcxOTY3MWZhMGM=", "commit": {"author": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-12-02T18:37:24Z"}, "committer": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-12-06T10:50:02Z"}, "message": "appease the vociferous tidy", "tree": {"sha": "d993ac4ee7c8617bd1779cca18d0e1f4bcd20d81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d993ac4ee7c8617bd1779cca18d0e1f4bcd20d81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2230a4366dc7854f766e4f79e964f719671fa0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2230a4366dc7854f766e4f79e964f719671fa0c", "html_url": "https://github.com/rust-lang/rust/commit/e2230a4366dc7854f766e4f79e964f719671fa0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2230a4366dc7854f766e4f79e964f719671fa0c/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "720716f9d08094e66581ce069caaa500ee4e04e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/720716f9d08094e66581ce069caaa500ee4e04e6", "html_url": "https://github.com/rust-lang/rust/commit/720716f9d08094e66581ce069caaa500ee4e04e6"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "0c2e2320bf984807271840caea2c16f532ee66fd", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2230a4366dc7854f766e4f79e964f719671fa0c/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2230a4366dc7854f766e4f79e964f719671fa0c/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=e2230a4366dc7854f766e4f79e964f719671fa0c", "patch": "@@ -235,7 +235,10 @@ pub(in crate::borrow_check) fn compute_regions<'cx, 'tcx>(\n         //  `known_subset` facts.\n         for (fr1, fr2) in universal_region_relations.known_outlives() {\n             if fr1 != fr2 {\n-                debug!(\"compute_regions: emitting polonius `known_subset` fr1={:?}, fr2={:?}\", fr1, fr2);\n+                debug!(\n+                    \"compute_regions: emitting polonius `known_subset` fr1={:?}, fr2={:?}\",\n+                    fr1, fr2\n+                );\n                 all_facts.known_subset.push((*fr1, *fr2));\n             }\n         }\n@@ -314,8 +317,15 @@ pub(in crate::borrow_check) fn compute_regions<'cx, 'tcx>(\n     });\n \n     // Solve the region constraints.\n-    let closure_region_requirements =\n-        regioncx.solve(infcx, &body, local_names, upvars, def_id, errors_buffer, polonius_output.clone());\n+    let closure_region_requirements = regioncx.solve(\n+        infcx,\n+        &body,\n+        local_names,\n+        upvars,\n+        def_id,\n+        errors_buffer,\n+        polonius_output.clone(),\n+    );\n \n     // Dump MIR results into a file, if that is enabled. This let us\n     // write unit-tests, as well as helping with debugging."}, {"sha": "8d0f1b8e24a6be69f99ddde35f84c458d0bcd01a", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e2230a4366dc7854f766e4f79e964f719671fa0c/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2230a4366dc7854f766e4f79e964f719671fa0c/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=e2230a4366dc7854f766e4f79e964f719671fa0c", "patch": "@@ -1426,7 +1426,10 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         region_naming: &mut RegionErrorNamingCtx,\n         polonius_output: Rc<PoloniusOutput>,\n     ) {\n-        debug!(\"check_polonius_subset_errors: {} subset_errors\", polonius_output.subset_errors.len());\n+        debug!(\n+            \"check_polonius_subset_errors: {} subset_errors\",\n+            polonius_output.subset_errors.len()\n+        );\n \n         let mut outlives_suggestion = OutlivesSuggestionBuilder::new(mir_def_id, local_names);\n \n@@ -1647,10 +1650,12 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 // Grow `shorter_fr` until we find some non-local regions. (We\n                 // always will.)  We'll call them `shorter_fr+` -- they're ever\n                 // so slightly larger than `shorter_fr`.\n-                let shorter_fr_plus =\n-                    self.universal_region_relations.non_local_upper_bounds(&shorter_fr);\n+                let shorter_fr_plus = self\n+                    .universal_region_relations\n+                    .non_local_upper_bounds(&shorter_fr);\n                 debug!(\n-                    \"report_or_propagate_universal_region_error: shorter_fr_plus={:?}\", shorter_fr_plus\n+                    \"report_or_propagate_universal_region_error: shorter_fr_plus={:?}\",\n+                    shorter_fr_plus\n                 );\n                 for &&fr in &shorter_fr_plus {\n                     // Push the constraint `fr-: shorter_fr+`"}]}