{"sha": "c2cf34db90e48de6e8a10da7959a4c49f95e1ff6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyY2YzNGRiOTBlNDhkZTZlOGExMGRhNzk1OWE0YzQ5Zjk1ZTFmZjY=", "commit": {"author": {"name": "m5tfi", "email": "72708423+m5tfi@users.noreply.github.com", "date": "2021-05-05T04:27:16Z"}, "committer": {"name": "m5tfi", "email": "72708423+m5tfi@users.noreply.github.com", "date": "2021-05-05T04:28:41Z"}, "message": "remove unneeded `visited_where_clauses`", "tree": {"sha": "e515edd93076d0f48d46b8f936ca2559d39ac32d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e515edd93076d0f48d46b8f936ca2559d39ac32d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2cf34db90e48de6e8a10da7959a4c49f95e1ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2cf34db90e48de6e8a10da7959a4c49f95e1ff6", "html_url": "https://github.com/rust-lang/rust/commit/c2cf34db90e48de6e8a10da7959a4c49f95e1ff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2cf34db90e48de6e8a10da7959a4c49f95e1ff6/comments", "author": {"login": "m5tfi", "id": 72708423, "node_id": "MDQ6VXNlcjcyNzA4NDIz", "avatar_url": "https://avatars.githubusercontent.com/u/72708423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m5tfi", "html_url": "https://github.com/m5tfi", "followers_url": "https://api.github.com/users/m5tfi/followers", "following_url": "https://api.github.com/users/m5tfi/following{/other_user}", "gists_url": "https://api.github.com/users/m5tfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/m5tfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m5tfi/subscriptions", "organizations_url": "https://api.github.com/users/m5tfi/orgs", "repos_url": "https://api.github.com/users/m5tfi/repos", "events_url": "https://api.github.com/users/m5tfi/events{/privacy}", "received_events_url": "https://api.github.com/users/m5tfi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m5tfi", "id": 72708423, "node_id": "MDQ6VXNlcjcyNzA4NDIz", "avatar_url": "https://avatars.githubusercontent.com/u/72708423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m5tfi", "html_url": "https://github.com/m5tfi", "followers_url": "https://api.github.com/users/m5tfi/followers", "following_url": "https://api.github.com/users/m5tfi/following{/other_user}", "gists_url": "https://api.github.com/users/m5tfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/m5tfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m5tfi/subscriptions", "organizations_url": "https://api.github.com/users/m5tfi/orgs", "repos_url": "https://api.github.com/users/m5tfi/repos", "events_url": "https://api.github.com/users/m5tfi/events{/privacy}", "received_events_url": "https://api.github.com/users/m5tfi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5778ab1e41b48371cf3100a397a138deda3f73f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5778ab1e41b48371cf3100a397a138deda3f73f5", "html_url": "https://github.com/rust-lang/rust/commit/5778ab1e41b48371cf3100a397a138deda3f73f5"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "a03988778324fc54fbddd5f80a3fad2123e4d2a1", "filename": "crates/ide/src/folding_ranges.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c2cf34db90e48de6e8a10da7959a4c49f95e1ff6/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2cf34db90e48de6e8a10da7959a4c49f95e1ff6/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffolding_ranges.rs?ref=c2cf34db90e48de6e8a10da7959a4c49f95e1ff6", "patch": "@@ -36,7 +36,6 @@ pub(crate) fn folding_ranges(file: &SourceFile) -> Vec<Fold> {\n     let mut visited_mods = FxHashSet::default();\n     let mut visited_consts = FxHashSet::default();\n     let mut visited_statics = FxHashSet::default();\n-    let mut visited_where_clauses = FxHashSet::default();\n     // regions can be nested, here is a LIFO buffer\n     let mut regions_starts: Vec<TextSize> = vec![];\n \n@@ -113,10 +112,8 @@ pub(crate) fn folding_ranges(file: &SourceFile) -> Vec<Fold> {\n                 }\n \n                 // Fold where clause\n-                if node.kind() == WHERE_CLAUSE && !visited_where_clauses.contains(&node) {\n-                    if let Some(range) =\n-                        contiguous_range_for_where(&node, &mut visited_where_clauses)\n-                    {\n+                if node.kind() == WHERE_CLAUSE {\n+                    if let Some(range) = fold_range_for_where_clause(&node) {\n                         res.push(Fold { range, kind: FoldKind::WhereClause })\n                     }\n                 }\n@@ -252,10 +249,7 @@ fn contiguous_range_for_comment(\n     }\n }\n \n-fn contiguous_range_for_where(\n-    node: &SyntaxNode,\n-    visited: &mut FxHashSet<SyntaxNode>,\n-) -> Option<TextRange> {\n+fn fold_range_for_where_clause(node: &SyntaxNode) -> Option<TextRange> {\n     let first_where_pred = node.first_child();\n     let last_where_pred = node.last_child();\n \n@@ -266,8 +260,6 @@ fn contiguous_range_for_where(\n         {\n             let start = where_kw.text_range().end();\n             let end = last_comma.text_range().end();\n-\n-            visited.insert(node.clone());\n             return Some(TextRange::new(start, end));\n         }\n     }"}]}