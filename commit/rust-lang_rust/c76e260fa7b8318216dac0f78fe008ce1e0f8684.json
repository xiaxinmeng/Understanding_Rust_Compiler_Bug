{"sha": "c76e260fa7b8318216dac0f78fe008ce1e0f8684", "node_id": "C_kwDOAAsO6NoAKGM3NmUyNjBmYTdiODMxODIxNmRhYzBmNzhmZTAwOGNlMWUwZjg2ODQ", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-03-05T13:21:41Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-03-18T05:38:16Z"}, "message": "Use named threads in tidy\n\nThis makes it easier to profile.", "tree": {"sha": "21beae593ab1e1dbea3323c93269850b12418ff1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21beae593ab1e1dbea3323c93269850b12418ff1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c76e260fa7b8318216dac0f78fe008ce1e0f8684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c76e260fa7b8318216dac0f78fe008ce1e0f8684", "html_url": "https://github.com/rust-lang/rust/commit/c76e260fa7b8318216dac0f78fe008ce1e0f8684", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c76e260fa7b8318216dac0f78fe008ce1e0f8684/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13afbdaa0655dda23d7129e59ac48f1ec88b2084", "url": "https://api.github.com/repos/rust-lang/rust/commits/13afbdaa0655dda23d7129e59ac48f1ec88b2084", "html_url": "https://github.com/rust-lang/rust/commit/13afbdaa0655dda23d7129e59ac48f1ec88b2084"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "ced1c024015231ef7cdf7b8c4c568c12072cf549", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c76e260fa7b8318216dac0f78fe008ce1e0f8684/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c76e260fa7b8318216dac0f78fe008ce1e0f8684/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=c76e260fa7b8318216dac0f78fe008ce1e0f8684", "patch": "@@ -13,7 +13,7 @@ use std::path::PathBuf;\n use std::process;\n use std::str::FromStr;\n use std::sync::atomic::{AtomicBool, Ordering};\n-use std::thread::{scope, ScopedJoinHandle};\n+use std::thread::{self, scope, ScopedJoinHandle};\n \n fn main() {\n     let root_path: PathBuf = env::args_os().nth(1).expect(\"need path to root of repo\").into();\n@@ -55,16 +55,28 @@ fn main() {\n             VecDeque::with_capacity(concurrency.get());\n \n         macro_rules! check {\n-            ($p:ident $(, $args:expr)* ) => {\n+            ($p:ident) => {\n+                check!(@ $p, name=format!(\"{}\", stringify!($p)));\n+            };\n+            ($p:ident, $path:expr $(, $args:expr)* ) => {\n+                let shortened = $path.strip_prefix(&root_path).unwrap();\n+                let name = if shortened == std::path::Path::new(\"\") {\n+                    format!(\"{} (.)\", stringify!($p))\n+                } else {\n+                    format!(\"{} ({})\", stringify!($p), shortened.display())\n+                };\n+                check!(@ $p, name=name, $path $(,$args)*);\n+            };\n+            (@ $p:ident, name=$name:expr $(, $args:expr)* ) => {\n                 drain_handles(&mut handles);\n \n-                let handle = s.spawn(|| {\n+                let handle = thread::Builder::new().name($name).spawn_scoped(s, || {\n                     let mut flag = false;\n                     $p::check($($args, )* &mut flag);\n                     if (flag) {\n                         bad.store(true, Ordering::Relaxed);\n                     }\n-                });\n+                }).unwrap();\n                 handles.push_back(handle);\n             }\n         }"}]}