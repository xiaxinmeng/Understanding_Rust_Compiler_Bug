{"sha": "609d9a0108d4e6d79279fc6c5901eb5041c7aac7", "node_id": "C_kwDOAAsO6NoAKDYwOWQ5YTAxMDhkNGU2ZDc5Mjc5ZmM2YzU5MDFlYjUwNDFjN2FhYzc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-05T14:04:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-05T14:04:21Z"}, "message": "Rollup merge of #91450 - hkmatsumoto:hide-type-error, r=estebank\n\nDon't suggest types whose inner type is erroneous\n\nCurrently, we check if the returned type equals to `tcx.ty_error()` not to emit\nerroneous types, but this has a pitfall; for example,\n`Option<[type error]> != tcx.ty_error()` holds.\n\nFixes #91371.", "tree": {"sha": "5eacc1fa67208fe3aff54a7e30b1432808a90567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eacc1fa67208fe3aff54a7e30b1432808a90567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/609d9a0108d4e6d79279fc6c5901eb5041c7aac7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrMbmCRBK7hj4Ov3rIwAABdYIACoh8bbVyWXv9O0mAcDZdQAK\nqqe3C8qYwYBg/4ckN8UFK4z447p/FJlpOuph6JcoQ3+MRXFoAorb2T8qL2DJsZLt\nghj+upirNAEIztHUpJoR0ouW7kcxqDyzdIFY3ziAhj85yItIUgIOvbeNZ3mMAUFS\nd3vH3JYc2ILNg6vZ1wXO5LEIV9ot5rzLVGwFgp4SOHIHJrnV1T2i0cofhbEaS3Ew\npJhfLHlPqP8NhMw3Bc6XCCIhrmhvnV/niXaE3xWMWrl0eN7gOgdvpSR8Rbv2UqIU\neXC9kUexomJJeMYao92cMtuBdAcTFZG9Oa7BoGwlD6Z0C8iArbHI911hMhhnvCQ=\n=AcwA\n-----END PGP SIGNATURE-----\n", "payload": "tree 5eacc1fa67208fe3aff54a7e30b1432808a90567\nparent a8f8f746fc046a025d1b8c464ce28f6b828f32e9\nparent 9b77a1e571041716ad0c446afd87949d40ed4de6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638713061 +0100\ncommitter GitHub <noreply@github.com> 1638713061 +0100\n\nRollup merge of #91450 - hkmatsumoto:hide-type-error, r=estebank\n\nDon't suggest types whose inner type is erroneous\n\nCurrently, we check if the returned type equals to `tcx.ty_error()` not to emit\nerroneous types, but this has a pitfall; for example,\n`Option<[type error]> != tcx.ty_error()` holds.\n\nFixes #91371.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/609d9a0108d4e6d79279fc6c5901eb5041c7aac7", "html_url": "https://github.com/rust-lang/rust/commit/609d9a0108d4e6d79279fc6c5901eb5041c7aac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/609d9a0108d4e6d79279fc6c5901eb5041c7aac7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8f8f746fc046a025d1b8c464ce28f6b828f32e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f8f746fc046a025d1b8c464ce28f6b828f32e9", "html_url": "https://github.com/rust-lang/rust/commit/a8f8f746fc046a025d1b8c464ce28f6b828f32e9"}, {"sha": "9b77a1e571041716ad0c446afd87949d40ed4de6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b77a1e571041716ad0c446afd87949d40ed4de6", "html_url": "https://github.com/rust-lang/rust/commit/9b77a1e571041716ad0c446afd87949d40ed4de6"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "67a3053c60786b60303a0126e922edfdfe621f12", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/609d9a0108d4e6d79279fc6c5901eb5041c7aac7/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/609d9a0108d4e6d79279fc6c5901eb5041c7aac7/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=609d9a0108d4e6d79279fc6c5901eb5041c7aac7", "patch": "@@ -41,7 +41,7 @@ use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::util::Discr;\n use rustc_middle::ty::util::IntTypeExt;\n use rustc_middle::ty::{self, AdtKind, Const, DefIdTree, Ty, TyCtxt};\n-use rustc_middle::ty::{ReprOptions, ToPredicate, WithConstness};\n+use rustc_middle::ty::{ReprOptions, ToPredicate, TypeFoldable, WithConstness};\n use rustc_session::lint;\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n@@ -1777,7 +1777,7 @@ fn fn_sig(tcx: TyCtxt<'_>, def_id: DefId) -> ty::PolyFnSig<'_> {\n                     visitor.visit_ty(ty);\n                     let mut diag = bad_placeholder_type(tcx, visitor.0, \"return type\");\n                     let ret_ty = fn_sig.skip_binder().output();\n-                    if ret_ty != tcx.ty_error() {\n+                    if !ret_ty.references_error() {\n                         if !ret_ty.is_closure() {\n                             let ret_ty_str = match ret_ty.kind() {\n                                 // Suggest a function pointer return type instead of a unique function definition"}, {"sha": "0b942d6d94f84199aaf7695547821ecdab8dec41", "filename": "src/test/ui/typeck/issue-91450-inner-ty-error.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/609d9a0108d4e6d79279fc6c5901eb5041c7aac7/src%2Ftest%2Fui%2Ftypeck%2Fissue-91450-inner-ty-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/609d9a0108d4e6d79279fc6c5901eb5041c7aac7/src%2Ftest%2Fui%2Ftypeck%2Fissue-91450-inner-ty-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91450-inner-ty-error.rs?ref=609d9a0108d4e6d79279fc6c5901eb5041c7aac7", "patch": "@@ -0,0 +1,7 @@\n+// Regression test for #91450.\n+// This test ensures that the compiler does not suggest `Foo<[type error]>` in diagnostic messages.\n+\n+fn foo() -> Option<_> {} //~ ERROR: [E0308]\n+//~^ ERROR: the type placeholder `_` is not allowed\n+\n+fn main() {}"}, {"sha": "314fe561803687e2707b845de4a4d4679490cc2b", "filename": "src/test/ui/typeck/issue-91450-inner-ty-error.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/609d9a0108d4e6d79279fc6c5901eb5041c7aac7/src%2Ftest%2Fui%2Ftypeck%2Fissue-91450-inner-ty-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/609d9a0108d4e6d79279fc6c5901eb5041c7aac7/src%2Ftest%2Fui%2Ftypeck%2Fissue-91450-inner-ty-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91450-inner-ty-error.stderr?ref=609d9a0108d4e6d79279fc6c5901eb5041c7aac7", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-91450-inner-ty-error.rs:4:13\n+   |\n+LL | fn foo() -> Option<_> {}\n+   |    ---      ^^^^^^^^^ expected enum `Option`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+   |\n+   = note:   expected enum `Option<_>`\n+           found unit type `()`\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/issue-91450-inner-ty-error.rs:4:20\n+   |\n+LL | fn foo() -> Option<_> {}\n+   |                    ^ not allowed in type signatures\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0121, E0308.\n+For more information about an error, try `rustc --explain E0121`."}]}