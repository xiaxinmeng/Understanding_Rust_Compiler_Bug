{"sha": "58756573fc5a2198f98e9b4889c494bb60f38e3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NzU2NTczZmM1YTIxOThmOThlOWI0ODg5YzQ5NGJiNjBmMzhlM2Q=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-07T12:06:17Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-14T07:50:47Z"}, "message": "Fix comment about non-reentrant StaticMutex::lock().\n\nThe comment said it's UB to call lock() while it is locked. That'd be\nquite a useless Mutex. :) It was supposed to say 'locked by the same\nthread', not just 'locked'.", "tree": {"sha": "b14ba7a935b5e65fe82832cea63febdf6e287c87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b14ba7a935b5e65fe82832cea63febdf6e287c87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58756573fc5a2198f98e9b4889c494bb60f38e3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58756573fc5a2198f98e9b4889c494bb60f38e3d", "html_url": "https://github.com/rust-lang/rust/commit/58756573fc5a2198f98e9b4889c494bb60f38e3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58756573fc5a2198f98e9b4889c494bb60f38e3d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31e4087b9098c6174a22b294bea960d54013fe22", "url": "https://api.github.com/repos/rust-lang/rust/commits/31e4087b9098c6174a22b294bea960d54013fe22", "html_url": "https://github.com/rust-lang/rust/commit/31e4087b9098c6174a22b294bea960d54013fe22"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "47fa75393308d677f886a6262a0291c52216d6fb", "filename": "library/std/src/sys_common/mutex.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/58756573fc5a2198f98e9b4889c494bb60f38e3d/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58756573fc5a2198f98e9b4889c494bb60f38e3d/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs?ref=58756573fc5a2198f98e9b4889c494bb60f38e3d", "patch": "@@ -28,8 +28,9 @@ impl StaticMutex {\n     /// Calls raw_lock() and then returns an RAII guard to guarantee the mutex\n     /// will be unlocked.\n     ///\n-    /// It is undefined behaviour to call this function while locked, or if the\n-    /// mutex has been moved since the last time this was called.\n+    /// It is undefined behaviour to call this function while locked by the\n+    /// same thread, or if the mutex has been moved since the last time this\n+    /// was called.\n     #[inline]\n     pub unsafe fn lock(&self) -> StaticMutexGuard<'_> {\n         self.0.lock();"}]}