{"sha": "23262a83909392f88fdc8031ebd754f8d9b94525", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMjYyYTgzOTA5MzkyZjg4ZmRjODAzMWViZDc1NGY4ZDliOTQ1MjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-28T19:56:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-28T19:56:49Z"}, "message": "auto merge of #13812 : alxgnon/rust/master, r=alexcrichton\n\nThis is a quick fix for repeated documentation descriptions in certain modules.\r\nFollowing is a list of the faulty modules I found. I ran `pcregrep -r -M \"<p>(.+)\\n\\1\" doc` on the html documentation to help identify them.\r\n\r\n- [rustuv::uvio](http://static.rust-lang.org/doc/master/rustuv/uvio/index.html)\r\n- [rustuv::uvll](http://static.rust-lang.org/doc/master/rustuv/uvll/index.html)\r\n- [std::rt::backtrace](http://static.rust-lang.org/doc/master/std/rt/backtrace/index.html)\r\n- [std::rt::env](http://static.rust-lang.org/doc/master/std/rt/env/index.html)\r\n- [std::rt::global_heap](http://static.rust-lang.org/doc/master/std/rt/global_heap/index.html)\r\n- [std::rt::local_heap](http://static.rust-lang.org/doc/master/std/rt/local_heap/index.html)\r\n- [std::rt::rtio](http://static.rust-lang.org/doc/master/std/rt/rtio/index.html)\r\n- [std::rt::task](http://static.rust-lang.org/doc/master/std/rt/task/index.html)\r\n- [std::rt::thread](http://static.rust-lang.org/doc/master/std/rt/thread/index.html)\r\n- [std::rt::unwind](http://static.rust-lang.org/doc/master/std/rt/unwind/index.html)\r\n- [syntax::parse::classify](http://static.rust-lang.org/doc/master/syntax/parse/classify/index.html)\r\n- [syntax::parse::common](http://static.rust-lang.org/doc/master/syntax/parse/common/index.html)\r\n\r\nAfter a little testing, I discovered that moving the documentation inside (`//!`) instead of outside (`///`) modules fixed the immediate problem. I went through the trouble of moving the documentation, and with this commit there are no more repeated descriptions within those faulty modules.\r\n\r\nThis does not fix the underlying problem though. We should look into why having the documentation outside instead of inside caused the descriptions to be repeated. I will create a separate issue with my findings on the subject if necessary.\r\nIn the meantime, this simple fix should be enough.", "tree": {"sha": "b7a77740636054abed4b7ef37f51c18f4835ab3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7a77740636054abed4b7ef37f51c18f4835ab3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23262a83909392f88fdc8031ebd754f8d9b94525", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23262a83909392f88fdc8031ebd754f8d9b94525", "html_url": "https://github.com/rust-lang/rust/commit/23262a83909392f88fdc8031ebd754f8d9b94525", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23262a83909392f88fdc8031ebd754f8d9b94525/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f4278d650837bf30e5461fd15c2364b2bb5ceff", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4278d650837bf30e5461fd15c2364b2bb5ceff", "html_url": "https://github.com/rust-lang/rust/commit/1f4278d650837bf30e5461fd15c2364b2bb5ceff"}, {"sha": "6c41253a473728451283e20bef3498fdfe797243", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c41253a473728451283e20bef3498fdfe797243", "html_url": "https://github.com/rust-lang/rust/commit/6c41253a473728451283e20bef3498fdfe797243"}], "stats": {"total": 55, "additions": 30, "deletions": 25}, "files": [{"sha": "d994a9aece214554601694d02260962b4972ac0f", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -88,10 +88,7 @@ mod homing;\n mod queue;\n mod rc;\n \n-/// The implementation of `rtio` for libuv\n pub mod uvio;\n-\n-/// C bindings to libuv\n pub mod uvll;\n \n pub mod file;"}, {"sha": "77b1fd1e4c4bac75f9f076b743de92125ab111a0", "filename": "src/librustuv/uvio.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibrustuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibrustuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvio.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! The implementation of `rtio` for libuv\n+\n use std::c_str::CString;\n use std::cast;\n use std::io::IoError;"}, {"sha": "26494f1acd9ee72e07315e1f22ecc9b539c46884", "filename": "src/libstd/rt/backtrace.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fbacktrace.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Simple backtrace functionality (to print on failure)\n+\n #![allow(non_camel_case_types)]\n \n use char::Char;"}, {"sha": "b9c0a02d7d228a2cb8a935253473db9025a3a635", "filename": "src/libstd/rt/global_heap.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fglobal_heap.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+\n+//! The global (exchange) heap.\n+\n use libc::{c_void, size_t, free, malloc, realloc};\n use ptr::{RawPtr, mut_null};\n use intrinsics::abort;"}, {"sha": "b407bf8897ca4dbbe8caf9551ef8189773fe1b0a", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -85,44 +85,44 @@ pub mod shouldnt_be_public {\n // Internal macros used by the runtime.\n mod macros;\n \n-/// The global (exchange) heap.\n+// The global (exchange) heap.\n pub mod global_heap;\n \n-/// Implementations of language-critical runtime features like @.\n+// Implementations of language-critical runtime features like @.\n pub mod task;\n \n-/// The EventLoop and internal synchronous I/O interface.\n+// The EventLoop and internal synchronous I/O interface.\n pub mod rtio;\n \n-/// The Local trait for types that are accessible via thread-local\n-/// or task-local storage.\n+// The Local trait for types that are accessible via thread-local\n+// or task-local storage.\n pub mod local;\n \n-/// Bindings to system threading libraries.\n+// Bindings to system threading libraries.\n pub mod thread;\n \n-/// The runtime configuration, read from environment variables.\n+// The runtime configuration, read from environment variables.\n pub mod env;\n \n-/// The local, managed heap\n+// The local, managed heap\n pub mod local_heap;\n \n-/// The runtime needs to be able to put a pointer into thread-local storage.\n+// The runtime needs to be able to put a pointer into thread-local storage.\n mod local_ptr;\n \n-/// Bindings to pthread/windows thread-local storage.\n+// Bindings to pthread/windows thread-local storage.\n mod thread_local_storage;\n \n-/// Stack unwinding\n+// Stack unwinding\n pub mod unwind;\n \n-/// The interface to libunwind that rust is using.\n+// The interface to libunwind that rust is using.\n mod libunwind;\n \n-/// Simple backtrace functionality (to print on failure)\n+// Simple backtrace functionality (to print on failure)\n pub mod backtrace;\n \n-/// Just stuff\n+// Just stuff\n mod util;\n \n // Global command line argument storage"}, {"sha": "fc8c79549af23cf84c3492a084568230053a7081", "filename": "src/libstd/rt/rtio.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Frtio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Frtio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frtio.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! The EventLoop and internal synchronous I/O interface.\n+\n use c_str::CString;\n use cast;\n use comm::{Sender, Receiver};"}, {"sha": "4f84202f8f87ea8288502326fc1ab511847c9c52", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Stack unwinding\n+\n // Implementation of Rust stack unwinding\n //\n // For background on exception handling and stack unwinding please see"}, {"sha": "b160593b0497557ac8c5c0747a03978988ce5002", "filename": "src/libsyntax/parse/classify.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibsyntax%2Fparse%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibsyntax%2Fparse%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fclassify.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -8,9 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-/*\n-  Predicates on exprs and stmts that the pretty-printer and parser use\n- */\n+//! Routines the parser uses to classify AST nodes\n+\n+// Predicates on exprs and stmts that the pretty-printer and parser use\n \n use ast;\n "}, {"sha": "3c3f0c7a820440cff44b71d07fc5d883a863d7f6", "filename": "src/libsyntax/parse/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibsyntax%2Fparse%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibsyntax%2Fparse%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcommon.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Common routines shared by parser mods\n+\n use parse::token;\n \n // SeqSep : a sequence separator (token)"}, {"sha": "0d3ae3b5cb816fb0398ac26f86b2dc02c49f157e", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23262a83909392f88fdc8031ebd754f8d9b94525/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=23262a83909392f88fdc8031ebd754f8d9b94525", "patch": "@@ -28,13 +28,8 @@ pub mod token;\n pub mod comments;\n pub mod attr;\n \n-/// Common routines shared by parser mods\n pub mod common;\n-\n-/// Routines the parser uses to classify AST nodes\n pub mod classify;\n-\n-/// Reporting obsolete syntax\n pub mod obsolete;\n \n // info about a parsing session."}]}