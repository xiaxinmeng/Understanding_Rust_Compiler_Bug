{"sha": "8e985376d43f94dd7e00cd58d5a13778be3be918", "node_id": "C_kwDOAAsO6NoAKDhlOTg1Mzc2ZDQzZjk0ZGQ3ZTAwY2Q1OGQ1YTEzNzc4YmUzYmU5MTg", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-12-10T09:53:13Z"}, "committer": {"name": "Vin Singh", "email": "theshampoofactory@gmail.com", "date": "2022-03-03T18:30:34Z"}, "message": "Redo the array-equality codegen tests for the different threshold", "tree": {"sha": "e6585f39165999977ec0aff16ea40faddd7a2bf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6585f39165999977ec0aff16ea40faddd7a2bf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e985376d43f94dd7e00cd58d5a13778be3be918", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEzRBofpOgX35onxttB7jSqK9z80QFAmIhCUoACgkQB7jSqK9z\n80RDoA/8Ds2NgtwEemQUbM/uO8ejGAPYOplYKjwgEZnJ49vbluEmopO+EuR+iRpx\neQFfjxdwMp0Qx+FPRXOQbkKeoBGiz/7OPPELnmADIcwNPKEtE/HaBuzpYoVpv1IY\nCeFEv6oOByFYZcDh1Ddc4TSh4/OKxNTg8+3REbJg9Ru4EXBa/c5UbNKBbCBhgC/y\ncgof5nDulJdBILuMNfdOIwbLoTEFeWb7vqw+Rk7Jj0+DjufHtkd14KGsjMioJdP4\nsRRR2o0LWd24NIBGJlg2SI91ix8qgQWjQZZaXBRBEwI+5lUGJd5R12/ZLGcz0Bnm\nQGvhtwIdYqdOYQGIl9hvudwM0mSDPIjB4plgbeUP4VQSbZBKQ3/ZjTJ4cun0DgEV\ncB43r+hgktqegC//YrTTw3kFQGFuElp6rY/9nKeJ1x3bEMOHKweNjXrKZAW4rGds\nYHfvZ560IBA7sttLUGaKBq5fX184TQhmMZS1l0rOBSeV+mriFfEpyRg6EOlL3k2i\nK2GQu2AOocMYeX0xl2aqTWZ9OBqj0lZiKBoOwsvaMNCiK96RPHUYBR4R1goV9Txo\nTZBiJE5IwUIsGIMA0cC/LxLaSMhgsFHKlUY20iLiffKZ1//Sr/VF73EiNd9Y4Dwh\nTofEkk/BrSIFERosSZaf7bj9WqlNajSmx7ZCQuMSbxZuttpRKzo=\n=AuqR\n-----END PGP SIGNATURE-----", "payload": "tree e6585f39165999977ec0aff16ea40faddd7a2bf4\nparent 9d45e0e0b4593b824917bfae71e5161973eb7a11\nauthor Scott McMurray <scottmcm@users.noreply.github.com> 1639129993 -0800\ncommitter Vin Singh <theshampoofactory@gmail.com> 1646332234 +0000\n\nRedo the array-equality codegen tests for the different threshold\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e985376d43f94dd7e00cd58d5a13778be3be918", "html_url": "https://github.com/rust-lang/rust/commit/8e985376d43f94dd7e00cd58d5a13778be3be918", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e985376d43f94dd7e00cd58d5a13778be3be918/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shampoofactory", "id": 56542103, "node_id": "MDQ6VXNlcjU2NTQyMTAz", "avatar_url": "https://avatars.githubusercontent.com/u/56542103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shampoofactory", "html_url": "https://github.com/shampoofactory", "followers_url": "https://api.github.com/users/shampoofactory/followers", "following_url": "https://api.github.com/users/shampoofactory/following{/other_user}", "gists_url": "https://api.github.com/users/shampoofactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/shampoofactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shampoofactory/subscriptions", "organizations_url": "https://api.github.com/users/shampoofactory/orgs", "repos_url": "https://api.github.com/users/shampoofactory/repos", "events_url": "https://api.github.com/users/shampoofactory/events{/privacy}", "received_events_url": "https://api.github.com/users/shampoofactory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d45e0e0b4593b824917bfae71e5161973eb7a11", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d45e0e0b4593b824917bfae71e5161973eb7a11", "html_url": "https://github.com/rust-lang/rust/commit/9d45e0e0b4593b824917bfae71e5161973eb7a11"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "8dce004b54a1b2d7d3b46044974efd03c0c4145f", "filename": "src/test/codegen/array-equality.rs", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/8e985376d43f94dd7e00cd58d5a13778be3be918/src%2Ftest%2Fcodegen%2Farray-equality.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e985376d43f94dd7e00cd58d5a13778be3be918/src%2Ftest%2Fcodegen%2Farray-equality.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Farray-equality.rs?ref=8e985376d43f94dd7e00cd58d5a13778be3be918", "patch": "@@ -1,25 +1,24 @@\n // compile-flags: -O\n // only-x86_64\n-// ignore-test will need to be rewritten if pull accepted\n \n #![crate_type = \"lib\"]\n \n // CHECK-LABEL: @array_eq_value\n #[no_mangle]\n-pub fn array_eq_value(a: [u16; 6], b: [u16; 6]) -> bool {\n+pub fn array_eq_value(a: [u16; 3], b: [u16; 3]) -> bool {\n     // CHECK-NEXT: start:\n-    // CHECK-NEXT: %2 = icmp eq i96 %0, %1\n+    // CHECK-NEXT: %2 = icmp eq i48 %0, %1\n     // CHECK-NEXT: ret i1 %2\n     a == b\n }\n \n // CHECK-LABEL: @array_eq_ref\n #[no_mangle]\n-pub fn array_eq_ref(a: &[u16; 6], b: &[u16; 6]) -> bool {\n+pub fn array_eq_ref(a: &[u16; 3], b: &[u16; 3]) -> bool {\n     // CHECK: start:\n-    // CHECK: load i96, i96* %{{.+}}, align 2\n-    // CHECK: load i96, i96* %{{.+}}, align 2\n-    // CHECK: icmp eq i96\n+    // CHECK: load i48, i48* %{{.+}}, align 2\n+    // CHECK: load i48, i48* %{{.+}}, align 2\n+    // CHECK: icmp eq i48\n     // CHECK-NEXT: ret\n     a == b\n }\n@@ -48,11 +47,33 @@ pub fn array_eq_long(a: &[u16; 1234], b: &[u16; 1234]) -> bool {\n     a == b\n }\n \n-// CHECK-LABEL: @array_eq_zero(i128 %0)\n+// CHECK-LABEL: @array_eq_zero_short(i48\n #[no_mangle]\n-pub fn array_eq_zero(x: [u16; 8]) -> bool {\n+pub fn array_eq_zero_short(x: [u16; 3]) -> bool {\n     // CHECK-NEXT: start:\n-    // CHECK-NEXT: %[[EQ:.+]] = icmp eq i128 %0, 0\n+    // CHECK-NEXT: %[[EQ:.+]] = icmp eq i48 %0, 0\n+    // CHECK-NEXT: ret i1 %[[EQ]]\n+    x == [0; 3]\n+}\n+\n+// CHECK-LABEL: @array_eq_zero_mid([8 x i16]*\n+#[no_mangle]\n+pub fn array_eq_zero_mid(x: [u16; 8]) -> bool {\n+    // CHECK-NEXT: start:\n+    // CHECK-NEXT: bitcast\n+    // CHECK-NEXT: %[[LOAD:.+]] = load i128,\n+    // CHECK-NEXT: %[[EQ:.+]] = icmp eq i128 %[[LOAD]], 0\n     // CHECK-NEXT: ret i1 %[[EQ]]\n     x == [0; 8]\n }\n+\n+// CHECK-LABEL: @array_eq_zero_long([1234 x i16]*\n+#[no_mangle]\n+pub fn array_eq_zero_long(x: [u16; 1234]) -> bool {\n+    // CHECK-NEXT: start:\n+    // CHECK-NOT: alloca\n+    // CHECK: %[[CMP:.+]] = tail call i32 @{{bcmp|memcmp}}(\n+    // CHECK-NEXT: %[[EQ:.+]] = icmp eq i32 %[[CMP]], 0\n+    // CHECK-NEXT: ret i1 %[[EQ]]\n+    x == [0; 1234]\n+}"}]}