{"sha": "033e127066c0d57b36eb7e202840387a98b017f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzM2UxMjcwNjZjMGQ1N2IzNmViN2UyMDI4NDAzODdhOThiMDE3Zjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-14T02:38:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-14T02:38:29Z"}, "message": "Auto merge of #27786 - alexcrichton:start-testing-msvc, r=brson\n\n* An apparent bug in VS 2013's implementation of the `exp2` function is worked\r\n  around in one of flt2dec's tests.\r\n\r\nTurns out this was the only fix necessary!", "tree": {"sha": "0f0be04cc3b3ea7991c5babde1a5f9efd6172671", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f0be04cc3b3ea7991c5babde1a5f9efd6172671"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/033e127066c0d57b36eb7e202840387a98b017f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/033e127066c0d57b36eb7e202840387a98b017f8", "html_url": "https://github.com/rust-lang/rust/commit/033e127066c0d57b36eb7e202840387a98b017f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/033e127066c0d57b36eb7e202840387a98b017f8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "html_url": "https://github.com/rust-lang/rust/commit/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf"}, {"sha": "60ac0d85b92bd20c7f135b7343f3af80715d6ffd", "url": "https://api.github.com/repos/rust-lang/rust/commits/60ac0d85b92bd20c7f135b7343f3af80715d6ffd", "html_url": "https://github.com/rust-lang/rust/commit/60ac0d85b92bd20c7f135b7343f3af80715d6ffd"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "f3ddc370d1e1403062f37d45116e9608172df216", "filename": "src/libcoretest/num/flt2dec/strategy/dragon.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/033e127066c0d57b36eb7e202840387a98b017f8/src%2Flibcoretest%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033e127066c0d57b36eb7e202840387a98b017f8/src%2Flibcoretest%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs?ref=033e127066c0d57b36eb7e202840387a98b017f8", "patch": "@@ -35,7 +35,22 @@ fn shortest_sanity_test() {\n \n #[test]\n fn exact_sanity_test() {\n-    f64_exact_sanity_test(format_exact);\n+    // This test ends up running what I can only assume is some corner-ish case\n+    // of the `exp2` library function, defined in whatever C runtime we're\n+    // using. In VS 2013 this function apparently had a bug as this test fails\n+    // when linked, but with VS 2015 the bug appears fixed as the test runs just\n+    // fine.\n+    //\n+    // The bug seems to be a difference in return value of `exp2(-1057)`, where\n+    // in VS 2013 it returns a double with the bit pattern 0x2 and in VS 2015 it\n+    // returns 0x20000.\n+    //\n+    // For now just ignore this test entirely on MSVC as it's tested elsewhere\n+    // anyway and we're not super interested in testing each platform's exp2\n+    // implementation.\n+    if !cfg!(target_env = \"msvc\") {\n+        f64_exact_sanity_test(format_exact);\n+    }\n     f32_exact_sanity_test(format_exact);\n }\n "}, {"sha": "2d4afceda191f1bbd2798ecf7e2a798636431b59", "filename": "src/libcoretest/num/flt2dec/strategy/grisu.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/033e127066c0d57b36eb7e202840387a98b017f8/src%2Flibcoretest%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033e127066c0d57b36eb7e202840387a98b017f8/src%2Flibcoretest%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs?ref=033e127066c0d57b36eb7e202840387a98b017f8", "patch": "@@ -77,7 +77,11 @@ fn shortest_f64_hard_random_equivalence_test() {\n \n #[test]\n fn exact_sanity_test() {\n-    f64_exact_sanity_test(format_exact);\n+    // See comments in dragon.rs's exact_sanity_test for why this test is\n+    // ignored on MSVC\n+    if !cfg!(target_env = \"msvc\") {\n+        f64_exact_sanity_test(format_exact);\n+    }\n     f32_exact_sanity_test(format_exact);\n }\n "}]}