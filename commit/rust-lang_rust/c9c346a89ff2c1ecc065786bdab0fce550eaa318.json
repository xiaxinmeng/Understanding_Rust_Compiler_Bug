{"sha": "c9c346a89ff2c1ecc065786bdab0fce550eaa318", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5YzM0NmE4OWZmMmMxZWNjMDY1Nzg2YmRhYjBmY2U1NTBlYWEzMTg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-29T13:14:25Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-29T13:15:20Z"}, "message": "Add 'use_field_init_shorthand' config option", "tree": {"sha": "df59306ce74455f54670685fdde2733c1260fe15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df59306ce74455f54670685fdde2733c1260fe15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9c346a89ff2c1ecc065786bdab0fce550eaa318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c346a89ff2c1ecc065786bdab0fce550eaa318", "html_url": "https://github.com/rust-lang/rust/commit/c9c346a89ff2c1ecc065786bdab0fce550eaa318", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9c346a89ff2c1ecc065786bdab0fce550eaa318/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "154bf8e1afafed035b769955ed81490dca62a50a", "url": "https://api.github.com/repos/rust-lang/rust/commits/154bf8e1afafed035b769955ed81490dca62a50a", "html_url": "https://github.com/rust-lang/rust/commit/154bf8e1afafed035b769955ed81490dca62a50a"}], "stats": {"total": 89, "additions": 87, "deletions": 2}, "files": [{"sha": "563a28df17c0132ec15877f22c7c897821cc4818", "filename": "CHANGELOG.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -2,6 +2,10 @@\n \n ## [Unreleased]\n \n+### Added\n+\n+- Add `use_field_init_shorthand` config option.\n+\n ## [0.3.6] 2018-01-18\n \n ### Fixed"}, {"sha": "eb693833c468f8f45c1d456163e2d5ca9e6fb412", "filename": "Configurations.md", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -1685,6 +1685,48 @@ fn lorem<Ipsum: Dolor+Sit=Amet>() {\n }\n ```\n \n+## `use_field_init_shorthand`\n+\n+Use field initialize shorthand if possible.\n+\n+- **Default value**: `false`\n+- **Possible values**: `true`, `false`\n+- **Stable**: No\n+\n+#### `false` (default):\n+\n+```rust\n+struct Foo {\n+    x: u32,\n+    y: u32,\n+    z: u32,\n+}\n+\n+fn main() {\n+    let x = 1;\n+    let y = 2;\n+    let z = 3;\n+    let a = Foo { x: x, y: y, z: z };\n+}\n+```\n+\n+#### `true`:\n+\n+```rust\n+struct Foo {\n+    x: u32,\n+    y: u32,\n+    z: u32,\n+}\n+\n+fn main() {\n+    let x = 1;\n+    let y = 2;\n+    let z = 3;\n+    let a = Foo { x, y, z };\n+}\n+```\n+\n ## `use_try_shorthand`\n \n Replace uses of the try! macro by the ? shorthand"}, {"sha": "4483cbe14ebe63a94cdca335d5500888d1162360", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -673,6 +673,7 @@ create_config! {\n     condense_wildcard_suffixes: bool, false, false, \"Replace strings of _ wildcards by a single .. \\\n                                               in tuple patterns\";\n     force_explicit_abi: bool, true, true, \"Always print the abi for extern items\";\n+    use_field_init_shorthand: bool, false, false, \"Use field initialization shorthand if possible\";\n \n     // Control options (changes the operation of rustfmt, rather than the formatting)\n     write_mode: WriteMode, WriteMode::Overwrite, false,"}, {"sha": "39fa17e0fee40c1782490721ac4c3a83d16b0694", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -2582,7 +2582,9 @@ pub fn rewrite_field(\n         let expr = field.expr.rewrite(context, expr_shape);\n \n         match expr {\n-            Some(ref e) if e.as_str() == name => Some(attrs_str + &name),\n+            Some(ref e) if e.as_str() == name && context.config.use_field_init_shorthand() => {\n+                Some(attrs_str + &name)\n+            }\n             Some(e) => Some(format!(\"{}{}{}{}\", attrs_str, name, separator, e)),\n             None => {\n                 let expr_offset = shape.indent.block_indent(context.config);"}, {"sha": "16ce740f1b9d625a40a902003449471166b4816c", "filename": "tests/source/configs/use_field_init_shorthand/false.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -0,0 +1,19 @@\n+// rustfmt-use_field_init_shorthand: false\n+// Use field initialization shorthand if possible.\n+\n+fn main() {\n+    let a = Foo {\n+        x: x,\n+        y: y,\n+        z: z,\n+    };\n+\n+    let b = Bar {\n+        x: x,\n+        y: y,\n+        #[attr]\n+        z: z,\n+        #[rustfmt_skip]\n+        skipped: skipped,\n+    };\n+}"}, {"sha": "1e36c6cff354df5047f8e2c00ea6a0a60a5020a4", "filename": "tests/source/configs/use_field_init_shorthand/true.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-use_field_init_shorthand: true\n // Use field initialization shorthand if possible.\n \n fn main() {", "previous_filename": "tests/source/init_shorthand.rs"}, {"sha": "5bc89d582229666f9d4a75623776e8b93b029404", "filename": "tests/target/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Ftarget%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Ftarget%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure.rs?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -147,7 +147,7 @@ fn issue470() {\n                             hair::PatternRef::Hair(pattern),\n                             &lvalue,\n                         );\n-                        ArgDecl { ty }\n+                        ArgDecl { ty: ty }\n                     },\n                 );\n             }"}, {"sha": "dcebe0b6f1d23ee55607d4ba7566ca396db09c00", "filename": "tests/target/configs/use_field_init_shorthand/false.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-use_field_init_shorthand: false\n+// Use field initialization shorthand if possible.\n+\n+fn main() {\n+    let a = Foo { x: x, y: y, z: z };\n+\n+    let b = Bar {\n+        x: x,\n+        y: y,\n+        #[attr]\n+        z: z,\n+        #[rustfmt_skip]\n+        skipped: skipped,\n+    };\n+}"}, {"sha": "ad78093ee8e6e2dffb27416f73f1409e297a844e", "filename": "tests/target/configs/use_field_init_shorthand/true.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c346a89ff2c1ecc065786bdab0fce550eaa318/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs?ref=c9c346a89ff2c1ecc065786bdab0fce550eaa318", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-use_field_init_shorthand: true\n // Use field initialization shorthand if possible.\n \n fn main() {", "previous_filename": "tests/target/init_shorthand.rs"}]}