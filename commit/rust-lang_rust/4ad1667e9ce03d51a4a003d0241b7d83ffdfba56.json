{"sha": "4ad1667e9ce03d51a4a003d0241b7d83ffdfba56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZDE2NjdlOWNlMDNkNTFhNGEwMDNkMDI0MWI3ZDgzZmZkZmJhNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-18T08:10:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-18T08:10:16Z"}, "message": "Auto merge of #1584 - Aaron1011:test/std-backtrace, r=RalfJung\n\nTest std backtrace type\n\nCloses https://github.com/rust-lang/miri/issues/1578", "tree": {"sha": "409ea53916ef722ca697cec5acd45360ad73e7e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/409ea53916ef722ca697cec5acd45360ad73e7e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56", "html_url": "https://github.com/rust-lang/rust/commit/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f390c05e5049f1fb8cf4765525dee1b9f3f7e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f390c05e5049f1fb8cf4765525dee1b9f3f7e98", "html_url": "https://github.com/rust-lang/rust/commit/2f390c05e5049f1fb8cf4765525dee1b9f3f7e98"}, {"sha": "8b10dbfeaab5826fb3d179bb94454a80182a9c3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b10dbfeaab5826fb3d179bb94454a80182a9c3a", "html_url": "https://github.com/rust-lang/rust/commit/8b10dbfeaab5826fb3d179bb94454a80182a9c3a"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "579b4f32e7ccf945afdc3dd746ce3e2c79f656cd", "filename": "tests/run-pass/backtrace-std.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56/tests%2Frun-pass%2Fbacktrace-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56/tests%2Frun-pass%2Fbacktrace-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbacktrace-std.rs?ref=4ad1667e9ce03d51a4a003d0241b7d83ffdfba56", "patch": "@@ -0,0 +1,22 @@\n+// normalize-stderr-test \".*/(rust|checkout)/library/\" -> \"RUSTLIB/\"\n+// normalize-stderr-test \"RUSTLIB/(.*):\\d+:\\d+ \"-> \"RUSTLIB/$1:LL:COL \"\n+// normalize-stderr-test \"::<.*>\" -> \"\"\n+// compile-flags: -Zmiri-disable-isolation\n+\n+#![feature(backtrace)]\n+\n+use std::backtrace::Backtrace;\n+\n+#[inline(never)] fn func_a() -> Backtrace { func_b::<u8>() }\n+#[inline(never)] fn func_b<T>() -> Backtrace { func_c() }\n+\n+macro_rules! invoke_func_d {\n+    () => { func_d() }\n+}\n+\n+#[inline(never)] fn func_c() -> Backtrace { invoke_func_d!() }\n+#[inline(never)] fn func_d() -> Backtrace { Backtrace::capture() }\n+\n+fn main() {\n+    eprint!(\"{}\", func_a());\n+}"}, {"sha": "d14735c0405f11b2fa78e8231fa79a28b7f21ab1", "filename": "tests/run-pass/backtrace-std.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56/tests%2Frun-pass%2Fbacktrace-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4ad1667e9ce03d51a4a003d0241b7d83ffdfba56/tests%2Frun-pass%2Fbacktrace-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbacktrace-std.stderr?ref=4ad1667e9ce03d51a4a003d0241b7d83ffdfba56", "patch": "@@ -0,0 +1,28 @@\n+   0: func_d\n+             at $DIR/backtrace-std.rs:18\n+   1: func_c\n+             at $DIR/backtrace-std.rs:17\n+   2: func_b\n+             at $DIR/backtrace-std.rs:11\n+   3: func_a\n+             at $DIR/backtrace-std.rs:10\n+   4: main\n+             at $DIR/backtrace-std.rs:21\n+   5: <fn() as std::ops::FnOnce<()>>::call_once - shim(fn())\n+RUSTLIB/core/src/ops/function.rs:227\n+   6: std::sys_common::backtrace::__rust_begin_short_backtrace\n+RUSTLIB/std/src/sys_common/backtrace.rs:125\n+   7: std::rt::lang_start::{closure#0}\n+RUSTLIB/std/src/rt.rs:66\n+   8: std::ops::function::impls::call_once\n+RUSTLIB/core/src/ops/function.rs:259\n+   9: std::panicking::r#try::do_call\n+RUSTLIB/std/src/panicking.rs:381\n+  10: std::panicking::r#try\n+RUSTLIB/std/src/panicking.rs:345\n+  11: std::panic::catch_unwind\n+RUSTLIB/std/src/panic.rs:382\n+  12: std::rt::lang_start_internal\n+RUSTLIB/std/src/rt.rs:51\n+  13: std::rt::lang_start\n+RUSTLIB/std/src/rt.rs:65"}]}