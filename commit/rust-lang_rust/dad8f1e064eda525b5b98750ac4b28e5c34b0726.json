{"sha": "dad8f1e064eda525b5b98750ac4b28e5c34b0726", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZDhmMWUwNjRlZGE1MjViNWI5ODc1MGFjNGIyOGU1YzM0YjA3MjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-11T09:46:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-11T10:09:57Z"}, "message": "Introduce completion test utils", "tree": {"sha": "92cf32dc0aa022023460e950c60b517d5851a894", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92cf32dc0aa022023460e950c60b517d5851a894"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dad8f1e064eda525b5b98750ac4b28e5c34b0726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dad8f1e064eda525b5b98750ac4b28e5c34b0726", "html_url": "https://github.com/rust-lang/rust/commit/dad8f1e064eda525b5b98750ac4b28e5c34b0726", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dad8f1e064eda525b5b98750ac4b28e5c34b0726/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "html_url": "https://github.com/rust-lang/rust/commit/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62"}], "stats": {"total": 97, "additions": 49, "deletions": 48}, "files": [{"sha": "93e53c92109dbf6262e289948e5ee469f6be7625", "filename": "crates/ra_ide/src/completion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -16,11 +16,11 @@ mod complete_scope;\n mod complete_postfix;\n mod complete_macro_in_item_position;\n mod complete_trait_impl;\n+#[cfg(test)]\n+mod test_utils;\n \n use ra_ide_db::RootDatabase;\n \n-#[cfg(test)]\n-use crate::completion::completion_item::{do_completion, do_completion_with_options};\n use crate::{\n     completion::{\n         completion_context::CompletionContext,"}, {"sha": "81e5037aa149e88ebfc5de8bf9c7493a1732afb9", "filename": "crates/ra_ide/src/completion/complete_dot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -70,7 +70,7 @@ fn complete_methods(acc: &mut Completions, ctx: &CompletionContext, receiver: &T\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn do_ref_completion(code: &str) -> Vec<CompletionItem> {"}, {"sha": "9226ac0551afff724073e4dee98cc080e88bcd98", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -52,7 +52,7 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn do_magic_completion(code: &str) -> Vec<CompletionItem> {"}, {"sha": "1e053ea4a6f0b52e1072e64692fa605a1b408f53", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -117,7 +117,7 @@ fn complete_return(\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn do_keyword_completion(code: &str) -> Vec<CompletionItem> {"}, {"sha": "270e96df0d97e9eb16f5073dab26ab3c9e3f0f0d", "filename": "crates/ra_ide/src/completion/complete_macro_in_item_position.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -15,9 +15,10 @@ pub(super) fn complete_macro_in_item_position(acc: &mut Completions, ctx: &Compl\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n+\n     fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Reference)\n     }"}, {"sha": "d588ee3641955e455ce240271a32590f08e2aebb", "filename": "crates/ra_ide/src/completion/complete_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -103,7 +103,7 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n mod tests {\n     use test_utils::covers;\n \n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn do_reference_completion(code: &str) -> Vec<CompletionItem> {"}, {"sha": "6a1a66ef107ac8f064e0f05f9d209f2f578c9624", "filename": "crates/ra_ide/src/completion/complete_pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -27,7 +27,7 @@ pub(super) fn complete_pattern(acc: &mut Completions, ctx: &CompletionContext) {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn complete(code: &str) -> Vec<CompletionItem> {"}, {"sha": "0ba382165bd4dbd87f948093996e5d6cc4236ce4", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -81,7 +81,7 @@ fn postfix_snippet(ctx: &CompletionContext, label: &str, detail: &str, snippet:\n mod tests {\n     use insta::assert_debug_snapshot;\n \n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n \n     fn do_postfix_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Postfix)"}, {"sha": "83ed1d52c79eb642b4336961ecfdd835327220fe", "filename": "crates/ra_ide/src/completion/complete_record_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -18,7 +18,7 @@ pub(super) fn complete_record_literal(acc: &mut Completions, ctx: &CompletionCon\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn complete(code: &str) -> Vec<CompletionItem> {"}, {"sha": "962376428c48c154c90250fd117b03408f6001ea", "filename": "crates/ra_ide/src/completion/complete_record_pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -17,7 +17,7 @@ pub(super) fn complete_record_pattern(acc: &mut Completions, ctx: &CompletionCon\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn complete(code: &str) -> Vec<CompletionItem> {"}, {"sha": "bd4adf23af7f9da11399aaf30c85ed6098015add", "filename": "crates/ra_ide/src/completion/complete_scope.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -14,10 +14,10 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n mod tests {\n     use insta::assert_debug_snapshot;\n \n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n \n-    fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n-        do_completion(code, CompletionKind::Reference)\n+    fn do_reference_completion(ra_fixture: &str) -> Vec<CompletionItem> {\n+        do_completion(ra_fixture, CompletionKind::Reference)\n     }\n \n     #[test]"}, {"sha": "f731e9b9aaabb047a3cca5c43d499470bd424362", "filename": "crates/ra_ide/src/completion/complete_snippet.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -42,7 +42,7 @@ fn ${1:feature}() {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn do_snippet_completion(code: &str) -> Vec<CompletionItem> {"}, {"sha": "7fefa2c7a88de0626535323e142e0acb84cae801", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -217,7 +217,7 @@ fn make_const_compl_syntax(const_: &ast::ConstDef) -> String {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n     fn complete(code: &str) -> Vec<CompletionItem> {"}, {"sha": "ef0eb43b2243c01993d9f4a0eea21c468bcac33b", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -13,7 +13,7 @@ pub struct CompletionItem {\n     /// Used only internally in tests, to check only specific kind of\n     /// completion (postfix, keyword, reference, etc).\n     #[allow(unused)]\n-    completion_kind: CompletionKind,\n+    pub(crate) completion_kind: CompletionKind,\n     /// Label in the completion pop up which identifies completion.\n     label: String,\n     /// Range of identifier that is being completed.\n@@ -318,32 +318,3 @@ impl Into<Vec<CompletionItem>> for Completions {\n         self.buf\n     }\n }\n-\n-#[cfg(test)]\n-pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionItem> {\n-    do_completion_with_options(code, kind, &crate::completion::CompletionOptions::default())\n-}\n-\n-#[cfg(test)]\n-pub(crate) fn do_completion_with_options(\n-    code: &str,\n-    kind: CompletionKind,\n-    options: &crate::completion::CompletionOptions,\n-) -> Vec<CompletionItem> {\n-    use crate::{\n-        completion::completions,\n-        mock_analysis::{analysis_and_position, single_file_with_position},\n-    };\n-\n-    let (analysis, position) = if code.contains(\"//-\") {\n-        analysis_and_position(code)\n-    } else {\n-        single_file_with_position(code)\n-    };\n-    let completions = completions(&analysis.db, position, &options).unwrap();\n-    let completion_items: Vec<CompletionItem> = completions.into();\n-    let mut kind_completions: Vec<CompletionItem> =\n-        completion_items.into_iter().filter(|c| c.completion_kind == kind).collect();\n-    kind_completions.sort_by_key(|c| c.label.clone());\n-    kind_completions\n-}"}, {"sha": "5213def20075c5873e5407daf7ec097d267c3bf2", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -308,8 +308,8 @@ mod tests {\n     use test_utils::covers;\n \n     use crate::completion::{\n-        do_completion, do_completion_with_options, CompletionItem, CompletionKind,\n-        CompletionOptions,\n+        test_utils::{do_completion, do_completion_with_options},\n+        CompletionItem, CompletionKind, CompletionOptions,\n     };\n \n     fn do_reference_completion(ra_fixture: &str) -> Vec<CompletionItem> {"}, {"sha": "136857315cc4b2083b73398c9c9556cf7916ec2d", "filename": "crates/ra_ide/src/completion/test_utils.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad8f1e064eda525b5b98750ac4b28e5c34b0726/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs?ref=dad8f1e064eda525b5b98750ac4b28e5c34b0726", "patch": "@@ -0,0 +1,29 @@\n+//! Runs completion for testing purposes.\n+\n+use crate::{\n+    completion::{completion_item::CompletionKind, CompletionOptions},\n+    mock_analysis::{analysis_and_position, single_file_with_position},\n+    CompletionItem,\n+};\n+\n+pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionItem> {\n+    do_completion_with_options(code, kind, &CompletionOptions::default())\n+}\n+\n+pub(crate) fn do_completion_with_options(\n+    code: &str,\n+    kind: CompletionKind,\n+    options: &CompletionOptions,\n+) -> Vec<CompletionItem> {\n+    let (analysis, position) = if code.contains(\"//-\") {\n+        analysis_and_position(code)\n+    } else {\n+        single_file_with_position(code)\n+    };\n+    let completions = analysis.completions(position, options).unwrap().unwrap();\n+    let completion_items: Vec<CompletionItem> = completions.into();\n+    let mut kind_completions: Vec<CompletionItem> =\n+        completion_items.into_iter().filter(|c| c.completion_kind == kind).collect();\n+    kind_completions.sort_by_key(|c| c.label().to_owned());\n+    kind_completions\n+}"}]}