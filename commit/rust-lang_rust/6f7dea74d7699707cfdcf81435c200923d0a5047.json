{"sha": "6f7dea74d7699707cfdcf81435c200923d0a5047", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmN2RlYTc0ZDc2OTk3MDdjZmRjZjgxNDM1YzIwMDkyM2QwYTUwNDc=", "commit": {"author": {"name": "scottmcm", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-18T18:29:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-18T18:29:34Z"}, "message": "Mention the issue number for the new mir-opt in the FIXMEs\r\n\r\nThanks for the suggestions, lcnr!\n\nCo-authored-by: lcnr <rust@lcnr.de>", "tree": {"sha": "416c142b1b042f700328cdaf006b0e9092907fc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/416c142b1b042f700328cdaf006b0e9092907fc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f7dea74d7699707cfdcf81435c200923d0a5047", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgpAeOCRBK7hj4Ov3rIwAANzAIAE6plBuN24cxyP8rL3tcrwCp\n29kNq5ayflDNeYvVce3GDrbyBPuN4etJUPVXzK0+v8guS+w/RYAfJpj070F6qZlk\nNJjtqivciFons4qRmPMxkQ65T+6KpTKHSLoTlclBIIiPOfeWAnPuPSEg1cJjS4F0\nhI/nT3QziQLbWHD5jH5mumDplbDjwCESiptsA71vDYdaAtxo7zwTlxLwnqHjoRXF\nqmtxGXB0ERinuAnp0ssgOlLZO4jK/XJBkIx/hKxbyOtY7xPlcoJ/ToqdlyBUc1zL\nfsAnep4yGxmvK0QiSPQO71r1IF/FOyGFCf50Snn6tR4LFpwmY2vwyzyDEnJxzwU=\n=MM+8\n-----END PGP SIGNATURE-----\n", "payload": "tree 416c142b1b042f700328cdaf006b0e9092907fc3\nparent bf0e34c00159b60472ca2f78adb8837b9f5849a2\nauthor scottmcm <scottmcm@users.noreply.github.com> 1621362574 +0000\ncommitter GitHub <noreply@github.com> 1621362574 +0000\n\nMention the issue number for the new mir-opt in the FIXMEs\r\n\r\nThanks for the suggestions, lcnr!\n\nCo-authored-by: lcnr <rust@lcnr.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f7dea74d7699707cfdcf81435c200923d0a5047", "html_url": "https://github.com/rust-lang/rust/commit/6f7dea74d7699707cfdcf81435c200923d0a5047", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f7dea74d7699707cfdcf81435c200923d0a5047/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf0e34c00159b60472ca2f78adb8837b9f5849a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0e34c00159b60472ca2f78adb8837b9f5849a2", "html_url": "https://github.com/rust-lang/rust/commit/bf0e34c00159b60472ca2f78adb8837b9f5849a2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0363b9dd19eb76fd19ede939f6cfbed0dce06296", "filename": "src/test/codegen/try_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f7dea74d7699707cfdcf81435c200923d0a5047/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7dea74d7699707cfdcf81435c200923d0a5047/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ftry_identity.rs?ref=6f7dea74d7699707cfdcf81435c200923d0a5047", "patch": "@@ -9,7 +9,7 @@ type R = Result<u64, i32>;\n \n // This was written to the `?` from `try_trait`, but `try_trait_v2` uses a different structure,\n // so the relevant desugar is copied inline in order to keep the test testing the same thing.\n-// FIXME: while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n+// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n // that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.  See #85133\n #[no_mangle]\n pub fn try_identity(x: R) -> R {"}, {"sha": "e0c7b95a5ec36c82fce921212179f77ca817cbf9", "filename": "src/test/mir-opt/simplify-arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f7dea74d7699707cfdcf81435c200923d0a5047/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7dea74d7699707cfdcf81435c200923d0a5047/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs?ref=6f7dea74d7699707cfdcf81435c200923d0a5047", "patch": "@@ -30,7 +30,7 @@ fn from_error<T, E>(e: E) -> Result<T, E> {\n \n // This was written to the `?` from `try_trait`, but `try_trait_v2` uses a different structure,\n // so the relevant desugar is copied inline in order to keep the test testing the same thing.\n-// FIXME: while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n+// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n // that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.  See #85133\n fn id_try(r: Result<u8, i32>) -> Result<u8, i32> {\n     let x = match into_result(r) {"}, {"sha": "46c239ebe323adca2329cfab14cd3cbb16b4bd04", "filename": "src/test/mir-opt/simplify_try.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f7dea74d7699707cfdcf81435c200923d0a5047/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7dea74d7699707cfdcf81435c200923d0a5047/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs?ref=6f7dea74d7699707cfdcf81435c200923d0a5047", "patch": "@@ -15,7 +15,7 @@ fn from_error<T, E>(e: E) -> Result<T, E> {\n \n // This was written to the `?` from `try_trait`, but `try_trait_v2` uses a different structure,\n // so the relevant desugar is copied inline in order to keep the test testing the same thing.\n-// FIXME: while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n+// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n // that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.  See #85133\n fn try_identity(x: Result<u32, i32>) -> Result<u32, i32> {\n     let y = match into_result(x) {"}]}