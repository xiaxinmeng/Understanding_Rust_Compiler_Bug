{"sha": "56a28a65f54b846abc93945a58a5e3b93b109dc6", "node_id": "C_kwDOAAsO6NoAKDU2YTI4YTY1ZjU0Yjg0NmFiYzkzOTQ1YTU4YTVlM2I5M2IxMDlkYzY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-16T14:39:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-16T14:39:44Z"}, "message": "Rollup merge of #103750 - calebzulawski:master, r=workingjubilee\n\nFix some misleading target feature aliases\n\nThis is the first half of a fix for #100752.  It looks like these aliases were added in #78361 and slipped under the radar, as these features are not AVX512.  These features _do_ add AVX512 instructions when used _in combination_ with AVX512F, but without AVX512F, these features still provide 128-bit and 256-bit vector instructions.  A user might be mislead into thinking these features imply AVX512F (which is true of the actual AVX512 features).  This PR allows using the names as defined by LLVM, which matches Intel documentation.\n\nA future PR should change the `std::arch` intrinsics to use these names, and finally remove these aliases from rustc.\n\nr? ```@workingjubilee```\n\ncc ```@Amanieu```", "tree": {"sha": "70f0c8fb0289513c3342f95d2f681cb888f59735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70f0c8fb0289513c3342f95d2f681cb888f59735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56a28a65f54b846abc93945a58a5e3b93b109dc6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjdPYwCRBK7hj4Ov3rIwAAQVoIAB8yrjmz+qGu+niQhFbVPSOm\nsK9f7SfMvwwULIGCAS9+mxMBY10UpouertXCPdlbEv8oXe3I37eWmu8eO3bSJ75T\nW/tTf+R94LzngyOWQ8PYLKbyj/SytjQb1EsCup1veD+gDqzVfel/qtLvrDDDJcaP\n1LCosdwhhYsW9RZi3M02t8NJ+d5JFFPJWD94P/l0OEaZKAB/vxuFOeouhhn0MfCw\nLdOeLFMJeH17GplHEb/pPFKO6531Q43LyYbshTRvsYtKcZ4bTslXPE9rG0v/9RSU\n7aMaN7LAarz9PuTKsLJBs8/eZnlzhbcG9mlEng1hrjtlSfTvq/wWI0Hvd7VA84M=\n=P25c\n-----END PGP SIGNATURE-----\n", "payload": "tree 70f0c8fb0289513c3342f95d2f681cb888f59735\nparent 63c748ee23ab7b6706655146f5b7c7f579811803\nparent 11224000e8e9468b3c2a7999aa7566d361d81a4c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668609584 +0100\ncommitter GitHub <noreply@github.com> 1668609584 +0100\n\nRollup merge of #103750 - calebzulawski:master, r=workingjubilee\n\nFix some misleading target feature aliases\n\nThis is the first half of a fix for #100752.  It looks like these aliases were added in #78361 and slipped under the radar, as these features are not AVX512.  These features _do_ add AVX512 instructions when used _in combination_ with AVX512F, but without AVX512F, these features still provide 128-bit and 256-bit vector instructions.  A user might be mislead into thinking these features imply AVX512F (which is true of the actual AVX512 features).  This PR allows using the names as defined by LLVM, which matches Intel documentation.\n\nA future PR should change the `std::arch` intrinsics to use these names, and finally remove these aliases from rustc.\n\nr? ```@workingjubilee```\n\ncc ```@Amanieu```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56a28a65f54b846abc93945a58a5e3b93b109dc6", "html_url": "https://github.com/rust-lang/rust/commit/56a28a65f54b846abc93945a58a5e3b93b109dc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56a28a65f54b846abc93945a58a5e3b93b109dc6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63c748ee23ab7b6706655146f5b7c7f579811803", "url": "https://api.github.com/repos/rust-lang/rust/commits/63c748ee23ab7b6706655146f5b7c7f579811803", "html_url": "https://github.com/rust-lang/rust/commit/63c748ee23ab7b6706655146f5b7c7f579811803"}, {"sha": "11224000e8e9468b3c2a7999aa7566d361d81a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/11224000e8e9468b3c2a7999aa7566d361d81a4c", "html_url": "https://github.com/rust-lang/rust/commit/11224000e8e9468b3c2a7999aa7566d361d81a4c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "b9600da5c39df00d9146d14e4da7e3a55229f879", "filename": "compiler/rustc_codegen_gcc/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56a28a65f54b846abc93945a58a5e3b93b109dc6/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a28a65f54b846abc93945a58a5e3b93b109dc6/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs?ref=56a28a65f54b846abc93945a58a5e3b93b109dc6", "patch": "@@ -315,10 +315,10 @@ pub fn target_features(sess: &Session, allow_unstable: bool) -> Vec<Symbol> {\n                 false\n             }\n             /*\n-               adx, aes, avx, avx2, avx512bf16, avx512bitalg, avx512bw, avx512cd, avx512dq, avx512er, avx512f, avx512gfni,\n-               avx512ifma, avx512pf, avx512vaes, avx512vbmi, avx512vbmi2, avx512vl, avx512vnni, avx512vp2intersect, avx512vpclmulqdq,\n-               avx512vpopcntdq, bmi1, bmi2, cmpxchg16b, ermsb, f16c, fma, fxsr, lzcnt, movbe, pclmulqdq, popcnt, rdrand, rdseed, rtm,\n-               sha, sse, sse2, sse3, sse4.1, sse4.2, sse4a, ssse3, tbm, xsave, xsavec, xsaveopt, xsaves\n+               adx, aes, avx, avx2, avx512bf16, avx512bitalg, avx512bw, avx512cd, avx512dq, avx512er, avx512f, avx512ifma,\n+               avx512pf, avx512vbmi, avx512vbmi2, avx512vl, avx512vnni, avx512vp2intersect, avx512vpopcntdq,\n+               bmi1, bmi2, cmpxchg16b, ermsb, f16c, fma, fxsr, gfni, lzcnt, movbe, pclmulqdq, popcnt, rdrand, rdseed, rtm,\n+               sha, sse, sse2, sse3, sse4.1, sse4.2, sse4a, ssse3, tbm, vaes, vpclmulqdq, xsave, xsavec, xsaveopt, xsaves\n              */\n             //false\n         })"}, {"sha": "4af1aaec0a112bae017097b936ff406630cb632c", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/56a28a65f54b846abc93945a58a5e3b93b109dc6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a28a65f54b846abc93945a58a5e3b93b109dc6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=56a28a65f54b846abc93945a58a5e3b93b109dc6", "patch": "@@ -163,6 +163,9 @@ pub fn to_llvm_features<'a>(sess: &Session, s: &'a str) -> SmallVec<[&'a str; 2]\n         (\"x86\", \"rdrand\") => smallvec![\"rdrnd\"],\n         (\"x86\", \"bmi1\") => smallvec![\"bmi\"],\n         (\"x86\", \"cmpxchg16b\") => smallvec![\"cx16\"],\n+        // FIXME: These aliases are misleading, and should be removed before avx512_target_feature is\n+        // stabilized. They must remain until std::arch switches off them.\n+        // rust#100752\n         (\"x86\", \"avx512vaes\") => smallvec![\"vaes\"],\n         (\"x86\", \"avx512gfni\") => smallvec![\"gfni\"],\n         (\"x86\", \"avx512vpclmulqdq\") => smallvec![\"vpclmulqdq\"],"}, {"sha": "002aaf0db13cf2b150bfe3998cb47ed0b3937c2f", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/56a28a65f54b846abc93945a58a5e3b93b109dc6/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a28a65f54b846abc93945a58a5e3b93b109dc6/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=56a28a65f54b846abc93945a58a5e3b93b109dc6", "patch": "@@ -179,6 +179,7 @@ const X86_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"f16c\", Some(sym::f16c_target_feature)),\n     (\"fma\", None),\n     (\"fxsr\", None),\n+    (\"gfni\", Some(sym::avx512_target_feature)),\n     (\"lzcnt\", None),\n     (\"movbe\", Some(sym::movbe_target_feature)),\n     (\"pclmulqdq\", None),\n@@ -195,6 +196,8 @@ const X86_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"sse4a\", Some(sym::sse4a_target_feature)),\n     (\"ssse3\", None),\n     (\"tbm\", Some(sym::tbm_target_feature)),\n+    (\"vaes\", Some(sym::avx512_target_feature)),\n+    (\"vpclmulqdq\", Some(sym::avx512_target_feature)),\n     (\"xsave\", None),\n     (\"xsavec\", None),\n     (\"xsaveopt\", None),"}]}