{"sha": "7b2ab597bd2d500a68e08d0546d8f72f6a013248", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMmFiNTk3YmQyZDUwMGE2OGUwOGQwNTQ2ZDhmNzJmNmEwMTMyNDg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-18T16:18:12Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-18T16:18:12Z"}, "message": "Merge #1544\n\n1544: Highlight mutable variables differently r=matklad a=viorina\n\n![Screenshot from 2019-07-18 19-04-57](https://user-images.githubusercontent.com/6714973/61473539-3f5d3000-a98f-11e9-99ec-a4115b2ba66b.png)\r\n\n\nCo-authored-by: Ekaterina Babshukova <ekaterina.babshukova@yandex.ru>", "tree": {"sha": "33266be000ef9aabe1049916d9772af70a4249b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33266be000ef9aabe1049916d9772af70a4249b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b2ab597bd2d500a68e08d0546d8f72f6a013248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2ab597bd2d500a68e08d0546d8f72f6a013248", "html_url": "https://github.com/rust-lang/rust/commit/7b2ab597bd2d500a68e08d0546d8f72f6a013248", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b2ab597bd2d500a68e08d0546d8f72f6a013248/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "a15a278308047b160e5805dbb554a1949fcb0228", "url": "https://api.github.com/repos/rust-lang/rust/commits/a15a278308047b160e5805dbb554a1949fcb0228", "html_url": "https://github.com/rust-lang/rust/commit/a15a278308047b160e5805dbb554a1949fcb0228"}, {"sha": "4abe03879bbd11536fbb51b30342cdad74317025", "url": "https://api.github.com/repos/rust-lang/rust/commits/4abe03879bbd11536fbb51b30342cdad74317025", "html_url": "https://github.com/rust-lang/rust/commit/4abe03879bbd11536fbb51b30342cdad74317025"}], "stats": {"total": 169, "additions": 114, "deletions": 55}, "files": [{"sha": "081974e2b69396c5b9b776a233b44b59d0824a22", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=7b2ab597bd2d500a68e08d0546d8f72f6a013248", "patch": "@@ -68,6 +68,7 @@ pub use self::{\n     source_binder::{PathResolution, ScopeEntryWithSyntax, SourceAnalyzer},\n     source_id::{AstIdMap, ErasedFileAstId},\n     ty::{display::HirDisplay, ApplicationTy, CallableDef, Substs, TraitRef, Ty, TypeCtor},\n+    type_ref::Mutability,\n };\n \n pub use self::code_model::{"}, {"sha": "709816d0d3b079b8f66a7b97d6443b85c99d15bf", "filename": "crates/ra_ide_api/src/snapshots/highlighting.html", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=7b2ab597bd2d500a68e08d0546d8f72f6a013248", "patch": "@@ -1,21 +1,22 @@\n \n <style>\n-body       { margin: 0; }\n-pre        { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n-\n-.comment   { color: #7F9F7F; }\n-.string    { color: #CC9393; }\n-.function  { color: #93E0E3; }\n-.parameter { color: #94BFF3; }\n-.builtin   { color: #DD6718; }\n-.text      { color: #DCDCCC; }\n-.attribute { color: #BFEBBF; }\n-.literal   { color: #DFAF8F; }\n-.macro     { color: #DFAF8F; }\n-\n-.keyword           { color: #F0DFAF; }\n-.keyword\\.unsafe  { color: #F0DFAF; font-weight: bold; }\n-.keyword\\.control { color: #DC8CC3; }\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.comment            { color: #7F9F7F; }\n+.string             { color: #CC9393; }\n+.function           { color: #93E0E3; }\n+.parameter          { color: #94BFF3; }\n+.builtin            { color: #DD6718; }\n+.text               { color: #DCDCCC; }\n+.attribute          { color: #BFEBBF; }\n+.literal            { color: #DFAF8F; }\n+.macro              { color: #DFAF8F; }\n+.variable\\.mut     { color: #DFAF8F; }\n+\n+.keyword            { color: #F0DFAF; }\n+.keyword\\.unsafe   { color: #F0DFAF; font-weight: bold; }\n+.keyword\\.control  { color: #DC8CC3; }\n </style>\n <pre><code><span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"attribute\">derive</span><span class=\"attribute\">(</span><span class=\"attribute\">Clone</span><span class=\"attribute\">,</span><span class=\"attribute\"> </span><span class=\"attribute\">Debug</span><span class=\"attribute\">)</span><span class=\"attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"type\">Foo</span> {\n@@ -32,9 +33,15 @@\n <span class=\"keyword\">fn</span> <span class=\"function\">main</span>() {\n     <span class=\"macro\">println</span><span class=\"macro\">!</span>(<span class=\"string\">\"Hello, {}!\"</span>, <span class=\"literal\">92</span>);\n \n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable\" data-binding-hash=\"9636295041291189729\" style=\"color: hsl(51,57%,74%);\">vec</span> = <span class=\"text\">Vec</span>::<span class=\"text\">new</span>();\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable.mut\">vec</span> = <span class=\"text\">Vec</span>::<span class=\"text\">new</span>();\n     <span class=\"keyword.control\">if</span> <span class=\"keyword\">true</span> {\n-        <span class=\"variable\" data-binding-hash=\"8496027264380925433\" style=\"color: hsl(18,48%,55%);\">vec</span>.<span class=\"text\">push</span>(<span class=\"type\">Foo</span> { <span class=\"field\">x</span>: <span class=\"literal\">0</span>, <span class=\"field\">y</span>: <span class=\"literal\">1</span> });\n+        <span class=\"variable.mut\">vec</span>.<span class=\"text\">push</span>(<span class=\"type\">Foo</span> { <span class=\"field\">x</span>: <span class=\"literal\">0</span>, <span class=\"field\">y</span>: <span class=\"literal\">1</span> });\n     }\n-    <span class=\"keyword.unsafe\">unsafe</span> { <span class=\"variable\" data-binding-hash=\"8496027264380925433\" style=\"color: hsl(18,48%,55%);\">vec</span>.<span class=\"text\">set_len</span>(<span class=\"literal\">0</span>); }\n+    <span class=\"keyword.unsafe\">unsafe</span> { <span class=\"variable.mut\">vec</span>.<span class=\"text\">set_len</span>(<span class=\"literal\">0</span>); }\n+\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable.mut\">x</span> = <span class=\"literal\">42</span>;\n+    <span class=\"keyword\">let</span> <span class=\"variable.mut\">y</span> = &<span class=\"keyword\">mut</span> <span class=\"variable.mut\">x</span>;\n+    <span class=\"keyword\">let</span> <span class=\"variable\">z</span> = &<span class=\"variable.mut\">y</span>;\n+\n+    <span class=\"variable.mut\">y</span>;\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "ad3935b5dc892f4696972a88d680f40847601bd2", "filename": "crates/ra_ide_api/src/snapshots/rainbow_highlighting.html", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=7b2ab597bd2d500a68e08d0546d8f72f6a013248", "patch": "@@ -1,21 +1,22 @@\n \n <style>\n-body       { margin: 0; }\n-pre        { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n-.comment   { color: #7F9F7F; }\n-.string    { color: #CC9393; }\n-.function  { color: #93E0E3; }\n-.parameter { color: #94BFF3; }\n-.builtin   { color: #DD6718; }\n-.text      { color: #DCDCCC; }\n-.attribute { color: #BFEBBF; }\n-.literal   { color: #DFAF8F; }\n-.macro     { color: #DFAF8F; }\n+.comment            { color: #7F9F7F; }\n+.string             { color: #CC9393; }\n+.function           { color: #93E0E3; }\n+.parameter          { color: #94BFF3; }\n+.builtin            { color: #DD6718; }\n+.text               { color: #DCDCCC; }\n+.attribute          { color: #BFEBBF; }\n+.literal            { color: #DFAF8F; }\n+.macro              { color: #DFAF8F; }\n+.variable\\.mut     { color: #DFAF8F; }\n \n-.keyword           { color: #F0DFAF; }\n-.keyword\\.unsafe  { color: #F0DFAF; font-weight: bold; }\n-.keyword\\.control { color: #DC8CC3; }\n+.keyword            { color: #F0DFAF; }\n+.keyword\\.unsafe   { color: #F0DFAF; font-weight: bold; }\n+.keyword\\.control  { color: #DC8CC3; }\n </style>\n <pre><code><span class=\"keyword\">fn</span> <span class=\"function\">main</span>() {\n     <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"3888301305669440875\" style=\"color: hsl(242,59%,59%);\">hello</span> = <span class=\"string\">\"hello\"</span>;"}, {"sha": "d84ae2cb26535b10380a3a8744bfcb123700a960", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "modified", "additions": 61, "deletions": 21, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=7b2ab597bd2d500a68e08d0546d8f72f6a013248", "patch": "@@ -1,9 +1,11 @@\n use rustc_hash::{FxHashMap, FxHashSet};\n \n+use hir::{Mutability, Ty};\n use ra_db::SourceDatabase;\n use ra_prof::profile;\n use ra_syntax::{\n-    ast, AstNode, Direction, SmolStr, SyntaxElement, SyntaxKind, SyntaxKind::*, TextRange, T,\n+    ast, AstNode, Direction, Pat, PatKind, SmolStr, SyntaxElement, SyntaxKind, SyntaxKind::*,\n+    TextRange, T,\n };\n \n use crate::{db::RootDatabase, FileId};\n@@ -30,6 +32,27 @@ fn is_control_keyword(kind: SyntaxKind) -> bool {\n     }\n }\n \n+fn is_variable_mutable(db: &RootDatabase, analyzer: &hir::SourceAnalyzer, pat: &Pat) -> bool {\n+    let ty = analyzer.type_of_pat(db, pat).unwrap_or(Ty::Unknown);\n+    let is_ty_mut = {\n+        if let Some((_, mutability)) = ty.as_reference() {\n+            match mutability {\n+                Mutability::Shared => false,\n+                Mutability::Mut => true,\n+            }\n+        } else {\n+            false\n+        }\n+    };\n+\n+    let is_pat_mut = match pat.kind() {\n+        PatKind::BindPat(bind_pat) => bind_pat.is_mutable(),\n+        _ => false,\n+    };\n+\n+    is_ty_mut || is_pat_mut\n+}\n+\n pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRange> {\n     let _p = profile(\"highlight\");\n     let parse = db.parse(file_id);\n@@ -97,7 +120,11 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n                                 calc_binding_hash(file_id, &text, *shadow_count)\n                             });\n \n-                            \"variable\"\n+                            if is_variable_mutable(db, &analyzer, ptr.to_node(root)) {\n+                                \"variable.mut\"\n+                            } else {\n+                                \"variable\"\n+                            }\n                         }\n                         Some(SelfParam(_)) => \"type\",\n                         Some(GenericParam(_)) => \"type\",\n@@ -109,15 +136,21 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n             }\n             NAME => {\n                 if let Some(name) = node.as_node().and_then(ast::Name::cast) {\n-                    if name.syntax().ancestors().any(|x| ast::BindPat::cast(x).is_some()) {\n+                    let analyzer = hir::SourceAnalyzer::new(db, file_id, name.syntax(), None);\n+                    if let Some(pat) = name.syntax().ancestors().find_map(Pat::cast) {\n                         binding_hash = Some({\n                             let text = name.syntax().text().to_smol_string();\n                             let shadow_count =\n                                 bindings_shadow_count.entry(text.clone()).or_insert(0);\n                             *shadow_count += 1;\n                             calc_binding_hash(file_id, &text, *shadow_count)\n                         });\n-                        \"variable\"\n+\n+                        if is_variable_mutable(db, &analyzer, pat) {\n+                            \"variable.mut\"\n+                        } else {\n+                            \"variable\"\n+                        }\n                     } else if name\n                         .syntax()\n                         .parent()\n@@ -241,22 +274,23 @@ fn html_escape(text: &str) -> String {\n \n const STYLE: &str = \"\n <style>\n-body       { margin: 0; }\n-pre        { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n-\n-.comment   { color: #7F9F7F; }\n-.string    { color: #CC9393; }\n-.function  { color: #93E0E3; }\n-.parameter { color: #94BFF3; }\n-.builtin   { color: #DD6718; }\n-.text      { color: #DCDCCC; }\n-.attribute { color: #BFEBBF; }\n-.literal   { color: #DFAF8F; }\n-.macro     { color: #DFAF8F; }\n-\n-.keyword           { color: #F0DFAF; }\n-.keyword\\\\.unsafe  { color: #F0DFAF; font-weight: bold; }\n-.keyword\\\\.control { color: #DC8CC3; }\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.comment            { color: #7F9F7F; }\n+.string             { color: #CC9393; }\n+.function           { color: #93E0E3; }\n+.parameter          { color: #94BFF3; }\n+.builtin            { color: #DD6718; }\n+.text               { color: #DCDCCC; }\n+.attribute          { color: #BFEBBF; }\n+.literal            { color: #DFAF8F; }\n+.macro              { color: #DFAF8F; }\n+.variable\\\\.mut     { color: #DFAF8F; }\n+\n+.keyword            { color: #F0DFAF; }\n+.keyword\\\\.unsafe   { color: #F0DFAF; font-weight: bold; }\n+.keyword\\\\.control  { color: #DC8CC3; }\n </style>\n \";\n \n@@ -289,12 +323,18 @@ fn main() {\n         vec.push(Foo { x: 0, y: 1 });\n     }\n     unsafe { vec.set_len(0); }\n+\n+    let mut x = 42;\n+    let y = &mut x;\n+    let z = &y;\n+\n+    y;\n }\n \"#\n             .trim(),\n         );\n         let dst_file = project_dir().join(\"crates/ra_ide_api/src/snapshots/highlighting.html\");\n-        let actual_html = &analysis.highlight_as_html(file_id, true).unwrap();\n+        let actual_html = &analysis.highlight_as_html(file_id, false).unwrap();\n         let expected_html = &read_text(&dst_file);\n         std::fs::write(dst_file, &actual_html).unwrap();\n         assert_eq_text!(expected_html, actual_html);"}, {"sha": "ff347a56706bb3e43346c878226495036396e019", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2ab597bd2d500a68e08d0546d8f72f6a013248/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=7b2ab597bd2d500a68e08d0546d8f72f6a013248", "patch": "@@ -38,7 +38,7 @@ use ra_text_edit::AtomTextEdit;\n use crate::syntax_node::GreenNode;\n \n pub use crate::{\n-    ast::AstNode,\n+    ast::{AstNode, Pat, PatKind},\n     parsing::{classify_literal, tokenize, Token},\n     ptr::{AstPtr, SyntaxNodePtr},\n     syntax_error::{Location, SyntaxError, SyntaxErrorKind},"}, {"sha": "86076753ba08064dff480155914d01551571cb06", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7b2ab597bd2d500a68e08d0546d8f72f6a013248/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/7b2ab597bd2d500a68e08d0546d8f72f6a013248/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=7b2ab597bd2d500a68e08d0546d8f72f6a013248", "patch": "@@ -432,6 +432,15 @@\n                     \"highContrast\": \"#4EC9B0\"\n                 }\n             },\n+            {\n+                \"id\": \"ralsp.variable.mut\",\n+                \"description\": \"Color for mutable variables\",\n+                \"defaults\": {\n+                    \"dark\": \"#4e65c9\",\n+                    \"light\": \"#263199\",\n+                    \"highContrast\": \"#4e65c9\"\n+                }\n+            },\n             {\n                 \"id\": \"ralsp.module\",\n                 \"description\": \"Color for modules\","}, {"sha": "f3ed663656da5191ee8173863e76f0180bf10447", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7b2ab597bd2d500a68e08d0546d8f72f6a013248/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7b2ab597bd2d500a68e08d0546d8f72f6a013248/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=7b2ab597bd2d500a68e08d0546d8f72f6a013248", "patch": "@@ -56,6 +56,7 @@ export class Highlighter {\n             colorContrib('literal'),\n             colorContrib('macro'),\n             colorContrib('variable'),\n+            colorContrib('variable.mut'),\n             colorContrib('field'),\n             colorContrib('module')\n         ];"}]}