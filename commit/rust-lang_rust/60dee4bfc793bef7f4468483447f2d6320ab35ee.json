{"sha": "60dee4bfc793bef7f4468483447f2d6320ab35ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwZGVlNGJmYzc5M2JlZjdmNDQ2ODQ4MzQ0N2YyZDYzMjBhYjM1ZWU=", "commit": {"author": {"name": "Caspar Krieger", "email": "caspar@asparck.com", "date": "2015-02-21T03:57:20Z"}, "committer": {"name": "Caspar Krieger", "email": "caspar@asparck.com", "date": "2015-02-21T03:57:20Z"}, "message": "Fix typo in deprecation msg", "tree": {"sha": "aac20beab5ec71e205d60abb978a93eeb5bab4a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aac20beab5ec71e205d60abb978a93eeb5bab4a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60dee4bfc793bef7f4468483447f2d6320ab35ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60dee4bfc793bef7f4468483447f2d6320ab35ee", "html_url": "https://github.com/rust-lang/rust/commit/60dee4bfc793bef7f4468483447f2d6320ab35ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60dee4bfc793bef7f4468483447f2d6320ab35ee/comments", "author": {"login": "caspark", "id": 931544, "node_id": "MDQ6VXNlcjkzMTU0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/931544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caspark", "html_url": "https://github.com/caspark", "followers_url": "https://api.github.com/users/caspark/followers", "following_url": "https://api.github.com/users/caspark/following{/other_user}", "gists_url": "https://api.github.com/users/caspark/gists{/gist_id}", "starred_url": "https://api.github.com/users/caspark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caspark/subscriptions", "organizations_url": "https://api.github.com/users/caspark/orgs", "repos_url": "https://api.github.com/users/caspark/repos", "events_url": "https://api.github.com/users/caspark/events{/privacy}", "received_events_url": "https://api.github.com/users/caspark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "caspark", "id": 931544, "node_id": "MDQ6VXNlcjkzMTU0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/931544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caspark", "html_url": "https://github.com/caspark", "followers_url": "https://api.github.com/users/caspark/followers", "following_url": "https://api.github.com/users/caspark/following{/other_user}", "gists_url": "https://api.github.com/users/caspark/gists{/gist_id}", "starred_url": "https://api.github.com/users/caspark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caspark/subscriptions", "organizations_url": "https://api.github.com/users/caspark/orgs", "repos_url": "https://api.github.com/users/caspark/repos", "events_url": "https://api.github.com/users/caspark/events{/privacy}", "received_events_url": "https://api.github.com/users/caspark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "html_url": "https://github.com/rust-lang/rust/commit/522d09dfecbeca1595f25ac58c6d0178bbd21d7d"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "1c64b6961d7a1a00de99a2be5e1888703c5059a0", "filename": "src/libstd/thread.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/60dee4bfc793bef7f4468483447f2d6320ab35ee/src%2Flibstd%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dee4bfc793bef7f4468483447f2d6320ab35ee/src%2Flibstd%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread.rs?ref=60dee4bfc793bef7f4468483447f2d6320ab35ee", "patch": "@@ -465,16 +465,16 @@ impl Thread {\n         }\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\",\n                reason = \"may change with specifics of new Send semantics\")]\n     pub fn spawn<F>(f: F) -> Thread where F: FnOnce(), F: Send + 'static {\n         Builder::new().spawn(f).unwrap().thread().clone()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\",\n                reason = \"may change with specifics of new Send semantics\")]\n     pub fn scoped<'a, T, F>(f: F) -> JoinGuard<'a, T> where\n@@ -483,30 +483,30 @@ impl Thread {\n         Builder::new().scoped(f).unwrap()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn current() -> Thread {\n         thread_info::current_thread()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\", reason = \"name may change\")]\n     pub fn yield_now() {\n         unsafe { imp::yield_now() }\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn panicking() -> bool {\n         unwind::panicking()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\", reason = \"recently introduced\")]\n     pub fn park() {\n         let thread = current();\n@@ -517,8 +517,8 @@ impl Thread {\n         *guard = false;\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\", reason = \"recently introduced\")]\n     pub fn park_timeout(dur: Duration) {\n         let thread = current();"}]}