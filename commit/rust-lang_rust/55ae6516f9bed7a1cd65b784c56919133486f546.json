{"sha": "55ae6516f9bed7a1cd65b784c56919133486f546", "node_id": "C_kwDOAAsO6NoAKDU1YWU2NTE2ZjliZWQ3YTFjZDY1Yjc4NGM1NjkxOTEzMzQ4NmY1NDY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-11-12T16:25:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-12T16:25:01Z"}, "message": "Rollup merge of #104144 - TaKO8Ki:suggest-removing-unnecessary-dot, r=fee1-dead\n\nSuggest removing unnecessary `.` to use a floating point literal\n\nFixes a part of #101883", "tree": {"sha": "9a9f745eb560dcdc0cdf66932e2c7837b7b2edd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a9f745eb560dcdc0cdf66932e2c7837b7b2edd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55ae6516f9bed7a1cd65b784c56919133486f546", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjb8jdCRBK7hj4Ov3rIwAAJsgIAGKeYR/9GkskNj8t+cl63clW\n+awVLi0FXWxT7qgTuT8cILqHVUAIKqLnkrpki5evyEu43n2fu2vqV/+gYsjvqGNg\nHU9Uu2K+yCwYJP9zJqgWee0inpU2G3LO0fVS0yyjwmPOraZdjSugQBZ1u89zGKMk\nCOhLDaljzVbKRTe39Syhq1vq9zc8nPjmNJryxW154rcYB7/93TGiFA1vVAYr4XTC\nXnJtqCjxoznb+F7giu7tSOiOkCSe1U6YOUfpupv1bQF2Nw3AsUkkhmR0uTDVYgyu\nzJLeEllNqiP/8cqJF6EwEG5PjHGJf6gIGm/uTqfH5VSXGSeTM61YB2azCUAYmzw=\n=AM3K\n-----END PGP SIGNATURE-----\n", "payload": "tree 9a9f745eb560dcdc0cdf66932e2c7837b7b2edd1\nparent bef2da06294d7dddeccd1f6ede825fb77a31b6fc\nparent 6018f115aa7365db39a9df1f883123076403a97b\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1668270301 +0100\ncommitter GitHub <noreply@github.com> 1668270301 +0100\n\nRollup merge of #104144 - TaKO8Ki:suggest-removing-unnecessary-dot, r=fee1-dead\n\nSuggest removing unnecessary `.` to use a floating point literal\n\nFixes a part of #101883\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55ae6516f9bed7a1cd65b784c56919133486f546", "html_url": "https://github.com/rust-lang/rust/commit/55ae6516f9bed7a1cd65b784c56919133486f546", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55ae6516f9bed7a1cd65b784c56919133486f546/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bef2da06294d7dddeccd1f6ede825fb77a31b6fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bef2da06294d7dddeccd1f6ede825fb77a31b6fc", "html_url": "https://github.com/rust-lang/rust/commit/bef2da06294d7dddeccd1f6ede825fb77a31b6fc"}, {"sha": "6018f115aa7365db39a9df1f883123076403a97b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6018f115aa7365db39a9df1f883123076403a97b", "html_url": "https://github.com/rust-lang/rust/commit/6018f115aa7365db39a9df1f883123076403a97b"}], "stats": {"total": 112, "additions": 110, "deletions": 2}, "files": [{"sha": "be618eb664c3f951d042078ff73f551c51ad2d65", "filename": "compiler/rustc_hir_typeck/src/demand.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55ae6516f9bed7a1cd65b784c56919133486f546/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ae6516f9bed7a1cd65b784c56919133486f546/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs?ref=55ae6516f9bed7a1cd65b784c56919133486f546", "patch": "@@ -43,7 +43,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             || self.suggest_block_to_brackets_peeling_refs(err, expr, expr_ty, expected)\n             || self.suggest_copied_or_cloned(err, expr, expr_ty, expected)\n             || self.suggest_into(err, expr, expr_ty, expected)\n-            || self.suggest_option_to_bool(err, expr, expr_ty, expected);\n+            || self.suggest_option_to_bool(err, expr, expr_ty, expected)\n+            || self.suggest_floating_point_literal(err, expr, expected);\n \n         self.note_type_is_not_clone(err, expected, expr_ty, expr);\n         self.note_need_for_fn_pointer(err, expected, expr_ty);"}, {"sha": "06e6e4350fcbcb9271aac6bb5b8a850692a211b6", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/suggestions.rs", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/55ae6516f9bed7a1cd65b784c56919133486f546/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ae6516f9bed7a1cd65b784c56919133486f546/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs?ref=55ae6516f9bed7a1cd65b784c56919133486f546", "patch": "@@ -374,7 +374,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 let annotation_span = ty.span;\n                                 err.span_suggestion(\n                                     annotation_span.with_hi(annotation_span.lo()),\n-                                    format!(\"alternatively, consider changing the type annotation\"),\n+                                    \"alternatively, consider changing the type annotation\",\n                                     suggest_annotation,\n                                     Applicability::MaybeIncorrect,\n                                 );\n@@ -1204,6 +1204,48 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    #[instrument(skip(self, err))]\n+    pub(crate) fn suggest_floating_point_literal(\n+        &self,\n+        err: &mut Diagnostic,\n+        expr: &hir::Expr<'_>,\n+        expected_ty: Ty<'tcx>,\n+    ) -> bool {\n+        if !expected_ty.is_floating_point() {\n+            return false;\n+        }\n+        match expr.kind {\n+            ExprKind::Struct(QPath::LangItem(LangItem::Range, ..), [start, end], _) => {\n+                err.span_suggestion_verbose(\n+                    start.span.shrink_to_hi().with_hi(end.span.lo()),\n+                    \"remove the unnecessary `.` operator for a floating point literal\",\n+                    '.',\n+                    Applicability::MaybeIncorrect,\n+                );\n+                true\n+            }\n+            ExprKind::Struct(QPath::LangItem(LangItem::RangeFrom, ..), [start], _) => {\n+                err.span_suggestion_verbose(\n+                    expr.span.with_lo(start.span.hi()),\n+                    \"remove the unnecessary `.` operator for a floating point literal\",\n+                    '.',\n+                    Applicability::MaybeIncorrect,\n+                );\n+                true\n+            }\n+            ExprKind::Struct(QPath::LangItem(LangItem::RangeTo, ..), [end], _) => {\n+                err.span_suggestion_verbose(\n+                    expr.span.until(end.span),\n+                    \"remove the unnecessary `.` operator and add an integer part for a floating point literal\",\n+                    \"0.\",\n+                    Applicability::MaybeIncorrect,\n+                );\n+                true\n+            }\n+            _ => false,\n+        }\n+    }\n+\n     fn is_loop(&self, id: hir::HirId) -> bool {\n         let node = self.tcx.hir().get(id);\n         matches!(node, Node::Expr(Expr { kind: ExprKind::Loop(..), .. }))"}, {"sha": "c1a944562683a802277f24947f2275d884283c27", "filename": "src/test/ui/suggestions/unnecessary_dot_for_floating_point_literal.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/55ae6516f9bed7a1cd65b784c56919133486f546/src%2Ftest%2Fui%2Fsuggestions%2Funnecessary_dot_for_floating_point_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ae6516f9bed7a1cd65b784c56919133486f546/src%2Ftest%2Fui%2Fsuggestions%2Funnecessary_dot_for_floating_point_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funnecessary_dot_for_floating_point_literal.rs?ref=55ae6516f9bed7a1cd65b784c56919133486f546", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let _: f64 = 0..10; //~ ERROR mismatched types\n+    let _: f64 = 1..; //~ ERROR mismatched types\n+    let _: f64 = ..10; //~ ERROR mismatched types\n+    let _: f64 = std::ops::Range { start: 0, end: 1 }; //~ ERROR mismatched types\n+}"}, {"sha": "773f1392ae7655827c2e619bf95beefdcefb48a8", "filename": "src/test/ui/suggestions/unnecessary_dot_for_floating_point_literal.stderr", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/55ae6516f9bed7a1cd65b784c56919133486f546/src%2Ftest%2Fui%2Fsuggestions%2Funnecessary_dot_for_floating_point_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/55ae6516f9bed7a1cd65b784c56919133486f546/src%2Ftest%2Fui%2Fsuggestions%2Funnecessary_dot_for_floating_point_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funnecessary_dot_for_floating_point_literal.stderr?ref=55ae6516f9bed7a1cd65b784c56919133486f546", "patch": "@@ -0,0 +1,59 @@\n+error[E0308]: mismatched types\n+  --> $DIR/unnecessary_dot_for_floating_point_literal.rs:2:18\n+   |\n+LL |     let _: f64 = 0..10;\n+   |            ---   ^^^^^ expected `f64`, found struct `std::ops::Range`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected type `f64`\n+            found struct `std::ops::Range<{integer}>`\n+help: remove the unnecessary `.` operator for a floating point literal\n+   |\n+LL |     let _: f64 = 0.10;\n+   |                   ~\n+\n+error[E0308]: mismatched types\n+  --> $DIR/unnecessary_dot_for_floating_point_literal.rs:3:18\n+   |\n+LL |     let _: f64 = 1..;\n+   |            ---   ^^^ expected `f64`, found struct `RangeFrom`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected type `f64`\n+            found struct `RangeFrom<{integer}>`\n+help: remove the unnecessary `.` operator for a floating point literal\n+   |\n+LL |     let _: f64 = 1.;\n+   |                   ~\n+\n+error[E0308]: mismatched types\n+  --> $DIR/unnecessary_dot_for_floating_point_literal.rs:4:18\n+   |\n+LL |     let _: f64 = ..10;\n+   |            ---   ^^^^ expected `f64`, found struct `RangeTo`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected type `f64`\n+            found struct `RangeTo<{integer}>`\n+help: remove the unnecessary `.` operator and add an integer part for a floating point literal\n+   |\n+LL |     let _: f64 = 0.10;\n+   |                  ~~\n+\n+error[E0308]: mismatched types\n+  --> $DIR/unnecessary_dot_for_floating_point_literal.rs:5:18\n+   |\n+LL |     let _: f64 = std::ops::Range { start: 0, end: 1 };\n+   |            ---   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `f64`, found struct `std::ops::Range`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected type `f64`\n+            found struct `std::ops::Range<{integer}>`\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}