{"sha": "29359d0efa7314258e412f96875a723773784652", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MzU5ZDBlZmE3MzE0MjU4ZTQxMmY5Njg3NWE3MjM3NzM3ODQ2NTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-04T01:31:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-04T01:31:20Z"}, "message": "auto merge of #10252 : huonw/rust/docs, r=alexcrichton", "tree": {"sha": "75569e78d73c2e401b084b06167fbd7ef041de90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75569e78d73c2e401b084b06167fbd7ef041de90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29359d0efa7314258e412f96875a723773784652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29359d0efa7314258e412f96875a723773784652", "html_url": "https://github.com/rust-lang/rust/commit/29359d0efa7314258e412f96875a723773784652", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29359d0efa7314258e412f96875a723773784652/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c2b38dae5d08d0eda6fbb8736f6295d9fdef9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c2b38dae5d08d0eda6fbb8736f6295d9fdef9e", "html_url": "https://github.com/rust-lang/rust/commit/c4c2b38dae5d08d0eda6fbb8736f6295d9fdef9e"}, {"sha": "da43676e39b87c766c1041e50c206909bb05bfa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/da43676e39b87c766c1041e50c206909bb05bfa6", "html_url": "https://github.com/rust-lang/rust/commit/da43676e39b87c766c1041e50c206909bb05bfa6"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "1e1a21c8ee903d4ace8c17257a90e98c7362c772", "filename": "doc/rust.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/29359d0efa7314258e412f96875a723773784652/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/29359d0efa7314258e412f96875a723773784652/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=29359d0efa7314258e412f96875a723773784652", "patch": "@@ -2063,7 +2063,7 @@ The currently implemented features of the compiler are:\n \n * `once_fns` - Onceness guarantees a closure is only executed once. Defining a\n                closure as `once` is unlikely to be supported going forward. So\n-               they are hidden behind this feature until they are to be removed. \n+               they are hidden behind this feature until they are to be removed.\n \n If a feature is promoted to a language feature, then all existing programs will\n start to receive compilation warnings about #[feature] directives which enabled\n@@ -2748,11 +2748,10 @@ do k(3) |j| {\n \n ~~~~ {.ebnf .gram}\n for_expr : \"for\" pat \"in\" expr '{' block '}' ;\n-~~~~ \n+~~~~\n \n-A `for` expression is a syntactic construct for looping\n-over elements provided by an implementation of\n-`std::iterator::Iterator`.\n+A `for` expression is a syntactic construct for looping over elements\n+provided by an implementation of `std::iter::Iterator`.\n \n An example of a for loop over the contents of a vector:\n "}, {"sha": "bd0510c4fb3fb5683714b12e840f27a2ea23a286", "filename": "doc/tutorial-container.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29359d0efa7314258e412f96875a723773784652/doc%2Ftutorial-container.md", "raw_url": "https://github.com/rust-lang/rust/raw/29359d0efa7314258e412f96875a723773784652/doc%2Ftutorial-container.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-container.md?ref=29359d0efa7314258e412f96875a723773784652", "patch": "@@ -69,7 +69,7 @@ heapsort.\n ## Iteration protocol\n \n The iteration protocol is defined by the `Iterator` trait in the\n-`std::iterator` module. The minimal implementation of the trait is a `next`\n+`std::iter` module. The minimal implementation of the trait is a `next`\n method, yielding the next element from an iterator object:\n \n ~~~"}, {"sha": "6166bbaaaa3f4398467cda1b3f92780350760305", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29359d0efa7314258e412f96875a723773784652/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29359d0efa7314258e412f96875a723773784652/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=29359d0efa7314258e412f96875a723773784652", "patch": "@@ -330,7 +330,7 @@ fn check_for_null(v: &[u8], buf: *mut libc::c_char) {\n \n /// External iterator for a CString's bytes.\n ///\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n pub struct CStringIterator<'self> {\n     priv ptr: *libc::c_char,\n     priv lifetime: &'self libc::c_char, // FIXME: #5922"}, {"sha": "f376a30efa7181d588bc38d8891896635cd2db31", "filename": "src/libstd/str.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/29359d0efa7314258e412f96875a723773784652/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29359d0efa7314258e412f96875a723773784652/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=29359d0efa7314258e412f96875a723773784652", "patch": "@@ -352,7 +352,7 @@ Section: Iterators\n */\n \n /// External iterator for a string's characters.\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n #[deriving(Clone)]\n pub struct CharIterator<'self> {\n     /// The slice remaining to be iterated\n@@ -397,7 +397,7 @@ impl<'self> DoubleEndedIterator<char> for CharIterator<'self> {\n }\n \n /// External iterator for a string's characters and their byte offsets.\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n #[deriving(Clone)]\n pub struct CharOffsetIterator<'self> {\n     /// The original string to be iterated\n@@ -439,20 +439,20 @@ impl<'self> DoubleEndedIterator<(uint, char)> for CharOffsetIterator<'self> {\n }\n \n /// External iterator for a string's characters in reverse order.\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n pub type CharRevIterator<'self> = Invert<CharIterator<'self>>;\n \n /// External iterator for a string's characters and their byte offsets in reverse order.\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n pub type CharOffsetRevIterator<'self> = Invert<CharOffsetIterator<'self>>;\n \n /// External iterator for a string's bytes.\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n pub type ByteIterator<'self> =\n     Map<'self, &'self u8, u8, vec::VecIterator<'self, u8>>;\n \n /// External iterator for a string's bytes in reverse order.\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n pub type ByteRevIterator<'self> = Invert<ByteIterator<'self>>;\n \n /// An iterator over the substrings of a string, separated by `sep`.\n@@ -682,7 +682,7 @@ enum NormalizationForm {\n }\n \n /// External iterator for a string's normalization's characters.\n-/// Use with the `std::iterator` module.\n+/// Use with the `std::iter` module.\n #[deriving(Clone)]\n struct NormalizationIterator<'self> {\n     priv kind: NormalizationForm,"}]}