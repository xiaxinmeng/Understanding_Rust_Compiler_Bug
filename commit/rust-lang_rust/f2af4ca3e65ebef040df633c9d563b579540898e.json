{"sha": "f2af4ca3e65ebef040df633c9d563b579540898e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYWY0Y2EzZTY1ZWJlZjA0MGRmNjMzYzlkNTYzYjU3OTU0MDg5OGU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-10T20:47:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-16T06:22:06Z"}, "message": "core: Allow formatted failure and assert in core\n\nWith std::fmt having migrated, the failure macro can be expressed in its full\nglory.", "tree": {"sha": "f210a158fb2d5991792590c68bae0fd4b97a37e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f210a158fb2d5991792590c68bae0fd4b97a37e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2af4ca3e65ebef040df633c9d563b579540898e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2af4ca3e65ebef040df633c9d563b579540898e", "html_url": "https://github.com/rust-lang/rust/commit/f2af4ca3e65ebef040df633c9d563b579540898e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2af4ca3e65ebef040df633c9d563b579540898e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c25556865205e6978e6bc9eb0e6d5e151e1a68d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c25556865205e6978e6bc9eb0e6d5e151e1a68d9", "html_url": "https://github.com/rust-lang/rust/commit/c25556865205e6978e6bc9eb0e6d5e151e1a68d9"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "11b74aaffe917a3eecae4f74e599a7e2912c7e1e", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f2af4ca3e65ebef040df633c9d563b579540898e/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2af4ca3e65ebef040df633c9d563b579540898e/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=f2af4ca3e65ebef040df633c9d563b579540898e", "patch": "@@ -14,11 +14,29 @@\n #[macro_export]\n macro_rules! fail(\n     () => (\n-        fail!(\"explicit failure\")\n+        fail!(\"{}\", \"explicit failure\")\n     );\n     ($msg:expr) => (\n-        ::core::failure::begin_unwind($msg, file!(), line!())\n+        fail!(\"{}\", $msg)\n     );\n+    ($fmt:expr, $($arg:tt)*) => ({\n+        // a closure can't have return type !, so we need a full\n+        // function to pass to format_args!, *and* we need the\n+        // file and line numbers right here; so an inner bare fn\n+        // is our only choice.\n+        //\n+        // LLVM doesn't tend to inline this, presumably because begin_unwind_fmt\n+        // is #[cold] and #[inline(never)] and because this is flagged as cold\n+        // as returning !. We really do want this to be inlined, however,\n+        // because it's just a tiny wrapper. Small wins (156K to 149K in size)\n+        // were seen when forcing this to be inlined, and that number just goes\n+        // up with the number of calls to fail!()\n+        #[inline(always)]\n+        fn run_fmt(fmt: &::std::fmt::Arguments) -> ! {\n+            ::core::failure::begin_unwind(fmt, file!(), line!())\n+        }\n+        format_args!(run_fmt, $fmt, $($arg)*)\n+    });\n )\n \n /// Runtime assertion, for details see std::macros\n@@ -29,6 +47,11 @@ macro_rules! assert(\n             fail!(concat!(\"assertion failed: \", stringify!($cond)))\n         }\n     );\n+    ($cond:expr, $($arg:tt)*) => (\n+        if !$cond {\n+            fail!($($arg)*)\n+        }\n+    );\n )\n \n /// Runtime assertion, disableable at compile time"}]}