{"sha": "dfc08610850bc05a3bc31699b592d789a3c71911", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYzA4NjEwODUwYmMwNWEzYmMzMTY5OWI1OTJkNzg5YTNjNzE5MTE=", "commit": {"author": {"name": "Alexey Shmalko", "email": "rasen.dubi@gmail.com", "date": "2019-04-17T11:01:57Z"}, "committer": {"name": "Alexey Shmalko", "email": "rasen.dubi@gmail.com", "date": "2019-04-17T12:30:15Z"}, "message": "Make assert! ensure the macro is parsed completely", "tree": {"sha": "a8f28377767edd6333c88863e6657b5b51d85936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8f28377767edd6333c88863e6657b5b51d85936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfc08610850bc05a3bc31699b592d789a3c71911", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE3PPB2N619bhpsT2i3O97zOswZsMFAly3HFsACgkQ3O97zOsw\nZsPbaAf/eHuSlZf9Acan2TOUBEkdaLUR5JHtTGho36cKALNG4gKNftvA4yZDLSO/\nCM1WX6xJ/cjrCqd40hiMyunyhMsjf6fKV2VTOICdqcAJmFA14Flbp3vR8w9qIIXQ\nMP+0KbIHmhVDK9f/83cyEPOA+CYhSAXpnVH8+nqjM5jXzOoi/SVhgFCZJr0OBczN\ni7HlbHnVp5U6TFfSt0vXUVMUXDrvzucRX98kMXqIpkHOexQmxuu2P4xHFoiQqdKh\nQwa1Q3hkr/Zu5UJdMWdVb0lDbhaPIPe8d5RCQO+wQv6gPVW21Nq8S3SIwTS5EKB3\nOhA+Kd3j2liIhYHxKumph6R3UEve2A==\n=NX0z\n-----END PGP SIGNATURE-----", "payload": "tree a8f28377767edd6333c88863e6657b5b51d85936\nparent 258e3b3a75a0da006cd492307fc46ef605e774ad\nauthor Alexey Shmalko <rasen.dubi@gmail.com> 1555498917 +0300\ncommitter Alexey Shmalko <rasen.dubi@gmail.com> 1555504215 +0300\n\nMake assert! ensure the macro is parsed completely\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc08610850bc05a3bc31699b592d789a3c71911", "html_url": "https://github.com/rust-lang/rust/commit/dfc08610850bc05a3bc31699b592d789a3c71911", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfc08610850bc05a3bc31699b592d789a3c71911/comments", "author": {"login": "rasendubi", "id": 1366419, "node_id": "MDQ6VXNlcjEzNjY0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1366419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasendubi", "html_url": "https://github.com/rasendubi", "followers_url": "https://api.github.com/users/rasendubi/followers", "following_url": "https://api.github.com/users/rasendubi/following{/other_user}", "gists_url": "https://api.github.com/users/rasendubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasendubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasendubi/subscriptions", "organizations_url": "https://api.github.com/users/rasendubi/orgs", "repos_url": "https://api.github.com/users/rasendubi/repos", "events_url": "https://api.github.com/users/rasendubi/events{/privacy}", "received_events_url": "https://api.github.com/users/rasendubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasendubi", "id": 1366419, "node_id": "MDQ6VXNlcjEzNjY0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1366419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasendubi", "html_url": "https://github.com/rasendubi", "followers_url": "https://api.github.com/users/rasendubi/followers", "following_url": "https://api.github.com/users/rasendubi/following{/other_user}", "gists_url": "https://api.github.com/users/rasendubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasendubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasendubi/subscriptions", "organizations_url": "https://api.github.com/users/rasendubi/orgs", "repos_url": "https://api.github.com/users/rasendubi/repos", "events_url": "https://api.github.com/users/rasendubi/events{/privacy}", "received_events_url": "https://api.github.com/users/rasendubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "258e3b3a75a0da006cd492307fc46ef605e774ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/258e3b3a75a0da006cd492307fc46ef605e774ad", "html_url": "https://github.com/rust-lang/rust/commit/258e3b3a75a0da006cd492307fc46ef605e774ad"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "f1974ed30f6eb23b5eb40395a8dcf1ff964591fd", "filename": "src/libsyntax_ext/assert.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dfc08610850bc05a3bc31699b592d789a3c71911/src%2Flibsyntax_ext%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc08610850bc05a3bc31699b592d789a3c71911/src%2Flibsyntax_ext%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fassert.rs?ref=dfc08610850bc05a3bc31699b592d789a3c71911", "patch": "@@ -74,7 +74,7 @@ fn parse_assert<'a>(\n         return Err(err);\n     }\n \n-    Ok(Assert {\n+    let assert = Assert {\n         cond_expr: parser.parse_expr()?,\n         custom_message: if parser.eat(&token::Comma) {\n             let ts = parser.parse_tokens();\n@@ -86,5 +86,12 @@ fn parse_assert<'a>(\n         } else {\n             None\n         },\n-    })\n+    };\n+\n+    if parser.token != token::Eof {\n+        parser.expect_one_of(&[], &[])?;\n+        unreachable!();\n+    }\n+\n+    Ok(assert)\n }"}, {"sha": "66de6de3ee8f59d52a00c910c581970eb085aa84", "filename": "src/test/ui/macros/assert-trailing-junk.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dfc08610850bc05a3bc31699b592d789a3c71911/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc08610850bc05a3bc31699b592d789a3c71911/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.rs?ref=dfc08610850bc05a3bc31699b592d789a3c71911", "patch": "@@ -0,0 +1,14 @@\n+// Ensure assert macro does not ignore trailing garbage.\n+//\n+// See https://github.com/rust-lang/rust/issues/60024 for details.\n+\n+fn main() {\n+    assert!(true some extra junk, \"whatever\");\n+    //~^ ERROR expected one of\n+\n+    assert!(true some extra junk);\n+    //~^ ERROR expected one of\n+\n+    assert!(true, \"whatever\" blah);\n+    //~^ ERROR no rules expected\n+}"}, {"sha": "3f7d8dcaf790ca5ab89e3828f1dda248f0484423", "filename": "src/test/ui/macros/assert-trailing-junk.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dfc08610850bc05a3bc31699b592d789a3c71911/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc08610850bc05a3bc31699b592d789a3c71911/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr?ref=dfc08610850bc05a3bc31699b592d789a3c71911", "patch": "@@ -0,0 +1,22 @@\n+error: expected one of `,`, `.`, `?`, or an operator, found `some`\n+  --> $DIR/assert-trailing-junk.rs:6:18\n+   |\n+LL |     assert!(true some extra junk, \"whatever\");\n+   |                  ^^^^ expected one of `,`, `.`, `?`, or an operator here\n+\n+error: expected one of `,`, `.`, `?`, or an operator, found `some`\n+  --> $DIR/assert-trailing-junk.rs:9:18\n+   |\n+LL |     assert!(true some extra junk);\n+   |                  ^^^^ expected one of `,`, `.`, `?`, or an operator here\n+\n+error: no rules expected the token `blah`\n+  --> $DIR/assert-trailing-junk.rs:12:30\n+   |\n+LL |     assert!(true, \"whatever\" blah);\n+   |                             -^^^^ no rules expected this token in macro call\n+   |                             |\n+   |                             help: missing comma here\n+\n+error: aborting due to 3 previous errors\n+"}]}