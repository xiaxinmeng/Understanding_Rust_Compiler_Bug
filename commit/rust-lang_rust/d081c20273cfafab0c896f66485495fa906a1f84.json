{"sha": "d081c20273cfafab0c896f66485495fa906a1f84", "node_id": "C_kwDOAAsO6NoAKGQwODFjMjAyNzNjZmFmYWIwYzg5NmY2NjQ4NTQ5NWZhOTA2YTFmODQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-23T16:09:08Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-23T16:32:38Z"}, "message": "Compile functions from clif ir to object code in parallel", "tree": {"sha": "7b1fa8a14483f5ba7f4a3ac47e257bd7ba33eda8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b1fa8a14483f5ba7f4a3ac47e257bd7ba33eda8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d081c20273cfafab0c896f66485495fa906a1f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d081c20273cfafab0c896f66485495fa906a1f84", "html_url": "https://github.com/rust-lang/rust/commit/d081c20273cfafab0c896f66485495fa906a1f84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d081c20273cfafab0c896f66485495fa906a1f84/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6323313b7b33afe7aafa93a689e43a2c4ac768", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6323313b7b33afe7aafa93a689e43a2c4ac768", "html_url": "https://github.com/rust-lang/rust/commit/1a6323313b7b33afe7aafa93a689e43a2c4ac768"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "44c34d6c8cb79928ecf5aacac453df0f292bed82", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d081c20273cfafab0c896f66485495fa906a1f84/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d081c20273cfafab0c896f66485495fa906a1f84/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=d081c20273cfafab0c896f66485495fa906a1f84", "patch": "@@ -11,14 +11,15 @@ use crate::debuginfo::FunctionDebugContext;\n use crate::prelude::*;\n use crate::pretty_clif::CommentWriter;\n \n-struct CodegenedFunction {\n+pub(crate) struct CodegenedFunction {\n     symbol_name: String,\n     func_id: FuncId,\n     func: Function,\n     clif_comments: CommentWriter,\n     func_debug_cx: Option<FunctionDebugContext>,\n }\n \n+#[cfg_attr(not(feature = \"jit\"), allow(dead_code))]\n pub(crate) fn codegen_and_compile_fn<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     cx: &mut crate::CodegenCx,\n@@ -35,7 +36,7 @@ pub(crate) fn codegen_and_compile_fn<'tcx>(\n     compile_fn(cx, cached_context, module, codegened_func);\n }\n \n-fn codegen_fn<'tcx>(\n+pub(crate) fn codegen_fn<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     cx: &mut crate::CodegenCx,\n     cached_func: Function,\n@@ -135,7 +136,7 @@ fn codegen_fn<'tcx>(\n     CodegenedFunction { symbol_name, func_id, func, clif_comments, func_debug_cx }\n }\n \n-fn compile_fn(\n+pub(crate) fn compile_fn(\n     cx: &mut crate::CodegenCx,\n     cached_context: &mut Context,\n     module: &mut dyn Module,"}, {"sha": "5a63786f070b4faf26a0d12063088917f18bd0cf", "filename": "src/driver/aot.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d081c20273cfafab0c896f66485495fa906a1f84/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d081c20273cfafab0c896f66485495fa906a1f84/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=d081c20273cfafab0c896f66485495fa906a1f84", "patch": "@@ -271,18 +271,14 @@ fn module_codegen(\n         cgu_name,\n     );\n     super::predefine_mono_items(tcx, &mut module, &mono_items);\n-    let mut cached_context = Context::new();\n+    let mut codegened_functions = vec![];\n     for (mono_item, _) in mono_items {\n         match mono_item {\n             MonoItem::Fn(inst) => {\n                 tcx.sess.time(\"codegen fn\", || {\n-                    crate::base::codegen_and_compile_fn(\n-                        tcx,\n-                        &mut cx,\n-                        &mut cached_context,\n-                        &mut module,\n-                        inst,\n-                    )\n+                    let codegened_function =\n+                        crate::base::codegen_fn(tcx, &mut cx, Function::new(), &mut module, inst);\n+                    codegened_functions.push(codegened_function);\n                 });\n             }\n             MonoItem::Static(def_id) => crate::constant::codegen_static(tcx, &mut module, def_id),\n@@ -302,6 +298,11 @@ fn module_codegen(\n     let cgu_name = cgu.name().as_str().to_owned();\n \n     OngoingModuleCodegen::Async(std::thread::spawn(move || {\n+        let mut cached_context = Context::new();\n+        for codegened_func in codegened_functions {\n+            crate::base::compile_fn(&mut cx, &mut cached_context, &mut module, codegened_func);\n+        }\n+\n         let global_asm_object_file =\n             crate::global_asm::compile_global_asm(&global_asm_config, &cgu_name, &cx.global_asm)?;\n "}]}