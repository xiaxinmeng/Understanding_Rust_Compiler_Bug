{"sha": "d152e5c683165b9ba43de1e65aadd08f137d999d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNTJlNWM2ODMxNjViOWJhNDNkZTFlNjVhYWRkMDhmMTM3ZDk5OWQ=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-01-26T22:51:06Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-01-26T22:51:06Z"}, "message": "fixed argument check", "tree": {"sha": "20a9e373755f29009d55ea3900bec5d554f6b15c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20a9e373755f29009d55ea3900bec5d554f6b15c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d152e5c683165b9ba43de1e65aadd08f137d999d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d152e5c683165b9ba43de1e65aadd08f137d999d", "html_url": "https://github.com/rust-lang/rust/commit/d152e5c683165b9ba43de1e65aadd08f137d999d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d152e5c683165b9ba43de1e65aadd08f137d999d/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d97f916ebdcb53f22b65e8142382c9624079297", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d97f916ebdcb53f22b65e8142382c9624079297", "html_url": "https://github.com/rust-lang/rust/commit/2d97f916ebdcb53f22b65e8142382c9624079297"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "f1021c839cd49b8764e4329f86e536616ace27e5", "filename": "src/methods.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d152e5c683165b9ba43de1e65aadd08f137d999d/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d152e5c683165b9ba43de1e65aadd08f137d999d/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=d152e5c683165b9ba43de1e65aadd08f137d999d", "patch": "@@ -442,12 +442,10 @@ fn lint_or_fun_call(cx: &LateContext, expr: &Expr, name: &str, args: &[P<Expr>])\n \n fn lint_extend(cx: &LateContext, expr: &Expr, args: &MethodArgs) {\n     let (obj_ty, _) = walk_ptrs_ty_depth(cx.tcx.expr_ty(&args[0]));\n-    let arg_ty = cx.tcx.expr_ty(&args[1]);\n-    \n     if !match_type(cx, obj_ty, &VEC_PATH) {\n-        return; // for your Vecs only\n+        return;\n     }\n-    \n+    let arg_ty = cx.tcx.expr_ty(&args[1]);\n     if derefs_to_slice(cx, &args[1], &arg_ty) {\n         span_lint(cx, EXTEND_FROM_SLICE, expr.span,\n                   &format!(\"use of `extend` to extend a Vec by a slice\"))\n@@ -459,16 +457,24 @@ fn lint_extend(cx: &LateContext, expr: &Expr, args: &MethodArgs) {\n }\n \n fn derefs_to_slice(cx: &LateContext, expr: &Expr, ty: &ty::Ty) -> bool {\n+    fn may_slice(cx: &LateContext, expr: &Expr, ty: &ty::Ty) -> bool {\n+        match ty.sty {\n+            ty::TySlice(_) => true,            \n+            ty::TyStruct(..) => match_type(cx, ty, &VEC_PATH),\n+            ty::TyArray(_, size) => size < 32,\n+            ty::TyRef(_, ty::TypeAndMut { ty: ref inner, .. }) |\n+            ty::TyBox(ref inner) => may_slice(cx, expr, inner),\n+            _ => false\n+        }\n+    }\n     if let ExprMethodCall(name, _, ref args) = expr.node {\n         return &name.node.as_str() == &\"iter\" && \n-               derefs_to_slice(cx, &args[0], &cx.tcx.expr_ty(&args[0]))\n+               may_slice(cx, &args[0], &cx.tcx.expr_ty(&args[0]))\n     }\n     match ty.sty {\n-        ty::TyStruct(..) => match_type(cx, ty, &VEC_PATH),\n         ty::TySlice(_) => true,\n-        ty::TyArray(_, size) => size < 32,\n         ty::TyRef(_, ty::TypeAndMut { ty: ref inner, .. }) |\n-        ty::TyBox(ref inner) => derefs_to_slice(cx, expr, inner),\n+        ty::TyBox(ref inner) => may_slice(cx, expr, inner),\n         _ => false\n     }\n }"}, {"sha": "3156a38cdebb69ad5354545b701443a73e05057b", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d152e5c683165b9ba43de1e65aadd08f137d999d/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d152e5c683165b9ba43de1e65aadd08f137d999d/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=d152e5c683165b9ba43de1e65aadd08f137d999d", "patch": "@@ -308,9 +308,10 @@ fn starts_with() {\n fn use_extend_from_slice() {\n     let mut v : Vec<&'static str> = vec![];\n     v.extend(&[\"Hello\", \"World\"]); //~ERROR use of `extend`\n-    v.extend(vec![\"Some\", \"more\"]); //~ERROR use of `extend`\n+    v.extend(&vec![\"Some\", \"more\"]); //~ERROR use of `extend`\n     v.extend(vec![\"And\", \"even\", \"more\"].iter()); //~ERROR use of `extend`\n     let o : Option<&'static str> = None;\n     v.extend(o);\n     v.extend(Some(\"Bye\"));\n+    v.extend(vec![\"Not\", \"like\", \"this\"]);\n }"}]}