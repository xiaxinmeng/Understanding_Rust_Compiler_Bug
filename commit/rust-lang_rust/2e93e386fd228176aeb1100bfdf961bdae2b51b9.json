{"sha": "2e93e386fd228176aeb1100bfdf961bdae2b51b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOTNlMzg2ZmQyMjgxNzZhZWIxMTAwYmZkZjk2MWJkYWUyYjUxYjk=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-27T00:37:10Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-01T00:56:07Z"}, "message": "rust_llvm: Add way to reflectively ask if a ValueRef is a known constant int.\n\nAdd option-returning variants to `const_to_int`/`const_to_uint` that\nnever assert fail. (These will be used for overflow checking from\nrustc_trans::trans::consts.)", "tree": {"sha": "309396a0a5033094a186587409bfe272869aee96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/309396a0a5033094a186587409bfe272869aee96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e93e386fd228176aeb1100bfdf961bdae2b51b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e93e386fd228176aeb1100bfdf961bdae2b51b9", "html_url": "https://github.com/rust-lang/rust/commit/2e93e386fd228176aeb1100bfdf961bdae2b51b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e93e386fd228176aeb1100bfdf961bdae2b51b9/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7875dae83fac23fdf59765eb548c2237850d6b15", "url": "https://api.github.com/repos/rust-lang/rust/commits/7875dae83fac23fdf59765eb548c2237850d6b15", "html_url": "https://github.com/rust-lang/rust/commit/7875dae83fac23fdf59765eb548c2237850d6b15"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "2c4305d3c4587e88b3f019a0ee2f7bffe8023f13", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2e93e386fd228176aeb1100bfdf961bdae2b51b9/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e93e386fd228176aeb1100bfdf961bdae2b51b9/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=2e93e386fd228176aeb1100bfdf961bdae2b51b9", "patch": "@@ -1976,6 +1976,7 @@ extern {\n     pub fn LLVMIsAArgument(value_ref: ValueRef) -> ValueRef;\n \n     pub fn LLVMIsAAllocaInst(value_ref: ValueRef) -> ValueRef;\n+    pub fn LLVMIsAConstantInt(value_ref: ValueRef) -> ValueRef;\n \n     pub fn LLVMInitializeX86TargetInfo();\n     pub fn LLVMInitializeX86Target();"}, {"sha": "995f3caf588701907a11b4d158284fd475861071", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2e93e386fd228176aeb1100bfdf961bdae2b51b9/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e93e386fd228176aeb1100bfdf961bdae2b51b9/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=2e93e386fd228176aeb1100bfdf961bdae2b51b9", "patch": "@@ -963,6 +963,32 @@ pub fn const_to_uint(v: ValueRef) -> u64 {\n     }\n }\n \n+fn is_const_integral(v: ValueRef) -> bool {\n+    unsafe {\n+        !llvm::LLVMIsAConstantInt(v).is_null()\n+    }\n+}\n+\n+pub fn const_to_opt_int(v: ValueRef) -> Option<i64> {\n+    unsafe {\n+        if is_const_integral(v) {\n+            Some(llvm::LLVMConstIntGetSExtValue(v))\n+        } else {\n+            None\n+        }\n+    }\n+}\n+\n+pub fn const_to_opt_uint(v: ValueRef) -> Option<u64> {\n+    unsafe {\n+        if is_const_integral(v) {\n+            Some(llvm::LLVMConstIntGetZExtValue(v))\n+        } else {\n+            None\n+        }\n+    }\n+}\n+\n pub fn is_undef(val: ValueRef) -> bool {\n     unsafe {\n         llvm::LLVMIsUndef(val) != False"}]}