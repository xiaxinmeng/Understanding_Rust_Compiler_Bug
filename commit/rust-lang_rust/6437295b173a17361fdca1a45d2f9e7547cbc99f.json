{"sha": "6437295b173a17361fdca1a45d2f9e7547cbc99f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MzcyOTViMTczYTE3MzYxZmRjYTFhNDVkMmY5ZTc1NDdjYmM5OWY=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-04-15T21:30:23Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-05-26T03:48:31Z"}, "message": "in which we check for confusable Unicodepoints in float literal exponent\n\nThe `FatalError.raise()` might seem unmotivated (in most places in\nthe compiler, `err.emit()` suffices), but it's actually used to\nmaintain behavior (viz., stop lexing, don't emit potentially spurious\nerrors looking for the next token after the bad Unicodepoint in the\nexponent): the previous revision's `self.err_span_` ultimately calls\n`Handler::emit`, which aborts if the `Handler`'s continue_after_error\nflag is set, which seems to typically be true during lexing (see\n`phase_1_parse_input` and and how `CompileController::basic` has\n`continue_parse_after_error: false` in librustc_driver).\n\nAlso, let's avoid apostrophes in error messages (the present author\nwould argue that users expect a reassuringly detached, formal,\nabove-it-all tone from a Serious tool like a compiler), and use an\nRLS-friendly structured suggestion.\n\nResolves #49746.", "tree": {"sha": "127b25cabc961c5d5ca67b7e207a69d52609ee03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/127b25cabc961c5d5ca67b7e207a69d52609ee03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6437295b173a17361fdca1a45d2f9e7547cbc99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6437295b173a17361fdca1a45d2f9e7547cbc99f", "html_url": "https://github.com/rust-lang/rust/commit/6437295b173a17361fdca1a45d2f9e7547cbc99f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6437295b173a17361fdca1a45d2f9e7547cbc99f/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7426f5ccf7b362785a5abeb365674d3da3d4df2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7426f5ccf7b362785a5abeb365674d3da3d4df2e", "html_url": "https://github.com/rust-lang/rust/commit/7426f5ccf7b362785a5abeb365674d3da3d4df2e"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "50a398d8c63caa3e587f0d6f6ffb6e412faee6e2", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=6437295b173a17361fdca1a45d2f9e7547cbc99f", "patch": "@@ -1075,9 +1075,16 @@ impl<'a> StringReader<'a> {\n                 self.bump();\n             }\n             if self.scan_digits(10, 10) == 0 {\n-                self.err_span_(self.pos,\n-                               self.next_pos,\n-                               \"expected at least one digit in exponent\")\n+                let mut err = self.struct_span_fatal(\n+                    self.pos, self.next_pos,\n+                    \"expected at least one digit in exponent\"\n+                );\n+                if let Some(ch) = self.ch {\n+                    // check for e.g. Unicode minus '\u2212' (Issue #49746)\n+                    unicode_chars::check_for_substitution(self, ch, &mut err);\n+                }\n+                err.emit();\n+                FatalError.raise();\n             }\n         }\n     }"}, {"sha": "3c0bb82212fd009ca235fa6cc63f2c9d22951f09", "filename": "src/libsyntax/parse/lexer/unicode_chars.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs?ref=6437295b173a17361fdca1a45d2f9e7547cbc99f", "patch": "@@ -344,9 +344,9 @@ pub fn check_for_substitution<'a>(reader: &StringReader<'a>,\n         match ASCII_ARRAY.iter().find(|&&(c, _)| c == ascii_char) {\n             Some(&(ascii_char, ascii_name)) => {\n                 let msg =\n-                    format!(\"unicode character '{}' ({}) looks like '{}' ({}), but it's not\",\n+                    format!(\"Unicode character '{}' ({}) looks like '{}' ({}), but it is not\",\n                             ch, u_name, ascii_char, ascii_name);\n-                err.span_help(span, &msg);\n+                err.span_suggestion(span, &msg, ascii_char.to_string());\n             },\n             None => {\n                 let msg = format!(\"substitution character not found for '{}'\", ch);"}, {"sha": "a588616772c337a6675d10a8d482987331792428", "filename": "src/test/ui/did_you_mean/issue-49746-unicode-confusable-in-float-literal-expt.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-49746-unicode-confusable-in-float-literal-expt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-49746-unicode-confusable-in-float-literal-expt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-49746-unicode-confusable-in-float-literal-expt.rs?ref=6437295b173a17361fdca1a45d2f9e7547cbc99f", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+const UNIVERSAL_GRAVITATIONAL_CONSTANT = 6.674e\u221211; // m\u00b3\u22c5kg\u207b\u00b9\u22c5s\u207b\u00b2\n+//~^ ERROR expected at least one digit in exponent\n+\n+fn main() {}"}, {"sha": "78eddd946bb32b7bbec1804a1853fe5845634e95", "filename": "src/test/ui/did_you_mean/issue-49746-unicode-confusable-in-float-literal-expt.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-49746-unicode-confusable-in-float-literal-expt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6437295b173a17361fdca1a45d2f9e7547cbc99f/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-49746-unicode-confusable-in-float-literal-expt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-49746-unicode-confusable-in-float-literal-expt.stderr?ref=6437295b173a17361fdca1a45d2f9e7547cbc99f", "patch": "@@ -0,0 +1,12 @@\n+error: expected at least one digit in exponent\n+  --> $DIR/issue-49746-unicode-confusable-in-float-literal-expt.rs:11:48\n+   |\n+LL | const UNIVERSAL_GRAVITATIONAL_CONSTANT = 6.674e\u221211; // m\u00b3\u22c5kg\u207b\u00b9\u22c5s\u207b\u00b2\n+   |                                                ^\n+help: Unicode character '\u2212' (Minus Sign) looks like '-' (Minus/Hyphen), but it is not\n+   |\n+LL | const UNIVERSAL_GRAVITATIONAL_CONSTANT = 6.674e-11; // m\u00b3\u22c5kg\u207b\u00b9\u22c5s\u207b\u00b2\n+   |                                                ^\n+\n+error: aborting due to previous error\n+"}]}