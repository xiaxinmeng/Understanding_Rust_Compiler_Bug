{"sha": "aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZjkzYzkxOGUyYjZlMGI4ODI2ZTk3MGIwMGM0NmY4YTVjM2FhYTk=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-10T12:51:58Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-10T12:51:58Z"}, "message": "Merge #478\n\n478: WIP: implement cancelation via unwinding r=matklad a=matklad\n\nThis uses https://github.com/salsa-rs/salsa/pull/107 to implement cancellation.\r\n\r\nNow we can get rid of `Cancelable` wrapper from everywhere except the top-level analyzer library. \r\n\r\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "0c264c806bb6fabbc31bb785f7ba2b8f16a3b7aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c264c806bb6fabbc31bb785f7ba2b8f16a3b7aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "html_url": "https://github.com/rust-lang/rust/commit/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "9225033cdf16fd9f3f38b3d3482efb0c36698085", "url": "https://api.github.com/repos/rust-lang/rust/commits/9225033cdf16fd9f3f38b3d3482efb0c36698085", "html_url": "https://github.com/rust-lang/rust/commit/9225033cdf16fd9f3f38b3d3482efb0c36698085"}, {"sha": "495a7ea9f78209435579453b83726e50f339e50e", "url": "https://api.github.com/repos/rust-lang/rust/commits/495a7ea9f78209435579453b83726e50f339e50e", "html_url": "https://github.com/rust-lang/rust/commit/495a7ea9f78209435579453b83726e50f339e50e"}], "stats": {"total": 135, "additions": 87, "deletions": 48}, "files": [{"sha": "dba94aa6b8b96ae370c72b09262947b60ad07a8a", "filename": "Cargo.lock", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -66,11 +66,10 @@ dependencies = [\n \n [[package]]\n name = \"base64\"\n-version = \"0.9.3\"\n+version = \"0.10.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"safemem 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -139,7 +138,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"num-integer 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"time 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -661,7 +660,7 @@ dependencies = [\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.9.1 (git+https://github.com/matklad/salsa?branch=panic-hooks)\",\n  \"test_utils 0.1.0\",\n ]\n \n@@ -680,7 +679,7 @@ dependencies = [\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.9.1 (git+https://github.com/matklad/salsa?branch=panic-hooks)\",\n  \"test_utils 0.1.0\",\n ]\n \n@@ -700,7 +699,7 @@ dependencies = [\n  \"rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.9.1 (git+https://github.com/matklad/salsa?branch=panic-hooks)\",\n  \"test_utils 0.1.0\",\n  \"unicase 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -967,10 +966,10 @@ dependencies = [\n \n [[package]]\n name = \"ron\"\n-version = \"0.4.0\"\n+version = \"0.4.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"base64 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1022,15 +1021,10 @@ name = \"ryu\"\n version = \"0.2.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"safemem\"\n-version = \"0.3.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"salsa\"\n version = \"0.9.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+source = \"git+https://github.com/matklad/salsa?branch=panic-hooks#88313c80302c831ebc7601912ab3f11ad37e6bc2\"\n dependencies = [\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1207,7 +1201,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ron 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ron 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tera 0.11.20 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1274,7 +1268,7 @@ dependencies = [\n \n [[package]]\n name = \"time\"\n-version = \"0.1.41\"\n+version = \"0.1.42\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1489,7 +1483,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum autocfg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e5f34df7a019573fb8bdc7e24a2bfebe51a2a1d6bfdbaeccedb3c41fc574727\"\n \"checksum backtrace 0.3.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b5b493b66e03090ebc4343eb02f94ff944e0cbc9ac6571491d170ba026741eb5\"\n \"checksum backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"797c830ac25ccc92a7f8a7b9862bde440715531514594a6154e3d4a54dd769b6\"\n-\"checksum base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"489d6c0ed21b11d038c31b6ceccca973e65d73ba3bd8ecb9a2babf5546164643\"\n+\"checksum base64 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"621fc7ecb8008f86d7fb9b95356cd692ce9514b80a86d85b397f32a22da7b9e2\"\n \"checksum bit-set 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6f1efcc46c18245a69c38fcc5cc650f16d3a59d034f3106e9ed63748f695730a\"\n \"checksum bit-vec 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4440d5cb623bb7390ae27fec0bb6c61111969860f8e3ae198bfa0663645e67cf\"\n \"checksum bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12\"\n@@ -1579,15 +1573,14 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum regex-syntax 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e47a2ed29da7a9e1960e1639e7a982e6edc6d49be308a3b02daf511504a16d1\"\n \"checksum relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0e7790c7f1cc73d831d28dc5a7deb316a006e7848e6a7f467cdb10a0a9e0fb1c\"\n \"checksum remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3488ba1b9a2084d38645c4c08276a1752dcbf2c7130d74f1569681ad5d2799c5\"\n-\"checksum ron 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c48677d8a9247a4e0d1f3f9cb4b0a8e29167fdc3c04f383a5e669cd7a960ae0f\"\n+\"checksum ron 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9cb28ade964585205aaca1f3d41a6297f72e1ad097b49c4bbde033ef86b38d7\"\n \"checksum rowan 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ae9ae7dba5e703f423ceb8646d636c73e6d858a2f8c834808b4565e42ccda9e2\"\n \"checksum rustc-demangle 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"adacaae16d02b6ec37fdc7acfcddf365978de76d1983d3ee22afc260e1ca9619\"\n \"checksum rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8\"\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum rusty-fork 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9591f190d2852720b679c21f66ad929f9f1d7bb09d1193c26167586029d8489c\"\n \"checksum ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb9e9b8cde282a9fe6a42dd4681319bfb63f121b8a8ee9439c6f4107e58a46f7\"\n-\"checksum safemem 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8dca453248a96cb0749e36ccdfe2b0b4e54a61bfef89fb97ec621eb8e0a93dd9\"\n-\"checksum salsa 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"442ef4acdb48c0e24ddaf4f3b62555af2d1da7047f2f26acd54ae73010aa0c02\"\n+\"checksum salsa 0.9.1 (git+https://github.com/matklad/salsa?branch=panic-hooks)\" = \"<none>\"\n \"checksum same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267\"\n \"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n@@ -1612,7 +1605,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\"\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n \"checksum threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2f0c90a5f3459330ac8bc0d2f879c693bb7a2f59689c1083fc4ef83834da865\"\n-\"checksum time 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\" = \"847da467bf0db05882a9e2375934a8a55cffdc9db0d128af1518200260ba1f6c\"\n+\"checksum time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f\"\n \"checksum typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"612d636f949607bdf9b123b4a6f6d966dedf3ff669f7f045890d3a4a73948169\"\n \"checksum ucd-trie 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"71a9c5b1fe77426cf144cc30e49e955270f5086e31a6441dfa8b32efc09b9d77\"\n \"checksum ucd-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"535c204ee4d8434478593480b8f86ab45ec9aae0e83c568ca81abf0fd0e88f86\""}, {"sha": "85aaa23b95034688516ac183595290df3fabb6f7", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -7,3 +7,4 @@ debug = true\n \n [patch.'crates-io']\n cargo_metadata = { git = \"https://github.com/oli-obk/cargo_metadata.git\", rev=\"f73e27b24e\" }\n+salsa = { git = \"https://github.com/matklad/salsa\", branch = \"panic-hooks\" }"}, {"sha": "32a2685535c59b97c59d8073e2550e622c5d1cdd", "filename": "crates/ra_db/src/cancellation.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_db%2Fsrc%2Fcancellation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_db%2Fsrc%2Fcancellation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Fcancellation.rs?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -27,6 +27,12 @@ impl Canceled {\n     pub(crate) fn new() -> Canceled {\n         Canceled { _private: () }\n     }\n+\n+    pub fn throw() -> ! {\n+        // We use resume and not panic here to avoid running the panic\n+        // hook (that is, to avoid collecting and printing backtrace).\n+        std::panic::resume_unwind(Box::new(Canceled::new()))\n+    }\n }\n \n impl std::fmt::Display for Canceled {"}, {"sha": "20e712afe3538ac40406410ad5816312f883e15e", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -5,6 +5,8 @@ mod input;\n mod loc2id;\n pub mod mock;\n \n+use std::panic;\n+\n use ra_syntax::{TextUnit, TextRange, SourceFile, TreePtr};\n \n pub use crate::{\n@@ -18,13 +20,21 @@ pub use crate::{\n     loc2id::LocationIntener,\n };\n \n-pub trait BaseDatabase: salsa::Database {\n+pub trait BaseDatabase: salsa::Database + panic::RefUnwindSafe {\n     fn check_canceled(&self) -> Cancelable<()> {\n-        if self.salsa_runtime().is_current_revision_canceled() {\n-            Err(Canceled::new())\n-        } else {\n-            Ok(())\n-        }\n+        self.salsa_runtime()\n+            .if_current_revision_is_canceled(Canceled::throw);\n+        Ok(())\n+    }\n+\n+    fn catch_canceled<F: FnOnce(&Self) -> T + panic::UnwindSafe, T>(\n+        &self,\n+        f: F,\n+    ) -> Result<T, Canceled> {\n+        panic::catch_unwind(|| f(self)).map_err(|err| match err.downcast::<Canceled>() {\n+            Ok(canceled) => *canceled,\n+            Err(payload) => panic::resume_unwind(payload),\n+        })\n     }\n }\n "}, {"sha": "359cd893d87bab19e040868ba1985f67571613da", "filename": "crates/ra_db/src/loc2id.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_db%2Fsrc%2Floc2id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_db%2Fsrc%2Floc2id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Floc2id.rs?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -1,4 +1,4 @@\n-use std::hash::Hash;\n+use std::{panic, hash::Hash};\n \n use parking_lot::Mutex;\n use rustc_hash::FxHashMap;\n@@ -70,6 +70,15 @@ where\n     map: Mutex<Loc2IdMap<LOC, ID>>,\n }\n \n+impl<LOC, ID> panic::RefUnwindSafe for LocationIntener<LOC, ID>\n+where\n+    ID: ArenaId + Clone,\n+    LOC: Clone + Eq + Hash,\n+    ID: panic::RefUnwindSafe,\n+    LOC: panic::RefUnwindSafe,\n+{\n+}\n+\n impl<LOC, ID> Default for LocationIntener<LOC, ID>\n where\n     ID: ArenaId + Clone,"}, {"sha": "7a0301648a68ba115d465c4bb6a0f3b355083dbd", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -1,4 +1,4 @@\n-use std::sync::Arc;\n+use std::{sync::Arc, panic};\n \n use parking_lot::Mutex;\n use salsa::{self, Database};\n@@ -18,6 +18,8 @@ pub(crate) struct MockDatabase {\n     file_counter: u32,\n }\n \n+impl panic::RefUnwindSafe for MockDatabase {}\n+\n impl MockDatabase {\n     pub(crate) fn with_files(fixture: &str) -> (MockDatabase, SourceRoot) {\n         let (db, source_root, position) = MockDatabase::from_fixture(fixture);"}, {"sha": "a2e06f5db3e94644393657538a227b6ee72a683f", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -1,7 +1,7 @@\n use std::{fmt, sync::Arc};\n \n use salsa::{self, Database};\n-use ra_db::{LocationIntener, BaseDatabase, FileId};\n+use ra_db::{LocationIntener, BaseDatabase, FileId, Canceled};\n \n use crate::{symbol_index, LineIndex};\n \n@@ -29,6 +29,9 @@ impl salsa::Database for RootDatabase {\n     fn salsa_runtime(&self) -> &salsa::Runtime<RootDatabase> {\n         &self.runtime\n     }\n+    fn on_propagated_panic(&self) -> ! {\n+        Canceled::throw()\n+    }\n }\n \n impl Default for RootDatabase {"}, {"sha": "f505959ce18172334d71b5db41f5be5b81cf1b83", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 33, "deletions": 18, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=aef93c918e2b6e0b8826e970b00c46f8a5c3aaa9", "patch": "@@ -35,7 +35,7 @@ use std::{fmt, sync::Arc};\n \n use ra_syntax::{SmolStr, SourceFile, TreePtr, SyntaxKind, TextRange, TextUnit};\n use ra_text_edit::TextEdit;\n-use ra_db::{SyntaxDatabase, FilesDatabase, LocalSyntaxPtr};\n+use ra_db::{SyntaxDatabase, FilesDatabase, LocalSyntaxPtr, BaseDatabase};\n use rayon::prelude::*;\n use relative_path::RelativePathBuf;\n use rustc_hash::FxHashMap;\n@@ -420,43 +420,47 @@ impl Analysis {\n \n     /// Fuzzy searches for a symbol.\n     pub fn symbol_search(&self, query: Query) -> Cancelable<Vec<NavigationTarget>> {\n-        let res = symbol_index::world_symbols(&*self.db, query)?\n-            .into_iter()\n-            .map(NavigationTarget::from_symbol)\n-            .collect();\n-        Ok(res)\n+        self.with_db(|db| {\n+            let res = symbol_index::world_symbols(db, query)?\n+                .into_iter()\n+                .map(NavigationTarget::from_symbol)\n+                .collect::<Vec<_>>();\n+            Ok(res)\n+        })?\n     }\n \n     pub fn goto_definition(\n         &self,\n         position: FilePosition,\n     ) -> Cancelable<Option<Vec<NavigationTarget>>> {\n-        goto_definition::goto_definition(&*self.db, position)\n+        self.db\n+            .catch_canceled(|db| goto_definition::goto_definition(db, position))?\n     }\n \n     /// Finds all usages of the reference at point.\n     pub fn find_all_refs(&self, position: FilePosition) -> Cancelable<Vec<(FileId, TextRange)>> {\n-        self.db.find_all_refs(position)\n+        self.with_db(|db| db.find_all_refs(position))?\n     }\n \n     /// Returns a short text descrbing element at position.\n     pub fn hover(&self, position: FilePosition) -> Cancelable<Option<RangeInfo<String>>> {\n-        hover::hover(&*self.db, position)\n+        self.with_db(|db| hover::hover(db, position))?\n     }\n \n     /// Computes parameter information for the given call expression.\n     pub fn call_info(&self, position: FilePosition) -> Cancelable<Option<CallInfo>> {\n-        call_info::call_info(&*self.db, position)\n+        self.db\n+            .catch_canceled(|db| call_info::call_info(db, position))?\n     }\n \n     /// Returns a `mod name;` declaration which created the current module.\n     pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<NavigationTarget>> {\n-        self.db.parent_module(position)\n+        self.with_db(|db| db.parent_module(position))?\n     }\n \n     /// Returns crates this file belongs too.\n     pub fn crate_for(&self, file_id: FileId) -> Cancelable<Vec<CrateId>> {\n-        self.db.crate_for(file_id)\n+        self.with_db(|db| db.crate_for(file_id))?\n     }\n \n     /// Returns the root file of the given crate.\n@@ -466,17 +470,21 @@ impl Analysis {\n \n     /// Returns the set of possible targets to run for the current file.\n     pub fn runnables(&self, file_id: FileId) -> Cancelable<Vec<Runnable>> {\n-        runnables::runnables(&*self.db, file_id)\n+        self.db\n+            .catch_canceled(|db| runnables::runnables(db, file_id))?\n     }\n \n     /// Computes syntax highlighting for the given file.\n     pub fn highlight(&self, file_id: FileId) -> Cancelable<Vec<HighlightedRange>> {\n-        syntax_highlighting::highlight(&*self.db, file_id)\n+        self.db\n+            .catch_canceled(|db| syntax_highlighting::highlight(db, file_id))?\n     }\n \n     /// Computes completions at the given position.\n     pub fn completions(&self, position: FilePosition) -> Cancelable<Option<Vec<CompletionItem>>> {\n-        let completions = completion::completions(&self.db, position)?;\n+        let completions = self\n+            .db\n+            .catch_canceled(|db| completion::completions(db, position))??;\n         Ok(completions.map(|it| it.into()))\n     }\n \n@@ -488,12 +496,12 @@ impl Analysis {\n \n     /// Computes the set of diagnostics for the given file.\n     pub fn diagnostics(&self, file_id: FileId) -> Cancelable<Vec<Diagnostic>> {\n-        self.db.diagnostics(file_id)\n+        self.with_db(|db| db.diagnostics(file_id))?\n     }\n \n     /// Computes the type of the expression at the given position.\n     pub fn type_of(&self, frange: FileRange) -> Cancelable<Option<String>> {\n-        hover::type_of(&*self.db, frange)\n+        self.with_db(|db| hover::type_of(db, frange))?\n     }\n \n     /// Returns the edit required to rename reference at the position to the new\n@@ -503,7 +511,14 @@ impl Analysis {\n         position: FilePosition,\n         new_name: &str,\n     ) -> Cancelable<Vec<SourceFileEdit>> {\n-        self.db.rename(position, new_name)\n+        self.with_db(|db| db.rename(position, new_name))?\n+    }\n+\n+    fn with_db<F: FnOnce(&db::RootDatabase) -> T + std::panic::UnwindSafe, T>(\n+        &self,\n+        f: F,\n+    ) -> Cancelable<T> {\n+        self.db.catch_canceled(f)\n     }\n }\n "}]}