{"sha": "1999a3fb4154961329ecfff7d70a6303471b996a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5OTlhM2ZiNDE1NDk2MTMyOWVjZmZmN2Q3MGE2MzAzNDcxYjk5NmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-12T20:35:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-13T15:28:27Z"}, "message": "rustbuild: Tweak CFLAGS to various libstd pieces\n\n* Pass `opt_level(2)` when calculating CFLAGS to get the right flags on iOS\n* Unconditionally pass `-O2` when compiling libbacktrace\n\nThis should...\n\nClose #48903\nClose #48906", "tree": {"sha": "607616fde6550d6bbafba714cf77b4d11ba3d406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/607616fde6550d6bbafba714cf77b4d11ba3d406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1999a3fb4154961329ecfff7d70a6303471b996a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1999a3fb4154961329ecfff7d70a6303471b996a", "html_url": "https://github.com/rust-lang/rust/commit/1999a3fb4154961329ecfff7d70a6303471b996a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1999a3fb4154961329ecfff7d70a6303471b996a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e65547d4fad0425d1db4f33a4d8134bf2cad939e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e65547d4fad0425d1db4f33a4d8134bf2cad939e", "html_url": "https://github.com/rust-lang/rust/commit/e65547d4fad0425d1db4f33a4d8134bf2cad939e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8f393a4c573716e38eecc660f4a412a1a0ed1a1c", "filename": "src/bootstrap/cc_detect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1999a3fb4154961329ecfff7d70a6303471b996a/src%2Fbootstrap%2Fcc_detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1999a3fb4154961329ecfff7d70a6303471b996a/src%2Fbootstrap%2Fcc_detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcc_detect.rs?ref=1999a3fb4154961329ecfff7d70a6303471b996a", "patch": "@@ -77,7 +77,7 @@ pub fn find(build: &mut Build) {\n                                .collect::<HashSet<_>>();\n     for target in targets.into_iter() {\n         let mut cfg = cc::Build::new();\n-        cfg.cargo_metadata(false).opt_level(0).warnings(false).debug(false)\n+        cfg.cargo_metadata(false).opt_level(2).warnings(false).debug(false)\n            .target(&target).host(&build.build);\n         if target.contains(\"msvc\") {\n             cfg.static_crt(true);\n@@ -109,7 +109,7 @@ pub fn find(build: &mut Build) {\n     let hosts = build.hosts.iter().cloned().chain(iter::once(build.build)).collect::<HashSet<_>>();\n     for host in hosts.into_iter() {\n         let mut cfg = cc::Build::new();\n-        cfg.cargo_metadata(false).opt_level(0).warnings(false).debug(false).cpp(true)\n+        cfg.cargo_metadata(false).opt_level(2).warnings(false).debug(false).cpp(true)\n            .target(&host).host(&build.build);\n         let config = build.config.target_config.get(&host);\n         if let Some(cxx) = config.and_then(|c| c.cxx.as_ref()) {"}, {"sha": "b3c71f4d81b2d6d7002713b2823056bbc7008fb6", "filename": "src/libstd/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1999a3fb4154961329ecfff7d70a6303471b996a/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1999a3fb4154961329ecfff7d70a6303471b996a/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=1999a3fb4154961329ecfff7d70a6303471b996a", "patch": "@@ -98,7 +98,7 @@ fn build_libbacktrace(host: &str, target: &str) -> Result<(), ()> {\n                 .arg(\"--disable-host-shared\")\n                 .arg(format!(\"--host={}\", build_helper::gnu_target(target)))\n                 .arg(format!(\"--build={}\", build_helper::gnu_target(host)))\n-                .env(\"CFLAGS\", env::var(\"CFLAGS\").unwrap_or_default() + \" -fvisibility=hidden\"));\n+                .env(\"CFLAGS\", env::var(\"CFLAGS\").unwrap_or_default() + \" -fvisibility=hidden -O2\"));\n \n     run(Command::new(build_helper::make(host))\n                 .current_dir(&native.out_dir)"}]}