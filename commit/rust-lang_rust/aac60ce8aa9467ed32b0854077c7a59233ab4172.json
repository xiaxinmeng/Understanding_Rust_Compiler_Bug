{"sha": "aac60ce8aa9467ed32b0854077c7a59233ab4172", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYzYwY2U4YWE5NDY3ZWQzMmIwODU0MDc3YzdhNTkyMzNhYjQxNzI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-07-10T20:56:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-10T20:56:35Z"}, "message": "Rollup merge of #51612 - ashtneoi:51515-missing-first-char, r=pnkfelix\n\nNLL: fix E0594 \"change to mutable ref\" suggestion\n\nFix #51515.\nFix #51879.\n\nQuestions:\n- [x] Is this the right place to fix this? It feels brittle, being so close to the frontend. **It's probably fine.**\n- [ ] Have I missed any other cases that trigger this behavior?\n- [x] Is it okay to use HELP and SUGGESTION in the UI test? **Yes.**\n- [x] Do I need more tests for this? **No.**", "tree": {"sha": "0c1fa1bfd3253f783c2834f384b393006db0e781", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c1fa1bfd3253f783c2834f384b393006db0e781"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aac60ce8aa9467ed32b0854077c7a59233ab4172", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRR2DCRBK7hj4Ov3rIwAAdHIIAFYHuiG47gneBEkMkhG2wpmr\nQ7T3KGfFVaVdLc61PlNc4M9++R12sN4dD/oRBjzN3Dobnr7tMrVG7psaqXAjYV6d\nhRhsjULokpCWJmfRhSN+kOhAzPO6D0ItHx5ucgwpWK4W/q/PKiBHaAolYjy1AmQD\nSzw8a1Bb4HHbOebMdB+PTUgrGjwEdmTliQ0lrb/nJNGJ6fZVdXghs52SLRnm7Fld\nUu2vQv2dtX8NGHJqMGP2dk2rk59ucjyiighA+Fsa31bHO5qiUsvClxVAPJgE++tx\nym+sVfvXDjMxOm3vhV/QfEnJFPk6PuDCjKwxCyrvc+3L8+7o5VQStaNYPDxWaZk=\n=Q9hq\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c1fa1bfd3253f783c2834f384b393006db0e781\nparent 90bd83c9fca7b22056ec1ee0f00f095230bdb5c7\nparent dc8ae26c1ee4f95e3baef603506fbaa95cb2ccd1\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1531256195 +0200\ncommitter GitHub <noreply@github.com> 1531256195 +0200\n\nRollup merge of #51612 - ashtneoi:51515-missing-first-char, r=pnkfelix\n\nNLL: fix E0594 \"change to mutable ref\" suggestion\n\nFix #51515.\nFix #51879.\n\nQuestions:\n- [x] Is this the right place to fix this? It feels brittle, being so close to the frontend. **It's probably fine.**\n- [ ] Have I missed any other cases that trigger this behavior?\n- [x] Is it okay to use HELP and SUGGESTION in the UI test? **Yes.**\n- [x] Do I need more tests for this? **No.**\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aac60ce8aa9467ed32b0854077c7a59233ab4172", "html_url": "https://github.com/rust-lang/rust/commit/aac60ce8aa9467ed32b0854077c7a59233ab4172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aac60ce8aa9467ed32b0854077c7a59233ab4172/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90bd83c9fca7b22056ec1ee0f00f095230bdb5c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/90bd83c9fca7b22056ec1ee0f00f095230bdb5c7", "html_url": "https://github.com/rust-lang/rust/commit/90bd83c9fca7b22056ec1ee0f00f095230bdb5c7"}, {"sha": "dc8ae26c1ee4f95e3baef603506fbaa95cb2ccd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc8ae26c1ee4f95e3baef603506fbaa95cb2ccd1", "html_url": "https://github.com/rust-lang/rust/commit/dc8ae26c1ee4f95e3baef603506fbaa95cb2ccd1"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "1a66a2d2cb902a0614f0e5c2b45ad3c227d0755b", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aac60ce8aa9467ed32b0854077c7a59233ab4172/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac60ce8aa9467ed32b0854077c7a59233ab4172/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=aac60ce8aa9467ed32b0854077c7a59233ab4172", "patch": "@@ -1905,8 +1905,10 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     // highlighted text will always be `&<expr>` and\n                     // thus can transform to `&mut` by slicing off\n                     // first ASCII character and prepending \"&mut \".\n-                    let borrowed_expr = src[1..].to_string();\n-                    return (assignment_rhs_span, format!(\"&mut {}\", borrowed_expr));\n+                    if src.starts_with('&') {\n+                        let borrowed_expr = src[1..].to_string();\n+                        return (assignment_rhs_span, format!(\"&mut {}\", borrowed_expr));\n+                    }\n                 }\n             }\n "}, {"sha": "3e0a3b757a3d68a73d93a6acc322233a05e88617", "filename": "src/test/ui/suggestions/issue-51515.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/aac60ce8aa9467ed32b0854077c7a59233ab4172/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51515.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac60ce8aa9467ed32b0854077c7a59233ab4172/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51515.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51515.rs?ref=aac60ce8aa9467ed32b0854077c7a59233ab4172", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(nll)]\n+\n+fn main() {\n+    let foo = &16;\n+    //~^ HELP consider changing this to be a mutable reference\n+    //~| SUGGESTION &mut 16\n+    *foo = 32;\n+    //~^ ERROR cannot assign to `*foo` which is behind a `&` reference\n+    let bar = foo;\n+    //~^ HELP consider changing this to be a mutable reference\n+    //~| SUGGESTION &mut i32\n+    *bar = 64;\n+    //~^ ERROR cannot assign to `*bar` which is behind a `&` reference\n+}"}, {"sha": "3e7349b5acabf095e14f43dabd7669ec3f2caac9", "filename": "src/test/ui/suggestions/issue-51515.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/aac60ce8aa9467ed32b0854077c7a59233ab4172/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51515.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aac60ce8aa9467ed32b0854077c7a59233ab4172/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51515.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51515.stderr?ref=aac60ce8aa9467ed32b0854077c7a59233ab4172", "patch": "@@ -0,0 +1,21 @@\n+error[E0594]: cannot assign to `*foo` which is behind a `&` reference\n+  --> $DIR/issue-51515.rs:17:5\n+   |\n+LL |     let foo = &16;\n+   |               --- help: consider changing this to be a mutable reference: `&mut 16`\n+...\n+LL |     *foo = 32;\n+   |     ^^^^^^^^^ `foo` is a `&` reference, so the data it refers to cannot be written\n+\n+error[E0594]: cannot assign to `*bar` which is behind a `&` reference\n+  --> $DIR/issue-51515.rs:22:5\n+   |\n+LL |     let bar = foo;\n+   |         --- help: consider changing this to be a mutable reference: `&mut i32`\n+...\n+LL |     *bar = 64;\n+   |     ^^^^^^^^^ `bar` is a `&` reference, so the data it refers to cannot be written\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0594`."}]}