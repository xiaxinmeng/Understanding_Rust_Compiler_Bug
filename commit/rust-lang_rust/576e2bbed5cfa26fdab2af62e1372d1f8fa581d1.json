{"sha": "576e2bbed5cfa26fdab2af62e1372d1f8fa581d1", "node_id": "C_kwDOAAsO6NoAKDU3NmUyYmJlZDVjZmEyNmZkYWIyYWY2MmUxMzcyZDFmOGZhNTgxZDE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-10T00:18:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-10T00:29:05Z"}, "message": "implement gather", "tree": {"sha": "d2ff97b797cef599bf667160beddde57c3cf5d9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2ff97b797cef599bf667160beddde57c3cf5d9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1", "html_url": "https://github.com/rust-lang/rust/commit/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eba7fcf7336c7cebdea4b2c2140c947b6bac67c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eba7fcf7336c7cebdea4b2c2140c947b6bac67c", "html_url": "https://github.com/rust-lang/rust/commit/3eba7fcf7336c7cebdea4b2c2140c947b6bac67c"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "54e7118b25936e529830a8d422defbf580684476", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=576e2bbed5cfa26fdab2af62e1372d1f8fa581d1", "patch": "@@ -653,6 +653,33 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     this.write_immediate(*val, &dest.into())?;\n                 }\n             }\n+            \"simd_gather\" => {\n+                let &[ref passthru, ref ptrs, ref mask] = check_arg_count(args)?;\n+                let (passthru, passthru_len) = this.operand_to_simd(passthru)?;\n+                let (ptrs, ptrs_len) = this.operand_to_simd(ptrs)?;\n+                let (mask, mask_len) = this.operand_to_simd(mask)?;\n+                let (dest, dest_len) = this.place_to_simd(dest)?;\n+\n+                assert_eq!(dest_len, passthru_len);\n+                assert_eq!(dest_len, ptrs_len);\n+                assert_eq!(dest_len, mask_len);\n+\n+                for i in 0..dest_len {\n+                    let passthru = this.read_immediate(&this.mplace_index(&passthru, i)?.into())?;\n+                    let ptr = this.read_immediate(&this.mplace_index(&ptrs, i)?.into())?;\n+                    let mask = this.read_immediate(&this.mplace_index(&mask, i)?.into())?;\n+                    let dest = this.mplace_index(&dest, i)?;\n+\n+                    let mask = simd_element_to_bool(mask)?;\n+                    let val = if mask {\n+                        let place = this.deref_operand(&ptr.into())?;\n+                        this.read_immediate(&place.into())?\n+                    } else {\n+                        passthru\n+                    };\n+                    this.write_immediate(*val, &dest.into())?;\n+                }\n+            }\n \n             // Atomic operations\n             \"atomic_load\" => this.atomic_load(args, dest, AtomicReadOp::SeqCst)?,"}, {"sha": "2fb5da01f10670fd54eb978a30b3856e662c0cb8", "filename": "tests/compile-fail/intrinsics/simd-gather.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1/tests%2Fcompile-fail%2Fintrinsics%2Fsimd-gather.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1/tests%2Fcompile-fail%2Fintrinsics%2Fsimd-gather.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fsimd-gather.rs?ref=576e2bbed5cfa26fdab2af62e1372d1f8fa581d1", "patch": "@@ -0,0 +1,9 @@\n+// error-pattern: out-of-bounds\n+#![feature(portable_simd)]\n+use std::simd::*;\n+\n+fn main() { unsafe {\n+    let vec: &[i16] = &[10, 11, 12, 13, 14, 15, 16, 17, 18];\n+    let idxs = Simd::from_array([9, 3, 0, 17]);\n+    let _result = Simd::gather_select_unchecked(&vec, Mask::splat(true), idxs, Simd::splat(0));\n+} }"}, {"sha": "ad9dafea4bada1308383ace92bd32765eea38297", "filename": "tests/run-pass/portable-simd.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1/tests%2Frun-pass%2Fportable-simd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e2bbed5cfa26fdab2af62e1372d1f8fa581d1/tests%2Frun-pass%2Fportable-simd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fportable-simd.rs?ref=576e2bbed5cfa26fdab2af62e1372d1f8fa581d1", "patch": "@@ -249,6 +249,13 @@ fn simd_swizzle() {\n     assert_eq!(simd_swizzle!(b, a, [First(3), Second(0)]), f32x2::from_array([-4.0, 10.0]));\n }\n \n+fn simd_gather_scatter() {\n+    let vec: &[i16] = &[10, 11, 12, 13, 14, 15, 16, 17, 18];\n+    let idxs = Simd::from_array([9, 3, 0, 17]);\n+    let result = Simd::gather_or_default(&vec, idxs); // Note the lane that is out-of-bounds.\n+    assert_eq!(result, Simd::from_array([0, 13, 10, 0]));\n+}\n+\n fn simd_intrinsics() {\n     extern \"platform-intrinsic\" {\n         fn simd_eq<T, U>(x: T, y: T) -> U;\n@@ -288,5 +295,6 @@ fn main() {\n     simd_ops_i32();\n     simd_cast();\n     simd_swizzle();\n+    simd_gather_scatter();\n     simd_intrinsics();\n }"}]}