{"sha": "b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MTZmMTM5OGZhMTliNGYxZmQ5YmM2NDE4ZWEzMmUzNDBkODM3OWM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-27T19:21:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-31T17:44:58Z"}, "message": "Use structured suggestion for braceless unicode escape squence", "tree": {"sha": "fcbcc6761799171dd0377c4e5c5b48289d3cf176", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcbcc6761799171dd0377c4e5c5b48289d3cf176"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "html_url": "https://github.com/rust-lang/rust/commit/b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "html_url": "https://github.com/rust-lang/rust/commit/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8"}], "stats": {"total": 63, "additions": 47, "deletions": 16}, "files": [{"sha": "fb46f7a08b93562a0b61f4f755094ecdb289ef16", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "patch": "@@ -945,12 +945,36 @@ impl<'a> StringReader<'a> {\n                                     self.scan_unicode_escape(delim) && !ascii_only\n                                 } else {\n                                     let span = self.mk_sp(start, self.pos);\n-                                    self.sess.span_diagnostic\n-                                        .struct_span_err(span, \"incorrect unicode escape sequence\")\n-                                        .span_help(span,\n-                                                   \"format of unicode escape sequences is \\\n-                                                    `\\\\u{\u2026}`\")\n-                                        .emit();\n+                                    let mut suggestion = \"\\\\u{\".to_owned();\n+                                    let mut err = self.sess.span_diagnostic.struct_span_err(\n+                                        span,\n+                                        \"incorrect unicode escape sequence\",\n+                                    );\n+                                    let mut i = 0;\n+                                    while let (Some(ch), true) = (self.ch, i < 6) {\n+                                        if ch.is_digit(16) {\n+                                            suggestion.push(ch);\n+                                            self.bump();\n+                                            i += 1;\n+                                        } else {\n+                                            break;\n+                                        }\n+                                    }\n+                                    if i != 0 {\n+                                        suggestion.push('}');\n+                                        err.span_suggestion_with_applicability(\n+                                            self.mk_sp(start, self.pos),\n+                                            \"format of unicode escape sequences uses braces\",\n+                                            suggestion,\n+                                            Applicability::MaybeIncorrect,\n+                                        );\n+                                    } else {\n+                                        err.span_help(\n+                                            span,\n+                                            \"format of unicode escape sequences is `\\\\u{\u2026}`\",\n+                                        );\n+                                    }\n+                                    err.emit();\n                                     false\n                                 };\n                                 if ascii_only {"}, {"sha": "c11f27f3ed589447874c58df12fb9ea22c3e72bb", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "patch": "@@ -845,8 +845,8 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt,\n                             }\n                         } else if next_c.is_digit(16) {\n                             skips.push(next_pos);\n-                            // We suggest adding `{` and `}` when appropriate, accept it here as if it\n-                            // were correct\n+                            // We suggest adding `{` and `}` when appropriate, accept it here as if\n+                            // it were correct\n                             let mut i = 0;  // consume up to 6 hexanumeric chars\n                             while let (Some((next_pos, c)), _) = (s.next(), i < 6) {\n                                 if c.is_digit(16) {"}, {"sha": "baab8529940c5ebe79e42d2dbde61dcf3a0c859d", "filename": "src/test/ui/fmt/format-string-error-2.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr?ref=b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "patch": "@@ -2,13 +2,9 @@ error: incorrect unicode escape sequence\n   --> $DIR/format-string-error-2.rs:77:20\n    |\n LL |     println!(\"/x7B}/u8 {\", 1);\n-   |                    ^^\n-   |\n-help: format of unicode escape sequences is `/u{\u2026}`\n-  --> $DIR/format-string-error-2.rs:77:20\n-   |\n-LL |     println!(\"/x7B}/u8 {\", 1);\n-   |                    ^^\n+   |                    ^^-\n+   |                    |\n+   |                    help: format of unicode escape sequences uses braces: `/u{8}`\n \n error: invalid format string: expected `'}'`, found `'a'`\n   --> $DIR/format-string-error-2.rs:5:5"}, {"sha": "f8a2f1cc7e6c9d2e6035f529dc831b875f5a1ef6", "filename": "src/test/ui/parser/issue-23620-invalid-escapes.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.rs?ref=b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "patch": "@@ -35,4 +35,7 @@ fn main() {\n     //~^ ERROR invalid character in numeric character escape:\n     //~^^ ERROR form of character escape may only be used with characters in the range [\\x00-\\x7f]\n     //~^^^ ERROR incorrect unicode escape sequence\n+\n+    let _ = \"\\u8f\";\n+    //~^ ERROR incorrect unicode escape sequence\n }"}, {"sha": "025b392627d0f89a05f0b2ad62cdf3c8fb7a7751", "filename": "src/test/ui/parser/issue-23620-invalid-escapes.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b416f1398fa19b4f1fd9bc6418ea32e340d8379c/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.stderr?ref=b416f1398fa19b4f1fd9bc6418ea32e340d8379c", "patch": "@@ -118,5 +118,13 @@ help: format of unicode escape sequences is `/u{\u2026}`\n LL |     let _ = \"/xf /u\";\n    |                  ^^\n \n-error: aborting due to 17 previous errors\n+error: incorrect unicode escape sequence\n+  --> $DIR/issue-23620-invalid-escapes.rs:39:14\n+   |\n+LL |     let _ = \"/u8f\";\n+   |              ^^--\n+   |              |\n+   |              help: format of unicode escape sequences uses braces: `/u{8f}`\n+\n+error: aborting due to 18 previous errors\n "}]}