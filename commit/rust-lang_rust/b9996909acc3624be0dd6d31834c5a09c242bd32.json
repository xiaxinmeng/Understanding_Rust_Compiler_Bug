{"sha": "b9996909acc3624be0dd6d31834c5a09c242bd32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5OTk2OTA5YWNjMzYyNGJlMGRkNmQzMTgzNGM1YTA5YzI0MmJkMzI=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-09-02T22:28:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-02T22:28:52Z"}, "message": "Rollup merge of #36198 - alexcrichton:fix-travis, r=brson\n\ntest: Add a min-llvm-version directive\n\nWe've got tests which require a particular version of LLVM to run as they're\ntesting bug fixes. Our build system, however, supports multiple LLVM versions,\nso we can't run these tests on all LLVM versions.\n\nThis adds a new `min-llvm-version` directive for tests so they can opt out of\nbeing run on older versions of LLVM. This then namely applies that logic to the\n`issue-36023.rs` test case and...\n\nCloses #36138", "tree": {"sha": "c4abda37db36115b503a0663affb3aa64dbc05cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4abda37db36115b503a0663affb3aa64dbc05cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9996909acc3624be0dd6d31834c5a09c242bd32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9996909acc3624be0dd6d31834c5a09c242bd32", "html_url": "https://github.com/rust-lang/rust/commit/b9996909acc3624be0dd6d31834c5a09c242bd32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9996909acc3624be0dd6d31834c5a09c242bd32/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75fb28f6a06c415fa3146c32e6fa8df5959b73a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/75fb28f6a06c415fa3146c32e6fa8df5959b73a7", "html_url": "https://github.com/rust-lang/rust/commit/75fb28f6a06c415fa3146c32e6fa8df5959b73a7"}, {"sha": "96283fc08367ae8c3d344f2342c4ebe11d799092", "url": "https://api.github.com/repos/rust-lang/rust/commits/96283fc08367ae8c3d344f2342c4ebe11d799092", "html_url": "https://github.com/rust-lang/rust/commit/96283fc08367ae8c3d344f2342c4ebe11d799092"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "6130b581387515af42c59a2ca4f8d31302b1c016", "filename": "mk/main.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b9996909acc3624be0dd6d31834c5a09c242bd32/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b9996909acc3624be0dd6d31834c5a09c242bd32/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=b9996909acc3624be0dd6d31834c5a09c242bd32", "patch": "@@ -348,6 +348,7 @@ LLVM_AS_$(1)=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-as$$(X_$(1))\n LLC_$(1)=$$(CFG_LLVM_INST_DIR_$(1))/bin/llc$$(X_$(1))\n \n LLVM_ALL_COMPONENTS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --components)\n+LLVM_VERSION_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --version)\n \n endef\n "}, {"sha": "c135aa9b8fb956cd9b186af8736ff1d83597ac72", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b9996909acc3624be0dd6d31834c5a09c242bd32/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b9996909acc3624be0dd6d31834c5a09c242bd32/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=b9996909acc3624be0dd6d31834c5a09c242bd32", "patch": "@@ -649,6 +649,7 @@ CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) = \\\n \t--lldb-python $$(CFG_LLDB_PYTHON) \\\n         --gdb-version=\"$(CFG_GDB_VERSION)\" \\\n         --lldb-version=\"$(CFG_LLDB_VERSION)\" \\\n+        --llvm-version=\"$$(LLVM_VERSION_$(3))\" \\\n         --android-cross-path=$(CFG_ARM_LINUX_ANDROIDEABI_NDK) \\\n         --adb-path=$(CFG_ADB) \\\n         --adb-test-dir=$(CFG_ADB_TEST_DIR) \\"}, {"sha": "2b9d717cbd48dbaa3365257cb80916b32a10c393", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=b9996909acc3624be0dd6d31834c5a09c242bd32", "patch": "@@ -148,6 +148,9 @@ pub fn compiletest(build: &Build,\n     if let Some(ref dir) = build.lldb_python_dir {\n         cmd.arg(\"--lldb-python-dir\").arg(dir);\n     }\n+    let llvm_config = build.llvm_config(target);\n+    let llvm_version = output(Command::new(&llvm_config).arg(\"--version\"));\n+    cmd.arg(\"--llvm-version\").arg(llvm_version);\n \n     cmd.args(&build.flags.args);\n \n@@ -158,7 +161,6 @@ pub fn compiletest(build: &Build,\n     // Only pass correct values for these flags for the `run-make` suite as it\n     // requires that a C++ compiler was configured which isn't always the case.\n     if suite == \"run-make\" {\n-        let llvm_config = build.llvm_config(target);\n         let llvm_components = output(Command::new(&llvm_config).arg(\"--components\"));\n         let llvm_cxxflags = output(Command::new(&llvm_config).arg(\"--cxxflags\"));\n         cmd.arg(\"--cc\").arg(build.cc(target))"}, {"sha": "53a8a403b6410167cd5611c4c69a3d7760aa9372", "filename": "src/test/run-pass/issue-36023.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftest%2Frun-pass%2Fissue-36023.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftest%2Frun-pass%2Fissue-36023.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-36023.rs?ref=b9996909acc3624be0dd6d31834c5a09c242bd32", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// min-llvm-version 3.9\n+\n use std::ops::Deref;\n \n fn main() {"}, {"sha": "5d522736089ea4d2acf1340b99bf5a6cd6c23583", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=b9996909acc3624be0dd6d31834c5a09c242bd32", "patch": "@@ -152,6 +152,9 @@ pub struct Config {\n     // Version of LLDB\n     pub lldb_version: Option<String>,\n \n+    // Version of LLVM\n+    pub llvm_version: Option<String>,\n+\n     // Path to the android tools\n     pub android_cross_path: PathBuf,\n "}, {"sha": "899a366a4bb7412b42ae3a09b1a69197c53ab410", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=b9996909acc3624be0dd6d31834c5a09c242bd32", "patch": "@@ -44,7 +44,9 @@ impl EarlyProps {\n                 (config.mode == common::Pretty && parse_name_directive(ln, \"ignore-pretty\")) ||\n                 (config.target != config.host &&\n                  parse_name_directive(ln, \"ignore-cross-compile\")) ||\n-                ignore_gdb(config, ln) || ignore_lldb(config, ln);\n+                ignore_gdb(config, ln) ||\n+                ignore_lldb(config, ln) ||\n+                ignore_llvm(config, ln);\n \n             props.should_fail = props.should_fail || parse_name_directive(ln, \"should-fail\");\n         });\n@@ -115,6 +117,24 @@ impl EarlyProps {\n                 false\n             }\n         }\n+\n+        fn ignore_llvm(config: &Config, line: &str) -> bool {\n+            if let Some(ref actual_version) = config.llvm_version {\n+                if line.contains(\"min-llvm-version\") {\n+                    let min_version = line.trim()\n+                        .split(' ')\n+                        .last()\n+                        .expect(\"Malformed llvm version directive\");\n+                    // Ignore if actual version is smaller the minimum required\n+                    // version\n+                    &actual_version[..] < min_version\n+                } else {\n+                    false\n+                }\n+            } else {\n+                false\n+            }\n+        }\n     }\n }\n "}, {"sha": "4afeb3613319b025bb8291e5d03ce4cf622a8a7c", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9996909acc3624be0dd6d31834c5a09c242bd32/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=b9996909acc3624be0dd6d31834c5a09c242bd32", "patch": "@@ -99,6 +99,7 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n           optopt(\"\", \"host\", \"the host to build for\", \"HOST\"),\n           optopt(\"\", \"gdb-version\", \"the version of GDB used\", \"VERSION STRING\"),\n           optopt(\"\", \"lldb-version\", \"the version of LLDB used\", \"VERSION STRING\"),\n+          optopt(\"\", \"llvm-version\", \"the version of LLVM used\", \"VERSION STRING\"),\n           optopt(\"\", \"android-cross-path\", \"Android NDK standalone path\", \"PATH\"),\n           optopt(\"\", \"adb-path\", \"path to the android debugger\", \"PATH\"),\n           optopt(\"\", \"adb-test-dir\", \"path to tests for the android debugger\", \"PATH\"),\n@@ -170,6 +171,7 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         host: opt_str2(matches.opt_str(\"host\")),\n         gdb_version: extract_gdb_version(matches.opt_str(\"gdb-version\")),\n         lldb_version: extract_lldb_version(matches.opt_str(\"lldb-version\")),\n+        llvm_version: matches.opt_str(\"llvm-version\"),\n         android_cross_path: opt_path(matches, \"android-cross-path\"),\n         adb_path: opt_str2(matches.opt_str(\"adb-path\")),\n         adb_test_dir: format!(\"{}/{}\","}]}