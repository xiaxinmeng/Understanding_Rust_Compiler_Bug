{"sha": "d9c64e50a07dec062c273f4ec4c8f5985af13273", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5YzY0ZTUwYTA3ZGVjMDYyYzI3M2Y0ZWM0YzhmNTk4NWFmMTMyNzM=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2018-12-11T07:55:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-11T07:55:15Z"}, "message": "Typo\n\nCo-Authored-By: RalfJung <post@ralfj.de>", "tree": {"sha": "174a73e22a5349c928d7fd2ce4ce3932f1543692", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/174a73e22a5349c928d7fd2ce4ce3932f1543692"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9c64e50a07dec062c273f4ec4c8f5985af13273", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcD21jCRBK7hj4Ov3rIwAAdHIIAFsGdFG2zwL+izHAoAcPLK/P\n6OECMbst7Tw9SE0GzYtBo9zJV8nZtGeTkto+wYtef60GV1kMtcu/qySjDE4M3qZU\n3RV/o1OJrwzQZF8guOPQ4JclPRQFo0GUBAJOHozLRjTLrL5S8ePDD8wqR+D+lWrY\nQXFJSy6fVxlRtLel9h732UFY5xIUgUKSkCIkiJ5LWHCWZxbOVf3cJbnHgGXeBWhS\ns2L2KjzxMVJ9TsrUBDzraxpm9dRTLeSmPZ/2YQS1yEFWUs4Zzjy2vWBzVg3lNwVm\nh+HMvvaUPc27W2T/OkJ/Cv+gNfdJwFNYpAzF6FwEkb+kF23hEvoXSxunhquyr0c=\n=mM3V\n-----END PGP SIGNATURE-----\n", "payload": "tree 174a73e22a5349c928d7fd2ce4ce3932f1543692\nparent 4558340ecc64c2702ad89b8175e07ac1c71e273b\nauthor Alexis Beingessner <a.beingessner@gmail.com> 1544514915 +0100\ncommitter GitHub <noreply@github.com> 1544514915 +0100\n\nTypo\n\nCo-Authored-By: RalfJung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c64e50a07dec062c273f4ec4c8f5985af13273", "html_url": "https://github.com/rust-lang/rust/commit/d9c64e50a07dec062c273f4ec4c8f5985af13273", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9c64e50a07dec062c273f4ec4c8f5985af13273/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4558340ecc64c2702ad89b8175e07ac1c71e273b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4558340ecc64c2702ad89b8175e07ac1c71e273b", "html_url": "https://github.com/rust-lang/rust/commit/4558340ecc64c2702ad89b8175e07ac1c71e273b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a2d2d3c74be9dd261813b56a42eaa19f8527df2a", "filename": "src/liballoc/collections/btree/node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d9c64e50a07dec062c273f4ec4c8f5985af13273/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9c64e50a07dec062c273f4ec4c8f5985af13273/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs?ref=d9c64e50a07dec062c273f4ec4c8f5985af13273", "patch": "@@ -589,7 +589,7 @@ impl<'a, K: 'a, V: 'a, Type> NodeRef<marker::Immut<'a>, K, V, Type> {\n     fn into_key_slice(self) -> &'a [K] {\n         // We have to be careful here because we might be pointing to the shared root.\n         // In that case, we must not create an `&LeafNode`.  We could just return\n-        // an empty slice whenever the lenght is 0 (this includes the shared root),\n+        // an empty slice whenever the length is 0 (this includes the shared root),\n         // but we want to avoid that run-time check.\n         // Instead, we create a slice pointing into the node whenever possible.\n         // We can sometimes do this even for the shared root, as the slice will be"}]}