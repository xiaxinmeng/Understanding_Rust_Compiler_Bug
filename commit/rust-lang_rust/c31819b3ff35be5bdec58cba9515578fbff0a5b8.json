{"sha": "c31819b3ff35be5bdec58cba9515578fbff0a5b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTgxOWIzZmYzNWJlNWJkZWM1OGNiYTk1MTU1NzhmYmZmMGE1Yjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-17T07:24:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-17T07:24:43Z"}, "message": "layout should not affect CTFE checks (outside of validation)", "tree": {"sha": "57b1572e21f090ee11497e816b9245f3886da9b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57b1572e21f090ee11497e816b9245f3886da9b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c31819b3ff35be5bdec58cba9515578fbff0a5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c31819b3ff35be5bdec58cba9515578fbff0a5b8", "html_url": "https://github.com/rust-lang/rust/commit/c31819b3ff35be5bdec58cba9515578fbff0a5b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c31819b3ff35be5bdec58cba9515578fbff0a5b8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ba1071c626c43a5b85752b4ffcf6a87e2b745e", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ba1071c626c43a5b85752b4ffcf6a87e2b745e", "html_url": "https://github.com/rust-lang/rust/commit/37ba1071c626c43a5b85752b4ffcf6a87e2b745e"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "2d6b19ca4a7fcc42b44e0d06426bf00ef1a27593", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c31819b3ff35be5bdec58cba9515578fbff0a5b8/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31819b3ff35be5bdec58cba9515578fbff0a5b8/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=c31819b3ff35be5bdec58cba9515578fbff0a5b8", "patch": "@@ -688,9 +688,6 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         rval: OpTy<'tcx, M::PointerTag>,\n     ) -> EvalResult<'tcx, (u128, usize)> {\n         trace!(\"read_discriminant_value {:#?}\", rval.layout);\n-        if rval.layout.abi.is_uninhabited() {\n-            return err!(Unreachable);\n-        }\n \n         match rval.layout.variants {\n             layout::Variants::Single { index } => {"}]}