{"sha": "68b3f0d8a419c94eaead13517cd87aaf5fc74b86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YjNmMGQ4YTQxOWM5NGVhZWFkMTM1MTdjZDg3YWFmNWZjNzRiODY=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-25T01:32:09Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:57Z"}, "message": "base::iter_structural_ty: tuples", "tree": {"sha": "f5e746500d47a4e4aaf263b81b827930275ba5ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5e746500d47a4e4aaf263b81b827930275ba5ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68b3f0d8a419c94eaead13517cd87aaf5fc74b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68b3f0d8a419c94eaead13517cd87aaf5fc74b86", "html_url": "https://github.com/rust-lang/rust/commit/68b3f0d8a419c94eaead13517cd87aaf5fc74b86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68b3f0d8a419c94eaead13517cd87aaf5fc74b86/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca450e345f57f277c1cb0406b8366280c8d41f48", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca450e345f57f277c1cb0406b8366280c8d41f48", "html_url": "https://github.com/rust-lang/rust/commit/ca450e345f57f277c1cb0406b8366280c8d41f48"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "ca934d755b4262534b73972cfb94311f4907a492", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/68b3f0d8a419c94eaead13517cd87aaf5fc74b86/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68b3f0d8a419c94eaead13517cd87aaf5fc74b86/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=68b3f0d8a419c94eaead13517cd87aaf5fc74b86", "patch": "@@ -689,10 +689,11 @@ pub fn iter_structural_ty(cx: block, av: ValueRef, t: ty::t,\n         cx = tvec::iter_vec_raw(cx, base, t, len, f);\n       }\n       ty::ty_tup(args) => {\n-        for vec::eachi(args) |i, arg| {\n-            let llfld_a = GEPi(cx, av, [0u, i]);\n-            cx = f(cx, llfld_a, *arg);\n-        }\n+          let repr = adt::represent_type(cx.ccx(), t);\n+          for vec::eachi(args) |i, arg| {\n+              let llfld_a = adt::trans_GEP(cx, &repr, av, 0, i);\n+              cx = f(cx, llfld_a, *arg);\n+          }\n       }\n       ty::ty_enum(tid, ref substs) => {\n         let variants = ty::enum_variants(cx.tcx(), tid);"}]}