{"sha": "85d7d9b6b748d896831502fd2776e9fb356d6d09", "node_id": "C_kwDOAAsO6NoAKDg1ZDdkOWI2Yjc0OGQ4OTY4MzE1MDJmZDI3NzZlOWZiMzU2ZDZkMDk", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-12-08T05:11:29Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-12-08T05:11:29Z"}, "message": "add a test case for `generic_const_exprs` in trait items", "tree": {"sha": "06c1b3cdb3cfa56db3a0c8fe2fc9b2cae1241544", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06c1b3cdb3cfa56db3a0c8fe2fc9b2cae1241544"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85d7d9b6b748d896831502fd2776e9fb356d6d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85d7d9b6b748d896831502fd2776e9fb356d6d09", "html_url": "https://github.com/rust-lang/rust/commit/85d7d9b6b748d896831502fd2776e9fb356d6d09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85d7d9b6b748d896831502fd2776e9fb356d6d09/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb596e3015811f6d08f45b2ebf41924a8f329c13", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb596e3015811f6d08f45b2ebf41924a8f329c13", "html_url": "https://github.com/rust-lang/rust/commit/cb596e3015811f6d08f45b2ebf41924a8f329c13"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "60bb43245e25db370590f580aef925412bd7201d", "filename": "compiler/rustc_hir_analysis/src/collect/generics_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85d7d9b6b748d896831502fd2776e9fb356d6d09/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85d7d9b6b748d896831502fd2776e9fb356d6d09/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs?ref=85d7d9b6b748d896831502fd2776e9fb356d6d09", "patch": "@@ -79,7 +79,7 @@ pub(super) fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::Generics {\n                     let generics = tcx.generics_of(parent_def_id.to_def_id());\n                     let param_def_idx = generics.param_def_id_to_index[&param_id.to_def_id()];\n                     // In the above example this would be .params[..N#0]\n-                    let params = generics.param_to(param_def_idx as usize, tcx).to_owned();\n+                    let params = generics.params_to(param_def_idx as usize, tcx).to_owned();\n                     let param_def_id_to_index =\n                         params.iter().map(|param| (param.def_id, param.index)).collect();\n "}, {"sha": "72e58158d3f78fe724c310093fffc006c126568e", "filename": "compiler/rustc_middle/src/ty/generics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85d7d9b6b748d896831502fd2776e9fb356d6d09/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85d7d9b6b748d896831502fd2776e9fb356d6d09/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs?ref=85d7d9b6b748d896831502fd2776e9fb356d6d09", "patch": "@@ -220,12 +220,12 @@ impl<'tcx> Generics {\n         }\n     }\n \n-    pub fn param_to(&'tcx self, param_index: usize, tcx: TyCtxt<'tcx>) -> &'tcx [GenericParamDef] {\n+    pub fn params_to(&'tcx self, param_index: usize, tcx: TyCtxt<'tcx>) -> &'tcx [GenericParamDef] {\n         if let Some(index) = param_index.checked_sub(self.parent_count) {\n             &self.params[..index]\n         } else {\n             tcx.generics_of(self.parent.expect(\"parent_count > 0 but no parent?\"))\n-                .param_to(param_index, tcx)\n+                .params_to(param_index, tcx)\n         }\n     }\n "}, {"sha": "d8b23bc01a96dc40d8c2eac272745c8bf8e56be7", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-105257.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/85d7d9b6b748d896831502fd2776e9fb356d6d09/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85d7d9b6b748d896831502fd2776e9fb356d6d09/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.rs?ref=85d7d9b6b748d896831502fd2776e9fb356d6d09", "patch": "@@ -3,6 +3,7 @@\n \n trait Trait<T> {\n     fn fnc<const N: usize = \"\">(&self) {} //~ERROR defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n+    fn foo<const N: usize = { std::mem::size_of::<T>() }>(&self) {} //~ERROR defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n }\n \n fn main() {}"}, {"sha": "ed7a8cb19a4a5fc45b7d3e1b0a4c64e22adf16fb", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-105257.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85d7d9b6b748d896831502fd2776e9fb356d6d09/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/85d7d9b6b748d896831502fd2776e9fb356d6d09/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.stderr?ref=85d7d9b6b748d896831502fd2776e9fb356d6d09", "patch": "@@ -4,5 +4,11 @@ error: defaults for const parameters are only allowed in `struct`, `enum`, `type\n LL |     fn fnc<const N: usize = \"\">(&self) {}\n    |            ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n+  --> $DIR/issue-105257.rs:6:12\n+   |\n+LL |     fn foo<const N: usize = { std::mem::size_of::<T>() }>(&self) {}\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n "}]}