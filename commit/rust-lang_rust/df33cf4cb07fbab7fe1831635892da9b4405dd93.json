{"sha": "df33cf4cb07fbab7fe1831635892da9b4405dd93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMzNjZjRjYjA3ZmJhYjdmZTE4MzE2MzU4OTJkYTliNDQwNWRkOTM=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-07-10T22:09:48Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-07-10T22:09:48Z"}, "message": "add a debug log for more MC failures\n\nI don't see why MC should fail on well-formed code, so it might be a\nbetter idea to just add a `delay_span_bug` there (anyone remember the\n`cat_expr Errd` bug from the 1.0 days?).\n\nHowever, I don't think this is a good idea to backport a new delay_span_bug\ninto stable and this code is going away soon-ish anyway.", "tree": {"sha": "af82ddbfa8c613caaebe3ed7881cfc32f86f5f4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af82ddbfa8c613caaebe3ed7881cfc32f86f5f4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df33cf4cb07fbab7fe1831635892da9b4405dd93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df33cf4cb07fbab7fe1831635892da9b4405dd93", "html_url": "https://github.com/rust-lang/rust/commit/df33cf4cb07fbab7fe1831635892da9b4405dd93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df33cf4cb07fbab7fe1831635892da9b4405dd93/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05d6e55fab21e76627b3e5e793c062ad4d2b485a", "url": "https://api.github.com/repos/rust-lang/rust/commits/05d6e55fab21e76627b3e5e793c062ad4d2b485a", "html_url": "https://github.com/rust-lang/rust/commit/05d6e55fab21e76627b3e5e793c062ad4d2b485a"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "79ee322d1095a5c4f7e5113e18a591534cf39578", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/df33cf4cb07fbab7fe1831635892da9b4405dd93/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df33cf4cb07fbab7fe1831635892da9b4405dd93/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=df33cf4cb07fbab7fe1831635892da9b4405dd93", "patch": "@@ -105,7 +105,10 @@ use rustc::hir::{self, PatKind};\n \n // a variation on try that just returns unit\n macro_rules! ignore_err {\n-    ($e:expr) => (match $e { Ok(e) => e, Err(_) => return () })\n+    ($e:expr) => (match $e { Ok(e) => e, Err(_) => {\n+        debug!(\"ignoring mem-categorization error!\");\n+        return ()\n+    }})\n }\n \n ///////////////////////////////////////////////////////////////////////////\n@@ -1034,7 +1037,7 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n         debug!(\"link_pattern(discr_cmt={:?}, root_pat={:?})\",\n                discr_cmt,\n                root_pat);\n-        let _ = self.with_mc(|mc| {\n+        ignore_err!(self.with_mc(|mc| {\n             mc.cat_pattern(discr_cmt, root_pat, |sub_cmt, sub_pat| {\n                 match sub_pat.node {\n                     // `ref x` pattern\n@@ -1051,7 +1054,7 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n                     _ => {}\n                 }\n             })\n-        });\n+        }));\n     }\n \n     /// Link lifetime of borrowed pointer resulting from autoref to lifetimes in the value being"}]}