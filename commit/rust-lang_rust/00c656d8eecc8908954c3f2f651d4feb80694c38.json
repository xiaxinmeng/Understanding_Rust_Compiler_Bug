{"sha": "00c656d8eecc8908954c3f2f651d4feb80694c38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwYzY1NmQ4ZWVjYzg5MDg5NTRjM2YyZjY1MWQ0ZmViODA2OTRjMzg=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-05-31T12:57:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-31T12:57:34Z"}, "message": "Rollup merge of #5663 - matthiaskrgr:crash_test_3969, r=Manishearth\n\nadd testcase that no longer ICEs\n\nFixes #3969\n\nchangelog: none", "tree": {"sha": "164e2c831088f576d826c5ca7bdf8a53e44ce25a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/164e2c831088f576d826c5ca7bdf8a53e44ce25a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00c656d8eecc8908954c3f2f651d4feb80694c38", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe06m+CRBK7hj4Ov3rIwAAdHIIAB2/lwJT+XjOy5dXRb7TmcdY\nqNgF3/qOObbyyRvX3onDZFzSN5SdIVeUWpg4RsPWYseF0iiXxEVfrv524tu2uXEE\n4UhHTByA5bVQQ3Urol3eQPb6L9OFWl1rY8/kvn6sGsmrJkJi52i71nXYJwRz8XDG\n3lromnvhKAF1k6a5BVFZ3qfNZRZjeo5xJJrDjtwjcLHm1i8t/InFP6tpvy1Dj/Ot\n0ykOLSJL0q/+nTbTUqmXe+77rS7EDPDyOGZ8e/o64k7qYsX5diuN7IRpTRSYfdVr\nqK0FG2YmlOyVEFAfQitQRGuWOJ2iE+xVEr9izF+KP9dB2sGScykPOFmOuXJyNr4=\n=1q1L\n-----END PGP SIGNATURE-----\n", "payload": "tree 164e2c831088f576d826c5ca7bdf8a53e44ce25a\nparent 873c9fc8f2f7cd04049d70fbc755b070a9c3a324\nparent b92cc8a08d74fb412bc444a4361df51b0c95401c\nauthor Philipp Krones <hello@philkrones.com> 1590929854 +0200\ncommitter GitHub <noreply@github.com> 1590929854 +0200\n\nRollup merge of #5663 - matthiaskrgr:crash_test_3969, r=Manishearth\n\nadd testcase that no longer ICEs\n\nFixes #3969\n\nchangelog: none\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00c656d8eecc8908954c3f2f651d4feb80694c38", "html_url": "https://github.com/rust-lang/rust/commit/00c656d8eecc8908954c3f2f651d4feb80694c38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00c656d8eecc8908954c3f2f651d4feb80694c38/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "873c9fc8f2f7cd04049d70fbc755b070a9c3a324", "url": "https://api.github.com/repos/rust-lang/rust/commits/873c9fc8f2f7cd04049d70fbc755b070a9c3a324", "html_url": "https://github.com/rust-lang/rust/commit/873c9fc8f2f7cd04049d70fbc755b070a9c3a324"}, {"sha": "b92cc8a08d74fb412bc444a4361df51b0c95401c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92cc8a08d74fb412bc444a4361df51b0c95401c", "html_url": "https://github.com/rust-lang/rust/commit/b92cc8a08d74fb412bc444a4361df51b0c95401c"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "4feab7910b7445da53bf0c73ac25bea9ce160a66", "filename": "tests/ui/crashes/ice-3969.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/00c656d8eecc8908954c3f2f651d4feb80694c38/tests%2Fui%2Fcrashes%2Fice-3969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00c656d8eecc8908954c3f2f651d4feb80694c38/tests%2Fui%2Fcrashes%2Fice-3969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3969.rs?ref=00c656d8eecc8908954c3f2f651d4feb80694c38", "patch": "@@ -0,0 +1,51 @@\n+// https://github.com/rust-lang/rust-clippy/issues/3969\n+// used to crash: error: internal compiler error:\n+// src/librustc_traits/normalize_erasing_regions.rs:43: could not fully normalize `<i32 as\n+// std::iter::Iterator>::Item test from rustc ./ui/trivial-bounds/trivial-bounds-inconsistent.rs\n+\n+// Check that tautalogically false bounds are accepted, and are used\n+// in type inference.\n+#![feature(trivial_bounds)]\n+#![allow(unused)]\n+\n+trait A {}\n+\n+impl A for i32 {}\n+\n+struct Dst<X: ?Sized> {\n+    x: X,\n+}\n+\n+struct TwoStrs(str, str)\n+where\n+    str: Sized;\n+\n+fn unsized_local()\n+where\n+    for<'a> Dst<A + 'a>: Sized,\n+{\n+    let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n+}\n+\n+fn return_str() -> str\n+where\n+    str: Sized,\n+{\n+    *\"Sized\".to_string().into_boxed_str()\n+}\n+\n+fn use_op(s: String) -> String\n+where\n+    String: ::std::ops::Neg<Output = String>,\n+{\n+    -s\n+}\n+\n+fn use_for()\n+where\n+    i32: Iterator,\n+{\n+    for _ in 2i32 {}\n+}\n+\n+fn main() {}"}, {"sha": "923db0664a714f53804c76a9e08986e2f8e50327", "filename": "tests/ui/crashes/ice-3969.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/00c656d8eecc8908954c3f2f651d4feb80694c38/tests%2Fui%2Fcrashes%2Fice-3969.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00c656d8eecc8908954c3f2f651d4feb80694c38/tests%2Fui%2Fcrashes%2Fice-3969.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3969.stderr?ref=00c656d8eecc8908954c3f2f651d4feb80694c38", "patch": "@@ -0,0 +1,22 @@\n+error: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/ice-3969.rs:25:17\n+   |\n+LL |     for<'a> Dst<A + 'a>: Sized,\n+   |                 ^^^^^^ help: use `dyn`: `dyn A + 'a`\n+   |\n+   = note: `-D bare-trait-objects` implied by `-D warnings`\n+\n+error: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/ice-3969.rs:27:16\n+   |\n+LL |     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n+   |                ^ help: use `dyn`: `dyn A`\n+\n+error: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/ice-3969.rs:27:57\n+   |\n+LL |     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n+   |                                                         ^ help: use `dyn`: `dyn A`\n+\n+error: aborting due to 3 previous errors\n+"}]}