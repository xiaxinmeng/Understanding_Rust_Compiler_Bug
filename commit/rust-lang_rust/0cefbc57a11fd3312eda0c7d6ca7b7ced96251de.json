{"sha": "0cefbc57a11fd3312eda0c7d6ca7b7ced96251de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZWZiYzU3YTExZmQzMzEyZWRhMGM3ZDZjYTdiN2NlZDk2MjUxZGU=", "commit": {"author": {"name": "Erin Power", "email": "erin.power@embark-studios.com", "date": "2021-02-09T10:23:49Z"}, "committer": {"name": "Erin Power", "email": "erin.power@embark-studios.com", "date": "2021-02-09T10:27:08Z"}, "message": "Update RELEASES.md for 1.51.0", "tree": {"sha": "9d928ec782045c75bcd16572f6cfdf133ed084b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d928ec782045c75bcd16572f6cfdf133ed084b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cefbc57a11fd3312eda0c7d6ca7b7ced96251de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cefbc57a11fd3312eda0c7d6ca7b7ced96251de", "html_url": "https://github.com/rust-lang/rust/commit/0cefbc57a11fd3312eda0c7d6ca7b7ced96251de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cefbc57a11fd3312eda0c7d6ca7b7ced96251de/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4008fe94935d05ffb3a48fc5b7149070bb45550", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4008fe94935d05ffb3a48fc5b7149070bb45550", "html_url": "https://github.com/rust-lang/rust/commit/f4008fe94935d05ffb3a48fc5b7149070bb45550"}], "stats": {"total": 148, "additions": 148, "deletions": 0}, "files": [{"sha": "4dff34e3d0bb7a772f13e66ae61897aa1af28c10", "filename": "RELEASES.md", "status": "modified", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/0cefbc57a11fd3312eda0c7d6ca7b7ced96251de/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/0cefbc57a11fd3312eda0c7d6ca7b7ced96251de/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=0cefbc57a11fd3312eda0c7d6ca7b7ced96251de", "patch": "@@ -1,3 +1,151 @@\n+Version 1.51.0 (2021-03-25)\n+============================\n+\n+Language\n+--------\n+- [You can now parameterize items such as functions, traits, and `struct`s by constant\n+  values in addition to by types.][78135] E.g. You can now write the following. Note:\n+  Only values of primitive integers, `bool`, or `char` types are currently permitted.\n+  ```rust\n+  struct GenericArray<T, const LENGTH: usize> {\n+      inner: [T; LENGTH]\n+  }\n+\n+  impl<T, const LENGTH: usize> GenericArray<T, LENGTH> {\n+      const fn last(&self) -> Option<&T> {\n+          if LENGTH == 0 {\n+              None\n+          } else {\n+              Some(&self.inner[LENGTH-1])\n+          }\n+      }\n+  }\n+  ```\n+\n+\n+Compiler\n+--------\n+\n+- [Added the `-Csplit-debuginfo` codegen option.][79570] This option controls whether\n+  debug information is split across multiple files or packed into a single file.\n+- [Added tier 3\\*  support for `aarch64_be-unknown-linux-gnu`, `aarch64-unknown-linux-gnu_ilp32`,\n+  and `aarch64_be-unknown-linux-gnu_ilp32` targets.][81455]\n+- [Added tier 3 support for `i386-unknown-linux-gnu` and `i486-unknown-linux-gnu` targets.][80662]\n+- [The `target-cpu=native` option will now detect individual features of CPUs.][80749]\n+- [Rust now uses `inline-asm` for stack probes when used with LLVM 11.0.1+][77885]\n+\n+Libraries\n+---------\n+\n+- [`Box::downcast` is now also implemented for any `dyn Any + Send + Sync` object.][80945]\n+- [`str` now implements `AsMut<str>`.][80279]\n+- [`u64` and `u128` now implement `From<char>`.][79502]\n+- [`Error` is now implemented for `&T` where `T` implements `Error`.][75180]\n+- [`Poll::{map_ok, map_err}` are now implemented for `Poll<Option<Result<T, E>>>`.][80968]\n+- [`unsigned_abs` is now implemented for all signed integer types.][80959]\n+- [`io::Empty` now implements `io::Seek`.][78044]\n+- [`rc::Weak<T>` and `sync::Weak<T>`'s methods such as `as_ptr` are now implemented for\n+  `T: ?Sized` types.][80764]\n+\n+Stabilized APIs\n+---------------\n+\n+- [`Arc::decrement_strong_count`]\n+- [`Arc::increment_strong_count`]\n+- [`Once::call_once_force`]\n+- [`Peekable::next_if_eq`]\n+- [`Peekable::next_if`]\n+- [`Seek::stream_position`]\n+- [`array::IntoIter`]\n+- [`panic::panic_any`]\n+- [`ptr::addr_of!`]\n+- [`ptr::addr_of_mut!`]\n+- [`slice::SlicePattern`]\n+- [`slice::fill_with`]\n+- [`slice::split_inclusive_mut`]\n+- [`slice::split_inclusive`]\n+- [`slice::strip_prefix`]\n+- [`slice::strip_suffix`]\n+- [`str::split_inclusive`]\n+- [`sync::OnceState`]\n+- [`task::Wake`]\n+\n+Rustdoc\n+-------\n+\n+- [Rustdoc will now include documentation for methods available from `Deref` traits.][80653]\n+- [You can now provide a `--default-theme` flag which sets the default theme to use for\n+  documentation.][79642]\n+\n+Various improvements to intra-doc links:\n+\n+  - [You can link to no path based primitives such as `slice`.][80181]\n+  - [You can link to associated items.][74489]\n+  - [You can now link to items with generics such as `Vec<T>`.][76934]\n+\n+Misc\n+----\n+- [You can now pass `--include-ignored` to tests (e.g. with\n+  `cargo test -- --include-ignored`) to include testing tests marked `#[ignore]`.][80053]\n+\n+Compatibility Notes\n+-------------------\n+\n+- [Bumped the minimum `g++` for `linux-gnu` targets to `g++-8` from `g++-7`.][81521]\n+- [WASI platforms no longer use the `wasm-bindgen` ABI.][79998]\n+- [rustc no longer promotes division, modulo and indexing operations to `const` that\n+  could fail.][80579]\n+\n+Internal Only\n+-------------\n+\n+- [Consistently avoid constructing optimized MIR when not doing codegen][80718]\n+\n+[78135]: https://github.com/rust-lang/rust/pull/78135\n+[74489]: https://github.com/rust-lang/rust/pull/74489\n+[76934]: https://github.com/rust-lang/rust/pull/76934\n+[79570]: https://github.com/rust-lang/rust/pull/79570\n+[80181]: https://github.com/rust-lang/rust/pull/80181\n+[79642]: https://github.com/rust-lang/rust/pull/79642\n+[80945]: https://github.com/rust-lang/rust/pull/80945\n+[80279]: https://github.com/rust-lang/rust/pull/80279\n+[80053]: https://github.com/rust-lang/rust/pull/80053\n+[79502]: https://github.com/rust-lang/rust/pull/79502\n+[75180]: https://github.com/rust-lang/rust/pull/75180\n+[79135]: https://github.com/rust-lang/rust/pull/79135\n+[81521]: https://github.com/rust-lang/rust/pull/81521\n+[80968]: https://github.com/rust-lang/rust/pull/80968\n+[80959]: https://github.com/rust-lang/rust/pull/80959\n+[80718]: https://github.com/rust-lang/rust/pull/80718\n+[80653]: https://github.com/rust-lang/rust/pull/80653\n+[80579]: https://github.com/rust-lang/rust/pull/80579\n+[79998]: https://github.com/rust-lang/rust/pull/79998\n+[78044]: https://github.com/rust-lang/rust/pull/78044\n+[81455]: https://github.com/rust-lang/rust/pull/81455\n+[80764]: https://github.com/rust-lang/rust/pull/80764\n+[80749]: https://github.com/rust-lang/rust/pull/80749\n+[80662]: https://github.com/rust-lang/rust/pull/80662\n+[77885]: https://github.com/rust-lang/rust/pull/77885\n+[`Once::call_once_force`]: https://doc.rust-lang.org/stable/std/sync/struct.Once.html#method.call_once_force\n+[`sync::OnceState`]: https://doc.rust-lang.org/stable/std/sync/struct.OnceState.html\n+[`panic::panic_any`]: https://doc.rust-lang.org/stable/std/panic/fn.panic_any.html\n+[`slice::strip_prefix`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.strip_prefix\n+[`slice::strip_suffix`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.strip_prefix\n+[`slice::SlicePattern`]: https://doc.rust-lang.org/nightly/core/slice/trait.SlicePattern.html\n+[`Arc::increment_strong_count`]: https://doc.rust-lang.org/nightly/std/sync/struct.Arc.html#method.increment_strong_count\n+[`Arc::decrement_strong_count`]: https://doc.rust-lang.org/nightly/std/sync/struct.Arc.html#method.decrement_strong_count\n+[`slice::fill_with`]: https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.fill_with\n+[`ptr::addr_of!`]: https://doc.rust-lang.org/nightly/std/ptr/macro.addr_of.html\n+[`ptr::addr_of_mut!`]: https://doc.rust-lang.org/nightly/std/ptr/macro.addr_of_mut.html\n+[`array::IntoIter`]: https://doc.rust-lang.org/nightly/std/array/struct.IntoIter.html\n+[`slice::split_inclusive`]: https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.split_inclusive\n+[`slice::split_inclusive_mut`]: https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.split_inclusive_mut\n+[`str::split_inclusive`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.split_inclusive\n+[`task::Wake`]: https://doc.rust-lang.org/nightly/std/task/trait.Wake.html\n+[`Seek::stream_position`]: https://doc.rust-lang.org/nightly/std/io/trait.Seek.html#method.stream_position\n+[`Peekable::next_if`]: https://doc.rust-lang.org/nightly/std/iter/struct.Peekable.html#method.next_if\n+[`Peekable::next_if_eq`]: https://doc.rust-lang.org/nightly/std/iter/struct.Peekable.html#method.next_if_eq\n+\n Version 1.50.0 (2021-02-11)\n ============================\n "}]}