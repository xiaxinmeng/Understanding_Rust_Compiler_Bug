{"sha": "768998a8de973438cc023aea6ff49ab57ae32059", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ODk5OGE4ZGU5NzM0MzhjYzAyM2FlYTZmZjQ5YWI1N2FlMzIwNTk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-10T21:46:59Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-14T09:12:11Z"}, "message": "Normalize tests for i686 Windows.", "tree": {"sha": "397db5fa35846d5bc914b7caa5f118f91f45d195", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/397db5fa35846d5bc914b7caa5f118f91f45d195"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/768998a8de973438cc023aea6ff49ab57ae32059", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAltynOsACgkQAXYLT59T\n8VTf8g//bX1ehNT3HP4bEjWWEXdcPn3UzmMknklzHi87PM4ruPmjLSUZ37aBFg2a\nDyzWiMKWlnWxvmNWAiL4RLEGFsGYV4mU3Q9rqbpYbjWX6HvWpPOEBNn+Lg484ITo\n3isknvD0HZlrfqv+fmiVKEUxumMdsc1S3fEu3fpgY+EhZsk/jIn5Qhr4GUgMaxgs\nSDqw86IEaarlB0K8P1sL1AyS+9Q1sV9kGUN/mkO0dJ+P6idVZ0Jz5OdnH86AI1vt\nxXshazc2Qfp1dzVv67adYZA1Zg2W8SU+AQ84GULVnAUgwXYUiPJnZxhmUkNhAafz\naWRZyA5EKErNmDaz5J/GiVyPSaolW0fDwl7kxYpjViitOOXLEs5g15KFXo0rENJX\n8rHQzm9If9lX9qm0bL7JREQuf2+YBeYMogUPpZPgwsrBzh7jT3oQEQ7jg2YPwzdV\n8Mo3+7M/bAGeV6DxudrL6uAvB9Om5kum0z33RHES0mq5irfD+BURJNCcu4jKQuID\nVj0nz9pIO3JTzoxWHDIMSmmAE/Mb1yAWh3S+dIwVxgjdXBCmPQWb59jmLzLEC0um\nJqJQfRnq4E8b5Nyj5Ttxd8gZxIrWnytzFZN7/wh0gIVNFfm7NTLsHA2eOeMaVlRm\ni/kYMQHGPdYN7TBXZKpSZ4wkegOcyEHPkqfj64UgHsz8JuhTV/w=\n=NiEd\n-----END PGP SIGNATURE-----", "payload": "tree 397db5fa35846d5bc914b7caa5f118f91f45d195\nparent cd12c82210eca206d7e70ce98750242594945cc8\nauthor David Wood <david@davidtw.co> 1533937619 +0100\ncommitter David Wood <david@davidtw.co> 1534237931 +0200\n\nNormalize tests for i686 Windows.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/768998a8de973438cc023aea6ff49ab57ae32059", "html_url": "https://github.com/rust-lang/rust/commit/768998a8de973438cc023aea6ff49ab57ae32059", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/768998a8de973438cc023aea6ff49ab57ae32059/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd12c82210eca206d7e70ce98750242594945cc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd12c82210eca206d7e70ce98750242594945cc8", "html_url": "https://github.com/rust-lang/rust/commit/cd12c82210eca206d7e70ce98750242594945cc8"}], "stats": {"total": 140, "additions": 58, "deletions": 82}, "files": [{"sha": "a3422d859c61fa67bc0dcef7f883a601cad78750", "filename": "src/test/compile-fail/issue-23595-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fcompile-fail%2Fissue-23595-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fcompile-fail%2Fissue-23595-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23595-1.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "previous_filename": "src/test/ui/issues/issue-23595-1.rs"}, {"sha": "a5ba9ef9bd35dd844d1ea5d1ca2a30cd6b572823", "filename": "src/test/compile-fail/issue-43733-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "previous_filename": "src/test/ui/issues/issue-43733-2.rs"}, {"sha": "17e20766bab1b746f6a01b3b6b3ebc66b5b0bb60", "filename": "src/test/ui/huge-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-enum.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // error-pattern: Option\n+// normalize-stderr-test \"<\\[u32; \\d+\\]>\" -> \"<[u32; N]>\"\n \n // FIXME: work properly with higher limits\n "}, {"sha": "b7cf25504614aa47c376ec4533ae41d180329651", "filename": "src/test/ui/huge-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-enum.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,4 +1,4 @@\n-error: the type `std::option::Option<[u32; 35184372088831]>` is too big for the current architecture\n+error: the type `std::option::Option<[u32; N]>` is too big for the current architecture\n \n error: aborting due to previous error\n "}, {"sha": "c935ad92e44250db75fe21d99b2259c240f2b621", "filename": "src/test/ui/huge-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-struct.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// normalize-stderr-test \"S32\" -> \"SXX\"\n+// normalize-stderr-test \"S1M\" -> \"SXX\"\n // error-pattern: too big for the current\n \n struct S32<T> {"}, {"sha": "06b084bdc3a391cb554c96f7907a4602021c8f5f", "filename": "src/test/ui/huge-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fhuge-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-struct.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,4 +1,4 @@\n-error: the type `S32<S1M<S1M<u32>>>` is too big for the current architecture\n+error: the type `SXX<SXX<SXX<u32>>>` is too big for the current architecture\n \n error: aborting due to previous error\n "}, {"sha": "f37199519097238cf1249c525b1f940399dc7b64", "filename": "src/test/ui/issues/issue-15919.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-15919.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-15919.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15919.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // error-pattern: too big for the current architecture\n+// normalize-stderr-test \"\\[usize; \\d+\\]\" -> \"[usize; N]\"\n \n #[cfg(target_pointer_width = \"32\")]\n fn main() {"}, {"sha": "e4e88cc47cfe7d11d13ba3ed8e56425729bf41c0", "filename": "src/test/ui/issues/issue-15919.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-15919.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-15919.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15919.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,4 +1,4 @@\n-error: the type `[usize; 18446744073709551615]` is too big for the current architecture\n+error: the type `[usize; N]` is too big for the current architecture\n \n error: aborting due to previous error\n "}, {"sha": "9b9159994aca4cb71d58cf945b8c476f2ad98845", "filename": "src/test/ui/issues/issue-17913.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-17913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-17913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17913.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+// normalize-stderr-test \"\\[&usize; \\d+\\]\" -> \"[&usize; N]\"\n // error-pattern: too big for the current architecture\n \n #![feature(box_syntax)]"}, {"sha": "ae388c4d491df8100c5dfb1afffc38a2291bda90", "filename": "src/test/ui/issues/issue-17913.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-17913.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-17913.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17913.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,4 +1,4 @@\n-error: the type `[&usize; 17293822569102704640]` is too big for the current architecture\n+error: the type `[&usize; N]` is too big for the current architecture\n \n error: aborting due to previous error\n "}, {"sha": "624534eb8d78998b7d52e2fb7f5ec95c11b31008", "filename": "src/test/ui/issues/issue-23595-1.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cd12c82210eca206d7e70ce98750242594945cc8/src%2Ftest%2Fui%2Fissues%2Fissue-23595-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd12c82210eca206d7e70ce98750242594945cc8/src%2Ftest%2Fui%2Fissues%2Fissue-23595-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23595-1.stderr?ref=cd12c82210eca206d7e70ce98750242594945cc8", "patch": "@@ -1,21 +0,0 @@\n-error[E0191]: the value of the associated type `ChildKey` (from the trait `Hierarchy`) must be specified\n-  --> $DIR/issue-23595-1.rs:18:50\n-   |\n-LL |     type Children = Index<Self::ChildKey, Output=Hierarchy>;\n-   |                                                  ^^^^^^^^^ missing associated type `ChildKey` value\n-\n-error[E0191]: the value of the associated type `Children` (from the trait `Hierarchy`) must be specified\n-  --> $DIR/issue-23595-1.rs:18:50\n-   |\n-LL |     type Children = Index<Self::ChildKey, Output=Hierarchy>;\n-   |                                                  ^^^^^^^^^ missing associated type `Children` value\n-\n-error[E0191]: the value of the associated type `Value` (from the trait `Hierarchy`) must be specified\n-  --> $DIR/issue-23595-1.rs:18:50\n-   |\n-LL |     type Children = Index<Self::ChildKey, Output=Hierarchy>;\n-   |                                                  ^^^^^^^^^ missing associated type `Value` value\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0191`."}, {"sha": "273629a90fcc3137e00f078cb586fae69d8fdd19", "filename": "src/test/ui/issues/issue-28625.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-28625.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-28625.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28625.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// normalize-stderr-test \"\\d+ bits\" -> \"N bits\"\n+\n trait Bar {\n     type Bar;\n }"}, {"sha": "22f8db4d3870f796c1f7f3af2dbfbeab807ff4ff", "filename": "src/test/ui/issues/issue-28625.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-28625.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-28625.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28625.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,11 +1,11 @@\n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/issue-28625.rs:20:14\n+  --> $DIR/issue-28625.rs:22:14\n    |\n LL |     unsafe { std::mem::transmute(a) } //~ ERROR transmute called with types of different sizes\n    |              ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: source type: &ArrayPeano<T> (64 bits)\n-   = note: target type: &[T] (128 bits)\n+   = note: source type: &ArrayPeano<T> (N bits)\n+   = note: target type: &[T] (N bits)\n \n error: aborting due to previous error\n "}, {"sha": "425dcc6b21ea2b936a3e18770811311a8198a7fb", "filename": "src/test/ui/issues/issue-32377.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-32377.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-32377.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32377.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// normalize-stderr-test \"\\d+ bits\" -> \"N bits\"\n+\n use std::mem;\n use std::marker::PhantomData;\n "}, {"sha": "7168a000a02079f850b3cda78543db3ff5c84f7d", "filename": "src/test/ui/issues/issue-32377.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-32377.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fissues%2Fissue-32377.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32377.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,11 +1,11 @@\n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/issue-32377.rs:23:14\n+  --> $DIR/issue-32377.rs:25:14\n    |\n LL |     unsafe { mem::transmute(x) }\n    |              ^^^^^^^^^^^^^^\n    |\n-   = note: source type: [usize; 2] (128 bits)\n-   = note: target type: Bar<U> (0 bits)\n+   = note: source type: [usize; 2] (N bits)\n+   = note: target type: Bar<U> (N bits)\n \n error: aborting due to previous error\n "}, {"sha": "8eb150ff83311526825ec05a45b697aa5d3840ea", "filename": "src/test/ui/issues/issue-43733-2.stderr", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cd12c82210eca206d7e70ce98750242594945cc8/src%2Ftest%2Fui%2Fissues%2Fissue-43733-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd12c82210eca206d7e70ce98750242594945cc8/src%2Ftest%2Fui%2Fissues%2Fissue-43733-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43733-2.stderr?ref=cd12c82210eca206d7e70ce98750242594945cc8", "patch": "@@ -1,23 +0,0 @@\n-error[E0277]: `std::cell::UnsafeCell<std::option::Option<()>>` cannot be shared between threads safely\n-  --> $DIR/issue-43733-2.rs:35:1\n-   |\n-LL | static __KEY: Key<()> = Key::new();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `std::cell::UnsafeCell<std::option::Option<()>>` cannot be shared between threads safely\n-   |\n-   = help: within `std::thread::Key<()>`, the trait `std::marker::Sync` is not implemented for `std::cell::UnsafeCell<std::option::Option<()>>`\n-   = note: required because it appears within the type `std::thread::Key<()>`\n-   = note: shared static variables must have a type that implements `Sync`\n-\n-error[E0277]: `std::cell::Cell<bool>` cannot be shared between threads safely\n-  --> $DIR/issue-43733-2.rs:35:1\n-   |\n-LL | static __KEY: Key<()> = Key::new();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `std::cell::Cell<bool>` cannot be shared between threads safely\n-   |\n-   = help: within `std::thread::Key<()>`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<bool>`\n-   = note: required because it appears within the type `std::thread::Key<()>`\n-   = note: shared static variables must have a type that implements `Sync`\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0277`."}, {"sha": "695ffbdb2af9fa2a346e4e457a40bf4f4c290032", "filename": "src/test/ui/packed-struct/packed-struct-transmute.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fpacked-struct%2Fpacked-struct-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fpacked-struct%2Fpacked-struct-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpacked-struct%2Fpacked-struct-transmute.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -13,6 +13,7 @@\n // the error points to the start of the file, not the line with the\n // transmute\n \n+// normalize-stderr-test \"\\d+ bits\" -> \"N bits\"\n // error-pattern: transmute called with types of different sizes\n \n use std::mem;"}, {"sha": "5da7d8f7b7e2aa79d2943a42f1015d0b3034c990", "filename": "src/test/ui/packed-struct/packed-struct-transmute.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fpacked-struct%2Fpacked-struct-transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Fpacked-struct%2Fpacked-struct-transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpacked-struct%2Fpacked-struct-transmute.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,11 +1,11 @@\n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/packed-struct-transmute.rs:35:24\n+  --> $DIR/packed-struct-transmute.rs:36:24\n    |\n LL |         let oof: Oof = mem::transmute(foo);\n    |                        ^^^^^^^^^^^^^^\n    |\n-   = note: source type: Foo (72 bits)\n-   = note: target type: Oof (128 bits)\n+   = note: source type: Foo (N bits)\n+   = note: target type: Oof (N bits)\n \n error: aborting due to previous error\n "}, {"sha": "62e9ceb2b2f464e233dd543400706c3f25d380de", "filename": "src/test/ui/transmute/transmute-different-sizes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-different-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-different-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-different-sizes.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// normalize-stderr-test \"\\d+ bits\" -> \"N bits\"\n+\n // Tests that `transmute` cannot be called on types of different size.\n \n #![allow(warnings)]"}, {"sha": "a07b75e29d5bd168493a9017c0801bb7f6cf6ff7", "filename": "src/test/ui/transmute/transmute-different-sizes.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-different-sizes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-different-sizes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-different-sizes.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,28 +1,28 @@\n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-different-sizes.rs:19:17\n+  --> $DIR/transmute-different-sizes.rs:21:17\n    |\n LL |     let _: i8 = transmute(16i16);\n    |                 ^^^^^^^^^\n    |\n-   = note: source type: i16 (16 bits)\n-   = note: target type: i8 (8 bits)\n+   = note: source type: i16 (N bits)\n+   = note: target type: i8 (N bits)\n \n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-different-sizes.rs:24:17\n+  --> $DIR/transmute-different-sizes.rs:26:17\n    |\n LL |     let _: i8 = transmute(x);\n    |                 ^^^^^^^^^\n    |\n-   = note: source type: &T (64 bits)\n-   = note: target type: i8 (8 bits)\n+   = note: source type: &T (N bits)\n+   = note: target type: i8 (N bits)\n \n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-different-sizes.rs:35:5\n+  --> $DIR/transmute-different-sizes.rs:37:5\n    |\n LL |     transmute(x)\n    |     ^^^^^^^^^\n    |\n-   = note: source type: u16 (16 bits)\n+   = note: source type: u16 (N bits)\n    = note: target type: <T as Specializable>::Output (this type's size can vary)\n \n error: aborting due to 3 previous errors"}, {"sha": "c1e6ee3ddcc3beef34c1c5d2e9ee071ac65090b0", "filename": "src/test/ui/transmute/transmute-fat-pointers.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-fat-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-fat-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-fat-pointers.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// normalize-stderr-test \"\\d+ bits\" -> \"N bits\"\n+\n // Tests that are conservative around thin/fat pointer mismatches.\n \n #![allow(dead_code)]"}, {"sha": "8ea71e101c031aa96048b94dadc59eee3aca4576", "filename": "src/test/ui/transmute/transmute-fat-pointers.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-fat-pointers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-fat-pointers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-fat-pointers.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,14 +1,14 @@\n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-fat-pointers.rs:18:14\n+  --> $DIR/transmute-fat-pointers.rs:20:14\n    |\n LL |     unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n    |              ^^^^^^^^^\n    |\n-   = note: source type: &[T] (128 bits)\n+   = note: source type: &[T] (N bits)\n    = note: target type: &U (pointer to U)\n \n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-fat-pointers.rs:22:14\n+  --> $DIR/transmute-fat-pointers.rs:24:14\n    |\n LL |     unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n    |              ^^^^^^^^^\n@@ -17,21 +17,21 @@ LL |     unsafe { transmute(x) } //~ ERROR transmute called with types of differ\n    = note: target type: &U (pointer to U)\n \n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-fat-pointers.rs:34:14\n+  --> $DIR/transmute-fat-pointers.rs:36:14\n    |\n LL |     unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n    |              ^^^^^^^^^\n    |\n    = note: source type: &T (pointer to T)\n-   = note: target type: &U (64 bits)\n+   = note: target type: &U (N bits)\n \n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-fat-pointers.rs:38:14\n+  --> $DIR/transmute-fat-pointers.rs:40:14\n    |\n LL |     unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n    |              ^^^^^^^^^\n    |\n-   = note: source type: &T (64 bits)\n+   = note: source type: &T (N bits)\n    = note: target type: &U (pointer to U)\n \n error: aborting due to 4 previous errors"}, {"sha": "3bf4ca5b9e0393baaa641669277ed9a19a0c7c77", "filename": "src/test/ui/transmute/transmute-impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-impl.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// normalize-stderr-test \"\\d+ bits\" -> \"N bits\"\n+\n // Tests that are conservative around thin/fat pointer mismatches.\n \n #![allow(dead_code)]"}, {"sha": "21f272b0cc1811a0188037f86cb04a8b14564d0c", "filename": "src/test/ui/transmute/transmute-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-impl.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,11 +1,11 @@\n error[E0512]: transmute called with types of different sizes\n-  --> $DIR/transmute-impl.rs:29:18\n+  --> $DIR/transmute-impl.rs:31:18\n    |\n LL |         unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n    |                  ^^^^^^^^^\n    |\n    = note: source type: &T (pointer to T)\n-   = note: target type: &isize (64 bits)\n+   = note: target type: &isize (N bits)\n \n error: aborting due to previous error\n "}, {"sha": "cfce92ece7a921da496263721a927bd80a472f79", "filename": "src/test/ui/union-ub-fat-ptr.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Funion-ub-fat-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Funion-ub-fat-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion-ub-fat-ptr.rs?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -8,6 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// normalize-stderr-test \"alignment \\d+\" -> \"alignment N\"\n+// normalize-stderr-test \"offset \\d+\" -> \"offset N\"\n+// normalize-stderr-test \"allocation \\d+\" -> \"allocation N\"\n+// normalize-stderr-test \"size \\d+\" -> \"size N\"\n+\n #[repr(C)]\n #[derive(Copy, Clone)]\n struct SliceRepr {"}, {"sha": "f0298d9013c933b6ff03de3318a9c553dbc60810", "filename": "src/test/ui/union-ub-fat-ptr.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Funion-ub-fat-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/768998a8de973438cc023aea6ff49ab57ae32059/src%2Ftest%2Fui%2Funion-ub-fat-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion-ub-fat-ptr.stderr?ref=768998a8de973438cc023aea6ff49ab57ae32059", "patch": "@@ -1,37 +1,37 @@\n error[E0080]: this constant likely exhibits undefined behavior\n-  --> $DIR/union-ub-fat-ptr.rs:67:1\n+  --> $DIR/union-ub-fat-ptr.rs:72:1\n    |\n LL | const C: &str = unsafe { SliceTransmute { bad: BadSliceRepr { ptr: &42, len: &3 } }.str};\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered length is not a valid integer\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: this constant likely exhibits undefined behavior\n-  --> $DIR/union-ub-fat-ptr.rs:75:1\n+  --> $DIR/union-ub-fat-ptr.rs:80:1\n    |\n LL | const C2: &[u8] = unsafe { SliceTransmute { bad: BadSliceRepr { ptr: &42, len: &3 } }.slice};\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered length is not a valid integer\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: this constant likely exhibits undefined behavior\n-  --> $DIR/union-ub-fat-ptr.rs:79:1\n+  --> $DIR/union-ub-fat-ptr.rs:84:1\n    |\n LL | const D: &Trait = unsafe { DynTransmute { repr: DynRepr { ptr: &92, vtable: &3 } }.rust};\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ tried to access memory with alignment 1, but alignment 8 is required\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ tried to access memory with alignment N, but alignment N is required\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: this constant likely exhibits undefined behavior\n-  --> $DIR/union-ub-fat-ptr.rs:82:1\n+  --> $DIR/union-ub-fat-ptr.rs:87:1\n    |\n LL | const E: &Trait = unsafe { DynTransmute { repr2: DynRepr2 { ptr: &92, vtable: &3 } }.rust};\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access at offset 16, outside bounds of allocation 56 which has size 8\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access at offset N, outside bounds of allocation N which has size N\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: this constant likely exhibits undefined behavior\n-  --> $DIR/union-ub-fat-ptr.rs:85:1\n+  --> $DIR/union-ub-fat-ptr.rs:90:1\n    |\n LL | const F: &Trait = unsafe { DynTransmute { bad: BadDynRepr { ptr: &92, vtable: 3 } }.rust};\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered vtable address is not a pointer"}]}