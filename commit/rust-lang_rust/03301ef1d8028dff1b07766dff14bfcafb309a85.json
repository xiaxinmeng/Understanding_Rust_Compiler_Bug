{"sha": "03301ef1d8028dff1b07766dff14bfcafb309a85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMzAxZWYxZDgwMjhkZmYxYjA3NzY2ZGZmMTRiZmNhZmIzMDlhODU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-17T09:58:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-17T09:58:27Z"}, "message": "Auto merge of #84246 - notriddle:rustdoc-path-printing-cleanup, r=jyn514\n\nrustdoc: get rid of unused path printing code\n\nThe code for printing a raw path is only used in utils.rs, which only prints the alternative (non-HTML) format. Path has\na function that does the same thing without HTML support, so use that instead.", "tree": {"sha": "73ff722e0aa5544e2f84060cb806a448b4bd87f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73ff722e0aa5544e2f84060cb806a448b4bd87f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03301ef1d8028dff1b07766dff14bfcafb309a85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03301ef1d8028dff1b07766dff14bfcafb309a85", "html_url": "https://github.com/rust-lang/rust/commit/03301ef1d8028dff1b07766dff14bfcafb309a85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03301ef1d8028dff1b07766dff14bfcafb309a85/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "080d30235fff4373fc5ce9f84875e3be91d1a09e", "url": "https://api.github.com/repos/rust-lang/rust/commits/080d30235fff4373fc5ce9f84875e3be91d1a09e", "html_url": "https://github.com/rust-lang/rust/commit/080d30235fff4373fc5ce9f84875e3be91d1a09e"}, {"sha": "6109cee35cd2a496fb91c47688470cbed8979e99", "url": "https://api.github.com/repos/rust-lang/rust/commits/6109cee35cd2a496fb91c47688470cbed8979e99", "html_url": "https://github.com/rust-lang/rust/commit/6109cee35cd2a496fb91c47688470cbed8979e99"}], "stats": {"total": 44, "additions": 1, "deletions": 43}, "files": [{"sha": "c2a971d6375133761279e2adbaba1f3cfab214f7", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03301ef1d8028dff1b07766dff14bfcafb309a85/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03301ef1d8028dff1b07766dff14bfcafb309a85/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=03301ef1d8028dff1b07766dff14bfcafb309a85", "patch": "@@ -401,7 +401,7 @@ crate fn resolve_type(cx: &mut DocContext<'_>, path: Path, id: hir::HirId) -> Ty\n             return Generic(kw::SelfUpper);\n         }\n         Res::Def(DefKind::TyParam, _) if path.segments.len() == 1 => {\n-            return Generic(Symbol::intern(&format!(\"{:#}\", path.print(&cx.cache, cx.tcx))));\n+            return Generic(Symbol::intern(&path.whole_name()));\n         }\n         Res::SelfTy(..) | Res::Def(DefKind::TyParam | DefKind::AssocTy, _) => true,\n         _ => false,"}, {"sha": "29d468e3d231c678aeec701d00ec822611250bbc", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/03301ef1d8028dff1b07766dff14bfcafb309a85/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03301ef1d8028dff1b07766dff14bfcafb309a85/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=03301ef1d8028dff1b07766dff14bfcafb309a85", "patch": "@@ -453,48 +453,6 @@ impl clean::GenericArgs {\n     }\n }\n \n-impl clean::PathSegment {\n-    crate fn print<'a, 'tcx: 'a>(\n-        &'a self,\n-        cache: &'a Cache,\n-        tcx: TyCtxt<'tcx>,\n-    ) -> impl fmt::Display + 'a + Captures<'tcx> {\n-        display_fn(move |f| {\n-            if f.alternate() {\n-                write!(f, \"{}{:#}\", self.name, self.args.print(cache, tcx))\n-            } else {\n-                write!(f, \"{}{}\", self.name, self.args.print(cache, tcx))\n-            }\n-        })\n-    }\n-}\n-\n-impl clean::Path {\n-    crate fn print<'a, 'tcx: 'a>(\n-        &'a self,\n-        cache: &'a Cache,\n-        tcx: TyCtxt<'tcx>,\n-    ) -> impl fmt::Display + 'a + Captures<'tcx> {\n-        display_fn(move |f| {\n-            if self.global {\n-                f.write_str(\"::\")?\n-            }\n-\n-            for (i, seg) in self.segments.iter().enumerate() {\n-                if i > 0 {\n-                    f.write_str(\"::\")?\n-                }\n-                if f.alternate() {\n-                    write!(f, \"{:#}\", seg.print(cache, tcx))?;\n-                } else {\n-                    write!(f, \"{}\", seg.print(cache, tcx))?;\n-                }\n-            }\n-            Ok(())\n-        })\n-    }\n-}\n-\n crate fn href(did: DefId, cache: &Cache) -> Option<(String, ItemType, Vec<String>)> {\n     if !did.is_local() && !cache.access_levels.is_public(did) && !cache.document_private {\n         return None;"}]}