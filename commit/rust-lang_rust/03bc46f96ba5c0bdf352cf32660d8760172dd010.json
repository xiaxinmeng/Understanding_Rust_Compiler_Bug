{"sha": "03bc46f96ba5c0bdf352cf32660d8760172dd010", "node_id": "C_kwDOAAsO6NoAKDAzYmM0NmY5NmJhNWMwYmRmMzUyY2YzMjY2MGQ4NzYwMTcyZGQwMTA", "commit": {"author": {"name": "Roland Fredenhagen", "email": "dev@modprog.de", "date": "2023-01-12T08:54:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-12T08:54:48Z"}, "message": "Convert pub to pub(crate)", "tree": {"sha": "4dbd641d491a1ad20d8baaf309a9ee98a50a6068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dbd641d491a1ad20d8baaf309a9ee98a50a6068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03bc46f96ba5c0bdf352cf32660d8760172dd010", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjv8rYCRBK7hj4Ov3rIwAAvTkIAIicoADyIGo3wjL7wlLPyJ0/\ngMl1brt36UuwDuRAv6sKjx2MMyAiMPiqMQ8DkQnt9GXwjxLOlzkgE8cYIBMYwny/\ndlCmJj8Pm5IGAPIlMPJyTcn5+QVBR1SjHFYI8UJYXGRU7nwKlNfjwr0+LwxvTjLm\nxpqjkPEm9pWjDHeeLa8MIWZAj1JdQEoCj7Kj9GSFEA2QMQOUVBxguJMdyGPLFTOr\n9W5TUCLZkZGykpGXgT68HaZ26g5moSZL4DkEFPL/g6SOTXvJeOSITv57Y2KlK9qx\nf5t/X1cDkkXCyRACsPl5gX4wAw9VAiEUELZ1i646blg47n/Jw5Wu8npk7lYutjY=\n=azT+\n-----END PGP SIGNATURE-----\n", "payload": "tree 4dbd641d491a1ad20d8baaf309a9ee98a50a6068\nparent 6f201cfc56783beacb98c9e9033ddd58567c4517\nauthor Roland Fredenhagen <dev@modprog.de> 1673513688 +0100\ncommitter GitHub <noreply@github.com> 1673513688 +0100\n\nConvert pub to pub(crate)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03bc46f96ba5c0bdf352cf32660d8760172dd010", "html_url": "https://github.com/rust-lang/rust/commit/03bc46f96ba5c0bdf352cf32660d8760172dd010", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03bc46f96ba5c0bdf352cf32660d8760172dd010/comments", "author": {"login": "ModProg", "id": 11978847, "node_id": "MDQ6VXNlcjExOTc4ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/11978847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ModProg", "html_url": "https://github.com/ModProg", "followers_url": "https://api.github.com/users/ModProg/followers", "following_url": "https://api.github.com/users/ModProg/following{/other_user}", "gists_url": "https://api.github.com/users/ModProg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ModProg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ModProg/subscriptions", "organizations_url": "https://api.github.com/users/ModProg/orgs", "repos_url": "https://api.github.com/users/ModProg/repos", "events_url": "https://api.github.com/users/ModProg/events{/privacy}", "received_events_url": "https://api.github.com/users/ModProg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f201cfc56783beacb98c9e9033ddd58567c4517", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f201cfc56783beacb98c9e9033ddd58567c4517", "html_url": "https://github.com/rust-lang/rust/commit/6f201cfc56783beacb98c9e9033ddd58567c4517"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1acd5ee97283fcefa57524e347ef62b3ae7d5053", "filename": "crates/ide-assists/src/handlers/convert_comment_block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03bc46f96ba5c0bdf352cf32660d8760172dd010/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_comment_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03bc46f96ba5c0bdf352cf32660d8760172dd010/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_comment_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_comment_block.rs?ref=03bc46f96ba5c0bdf352cf32660d8760172dd010", "patch": "@@ -107,7 +107,7 @@ fn line_to_block(acc: &mut Assists, comment: ast::Comment) -> Option<()> {\n /// The line -> block assist can  be invoked from anywhere within a sequence of line comments.\n /// relevant_line_comments crawls backwards and forwards finding the complete sequence of comments that will\n /// be joined.\n-pub fn relevant_line_comments(comment: &ast::Comment) -> Vec<Comment> {\n+pub(crate) fn relevant_line_comments(comment: &ast::Comment) -> Vec<Comment> {\n     // The prefix identifies the kind of comment we're dealing with\n     let prefix = comment.prefix();\n     let same_prefix = |c: &ast::Comment| c.prefix() == prefix;\n@@ -159,7 +159,7 @@ pub fn relevant_line_comments(comment: &ast::Comment) -> Vec<Comment> {\n //              */\n //\n // But since such comments aren't idiomatic we're okay with this.\n-pub fn line_comment_text(indentation: IndentLevel, comm: ast::Comment) -> String {\n+pub(crate) fn line_comment_text(indentation: IndentLevel, comm: ast::Comment) -> String {\n     let contents_without_prefix = comm.text().strip_prefix(comm.prefix()).unwrap();\n     let contents = contents_without_prefix.strip_prefix(' ').unwrap_or(contents_without_prefix);\n "}, {"sha": "b1b3bab7e51421785e095eb6c2746f9c5a212097", "filename": "crates/ide-assists/src/handlers/raw_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03bc46f96ba5c0bdf352cf32660d8760172dd010/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03bc46f96ba5c0bdf352cf32660d8760172dd010/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fraw_string.rs?ref=03bc46f96ba5c0bdf352cf32660d8760172dd010", "patch": "@@ -155,7 +155,7 @@ pub(crate) fn remove_hash(acc: &mut Assists, ctx: &AssistContext<'_>) -> Option<\n     })\n }\n \n-pub fn required_hashes(s: &str) -> usize {\n+pub(crate) fn required_hashes(s: &str) -> usize {\n     let mut res = 0usize;\n     for idx in s.match_indices('\"').map(|(i, _)| i) {\n         let (_, sub) = s.split_at(idx + 1);"}]}