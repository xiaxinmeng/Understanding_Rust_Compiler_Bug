{"sha": "904a74e99cd18d4e02501a675e6d7071bc7c7783", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNGE3NGU5OWNkMThkNGUwMjUwMWE2NzVlNmQ3MDcxYmM3Yzc3ODM=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-08T23:49:30Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-08T23:59:38Z"}, "message": "add compile-fail test sync-cond-shouldnt-escape.rs", "tree": {"sha": "0363ddc58bc6a62c7fb302f579c83c48301fea54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0363ddc58bc6a62c7fb302f579c83c48301fea54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/904a74e99cd18d4e02501a675e6d7071bc7c7783", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/904a74e99cd18d4e02501a675e6d7071bc7c7783", "html_url": "https://github.com/rust-lang/rust/commit/904a74e99cd18d4e02501a675e6d7071bc7c7783", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/904a74e99cd18d4e02501a675e6d7071bc7c7783/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "604e4add4a59ad05595ab825a17e05174b3940da", "url": "https://api.github.com/repos/rust-lang/rust/commits/604e4add4a59ad05595ab825a17e05174b3940da", "html_url": "https://github.com/rust-lang/rust/commit/604e4add4a59ad05595ab825a17e05174b3940da"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8dec2110140904774d89fe0419386d1bdd923e2c", "filename": "src/test/compile-fail/sync-cond-shouldnt-escape.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/904a74e99cd18d4e02501a675e6d7071bc7c7783/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/904a74e99cd18d4e02501a675e6d7071bc7c7783/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs?ref=904a74e99cd18d4e02501a675e6d7071bc7c7783", "patch": "@@ -0,0 +1,9 @@\n+// error-pattern: reference is not valid outside of its lifetime\n+fn main() {\n+    let m = ~sync::new_mutex();\n+    let mut cond = none;\n+    do m.lock_cond |c| {\n+        cond = some(c);\n+    }   \n+    option::unwrap(cond).signal();\n+}"}]}