{"sha": "290475e837d7c485c524d059cda90e63435e63c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MDQ3NWU4MzdkN2M0ODVjNTI0ZDA1OWNkYTkwZTYzNDM1ZTYzYzM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-06-20T22:55:40Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-07T10:04:07Z"}, "message": "Collect library features from non-exported macros", "tree": {"sha": "6c44d232fa0e371bd84f18c44c6618b83003ce02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c44d232fa0e371bd84f18c44c6618b83003ce02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/290475e837d7c485c524d059cda90e63435e63c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/290475e837d7c485c524d059cda90e63435e63c3", "html_url": "https://github.com/rust-lang/rust/commit/290475e837d7c485c524d059cda90e63435e63c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/290475e837d7c485c524d059cda90e63435e63c3/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b6370b4ab645d65e0729b3a419946a6f2f4d1cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b6370b4ab645d65e0729b3a419946a6f2f4d1cd", "html_url": "https://github.com/rust-lang/rust/commit/3b6370b4ab645d65e0729b3a419946a6f2f4d1cd"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "2a9fd58f84b3bd93ad303d3bd80c8c7eb78b7de9", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=290475e837d7c485c524d059cda90e63435e63c3", "patch": "@@ -90,6 +90,7 @@ pub struct LoweringContext<'a> {\n     impl_items: BTreeMap<hir::ImplItemId, hir::ImplItem>,\n     bodies: BTreeMap<hir::BodyId, hir::Body>,\n     exported_macros: Vec<hir::MacroDef>,\n+    non_exported_macro_attrs: Vec<ast::Attribute>,\n \n     trait_impls: BTreeMap<DefId, Vec<hir::HirId>>,\n \n@@ -252,6 +253,7 @@ pub fn lower_crate(\n         trait_impls: BTreeMap::new(),\n         modules: BTreeMap::new(),\n         exported_macros: Vec::new(),\n+        non_exported_macro_attrs: Vec::new(),\n         catch_scopes: Vec::new(),\n         loop_scopes: Vec::new(),\n         is_in_loop_condition: false,\n@@ -662,6 +664,7 @@ impl<'a> LoweringContext<'a> {\n             attrs,\n             span: c.span,\n             exported_macros: hir::HirVec::from(self.exported_macros),\n+            non_exported_macro_attrs: hir::HirVec::from(self.non_exported_macro_attrs),\n             items: self.items,\n             trait_items: self.trait_items,\n             impl_items: self.impl_items,\n@@ -4022,6 +4025,8 @@ impl<'a> LoweringContext<'a> {\n                     body,\n                     legacy: def.legacy,\n                 });\n+            } else {\n+                self.non_exported_macro_attrs.extend(attrs.into_iter());\n             }\n             return None;\n         }"}, {"sha": "12ea772c1fb3160c2e59424fbdd026ce15bc3540", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=290475e837d7c485c524d059cda90e63435e63c3", "patch": "@@ -119,6 +119,7 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n                 span,\n                 // These fields are handled separately:\n                 exported_macros: _,\n+                non_exported_macro_attrs: _,\n                 items: _,\n                 trait_items: _,\n                 impl_items: _,"}, {"sha": "e7b37d40b4b2f2b3d5104cc02cc44e887225b905", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=290475e837d7c485c524d059cda90e63435e63c3", "patch": "@@ -727,6 +727,8 @@ pub struct Crate {\n     pub attrs: HirVec<Attribute>,\n     pub span: Span,\n     pub exported_macros: HirVec<MacroDef>,\n+    // Attributes from non-exported macros, kept only for collecting the library feature list.\n+    pub non_exported_macro_attrs: HirVec<Attribute>,\n \n     // N.B., we use a BTreeMap here so that `visit_all_items` iterates\n     // over the ids in increasing order. In principle it should not"}, {"sha": "0d6d016e5070143a94fa6fceb9e3f792cc1e7d01", "filename": "src/librustc/middle/lib_features.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/290475e837d7c485c524d059cda90e63435e63c3/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flib_features.rs?ref=290475e837d7c485c524d059cda90e63435e63c3", "patch": "@@ -144,6 +144,10 @@ impl Visitor<'tcx> for LibFeatureCollector<'tcx> {\n \n pub fn collect(tcx: TyCtxt<'_>) -> LibFeatures {\n     let mut collector = LibFeatureCollector::new(tcx);\n-    intravisit::walk_crate(&mut collector, tcx.hir().krate());\n+    let krate = tcx.hir().krate();\n+    for attr in &krate.non_exported_macro_attrs {\n+        collector.visit_attribute(attr);\n+    }\n+    intravisit::walk_crate(&mut collector, krate);\n     collector.lib_features\n }"}, {"sha": "817bddf69562b9847685bf4184bd58ef52d5a0e2", "filename": "src/test/run-pass/macros/macro-stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/290475e837d7c485c524d059cda90e63435e63c3/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/290475e837d7c485c524d059cda90e63435e63c3/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-stability.rs?ref=290475e837d7c485c524d059cda90e63435e63c3", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n // aux-build:unstable-macros.rs\n \n-#![feature(unstable_macros)]\n+#![feature(unstable_macros, local_unstable)]\n \n #[macro_use] extern crate unstable_macros;\n "}]}