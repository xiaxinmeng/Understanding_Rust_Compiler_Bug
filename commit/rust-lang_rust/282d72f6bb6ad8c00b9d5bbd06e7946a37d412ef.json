{"sha": "282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MmQ3MmY2YmI2YWQ4YzAwYjlkNWJiZDA2ZTc5NDZhMzdkNDEyZWY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-29T09:44:40Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-05-01T13:10:12Z"}, "message": "Inline a few things.", "tree": {"sha": "a3369f1f6a8d2fb181e8729327ee337c2963b848", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3369f1f6a8d2fb181e8729327ee337c2963b848"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef", "html_url": "https://github.com/rust-lang/rust/commit/282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49e024ee7c404fb767d8560b1cf248929f8d7574", "url": "https://api.github.com/repos/rust-lang/rust/commits/49e024ee7c404fb767d8560b1cf248929f8d7574", "html_url": "https://github.com/rust-lang/rust/commit/49e024ee7c404fb767d8560b1cf248929f8d7574"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "bea064ab94c793bf648f149cfc8066b2b4746296", "filename": "src/librustc_query_system/query/plumbing.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs?ref=282d72f6bb6ad8c00b9d5bbd06e7946a37d412ef", "patch": "@@ -80,6 +80,7 @@ enum QueryResult<CTX: QueryContext> {\n }\n \n impl<CTX: QueryContext, C: QueryCache> QueryState<CTX, C> {\n+    #[inline(always)]\n     pub fn iter_results<R>(\n         &self,\n         f: impl for<'a> FnOnce(\n@@ -89,6 +90,7 @@ impl<CTX: QueryContext, C: QueryCache> QueryState<CTX, C> {\n         self.cache.iter(&self.shards, |shard| &mut shard.cache, f)\n     }\n \n+    #[inline(always)]\n     pub fn all_inactive(&self) -> bool {\n         let shards = self.shards.lock_shards();\n         shards.iter().all(|shard| shard.active.is_empty())\n@@ -645,6 +647,7 @@ where\n /// side-effects -- e.g., in order to report errors for erroneous programs.\n ///\n /// Note: The optimization is only available during incr. comp.\n+#[inline(never)]\n fn ensure_query_impl<CTX, C>(\n     tcx: CTX,\n     state: &QueryState<CTX, C>,\n@@ -681,7 +684,8 @@ fn ensure_query_impl<CTX, C>(\n     }\n }\n \n-fn force_query_impl<C, CTX>(\n+#[inline(never)]\n+fn force_query_impl<CTX, C>(\n     tcx: CTX,\n     state: &QueryState<CTX, C>,\n     key: C::Key,\n@@ -715,6 +719,7 @@ fn force_query_impl<C, CTX>(\n     );\n }\n \n+#[inline(always)]\n pub fn get_query<Q, CTX>(tcx: CTX, span: Span, key: Q::Key) -> Q::Stored\n where\n     Q: QueryDescription<CTX>,\n@@ -726,6 +731,7 @@ where\n     get_query_impl(tcx, Q::query_state(tcx), span, key, &Q::VTABLE)\n }\n \n+#[inline(always)]\n pub fn ensure_query<Q, CTX>(tcx: CTX, key: Q::Key)\n where\n     Q: QueryDescription<CTX>,\n@@ -735,6 +741,7 @@ where\n     ensure_query_impl(tcx, Q::query_state(tcx), key, &Q::VTABLE)\n }\n \n+#[inline(always)]\n pub fn force_query<Q, CTX>(tcx: CTX, key: Q::Key, span: Span, dep_node: DepNode<CTX::DepKind>)\n where\n     Q: QueryDescription<CTX>,"}]}