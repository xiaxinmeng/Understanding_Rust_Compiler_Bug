{"sha": "0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYjFlMjU1ZWU1YzcwYWVkZDRkMjQzZTBlMTExMDlmYzRiYmNlZjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T13:11:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T13:11:40Z"}, "message": "Generalize blocklike", "tree": {"sha": "52c30676af9f4b20bd8daff37be7c3225b3c3672", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52c30676af9f4b20bd8daff37be7c3225b3c3672"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2", "html_url": "https://github.com/rust-lang/rust/commit/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42e3a8ef77d75cdd0abf4f0729082a112beefb67", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e3a8ef77d75cdd0abf4f0729082a112beefb67", "html_url": "https://github.com/rust-lang/rust/commit/42e3a8ef77d75cdd0abf4f0729082a112beefb67"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "83f1833b5ba59b2bc161d779ac74ae9e76825dc8", "filename": "src/grammar/items/mod.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2/src%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2/src%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fmod.rs?ref=0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2", "patch": "@@ -27,8 +27,8 @@ pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool) {\n         MaybeItem::None => {\n             if paths::is_path_start(p) {\n                 match macro_call(p) {\n-                    MacroFlavor::Curly => (),\n-                    MacroFlavor::NonCurly => {\n+                    BlockLike::Block => (),\n+                    BlockLike::NotBlock => {\n                         p.expect(SEMI);\n                     }\n                 }\n@@ -277,32 +277,27 @@ fn mod_item(p: &mut Parser) {\n     }\n }\n \n-pub(super) enum MacroFlavor {\n-    Curly,\n-    NonCurly,\n-}\n-\n-fn macro_call(p: &mut Parser) -> MacroFlavor {\n+fn macro_call(p: &mut Parser) -> BlockLike {\n     assert!(paths::is_path_start(p));\n     paths::use_path(p);\n     macro_call_after_excl(p)\n }\n \n-pub(super) fn macro_call_after_excl(p: &mut Parser) -> MacroFlavor {\n+pub(super) fn macro_call_after_excl(p: &mut Parser) -> BlockLike {\n     p.expect(EXCL);\n     p.eat(IDENT);\n     let flavor = match p.current() {\n         L_CURLY => {\n             token_tree(p);\n-            MacroFlavor::Curly\n+            BlockLike::Block\n         }\n         L_PAREN | L_BRACK => {\n             token_tree(p);\n-            MacroFlavor::NonCurly\n+            BlockLike::NotBlock\n         }\n         _ => {\n             p.error(\"expected `{`, `[`, `(`\");\n-            MacroFlavor::NonCurly\n+            BlockLike::NotBlock\n         },\n     };\n "}, {"sha": "1b997d861922b4a7cf63f64fa8df8584920850ae", "filename": "src/grammar/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2/src%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2/src%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fmod.rs?ref=0ab1e255ee5c70aedd4d243e0e11109fc4bbcef2", "patch": "@@ -43,6 +43,12 @@ pub(crate) fn file(p: &mut Parser) {\n     file.complete(p, FILE);\n }\n \n+\n+enum BlockLike {\n+    Block,\n+    NotBlock,\n+}\n+\n fn visibility(p: &mut Parser) {\n     if p.at(PUB_KW) {\n         let vis = p.start();"}]}