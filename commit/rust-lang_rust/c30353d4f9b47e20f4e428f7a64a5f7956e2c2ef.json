{"sha": "c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMDM1M2Q0ZjliNDdlMjBmNGU0MjhmN2E2NGE1Zjc5NTZlMmMyZWY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T00:56:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T00:56:20Z"}, "message": "Remove TYSPEC_loggable. Everything's loggable (or will be, eventually; the backend can catch unimplemented cases until then).", "tree": {"sha": "59676109e1348f49b01bb83f744e7cb4c3677c24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59676109e1348f49b01bb83f744e7cb4c3677c24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef", "html_url": "https://github.com/rust-lang/rust/commit/c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bec9538cc5d0570f33216d83d563970cece8b2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bec9538cc5d0570f33216d83d563970cece8b2c", "html_url": "https://github.com/rust-lang/rust/commit/4bec9538cc5d0570f33216d83d563970cece8b2c"}], "stats": {"total": 58, "additions": 5, "deletions": 53}, "files": [{"sha": "371572facf2087848416fbff49dccb500fd6f5c5", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 5, "deletions": 53, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=c30353d4f9b47e20f4e428f7a64a5f7956e2c2ef", "patch": "@@ -13,7 +13,6 @@ type tyspec =\n   | TYSPEC_plusable                           (* nums, vecs, and strings *)\n   | TYSPEC_dictionary of dict\n   | TYSPEC_integral                           (* int-like *)\n-  | TYSPEC_loggable\n   | TYSPEC_numeric                            (* int-like or float-like *)\n   | TYSPEC_ordered                            (* comparable with < etc. *)\n   | TYSPEC_record of dict\n@@ -88,7 +87,6 @@ let rec tyspec_to_str (ts:tyspec) : string =\n       | TYSPEC_comparable -> fmt ff \"<comparable>\"\n       | TYSPEC_plusable -> fmt ff \"<plusable>\"\n       | TYSPEC_integral -> fmt ff \"<integral>\"\n-      | TYSPEC_loggable -> fmt ff \"<loggable>\"\n       | TYSPEC_numeric -> fmt ff \"<numeric>\"\n       | TYSPEC_ordered -> fmt ff \"<ordered>\"\n       | TYSPEC_resolved (params, ty) ->\n@@ -401,17 +399,6 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           | _ -> numeric ty\n       in\n \n-      let rec loggable (ty:Ast.ty) : bool =\n-        match ty with\n-            Ast.TY_str | Ast.TY_bool | Ast.TY_int | Ast.TY_uint | Ast.TY_char\n-          | Ast.TY_mach TY_u8 | Ast.TY_mach TY_u16 | Ast.TY_mach TY_u32\n-          | Ast.TY_mach TY_i8 | Ast.TY_mach TY_i16 | Ast.TY_mach TY_i32\n-              -> true\n-          | Ast.TY_mutable ty when ucx.mut_ok -> loggable ty\n-          | Ast.TY_box ty when ucx.box_ok -> loggable ty\n-          | _ -> false\n-      in\n-\n       let result =\n         match (!a, !b) with\n             (TYSPEC_equiv _, _) | (_, TYSPEC_equiv _) ->\n@@ -562,12 +549,6 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n               then fail ()\n               else TYSPEC_resolved (params, ty)\n \n-          | (TYSPEC_resolved (params, ty), TYSPEC_loggable)\n-          | (TYSPEC_loggable, TYSPEC_resolved (params, ty)) ->\n-              if not (loggable ty)\n-              then fail ()\n-              else TYSPEC_resolved (params, ty)\n-\n           | (TYSPEC_resolved (params, ty), TYSPEC_numeric)\n           | (TYSPEC_numeric, TYSPEC_resolved (params, ty)) ->\n               if not (numeric ty) then fail ()\n@@ -650,7 +631,6 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           | (TYSPEC_callable _, TYSPEC_plusable)\n           | (TYSPEC_callable _, TYSPEC_dictionary _)\n           | (TYSPEC_callable _, TYSPEC_integral)\n-          | (TYSPEC_callable _, TYSPEC_loggable)\n           | (TYSPEC_callable _, TYSPEC_numeric)\n           | (TYSPEC_callable _, TYSPEC_ordered)\n           | (TYSPEC_callable _, TYSPEC_app _)\n@@ -662,7 +642,6 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           | (TYSPEC_plusable, TYSPEC_callable _)\n           | (TYSPEC_dictionary _, TYSPEC_callable _)\n           | (TYSPEC_integral, TYSPEC_callable _)\n-          | (TYSPEC_loggable, TYSPEC_callable _)\n           | (TYSPEC_numeric, TYSPEC_callable _)\n           | (TYSPEC_ordered, TYSPEC_callable _)\n           | (TYSPEC_app _, TYSPEC_callable _)\n@@ -685,15 +664,13 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n \n           | (TYSPEC_collection _, TYSPEC_dictionary _)\n           | (TYSPEC_collection _, TYSPEC_integral)\n-          | (TYSPEC_collection _, TYSPEC_loggable)\n           | (TYSPEC_collection _, TYSPEC_numeric)\n           | (TYSPEC_collection _, TYSPEC_ordered)\n           | (TYSPEC_collection _, TYSPEC_app _)\n           | (TYSPEC_collection _, TYSPEC_record _)\n           | (TYSPEC_collection _, TYSPEC_tuple _)\n           | (TYSPEC_dictionary _, TYSPEC_collection _)\n           | (TYSPEC_integral, TYSPEC_collection _)\n-          | (TYSPEC_loggable, TYSPEC_collection _)\n           | (TYSPEC_numeric, TYSPEC_collection _)\n           | (TYSPEC_ordered, TYSPEC_collection _)\n           | (TYSPEC_app _, TYSPEC_collection _)\n@@ -719,9 +696,6 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           | (TYSPEC_comparable, TYSPEC_integral)\n           | (TYSPEC_integral, TYSPEC_comparable) -> TYSPEC_integral\n \n-          | (TYSPEC_comparable, TYSPEC_loggable)\n-          | (TYSPEC_loggable, TYSPEC_comparable) -> TYSPEC_loggable\n-\n           | (TYSPEC_comparable, TYSPEC_numeric)\n           | (TYSPEC_numeric, TYSPEC_comparable) -> TYSPEC_numeric\n \n@@ -750,9 +724,6 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           | (TYSPEC_plusable, TYSPEC_integral)\n           | (TYSPEC_integral, TYSPEC_plusable) -> TYSPEC_integral\n \n-          | (TYSPEC_plusable, TYSPEC_loggable)\n-          | (TYSPEC_loggable, TYSPEC_plusable) -> TYSPEC_plusable\n-\n           | (TYSPEC_plusable, TYSPEC_numeric)\n           | (TYSPEC_numeric, TYSPEC_plusable) -> TYSPEC_numeric\n \n@@ -777,12 +748,10 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n               TYSPEC_dictionary (merge_dicts da db)\n \n           | (TYSPEC_dictionary _, TYSPEC_integral)\n-          | (TYSPEC_dictionary _, TYSPEC_loggable)\n           | (TYSPEC_dictionary _, TYSPEC_numeric)\n           | (TYSPEC_dictionary _, TYSPEC_ordered)\n           | (TYSPEC_dictionary _, TYSPEC_app _)\n           | (TYSPEC_integral, TYSPEC_dictionary _)\n-          | (TYSPEC_loggable, TYSPEC_dictionary _)\n           | (TYSPEC_numeric, TYSPEC_dictionary _)\n           | (TYSPEC_ordered, TYSPEC_dictionary _)\n           | (TYSPEC_app _, TYSPEC_dictionary _) -> fail ()\n@@ -799,10 +768,8 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           (* integral *)\n \n           | (TYSPEC_integral, TYSPEC_integral)\n-          | (TYSPEC_integral, TYSPEC_loggable)\n           | (TYSPEC_integral, TYSPEC_numeric)\n           | (TYSPEC_integral, TYSPEC_ordered)\n-          | (TYSPEC_loggable, TYSPEC_integral)\n           | (TYSPEC_numeric, TYSPEC_integral)\n           | (TYSPEC_ordered, TYSPEC_integral) -> TYSPEC_integral\n \n@@ -815,25 +782,6 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           | (TYSPEC_tuple _, TYSPEC_integral)\n           | (TYSPEC_vector _, TYSPEC_integral) -> fail ()\n \n-          (* loggable *)\n-\n-          | (TYSPEC_loggable, TYSPEC_loggable) -> TYSPEC_loggable\n-\n-          | (TYSPEC_loggable, TYSPEC_numeric)\n-          | (TYSPEC_numeric, TYSPEC_loggable) -> TYSPEC_numeric\n-\n-          | (TYSPEC_loggable, TYSPEC_ordered)\n-          | (TYSPEC_ordered, TYSPEC_loggable) -> TYSPEC_ordered\n-\n-          | (TYSPEC_loggable, TYSPEC_app _)\n-          | (TYSPEC_loggable, TYSPEC_record _)\n-          | (TYSPEC_loggable, TYSPEC_tuple _)\n-          | (TYSPEC_loggable, TYSPEC_vector _)\n-          | (TYSPEC_app _, TYSPEC_loggable)\n-          | (TYSPEC_record _, TYSPEC_loggable)\n-          | (TYSPEC_tuple _, TYSPEC_loggable)\n-          | (TYSPEC_vector _, TYSPEC_loggable) -> fail ()\n-\n           (* numeric *)\n \n           | (TYSPEC_numeric, TYSPEC_numeric) -> TYSPEC_numeric\n@@ -1240,7 +1188,11 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n               check_callable out_tv callee args\n \n         | Ast.STMT_log atom ->\n-            unify_atom rval_ctx atom (ref TYSPEC_loggable)\n+            begin\n+              match atom with\n+                  Ast.ATOM_lval lv -> set_auto_deref lv true\n+                | _ -> ()\n+            end\n \n         | Ast.STMT_check_expr expr ->\n             unify_expr rval_ctx expr (ty Ast.TY_bool)"}]}