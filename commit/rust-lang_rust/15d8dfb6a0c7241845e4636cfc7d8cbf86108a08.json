{"sha": "15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZDhkZmI2YTBjNzI0MTg0NWU0NjM2Y2ZjN2Q4Y2JmODYxMDhhMDg=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-08-28T18:18:28Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-08-28T18:18:28Z"}, "message": "build llvm with systemz backend enabled, and link to related libraries\n\nwhen building rust against system llvm\n\ncloses #36077", "tree": {"sha": "04371f7db488300142a908d198015c6671bb3170", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04371f7db488300142a908d198015c6671bb3170"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "html_url": "https://github.com/rust-lang/rust/commit/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08/comments", "author": null, "committer": null, "parents": [{"sha": "b17fa8bf012628b00ec156caefbad34b54a87182", "url": "https://api.github.com/repos/rust-lang/rust/commits/b17fa8bf012628b00ec156caefbad34b54a87182", "html_url": "https://github.com/rust-lang/rust/commit/b17fa8bf012628b00ec156caefbad34b54a87182"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "44fb3d368d2c77b3e70be7bacd417a850556c58d", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08/configure", "raw_url": "https://github.com/rust-lang/rust/raw/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "patch": "@@ -1747,7 +1747,7 @@ do\n         CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_ENABLE_ASSERTIONS=ON\"\n     fi\n \n-    CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_TARGETS_TO_BUILD='X86;ARM;AArch64;Mips;PowerPC'\"\n+    CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_TARGETS_TO_BUILD='X86;ARM;AArch64;Mips;PowerPC;SystemZ'\"\n     CMAKE_ARGS=\"$CMAKE_ARGS -G '$CFG_CMAKE_GENERATOR'\"\n     CMAKE_ARGS=\"$CMAKE_ARGS $CFG_LLVM_SRC_DIR\"\n "}, {"sha": "5a849af9856f1dd348259cfb0338532133ce31f9", "filename": "mk/main.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "patch": "@@ -300,7 +300,7 @@ endif\n # LLVM macros\n ######################################################################\n \n-LLVM_OPTIONAL_COMPONENTS=x86 arm aarch64 mips powerpc pnacl\n+LLVM_OPTIONAL_COMPONENTS=x86 arm aarch64 mips powerpc pnacl systemz\n LLVM_REQUIRED_COMPONENTS=ipo bitreader bitwriter linker asmparser mcjit \\\n                 interpreter instrumentation\n "}, {"sha": "a271987210b673411e77c959379f55d6b49b40a3", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "patch": "@@ -131,12 +131,19 @@ LLVMRustAddPass(LLVMPassManagerRef PM, LLVMPassRef rust_pass) {\n #define SUBTARGET_PPC\n #endif\n \n+#ifdef LLVM_COMPONENT_SYSTEMZ\n+#define SUBTARGET_SYSTEMZ SUBTARGET(SystemZ)\n+#else\n+#define SUBTARGET_SYSTEMZ\n+#endif\n+\n #define GEN_SUBTARGETS    \\\n         SUBTARGET_X86     \\\n         SUBTARGET_ARM     \\\n         SUBTARGET_AARCH64 \\\n         SUBTARGET_MIPS    \\\n-        SUBTARGET_PPC\n+        SUBTARGET_PPC     \\\n+        SUBTARGET_SYSTEMZ\n \n #define SUBTARGET(x) namespace llvm {                \\\n     extern const SubtargetFeatureKV x##FeatureKV[];  \\"}]}