{"sha": "ae9201431922fc7a705437df6d11153dd265f7eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOTIwMTQzMTkyMmZjN2E3MDU0MzdkZjZkMTExNTNkZDI2NWY3ZWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-27T10:00:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-27T10:00:37Z"}, "message": "Merge #8213\n\n8213: Added support for const generics in impl generation r=Veykril a=ivan770\n\nCloses #8211\n\nCo-authored-by: ivan770 <leshenko.ivan770@gmail.com>", "tree": {"sha": "76750ded51991811d74f9ee7ef3e37d77c3d8b42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76750ded51991811d74f9ee7ef3e37d77c3d8b42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae9201431922fc7a705437df6d11153dd265f7eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgXwJFCRBK7hj4Ov3rIwAAdHIIAA9wHiWrXNo0qdLPbMMn+6KZ\np0S1FSyXLiKW5fcvGAhv6VQ3VwdUvU6xLp+64ZDnUdNDrShJRTm6OM+1mwp0nXiD\n3vk9u/0g8Q/tmxOgQJGWUMPrB4G1pP9D3IpTfQuIbposDwDSPESy2FAH3ZSjWB5z\nxCGBIqNC9y0+gWReT7Bia1N0BppPIcoz8BP1uMOUJZPdOS4ySSu/F1O587uR4sCs\nsc+KkfwvTa35s/DxNO9GFhu+J56WsZ/guERDai5utBfYTDGIggSh6aOqYDDyyl0q\nnu7JyrLBP77fgT0kTMQYRfZfcWph1YovmGdrF/IcvTMEmWzxZS3/F5JAR9MQ9rg=\n=QNy7\n-----END PGP SIGNATURE-----\n", "payload": "tree 76750ded51991811d74f9ee7ef3e37d77c3d8b42\nparent c8066ebd1781a6f6f536abe3494477bd69df795a\nparent 5a2ef8d0cad71cf51da548b80bcfb4ba615061d1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1616839237 +0000\ncommitter GitHub <noreply@github.com> 1616839237 +0000\n\nMerge #8213\n\n8213: Added support for const generics in impl generation r=Veykril a=ivan770\n\nCloses #8211\n\nCo-authored-by: ivan770 <leshenko.ivan770@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae9201431922fc7a705437df6d11153dd265f7eb", "html_url": "https://github.com/rust-lang/rust/commit/ae9201431922fc7a705437df6d11153dd265f7eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae9201431922fc7a705437df6d11153dd265f7eb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8066ebd1781a6f6f536abe3494477bd69df795a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8066ebd1781a6f6f536abe3494477bd69df795a", "html_url": "https://github.com/rust-lang/rust/commit/c8066ebd1781a6f6f536abe3494477bd69df795a"}, {"sha": "5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "html_url": "https://github.com/rust-lang/rust/commit/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "fd2e250bc390f3e3d44191b24f9b0e895229132f", "filename": "crates/ide_assists/src/handlers/generate_impl.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ae9201431922fc7a705437df6d11153dd265f7eb/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae9201431922fc7a705437df6d11153dd265f7eb/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs?ref=ae9201431922fc7a705437df6d11153dd265f7eb", "patch": "@@ -69,6 +69,17 @@ mod tests {\n             \"struct Foo<'a, T: Foo<'a>> {$0}\",\n             \"struct Foo<'a, T: Foo<'a>> {}\\n\\nimpl<'a, T: Foo<'a>> Foo<'a, T> {\\n    $0\\n}\",\n         );\n+        check_assist(\n+            generate_impl,\n+            r#\"\n+            struct MyOwnArray<T, const S: usize> {}$0\"#,\n+            r#\"\n+            struct MyOwnArray<T, const S: usize> {}\n+\n+            impl<T, const S: usize> MyOwnArray<T, S> {\n+                $0\n+            }\"#,\n+        );\n         check_assist(\n             generate_impl,\n             r#\"\n@@ -114,11 +125,11 @@ mod tests {\n         check_assist(\n             generate_impl,\n             r#\"\n-            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String> {}$0\"#,\n+            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String, const S: usize> {}$0\"#,\n             r#\"\n-            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String> {}\n+            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String, const S: usize> {}\n \n-            impl<'a, 'b: 'a, T: Debug + Clone + 'a + 'b> Defaulted<'a, 'b, T> {\n+            impl<'a, 'b: 'a, T: Debug + Clone + 'a + 'b, const S: usize> Defaulted<'a, 'b, T, S> {\n                 $0\n             }\"#,\n         );"}, {"sha": "5f630ec75a1bcfcaef6a3b9c4bf40e032a8d2279", "filename": "crates/ide_assists/src/utils.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae9201431922fc7a705437df6d11153dd265f7eb/crates%2Fide_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae9201431922fc7a705437df6d11153dd265f7eb/crates%2Fide_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils.rs?ref=ae9201431922fc7a705437df6d11153dd265f7eb", "patch": "@@ -434,7 +434,8 @@ fn generate_impl_text_inner(adt: &ast::Adt, trait_text: Option<&str>, code: &str\n             }\n             buf\n         });\n-        let generics = lifetimes.chain(type_params).format(\", \");\n+        let const_params = generic_params.const_params().map(|t| t.syntax().to_string());\n+        let generics = lifetimes.chain(type_params).chain(const_params).format(\", \");\n         format_to!(buf, \"<{}>\", generics);\n     }\n     buf.push(' ');\n@@ -452,7 +453,11 @@ fn generate_impl_text_inner(adt: &ast::Adt, trait_text: Option<&str>, code: &str\n             .type_params()\n             .filter_map(|it| it.name())\n             .map(|it| SmolStr::from(it.text()));\n-        format_to!(buf, \"<{}>\", lifetime_params.chain(type_params).format(\", \"))\n+        let const_params = generic_params\n+            .const_params()\n+            .filter_map(|it| it.name())\n+            .map(|it| SmolStr::from(it.text()));\n+        format_to!(buf, \"<{}>\", lifetime_params.chain(type_params).chain(const_params).format(\", \"))\n     }\n \n     match adt.where_clause() {"}]}