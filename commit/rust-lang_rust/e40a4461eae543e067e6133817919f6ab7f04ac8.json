{"sha": "e40a4461eae543e067e6133817919f6ab7f04ac8", "node_id": "C_kwDOAAsO6NoAKGU0MGE0NDYxZWFlNTQzZTA2N2U2MTMzODE3OTE5ZjZhYjdmMDRhYzg", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2023-04-17T01:27:25Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2023-04-17T01:29:49Z"}, "message": "Support loading version information from xz tarballs", "tree": {"sha": "6cdfb29732dd24519611504a0954aa64242fe892", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cdfb29732dd24519611504a0954aa64242fe892"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e40a4461eae543e067e6133817919f6ab7f04ac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e40a4461eae543e067e6133817919f6ab7f04ac8", "html_url": "https://github.com/rust-lang/rust/commit/e40a4461eae543e067e6133817919f6ab7f04ac8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e40a4461eae543e067e6133817919f6ab7f04ac8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0f204e4d750b62f9d6c2593405e828757126832", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f204e4d750b62f9d6c2593405e828757126832", "html_url": "https://github.com/rust-lang/rust/commit/d0f204e4d750b62f9d6c2593405e828757126832"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "ed245dd3e7ecede9451b56355553d8f2de02585d", "filename": "Cargo.lock", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e40a4461eae543e067e6133817919f6ab7f04ac8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e40a4461eae543e067e6133817919f6ab7f04ac8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e40a4461eae543e067e6133817919f6ab7f04ac8", "patch": "@@ -288,6 +288,7 @@ dependencies = [\n  \"sha2\",\n  \"tar\",\n  \"toml\",\n+ \"xz2\",\n ]\n \n [[package]]\n@@ -1939,9 +1940,9 @@ dependencies = [\n \n [[package]]\n name = \"lzma-sys\"\n-version = \"0.1.16\"\n+version = \"0.1.20\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f24f76ec44a8ac23a31915d6e326bca17ce88da03096f1ff194925dc714dac99\"\n+checksum = \"5fda04ab3764e6cde78b9974eec4f779acaba7c4e84b36eca3cf77c581b85d27\"\n dependencies = [\n  \"cc\",\n  \"libc\",\n@@ -5386,9 +5387,9 @@ dependencies = [\n \n [[package]]\n name = \"xz2\"\n-version = \"0.1.6\"\n+version = \"0.1.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c179869f34fc7c01830d3ce7ea2086bc3a07e0d35289b667d0a8bf910258926c\"\n+checksum = \"388c44dc09d76f1536602ead6d325eb532f5c122f17782bd57fb47baeeb767e2\"\n dependencies = [\n  \"lzma-sys\",\n ]"}, {"sha": "6c3b5bb00a3475e2bec5d1b7a75beade6623c776", "filename": "src/tools/build-manifest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e40a4461eae543e067e6133817919f6ab7f04ac8/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e40a4461eae543e067e6133817919f6ab7f04ac8/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2FCargo.toml?ref=e40a4461eae543e067e6133817919f6ab7f04ac8", "patch": "@@ -9,6 +9,7 @@ serde = { version = \"1.0\", features = [\"derive\"] }\n serde_json = \"1.0\"\n anyhow = \"1.0.32\"\n flate2 = \"1.0.16\"\n+xz2 = \"0.1.7\"\n tar = \"0.4.29\"\n sha2 = \"0.10.1\"\n rayon = \"1.5.1\""}, {"sha": "7a4c15d01eadc219dfdb570c83eb8952715320a7", "filename": "src/tools/build-manifest/src/versions.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e40a4461eae543e067e6133817919f6ab7f04ac8/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e40a4461eae543e067e6133817919f6ab7f04ac8/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs?ref=e40a4461eae543e067e6133817919f6ab7f04ac8", "patch": "@@ -5,6 +5,7 @@ use std::fs::File;\n use std::io::Read;\n use std::path::{Path, PathBuf};\n use tar::Archive;\n+use xz2::read::XzDecoder;\n \n const DEFAULT_TARGET: &str = \"x86_64-unknown-linux-gnu\";\n \n@@ -175,9 +176,23 @@ impl Versions {\n     }\n \n     fn load_version_from_tarball(&mut self, package: &PkgType) -> Result<VersionInfo, Error> {\n-        let tarball_name = self.tarball_name(package, DEFAULT_TARGET)?;\n-        let tarball = self.dist_path.join(tarball_name);\n+        for ext in [\"xz\", \"gz\"] {\n+            let info =\n+                self.load_version_from_tarball_inner(&self.dist_path.join(self.archive_name(\n+                    package,\n+                    DEFAULT_TARGET,\n+                    &format!(\"tar.{}\", ext),\n+                )?))?;\n+            if info.present {\n+                return Ok(info);\n+            }\n+        }\n+\n+        // If neither tarball is present, we fallback to returning the non-present info.\n+        Ok(VersionInfo::default())\n+    }\n \n+    fn load_version_from_tarball_inner(&mut self, tarball: &Path) -> Result<VersionInfo, Error> {\n         let file = match File::open(&tarball) {\n             Ok(file) => file,\n             Err(err) if err.kind() == std::io::ErrorKind::NotFound => {\n@@ -187,7 +202,14 @@ impl Versions {\n             }\n             Err(err) => return Err(err.into()),\n         };\n-        let mut tar = Archive::new(GzDecoder::new(file));\n+        let mut tar: Archive<Box<dyn std::io::Read>> =\n+            Archive::new(if tarball.extension().map_or(false, |e| e == \"gz\") {\n+                Box::new(GzDecoder::new(file))\n+            } else if tarball.extension().map_or(false, |e| e == \"xz\") {\n+                Box::new(XzDecoder::new(file))\n+            } else {\n+                unimplemented!(\"tarball extension not recognized: {}\", tarball.display())\n+            });\n \n         let mut version = None;\n         let mut git_commit = None;"}]}