{"sha": "3e98f18280a9204f9476f3a7ffc83782ea81dfdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOThmMTgyODBhOTIwNGY5NDc2ZjNhN2ZmYzgzNzgyZWE4MWRmZGY=", "commit": {"author": {"name": "Diggory Blake", "email": "diggsey@googlemail.com", "date": "2017-12-18T23:16:00Z"}, "committer": {"name": "Diggory Blake", "email": "diggsey@googlemail.com", "date": "2017-12-19T01:35:35Z"}, "message": "Always print floats with a decimal point with the Debug formatter", "tree": {"sha": "b328946bd1d65773f9ce6e654c386c50799b5cd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b328946bd1d65773f9ce6e654c386c50799b5cd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e98f18280a9204f9476f3a7ffc83782ea81dfdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e98f18280a9204f9476f3a7ffc83782ea81dfdf", "html_url": "https://github.com/rust-lang/rust/commit/3e98f18280a9204f9476f3a7ffc83782ea81dfdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e98f18280a9204f9476f3a7ffc83782ea81dfdf/comments", "author": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b058dc0107b734b0a1a664ca0209366bb59eb3e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b058dc0107b734b0a1a664ca0209366bb59eb3e9", "html_url": "https://github.com/rust-lang/rust/commit/b058dc0107b734b0a1a664ca0209366bb59eb3e9"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "03e7a9a49d8a763da0c6772b678ab23cba06ceb6", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3e98f18280a9204f9476f3a7ffc83782ea81dfdf/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e98f18280a9204f9476f3a7ffc83782ea81dfdf/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=3e98f18280a9204f9476f3a7ffc83782ea81dfdf", "patch": "@@ -32,22 +32,23 @@ fn float_to_decimal_common_exact<T>(fmt: &mut Formatter, num: &T,\n // Don't inline this so callers that call both this and the above won't wind\n // up using the combined stack space of both functions in some cases.\n #[inline(never)]\n-fn float_to_decimal_common_shortest<T>(fmt: &mut Formatter,\n-                                       num: &T, sign: flt2dec::Sign) -> Result\n+fn float_to_decimal_common_shortest<T>(fmt: &mut Formatter, num: &T,\n+                                       sign: flt2dec::Sign, precision: usize) -> Result\n     where T: flt2dec::DecodableFloat\n {\n     unsafe {\n         // enough for f32 and f64\n         let mut buf: [u8; flt2dec::MAX_SIG_DIGITS] = mem::uninitialized();\n         let mut parts: [flt2dec::Part; 4] = mem::uninitialized();\n-        let formatted = flt2dec::to_shortest_str(flt2dec::strategy::grisu::format_shortest,\n-                                                 *num, sign, 0, false, &mut buf, &mut parts);\n+        let formatted = flt2dec::to_shortest_str(flt2dec::strategy::grisu::format_shortest, *num,\n+                                                 sign, precision, false, &mut buf, &mut parts);\n         fmt.pad_formatted_parts(&formatted)\n     }\n }\n \n // Common code of floating point Debug and Display.\n-fn float_to_decimal_common<T>(fmt: &mut Formatter, num: &T, negative_zero: bool) -> Result\n+fn float_to_decimal_common<T>(fmt: &mut Formatter, num: &T,\n+                              negative_zero: bool, min_precision: usize) -> Result\n     where T: flt2dec::DecodableFloat\n {\n     let force_sign = fmt.sign_plus();\n@@ -61,7 +62,7 @@ fn float_to_decimal_common<T>(fmt: &mut Formatter, num: &T, negative_zero: bool)\n     if let Some(precision) = fmt.precision {\n         float_to_decimal_common_exact(fmt, num, sign, precision)\n     } else {\n-        float_to_decimal_common_shortest(fmt, num, sign)\n+        float_to_decimal_common_shortest(fmt, num, sign, min_precision)\n     }\n }\n \n@@ -125,14 +126,14 @@ macro_rules! floating {\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Debug for $ty {\n             fn fmt(&self, fmt: &mut Formatter) -> Result {\n-                float_to_decimal_common(fmt, self, true)\n+                float_to_decimal_common(fmt, self, true, 1)\n             }\n         }\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Display for $ty {\n             fn fmt(&self, fmt: &mut Formatter) -> Result {\n-                float_to_decimal_common(fmt, self, false)\n+                float_to_decimal_common(fmt, self, false, 0)\n             }\n         }\n "}, {"sha": "138c3970e9087e6186f0be7c8e60ef7cd29696b6", "filename": "src/libcore/tests/fmt/float.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e98f18280a9204f9476f3a7ffc83782ea81dfdf/src%2Flibcore%2Ftests%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e98f18280a9204f9476f3a7ffc83782ea81dfdf/src%2Flibcore%2Ftests%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Ffmt%2Ffloat.rs?ref=3e98f18280a9204f9476f3a7ffc83782ea81dfdf", "patch": "@@ -20,6 +20,8 @@ fn test_format_f64() {\n     assert_eq!(\"1.23456789e3\", format!(\"{:e}\", 1234.56789f64));\n     assert_eq!(\"1.23456789E6\", format!(\"{:E}\", 1234567.89f64));\n     assert_eq!(\"1.23456789E3\", format!(\"{:E}\", 1234.56789f64));\n+    assert_eq!(\"0.0\", format!(\"{:?}\", 0.0f64));\n+    assert_eq!(\"1.01\", format!(\"{:?}\", 1.01f64));\n }\n \n #[test]\n@@ -34,4 +36,6 @@ fn test_format_f32() {\n     assert_eq!(\"1.2345679e3\", format!(\"{:e}\", 1234.56789f32));\n     assert_eq!(\"1.2345679E6\", format!(\"{:E}\", 1234567.89f32));\n     assert_eq!(\"1.2345679E3\", format!(\"{:E}\", 1234.56789f32));\n+    assert_eq!(\"0.0\", format!(\"{:?}\", 0.0f32));\n+    assert_eq!(\"1.01\", format!(\"{:?}\", 1.01f32));\n }"}, {"sha": "d09376acc84ae82c0862db78f4b1e154e5b559f9", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e98f18280a9204f9476f3a7ffc83782ea81dfdf/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e98f18280a9204f9476f3a7ffc83782ea81dfdf/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=3e98f18280a9204f9476f3a7ffc83782ea81dfdf", "patch": "@@ -158,8 +158,8 @@ pub fn main() {\n \n     // Float edge cases\n     t!(format!(\"{}\", -0.0), \"0\");\n-    t!(format!(\"{:?}\", -0.0), \"-0\");\n-    t!(format!(\"{:?}\", 0.0), \"0\");\n+    t!(format!(\"{:?}\", -0.0), \"-0.0\");\n+    t!(format!(\"{:?}\", 0.0), \"0.0\");\n \n     // sign aware zero padding\n     t!(format!(\"{:<3}\", 1), \"1  \");"}]}