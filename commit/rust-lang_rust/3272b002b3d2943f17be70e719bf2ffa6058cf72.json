{"sha": "3272b002b3d2943f17be70e719bf2ffa6058cf72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNzJiMDAyYjNkMjk0M2YxN2JlNzBlNzE5YmYyZmZhNjA1OGNmNzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-17T19:36:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-17T19:36:42Z"}, "message": "auto merge of #10979 : alexcrichton/rust/less-bc, r=cmr\n\nBy performing this logic very late in the build process, it ended up leading to\r\nbugs like those found in #10973 where certain stages of the build process\r\nexpected a particular output format which didn't end up being the case. In order\r\nto fix this, the build output generation is moved very early in the build\r\nprocess to the absolute first thing in phase 2.\r\n\r\nCloses #10973", "tree": {"sha": "e5c12422d4df107e6404d82355089ec8dd5eeb56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5c12422d4df107e6404d82355089ec8dd5eeb56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3272b002b3d2943f17be70e719bf2ffa6058cf72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3272b002b3d2943f17be70e719bf2ffa6058cf72", "html_url": "https://github.com/rust-lang/rust/commit/3272b002b3d2943f17be70e719bf2ffa6058cf72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3272b002b3d2943f17be70e719bf2ffa6058cf72/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "html_url": "https://github.com/rust-lang/rust/commit/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0"}, {"sha": "6ebacf2fd77b4a7a688aeebd5f6fcc422e230635", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ebacf2fd77b4a7a688aeebd5f6fcc422e230635", "html_url": "https://github.com/rust-lang/rust/commit/6ebacf2fd77b4a7a688aeebd5f6fcc422e230635"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "b5f0a5713bd0a3f908478d69905afd0b21adc504", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=3272b002b3d2943f17be70e719bf2ffa6058cf72", "patch": "@@ -728,17 +728,10 @@ pub fn link_binary(sess: Session,\n                    obj_filename: &Path,\n                    out_filename: &Path,\n                    lm: &LinkMeta) -> ~[Path] {\n-    // If we're generating a test executable, then ignore all other output\n-    // styles at all other locations\n-    let outputs = if sess.opts.test {\n-        ~[session::OutputExecutable]\n-    } else {\n-        (*sess.outputs).clone()\n-    };\n-\n     let mut out_filenames = ~[];\n-    for output in outputs.move_iter() {\n-        let out_file = link_binary_output(sess, trans, output, obj_filename, out_filename, lm);\n+    for &output in sess.outputs.iter() {\n+        let out_file = link_binary_output(sess, trans, output, obj_filename,\n+                                          out_filename, lm);\n         out_filenames.push(out_file);\n     }\n "}, {"sha": "78b59f493413b989c86fbf16182ebaa432e0e1b0", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=3272b002b3d2943f17be70e719bf2ffa6058cf72", "patch": "@@ -405,20 +405,25 @@ pub fn expect<T:Clone>(sess: Session, opt: Option<T>, msg: || -> ~str) -> T {\n }\n \n pub fn building_library(options: &options, crate: &ast::Crate) -> bool {\n+    if options.test { return false }\n     for output in options.outputs.iter() {\n         match *output {\n             OutputExecutable => {}\n             OutputStaticlib | OutputDylib | OutputRlib => return true\n         }\n     }\n-    if options.test { return false }\n     match syntax::attr::first_attr_value_str_by_name(crate.attrs, \"crate_type\") {\n         Some(s) => \"lib\" == s || \"rlib\" == s || \"dylib\" == s || \"staticlib\" == s,\n         _ => false\n     }\n }\n \n pub fn collect_outputs(options: &options, crate: &ast::Crate) -> ~[OutputStyle] {\n+    // If we're generating a test executable, then ignore all other output\n+    // styles at all other locations\n+    if options.test {\n+        return ~[OutputExecutable];\n+    }\n     let mut base = options.outputs.clone();\n     let mut iter = crate.attrs.iter().filter_map(|a| {\n         if \"crate_type\" == a.name() {"}, {"sha": "89186b2ad4da2e3d62fd81093f939bcac338de78", "filename": "src/test/run-make/no-intermediate-extras/Makefile", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Ftest%2Frun-make%2Fno-intermediate-extras%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Ftest%2Frun-make%2Fno-intermediate-extras%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-intermediate-extras%2FMakefile?ref=3272b002b3d2943f17be70e719bf2ffa6058cf72", "patch": "@@ -0,0 +1,7 @@\n+# Regression test for issue #10973\n+\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --rlib --test foo.rs\n+\trm $(TMPDIR)/foo.bc && exit 1 || exit 0"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-make/no-intermediate-extras/foo.rs", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Ftest%2Frun-make%2Fno-intermediate-extras%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3272b002b3d2943f17be70e719bf2ffa6058cf72/src%2Ftest%2Frun-make%2Fno-intermediate-extras%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-intermediate-extras%2Ffoo.rs?ref=3272b002b3d2943f17be70e719bf2ffa6058cf72"}]}