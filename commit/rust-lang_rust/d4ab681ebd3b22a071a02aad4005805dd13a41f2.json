{"sha": "d4ab681ebd3b22a071a02aad4005805dd13a41f2", "node_id": "C_kwDOAAsO6NoAKGQ0YWI2ODFlYmQzYjIyYTA3MWEwMmFhZDQwMDU4MDVkZDEzYTQxZjI", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-05-05T01:17:58Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-05-05T01:17:58Z"}, "message": "Add comments", "tree": {"sha": "145f615a48d78ce7a1586832880926a713210aaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/145f615a48d78ce7a1586832880926a713210aaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4ab681ebd3b22a071a02aad4005805dd13a41f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4ab681ebd3b22a071a02aad4005805dd13a41f2", "html_url": "https://github.com/rust-lang/rust/commit/d4ab681ebd3b22a071a02aad4005805dd13a41f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4ab681ebd3b22a071a02aad4005805dd13a41f2/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41807a30943b2459c8a8e2accfbbead8959490d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/41807a30943b2459c8a8e2accfbbead8959490d4", "html_url": "https://github.com/rust-lang/rust/commit/41807a30943b2459c8a8e2accfbbead8959490d4"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "6c2834fccf30afa78c55f4c462c0256e92ebbc8e", "filename": "src/intrinsic/simd.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d4ab681ebd3b22a071a02aad4005805dd13a41f2/src%2Fintrinsic%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ab681ebd3b22a071a02aad4005805dd13a41f2/src%2Fintrinsic%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fsimd.rs?ref=d4ab681ebd3b22a071a02aad4005805dd13a41f2", "patch": "@@ -220,6 +220,7 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n         // NOTE: we cannot cast to an array and assign to its element here because the value might\n         // not be an l-value. So, call a builtin to set the element.\n         // TODO(antoyo): perhaps we could create a new vector or maybe there's a GIMPLE instruction for that?\n+        // TODO(antoyo): don't use target specific builtins here.\n         let func_name =\n             match in_len {\n                 2 => {\n@@ -396,6 +397,10 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n                 });\n             }\n             (Style::Int(_), Style::Float) => {\n+                // TODO: add support for internal functions in libgccjit to get access to IFN_VEC_CONVERT which is\n+                // doing like __builtin_convertvector?\n+                // Or maybe provide convert_vector as an API since it might not easy to get the\n+                // types of internal functions.\n                 unimplemented!();\n             }\n             (Style::Float, Style::Int(_)) => {"}]}