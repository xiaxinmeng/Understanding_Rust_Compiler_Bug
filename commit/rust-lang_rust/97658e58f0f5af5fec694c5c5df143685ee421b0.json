{"sha": "97658e58f0f5af5fec694c5c5df143685ee421b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NjU4ZTU4ZjBmNWFmNWZlYzY5NGM1YzVkZjE0MzY4NWVlNDIxYjA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-05-06T15:47:55Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-05-06T15:52:03Z"}, "message": "rustc: Support Rust-specific features in -Ctarget-feature\n\nSince the beginning of time the `-Ctarget-feature` flag on the command\nline has largely been passed unmodified to LLVM. Afterwards, though, the\n`#[target_feature]` attribute was stabilized and some of the names in\nthis attribute do not match the corresponding LLVM name. This is because\nRust doesn't always want to stabilize the exact feature name in LLVM for\nthe equivalent functionality in Rust. This creates a situation, however,\nwhere in Rust you'd write:\n\n    #[target_feature(enable = \"pclmulqdq\")]\n    unsafe fn foo() {\n        // ...\n    }\n\nbut on the command line you would write:\n\n    RUSTFLAGS=\"-Ctarget-feature=+pclmul\" cargo build --release\n\nThis difference is somewhat odd to deal with if you're a newcomer and\nthe situation may be made worse with upcoming features like [WebAssembly\nSIMD](https://github.com/rust-lang/rust/issues/74372) which may be more\nprevalent.\n\nThis commit implements a mapping to translate requests via\n`-Ctarget-feature` through the same name-mapping functionality that's\npresent for attributes in Rust going to LLVM. This means that\n`+pclmulqdq` will work on x86 targets where as previously it did not.\n\nI've attempted to keep this backwards-compatible where the compiler will\njust opportunistically attempt to remap features found in\n`-Ctarget-feature`, but if there's something it doesn't understand it\ngets passed unmodified to LLVM just as it was before.", "tree": {"sha": "be335012c6a2eda59f8b7afe2589c86765f83a8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be335012c6a2eda59f8b7afe2589c86765f83a8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97658e58f0f5af5fec694c5c5df143685ee421b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97658e58f0f5af5fec694c5c5df143685ee421b0", "html_url": "https://github.com/rust-lang/rust/commit/97658e58f0f5af5fec694c5c5df143685ee421b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97658e58f0f5af5fec694c5c5df143685ee421b0/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "109248a4eb99bc83684c94ca4ef36f2fadc17e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/109248a4eb99bc83684c94ca4ef36f2fadc17e2a", "html_url": "https://github.com/rust-lang/rust/commit/109248a4eb99bc83684c94ca4ef36f2fadc17e2a"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "6101b90aea6dae8c7ca146092824bed8c5f4e560", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/97658e58f0f5af5fec694c5c5df143685ee421b0/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97658e58f0f5af5fec694c5c5df143685ee421b0/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=97658e58f0f5af5fec694c5c5df143685ee421b0", "patch": "@@ -339,24 +339,32 @@ pub fn llvm_global_features(sess: &Session) -> Vec<String> {\n         Some(_) | None => {}\n     };\n \n+    let filter = |s: &str| {\n+        if s.is_empty() {\n+            return None;\n+        }\n+        let feature = if s.starts_with(\"+\") || s.starts_with(\"-\") {\n+            &s[1..]\n+        } else {\n+            return Some(s.to_string());\n+        };\n+        // Rustc-specific feature requests like `+crt-static` or `-crt-static`\n+        // are not passed down to LLVM.\n+        if RUSTC_SPECIFIC_FEATURES.contains(&feature) {\n+            return None;\n+        }\n+        // ... otherwise though we run through `to_llvm_feature` feature when\n+        // passing requests down to LLVM. This means that all in-language\n+        // features also work on the command line instead of having two\n+        // different names when the LLVM name and the Rust name differ.\n+        Some(format!(\"{}{}\", &s[..1], to_llvm_feature(sess, feature)))\n+    };\n+\n     // Features implied by an implicit or explicit `--target`.\n-    features.extend(\n-        sess.target\n-            .features\n-            .split(',')\n-            .filter(|f| !f.is_empty() && !RUSTC_SPECIFIC_FEATURES.iter().any(|s| f.contains(s)))\n-            .map(String::from),\n-    );\n+    features.extend(sess.target.features.split(',').filter_map(&filter));\n \n     // -Ctarget-features\n-    features.extend(\n-        sess.opts\n-            .cg\n-            .target_feature\n-            .split(',')\n-            .filter(|f| !f.is_empty() && !RUSTC_SPECIFIC_FEATURES.iter().any(|s| f.contains(s)))\n-            .map(String::from),\n-    );\n+    features.extend(sess.opts.cg.target_feature.split(',').filter_map(&filter));\n \n     features\n }"}, {"sha": "1708a71a9812ff2d610261a61c5c309ea7a7a137", "filename": "src/test/ui/target-feature/rust-specific-name-no-warnings.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/97658e58f0f5af5fec694c5c5df143685ee421b0/src%2Ftest%2Fui%2Ftarget-feature%2Frust-specific-name-no-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97658e58f0f5af5fec694c5c5df143685ee421b0/src%2Ftest%2Fui%2Ftarget-feature%2Frust-specific-name-no-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Frust-specific-name-no-warnings.rs?ref=97658e58f0f5af5fec694c5c5df143685ee421b0", "patch": "@@ -0,0 +1,5 @@\n+// build-pass\n+// only-x86\n+// compile-flags: -C target-feature=+pclmulqdq\n+\n+fn main() {}"}]}