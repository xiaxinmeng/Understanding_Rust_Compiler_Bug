{"sha": "b32a22eb21a4e4766e5290b211d89248790b7378", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMmEyMmViMjFhNGU0NzY2ZTUyOTBiMjExZDg5MjQ4NzkwYjczNzg=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-09-04T12:00:10Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-09-05T09:07:55Z"}, "message": "Add tests", "tree": {"sha": "e175e3d286accbdf5dbde5dc41acbab9f28d2665", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e175e3d286accbdf5dbde5dc41acbab9f28d2665"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b32a22eb21a4e4766e5290b211d89248790b7378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b32a22eb21a4e4766e5290b211d89248790b7378", "html_url": "https://github.com/rust-lang/rust/commit/b32a22eb21a4e4766e5290b211d89248790b7378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b32a22eb21a4e4766e5290b211d89248790b7378/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d295e36c38bcb67783da6e318475cfa61eb1916e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d295e36c38bcb67783da6e318475cfa61eb1916e", "html_url": "https://github.com/rust-lang/rust/commit/d295e36c38bcb67783da6e318475cfa61eb1916e"}], "stats": {"total": 144, "additions": 144, "deletions": 0}, "files": [{"sha": "112227c85c41b832f7fc50504eaa8a0b38994525", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-80706.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-80706.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-80706.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-80706.rs?ref=b32a22eb21a4e4766e5290b211d89248790b7378", "patch": "@@ -0,0 +1,70 @@\n+// check-pass\n+// edition:2018\n+\n+type BoxFuture<T> = std::pin::Pin<Box<dyn std::future::Future<Output=T>>>;\n+\n+fn main() {\n+    f();\n+}\n+\n+async fn f() {\n+    run(\"dependency\").await;\n+}\n+\n+struct InMemoryStorage;\n+\n+struct User<'dep> {\n+    dep: &'dep str,\n+}\n+\n+impl<'a> StorageRequest<InMemoryStorage> for SaveUser<'a> {\n+    fn execute(&self) -> BoxFuture<Result<(), String>> {\n+        todo!()\n+    }\n+}\n+\n+trait Storage {\n+    type Error;\n+}\n+\n+impl Storage for InMemoryStorage {\n+    type Error = String;\n+}\n+\n+trait StorageRequestReturnType {\n+    type Output;\n+}\n+\n+trait StorageRequest<S: Storage>: StorageRequestReturnType {\n+    fn execute(\n+        &self,\n+    ) -> BoxFuture<Result<<Self as StorageRequestReturnType>::Output, <S as Storage>::Error>>;\n+}\n+\n+struct SaveUser<'a> {\n+    name: &'a str,\n+}\n+\n+impl<'a> StorageRequestReturnType for SaveUser<'a> {\n+    type Output = ();\n+}\n+\n+impl<'dep> User<'dep> {\n+    async fn save<S>(self)\n+    where\n+        S: Storage,\n+        for<'a> SaveUser<'a>: StorageRequest<S>,\n+    {\n+        SaveUser { name: \"Joe\" }\n+            .execute()\n+            .await;\n+    }\n+}\n+\n+async fn run<S>(dep: &str)\n+where\n+    S: Storage,\n+    for<'a> SaveUser<'a>: StorageRequest<S>,\n+{\n+    User { dep }.save().await;\n+}"}, {"sha": "6316ceea156bd9ffe8047c379f1854ba3848a920", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-80956.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-80956.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-80956.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-80956.rs?ref=b32a22eb21a4e4766e5290b211d89248790b7378", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+\n+trait Bar {\n+    type Type;\n+}\n+struct Foo<'a>(&'a ());\n+impl<'a> Bar for Foo<'a> {\n+    type Type = ();\n+}\n+\n+fn func<'a>(_: <Foo<'a> as Bar>::Type) {}\n+fn assert_is_func<A>(_: fn(A)) {}\n+\n+fn test()\n+where\n+    for<'a> <Foo<'a> as Bar>::Type: Sized,\n+{\n+    assert_is_func(func);\n+}\n+\n+fn main() {}"}, {"sha": "f6ab9c203b5c70284c25ffe047e6c97960d25133", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-81809.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-81809.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-81809.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-81809.rs?ref=b32a22eb21a4e4766e5290b211d89248790b7378", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+\n+pub trait Indexable {\n+    type Idx;\n+}\n+impl Indexable for u8 {\n+    type Idx = u8;\n+}\n+impl Indexable for u16 {\n+    type Idx = u16;\n+}\n+\n+pub trait Indexer<T: Indexable>: std::ops::Index<T::Idx, Output = T> {}\n+\n+trait StoreIndex: Indexer<u8> + Indexer<u16> {}\n+\n+fn foo(st: &impl StoreIndex) -> &dyn StoreIndex {\n+    st as &dyn StoreIndex\n+}\n+\n+fn main() {}"}, {"sha": "3a4d6c02a159fd06a0019ec6331950da6d1c15c5", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-85455.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-85455.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-85455.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-85455.rs?ref=b32a22eb21a4e4766e5290b211d89248790b7378", "patch": "@@ -0,0 +1,18 @@\n+#![feature(unboxed_closures)]\n+\n+trait SomeTrait<'a> {\n+    type Associated;\n+}\n+\n+fn give_me_ice<T>() {\n+    callee::<fn(&()) -> <T as SomeTrait<'_>>::Associated>();\n+    //~^ ERROR: the trait bound `T: SomeTrait<'_>` is not satisfied\n+}\n+\n+fn callee<T: Fn<(&'static (),)>>() {\n+    println!(\"{}\", std::any::type_name::<<T as FnOnce<(&'static (),)>>::Output>());\n+}\n+\n+fn main() {\n+    give_me_ice::<()>();\n+}"}, {"sha": "aaf45dc7ad5642514b11428fa6b794403ab46369", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-85455.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-85455.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b32a22eb21a4e4766e5290b211d89248790b7378/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-85455.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-85455.stderr?ref=b32a22eb21a4e4766e5290b211d89248790b7378", "patch": "@@ -0,0 +1,14 @@\n+error[E0277]: the trait bound `T: SomeTrait<'_>` is not satisfied\n+  --> $DIR/issue-85455.rs:8:5\n+   |\n+LL |     callee::<fn(&()) -> <T as SomeTrait<'_>>::Associated>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SomeTrait<'_>` is not implemented for `T`\n+   |\n+help: consider restricting type parameter `T`\n+   |\n+LL | fn give_me_ice<T: SomeTrait<'_>>() {\n+   |                 +++++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}