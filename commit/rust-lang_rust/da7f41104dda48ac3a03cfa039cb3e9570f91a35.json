{"sha": "da7f41104dda48ac3a03cfa039cb3e9570f91a35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhN2Y0MTEwNGRkYTQ4YWMzYTAzY2ZhMDM5Y2IzZTk1NzBmOTFhMzU=", "commit": {"author": {"name": "Dmitry Ermolov", "email": "epdmitry@yandex.ru", "date": "2013-10-07T06:23:22Z"}, "committer": {"name": "Dmitry Ermolov", "email": "epdmitry@yandex.ru", "date": "2013-10-07T18:28:18Z"}, "message": "Fix bug in match checking\n\nWhen `specialize`ing struct-like enum patterns, compare struct fields to\npattern fields, not pattern fields to pattern fields.\n\nCloses #8351.", "tree": {"sha": "11f304aa6ff24381f21c700d76ee54c57e8a1f13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11f304aa6ff24381f21c700d76ee54c57e8a1f13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da7f41104dda48ac3a03cfa039cb3e9570f91a35", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da7f41104dda48ac3a03cfa039cb3e9570f91a35", "html_url": "https://github.com/rust-lang/rust/commit/da7f41104dda48ac3a03cfa039cb3e9570f91a35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da7f41104dda48ac3a03cfa039cb3e9570f91a35/comments", "author": {"login": "dim-an", "id": 88889, "node_id": "MDQ6VXNlcjg4ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/88889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dim-an", "html_url": "https://github.com/dim-an", "followers_url": "https://api.github.com/users/dim-an/followers", "following_url": "https://api.github.com/users/dim-an/following{/other_user}", "gists_url": "https://api.github.com/users/dim-an/gists{/gist_id}", "starred_url": "https://api.github.com/users/dim-an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dim-an/subscriptions", "organizations_url": "https://api.github.com/users/dim-an/orgs", "repos_url": "https://api.github.com/users/dim-an/repos", "events_url": "https://api.github.com/users/dim-an/events{/privacy}", "received_events_url": "https://api.github.com/users/dim-an/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dim-an", "id": 88889, "node_id": "MDQ6VXNlcjg4ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/88889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dim-an", "html_url": "https://github.com/dim-an", "followers_url": "https://api.github.com/users/dim-an/followers", "following_url": "https://api.github.com/users/dim-an/following{/other_user}", "gists_url": "https://api.github.com/users/dim-an/gists{/gist_id}", "starred_url": "https://api.github.com/users/dim-an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dim-an/subscriptions", "organizations_url": "https://api.github.com/users/dim-an/orgs", "repos_url": "https://api.github.com/users/dim-an/repos", "events_url": "https://api.github.com/users/dim-an/events{/privacy}", "received_events_url": "https://api.github.com/users/dim-an/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "822699e57e09d7070e122c6ed3c109ac402bc5dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/822699e57e09d7070e122c6ed3c109ac402bc5dd", "html_url": "https://github.com/rust-lang/rust/commit/822699e57e09d7070e122c6ed3c109ac402bc5dd"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "663108ee9b8e8dd7b0b87be6c6ceb619c666f77b", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/da7f41104dda48ac3a03cfa039cb3e9570f91a35/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da7f41104dda48ac3a03cfa039cb3e9570f91a35/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=da7f41104dda48ac3a03cfa039cb3e9570f91a35", "patch": "@@ -662,15 +662,14 @@ fn specialize(cx: &MatchCheckCtxt,\n                     _ => None\n                 }\n             }\n-            PatStruct(_, ref flds, _) => {\n+            PatStruct(_, ref pattern_fields, _) => {\n                 // Is this a struct or an enum variant?\n                 match cx.tcx.def_map.get_copy(&pat_id) {\n                     DefVariant(_, variant_id, _) => {\n                         if variant(variant_id) == *ctor_id {\n-                            // FIXME #4731: Is this right? --pcw\n-                            let args = flds.map(|ty_field| {\n-                                match flds.iter().find(|f|\n-                                                f.ident == ty_field.ident) {\n+                            let struct_fields = ty::lookup_struct_fields(cx.tcx, variant_id);\n+                            let args = struct_fields.map(|sf| {\n+                                match pattern_fields.iter().find(|f| f.ident.name == sf.name) {\n                                     Some(f) => f.pat,\n                                     _ => wild()\n                                 }\n@@ -700,7 +699,7 @@ fn specialize(cx: &MatchCheckCtxt,\n                             }\n                         }\n                         let args = class_fields.iter().map(|class_field| {\n-                            match flds.iter().find(|f|\n+                            match pattern_fields.iter().find(|f|\n                                             f.ident.name == class_field.name) {\n                                 Some(f) => f.pat,\n                                 _ => wild()"}]}