{"sha": "0a386baa5f27270012f262881a62b75d1a115a82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMzg2YmFhNWYyNzI3MDAxMmYyNjI4ODFhNjJiNzVkMWExMTVhODI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-04-17T23:25:56Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-04-18T01:04:57Z"}, "message": "Make PlaceProjectionsIter a proper iterator", "tree": {"sha": "ce988f8961138bf2fc928f4ec35ffc1cf6336166", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce988f8961138bf2fc928f4ec35ffc1cf6336166"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a386baa5f27270012f262881a62b75d1a115a82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a386baa5f27270012f262881a62b75d1a115a82", "html_url": "https://github.com/rust-lang/rust/commit/0a386baa5f27270012f262881a62b75d1a115a82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a386baa5f27270012f262881a62b75d1a115a82/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b461740f03108cbea5e803f43b83dd285c7e7c59", "url": "https://api.github.com/repos/rust-lang/rust/commits/b461740f03108cbea5e803f43b83dd285c7e7c59", "html_url": "https://github.com/rust-lang/rust/commit/b461740f03108cbea5e803f43b83dd285c7e7c59"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "b4f63d9a40cdfbe43308435f970cc1a44006fc2e", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0a386baa5f27270012f262881a62b75d1a115a82/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a386baa5f27270012f262881a62b75d1a115a82/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=0a386baa5f27270012f262881a62b75d1a115a82", "patch": "@@ -20,6 +20,7 @@ use crate::rustc_serialize::{self as serialize};\n use smallvec::SmallVec;\n use std::borrow::Cow;\n use std::fmt::{self, Debug, Formatter, Write};\n+use std::iter::FusedIterator;\n use std::ops::{Index, IndexMut};\n use std::slice;\n use std::vec::IntoIter;\n@@ -2105,6 +2106,15 @@ pub enum PlaceProjections<'p, 'tcx: 'p> {\n }\n \n impl<'p, 'tcx> PlaceProjections<'p, 'tcx> {\n+    fn iter(&self) -> PlaceProjectionsIter<'_, 'tcx> {\n+        PlaceProjectionsIter { value: self }\n+    }\n+}\n+\n+impl<'p, 'tcx> IntoIterator for &'p PlaceProjections<'p, 'tcx> {\n+    type Item = &'p PlaceProjection<'tcx>;\n+    type IntoIter = PlaceProjectionsIter<'p, 'tcx>;\n+\n     /// Converts a list of `PlaceProjection` components into an iterator;\n     /// this iterator yields up a never-ending stream of `Option<&Place>`.\n     /// These begin with the \"innermost\" projection and then with each\n@@ -2114,8 +2124,8 @@ impl<'p, 'tcx> PlaceProjections<'p, 'tcx> {\n     /// ```notrust\n     /// Some(`a`), Some(`a.b`), Some(`a.b.c`), None, None, ...\n     /// ```\n-    fn iter(&self) -> PlaceProjectionsIter<'_, 'tcx> {\n-        PlaceProjectionsIter { value: self }\n+    fn into_iter(self) -> Self::IntoIter {\n+        self.iter()\n     }\n }\n \n@@ -2129,8 +2139,10 @@ pub struct PlaceProjectionsIter<'p, 'tcx: 'p> {\n     pub value: &'p PlaceProjections<'p, 'tcx>,\n }\n \n-impl<'p, 'tcx> PlaceProjectionsIter<'p, 'tcx> {\n-    pub fn next(&mut self) -> Option<&'p PlaceProjection<'tcx>> {\n+impl<'p, 'tcx> Iterator for PlaceProjectionsIter<'p, 'tcx> {\n+    type Item = &'p PlaceProjection<'tcx>;\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n         if let &PlaceProjections::List { projection, next } = self.value {\n             self.value = next;\n             Some(projection)\n@@ -2140,6 +2152,8 @@ impl<'p, 'tcx> PlaceProjectionsIter<'p, 'tcx> {\n     }\n }\n \n+impl<'p, 'tcx> FusedIterator for PlaceProjectionsIter<'p, 'tcx> {}\n+\n impl<'tcx> Debug for Place<'tcx> {\n     fn fmt(&self, fmt: &mut Formatter<'_>) -> fmt::Result {\n         use self::Place::*;"}]}