{"sha": "824f413d75b68e950726dc17c4e7cc3d3f241eda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNGY0MTNkNzViNjhlOTUwNzI2ZGMxN2M0ZTdjYzNkM2YyNDFlZGE=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-06-02T17:05:58Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-06-02T17:05:58Z"}, "message": "unnecessary paranthesis", "tree": {"sha": "09c0387eb171fc5bc882038e16f826d5214b5eac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09c0387eb171fc5bc882038e16f826d5214b5eac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/824f413d75b68e950726dc17c4e7cc3d3f241eda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/824f413d75b68e950726dc17c4e7cc3d3f241eda", "html_url": "https://github.com/rust-lang/rust/commit/824f413d75b68e950726dc17c4e7cc3d3f241eda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/824f413d75b68e950726dc17c4e7cc3d3f241eda/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54ea251bd40bec06c28e635371588e83cdacca9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/54ea251bd40bec06c28e635371588e83cdacca9b", "html_url": "https://github.com/rust-lang/rust/commit/54ea251bd40bec06c28e635371588e83cdacca9b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "995c9f90be5b0a753c72a75cd535e4ca27b2e41f", "filename": "crates/ra_tt/src/buffer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/824f413d75b68e950726dc17c4e7cc3d3f241eda/crates%2Fra_tt%2Fsrc%2Fbuffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/824f413d75b68e950726dc17c4e7cc3d3f241eda/crates%2Fra_tt%2Fsrc%2Fbuffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tt%2Fsrc%2Fbuffer.rs?ref=824f413d75b68e950726dc17c4e7cc3d3f241eda", "patch": "@@ -141,7 +141,7 @@ impl<'a> Cursor<'a> {\n     }\n \n     /// If the cursor is pointing at a `TokenTree`, returns it\n-    pub fn token_tree(self) -> Option<(&'a TokenTree)> {\n+    pub fn token_tree(self) -> Option<&'a TokenTree> {\n         match self.entry() {\n             Some(Entry::Leaf(tt)) => Some(tt),\n             Some(Entry::Subtree(tt, _)) => Some(tt),"}]}