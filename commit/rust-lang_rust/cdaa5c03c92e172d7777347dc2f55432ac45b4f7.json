{"sha": "cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "node_id": "C_kwDOAAsO6NoAKGNkYWE1YzAzYzkyZTE3MmQ3Nzc3MzQ3ZGMyZjU1NDMyYWM0NWI0Zjc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-08T19:31:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-08T19:31:16Z"}, "message": "Rollup merge of #96617 - ken-matsui:fix-incorrect-syntax-suggestion-with-pub-async-fn, r=cjgillot\n\nFix incorrect syntax suggestion with `pub async fn`\n\nThis PR closes: https://github.com/rust-lang/rust/issues/96555", "tree": {"sha": "25b99b9035aab0f273f7460c8d34d0d1fcd05cfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25b99b9035aab0f273f7460c8d34d0d1fcd05cfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJieBqECRBK7hj4Ov3rIwAAC2UIAC30aSotRysEObTewWyHPuVf\nUhZ7kU/vmgZqiAWxQ4jc1kKPgJOkGTCiBXyJ5D0pHC6Ps1SZiaHW/l4tPOdJczaX\nPdTadoetniwepleOO7wyELYLrOAf1BeZhmqbFQ+Kp6j8A3KFdgp0/Vo8E47aB2LM\nYGwOMBQ0kN2OEid7zqBK8obUYXTC9KIfIdnBv4f7UcXeOHzJ6SufhMOGRzrU5bCo\nmmWu9XWb98G9mLIyKaV9ifJiRMNlenX1l7heY8MejmPmzp+HwWwjrWhVf0tsNrqo\nLfWmicbeNcp2Pbc3qR0hvgBQxqpHR0qabXqpOx0Aewt2pBHGA7sDxhORWQ+2dPQ=\n=JQcU\n-----END PGP SIGNATURE-----\n", "payload": "tree 25b99b9035aab0f273f7460c8d34d0d1fcd05cfa\nparent 83322c557fcaa9b6750955ceb6b9591df6c53a65\nparent 8b89a1280c929f7aaf11386f8f1a9ecdbef2f539\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1652038276 +0200\ncommitter GitHub <noreply@github.com> 1652038276 +0200\n\nRollup merge of #96617 - ken-matsui:fix-incorrect-syntax-suggestion-with-pub-async-fn, r=cjgillot\n\nFix incorrect syntax suggestion with `pub async fn`\n\nThis PR closes: https://github.com/rust-lang/rust/issues/96555\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "html_url": "https://github.com/rust-lang/rust/commit/cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdaa5c03c92e172d7777347dc2f55432ac45b4f7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83322c557fcaa9b6750955ceb6b9591df6c53a65", "url": "https://api.github.com/repos/rust-lang/rust/commits/83322c557fcaa9b6750955ceb6b9591df6c53a65", "html_url": "https://github.com/rust-lang/rust/commit/83322c557fcaa9b6750955ceb6b9591df6c53a65"}, {"sha": "8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "html_url": "https://github.com/rust-lang/rust/commit/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539"}], "stats": {"total": 113, "additions": 104, "deletions": 9}, "files": [{"sha": "d20ba99ebc9b5b2434bd7f07fc24891823adf550", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/cdaa5c03c92e172d7777347dc2f55432ac45b4f7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdaa5c03c92e172d7777347dc2f55432ac45b4f7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "patch": "@@ -1085,18 +1085,28 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             self.in_progress_typeck_results.map(|t| t.borrow())\n                             && let ty = typeck_results.expr_ty_adjusted(base)\n                             && let ty::FnDef(def_id, _substs) = ty.kind()\n-                            && let Some(hir::Node::Item(hir::Item { span, ident, .. })) =\n+                            && let Some(hir::Node::Item(hir::Item { ident, span, vis_span, .. })) =\n                                 hir.get_if_local(*def_id)\n                         {\n-                            err.span_suggestion_verbose(\n-                                span.shrink_to_lo(),\n-                                &format!(\n-                                    \"alternatively, consider making `fn {}` asynchronous\",\n-                                    ident\n-                                ),\n-                                \"async \".to_string(),\n-                                Applicability::MaybeIncorrect,\n+                            let msg = format!(\n+                                \"alternatively, consider making `fn {}` asynchronous\",\n+                                ident\n                             );\n+                            if vis_span.is_empty() {\n+                                err.span_suggestion_verbose(\n+                                    span.shrink_to_lo(),\n+                                    &msg,\n+                                    \"async \".to_string(),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            } else {\n+                                err.span_suggestion_verbose(\n+                                    vis_span.shrink_to_hi(),\n+                                    &msg,\n+                                    \" async\".to_string(),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            }\n                         }\n                     }\n                 }"}, {"sha": "9f0a047c6e9a80c14949bbd6174b305c432ee82d", "filename": "src/test/ui/suggestions/issue-96555.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cdaa5c03c92e172d7777347dc2f55432ac45b4f7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdaa5c03c92e172d7777347dc2f55432ac45b4f7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.rs?ref=cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "patch": "@@ -0,0 +1,19 @@\n+// edition:2018\n+\n+async fn f() {\n+    m::f1().await; //~ ERROR `()` is not a future\n+    m::f2().await; //~ ERROR `()` is not a future\n+    m::f3().await; //~ ERROR `()` is not a future\n+}\n+\n+mod m {\n+    pub fn f1() {}\n+\n+    pub(crate) fn f2() {}\n+\n+    pub\n+    fn\n+    f3() {}\n+}\n+\n+fn main() {}"}, {"sha": "6d3b8844d954fb304d65e9addc72bb1e13b16456", "filename": "src/test/ui/suggestions/issue-96555.stderr", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/cdaa5c03c92e172d7777347dc2f55432ac45b4f7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cdaa5c03c92e172d7777347dc2f55432ac45b4f7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.stderr?ref=cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "patch": "@@ -0,0 +1,66 @@\n+error[E0277]: `()` is not a future\n+  --> $DIR/issue-96555.rs:4:12\n+   |\n+LL |     m::f1().await;\n+   |     -------^^^^^^ `()` is not a future\n+   |     |\n+   |     this call returns `()`\n+   |\n+   = help: the trait `Future` is not implemented for `()`\n+   = note: () must be a future or must implement `IntoFuture` to be awaited\n+   = note: required because of the requirements on the impl of `IntoFuture` for `()`\n+help: remove the `.await`\n+   |\n+LL -     m::f1().await;\n+LL +     m::f1();\n+   | \n+help: alternatively, consider making `fn f1` asynchronous\n+   |\n+LL |     pub async fn f1() {}\n+   |         +++++\n+\n+error[E0277]: `()` is not a future\n+  --> $DIR/issue-96555.rs:5:12\n+   |\n+LL |     m::f2().await;\n+   |     -------^^^^^^ `()` is not a future\n+   |     |\n+   |     this call returns `()`\n+   |\n+   = help: the trait `Future` is not implemented for `()`\n+   = note: () must be a future or must implement `IntoFuture` to be awaited\n+   = note: required because of the requirements on the impl of `IntoFuture` for `()`\n+help: remove the `.await`\n+   |\n+LL -     m::f2().await;\n+LL +     m::f2();\n+   | \n+help: alternatively, consider making `fn f2` asynchronous\n+   |\n+LL |     pub(crate) async fn f2() {}\n+   |                +++++\n+\n+error[E0277]: `()` is not a future\n+  --> $DIR/issue-96555.rs:6:12\n+   |\n+LL |     m::f3().await;\n+   |     -------^^^^^^ `()` is not a future\n+   |     |\n+   |     this call returns `()`\n+   |\n+   = help: the trait `Future` is not implemented for `()`\n+   = note: () must be a future or must implement `IntoFuture` to be awaited\n+   = note: required because of the requirements on the impl of `IntoFuture` for `()`\n+help: remove the `.await`\n+   |\n+LL -     m::f3().await;\n+LL +     m::f3();\n+   | \n+help: alternatively, consider making `fn f3` asynchronous\n+   |\n+LL |     pub async\n+   |         +++++\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}