{"sha": "2309783a0b65163041b03dce04d7df85dcabc2cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMDk3ODNhMGI2NTE2MzA0MWIwM2RjZTA0ZDdkZjg1ZGNhYmMyY2Q=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-12-17T00:42:49Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-12-18T16:21:38Z"}, "message": "Add tests", "tree": {"sha": "a263a3420102bb1a7483214e869a7ec49b26d7ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a263a3420102bb1a7483214e869a7ec49b26d7ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2309783a0b65163041b03dce04d7df85dcabc2cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2309783a0b65163041b03dce04d7df85dcabc2cd", "html_url": "https://github.com/rust-lang/rust/commit/2309783a0b65163041b03dce04d7df85dcabc2cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2309783a0b65163041b03dce04d7df85dcabc2cd/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2225ee1b62ff089917434aefd9b2bf509cfa087f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2225ee1b62ff089917434aefd9b2bf509cfa087f", "html_url": "https://github.com/rust-lang/rust/commit/2225ee1b62ff089917434aefd9b2bf509cfa087f"}], "stats": {"total": 114, "additions": 95, "deletions": 19}, "files": [{"sha": "178a4aa6681a0759e7c26e468a10c5f2c12a3710", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs?ref=2309783a0b65163041b03dce04d7df85dcabc2cd", "patch": "@@ -64,6 +64,37 @@ fn main() {\n             | 2, ..] => {}\n         _ => {}\n     }\n+    // FIXME: incorrect\n+    match &[][..] {\n+        [true] => {}\n+        [true //~ ERROR unreachable\n+            | false, ..] => {}\n+        _ => {}\n+    }\n+    match &[][..] {\n+        [false] => {}\n+        [true, ..] => {}\n+        [true //~ ERROR unreachable\n+            | false, ..] => {}\n+        _ => {}\n+    }\n+    match (true, None) {\n+        (true, Some(_)) => {}\n+        (false, Some(true)) => {}\n+        (true | false, None | Some(true // FIXME: should be unreachable\n+                                   | false)) => {}\n+    }\n+    macro_rules! t_or_f {\n+        () => {\n+            (true // FIXME: should be unreachable\n+                        | false)\n+        };\n+    }\n+    match (true, None) {\n+        (true, Some(_)) => {}\n+        (false, Some(true)) => {}\n+        (true | false, None | Some(t_or_f!())) => {}\n+    }\n     match Some(0) {\n         Some(0) => {}\n         Some(0 //~ ERROR unreachable"}, {"sha": "38e2369ae7dbaf78ba90d08840cc17fde3722280", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.stderr", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr?ref=2309783a0b65163041b03dce04d7df85dcabc2cd", "patch": "@@ -95,28 +95,40 @@ LL |         [1\n    |          ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:69:14\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:70:10\n+   |\n+LL |         [true\n+   |          ^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:77:10\n+   |\n+LL |         [true\n+   |          ^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:100:14\n    |\n LL |         Some(0\n    |              ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:88:19\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:119:19\n    |\n LL |                 | false) => {}\n    |                   ^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:96:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:127:15\n    |\n LL |             | true) => {}\n    |               ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:102:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:133:15\n    |\n LL |             | true,\n    |               ^^^^\n \n-error: aborting due to 19 previous errors\n+error: aborting due to 21 previous errors\n "}, {"sha": "bcfc32be9a483e0dbdf7d17286c0ccf6d114a931", "filename": "src/test/ui/pattern/usefulness/issue-15129.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-15129.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-15129.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-15129.rs?ref=2309783a0b65163041b03dce04d7df85dcabc2cd", "patch": "@@ -1,17 +1,17 @@\n pub enum T {\n     T1(()),\n-    T2(())\n+    T2(()),\n }\n \n pub enum V {\n     V1(isize),\n-    V2(bool)\n+    V2(bool),\n }\n \n fn main() {\n     match (T::T1(()), V::V2(true)) {\n-    //~^ ERROR non-exhaustive patterns: `(T1(()), V2(_))` not covered\n+        //~^ ERROR non-exhaustive patterns: `(T1(()), V2(_))` not covered\n         (T::T1(()), V::V1(i)) => (),\n-        (T::T2(()), V::V2(b)) => ()\n+        (T::T2(()), V::V2(b)) => (),\n     }\n }"}, {"sha": "0847045cdaa912c5f5bc178f5a8ca81c832c6aaf", "filename": "src/test/ui/pattern/usefulness/issue-2111.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-2111.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-2111.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-2111.rs?ref=2309783a0b65163041b03dce04d7df85dcabc2cd", "patch": "@@ -1,12 +1,11 @@\n fn foo(a: Option<usize>, b: Option<usize>) {\n-  match (a,b) {\n-  //~^ ERROR: non-exhaustive patterns: `(None, None)` not covered\n-    (Some(a), Some(b)) if a == b => { }\n-    (Some(_), None) |\n-    (None, Some(_)) => { }\n-  }\n+    match (a, b) {\n+        //~^ ERROR: non-exhaustive patterns: `(None, None)` not covered\n+        (Some(a), Some(b)) if a == b => {}\n+        (Some(_), None) | (None, Some(_)) => {}\n+    }\n }\n \n fn main() {\n-  foo(None, None);\n+    foo(None, None);\n }"}, {"sha": "f0609ccebc162707934c1fadc4d6f122a0ae2b5a", "filename": "src/test/ui/pattern/usefulness/issue-2111.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-2111.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-2111.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-2111.stderr?ref=2309783a0b65163041b03dce04d7df85dcabc2cd", "patch": "@@ -1,8 +1,8 @@\n error[E0004]: non-exhaustive patterns: `(None, None)` not covered\n-  --> $DIR/issue-2111.rs:2:9\n+  --> $DIR/issue-2111.rs:2:11\n    |\n-LL |   match (a,b) {\n-   |         ^^^^^ pattern `(None, None)` not covered\n+LL |     match (a, b) {\n+   |           ^^^^^^ pattern `(None, None)` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n    = note: the matched value is of type `(Option<usize>, Option<usize>)`"}, {"sha": "5454e80cdb4f305cbd2909563aef3d5caae2f6f6", "filename": "src/test/ui/pattern/usefulness/issue-56379.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-56379.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-56379.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-56379.rs?ref=2309783a0b65163041b03dce04d7df85dcabc2cd", "patch": "@@ -0,0 +1,14 @@\n+enum Foo {\n+    A(bool),\n+    B(bool),\n+    C(bool),\n+}\n+\n+fn main() {\n+    match Foo::A(true) {\n+        //~^ ERROR non-exhaustive patterns: `A(false)` not covered\n+        Foo::A(true) => {}\n+        Foo::B(true) => {}\n+        Foo::C(true) => {}\n+    }\n+}"}, {"sha": "661e0dbb439237da802a1b990c25d57c71ec30cd", "filename": "src/test/ui/pattern/usefulness/issue-56379.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-56379.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2309783a0b65163041b03dce04d7df85dcabc2cd/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-56379.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-56379.stderr?ref=2309783a0b65163041b03dce04d7df85dcabc2cd", "patch": "@@ -0,0 +1,20 @@\n+error[E0004]: non-exhaustive patterns: `A(false)` not covered\n+  --> $DIR/issue-56379.rs:8:11\n+   |\n+LL | / enum Foo {\n+LL | |     A(bool),\n+   | |     - not covered\n+LL | |     B(bool),\n+LL | |     C(bool),\n+LL | | }\n+   | |_- `Foo` defined here\n+...\n+LL |       match Foo::A(true) {\n+   |             ^^^^^^^^^^^^ pattern `A(false)` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+   = note: the matched value is of type `Foo`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0004`."}]}