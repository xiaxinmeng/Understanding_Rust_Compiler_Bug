{"sha": "2d4445f78447887034d9f867d6389bf6dc306a09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNDQ0NWY3ODQ0Nzg4NzAzNGQ5Zjg2N2Q2Mzg5YmY2ZGMzMDZhMDk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-29T00:30:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-05T14:37:11Z"}, "message": "rustc: Move {plugin,derive}_registrar_fn to queries", "tree": {"sha": "f9c33f4af150db4b2ca954ff97d75dae73c02fa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9c33f4af150db4b2ca954ff97d75dae73c02fa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d4445f78447887034d9f867d6389bf6dc306a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4445f78447887034d9f867d6389bf6dc306a09", "html_url": "https://github.com/rust-lang/rust/commit/2d4445f78447887034d9f867d6389bf6dc306a09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d4445f78447887034d9f867d6389bf6dc306a09/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "205bc9a80ab214244d44ac4c8c8f155520d00989", "url": "https://api.github.com/repos/rust-lang/rust/commits/205bc9a80ab214244d44ac4c8c8f155520d00989", "html_url": "https://github.com/rust-lang/rust/commit/205bc9a80ab214244d44ac4c8c8f155520d00989"}], "stats": {"total": 54, "additions": 29, "deletions": 25}, "files": [{"sha": "76f31eb5596e2a26e2d636d616c5ef3f6e0fd490", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=2d4445f78447887034d9f867d6389bf6dc306a09", "patch": "@@ -537,6 +537,8 @@ define_dep_nodes!( <'tcx>\n     [] ImplDefaultness(DefId),\n     [] ExportedSymbols(CrateNum),\n     [] NativeLibraries(CrateNum),\n+    [] PluginRegistrarFn(CrateNum),\n+    [] DeriveRegistrarFn(CrateNum),\n );\n \n trait DepNodeParams<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> : fmt::Debug {"}, {"sha": "9294530f5152ef994367c767d2d99e8454c1bb14", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=2d4445f78447887034d9f867d6389bf6dc306a09", "patch": "@@ -255,8 +255,6 @@ pub trait CrateStore {\n     fn original_crate_name(&self, cnum: CrateNum) -> Symbol;\n     fn crate_hash(&self, cnum: CrateNum) -> Svh;\n     fn crate_disambiguator(&self, cnum: CrateNum) -> Symbol;\n-    fn plugin_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>;\n-    fn derive_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>;\n \n     // resolve\n     fn def_key(&self, def: DefId) -> DefKey;\n@@ -359,10 +357,6 @@ impl CrateStore for DummyCrateStore {\n     fn crate_hash(&self, cnum: CrateNum) -> Svh { bug!(\"crate_hash\") }\n     fn crate_disambiguator(&self, cnum: CrateNum)\n                            -> Symbol { bug!(\"crate_disambiguator\") }\n-    fn plugin_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>\n-        { bug!(\"plugin_registrar_fn\") }\n-    fn derive_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>\n-        { bug!(\"derive_registrar_fn\") }\n \n     // resolve\n     fn def_key(&self, def: DefId) -> DefKey { bug!(\"def_key\") }"}, {"sha": "31a1f9aee4e3d35525b6d7e3c31d323720966393", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=2d4445f78447887034d9f867d6389bf6dc306a09", "patch": "@@ -599,6 +599,18 @@ impl<'tcx> QueryDescription for queries::native_libraries<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::plugin_registrar_fn<'tcx> {\n+    fn describe(_tcx: TyCtxt, _: CrateNum) -> String {\n+        format!(\"looking up the plugin registrar for a crate\")\n+    }\n+}\n+\n+impl<'tcx> QueryDescription for queries::derive_registrar_fn<'tcx> {\n+    fn describe(_tcx: TyCtxt, _: CrateNum) -> String {\n+        format!(\"looking up the derive registrar for a crate\")\n+    }\n+}\n+\n // If enabled, send a message to the profile-queries thread\n macro_rules! profq_msg {\n     ($tcx:expr, $msg:expr) => {\n@@ -1177,6 +1189,8 @@ define_maps! { <'tcx>\n     [] fn impl_defaultness: ImplDefaultness(DefId) -> hir::Defaultness,\n     [] fn exported_symbols: ExportedSymbols(CrateNum) -> Rc<Vec<DefId>>,\n     [] fn native_libraries: NativeLibraries(CrateNum) -> Rc<Vec<NativeLibrary>>,\n+    [] fn plugin_registrar_fn: PluginRegistrarFn(CrateNum) -> Option<DefId>,\n+    [] fn derive_registrar_fn: DeriveRegistrarFn(CrateNum) -> Option<DefId>,\n }\n \n fn type_param_predicates<'tcx>((item_id, param_id): (DefId, DefId)) -> DepConstructor<'tcx> {"}, {"sha": "27ee8fd5cddba796038ae849b329d8caed84f710", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=2d4445f78447887034d9f867d6389bf6dc306a09", "patch": "@@ -1064,7 +1064,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for PluginAsLibrary {\n         };\n \n         let prfn = match cx.sess().cstore.extern_mod_stmt_cnum(it.id) {\n-            Some(cnum) => cx.sess().cstore.plugin_registrar_fn(cnum),\n+            Some(cnum) => cx.tcx.plugin_registrar_fn(cnum),\n             None => {\n                 // Probably means we aren't linking the crate for some reason.\n                 //"}, {"sha": "842335212eed60e216e3d364ae4c4590cecebedb", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=2d4445f78447887034d9f867d6389bf6dc306a09", "patch": "@@ -165,6 +165,16 @@ provide! { <'tcx> tcx, def_id, cdata,\n     impl_defaultness => { cdata.get_impl_defaultness(def_id.index) }\n     exported_symbols => { Rc::new(cdata.get_exported_symbols(&tcx.dep_graph)) }\n     native_libraries => { Rc::new(cdata.get_native_libraries(&tcx.dep_graph)) }\n+    plugin_registrar_fn => {\n+        cdata.root.plugin_registrar_fn.map(|index| {\n+            DefId { krate: def_id.krate, index }\n+        })\n+    }\n+    derive_registrar_fn => {\n+        cdata.root.macro_derive_registrar.map(|index| {\n+            DefId { krate: def_id.krate, index }\n+        })\n+    }\n }\n \n pub fn provide_local<'tcx>(providers: &mut Providers<'tcx>) {\n@@ -283,22 +293,6 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(cnum).disambiguator()\n     }\n \n-    fn plugin_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>\n-    {\n-        self.get_crate_data(cnum).root.plugin_registrar_fn.map(|index| DefId {\n-            krate: cnum,\n-            index,\n-        })\n-    }\n-\n-    fn derive_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>\n-    {\n-        self.get_crate_data(cnum).root.macro_derive_registrar.map(|index| DefId {\n-            krate: cnum,\n-            index,\n-        })\n-    }\n-\n     /// Returns the `DefKey` for a given `DefId`. This indicates the\n     /// parent `DefId` as well as some idea of what kind of data the\n     /// `DefId` refers to."}, {"sha": "68f30b589c2c504f29fa7976b00cd4d5ab16870a", "filename": "src/librustc_trans/back/symbol_export.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4445f78447887034d9f867d6389bf6dc306a09/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs?ref=2d4445f78447887034d9f867d6389bf6dc306a09", "patch": "@@ -115,8 +115,8 @@ impl ExportedSymbols {\n \n             // If this crate is a plugin and/or a custom derive crate, then\n             // we're not even going to link those in so we skip those crates.\n-            if tcx.sess.cstore.plugin_registrar_fn(cnum).is_some() ||\n-               tcx.sess.cstore.derive_registrar_fn(cnum).is_some() {\n+            if tcx.plugin_registrar_fn(cnum).is_some() ||\n+               tcx.derive_registrar_fn(cnum).is_some() {\n                 continue;\n             }\n "}]}