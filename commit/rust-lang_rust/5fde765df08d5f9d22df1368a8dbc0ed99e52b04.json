{"sha": "5fde765df08d5f9d22df1368a8dbc0ed99e52b04", "node_id": "C_kwDOAAsO6NoAKDVmZGU3NjVkZjA4ZDVmOWQyMmRmMTM2OGE4ZGJjMGVkOTllNTJiMDQ", "commit": {"author": {"name": "Kelsey Gilbert", "email": "jdashg@gmail.com", "date": "2022-05-10T23:15:48Z"}, "committer": {"name": "Kelsey Gilbert", "email": "jdashg@gmail.com", "date": "2022-05-12T23:34:02Z"}, "message": "[save-analysis] Reference the variant not enum at struct-literal construction.\n\nCloses #96985", "tree": {"sha": "98719d5624a32d850c41573a4a605a171bb352ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98719d5624a32d850c41573a4a605a171bb352ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fde765df08d5f9d22df1368a8dbc0ed99e52b04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fde765df08d5f9d22df1368a8dbc0ed99e52b04", "html_url": "https://github.com/rust-lang/rust/commit/5fde765df08d5f9d22df1368a8dbc0ed99e52b04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fde765df08d5f9d22df1368a8dbc0ed99e52b04/comments", "author": {"login": "kdashg", "id": 1471629, "node_id": "MDQ6VXNlcjE0NzE2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1471629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdashg", "html_url": "https://github.com/kdashg", "followers_url": "https://api.github.com/users/kdashg/followers", "following_url": "https://api.github.com/users/kdashg/following{/other_user}", "gists_url": "https://api.github.com/users/kdashg/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdashg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdashg/subscriptions", "organizations_url": "https://api.github.com/users/kdashg/orgs", "repos_url": "https://api.github.com/users/kdashg/repos", "events_url": "https://api.github.com/users/kdashg/events{/privacy}", "received_events_url": "https://api.github.com/users/kdashg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kdashg", "id": 1471629, "node_id": "MDQ6VXNlcjE0NzE2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1471629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdashg", "html_url": "https://github.com/kdashg", "followers_url": "https://api.github.com/users/kdashg/followers", "following_url": "https://api.github.com/users/kdashg/following{/other_user}", "gists_url": "https://api.github.com/users/kdashg/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdashg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdashg/subscriptions", "organizations_url": "https://api.github.com/users/kdashg/orgs", "repos_url": "https://api.github.com/users/kdashg/repos", "events_url": "https://api.github.com/users/kdashg/events{/privacy}", "received_events_url": "https://api.github.com/users/kdashg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88860d5474a32f507dde8fba8df35fd2064f11b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/88860d5474a32f507dde8fba8df35fd2064f11b9", "html_url": "https://github.com/rust-lang/rust/commit/88860d5474a32f507dde8fba8df35fd2064f11b9"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "fe417f45e88d972d16e2ddfdb35ffabee5ae37a6", "filename": "compiler/rustc_save_analysis/src/dump_visitor.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5fde765df08d5f9d22df1368a8dbc0ed99e52b04/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fde765df08d5f9d22df1368a8dbc0ed99e52b04/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs?ref=5fde765df08d5f9d22df1368a8dbc0ed99e52b04", "patch": "@@ -780,13 +780,18 @@ impl<'tcx> DumpVisitor<'tcx> {\n         variant: &'tcx ty::VariantDef,\n         rest: Option<&'tcx hir::Expr<'tcx>>,\n     ) {\n-        if let Some(struct_lit_data) = self.save_ctxt.get_expr_data(ex) {\n+        if let Some(_ex_res_data) = self.save_ctxt.get_expr_data(ex) {\n             if let hir::QPath::Resolved(_, path) = path {\n                 self.write_sub_paths_truncated(path);\n             }\n-            down_cast_data!(struct_lit_data, RefData, ex.span);\n+            // For MyEnum::MyVariant, get_expr_data gives us MyEnum, not MyVariant.\n+            // For recording the span's ref id, we want MyVariant.\n             if !generated_code(ex.span) {\n-                self.dumper.dump_ref(struct_lit_data);\n+                let sub_span = path.last_segment_span();\n+                let span = self.save_ctxt.span_from_span(sub_span);\n+                let reff =\n+                    Ref { kind: RefKind::Type, span, ref_id: id_from_def_id(variant.def_id) };\n+                self.dumper.dump_ref(reff);\n             }\n \n             for field in fields {"}]}