{"sha": "acdce638528618c9f1113b651e296031c7c2a85c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZGNlNjM4NTI4NjE4YzlmMTExM2I2NTFlMjk2MDMxYzdjMmE4NWM=", "commit": {"author": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2014-05-15T00:07:50Z"}, "committer": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2014-05-15T00:07:50Z"}, "message": "Tidy up the HashMap.mangle example.", "tree": {"sha": "47a73f5bf486678905c11495a089c2d034fabc19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47a73f5bf486678905c11495a089c2d034fabc19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acdce638528618c9f1113b651e296031c7c2a85c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acdce638528618c9f1113b651e296031c7c2a85c", "html_url": "https://github.com/rust-lang/rust/commit/acdce638528618c9f1113b651e296031c7c2a85c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acdce638528618c9f1113b651e296031c7c2a85c/comments", "author": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "460b55262e0d9ec0aa264fa9db397eebc38cc9c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/460b55262e0d9ec0aa264fa9db397eebc38cc9c2", "html_url": "https://github.com/rust-lang/rust/commit/460b55262e0d9ec0aa264fa9db397eebc38cc9c2"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "64a70c93b057ac3001153f2ddf960f328ef8f3bd", "filename": "src/libcollections/hashmap.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/acdce638528618c9f1113b651e296031c7c2a85c/src%2Flibcollections%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acdce638528618c9f1113b651e296031c7c2a85c/src%2Flibcollections%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fhashmap.rs?ref=acdce638528618c9f1113b651e296031c7c2a85c", "patch": "@@ -1275,15 +1275,14 @@ impl<K: TotalEq + Hash<S>, V, S, H: Hasher<S>> HashMap<K, V, H> {\n     /// use collections::HashMap;\n     ///\n     /// // map some strings to vectors of strings\n-    /// let mut map = HashMap::<StrBuf, Vec<StrBuf>>::new();\n-    /// map.insert(StrBuf::from_str(\"a key\"), vec![StrBuf::from_str(\"value\")]);\n-    /// map.insert(StrBuf::from_str(\"z key\"), vec![StrBuf::from_str(\"value\")]);\n+    /// let mut map = HashMap::new();\n+    /// map.insert(\"a key\", vec![\"value\"]);\n+    /// map.insert(\"z key\", vec![\"value\"]);\n+    ///\n+    /// let new = vec![\"a key\", \"b key\", \"z key\"];\n     ///\n-    /// let new = vec![StrBuf::from_str(\"a key\"),\n-    ///                StrBuf::from_str(\"b key\"),\n-    ///                StrBuf::from_str(\"z key\")];\n     /// for k in new.move_iter() {\n-    ///     map.mangle(k, StrBuf::from_str(\"new value\"),\n+    ///     map.mangle(k, \"new value\",\n     ///                // if the key doesn't exist in the map yet, add it in\n     ///                // the obvious way.\n     ///                |_k, v| vec![v],\n@@ -1299,7 +1298,7 @@ impl<K: TotalEq + Hash<S>, V, S, H: Hasher<S>> HashMap<K, V, H> {\n     /// }\n     ///\n     /// for (k, v) in map.iter() {\n-    ///     println!(\"{} -> {:?}\", *k, *v);\n+    ///     println!(\"{} -> {}\", *k, *v);\n     /// }\n     /// ```\n     pub fn mangle<'a, A>(&'a mut self,"}]}