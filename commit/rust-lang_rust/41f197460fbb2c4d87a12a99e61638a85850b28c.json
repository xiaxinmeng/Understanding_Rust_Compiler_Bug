{"sha": "41f197460fbb2c4d87a12a99e61638a85850b28c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZjE5NzQ2MGZiYjJjNGQ4N2ExMmE5OWU2MTYzOGE4NTg1MGIyOGM=", "commit": {"author": {"name": "Grzegorz", "email": "grzegorz.bartoszek@thaumatec.com", "date": "2019-02-25T12:40:28Z"}, "committer": {"name": "Grzegorz", "email": "grzegorz.bartoszek@thaumatec.com", "date": "2019-02-25T12:40:28Z"}, "message": "redundant_closure does not trigger for external macros", "tree": {"sha": "6fda5120798b3a659061fbd1c04d51ad1ded0811", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fda5120798b3a659061fbd1c04d51ad1ded0811"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f197460fbb2c4d87a12a99e61638a85850b28c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f197460fbb2c4d87a12a99e61638a85850b28c", "html_url": "https://github.com/rust-lang/rust/commit/41f197460fbb2c4d87a12a99e61638a85850b28c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f197460fbb2c4d87a12a99e61638a85850b28c/comments", "author": null, "committer": null, "parents": [{"sha": "1233b39ca915c65131c6e404c24e69ab80bf5e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1233b39ca915c65131c6e404c24e69ab80bf5e0c", "html_url": "https://github.com/rust-lang/rust/commit/1233b39ca915c65131c6e404c24e69ab80bf5e0c"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "05793f32c6cc44b00c57bdaa117bf723d9c05b7e", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41f197460fbb2c4d87a12a99e61638a85850b28c/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f197460fbb2c4d87a12a99e61638a85850b28c/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=41f197460fbb2c4d87a12a99e61638a85850b28c", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{is_adjusted, iter_input_pats, snippet_opt, span_lint_and_then, type_is_unsafe_function};\n use if_chain::if_chain;\n use rustc::hir::*;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty;\n use rustc::{declare_tool_lint, lint_array};\n use rustc_errors::Applicability;\n@@ -45,6 +45,10 @@ impl LintPass for EtaPass {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EtaPass {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n+        if in_external_macro(cx.sess(), expr.span) {\n+            return;\n+        }\n+\n         match expr.node {\n             ExprKind::Call(_, ref args) | ExprKind::MethodCall(_, _, ref args) => {\n                 for arg in args {"}]}