{"sha": "0133941f47b039d652f5d9f2617b7d3884298515", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMzM5NDFmNDdiMDM5ZDY1MmY1ZDlmMjYxN2I3ZDM4ODQyOTg1MTU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-08-25T18:59:51Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-09-05T14:07:16Z"}, "message": "Add an ExpnKind for AST passes", "tree": {"sha": "174ece281c559f73ae64ea3c597ee3e61c696d8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/174ece281c559f73ae64ea3c597ee3e61c696d8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0133941f47b039d652f5d9f2617b7d3884298515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0133941f47b039d652f5d9f2617b7d3884298515", "html_url": "https://github.com/rust-lang/rust/commit/0133941f47b039d652f5d9f2617b7d3884298515", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0133941f47b039d652f5d9f2617b7d3884298515/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ade61a4f1515d4a18f38dacdbdb592bfd384a84", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ade61a4f1515d4a18f38dacdbdb592bfd384a84", "html_url": "https://github.com/rust-lang/rust/commit/5ade61a4f1515d4a18f38dacdbdb592bfd384a84"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "532485b5d77bb3804167704bcfa724215fb3170e", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=0133941f47b039d652f5d9f2617b7d3884298515", "patch": "@@ -411,9 +411,17 @@ impl_stable_hash_for!(struct ::syntax_pos::hygiene::ExpnData {\n impl_stable_hash_for!(enum ::syntax_pos::hygiene::ExpnKind {\n     Root,\n     Macro(kind, descr),\n+    AstPass(kind),\n     Desugaring(kind)\n });\n \n+impl_stable_hash_for!(enum ::syntax_pos::hygiene::AstPass {\n+    StdImports,\n+    TestHarness,\n+    ProcMacroHarness,\n+    PluginMacroDefs,\n+});\n+\n impl_stable_hash_for!(enum ::syntax_pos::hygiene::DesugaringKind {\n     CondTemporary,\n     Async,"}, {"sha": "1b133819a73bffefa995aceeae9fdd7f6611ec00", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=0133941f47b039d652f5d9f2617b7d3884298515", "patch": "@@ -888,7 +888,7 @@ pub fn in_external_macro(sess: &Session, span: Span) -> bool {\n     let expn_data = span.ctxt().outer_expn_data();\n     match expn_data.kind {\n         ExpnKind::Root | ExpnKind::Desugaring(DesugaringKind::ForLoop) => false,\n-        ExpnKind::Desugaring(_) => true, // well, it's \"external\"\n+        ExpnKind::AstPass(_) | ExpnKind::Desugaring(_) => true, // well, it's \"external\"\n         ExpnKind::Macro(MacroKind::Bang, _) => {\n             if expn_data.def_site.is_dummy() {\n                 // dummy span for the def_site means it's an external macro"}, {"sha": "237a02f2f667a4b3dd4c375fa6fc758992054c88", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=0133941f47b039d652f5d9f2617b7d3884298515", "patch": "@@ -639,8 +639,9 @@ pub enum ExpnKind {\n     /// No expansion, aka root expansion. Only `ExpnId::root()` has this kind.\n     Root,\n     /// Expansion produced by a macro.\n-    /// FIXME: Some code injected by the compiler before HIR lowering also gets this kind.\n     Macro(MacroKind, Symbol),\n+    /// Transform done by the compiler on the AST.\n+    AstPass(AstPass),\n     /// Desugaring done by the compiler during HIR lowering.\n     Desugaring(DesugaringKind)\n }\n@@ -650,6 +651,7 @@ impl ExpnKind {\n         match *self {\n             ExpnKind::Root => kw::PathRoot,\n             ExpnKind::Macro(_, descr) => descr,\n+            ExpnKind::AstPass(kind) => Symbol::intern(kind.descr()),\n             ExpnKind::Desugaring(kind) => Symbol::intern(kind.descr()),\n         }\n     }\n@@ -683,6 +685,26 @@ impl MacroKind {\n     }\n }\n \n+/// The kind of AST transform.\n+#[derive(Clone, Copy, PartialEq, Debug, RustcEncodable, RustcDecodable)]\n+pub enum AstPass {\n+    StdImports,\n+    TestHarness,\n+    ProcMacroHarness,\n+    PluginMacroDefs,\n+}\n+\n+impl AstPass {\n+    fn descr(self) -> &'static str {\n+        match self {\n+            AstPass::StdImports => \"standard library imports\",\n+            AstPass::TestHarness => \"test harness\",\n+            AstPass::ProcMacroHarness => \"proc macro harness\",\n+            AstPass::PluginMacroDefs => \"plugin macro definitions\",\n+        }\n+    }\n+}\n+\n /// The kind of compiler desugaring.\n #[derive(Clone, Copy, PartialEq, Debug, RustcEncodable, RustcDecodable)]\n pub enum DesugaringKind {"}, {"sha": "d800109cf8531b04e856be56f37c4cf67f6b18d8", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0133941f47b039d652f5d9f2617b7d3884298515/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=0133941f47b039d652f5d9f2617b7d3884298515", "patch": "@@ -442,6 +442,7 @@ impl Span {\n                 let (pre, post) = match expn_data.kind {\n                     ExpnKind::Root => break,\n                     ExpnKind::Desugaring(..) => (\"desugaring of \", \"\"),\n+                    ExpnKind::AstPass(..) => (\"\", \"\"),\n                     ExpnKind::Macro(macro_kind, _) => match macro_kind {\n                         MacroKind::Bang => (\"\", \"!\"),\n                         MacroKind::Attr => (\"#[\", \"]\"),"}]}