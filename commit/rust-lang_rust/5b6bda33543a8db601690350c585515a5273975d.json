{"sha": "5b6bda33543a8db601690350c585515a5273975d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNmJkYTMzNTQzYThkYjYwMTY5MDM1MGM1ODU1MTVhNTI3Mzk3NWQ=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-05-07T22:58:58Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-05-10T15:18:46Z"}, "message": "turn a couple of fixmes into span_bugs", "tree": {"sha": "a7fedf5d0dcb43a8bd3b636ab9f0b9a6b39c8ce6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7fedf5d0dcb43a8bd3b636ab9f0b9a6b39c8ce6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b6bda33543a8db601690350c585515a5273975d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6bda33543a8db601690350c585515a5273975d", "html_url": "https://github.com/rust-lang/rust/commit/5b6bda33543a8db601690350c585515a5273975d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b6bda33543a8db601690350c585515a5273975d/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac53da03dad79655e2f3e65a58f94a2f3314d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac53da03dad79655e2f3e65a58f94a2f3314d5f", "html_url": "https://github.com/rust-lang/rust/commit/0ac53da03dad79655e2f3e65a58f94a2f3314d5f"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "e3586c1854c1775b083dea9015106be62b7c7506", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5b6bda33543a8db601690350c585515a5273975d/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6bda33543a8db601690350c585515a5273975d/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=5b6bda33543a8db601690350c585515a5273975d", "patch": "@@ -170,10 +170,9 @@ pub fn transcribe(\n                     }\n \n                     LockstepIterSize::Contradiction(ref msg) => {\n-                        // FIXME: this should be impossible. I (mark-i-m) believe it would\n-                        // represent a bug in the macro_parser.\n-                        // FIXME #2887 blame macro invoker instead\n-                        cx.span_fatal(seq.span(), &msg[..]);\n+                        // This should never happen because the macro parser should generate\n+                        // properly-sized matches for all meta-vars.\n+                        cx.span_bug(seq.span(), &msg[..]);\n                     }\n \n                     LockstepIterSize::Constraint(len, _) => {\n@@ -188,14 +187,13 @@ pub fn transcribe(\n                         // Is the repetition empty?\n                         if len == 0 {\n                             if seq.op == quoted::KleeneOp::OneOrMore {\n-                                // FIXME: this should be impossible because we check for this in\n-                                // macro_parser.rs\n-                                // FIXME #2887 blame invoker\n-                                cx.span_fatal(sp.entire(), \"this must repeat at least once\");\n+                                // This should be impossible because the macro parser would not\n+                                // match the given macro arm.\n+                                cx.span_bug(sp.entire(), \"this must repeat at least once\");\n                             }\n                         } else {\n                             // 0 is the initial counter (we have done 0 repretitions so far). `len`\n-                            //   is the total number of reptitions we should generate.\n+                            // is the total number of reptitions we should generate.\n                             repeats.push((0, len));\n \n                             // The first time we encounter the sequence we push it to the stack. It"}]}