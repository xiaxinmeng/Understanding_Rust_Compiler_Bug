{"sha": "b03a218b573511d15fd5b398a5c1db1509ab8d59", "node_id": "C_kwDOAAsO6NoAKGIwM2EyMThiNTczNTExZDE1ZmQ1YjM5OGE1YzFkYjE1MDlhYjhkNTk", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-27T15:17:09Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-27T15:17:09Z"}, "message": "fix: Fix proc-macro paths using incorrect CrateId's for rust-project.json workspaces", "tree": {"sha": "67115f582fece39587690c9d696d26e52797b102", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67115f582fece39587690c9d696d26e52797b102"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b03a218b573511d15fd5b398a5c1db1509ab8d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b03a218b573511d15fd5b398a5c1db1509ab8d59", "html_url": "https://github.com/rust-lang/rust/commit/b03a218b573511d15fd5b398a5c1db1509ab8d59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b03a218b573511d15fd5b398a5c1db1509ab8d59/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c04a13cb1982fbdb207825a3213e2bc94ddcb836", "url": "https://api.github.com/repos/rust-lang/rust/commits/c04a13cb1982fbdb207825a3213e2bc94ddcb836", "html_url": "https://github.com/rust-lang/rust/commit/c04a13cb1982fbdb207825a3213e2bc94ddcb836"}], "stats": {"total": 66, "additions": 32, "deletions": 34}, "files": [{"sha": "916447fdffa9791c59327b9e6ead468ef30cb789", "filename": "crates/project-model/src/workspace.rs", "status": "modified", "additions": 32, "deletions": 34, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/b03a218b573511d15fd5b398a5c1db1509ab8d59/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b03a218b573511d15fd5b398a5c1db1509ab8d59/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fworkspace.rs?ref=b03a218b573511d15fd5b398a5c1db1509ab8d59", "patch": "@@ -704,15 +704,7 @@ fn project_json_to_crate_graph(\n         })\n         .map(|(crate_id, krate, file_id)| {\n             let env = krate.env.clone().into_iter().collect();\n-            if let Some(path) = krate.proc_macro_dylib_path.clone() {\n-                proc_macros.insert(\n-                    crate_id,\n-                    Some((\n-                        krate.display_name.as_ref().map(|it| it.canonical_name().to_owned()),\n-                        path,\n-                    )),\n-                );\n-            }\n+\n             let target_cfgs = match krate.target.as_deref() {\n                 Some(target) => cfg_cache\n                     .entry(target)\n@@ -722,31 +714,37 @@ fn project_json_to_crate_graph(\n \n             let mut cfg_options = CfgOptions::default();\n             cfg_options.extend(target_cfgs.iter().chain(krate.cfg.iter()).cloned());\n-            (\n-                crate_id,\n-                crate_graph.add_crate_root(\n-                    file_id,\n-                    krate.edition,\n-                    krate.display_name.clone(),\n-                    krate.version.clone(),\n-                    cfg_options.clone(),\n-                    cfg_options,\n-                    env,\n-                    krate.is_proc_macro,\n-                    if krate.display_name.is_some() {\n-                        CrateOrigin::CratesIo {\n-                            repo: krate.repository.clone(),\n-                            name: krate\n-                                .display_name\n-                                .clone()\n-                                .map(|n| n.canonical_name().to_string()),\n-                        }\n-                    } else {\n-                        CrateOrigin::CratesIo { repo: None, name: None }\n-                    },\n-                    target_layout.clone(),\n-                ),\n-            )\n+            let crate_graph_crate_id = crate_graph.add_crate_root(\n+                file_id,\n+                krate.edition,\n+                krate.display_name.clone(),\n+                krate.version.clone(),\n+                cfg_options.clone(),\n+                cfg_options,\n+                env,\n+                krate.is_proc_macro,\n+                if krate.display_name.is_some() {\n+                    CrateOrigin::CratesIo {\n+                        repo: krate.repository.clone(),\n+                        name: krate.display_name.clone().map(|n| n.canonical_name().to_string()),\n+                    }\n+                } else {\n+                    CrateOrigin::CratesIo { repo: None, name: None }\n+                },\n+                target_layout.clone(),\n+            );\n+            if krate.is_proc_macro {\n+                if let Some(path) = krate.proc_macro_dylib_path.clone() {\n+                    proc_macros.insert(\n+                        crate_graph_crate_id,\n+                        Some((\n+                            krate.display_name.as_ref().map(|it| it.canonical_name().to_owned()),\n+                            path,\n+                        )),\n+                    );\n+                }\n+            }\n+            (crate_id, crate_graph_crate_id)\n         })\n         .collect();\n "}]}