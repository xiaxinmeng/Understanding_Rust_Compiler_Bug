{"sha": "260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MGY3M2VkODVjZGYxNDIxZWUxYjFkMjQxYjNjY2E0MzhhNGFjNDQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-09T21:56:11Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-10T23:33:21Z"}, "message": "Get rid of unused fields in tydescs. Closes #2351.", "tree": {"sha": "90356b7f8e56425fb317ab0370b67d37150f66a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90356b7f8e56425fb317ab0370b67d37150f66a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "html_url": "https://github.com/rust-lang/rust/commit/260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35bfaf50b096457dfc7d9a3728108b6a9324aa10", "url": "https://api.github.com/repos/rust-lang/rust/commits/35bfaf50b096457dfc7d9a3728108b6a9324aa10", "html_url": "https://github.com/rust-lang/rust/commit/35bfaf50b096457dfc7d9a3728108b6a9324aa10"}], "stats": {"total": 94, "additions": 28, "deletions": 66}, "files": [{"sha": "92913c3e28de1b3dd3231e85e6b77eceea2afb10", "filename": "src/libcore/sys.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Flibcore%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Flibcore%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsys.rs?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -10,7 +10,6 @@ export log_str;\n export lock_and_signal, condition, methods;\n \n enum type_desc = {\n-    first_param: **libc::c_int,\n     size: libc::size_t,\n     align: libc::size_t\n     // Remaining fields not listed"}, {"sha": "cb4afa904c9068a6dec99f92071a9db50a52dee5", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -484,8 +484,7 @@ log::walk_res2(const rust_fn *dtor, const uint8_t *end_sp) {\n \n extern \"C\" void\n shape_cmp_type(int8_t *result, const type_desc *tydesc,\n-               const type_desc **subtydescs, uint8_t *data_0,\n-               uint8_t *data_1, uint8_t cmp_type) {\n+               uint8_t *data_0, uint8_t *data_1, uint8_t cmp_type) {\n     rust_task *task = rust_get_current_task();\n     shape::arena arena;\n "}, {"sha": "036485825f1de73bdbcaf656d345315dd24e4191", "filename": "src/rt/rust_type.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_type.h", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_type.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_type.h?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -45,24 +45,15 @@ static inline void *box_body(rust_opaque_box *box) {\n     return (void*)(box + 1);\n }\n \n-// N.B. If you want to add a field to tydesc, please use one of the\n-// unused fields!\n struct type_desc {\n-    uintptr_t UNUSED_1;\n     size_t size;\n     size_t align;\n     glue_fn *take_glue;\n     glue_fn *drop_glue;\n     glue_fn *free_glue;\n     glue_fn *visit_glue;\n-    uintptr_t UNUSED_2;\n-    uintptr_t UNUSED_3;\n-    uintptr_t UNUSED_4;\n-    uintptr_t UNUSED_5;\n     const uint8_t *shape;\n     const rust_shape_tables *shape_tables;\n-    uintptr_t UNUSED_6;\n-    uintptr_t UNUSED_7;\n };\n \n extern \"C\" type_desc *rust_clone_type_desc(type_desc*);"}, {"sha": "63b190b0a2522898074ec6c208365b448fdf16fe", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -444,30 +444,27 @@ upcall_rust_personality(int version,\n \n extern \"C\" void\n shape_cmp_type(int8_t *result, const type_desc *tydesc,\n-               const type_desc **subtydescs, uint8_t *data_0,\n-               uint8_t *data_1, uint8_t cmp_type);\n+               uint8_t *data_0, uint8_t *data_1, uint8_t cmp_type);\n \n struct s_cmp_type_args {\n     int8_t *result;\n     const type_desc *tydesc;\n-    const type_desc **subtydescs;\n     uint8_t *data_0;\n     uint8_t *data_1;\n     uint8_t cmp_type;\n };\n \n extern \"C\" void\n upcall_s_cmp_type(s_cmp_type_args *args) {\n-    shape_cmp_type(args->result, args->tydesc, args->subtydescs,\n+    shape_cmp_type(args->result, args->tydesc,\n                    args->data_0, args->data_1, args->cmp_type);\n }\n \n extern \"C\" void\n upcall_cmp_type(int8_t *result, const type_desc *tydesc,\n-                const type_desc **subtydescs, uint8_t *data_0,\n-                uint8_t *data_1, uint8_t cmp_type) {\n+                uint8_t *data_0, uint8_t *data_1, uint8_t cmp_type) {\n     rust_task *task = rust_get_current_task();\n-    s_cmp_type_args args = {result, tydesc, subtydescs,\n+    s_cmp_type_args args = {result, tydesc,\n                             data_0, data_1, cmp_type};\n     UPCALL_SWITCH_STACK(task, &args, upcall_s_cmp_type);\n }"}, {"sha": "cd765184c1eb4616c7420f405ba3e27aeb3e0d38", "filename": "src/rt/rust_util.cpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_util.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frt%2Frust_util.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.cpp?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -15,21 +15,14 @@ uint8_t str_body_shape[] = {\n };\n \n struct type_desc str_body_tydesc = {\n-    0, // unused\n     1, // size\n     1, // align\n     NULL, // take_glue\n     NULL, // drop_glue\n     NULL, // free_glue\n     NULL, // visit_glue\n-    0, // unused\n-    0, // unused\n-    0, // unused\n-    0, // unused\n     str_body_shape, // shape\n     &empty_shape_tables, // shape_tables\n-    0, // unused\n-    0, // unused\n };\n \n //"}, {"sha": "d6c0c5fa2dd716af386b0d320c5077b5030db271", "filename": "src/rustc/back/abi.rs", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fback%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fback%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Fabi.rs?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -33,22 +33,15 @@ const box_field_body: uint = 4u;\n \n const general_code_alignment: uint = 16u;\n \n-const tydesc_field_first_param: uint = 0u;\n-const tydesc_field_size: uint = 1u;\n-const tydesc_field_align: uint = 2u;\n-const tydesc_field_take_glue: uint = 3u;\n-const tydesc_field_drop_glue: uint = 4u;\n-const tydesc_field_free_glue: uint = 5u;\n-const tydesc_field_visit_glue: uint = 6u;\n-const tydesc_field_sever_glue: uint = 7u;\n-const tydesc_field_mark_glue: uint = 8u;\n-const tydesc_field_unused2: uint = 9u;\n-const tydesc_field_unused_2: uint = 10u;\n-const tydesc_field_shape: uint = 11u;\n-const tydesc_field_shape_tables: uint = 12u;\n-const tydesc_field_n_params: uint = 13u;\n-const tydesc_field_obj_params: uint = 14u; // FIXME unused (#2351)\n-const n_tydesc_fields: uint = 15u;\n+const tydesc_field_size: uint = 0u;\n+const tydesc_field_align: uint = 1u;\n+const tydesc_field_take_glue: uint = 2u;\n+const tydesc_field_drop_glue: uint = 3u;\n+const tydesc_field_free_glue: uint = 4u;\n+const tydesc_field_visit_glue: uint = 5u;\n+const tydesc_field_shape: uint = 6u;\n+const tydesc_field_shape_tables: uint = 7u;\n+const n_tydesc_fields: uint = 8u;\n \n const cmp_glue_op_eq: uint = 0u;\n "}, {"sha": "7e9ba91058afb4ea3ed382a07666be7b8e234cb7", "filename": "src/rustc/back/upcall.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Fupcall.rs?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -86,7 +86,7 @@ fn declare_upcalls(targ_cfg: @session::config,\n           cmp_type:\n               dv(\"cmp_type\",\n                  ~[T_ptr(T_i1()), T_ptr(tydesc_type),\n-                  T_ptr(T_ptr(tydesc_type)), T_ptr(T_i8()),\n+                  T_ptr(T_i8()),\n                   T_ptr(T_i8()),\n                   T_i8()]),\n           log_type:"}, {"sha": "05b17d1fbe7aa72ca5507eb7ecf4df57ab1f2f01", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -596,21 +596,14 @@ fn emit_tydescs(ccx: @crate_ctxt) {\n \n         let tydesc =\n             C_named_struct(ccx.tydesc_type,\n-                           ~[C_null(T_ptr(T_ptr(ccx.tydesc_type))),\n-                            ti.size, // size\n-                            ti.align, // align\n-                            take_glue, // take_glue\n-                            drop_glue, // drop_glue\n-                            free_glue, // free_glue\n-                            visit_glue, // visit_glue\n-                            C_int(ccx, 0), // unused\n-                            C_int(ccx, 0), // unused\n-                            C_int(ccx, 0), // unused\n-                            C_int(ccx, 0), // unused\n-                            C_shape(ccx, shape), // shape\n-                            shape_tables, // shape_tables\n-                            C_int(ccx, 0), // unused\n-                             C_int(ccx, 0)]); // unused\n+                           ~[ti.size, // size\n+                             ti.align, // align\n+                             take_glue, // take_glue\n+                             drop_glue, // drop_glue\n+                             free_glue, // free_glue\n+                             visit_glue, // visit_glue\n+                             C_shape(ccx, shape), // shape\n+                             shape_tables]); // shape_tables\n \n         let gvar = ti.tydesc;\n         llvm::LLVMSetInitializer(gvar, tydesc);\n@@ -1213,14 +1206,12 @@ fn call_cmp_glue(bcx: block, lhs: ValueRef, rhs: ValueRef, t: ty::t,\n     let llrawlhsptr = BitCast(bcx, lllhs, T_ptr(T_i8()));\n     let llrawrhsptr = BitCast(bcx, llrhs, T_ptr(T_i8()));\n     let lltydesc = get_tydesc_simple(bcx.ccx(), t);\n-    let lltydescs =\n-        Load(bcx, GEPi(bcx, lltydesc, ~[0u, abi::tydesc_field_first_param]));\n \n     let llfn = bcx.ccx().upcalls.cmp_type;\n \n     let llcmpresultptr = alloca(bcx, T_i1());\n-    Call(bcx, llfn, ~[llcmpresultptr, lltydesc, lltydescs,\n-                     llrawlhsptr, llrawrhsptr, llop]);\n+    Call(bcx, llfn, ~[llcmpresultptr, lltydesc,\n+                      llrawlhsptr, llrawrhsptr, llop]);\n     ret Load(bcx, llcmpresultptr);\n }\n "}, {"sha": "b72d219e8248d38552550b1a6f60ce1490ce6206", "filename": "src/rustc/middle/trans/common.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260f73ed85cdf1421ee1b1d241b3cca438a4ac44/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=260f73ed85cdf1421ee1b1d241b3cca438a4ac44", "patch": "@@ -660,10 +660,9 @@ fn T_tydesc(targ_cfg: @session::config) -> TypeRef {\n \n     let int_type = T_int(targ_cfg);\n     let elems =\n-        ~[tydescpp, int_type, int_type,\n-         glue_fn_ty, glue_fn_ty, glue_fn_ty, glue_fn_ty,\n-         int_type, int_type, int_type, int_type,\n-         T_ptr(T_i8()), T_ptr(T_i8()), int_type, int_type];\n+        ~[int_type, int_type,\n+          glue_fn_ty, glue_fn_ty, glue_fn_ty, glue_fn_ty,\n+          T_ptr(T_i8()), T_ptr(T_i8())];\n     set_struct_body(tydesc, elems);\n     ret tydesc;\n }"}]}