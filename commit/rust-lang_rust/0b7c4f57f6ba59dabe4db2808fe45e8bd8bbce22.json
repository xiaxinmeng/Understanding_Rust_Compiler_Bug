{"sha": "0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiN2M0ZjU3ZjZiYTU5ZGFiZTRkYjI4MDhmZTQ1ZThiZDhiYmNlMjI=", "commit": {"author": {"name": "Alex Newman", "email": "posix4e@gmail.com", "date": "2015-07-01T03:37:11Z"}, "committer": {"name": "Alex Newman", "email": "posix4e@gmail.com", "date": "2015-07-02T02:09:14Z"}, "message": "Add netbsd amd64 support", "tree": {"sha": "478355371ea4647da904962c0561350b029ae29c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/478355371ea4647da904962c0561350b029ae29c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "html_url": "https://github.com/rust-lang/rust/commit/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/comments", "author": {"login": "posix4e", "id": 806363, "node_id": "MDQ6VXNlcjgwNjM2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/806363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/posix4e", "html_url": "https://github.com/posix4e", "followers_url": "https://api.github.com/users/posix4e/followers", "following_url": "https://api.github.com/users/posix4e/following{/other_user}", "gists_url": "https://api.github.com/users/posix4e/gists{/gist_id}", "starred_url": "https://api.github.com/users/posix4e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/posix4e/subscriptions", "organizations_url": "https://api.github.com/users/posix4e/orgs", "repos_url": "https://api.github.com/users/posix4e/repos", "events_url": "https://api.github.com/users/posix4e/events{/privacy}", "received_events_url": "https://api.github.com/users/posix4e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "posix4e", "id": 806363, "node_id": "MDQ6VXNlcjgwNjM2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/806363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/posix4e", "html_url": "https://github.com/posix4e", "followers_url": "https://api.github.com/users/posix4e/followers", "following_url": "https://api.github.com/users/posix4e/following{/other_user}", "gists_url": "https://api.github.com/users/posix4e/gists{/gist_id}", "starred_url": "https://api.github.com/users/posix4e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/posix4e/subscriptions", "organizations_url": "https://api.github.com/users/posix4e/orgs", "repos_url": "https://api.github.com/users/posix4e/repos", "events_url": "https://api.github.com/users/posix4e/events{/privacy}", "received_events_url": "https://api.github.com/users/posix4e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2cf9f9632746701f72ded3a50de2c5d8e05b1b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2cf9f9632746701f72ded3a50de2c5d8e05b1b5", "html_url": "https://github.com/rust-lang/rust/commit/d2cf9f9632746701f72ded3a50de2c5d8e05b1b5"}], "stats": {"total": 312, "additions": 271, "deletions": 41}, "files": [{"sha": "1d3611f88f0a9bf77e400359c02676b85f1541e4", "filename": "configure", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/configure", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -405,6 +405,10 @@ case $CFG_OSTYPE in\n         CFG_OSTYPE=unknown-openbsd\n        ;;\n \n+    NetBSD)\n+\t    CFG_OSTYPE=unknown-netbsd\n+\t    ;;\n+\n     Darwin)\n         CFG_OSTYPE=apple-darwin\n         ;;"}, {"sha": "401b0fb7ab0082084a524bc93d515747b0dd9abf", "filename": "mk/cfg/x86_64-unknown-netbsd.mk", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/mk%2Fcfg%2Fx86_64-unknown-netbsd.mk", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/mk%2Fcfg%2Fx86_64-unknown-netbsd.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fx86_64-unknown-netbsd.mk?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -0,0 +1,22 @@\n+# x86_64-unknown-netbsd configuration\n+CC_x86_64-unknown-netbsd=$(CC)\n+CXX_x86_64-unknown-netbsd=$(CXX)\n+CPP_x86_64-unknown-netbsd=$(CPP)\n+AR_x86_64-unknown-netbsd=$(AR)\n+CFG_LIB_NAME_x86_64-unknown-netbsd=lib$(1).so\n+CFG_STATIC_LIB_NAME_x86_64-unknown-netbsd=lib$(1).a\n+CFG_LIB_GLOB_x86_64-unknown-netbsd=lib$(1)-*.so\n+CFG_LIB_DSYM_GLOB_x86_64-unknown-netbsd=$(1)-*.dylib.dSYM\n+CFG_JEMALLOC_CFLAGS_x86_64-unknown-netbsd := -I/usr/local/include $(CFLAGS)\n+CFG_GCCISH_CFLAGS_x86_64-unknown-netbsd := -Wall -Werror -g -fPIC -I/usr/local/include $(CFLAGS)\n+CFG_GCCISH_LINK_FLAGS_x86_64-unknown-netbsd := -shared -fPIC -g -pthread  -lrt\n+CFG_GCCISH_DEF_FLAG_x86_64-unknown-netbsd := -Wl,--export-dynamic,--dynamic-list=\n+CFG_LLC_FLAGS_x86_64-unknown-netbsd :=\n+CFG_INSTALL_NAME_x86_64-unknown-netbsd =\n+CFG_EXE_SUFFIX_x86_64-unknown-netbsd :=\n+CFG_WINDOWSY_x86_64-unknown-netbsd :=\n+CFG_UNIXY_x86_64-unknown-netbsd := 1\n+CFG_LDPATH_x86_64-unknown-netbsd :=\n+CFG_RUN_x86_64-unknown-netbsd=$(2)\n+CFG_RUN_TARG_x86_64-unknown-netbsd=$(call CFG_RUN_x86_64-unknown-netbsd,,$(2))\n+CFG_GNU_TRIPLE_x86_64-unknown-netbsd := x86_64-unknown-netbsd"}, {"sha": "13d6c029ff58458900dc57c34fc02fba75dab871", "filename": "src/compiletest/util.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fcompiletest%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fcompiletest%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Futil.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -21,6 +21,7 @@ const OS_TABLE: &'static [(&'static str, &'static str)] = &[\n     (\"ios\", \"ios\"),\n     (\"linux\", \"linux\"),\n     (\"mingw32\", \"windows\"),\n+    (\"netbsd\", \"netbsd\"),\n     (\"openbsd\", \"openbsd\"),\n     (\"win32\", \"windows\"),\n     (\"windows\", \"windows\"),"}, {"sha": "650e1d5541ecf173ab20bcfd48549ace5221fff4", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -2023,7 +2023,7 @@ The following configurations must be defined by the implementation:\n   as a configuration itself, like `unix` or `windows`.\n * `target_os = \"...\"`. Operating system of the target, examples include\n   `\"windows\"`, `\"macos\"`, `\"ios\"`, `\"linux\"`, `\"android\"`, `\"freebsd\"`, `\"dragonfly\"`,\n-  `\"bitrig\"` or `\"openbsd\"`.\n+  `\"bitrig\"` , `\"openbsd\"` or `\"netbsd\"`.\n * `target_pointer_width = \"...\"`. Target pointer width in bits. This is set\n   to `\"32\"` for targets with 32-bit pointers, and likewise set to `\"64\"` for\n   64-bit pointers."}, {"sha": "6d62a45c703a23561379d40467cb8337aa6efe40", "filename": "src/etc/snapshot.py", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fetc%2Fsnapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fetc%2Fsnapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsnapshot.py?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -41,13 +41,14 @@ def scrub(b):\n download_unpack_base = os.path.join(download_dir_base, \"unpack\")\n \n snapshot_files = {\n+        \"bitrig\": [\"bin/rustc\"],\n+        \"dragonfly\": [\"bin/rustc\"],\n+        \"freebsd\": [\"bin/rustc\"],\n         \"linux\": [\"bin/rustc\"],\n         \"macos\": [\"bin/rustc\"],\n-        \"winnt\": [\"bin/rustc.exe\"],\n-        \"freebsd\": [\"bin/rustc\"],\n-        \"dragonfly\": [\"bin/rustc\"],\n-        \"bitrig\": [\"bin/rustc\"],\n+        \"netbsd\": [\"bin/rustc\"],\n         \"openbsd\": [\"bin/rustc\"],\n+        \"winnt\": [\"bin/rustc.exe\"],\n         }\n \n winnt_runtime_deps_32 = [\"libgcc_s_dw2-1.dll\", \"libstdc++-6.dll\"]\n@@ -103,6 +104,8 @@ def get_kernel(triple):\n         return \"dragonfly\"\n     if os_name == \"bitrig\":\n         return \"bitrig\"\n+    if os_name == \"netbsd\":\n+        return \"netbsd\"\n     if os_name == \"openbsd\":\n         return \"openbsd\"\n     return \"linux\""}, {"sha": "f66811e561adf359d0e19ef75314a90fd6a156c3", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -1322,7 +1322,7 @@ pub mod types {\n         }\n     }\n \n-    #[cfg(any(target_os = \"bitrig\", target_os = \"openbsd\"))]\n+    #[cfg(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os =\"openbsd\"))]\n     pub mod os {\n         pub mod common {\n             pub mod posix01 {\n@@ -1351,7 +1351,7 @@ pub mod types {\n                     pub __unused7: *mut c_void,\n                 }\n \n-                #[cfg(target_os = \"openbsd\")]\n+                #[cfg(any(target_os = \"netbsd\", target_os=\"openbsd\"))]\n                 #[repr(C)]\n                 #[derive(Copy, Clone)] pub struct glob_t {\n                     pub gl_pathc:  c_int,\n@@ -4323,7 +4323,7 @@ pub mod consts {\n         }\n     }\n \n-    #[cfg(any(target_os = \"bitrig\", target_os = \"openbsd\"))]\n+    #[cfg(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n     pub mod os {\n         pub mod c95 {\n             use types::os::arch::c95::{c_int, c_uint};\n@@ -5568,6 +5568,7 @@ pub mod funcs {\n               target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\",\n               target_os = \"nacl\"))]\n     pub mod posix88 {\n@@ -5584,6 +5585,7 @@ pub mod funcs {\n                           target_os = \"freebsd\",\n                           target_os = \"dragonfly\",\n                           target_os = \"bitrig\",\n+                          target_os = \"netbsd\",\n                           target_os = \"openbsd\",\n                           target_os = \"android\",\n                           target_os = \"ios\",\n@@ -5602,6 +5604,7 @@ pub mod funcs {\n                           target_os = \"freebsd\",\n                           target_os = \"dragonfly\",\n                           target_os = \"bitrig\",\n+                          target_os = \"netbsd\",\n                           target_os = \"openbsd\",\n                           target_os = \"android\",\n                           target_os = \"ios\",\n@@ -5889,6 +5892,7 @@ pub mod funcs {\n               target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\",\n               target_os = \"nacl\"))]\n     pub mod posix01 {\n@@ -5901,6 +5905,7 @@ pub mod funcs {\n                           target_os = \"freebsd\",\n                           target_os = \"dragonfly\",\n                           target_os = \"bitrig\",\n+                          target_os = \"netbsd\",\n                           target_os = \"openbsd\",\n                           target_os = \"android\",\n                           target_os = \"ios\",\n@@ -6019,16 +6024,17 @@ pub mod funcs {\n     }\n \n \n-    #[cfg(any(target_os = \"windows\",\n-              target_os = \"linux\",\n-              target_os = \"android\",\n-              target_os = \"macos\",\n+    #[cfg(any(target_os = \"android\",\n+              target_os = \"bitrig\",\n+              target_os = \"dragonfly\",\n               target_os = \"ios\",\n               target_os = \"freebsd\",\n-              target_os = \"dragonfly\",\n-              target_os = \"bitrig\",\n+              target_os = \"linux\",\n+              target_os = \"macos\",\n+              target_os = \"nacl\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\",\n-              target_os = \"nacl\"))]\n+              target_os = \"windows\"))]\n     pub mod posix08 {\n         pub mod unistd {\n         }\n@@ -6115,6 +6121,7 @@ pub mod funcs {\n               target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     pub mod bsd44 {\n         use types::common::c95::{c_void};\n@@ -6192,6 +6199,7 @@ pub mod funcs {\n     #[cfg(any(target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     pub mod extra {\n     }"}, {"sha": "9e288f6ddb2bfaa7b985831bba59939b47a03f31", "filename": "src/librustc_back/arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Farm.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -61,7 +61,7 @@ pub fn get_target_strs(target_triple: String, target_os: abi::Os) -> target_strs\n                 -a:0:64-n32\".to_string()\n           }\n \n-          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd => {\n+          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd | abi::OsNetbsd => {\n             \"e-p:32:32:32\\\n                 -i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\\\n                 -f32:32:32-f64:64:64\\"}, {"sha": "e1edff817d6c1f27cf9e37285a5a4e4c1f58bb38", "filename": "src/librustc_back/mips.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Fmips.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -56,7 +56,7 @@ pub fn get_target_strs(target_triple: String, target_os: abi::Os) -> target_strs\n                 -a:0:64-n32\".to_string()\n           }\n \n-          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd => {\n+          abi::OsBitrig | abi::OsDragonfly | abi::OsFreebsd | abi::OsNetbsd | abi::OsOpenbsd => {\n             \"E-p:32:32:32\\\n                 -i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\\\n                 -f32:32:32-f64:64:64\\"}, {"sha": "ca52a9e56ff52978b7ed9c68801219182fe98249", "filename": "src/librustc_back/mipsel.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fmipsel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fmipsel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Fmipsel.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -56,7 +56,7 @@ pub fn get_target_strs(target_triple: String, target_os: abi::Os) -> target_strs\n                 -a:0:64-n32\".to_string()\n           }\n \n-          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd => {\n+          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd | abi::OsNetbsd => {\n             \"e-p:32:32:32\\\n                 -i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\\\n                 -f32:32:32-f64:64:64\\"}, {"sha": "bc5f306cd3568b8ad8a5521a5172eac59f9997fa", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -58,6 +58,7 @@ mod dragonfly_base;\n mod freebsd_base;\n mod linux_base;\n mod openbsd_base;\n+mod netbsd_base;\n mod windows_base;\n mod windows_msvc_base;\n \n@@ -368,6 +369,7 @@ impl Target {\n \n             x86_64_unknown_bitrig,\n             x86_64_unknown_openbsd,\n+            x86_64_unknown_netbsd,\n \n             x86_64_apple_darwin,\n             i686_apple_darwin,"}, {"sha": "0f2ab32be2431e059a37eeec09adb539ba7bbcef", "filename": "src/librustc_back/target/netbsd_base.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::TargetOptions;\n+use std::default::Default;\n+\n+pub fn opts() -> TargetOptions {\n+    TargetOptions {\n+        linker: \"cc\".to_string(),\n+        dynamic_linking: true,\n+        executables: true,\n+        morestack: false,\n+        linker_is_gnu: true,\n+        has_rpath: true,\n+        pre_link_args: vec!(\n+            // GNU-style linkers will use this to omit linking to libraries\n+            // which don't actually fulfill any relocations, but only for\n+            // libraries which follow this flag.  Thus, use it before\n+            // specifying libraries to link to.\n+            \"-Wl,--as-needed\".to_string(),\n+        ),\n+        position_independent_executables: true,\n+        .. Default::default()\n+    }\n+}"}, {"sha": "3f5bd39949ab60e9066fddfe5e54872ed31ba102", "filename": "src/librustc_back/target/x86_64_unknown_netbsd.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::Target;\n+\n+pub fn target() -> Target {\n+    let mut base = super::netbsd_base::opts();\n+    base.pre_link_args.push(\"-m64\".to_string());\n+\n+    Target {\n+        data_layout: \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-\\\n+                     f32:32:32-f64:64:64-v64:64:64-v128:128:128-a:0:64-\\\n+                     s0:64:64-f80:128:128-n8:16:32:64-S128\".to_string(),\n+        llvm_target: \"x86_64-unknown-netbsd\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        arch: \"x86_64\".to_string(),\n+        target_os: \"netbsd\".to_string(),\n+        target_env: \"\".to_string(),\n+        options: base,\n+    }\n+}"}, {"sha": "46e0a83ac033b681387cdc07c188c676cdefc3d8", "filename": "src/librustc_back/x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Fx86.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -45,7 +45,7 @@ pub fn get_target_strs(target_triple: String, target_os: abi::Os)\n             \"e-p:32:32-f64:32:64-i64:32:64-f80:32:32-n8:16:32\".to_string()\n           }\n \n-          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd => {\n+          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd | abi::OsNetbsd => {\n             \"e-p:32:32-f64:32:64-i64:32:64-f80:32:32-n8:16:32\".to_string()\n           }\n "}, {"sha": "abdcd56444213e121fbb7f023a6df1674716d554", "filename": "src/librustc_back/x86_64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustc_back%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Fx86_64.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -47,7 +47,7 @@ pub fn get_target_strs(target_triple: String, target_os: abi::Os) -> target_strs\n                 s0:64:64-f80:128:128-n8:16:32:64-S128\".to_string()\n           }\n \n-          abi::OsFreebsd | abi::OsDragonfly | abi::OsBitrig | abi::OsOpenbsd => {\n+          abi::OsBitrig | abi::OsDragonfly | abi::OsFreebsd | abi::OsNetbsd | abi::OsOpenbsd => {\n             \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-\\\n                 f32:32:32-f64:64:64-v64:64:64-v128:128:128-a:0:64-\\\n                 s0:64:64-f80:128:128-n8:16:32:64-S128\".to_string()"}, {"sha": "847e28d2bc510f7c8816174f05e67c4ba66505ff", "filename": "src/librustdoc/flock.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustdoc%2Fflock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibrustdoc%2Fflock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fflock.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -68,6 +68,7 @@ mod imp {\n \n     #[cfg(any(target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     mod os {\n         use libc;"}, {"sha": "3621d18daed818b27fe2ad08b5809804d7c09926", "filename": "src/libstd/dynamic_lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdynamic_lib.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -160,6 +160,7 @@ mod tests {\n               target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     fn test_errors_do_not_crash() {\n         // Open /dev/null as a library to get an error, and make sure\n@@ -179,6 +180,7 @@ mod tests {\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n mod dl {\n     use prelude::v1::*;"}, {"sha": "7c2cd615303c0c19e2e30a6466d3e3e9ec9d44da", "filename": "src/libstd/env.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -633,6 +633,7 @@ pub mod consts {\n     /// - freebsd\n     /// - dragonfly\n     /// - bitrig\n+    /// - netbsd\n     /// - openbsd\n     /// - android\n     /// - windows\n@@ -759,6 +760,17 @@ mod os {\n     pub const EXE_EXTENSION: &'static str = \"\";\n }\n \n+#[cfg(target_os = \"netbsd\")]\n+mod os {\n+    pub const FAMILY: &'static str = \"unix\";\n+    pub const OS: &'static str = \"netbsd\";\n+    pub const DLL_PREFIX: &'static str = \"lib\";\n+    pub const DLL_SUFFIX: &'static str = \".so\";\n+    pub const DLL_EXTENSION: &'static str = \"so\";\n+    pub const EXE_SUFFIX: &'static str = \"\";\n+    pub const EXE_EXTENSION: &'static str = \"\";\n+}\n+\n #[cfg(target_os = \"openbsd\")]\n mod os {\n     pub const FAMILY: &'static str = \"unix\";"}, {"sha": "085ba286dc3d94d626147e7ca993cabdd7d55c2f", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -904,7 +904,7 @@ mod tests {\n \n     // FIXME: re-enabled bitrig/openbsd tests once their socket timeout code\n     //        no longer has rounding errors.\n-    #[cfg_attr(any(target_os = \"bitrig\", target_os = \"openbsd\"), ignore)]\n+    #[cfg_attr(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"), ignore)]\n     #[test]\n     fn timeouts() {\n         let addr = next_test_ip4();"}, {"sha": "0545175d9aee90cb788002205bae53f7d190a4a2", "filename": "src/libstd/net/udp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fudp.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -360,9 +360,9 @@ mod tests {\n         assert_eq!(format!(\"{:?}\", udpsock), compare);\n     }\n \n-    // FIXME: re-enabled bitrig/openbsd tests once their socket timeout code\n+    // FIXME: re-enabled bitrig/openbsd/netbsd tests once their socket timeout code\n     //        no longer has rounding errors.\n-    #[cfg_attr(any(target_os = \"bitrig\", target_os = \"openbsd\"), ignore)]\n+    #[cfg_attr(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"), ignore)]\n     #[test]\n     fn timeouts() {\n         let addr = next_test_ip4();"}, {"sha": "859cb900460c54bc7f8fc1449c54b5ed58fd5775", "filename": "src/libstd/os/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fmod.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -24,6 +24,7 @@\n #[cfg(target_os = \"linux\")]     pub mod linux;\n #[cfg(target_os = \"macos\")]     pub mod macos;\n #[cfg(target_os = \"nacl\")]      pub mod nacl;\n+#[cfg(target_os = \"netbsd\")]   pub mod netbsd;\n #[cfg(target_os = \"openbsd\")]   pub mod openbsd;\n \n pub mod raw;"}, {"sha": "bdb003b877babc796d66230326e8a9c3448ede46", "filename": "src/libstd/os/netbsd/mod.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fos%2Fnetbsd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fos%2Fnetbsd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fnetbsd%2Fmod.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! OpenBSD-specific definitions\n+\n+#![stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+\n+pub mod raw;\n+\n+pub mod fs {\n+    #![stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub use sys::fs::MetadataExt;\n+}"}, {"sha": "f9898dfbdb537eaedc2810790c644c18f7c794f4", "filename": "src/libstd/os/netbsd/raw.rs", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fos%2Fnetbsd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fos%2Fnetbsd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fnetbsd%2Fraw.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -0,0 +1,71 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! NetBSD/OpenBSD-specific raw type definitions\n+\n+#![stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+\n+use os::raw::c_long;\n+use os::unix::raw::{uid_t, gid_t};\n+\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blkcnt_t = i64;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blksize_t = u32;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type dev_t = i32;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type fflags_t = u32;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type ino_t = u64;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type mode_t = u32;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type nlink_t = u32;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = i64;\n+\n+#[repr(C)]\n+#[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+pub struct stat {\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_mode: mode_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_dev: dev_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_ino: ino_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_nlink: nlink_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_uid: uid_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_gid: gid_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_rdev: dev_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_atime: time_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_atime_nsec: c_long,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_mtime: time_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_mtime_nsec: c_long,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_ctime: time_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_ctime_nsec: c_long,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_size: off_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_blocks: blkcnt_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_blksize: blksize_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_flags: fflags_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_gen: u32,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_birthtime: time_t,\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n+    pub st_birthtime_nsec: c_long,\n+}"}, {"sha": "52697f00264beb4f3bd5232ead6109a8f8f7abfe", "filename": "src/libstd/rt/args.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Frt%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Frt%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fargs.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -44,6 +44,7 @@ pub fn clone() -> Option<Vec<Vec<u8>>> { imp::clone() }\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n mod imp {\n     use prelude::v1::*;"}, {"sha": "d99b31c9f2b4318ded1c96f695b7bae2d088d7b9", "filename": "src/libstd/rt/libunwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Frt%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Frt%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flibunwind.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -106,7 +106,7 @@ extern {}\n #[link(name = \"unwind\", kind = \"static\")]\n extern {}\n \n-#[cfg(any(target_os = \"android\", target_os = \"openbsd\"))]\n+#[cfg(any(target_os = \"android\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n #[link(name = \"gcc\")]\n extern {}\n "}, {"sha": "a395dbf8995c648a02539fec1330804a8d806e5c", "filename": "src/libstd/rtdeps.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Frtdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Frtdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frtdeps.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -39,6 +39,7 @@ extern {}\n \n #[cfg(any(target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n #[link(name = \"pthread\")]\n extern {}"}, {"sha": "002e3b20c354222cff5c7f39eefa0b03ce906790", "filename": "src/libstd/sys/common/stack.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Fcommon%2Fstack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Fcommon%2Fstack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fstack.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -202,6 +202,7 @@ pub unsafe fn record_sp_limit(limit: usize) {\n               target_arch = \"powerpc\",\n               all(target_arch = \"arm\", target_os = \"ios\"),\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     unsafe fn target_record_sp_limit(_: usize) {\n     }\n@@ -299,6 +300,7 @@ pub unsafe fn get_sp_limit() -> usize {\n               target_arch = \"powerpc\",\n               all(target_arch = \"arm\", target_os = \"ios\"),\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     #[inline(always)]\n     unsafe fn target_get_sp_limit() -> usize {"}, {"sha": "a5d1595cfeb1f89da2d7e8c8cb0da2b84bc21e74", "filename": "src/libstd/sys/unix/backtrace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -363,6 +363,7 @@ fn print(w: &mut Write, idx: isize, addr: *mut libc::c_void,\n         let selfname = if cfg!(target_os = \"freebsd\") ||\n                           cfg!(target_os = \"dragonfly\") ||\n                           cfg!(target_os = \"bitrig\") ||\n+                          cfg!(target_os = \"netbsd\") ||\n                           cfg!(target_os = \"openbsd\") {\n             env::current_exe().ok()\n         } else {"}, {"sha": "eeecf7f50f79a52fa522e7a8a173a0a0dfda76fa", "filename": "src/libstd/sys/unix/c.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fc.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -34,6 +34,7 @@ use libc;\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n pub const FIOCLEX: libc::c_ulong = 0x20006601;\n \n@@ -60,6 +61,7 @@ pub const _SC_GETPW_R_SIZE_MAX: libc::c_int = 70;\n           target_os = \"dragonfly\"))]\n pub const _SC_GETPW_R_SIZE_MAX: libc::c_int = 71;\n #[cfg(any(target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n pub const _SC_GETPW_R_SIZE_MAX: libc::c_int = 101;\n #[cfg(target_os = \"android\")]\n@@ -82,6 +84,7 @@ pub struct passwd {\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n pub struct passwd {\n     pub pw_name: *mut libc::c_char,\n@@ -321,6 +324,7 @@ mod signal_os {\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n mod signal_os {\n     use libc;\n@@ -348,7 +352,7 @@ mod signal_os {\n     pub struct sigset_t {\n         bits: [u32; 4],\n     }\n-    #[cfg(any(target_os = \"bitrig\", target_os = \"openbsd\"))]\n+    #[cfg(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n     pub type sigset_t = libc::c_uint;\n \n     // This structure has more fields, but we're not all that interested in\n@@ -365,7 +369,7 @@ mod signal_os {\n         pub _status: libc::c_int,\n         pub si_addr: *mut libc::c_void\n     }\n-    #[cfg(any(target_os = \"bitrig\", target_os = \"openbsd\"))]\n+    #[cfg(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n     #[repr(C)]\n     pub struct siginfo {\n         pub si_signo: libc::c_int,\n@@ -375,7 +379,7 @@ mod signal_os {\n     }\n \n     #[cfg(any(target_os = \"macos\", target_os = \"ios\",\n-              target_os = \"bitrig\", target_os = \"openbsd\"))]\n+              target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n     #[repr(C)]\n     pub struct sigaction {\n         pub sa_sigaction: sighandler_t,"}, {"sha": "6fd20b940bb52f14c9c4b53cda1bf2ebf3f8e6f9", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -26,6 +26,7 @@ use ops::Neg;\n #[cfg(target_os = \"linux\")]     pub use os::linux as platform;\n #[cfg(target_os = \"macos\")]     pub use os::macos as platform;\n #[cfg(target_os = \"nacl\")]      pub use os::nacl as platform;\n+#[cfg(target_os = \"netbsd\")]    pub use os::netbsd as platform;\n #[cfg(target_os = \"openbsd\")]   pub use os::openbsd as platform;\n \n pub mod backtrace;"}, {"sha": "334dd6b5f18c1ef56b7c35967a3a6c9949c730e8", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -51,23 +51,13 @@ pub fn errno() -> i32 {\n         __error()\n     }\n \n-    #[cfg(target_os = \"bitrig\")]\n-    fn errno_location() -> *const c_int {\n-        extern {\n-            fn __errno() -> *const c_int;\n-        }\n-        unsafe {\n-            __errno()\n-        }\n-    }\n-\n     #[cfg(target_os = \"dragonfly\")]\n     unsafe fn errno_location() -> *const c_int {\n         extern { fn __dfly_error() -> *const c_int; }\n         __dfly_error()\n     }\n \n-    #[cfg(target_os = \"openbsd\")]\n+    #[cfg(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n     unsafe fn errno_location() -> *const c_int {\n         extern { fn __errno() -> *const c_int; }\n         __errno()\n@@ -214,7 +204,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n     ::fs::read_link(\"/proc/curproc/file\")\n }\n \n-#[cfg(any(target_os = \"bitrig\", target_os = \"openbsd\"))]\n+#[cfg(any(target_os = \"bitrig\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n pub fn current_exe() -> io::Result<PathBuf> {\n     use sync::StaticMutex;\n     static LOCK: StaticMutex = StaticMutex::new();\n@@ -356,6 +346,7 @@ pub fn args() -> Args {\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n pub fn args() -> Args {\n     use rt;"}, {"sha": "cc78dd4e5ef1233f4ac58a8d1a14e96c8b361f7a", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -423,6 +423,7 @@ fn translate_status(status: c_int) -> ExitStatus {\n               target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     mod imp {\n         pub fn WIFEXITED(status: i32) -> bool { (status & 0x7f) == 0 }"}, {"sha": "62689c39255e37f8c5d4054fbdf3099e48c28b46", "filename": "src/libstd/sys/unix/stack_overflow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -35,6 +35,7 @@ impl Drop for Handler {\n #[cfg(any(target_os = \"linux\",\n           target_os = \"macos\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n mod imp {\n     use sys_common::stack;\n@@ -149,6 +150,7 @@ mod imp {\n #[cfg(not(any(target_os = \"linux\",\n               target_os = \"macos\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\")))]\n mod imp {\n     use libc;"}, {"sha": "9c8a1f4ca40ecc7e230da8aecb88f80365af639b", "filename": "src/libstd/sys/unix/sync.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fsync.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -55,6 +55,7 @@ extern {\n #[cfg(any(target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n mod os {\n     use libc;"}, {"sha": "17804c8d81ffbbd2744e9a5edfac82a86258094e", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -105,6 +105,7 @@ impl Thread {\n     #[cfg(any(target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     pub fn set_name(name: &str) {\n         extern {\n@@ -162,6 +163,7 @@ impl Drop for Thread {\n #[cfg(all(not(target_os = \"linux\"),\n           not(target_os = \"macos\"),\n           not(target_os = \"bitrig\"),\n+          not(target_os = \"netbsd\"),\n           not(target_os = \"openbsd\")))]\n pub mod guard {\n     pub unsafe fn current() -> usize { 0 }\n@@ -173,6 +175,7 @@ pub mod guard {\n #[cfg(any(target_os = \"linux\",\n           target_os = \"macos\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n #[allow(unused_imports)]\n pub mod guard {\n@@ -193,6 +196,7 @@ pub mod guard {\n \n     #[cfg(any(target_os = \"macos\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\"))]\n     unsafe fn get_stack_start() -> *mut libc::c_void {\n         current() as *mut libc::c_void\n@@ -258,7 +262,7 @@ pub mod guard {\n          pthread_get_stacksize_np(pthread_self())) as usize\n     }\n \n-    #[cfg(any(target_os = \"openbsd\", target_os = \"bitrig\"))]\n+    #[cfg(any(target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"bitrig\"))]\n     pub unsafe fn current() -> usize {\n         #[repr(C)]\n         struct stack_t {"}, {"sha": "7238adfcc566de983f2e9542f613367f2b449ef7", "filename": "src/libstd/sys/unix/thread_local.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread_local.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -46,6 +46,7 @@ type pthread_key_t = ::libc::c_ulong;\n #[cfg(any(target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n type pthread_key_t = ::libc::c_int;\n \n@@ -54,6 +55,7 @@ type pthread_key_t = ::libc::c_int;\n               target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\")))]\n type pthread_key_t = ::libc::c_uint;\n "}, {"sha": "db0d0f150613953e5100878c7930ae1468656e73", "filename": "src/libstd/sys/unix/time.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ftime.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -80,6 +80,7 @@ mod inner {\n     // OpenBSD provide it via libc\n     #[cfg(not(any(target_os = \"android\",\n                   target_os = \"bitrig\",\n+                  target_os = \"netbsd\",\n                   target_os = \"openbsd\",\n                   target_env = \"musl\")))]\n     #[link(name = \"rt\")]"}, {"sha": "c2fad0aa89c9376aa8ef77012161169ac18c6caa", "filename": "src/libstd/thread/scoped_tls.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fthread%2Fscoped_tls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibstd%2Fthread%2Fscoped_tls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fscoped_tls.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -104,6 +104,7 @@ macro_rules! __scoped_thread_local_inner {\n         #[cfg_attr(not(any(windows,\n                            target_os = \"android\",\n                            target_os = \"ios\",\n+                           target_os = \"netbsd\",\n                            target_os = \"openbsd\",\n                            target_arch = \"aarch64\")),\n                    thread_local)]\n@@ -215,6 +216,7 @@ impl<T> ScopedKey<T> {\n #[cfg(not(any(windows,\n               target_os = \"android\",\n               target_os = \"ios\",\n+              target_os = \"netbsd\",\n               target_os = \"openbsd\",\n               target_arch = \"aarch64\",\n               no_elf_tls)))]\n@@ -238,6 +240,7 @@ mod imp {\n #[cfg(any(windows,\n           target_os = \"android\",\n           target_os = \"ios\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\",\n           target_arch = \"aarch64\",\n           no_elf_tls))]"}, {"sha": "50c86a80b4ab5e27ae66031489a3b177766d3c6b", "filename": "src/libsyntax/abi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibsyntax%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Flibsyntax%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fabi.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -25,6 +25,7 @@ pub enum Os {\n     OsiOS,\n     OsDragonfly,\n     OsBitrig,\n+    OsNetbsd,\n     OsOpenbsd,\n }\n \n@@ -138,6 +139,7 @@ impl fmt::Display for Os {\n             OsFreebsd => \"freebsd\".fmt(f),\n             OsDragonfly => \"dragonfly\".fmt(f),\n             OsBitrig => \"bitrig\".fmt(f),\n+            OsNetbsd => \"netbsd\".fmt(f),\n             OsOpenbsd => \"openbsd\".fmt(f),\n         }\n     }"}, {"sha": "f6606a58ecaf190d58f809febd95ba10d6b77f85", "filename": "src/test/parse-fail/issue-5806.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Fparse-fail%2Fissue-5806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Fparse-fail%2Fissue-5806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-5806.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -11,6 +11,7 @@\n // ignore-windows\n // ignore-freebsd\n // ignore-openbsd\n+// ignore-netbsd\n // ignore-bitrig\n \n // compile-flags: -Z parse-only"}, {"sha": "ef69946d7aa2ad27c943bd0db86744bab4088819", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -22,6 +22,7 @@ mod rusti {\n           target_os = \"macos\",\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n mod m {\n     #[main]"}, {"sha": "fc032aa3ff0cdfd45fa9642c7727d8e8e8b40b09", "filename": "src/test/run-pass/rec-align-u64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u64.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -40,6 +40,7 @@ struct Outer {\n           target_os = \"macos\",\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\"))]\n mod m {\n     #[cfg(target_arch = \"x86\")]"}, {"sha": "dca65f03f690af16f126e1c746e80e64d39f26a9", "filename": "src/test/run-pass/tcp-stress.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-stress.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n // ignore-android needs extra network permissions\n-// ignore-openbsd system ulimit (Too many open files)\n // ignore-bitrig system ulimit (Too many open files)\n+// ignore-netbsd system ulimit (Too many open files)\n+// ignore-openbsd system ulimit (Too many open files)\n \n use std::io::prelude::*;\n use std::net::{TcpListener, TcpStream};"}, {"sha": "62cbb76c3095099038983347f51e7c0b203281a9", "filename": "src/test/run-pass/x86stdcall.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall.rs?ref=0b7c4f57f6ba59dabe4db2808fe45e8bd8bbce22", "patch": "@@ -35,6 +35,7 @@ pub fn main() {\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\",\n           target_os = \"bitrig\",\n+          target_os = \"netbsd\",\n           target_os = \"openbsd\",\n           target_os = \"android\"))]\n pub fn main() { }"}]}