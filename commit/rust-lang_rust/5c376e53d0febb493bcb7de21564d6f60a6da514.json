{"sha": "5c376e53d0febb493bcb7de21564d6f60a6da514", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMzc2ZTUzZDBmZWJiNDkzYmNiN2RlMjE1NjRkNmY2MGE2ZGE1MTQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-12T10:19:11Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-12T10:19:44Z"}, "message": "libsyntax: another fix for deriving on windows.", "tree": {"sha": "4663c6c828eb70e243eb4f9f96fcba24493f2cf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4663c6c828eb70e243eb4f9f96fcba24493f2cf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c376e53d0febb493bcb7de21564d6f60a6da514", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c376e53d0febb493bcb7de21564d6f60a6da514", "html_url": "https://github.com/rust-lang/rust/commit/5c376e53d0febb493bcb7de21564d6f60a6da514", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c376e53d0febb493bcb7de21564d6f60a6da514/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2", "html_url": "https://github.com/rust-lang/rust/commit/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "dfbb98fa23388394884a3af0959fb2dd00d48d35", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c376e53d0febb493bcb7de21564d6f60a6da514/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c376e53d0febb493bcb7de21564d6f60a6da514/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=5c376e53d0febb493bcb7de21564d6f60a6da514", "patch": "@@ -130,7 +130,6 @@ use core::prelude::*;\n use ast;\n \n use ast::{\n-\n     and, binop, deref, enum_def, expr, expr_match, ident, impure_fn,\n     item, Generics, m_imm, meta_item, method, named_field, or,\n     pat_wild, public, struct_def, sty_region, ty_rptr, ty_path,\n@@ -328,7 +327,7 @@ impl<'self> MethodDef<'self> {\n             }\n             Some(str_path) => {\n                 let p = do str_path.map |&s| { cx.ident_of(s) };\n-                build::mk_raw_path(span, p)\n+                build::mk_raw_path_global(span, p)\n             }\n         }\n     }"}]}