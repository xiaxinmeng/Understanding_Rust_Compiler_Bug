{"sha": "f45f8262078bde0435560a1e17fb749d0f46dc30", "node_id": "C_kwDOAAsO6NoAKGY0NWY4MjYyMDc4YmRlMDQzNTU2MGExZTE3ZmI3NDlkMGY0NmRjMzA", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-05-17T04:46:20Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-05-18T20:42:23Z"}, "message": "Update MIR passes that assumed inline can never unwind.", "tree": {"sha": "81baba0e6226a36aebcb7fa3983c0f0b9bb601cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81baba0e6226a36aebcb7fa3983c0f0b9bb601cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f45f8262078bde0435560a1e17fb749d0f46dc30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f45f8262078bde0435560a1e17fb749d0f46dc30", "html_url": "https://github.com/rust-lang/rust/commit/f45f8262078bde0435560a1e17fb749d0f46dc30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f45f8262078bde0435560a1e17fb749d0f46dc30/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1cfdd1fb225d64e78b8d8cbab83564ac2dd5ec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1cfdd1fb225d64e78b8d8cbab83564ac2dd5ec2", "html_url": "https://github.com/rust-lang/rust/commit/c1cfdd1fb225d64e78b8d8cbab83564ac2dd5ec2"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "11980382ffdb267aaf74549f03d736f03139fb63", "filename": "compiler/rustc_mir_transform/src/abort_unwinding_calls.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f45f8262078bde0435560a1e17fb749d0f46dc30/compiler%2Frustc_mir_transform%2Fsrc%2Fabort_unwinding_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45f8262078bde0435560a1e17fb749d0f46dc30/compiler%2Frustc_mir_transform%2Fsrc%2Fabort_unwinding_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fabort_unwinding_calls.rs?ref=f45f8262078bde0435560a1e17fb749d0f46dc30", "patch": "@@ -1,4 +1,5 @@\n use crate::MirPass;\n+use rustc_ast::InlineAsmOptions;\n use rustc_hir::def::DefKind;\n use rustc_middle::mir::*;\n use rustc_middle::ty::layout;\n@@ -85,6 +86,12 @@ impl<'tcx> MirPass<'tcx> for AbortUnwindingCalls {\n                 TerminatorKind::Assert { .. } | TerminatorKind::FalseUnwind { .. } => {\n                     layout::fn_can_unwind(tcx, None, Abi::Rust)\n                 }\n+                TerminatorKind::InlineAsm { options, .. } => {\n+                    options.contains(InlineAsmOptions::MAY_UNWIND)\n+                }\n+                _ if terminator.unwind().is_some() => {\n+                    span_bug!(span, \"unexpected terminator that may unwind {:?}\", terminator)\n+                }\n                 _ => continue,\n             };\n "}, {"sha": "9e7bf5c792951eda09e10acd87a0ddecb0ea124a", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f45f8262078bde0435560a1e17fb749d0f46dc30/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45f8262078bde0435560a1e17fb749d0f46dc30/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=f45f8262078bde0435560a1e17fb749d0f46dc30", "patch": "@@ -1042,8 +1042,7 @@ fn can_unwind<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) -> bool {\n             | TerminatorKind::Unreachable\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::FalseEdge { .. }\n-            | TerminatorKind::FalseUnwind { .. }\n-            | TerminatorKind::InlineAsm { .. } => {}\n+            | TerminatorKind::FalseUnwind { .. } => {}\n \n             // Resume will *continue* unwinding, but if there's no other unwinding terminator it\n             // will never be reached.\n@@ -1057,6 +1056,7 @@ fn can_unwind<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) -> bool {\n             TerminatorKind::Drop { .. }\n             | TerminatorKind::DropAndReplace { .. }\n             | TerminatorKind::Call { .. }\n+            | TerminatorKind::InlineAsm { .. }\n             | TerminatorKind::Assert { .. } => return true,\n         }\n     }"}]}