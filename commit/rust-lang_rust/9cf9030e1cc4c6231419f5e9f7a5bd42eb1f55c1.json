{"sha": "9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZjkwMzBlMWNjNGM2MjMxNDE5ZjVlOWY3YTViZDQyZWIxZjU1YzE=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-20T16:39:13Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-20T16:39:13Z"}, "message": "Allow using fn pointers in const fn behind const_fn_ptr gate", "tree": {"sha": "f4e53d82506e0c3149fe2ee1ded2a02b2c913a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4e53d82506e0c3149fe2ee1ded2a02b2c913a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "html_url": "https://github.com/rust-lang/rust/commit/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea3ba36f3f4b7f0168a27d23c499efeb2304e2d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea3ba36f3f4b7f0168a27d23c499efeb2304e2d5", "html_url": "https://github.com/rust-lang/rust/commit/ea3ba36f3f4b7f0168a27d23c499efeb2304e2d5"}], "stats": {"total": 152, "additions": 148, "deletions": 4}, "files": [{"sha": "3842942d97fbb5e4e749d7e06857fe5015076f86", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -1407,11 +1407,23 @@ impl<'a, 'tcx> Visitor<'tcx> for Checker<'a, 'tcx> {\n                     }\n                 }\n                 ty::FnPtr(_) => {\n+                    let unleash_miri = self\n+                        .tcx\n+                        .sess\n+                        .opts\n+                        .debugging_opts\n+                        .unleash_the_miri_inside_of_you;\n+                    let const_fn_ptr = self.tcx.features().const_fn_ptr;\n                     if self.mode.requires_const_checking() {\n-                        let mut err = self.tcx.sess.struct_span_err(\n-                            self.span,\n-                            &format!(\"function pointers are not allowed in const fn\"));\n-                        err.emit();\n+                        if !(unleash_miri || const_fn_ptr) {\n+                            emit_feature_err(\n+                                &self.tcx.sess.parse_sess,\n+                                sym::const_fn_ptr,\n+                                self.span,\n+                                GateIssue::Language,\n+                                \"function pointers in const fn are unstable\",\n+                            );\n+                        }\n                     }\n                 }\n                 _ => {"}, {"sha": "d1a17dc14bdf725a1bf0a14146ccdd33c6319293", "filename": "src/libsyntax/feature_gate/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Factive.rs?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -405,6 +405,9 @@ declare_features! (\n     /// Allows macro invocations in `extern {}` blocks.\n     (active, macros_in_extern, \"1.27.0\", Some(49476), None),\n \n+    /// Allows calling function pointers inside `const` functions.\n+    (active, const_fn_ptr, \"1.27.0\", Some(51909), None),\n+\n     /// Allows accessing fields of unions inside `const` functions.\n     (active, const_fn_union, \"1.27.0\", Some(51909), None),\n "}, {"sha": "e6be8a2cb874a53bfa3d916b94600e925c4a7e87", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -198,6 +198,7 @@ symbols! {\n         const_compare_raw_pointers,\n         const_constructor,\n         const_fn,\n+        const_fn_ptr,\n         const_fn_union,\n         const_generics,\n         const_indexing,"}, {"sha": "1acb3d8ad1065970422b171f55c4bb6aec17ab23", "filename": "src/test/ui/consts/const-eval/const_fn_ptr.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.rs?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -0,0 +1,21 @@\n+// run-pass\n+#![feature(const_fn)]\n+#![feature(const_fn_ptr)]\n+\n+const fn double(x: usize) -> usize { x * 2 }\n+const X: fn(usize) -> usize = double;\n+\n+const fn bar(x: usize) -> usize {\n+    X(x)\n+}\n+\n+const fn foo(x: fn(usize) -> usize, y: usize)  -> usize {\n+    x(y)\n+}\n+\n+fn main() {\n+    const Y: usize = bar(2);\n+    assert_eq!(Y, 4);\n+    const Z: usize = foo(double, 2);\n+    assert_eq!(Z, 4);\n+}"}, {"sha": "e8041e56c38fb2f6ee20a1ff9bc6f0cc139c2a7d", "filename": "src/test/ui/consts/const-eval/const_fn_ptr_fail.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.rs?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -0,0 +1,15 @@\n+// run-pass\n+\n+// FIXME: this should not pass\n+\n+#![feature(const_fn)]\n+#![feature(const_fn_ptr)]\n+\n+fn double(x: usize) -> usize { x * 2 }\n+const X: fn(usize) -> usize = double;\n+\n+const fn bar(x: usize) -> usize {\n+    X(x)\n+}\n+\n+fn main() {}"}, {"sha": "b7f3a74cc44c0144222668ab730716d25b9cb4ad", "filename": "src/test/ui/consts/const-eval/const_fn_ptr_fail.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.stderr?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -0,0 +1,20 @@\n+warning: function is never used: `double`\n+  --> $DIR/const_fn_ptr_fail.rs:8:1\n+   |\n+LL | fn double(x: usize) -> usize { x * 2 }\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(dead_code)]` on by default\n+\n+warning: constant item is never used: `X`\n+  --> $DIR/const_fn_ptr_fail.rs:9:1\n+   |\n+LL | const X: fn(usize) -> usize = double;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: function is never used: `bar`\n+  --> $DIR/const_fn_ptr_fail.rs:11:1\n+   |\n+LL | const fn bar(x: usize) -> usize {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+"}, {"sha": "66e01cae31452d20f6b6b138135ae06e2b8191fb", "filename": "src/test/ui/consts/const-eval/const_fn_ptr_fail2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.rs?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -0,0 +1,21 @@\n+#![feature(const_fn)]\n+#![feature(const_fn_ptr)]\n+\n+fn double(x: usize) -> usize { x * 2 }\n+const X: fn(usize) -> usize = double;\n+\n+const fn bar(x: fn(usize) -> usize, y: usize) -> usize {\n+    x(y)\n+}\n+\n+const Y: usize = bar(X, 2);\n+//~^ ERROR any use of this value will cause an error\n+\n+const Z: usize = bar(double, 2);\n+//~^ ERROR any use of this value will cause an error\n+\n+\n+fn main() {\n+    assert_eq!(Y, 4);\n+    assert_eq!(Z, 4);\n+}"}, {"sha": "020889c2ca1a035cac7d21fe39cedf5f52de3a46", "filename": "src/test/ui/consts/const-eval/const_fn_ptr_fail2.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.stderr?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -0,0 +1,28 @@\n+error: any use of this value will cause an error\n+  --> $DIR/const_fn_ptr_fail2.rs:8:5\n+   |\n+LL |     x(y)\n+   |     ^^^^\n+   |     |\n+   |     calling non-const function `double`\n+   |     inside call to `bar` at $DIR/const_fn_ptr_fail2.rs:11:18\n+...\n+LL | const Y: usize = bar(X, 2);\n+   | ---------------------------\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const_fn_ptr_fail2.rs:8:5\n+   |\n+LL |     x(y)\n+   |     ^^^^\n+   |     |\n+   |     calling non-const function `double`\n+   |     inside call to `bar` at $DIR/const_fn_ptr_fail2.rs:14:18\n+...\n+LL | const Z: usize = bar(double, 2);\n+   | --------------------------------\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "ea1ca05c31b8f4b10bcc64cddc1adfb963242a74", "filename": "src/test/ui/consts/const-eval/feature-gate-const_fn_ptr.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_ptr.rs?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -0,0 +1,11 @@\n+#![feature(const_fn)]\n+\n+fn main() {}\n+\n+const fn foo() {}\n+const X: fn() = foo;\n+\n+const fn bar() {\n+    X()\n+    //~^ ERROR function pointers in const fn are unstable\n+}"}, {"sha": "fe5956d06f2a0b7b375a6cf2370855c47850646d", "filename": "src/test/ui/consts/const-eval/feature-gate-const_fn_ptr.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_ptr.stderr?ref=9cf9030e1cc4c6231419f5e9f7a5bd42eb1f55c1", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: function pointers in const fn are unstable\n+  --> $DIR/feature-gate-const_fn_ptr.rs:9:5\n+   |\n+LL |     X()\n+   |     ^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51909\n+   = help: add `#![feature(const_fn_ptr)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}]}