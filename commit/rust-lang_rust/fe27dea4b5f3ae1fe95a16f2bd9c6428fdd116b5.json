{"sha": "fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMjdkZWE0YjVmM2FlMWZlOTVhMTZmMmJkOWM2NDI4ZmRkMTE2YjU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-30T04:36:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-30T04:36:50Z"}, "message": "Rollup merge of #81468 - est31:cfg_version, r=petrochenkov\n\ncfg(version): treat nightlies as complete\n\nThis PR makes cfg(version) treat the nightlies\nfor version 1.n.0 as 1.n.0, even though that nightly\nversion might not have all stabilizations and features\nof the released 1.n.0. This is done for greater\nconvenience for people who want to test a newly\nstabilized feature on nightly, or in other words,\ngive newly stabilized features as many eyeballs\nas possible.\n\nFor users who wish to pin nightlies, this commit adds\na -Z assume-incomplete-release option that they can\nenable if they run into any issues due to this change.\nImplements the suggestion in https://github.com/rust-lang/rust/issues/64796#issuecomment-640851454", "tree": {"sha": "c3a99a90ef61a3093107a38794bfa41c371828ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3a99a90ef61a3093107a38794bfa41c371828ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFOJiCRBK7hj4Ov3rIwAAdHIIACm4BCyOV86rzdyZ52Kly8Sb\nB+utSOTppooSinxhZCMud2ootzqKFE4FFN55j21dGdIhVtnB4j0phpXRNC4UUcT7\no6At/4iYDq4CAY5va88/cJgbW1vlQ2j9Ej3OQ5pgA5EwqHAqJRez/50qfEH8drdz\n92CzpIq5AUaySahL0RXLnDa9332Pb0UKFdRx06TG6TIijJYAg6rflooyDKe2LPBh\nREXUx/P+SLH3rO4Wen/TsPyStpV0Qe08u3A6mq4+mmC8xBEZy3M27U6xTL3exx4Z\nbd7l1kJroih+qJ7P2zrQkkfzLt85fUgzyna1AHxTGUSbQbiRzsdzsf3ct03+g+8=\n=q3Vw\n-----END PGP SIGNATURE-----\n", "payload": "tree c3a99a90ef61a3093107a38794bfa41c371828ad\nparent c26dd4d4140202283221c05758b1b1531b2fbb96\nparent dd18c488f50e7618992bed984cfae9a7099ff488\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611981410 +0900\ncommitter GitHub <noreply@github.com> 1611981410 +0900\n\nRollup merge of #81468 - est31:cfg_version, r=petrochenkov\n\ncfg(version): treat nightlies as complete\n\nThis PR makes cfg(version) treat the nightlies\nfor version 1.n.0 as 1.n.0, even though that nightly\nversion might not have all stabilizations and features\nof the released 1.n.0. This is done for greater\nconvenience for people who want to test a newly\nstabilized feature on nightly, or in other words,\ngive newly stabilized features as many eyeballs\nas possible.\n\nFor users who wish to pin nightlies, this commit adds\na -Z assume-incomplete-release option that they can\nenable if they run into any issues due to this change.\nImplements the suggestion in https://github.com/rust-lang/rust/issues/64796#issuecomment-640851454\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "html_url": "https://github.com/rust-lang/rust/commit/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c26dd4d4140202283221c05758b1b1531b2fbb96", "url": "https://api.github.com/repos/rust-lang/rust/commits/c26dd4d4140202283221c05758b1b1531b2fbb96", "html_url": "https://github.com/rust-lang/rust/commit/c26dd4d4140202283221c05758b1b1531b2fbb96"}, {"sha": "dd18c488f50e7618992bed984cfae9a7099ff488", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd18c488f50e7618992bed984cfae9a7099ff488", "html_url": "https://github.com/rust-lang/rust/commit/dd18c488f50e7618992bed984cfae9a7099ff488"}], "stats": {"total": 113, "additions": 108, "deletions": 5}, "files": [{"sha": "696d5fdd6cd452952a7ade4d92bd32aa8facc69b", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "patch": "@@ -586,12 +586,14 @@ pub fn eval_condition(\n                     return false;\n                 }\n             };\n-            let channel = env!(\"CFG_RELEASE_CHANNEL\");\n-            let nightly = channel == \"nightly\" || channel == \"dev\";\n             let rustc_version = parse_version(env!(\"CFG_RELEASE\"), true).unwrap();\n \n-            // See https://github.com/rust-lang/rust/issues/64796#issuecomment-625474439 for details\n-            if nightly { rustc_version > min_version } else { rustc_version >= min_version }\n+            // See https://github.com/rust-lang/rust/issues/64796#issuecomment-640851454 for details\n+            if sess.assume_incomplete_release {\n+                rustc_version > min_version\n+            } else {\n+                rustc_version >= min_version\n+            }\n         }\n         ast::MetaItemKind::List(ref mis) => {\n             for mi in mis.iter() {"}, {"sha": "f9c3406d3b3355e74c28d81e3ef9006b93b083c4", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "patch": "@@ -540,6 +540,7 @@ fn test_debugging_options_tracking_hash() {\n     // This list is in alphabetical order.\n     tracked!(allow_features, Some(vec![String::from(\"lang_items\")]));\n     tracked!(always_encode_mir, true);\n+    tracked!(assume_incomplete_release, true);\n     tracked!(asm_comments, true);\n     tracked!(binary_dep_depinfo, true);\n     tracked!(chalk, true);"}, {"sha": "779e04216369829c274e9a051e2f3d88de92b091", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "patch": "@@ -854,6 +854,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"only allow the listed language features to be enabled in code (space separated)\"),\n     always_encode_mir: bool = (false, parse_bool, [TRACKED],\n         \"encode MIR of all functions into the crate metadata (default: no)\"),\n+    assume_incomplete_release: bool = (false, parse_bool, [TRACKED],\n+        \"make cfg(version) treat the current version as incomplete (default: no)\"),\n     asm_comments: bool = (false, parse_bool, [TRACKED],\n         \"generate comments into the assembly (may change behavior) (default: no)\"),\n     ast_json: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "81b38347414e89fde937ca011074bf2ef1bee39a", "filename": "compiler/rustc_session/src/parse.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fparse.rs?ref=fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "patch": "@@ -138,6 +138,8 @@ pub struct ParseSess {\n     pub env_depinfo: Lock<FxHashSet<(Symbol, Option<Symbol>)>>,\n     /// All the type ascriptions expressions that have had a suggestion for likely path typo.\n     pub type_ascription_path_suggestions: Lock<FxHashSet<Span>>,\n+    /// Whether cfg(version) should treat the current release as incomplete\n+    pub assume_incomplete_release: bool,\n }\n \n impl ParseSess {\n@@ -164,6 +166,7 @@ impl ParseSess {\n             reached_eof: Lock::new(false),\n             env_depinfo: Default::default(),\n             type_ascription_path_suggestions: Default::default(),\n+            assume_incomplete_release: false,\n         }\n     }\n "}, {"sha": "69aa72d899fb384d43c59318cdc938ab91f1504f", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "patch": "@@ -1344,7 +1344,8 @@ pub fn build_session(\n         None\n     };\n \n-    let parse_sess = ParseSess::with_span_handler(span_diagnostic, source_map);\n+    let mut parse_sess = ParseSess::with_span_handler(span_diagnostic, source_map);\n+    parse_sess.assume_incomplete_release = sopts.debugging_opts.assume_incomplete_release;\n     let sysroot = match &sopts.maybe_sysroot {\n         Some(sysroot) => sysroot.clone(),\n         None => filesearch::get_or_default_sysroot(),"}, {"sha": "24d2dc645519dff4b62e8dc28eb3fc89017e4f88", "filename": "src/test/ui/cfg/assume-incomplete-release/assume-incomplete.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fassume-incomplete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fassume-incomplete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fassume-incomplete.rs?ref=fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "patch": "@@ -0,0 +1,38 @@\n+// run-pass\n+// aux-build:ver-cfg-rel.rs\n+// revisions: assume no_assume\n+// [assume]compile-flags: -Z assume-incomplete-release\n+\n+#![feature(cfg_version)]\n+\n+extern crate ver_cfg_rel;\n+\n+use ver_cfg_rel::ver_cfg_rel;\n+\n+#[ver_cfg_rel(\"-2\")]\n+fn foo_2() { }\n+\n+#[ver_cfg_rel(\"-1\")]\n+fn foo_1() { }\n+\n+#[cfg(assume)]\n+#[ver_cfg_rel(\"0\")]\n+fn foo() { compile_error!(\"wrong+0\") }\n+\n+#[cfg(no_assume)]\n+#[ver_cfg_rel(\"0\")]\n+fn foo() { }\n+\n+#[ver_cfg_rel(\"1\")]\n+fn bar() { compile_error!(\"wrong+1\") }\n+\n+#[ver_cfg_rel(\"2\")]\n+fn bar() { compile_error!(\"wrong+2\") }\n+\n+fn main() {\n+    foo_2();\n+    foo_1();\n+\n+    #[cfg(no_assume)]\n+    foo();\n+}"}, {"sha": "6787527027e33e230625148df6ae4478401fcba0", "filename": "src/test/ui/cfg/assume-incomplete-release/auxiliary/ver-cfg-rel.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fauxiliary%2Fver-cfg-rel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fauxiliary%2Fver-cfg-rel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fauxiliary%2Fver-cfg-rel.rs?ref=fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "patch": "@@ -0,0 +1,56 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+use proc_macro::{TokenStream, TokenTree as Tt};\n+use std::str::FromStr;\n+\n+// String containing the current version number of the tip, i.e. \"1.41.2\"\n+static VERSION_NUMBER: &str = include_str!(\"../../../../../version\");\n+\n+#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+struct Version {\n+    major: i16,\n+    minor: i16,\n+    patch: i16,\n+}\n+\n+fn parse_version(s: &str) -> Option<Version> {\n+    let mut digits = s.splitn(3, '.');\n+    let major = digits.next()?.parse().ok()?;\n+    let minor = digits.next()?.parse().ok()?;\n+    let patch = digits.next().unwrap_or(\"0\").trim().parse().ok()?;\n+    Some(Version { major, minor, patch })\n+}\n+\n+#[proc_macro_attribute]\n+/// Emits a #[cfg(version)] relative to the current one, so passing\n+/// -1 as argument on compiler 1.50 will emit #[cfg(version(\"1.49.0\"))],\n+/// while 1 will emit #[cfg(version(\"1.51.0\"))]\n+pub fn ver_cfg_rel(attr: TokenStream, input: TokenStream) -> TokenStream {\n+    let mut v_rel = None;\n+    for a in attr.into_iter() {\n+        match a {\n+            Tt::Literal(l) => {\n+                let mut s = l.to_string();\n+                let s = s.trim_matches('\"');\n+                let v: i16 = s.parse().unwrap();\n+                v_rel = Some(v);\n+                break;\n+            },\n+            _ => panic!(\"{:?}\", a),\n+        }\n+    }\n+    let v_rel = v_rel.unwrap();\n+\n+    let mut v = parse_version(VERSION_NUMBER).unwrap();\n+    v.minor += v_rel;\n+\n+    let attr_str = format!(\"#[cfg(version(\\\"{}.{}.{}\\\"))]\", v.major, v.minor, v.patch);\n+    let mut res = Vec::<Tt>::new();\n+    res.extend(TokenStream::from_str(&attr_str).unwrap().into_iter());\n+    res.extend(input.into_iter());\n+    res.into_iter().collect()\n+}"}]}