{"sha": "faef9490ae724bce4802405f826d65988b2b7b05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZWY5NDkwYWU3MjRiY2U0ODAyNDA1ZjgyNmQ2NTk4OGIyYjdiMDU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-25T21:03:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-27T22:54:44Z"}, "message": "Optimize std::istr::to_estr. Issue #855", "tree": {"sha": "c4643570e9506e341b502726428def22bf0731fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4643570e9506e341b502726428def22bf0731fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faef9490ae724bce4802405f826d65988b2b7b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faef9490ae724bce4802405f826d65988b2b7b05", "html_url": "https://github.com/rust-lang/rust/commit/faef9490ae724bce4802405f826d65988b2b7b05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faef9490ae724bce4802405f826d65988b2b7b05/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e3ae79360508dc44f428f99bb483038fb2ab1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e3ae79360508dc44f428f99bb483038fb2ab1e", "html_url": "https://github.com/rust-lang/rust/commit/15e3ae79360508dc44f428f99bb483038fb2ab1e"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "4b1f990a243c8f36bce8a5040326b3a474c63499", "filename": "src/lib/istr.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/faef9490ae724bce4802405f826d65988b2b7b05/src%2Flib%2Fistr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faef9490ae724bce4802405f826d65988b2b7b05/src%2Flib%2Fistr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fistr.rs?ref=faef9490ae724bce4802405f826d65988b2b7b05", "patch": "@@ -16,11 +16,15 @@ fn from_estr(s: &str) -> istr {\n }\n \n fn to_estr(s: &istr) -> str {\n-    let s2 = \"\";\n-    for u in s {\n-        str::push_byte(s2, u);\n-    }\n-    ret s2;\n+    if byte_len(s) == 0u { ret \"\" };\n+    let v: [u8] = unsafe::reinterpret_cast(s);\n+    let vlen = vec::len(v);\n+    assert vlen > 0u;\n+    vec::unsafe::set_len(v, vlen - 1u);\n+    let res = str::unsafe_from_bytes(v);\n+    vec::unsafe::set_len(v, vlen);\n+    unsafe::leak(v);\n+    ret res;\n }\n \n fn from_estrs(ss: &[str]) -> [istr] {"}]}