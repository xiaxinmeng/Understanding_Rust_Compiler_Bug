{"sha": "3ca7f61a8d736d8e56f0d413b109e6e6562c0a30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYTdmNjFhOGQ3MzZkOGU1NmYwZDQxM2IxMDllNmU2NTYyYzBhMzA=", "commit": {"author": {"name": "wxb1ank", "email": "wxblank@gmail.com", "date": "2021-05-23T20:33:32Z"}, "committer": {"name": "wxb1ank", "email": "wxblank@gmail.com", "date": "2021-06-02T16:07:13Z"}, "message": "internal: use vscode.FileSystem API in main.ts", "tree": {"sha": "8f96da409d488f83db4f9011c8013a09a972d1be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f96da409d488f83db4f9011c8013a09a972d1be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30", "html_url": "https://github.com/rust-lang/rust/commit/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30/comments", "author": {"login": "wxb1ank", "id": 44535681, "node_id": "MDQ6VXNlcjQ0NTM1Njgx", "avatar_url": "https://avatars.githubusercontent.com/u/44535681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxb1ank", "html_url": "https://github.com/wxb1ank", "followers_url": "https://api.github.com/users/wxb1ank/followers", "following_url": "https://api.github.com/users/wxb1ank/following{/other_user}", "gists_url": "https://api.github.com/users/wxb1ank/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxb1ank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxb1ank/subscriptions", "organizations_url": "https://api.github.com/users/wxb1ank/orgs", "repos_url": "https://api.github.com/users/wxb1ank/repos", "events_url": "https://api.github.com/users/wxb1ank/events{/privacy}", "received_events_url": "https://api.github.com/users/wxb1ank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wxb1ank", "id": 44535681, "node_id": "MDQ6VXNlcjQ0NTM1Njgx", "avatar_url": "https://avatars.githubusercontent.com/u/44535681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxb1ank", "html_url": "https://github.com/wxb1ank", "followers_url": "https://api.github.com/users/wxb1ank/followers", "following_url": "https://api.github.com/users/wxb1ank/following{/other_user}", "gists_url": "https://api.github.com/users/wxb1ank/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxb1ank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxb1ank/subscriptions", "organizations_url": "https://api.github.com/users/wxb1ank/orgs", "repos_url": "https://api.github.com/users/wxb1ank/repos", "events_url": "https://api.github.com/users/wxb1ank/events{/privacy}", "received_events_url": "https://api.github.com/users/wxb1ank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2022cfce44f7c3d82dd354abeb2d40b570fa3ef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4", "html_url": "https://github.com/rust-lang/rust/commit/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7200a26f72aeaeaf525f35c07dbb4114d74faa9b", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=3ca7f61a8d736d8e56f0d413b109e6e6562c0a30", "patch": "@@ -31,10 +31,10 @@ export class Config {\n         enableProposedApi: boolean | undefined;\n     } = vscode.extensions.getExtension(this.extensionId)!.packageJSON;\n \n-    readonly globalStoragePath: string;\n+    readonly globalStorageUri: vscode.Uri;\n \n     constructor(ctx: vscode.ExtensionContext) {\n-        this.globalStoragePath = ctx.globalStorageUri.fsPath;\n+        this.globalStorageUri = ctx.globalStorageUri;\n         vscode.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, ctx.subscriptions);\n         this.refreshLogging();\n     }"}, {"sha": "fb9d38a14ddd918a08cfc78429be8fc353413438", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3ca7f61a8d736d8e56f0d413b109e6e6562c0a30/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=3ca7f61a8d736d8e56f0d413b109e6e6562c0a30", "patch": "@@ -160,7 +160,7 @@ export async function deactivate() {\n }\n \n async function bootstrap(config: Config, state: PersistentState): Promise<string> {\n-    await fs.mkdir(config.globalStoragePath, { recursive: true });\n+    await vscode.workspace.fs.createDirectory(config.globalStorageUri);\n \n     if (!config.currentExtensionIsNightly) {\n         await state.updateNightlyReleaseId(undefined);\n@@ -222,7 +222,7 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     const artifact = latestNightlyRelease.assets.find(artifact => artifact.name === \"rust-analyzer.vsix\");\n     assert(!!artifact, `Bad release: ${JSON.stringify(latestNightlyRelease)}`);\n \n-    const dest = path.join(config.globalStoragePath, \"rust-analyzer.vsix\");\n+    const dest = path.join(config.globalStorageUri.path, \"rust-analyzer.vsix\");\n \n     await downloadWithRetryDialog(state, async () => {\n         await download({\n@@ -334,7 +334,7 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n         platform = \"x86_64-unknown-linux-musl\";\n     }\n     const ext = platform.indexOf(\"-windows-\") !== -1 ? \".exe\" : \"\";\n-    const dest = path.join(config.globalStoragePath, `rust-analyzer-${platform}${ext}`);\n+    const dest = path.join(config.globalStorageUri.path, `rust-analyzer-${platform}${ext}`);\n     const exists = await fs.stat(dest).then(() => true, () => false);\n     if (!exists) {\n         await state.updateServerVersion(undefined);"}]}