{"sha": "3a0477c39816c20fc798a33cde56e8b99ddb32b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMDQ3N2MzOTgxNmMyMGZjNzk4YTMzY2RlNTZlOGI5OWRkYjMyYjE=", "commit": {"author": {"name": "Jonathan Sternberg", "email": "jonathansternberg@gmail.com", "date": "2012-04-01T15:39:17Z"}, "committer": {"name": "Jonathan Sternberg", "email": "jonathansternberg@gmail.com", "date": "2012-04-01T15:39:17Z"}, "message": "Fixing issue 1919. list_dir is the more general version that returns a vector with the contents of the directory. list_dir_path contains the old behavior (as a convenience function).", "tree": {"sha": "7c3ac277a6f2dd81e5d5297808e3e9bcd8d6265d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c3ac277a6f2dd81e5d5297808e3e9bcd8d6265d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a0477c39816c20fc798a33cde56e8b99ddb32b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a0477c39816c20fc798a33cde56e8b99ddb32b1", "html_url": "https://github.com/rust-lang/rust/commit/3a0477c39816c20fc798a33cde56e8b99ddb32b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a0477c39816c20fc798a33cde56e8b99ddb32b1/comments", "author": {"login": "jsternberg", "id": 1212129, "node_id": "MDQ6VXNlcjEyMTIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1212129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsternberg", "html_url": "https://github.com/jsternberg", "followers_url": "https://api.github.com/users/jsternberg/followers", "following_url": "https://api.github.com/users/jsternberg/following{/other_user}", "gists_url": "https://api.github.com/users/jsternberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsternberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsternberg/subscriptions", "organizations_url": "https://api.github.com/users/jsternberg/orgs", "repos_url": "https://api.github.com/users/jsternberg/repos", "events_url": "https://api.github.com/users/jsternberg/events{/privacy}", "received_events_url": "https://api.github.com/users/jsternberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsternberg", "id": 1212129, "node_id": "MDQ6VXNlcjEyMTIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1212129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsternberg", "html_url": "https://github.com/jsternberg", "followers_url": "https://api.github.com/users/jsternberg/followers", "following_url": "https://api.github.com/users/jsternberg/following{/other_user}", "gists_url": "https://api.github.com/users/jsternberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsternberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsternberg/subscriptions", "organizations_url": "https://api.github.com/users/jsternberg/orgs", "repos_url": "https://api.github.com/users/jsternberg/repos", "events_url": "https://api.github.com/users/jsternberg/events{/privacy}", "received_events_url": "https://api.github.com/users/jsternberg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0904f255075d3c20f16d4ca2d1db14cac3fbb2de", "url": "https://api.github.com/repos/rust-lang/rust/commits/0904f255075d3c20f16d4ca2d1db14cac3fbb2de", "html_url": "https://github.com/rust-lang/rust/commit/0904f255075d3c20f16d4ca2d1db14cac3fbb2de"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "9cad4bb3f94b8ff272ff5ddce9fd738b49c6f4eb", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=3a0477c39816c20fc798a33cde56e8b99ddb32b1", "patch": "@@ -434,7 +434,7 @@ fn for_each_package(c: cargo, b: fn(source, package)) {\n \n // Runs all programs in directory <buildpath>\n fn run_programs(buildpath: str) {\n-    let newv = os::list_dir(buildpath);\n+    let newv = os::list_dir_path(buildpath);\n     for ct: str in newv {\n         run::run_program(ct, []);\n     }\n@@ -471,7 +471,7 @@ fn install_one_crate(c: cargo, path: str, cf: str) {\n       none { ret; }\n       some(bp) { bp }\n     };\n-    let newv = os::list_dir(buildpath);\n+    let newv = os::list_dir_path(buildpath);\n     let exec_suffix = os::exe_suffix();\n     for ct: str in newv {\n         if (exec_suffix != \"\" && str::ends_with(ct, exec_suffix)) ||\n@@ -524,7 +524,7 @@ fn rustc_sysroot() -> str {\n fn install_source(c: cargo, path: str) {\n     #debug(\"source: %s\", path);\n     os::change_dir(path);\n-    let contents = os::list_dir(\".\");\n+    let contents = os::list_dir_path(\".\");\n \n     #debug(\"contents: %s\", str::connect(contents, \", \"));\n "}, {"sha": "0ea7fecda75c11f051bc5258ee11ee5506cdeeb8", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=3a0477c39816c20fc798a33cde56e8b99ddb32b1", "patch": "@@ -127,7 +127,7 @@ fn test_opts(config: config) -> test::test_opts {\n fn make_tests(config: config) -> [test::test_desc] {\n     #debug(\"making tests from %s\", config.src_base);\n     let mut tests = [];\n-    for file: str in os::list_dir(config.src_base) {\n+    for file: str in os::list_dir_path(config.src_base) {\n         let file = file;\n         #debug(\"inspecting file %s\", file);\n         if is_test(config, file) {"}, {"sha": "87dece998b0dda63569e8a4cdf5d62af51dcc7cf", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=3a0477c39816c20fc798a33cde56e8b99ddb32b1", "patch": "@@ -25,7 +25,7 @@ fn find_rust_files(&files: [str], path: str) {\n     } else if os::path_is_dir(path)\n         && !contains(path, \"compile-fail\")\n         && !contains(path, \"build\") {\n-        for p in os::list_dir(path) {\n+        for p in os::list_dir_path(path) {\n             find_rust_files(files, p);\n         }\n     }"}, {"sha": "d7e4af2a15acd46ff1e053e4b95401e912faa89c", "filename": "src/libcore/os.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=3a0477c39816c20fc798a33cde56e8b99ddb32b1", "patch": "@@ -29,8 +29,8 @@ export close, fclose, fsync_fd, waitpid;\n export env, getenv, setenv, fdopen, pipe;\n export getcwd, dll_filename, self_exe_path;\n export exe_suffix, dll_suffix, sysname;\n-export homedir, list_dir, path_is_dir, path_exists, make_absolute,\n-       make_dir, remove_dir, change_dir, remove_file;\n+export homedir, list_dir, list_dir_path, path_is_dir, path_exists,\n+       make_absolute, make_dir, remove_dir, change_dir, remove_file;\n \n // FIXME: move these to str perhaps?\n export as_c_charp, fill_charp_buf;\n@@ -452,26 +452,37 @@ fn list_dir(p: path) -> [str] {\n     #[cfg(target_os = \"linux\")]\n     #[cfg(target_os = \"macos\")]\n     #[cfg(target_os = \"freebsd\")]\n-    fn star() -> str { \"\" }\n+    fn star(p: str) -> str { p }\n \n     #[cfg(target_os = \"win32\")]\n-    fn star() -> str { \"*\" }\n+    fn star(p: str) -> str {\n+        let pl = str::len(p);\n+        if pl == 0u || (p[pl - 1u] as char != path::consts::path_sep\n+                        ** p[pl - 1u] as char != path::consts::alt_path_sep) {\n+            p + path::path_sep() + \"*\"\n+        } else {\n+            p + \"*\"\n+        }\n+    }\n \n+    rustrt::rust_list_files(star(p)).filter {|filename|\n+        !str::eq(filename, \".\") || !str::eq(filename, \"..\")\n+    }\n+}\n+\n+#[doc = \"\n+Lists the contents of a directory\n+\n+This version prepends each entry with the directory.\n+\"]\n+fn list_dir_path(p: path) -> [str] {\n     let mut p = p;\n     let pl = str::len(p);\n     if pl == 0u || (p[pl - 1u] as char != path::consts::path_sep\n                     && p[pl - 1u] as char != path::consts::alt_path_sep) {\n         p += path::path_sep();\n     }\n-    let mut full_paths: [str] = [];\n-    for vec::each(rustrt::rust_list_files(p + star())) {|filename|\n-        if !str::eq(filename, \".\") {\n-            if !str::eq(filename, \"..\") {\n-                full_paths += [p + filename];\n-            }\n-        }\n-    }\n-    ret full_paths;\n+    os::list_dir(p).map {|f| p + f}\n }\n \n #[doc = \"Removes a directory at the specified path\"]\n@@ -750,4 +761,4 @@ mod tests {\n         assert (!os::path_exists(\"test/nonexistent-bogus-path\"));\n     }\n \n-}\n\\ No newline at end of file\n+}"}, {"sha": "75327597ce92959a4d684f828aacae7b2df7a46d", "filename": "src/rustc/util/filesearch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Frustc%2Futil%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0477c39816c20fc798a33cde56e8b99ddb32b1/src%2Frustc%2Futil%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Futil%2Ffilesearch.rs?ref=3a0477c39816c20fc798a33cde56e8b99ddb32b1", "patch": "@@ -69,7 +69,7 @@ fn mk_filesearch(maybe_sysroot: option<path>,\n fn search<T: copy>(filesearch: filesearch, pick: pick<T>) -> option<T> {\n     for lib_search_path in filesearch.lib_search_paths() {\n         #debug(\"searching %s\", lib_search_path);\n-        for path in os::list_dir(lib_search_path) {\n+        for path in os::list_dir_path(lib_search_path) {\n             #debug(\"testing %s\", path);\n             let maybe_picked = pick(path);\n             if option::is_some(maybe_picked) {"}]}