{"sha": "af30fe25a58c5eb1ac088f824b22621ed3652976", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMzBmZTI1YTU4YzVlYjFhYzA4OGY4MjRiMjI2MjFlZDM2NTI5NzY=", "commit": {"author": {"name": "Sankha Narayan Guria", "email": "sankha93@gmail.com", "date": "2013-07-01T17:47:43Z"}, "committer": {"name": "Sankha Narayan Guria", "email": "sankha93@gmail.com", "date": "2013-07-01T19:35:57Z"}, "message": "Improve the attempted dynamic environment-capture error message", "tree": {"sha": "f0308088db9f3deb9ee74ef9cbcd38d5c9bc477c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0308088db9f3deb9ee74ef9cbcd38d5c9bc477c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af30fe25a58c5eb1ac088f824b22621ed3652976", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af30fe25a58c5eb1ac088f824b22621ed3652976", "html_url": "https://github.com/rust-lang/rust/commit/af30fe25a58c5eb1ac088f824b22621ed3652976", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af30fe25a58c5eb1ac088f824b22621ed3652976/comments", "author": {"login": "ngsankha", "id": 1267409, "node_id": "MDQ6VXNlcjEyNjc0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1267409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngsankha", "html_url": "https://github.com/ngsankha", "followers_url": "https://api.github.com/users/ngsankha/followers", "following_url": "https://api.github.com/users/ngsankha/following{/other_user}", "gists_url": "https://api.github.com/users/ngsankha/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngsankha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngsankha/subscriptions", "organizations_url": "https://api.github.com/users/ngsankha/orgs", "repos_url": "https://api.github.com/users/ngsankha/repos", "events_url": "https://api.github.com/users/ngsankha/events{/privacy}", "received_events_url": "https://api.github.com/users/ngsankha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ngsankha", "id": 1267409, "node_id": "MDQ6VXNlcjEyNjc0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1267409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngsankha", "html_url": "https://github.com/ngsankha", "followers_url": "https://api.github.com/users/ngsankha/followers", "following_url": "https://api.github.com/users/ngsankha/following{/other_user}", "gists_url": "https://api.github.com/users/ngsankha/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngsankha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngsankha/subscriptions", "organizations_url": "https://api.github.com/users/ngsankha/orgs", "repos_url": "https://api.github.com/users/ngsankha/repos", "events_url": "https://api.github.com/users/ngsankha/events{/privacy}", "received_events_url": "https://api.github.com/users/ngsankha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d324014c6cd2919333c330b5ae49739f287540b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d324014c6cd2919333c330b5ae49739f287540b6", "html_url": "https://github.com/rust-lang/rust/commit/d324014c6cd2919333c330b5ae49739f287540b6"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "cba094d619e0128d25d200edd66004cefc74c648", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -198,8 +198,9 @@ fn with_appropriate_checker(cx: Context, id: node_id,\n     fn check_for_bare(cx: Context, fv: @freevar_entry) {\n         cx.tcx.sess.span_err(\n             fv.span,\n-            \"attempted dynamic environment capture\");\n-    }\n+            \"can't capture dynamic environment in a fn item; \\\n+            use the || { ... } closure form instead\");\n+    } // same check is done in resolve.rs, but shouldn't be done\n \n     let fty = ty::node_id_to_type(cx.tcx, id);\n     match ty::get(fty).sty {"}, {"sha": "f8adb1bbb0a4d1c2163d93c6efc7a61907af5b0b", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -3382,7 +3382,8 @@ impl Resolver {\n \n                         self.session.span_err(\n                             span,\n-                            \"attempted dynamic environment-capture\");\n+                            \"can't capture dynamic environment in a fn item; \\\n+                            use the || { ... } closure form instead\");\n                     } else {\n                         // This was an attempt to use a type parameter outside\n                         // its scope.\n@@ -3404,7 +3405,8 @@ impl Resolver {\n \n                         self.session.span_err(\n                             span,\n-                            \"attempted dynamic environment-capture\");\n+                            \"can't capture dynamic environment in a fn item; \\\n+                            use the || { ... } closure form instead\");\n                     } else {\n                         // This was an attempt to use a type parameter outside\n                         // its scope."}, {"sha": "ac5a4c220a4a6ef742c2fa57d12a4bb7d2f5d093", "filename": "src/test/compile-fail/bad-env-capture.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fbad-env-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fbad-env-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-env-capture.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: attempted dynamic environment-capture\n+// error-pattern: can't capture dynamic environment in a fn item;\n fn foo() {\n     let x: int;\n     fn bar() { log(debug, x); }"}, {"sha": "c97069acd9aeeaffc21d18555febacff795ae3c3", "filename": "src/test/compile-fail/bad-env-capture2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fbad-env-capture2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fbad-env-capture2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-env-capture2.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: attempted dynamic environment-capture\n+// error-pattern: can't capture dynamic environment in a fn item;\n fn foo(x: int) {\n     fn bar() { log(debug, x); }\n }"}, {"sha": "e3a6ac2cdfc4feef83b87e1adc9f88d4dee8f81b", "filename": "src/test/compile-fail/bad-env-capture3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fbad-env-capture3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fbad-env-capture3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-env-capture3.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: attempted dynamic environment-capture\n+// error-pattern: can't capture dynamic environment in a fn item;\n fn foo(x: int) {\n     fn mth() {\n         fn bar() { log(debug, x); }"}, {"sha": "706edd0a112b8794af92dc2ada90649a0c6de36b", "filename": "src/test/compile-fail/capture1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fcapture1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fcapture1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcapture1.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -10,7 +10,7 @@\n // except according to those terms.\n \n \n-// error-pattern: attempted dynamic environment-capture\n+// error-pattern: can't capture dynamic environment in a fn item;\n \n fn main() {\n     let bar: int = 5;"}, {"sha": "641403fb85a148eb913883981857c78c2c8baa60", "filename": "src/test/compile-fail/issue-3021-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -18,7 +18,7 @@ fn siphash(k0 : u64) {\n \n     impl siphash {\n         pub fn reset(&mut self) {\n-           self.v0 = k0 ^ 0x736f6d6570736575; //~ ERROR attempted dynamic environment-capture\n+           self.v0 = k0 ^ 0x736f6d6570736575; //~ ERROR can't capture dynamic environment\n            //~^ ERROR unresolved name `k0`.\n         }\n     }"}, {"sha": "c5ee9e8bb90e1b9330a4b524f44e47941839acee", "filename": "src/test/compile-fail/issue-3021-d.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -30,9 +30,9 @@ fn siphash(k0 : u64, k1 : u64) -> siphash {\n \n    impl siphash for SipState {\n         fn reset(&self) {\n-            self.v0 = k0 ^ 0x736f6d6570736575;  //~ ERROR attempted dynamic environment-capture\n+            self.v0 = k0 ^ 0x736f6d6570736575; //~ ERROR can't capture dynamic environment\n             //~^ ERROR unresolved name `k0`.\n-            self.v1 = k1 ^ 0x646f72616e646f6d;   //~ ERROR attempted dynamic environment-capture\n+            self.v1 = k1 ^ 0x646f72616e646f6d; //~ ERROR can't capture dynamic environment\n             //~^ ERROR unresolved name `k1`.\n         }\n         fn result(&self) -> u64 { return mk_result(self); }"}, {"sha": "56ade814db0207bf60ff70c2a245ec00064e4365", "filename": "src/test/compile-fail/issue-3021.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af30fe25a58c5eb1ac088f824b22621ed3652976/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs?ref=af30fe25a58c5eb1ac088f824b22621ed3652976", "patch": "@@ -21,7 +21,7 @@ fn siphash(k0 : u64) -> SipHash {\n \n     impl SipHash for SipState {\n         fn reset(&self) {\n-           self.v0 = k0 ^ 0x736f6d6570736575; //~ ERROR attempted dynamic environment-capture\n+           self.v0 = k0 ^ 0x736f6d6570736575; //~ ERROR can't capture dynamic environment\n            //~^ ERROR unresolved name `k0`.\n         }\n     }"}]}