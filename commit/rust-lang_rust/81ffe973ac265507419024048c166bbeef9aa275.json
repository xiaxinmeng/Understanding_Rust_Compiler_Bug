{"sha": "81ffe973ac265507419024048c166bbeef9aa275", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZmZlOTczYWMyNjU1MDc0MTkwMjQwNDhjMTY2YmJlZWY5YWEyNzU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-06T17:54:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-06T17:54:41Z"}, "message": "Document certain invariants", "tree": {"sha": "18686b03811a4e52ea8e365535dd3dc780c4b07f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18686b03811a4e52ea8e365535dd3dc780c4b07f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81ffe973ac265507419024048c166bbeef9aa275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81ffe973ac265507419024048c166bbeef9aa275", "html_url": "https://github.com/rust-lang/rust/commit/81ffe973ac265507419024048c166bbeef9aa275", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81ffe973ac265507419024048c166bbeef9aa275/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae1acbd09c8e98e4e23f01f633ad551dabd5c578", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1acbd09c8e98e4e23f01f633ad551dabd5c578", "html_url": "https://github.com/rust-lang/rust/commit/ae1acbd09c8e98e4e23f01f633ad551dabd5c578"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "903cb4055a8398bb27328934ef2ebb8945e477e4", "filename": "docs/dev/README.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/81ffe973ac265507419024048c166bbeef9aa275/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/81ffe973ac265507419024048c166bbeef9aa275/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=81ffe973ac265507419024048c166bbeef9aa275", "patch": "@@ -241,6 +241,33 @@ struct Foo {\n For `.md` and `.adoc` files, prefer a sentence-per-line format, don't wrap lines.\n If the line is too long, you want to split the sentence in two :-)\n \n+# Architecture Invariants\n+\n+This section tries to document high-level design constraints, which are not\n+always obvious from the low-level code.\n+\n+## Incomplete syntax trees\n+\n+Syntax trees are by design incomplete and do not enforce well-formedness.\n+If ast method returns an `Option`, it *can* be `None` at runtime, even if this is forbidden by the grammar.\n+\n+## LSP indenpendence\n+\n+rust-analyzer is independent from LSP.\n+It provides features for a hypothetical perfect Rust-specific IDE client.\n+Internal representations are lowered to LSP in the `rust-analyzer` crate (the only crate which is allowed to use LSP types).\n+\n+## IDE/Compiler split\n+\n+There's a semi-hard split between \"compiler\" and \"IDE\", at the `ra_hir` crate.\n+Compiler derives new facts about source code.\n+It explicitly acknowledges that not all info is available (ie, you can't look at types during name resolution).\n+\n+IDE assumes that all information is available at all times.\n+\n+IDE should use only types from `ra_hir`, and should not depend on the underling compiler types.\n+`ra_hir` is a facade.\n+\n # Logging\n \n Logging is done by both rust-analyzer and VS Code, so it might be tricky to"}]}