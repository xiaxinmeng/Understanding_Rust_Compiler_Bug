{"sha": "b4422fb14b9e0c030e9da6fa943f0e4850b25a85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NDIyZmIxNGI5ZTBjMDMwZTlkYTZmYTk0M2YwZTQ4NTBiMjVhODU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-03-06T11:43:11Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-03-06T11:46:37Z"}, "message": "Added oli's multivariant test case (alpha renaming the enum name itself).\n\n(And added Ralf's suggested test.)\n\nAdded my own three-variant multi-variant as well.", "tree": {"sha": "719cedc496787cc3c0a81d0484b735ef14d0bf6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/719cedc496787cc3c0a81d0484b735ef14d0bf6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4422fb14b9e0c030e9da6fa943f0e4850b25a85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4422fb14b9e0c030e9da6fa943f0e4850b25a85", "html_url": "https://github.com/rust-lang/rust/commit/b4422fb14b9e0c030e9da6fa943f0e4850b25a85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4422fb14b9e0c030e9da6fa943f0e4850b25a85/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40809b0585d5fe3ddad39fe00a608394ad1dec30", "url": "https://api.github.com/repos/rust-lang/rust/commits/40809b0585d5fe3ddad39fe00a608394ad1dec30", "html_url": "https://github.com/rust-lang/rust/commit/40809b0585d5fe3ddad39fe00a608394ad1dec30"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "5b7c7be42cf065d490add8b19fcda61e442a2742", "filename": "src/test/ui/consts/issue-69191-ice-on-uninhabited-enum-field.rs", "status": "modified", "additions": 63, "deletions": 3, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/b4422fb14b9e0c030e9da6fa943f0e4850b25a85/src%2Ftest%2Fui%2Fconsts%2Fissue-69191-ice-on-uninhabited-enum-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4422fb14b9e0c030e9da6fa943f0e4850b25a85/src%2Ftest%2Fui%2Fconsts%2Fissue-69191-ice-on-uninhabited-enum-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69191-ice-on-uninhabited-enum-field.rs?ref=b4422fb14b9e0c030e9da6fa943f0e4850b25a85", "patch": "@@ -5,20 +5,80 @@\n \n pub enum Void {}\n \n-enum UninhabitedUnivariant { _Variant(Void), }\n+enum UninhabitedUnivariant {\n+    _Variant(Void),\n+}\n+\n+enum UninhabitedMultivariant2 {\n+    _Variant(Void),\n+    _Warriont(Void),\n+}\n+\n+enum UninhabitedMultivariant3 {\n+    _Variant(Void),\n+    _Warriont(Void),\n+    _Worrynot(Void),\n+}\n \n #[repr(C)]\n-enum UninhabitedUnivariantC { _Variant(Void), }\n+enum UninhabitedUnivariantC {\n+    _Variant(Void),\n+}\n \n #[repr(i32)]\n-enum UninhabitedUnivariant32 { _Variant(Void), }\n+enum UninhabitedUnivariant32 {\n+    _Variant(Void),\n+}\n \n fn main() {\n     let _seed: UninhabitedUnivariant = None.unwrap();\n     match _seed {\n         UninhabitedUnivariant::_Variant(_x) => {}\n     }\n \n+    let _seed: UninhabitedMultivariant2 = None.unwrap();\n+    match _seed {\n+        UninhabitedMultivariant2::_Variant(_x) => {}\n+        UninhabitedMultivariant2::_Warriont(_x) => {}\n+    }\n+\n+    let _seed: UninhabitedMultivariant2 = None.unwrap();\n+    match _seed {\n+        UninhabitedMultivariant2::_Variant(_x) => {}\n+        _ => {}\n+    }\n+\n+    let _seed: UninhabitedMultivariant2 = None.unwrap();\n+    match _seed {\n+        UninhabitedMultivariant2::_Warriont(_x) => {}\n+        _ => {}\n+    }\n+\n+    let _seed: UninhabitedMultivariant3 = None.unwrap();\n+    match _seed {\n+        UninhabitedMultivariant3::_Variant(_x) => {}\n+        UninhabitedMultivariant3::_Warriont(_x) => {}\n+        UninhabitedMultivariant3::_Worrynot(_x) => {}\n+    }\n+\n+    let _seed: UninhabitedMultivariant3 = None.unwrap();\n+    match _seed {\n+        UninhabitedMultivariant3::_Variant(_x) => {}\n+        _ => {}\n+    }\n+\n+    let _seed: UninhabitedMultivariant3 = None.unwrap();\n+    match _seed {\n+        UninhabitedMultivariant3::_Warriont(_x) => {}\n+        _ => {}\n+    }\n+\n+    let _seed: UninhabitedMultivariant3 = None.unwrap();\n+    match _seed {\n+        UninhabitedMultivariant3::_Worrynot(_x) => {}\n+        _ => {}\n+    }\n+\n     let _seed: UninhabitedUnivariantC = None.unwrap();\n     match _seed {\n         UninhabitedUnivariantC::_Variant(_x) => {}"}]}