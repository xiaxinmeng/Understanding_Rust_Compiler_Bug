{"sha": "c838b00d540d6e85b7a4ead656ff37d8b9e641cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MzhiMDBkNTQwZDZlODViN2E0ZWFkNjU2ZmYzN2Q4YjllNjQxY2M=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-09-04T22:11:50Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-09-04T22:11:50Z"}, "message": "Merge pull request #257 from cburgdorf/partial_config\n\nAllow partial rustfmt.toml", "tree": {"sha": "df4de7f89dd728e6f098e30ecd1aaf99c77bac38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df4de7f89dd728e6f098e30ecd1aaf99c77bac38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c838b00d540d6e85b7a4ead656ff37d8b9e641cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c838b00d540d6e85b7a4ead656ff37d8b9e641cc", "html_url": "https://github.com/rust-lang/rust/commit/c838b00d540d6e85b7a4ead656ff37d8b9e641cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c838b00d540d6e85b7a4ead656ff37d8b9e641cc/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5ee0f0986f23acb27fabf257e11eb76c6981601", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5ee0f0986f23acb27fabf257e11eb76c6981601", "html_url": "https://github.com/rust-lang/rust/commit/f5ee0f0986f23acb27fabf257e11eb76c6981601"}, {"sha": "14a94f0bcd4d6892674cbe7dcaf8f3613cac30fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/14a94f0bcd4d6892674cbe7dcaf8f3613cac30fc", "html_url": "https://github.com/rust-lang/rust/commit/14a94f0bcd4d6892674cbe7dcaf8f3613cac30fc"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "c7525e930ec5d683cf97566b27c3d227d8f325ac", "filename": "src/config.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c838b00d540d6e85b7a4ead656ff37d8b9e641cc/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c838b00d540d6e85b7a4ead656ff37d8b9e641cc/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=c838b00d540d6e85b7a4ead656ff37d8b9e641cc", "patch": "@@ -52,18 +52,39 @@ macro_rules! create_config {\n             $(pub $i: $ty),+\n         }\n \n+        // Just like the Config struct but with each property wrapped\n+        // as Option<T>. This is used to parse a rustfmt.toml that doesn't\n+        // specity all properties of `Config`.\n+        // We first parse into `ParsedConfig`, then create a default `Config`\n+        // and overwrite the properties with corresponding values from `ParsedConfig`\n+        #[derive(RustcDecodable, Clone)]\n+        pub struct ParsedConfig {\n+            $(pub $i: Option<$ty>),+\n+        }\n+\n         impl Config {\n+\n+            fn fill_from_parsed_config(mut self, parsed: &ParsedConfig) -> Config {\n+            $(\n+                if let Some(val) = parsed.$i {\n+                    self.$i = val;\n+                }\n+            )+\n+                self\n+            }\n+\n             pub fn from_toml(toml: &str) -> Config {\n                 let parsed = toml.parse().unwrap();\n-                match toml::decode(parsed) {\n+                let parsed_config:ParsedConfig = match toml::decode(parsed) {\n                     Some(decoded) => decoded,\n                     None => {\n                         println!(\"Decoding config file failed. Config:\\n{}\", toml);\n                         let parsed: toml::Value = toml.parse().unwrap();\n                         println!(\"\\n\\nParsed:\\n{:?}\", parsed);\n                         panic!();\n                     }\n-                }\n+                };\n+                Config::default().fill_from_parsed_config(&parsed_config)\n             }\n \n             pub fn override_value(&mut self, key: &str, val: &str) {"}]}