{"sha": "db2649363b2c2881870505365cd27f75567042aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMjY0OTM2M2IyYzI4ODE4NzA1MDUzNjVjZDI3Zjc1NTY3MDQyYWE=", "commit": {"author": {"name": "\u5434\u5189\u6ce2", "email": "wuranbo@gmail.com", "date": "2016-07-13T13:53:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-13T13:53:27Z"}, "message": "doc: ffi referenced rust-snappy can not compile\n\nr? @steveklabnik\r\n\r\nThe referenced code https://github.com/thestinger/rust-snappy can not work. Maybe it's the old rust version? I do not know.\r\nSo I try to rewrite these test cases. If it is not what you originally meaning, just ignored it.", "tree": {"sha": "57f2f61d7590100d9f37a652275161bda1deed4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57f2f61d7590100d9f37a652275161bda1deed4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db2649363b2c2881870505365cd27f75567042aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db2649363b2c2881870505365cd27f75567042aa", "html_url": "https://github.com/rust-lang/rust/commit/db2649363b2c2881870505365cd27f75567042aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db2649363b2c2881870505365cd27f75567042aa/comments", "author": {"login": "wuranbo", "id": 10477132, "node_id": "MDQ6VXNlcjEwNDc3MTMy", "avatar_url": "https://avatars.githubusercontent.com/u/10477132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuranbo", "html_url": "https://github.com/wuranbo", "followers_url": "https://api.github.com/users/wuranbo/followers", "following_url": "https://api.github.com/users/wuranbo/following{/other_user}", "gists_url": "https://api.github.com/users/wuranbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuranbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuranbo/subscriptions", "organizations_url": "https://api.github.com/users/wuranbo/orgs", "repos_url": "https://api.github.com/users/wuranbo/repos", "events_url": "https://api.github.com/users/wuranbo/events{/privacy}", "received_events_url": "https://api.github.com/users/wuranbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ab18ce6f7e147a71e953b9a01ed09aff6b95972", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ab18ce6f7e147a71e953b9a01ed09aff6b95972", "html_url": "https://github.com/rust-lang/rust/commit/2ab18ce6f7e147a71e953b9a01ed09aff6b95972"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "3cbe5d6026774abca897db24797882d4065a95f6", "filename": "src/doc/book/ffi.md", "status": "modified", "additions": 56, "deletions": 2, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/db2649363b2c2881870505365cd27f75567042aa/src%2Fdoc%2Fbook%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/db2649363b2c2881870505365cd27f75567042aa/src%2Fdoc%2Fbook%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fffi.md?ref=db2649363b2c2881870505365cd27f75567042aa", "patch": "@@ -183,8 +183,62 @@ pub fn uncompress(src: &[u8]) -> Option<Vec<u8>> {\n }\n ```\n \n-For reference, the examples used here are also available as a [library on\n-GitHub](https://github.com/thestinger/rust-snappy).\n+Then, we can add some tests to show how to use them.\n+\n+```rust\n+# #![feature(libc)]\n+# extern crate libc;\n+# use libc::{c_int, size_t};\n+# unsafe fn snappy_compress(input: *const u8,\n+#                           input_length: size_t,\n+#                           compressed: *mut u8,\n+#                           compressed_length: *mut size_t)\n+#                           -> c_int { 0 }\n+# unsafe fn snappy_uncompress(compressed: *const u8,\n+#                             compressed_length: size_t,\n+#                             uncompressed: *mut u8,\n+#                             uncompressed_length: *mut size_t)\n+#                             -> c_int { 0 }\n+# unsafe fn snappy_max_compressed_length(source_length: size_t) -> size_t { 0 }\n+# unsafe fn snappy_uncompressed_length(compressed: *const u8,\n+#                                      compressed_length: size_t,\n+#                                      result: *mut size_t)\n+#                                      -> c_int { 0 }\n+# unsafe fn snappy_validate_compressed_buffer(compressed: *const u8,\n+#                                             compressed_length: size_t)\n+#                                             -> c_int { 0 }\n+# fn main() { }\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn valid() {\n+        let d = vec![0xde, 0xad, 0xd0, 0x0d];\n+        let c: &[u8] = &compress(&d);\n+        assert!(validate_compressed_buffer(c));\n+        assert!(uncompress(c) == Some(d));\n+    }\n+\n+    #[test]\n+    fn invalid() {\n+        let d = vec![0, 0, 0, 0];\n+        assert!(!validate_compressed_buffer(&d));\n+        assert!(uncompress(&d).is_none());\n+    }\n+\n+    #[test]\n+    fn empty() {\n+        let d = vec![];\n+        assert!(!validate_compressed_buffer(&d));\n+        assert!(uncompress(&d).is_none());\n+        let c = compress(&d);\n+        assert!(validate_compressed_buffer(&c));\n+        assert!(uncompress(&c) == Some(d));\n+    }\n+}\n+```\n \n # Destructors\n "}]}