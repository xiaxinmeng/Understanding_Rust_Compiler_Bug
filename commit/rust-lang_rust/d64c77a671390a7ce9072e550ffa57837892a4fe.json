{"sha": "d64c77a671390a7ce9072e550ffa57837892a4fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NGM3N2E2NzEzOTBhN2NlOTA3MmU1NTBmZmE1NzgzNzg5MmE0ZmU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-12T14:04:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-12T14:04:19Z"}, "message": "Rollup merge of #54989 - Munksgaard:fix-htmldocck-typos, r=tmandry\n\nFix spelling in the documentation to htmldocck.py\n\nI was reading through htmldocck.py, and decided to attempt to clean it up a little bit. Let me know if you disagree with my edits.", "tree": {"sha": "6ea29270cc47b42316115b96ba6a61cf21e45177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ea29270cc47b42316115b96ba6a61cf21e45177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d64c77a671390a7ce9072e550ffa57837892a4fe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbwKnjCRBK7hj4Ov3rIwAAdHIIAAsEbjMYxAauOyBHfIK8mVr/\neuF+o1YICPYEf36XXvfhzYrw4autyybbsffmui8jz78ErxuNxMYB1HAN67zgqVBm\nhvrqiHXUxca3ad5OQVh12CmrK9SDwX24XdtUifWO7+12bbDF2XVoPFffR4CZQvzV\nCuHu3drO6nr4UgyuJX2KNjnVQOpfIOOR4TmXgQXk490+bkgZcPCgMRMIeOpsVbOZ\nLhMAcpDbHIOzCpy55VosDbEfltCKt50x4FErnHK8le7EnWOd1nM8aO51AhbmC7ZD\nrTQ0wfIWTPpXiqdJFKgAYOnQNNvl4/PCdR2C3zUOdL4u0U4/5z/PJ0V5yi2wWNA=\n=Sxza\n-----END PGP SIGNATURE-----\n", "payload": "tree 6ea29270cc47b42316115b96ba6a61cf21e45177\nparent 9eae552a44e045fc92d716ceb374f1274ec8b769\nparent 1de8f51849f4f04063c3e25c55432ff7ff8abeeb\nauthor kennytm <kennytm@gmail.com> 1539353059 +0800\ncommitter GitHub <noreply@github.com> 1539353059 +0800\n\nRollup merge of #54989 - Munksgaard:fix-htmldocck-typos, r=tmandry\n\nFix spelling in the documentation to htmldocck.py\n\nI was reading through htmldocck.py, and decided to attempt to clean it up a little bit. Let me know if you disagree with my edits.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d64c77a671390a7ce9072e550ffa57837892a4fe", "html_url": "https://github.com/rust-lang/rust/commit/d64c77a671390a7ce9072e550ffa57837892a4fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d64c77a671390a7ce9072e550ffa57837892a4fe/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eae552a44e045fc92d716ceb374f1274ec8b769", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eae552a44e045fc92d716ceb374f1274ec8b769", "html_url": "https://github.com/rust-lang/rust/commit/9eae552a44e045fc92d716ceb374f1274ec8b769"}, {"sha": "1de8f51849f4f04063c3e25c55432ff7ff8abeeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de8f51849f4f04063c3e25c55432ff7ff8abeeb", "html_url": "https://github.com/rust-lang/rust/commit/1de8f51849f4f04063c3e25c55432ff7ff8abeeb"}], "stats": {"total": 58, "additions": 30, "deletions": 28}, "files": [{"sha": "91010262981e884981a46110a6acc659bc1d7e99", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/d64c77a671390a7ce9072e550ffa57837892a4fe/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/d64c77a671390a7ce9072e550ffa57837892a4fe/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=d64c77a671390a7ce9072e550ffa57837892a4fe", "patch": "@@ -15,65 +15,66 @@\n \n The principle is simple: This script receives a path to generated HTML\n documentation and a \"template\" script, which has a series of check\n-commands like `@has` or `@matches`. Each command can be used to check if\n+commands like `@has` or `@matches`. Each command is used to check if\n some pattern is present or not present in the particular file or in\n-the particular node of HTML tree. In many cases, the template script\n-happens to be a source code given to rustdoc.\n+a particular node of the HTML tree. In many cases, the template script\n+happens to be the source code given to rustdoc.\n \n While it indeed is possible to test in smaller portions, it has been\n hard to construct tests in this fashion and major rendering errors were\n-discovered much later. This script is designed for making the black-box\n-and regression testing of Rustdoc easy. This does not preclude the needs\n-for unit testing, but can be used to complement related tests by quickly\n+discovered much later. This script is designed to make black-box and\n+regression testing of Rustdoc easy. This does not preclude the needs for\n+unit testing, but can be used to complement related tests by quickly\n showing the expected renderings.\n \n In order to avoid one-off dependencies for this task, this script uses\n a reasonably working HTML parser and the existing XPath implementation\n-from Python's standard library. Hopefully we won't render\n+from Python's standard library. Hopefully, we won't render\n non-well-formed HTML.\n \n # Commands\n \n Commands start with an `@` followed by a command name (letters and\n hyphens), and zero or more arguments separated by one or more whitespace\n-and optionally delimited with single or double quotes. The `@` mark\n-cannot be preceded by a non-whitespace character. Other lines (including\n-every text up to the first `@`) are ignored, but it is recommended to\n-avoid the use of `@` in the template file.\n+characters and optionally delimited with single or double quotes. The `@`\n+mark cannot be preceded by a non-whitespace character. Other lines\n+(including every text up to the first `@`) are ignored, but it is\n+recommended to avoid the use of `@` in the template file.\n \n There are a number of supported commands:\n \n-* `@has PATH` checks for the existence of given file.\n+* `@has PATH` checks for the existence of the given file.\n \n   `PATH` is relative to the output directory. It can be given as `-`\n   which repeats the most recently used `PATH`.\n \n * `@has PATH PATTERN` and `@matches PATH PATTERN` checks for\n-  the occurrence of given `PATTERN` in the given file. Only one\n-  occurrence of given pattern is enough.\n+  the occurrence of the given pattern `PATTERN` in the specified file.\n+  Only one occurrence of the pattern is enough.\n \n   For `@has`, `PATTERN` is a whitespace-normalized (every consecutive\n   whitespace being replaced by one single space character) string.\n   The entire file is also whitespace-normalized including newlines.\n \n   For `@matches`, `PATTERN` is a Python-supported regular expression.\n-  The file remains intact but the regexp is matched with no `MULTILINE`\n-  and `IGNORECASE` option. You can still use a prefix `(?m)` or `(?i)`\n+  The file remains intact but the regexp is matched without the `MULTILINE`\n+  and `IGNORECASE` options. You can still use a prefix `(?m)` or `(?i)`\n   to override them, and `\\A` and `\\Z` for definitely matching\n   the beginning and end of the file.\n \n   (The same distinction goes to other variants of these commands.)\n \n * `@has PATH XPATH PATTERN` and `@matches PATH XPATH PATTERN` checks for\n-  the presence of given `XPATH` in the given HTML file, and also\n-  the occurrence of given `PATTERN` in the matching node or attribute.\n-  Only one occurrence of given pattern in the match is enough.\n+  the presence of the given XPath `XPATH` in the specified HTML file,\n+  and also the occurrence of the given pattern `PATTERN` in the matching\n+  node or attribute. Only one occurrence of the pattern in the match\n+  is enough.\n \n   `PATH` should be a valid and well-formed HTML file. It does *not*\n   accept arbitrary HTML5; it should have matching open and close tags\n   and correct entity references at least.\n \n-  `XPATH` is an XPath expression to match. This is fairly limited:\n+  `XPATH` is an XPath expression to match. The XPath is fairly limited:\n   `tag`, `*`, `.`, `//`, `..`, `[@attr]`, `[@attr='value']`, `[tag]`,\n   `[POS]` (element located in given `POS`), `[last()-POS]`, `text()`\n   and `@attr` (both as the last segment) are supported. Some examples:\n@@ -85,19 +86,20 @@\n   - `//h1[@class=\"fqn\"]/span[1]/a[last()]/@class` matches a value of\n     `class` attribute in the last `a` element (can be followed by more\n     elements that are not `a`) inside the first `span` in the `h1` with\n-    a class of `fqn`. Note that there cannot be no additional elements\n+    a class of `fqn`. Note that there cannot be any additional elements\n     between them due to the use of `/` instead of `//`.\n \n   Do not try to use non-absolute paths, it won't work due to the flawed\n   ElementTree implementation. The script rejects them.\n \n   For the text matches (i.e. paths not ending with `@attr`), any\n   subelements are flattened into one string; this is handy for ignoring\n-  highlights for example. If you want to simply check the presence of\n-  given node or attribute, use an empty string (`\"\"`) as a `PATTERN`.\n+  highlights for example. If you want to simply check for the presence of\n+  a given node or attribute, use an empty string (`\"\"`) as a `PATTERN`.\n \n-* `@count PATH XPATH COUNT' checks for the occurrence of given XPath\n-  in the given file. The number of occurrences must match the given count.\n+* `@count PATH XPATH COUNT' checks for the occurrence of the given XPath\n+  in the specified file. The number of occurrences must match the given\n+  count.\n \n * `@has-dir PATH` checks for the existence of the given directory.\n "}, {"sha": "677aa529f9f349b0823c7744edf64d3cd5f37db5", "filename": "src/test/rustdoc/inline_cross/issue-31948-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d64c77a671390a7ce9072e550ffa57837892a4fe/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64c77a671390a7ce9072e550ffa57837892a4fe/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs?ref=d64c77a671390a7ce9072e550ffa57837892a4fe", "patch": "@@ -22,13 +22,13 @@ extern crate rustdoc_nonreachable_impls;\n pub use rustdoc_nonreachable_impls::hidden::Wobble;\n \n // @has issue_31948_1/trait.Bark.html\n-// FIXME(33025): has - '//code' 'for Foo'\n+// @has - '//code' 'for Foo'\n // @has - '//code' 'for Wobble'\n // @!has - '//code' 'for Wibble'\n pub use rustdoc_nonreachable_impls::Bark;\n \n // @has issue_31948_1/trait.Woof.html\n-// FIXME(33025): has - '//code' 'for Foo'\n+// @has - '//code' 'for Foo'\n // @has - '//code' 'for Wobble'\n // @!has - '//code' 'for Wibble'\n pub use rustdoc_nonreachable_impls::Woof;"}, {"sha": "7b42ed378ef5cbaf3feecf895f897021b2f33f59", "filename": "src/test/rustdoc/inline_cross/issue-31948-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64c77a671390a7ce9072e550ffa57837892a4fe/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64c77a671390a7ce9072e550ffa57837892a4fe/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs?ref=d64c77a671390a7ce9072e550ffa57837892a4fe", "patch": "@@ -22,7 +22,7 @@ extern crate rustdoc_nonreachable_impls;\n pub use rustdoc_nonreachable_impls::hidden::Wobble;\n \n // @has issue_31948_2/trait.Qux.html\n-// FIXME(33025): has - '//code' 'for Foo'\n+// @has - '//code' 'for Foo'\n // @has - '//code' 'for Wobble'\n pub use rustdoc_nonreachable_impls::hidden::Qux;\n "}]}