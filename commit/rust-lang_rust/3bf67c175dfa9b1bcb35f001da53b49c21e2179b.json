{"sha": "3bf67c175dfa9b1bcb35f001da53b49c21e2179b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZjY3YzE3NWRmYTliMWJjYjM1ZjAwMWRhNTNiNDljMjFlMjE3OWI=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-07-10T02:56:46Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-11-29T03:59:30Z"}, "message": "Don't drop blocks on foreign functions\n\nA code like\n\n```rust\nextern \"C\" {\n    fn f() {\n        fn g() {}\n    }\n}\n```\n\nis incorrect and does not compile. Today rustfmt formats this in a way\nthat is correct:\n\n```rust\nextern \"C\" {\n    fn f();\n}\n```\n\nBut this loses information, and doesn't have to be done because we know\nthe content of the block if it is present. During development I don't\nthink rustfmt should drop the block in this context.\n\nCloses #4313", "tree": {"sha": "87e1c9a4fa251882c7ebc7022025bb7f44185edb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e1c9a4fa251882c7ebc7022025bb7f44185edb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bf67c175dfa9b1bcb35f001da53b49c21e2179b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf67c175dfa9b1bcb35f001da53b49c21e2179b", "html_url": "https://github.com/rust-lang/rust/commit/3bf67c175dfa9b1bcb35f001da53b49c21e2179b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bf67c175dfa9b1bcb35f001da53b49c21e2179b/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ffccbb627c35d8d9c156d236e9599c0662f35dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ffccbb627c35d8d9c156d236e9599c0662f35dc", "html_url": "https://github.com/rust-lang/rust/commit/5ffccbb627c35d8d9c156d236e9599c0662f35dc"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "039dd1e1ae04e5abe224cfc8a1bc16c09e846bf9", "filename": "src/items.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3bf67c175dfa9b1bcb35f001da53b49c21e2179b/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf67c175dfa9b1bcb35f001da53b49c21e2179b/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=3bf67c175dfa9b1bcb35f001da53b49c21e2179b", "patch": "@@ -3043,7 +3043,23 @@ impl Rewrite for ast::ForeignItem {\n         let span = mk_sp(self.span.lo(), self.span.hi() - BytePos(1));\n \n         let item_str = match self.kind {\n-            ast::ForeignItemKind::Fn(_, ref fn_sig, ref generics, _) => rewrite_fn_base(\n+            ast::ForeignItemKind::Fn(defaultness, ref fn_sig, ref generics, Some(ref body)) => {\n+                let mut visitor = FmtVisitor::from_context(context);\n+                visitor.block_indent = shape.indent;\n+                visitor.last_pos = self.span.lo();\n+                let inner_attrs = inner_attributes(&self.attrs);\n+                let fn_ctxt = visit::FnCtxt::Foreign;\n+                visitor.visit_fn(\n+                    visit::FnKind::Fn(fn_ctxt, self.ident, &fn_sig, &self.vis, Some(body)),\n+                    generics,\n+                    &fn_sig.decl,\n+                    self.span,\n+                    defaultness,\n+                    Some(&inner_attrs),\n+                );\n+                Some(visitor.buffer.to_owned())\n+            }\n+            ast::ForeignItemKind::Fn(_, ref fn_sig, ref generics, None) => rewrite_fn_base(\n                 context,\n                 shape.indent,\n                 self.ident,"}, {"sha": "3b9b0a2f967ae3849bf9a97bf82d16439beb36a9", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf67c175dfa9b1bcb35f001da53b49c21e2179b/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf67c175dfa9b1bcb35f001da53b49c21e2179b/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=3bf67c175dfa9b1bcb35f001da53b49c21e2179b", "patch": "@@ -370,7 +370,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n \n     // Note that this only gets called for function definitions. Required methods\n     // on traits do not get handled here.\n-    fn visit_fn(\n+    pub(crate) fn visit_fn(\n         &mut self,\n         fk: visit::FnKind<'_>,\n         generics: &ast::Generics,"}, {"sha": "c390ee6ba30faf7c73e0a41e4e8f2b640628cf1d", "filename": "tests/target/issue-4313.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3bf67c175dfa9b1bcb35f001da53b49c21e2179b/tests%2Ftarget%2Fissue-4313.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf67c175dfa9b1bcb35f001da53b49c21e2179b/tests%2Ftarget%2Fissue-4313.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4313.rs?ref=3bf67c175dfa9b1bcb35f001da53b49c21e2179b", "patch": "@@ -0,0 +1,5 @@\n+extern \"C\" {\n+    fn f() {\n+        fn g() {}\n+    }\n+}"}]}