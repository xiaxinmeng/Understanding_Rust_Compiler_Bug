{"sha": "f7a1a9d075d7abd4312499c13a7322e41e5c2606", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YTFhOWQwNzVkN2FiZDQzMTI0OTljMTNhNzMyMmU0MWU1YzI2MDY=", "commit": {"author": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-04-15T10:15:51Z"}, "committer": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-06-09T15:28:31Z"}, "message": "NonZero checked_next_power_of_two.", "tree": {"sha": "752cc4981788dc1528840168a4d2c2f88d8c1c8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/752cc4981788dc1528840168a4d2c2f88d8c1c8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7a1a9d075d7abd4312499c13a7322e41e5c2606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a1a9d075d7abd4312499c13a7322e41e5c2606", "html_url": "https://github.com/rust-lang/rust/commit/f7a1a9d075d7abd4312499c13a7322e41e5c2606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7a1a9d075d7abd4312499c13a7322e41e5c2606/comments", "author": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3e1c358b62f773616c8c7de21bc34f00702e6a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3e1c358b62f773616c8c7de21bc34f00702e6a8", "html_url": "https://github.com/rust-lang/rust/commit/a3e1c358b62f773616c8c7de21bc34f00702e6a8"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "1770b42e20aa818400ff2761a9b60bb922f6dfe7", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f7a1a9d075d7abd4312499c13a7322e41e5c2606/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a1a9d075d7abd4312499c13a7322e41e5c2606/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=f7a1a9d075d7abd4312499c13a7322e41e5c2606", "patch": "@@ -379,6 +379,42 @@ macro_rules! nonzero_unsigned_operations {\n                     // SAFETY: The caller ensures there is no overflow.\n                     unsafe { $Ty::new_unchecked(self.get().unchecked_add(other)) }\n                 }\n+\n+                /// Returns the smallest power of two greater than or equal to n.\n+                /// If the next power of two is greater than the type\u2019s maximum value,\n+                /// [`None`] is returned, otherwise the power of two is wrapped in [`Some`].\n+                ///\n+                /// # Examples\n+                ///\n+                /// ```\n+                /// #![feature(nonzero_ops)]\n+                /// # #![feature(try_trait)]\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n+                ///\n+                /// # fn main() -> Result<(), std::option::NoneError> {\n+                #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n+                #[doc = concat!(\"let three = \", stringify!($Ty), \"::new(3)?;\")]\n+                #[doc = concat!(\"let four = \", stringify!($Ty), \"::new(4)?;\")]\n+                #[doc = concat!(\"let max = \", stringify!($Ty), \"::new(\",\n+                                stringify!($Int), \"::MAX)?;\")]\n+                ///\n+                /// assert_eq!(Some(two), two.checked_next_power_of_two() );\n+                /// assert_eq!(Some(four), three.checked_next_power_of_two() );\n+                /// assert_eq!(None, max.checked_next_power_of_two() );\n+                /// # Ok(())\n+                /// # }\n+                /// ```\n+                #[unstable(feature = \"nonzero_ops\", issue = \"84186\")]\n+                #[inline]\n+                pub const fn checked_next_power_of_two(self) -> Option<$Ty> {\n+                    if let Some(nz) = self.get().checked_next_power_of_two() {\n+                        // SAFETY: The next power of two is positive\n+                        // and overflow is checked.\n+                        Some(unsafe { $Ty::new_unchecked(nz) })\n+                    } else {\n+                        None\n+                    }\n+                }\n             }\n         )+\n     }"}]}