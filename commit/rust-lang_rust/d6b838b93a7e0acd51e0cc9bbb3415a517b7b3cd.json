{"sha": "d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YjgzOGI5M2E3ZTBhY2Q1MWUwY2M5YmJiMzQxNWE1MTdiN2IzY2Q=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-02T14:38:15Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-02T14:38:15Z"}, "message": "Simplify fd examples", "tree": {"sha": "948b296d5858a14586abb5924ca88d7a99096dd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/948b296d5858a14586abb5924ca88d7a99096dd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd", "html_url": "https://github.com/rust-lang/rust/commit/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6", "html_url": "https://github.com/rust-lang/rust/commit/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "d929c8bbd68a1ef7642d8a8c5f53d3fe39437609", "filename": "library/std/src/sys/unix/ext/io.rs", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs?ref=d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd", "patch": "@@ -30,14 +30,13 @@ pub trait AsRawFd {\n     ///\n     /// ```no_run\n     /// use std::fs::File;\n+    /// # use std::io;\n     /// use std::os::unix::io::{AsRawFd, RawFd};\n     ///\n-    /// fn main() -> std::io::Result<()> {\n-    ///     let mut f = File::open(\"foo.txt\")?;\n-    ///     // Note that `raw_fd` is only valid as long as `f` exists.\n-    ///     let raw_fd: RawFd = f.as_raw_fd();\n-    ///     Ok(())\n-    /// }\n+    /// let mut f = File::open(\"foo.txt\")?;\n+    /// // Note that `raw_fd` is only valid as long as `f` exists.\n+    /// let raw_fd: RawFd = f.as_raw_fd();\n+    /// # Ok::<(), io::Error>(())\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn as_raw_fd(&self) -> RawFd;\n@@ -64,16 +63,15 @@ pub trait FromRawFd {\n     ///\n     /// ```no_run\n     /// use std::fs::File;\n+    /// # use std::io;\n     /// use std::os::unix::io::{FromRawFd, IntoRawFd, RawFd};\n     ///\n-    /// fn main() -> std::io::Result<()> {\n-    ///     let f = File::open(\"foo.txt\")?;\n-    ///     let raw_fd: RawFd = f.into_raw_fd();\n-    ///     // SAFETY: no other functions should call `from_raw_fd`, so there\n-    ///     // is only one owner for the file descriptor.\n-    ///     let f = unsafe { File::from_raw_fd(raw_fd) };\n-    ///     Ok(())\n-    /// }\n+    /// let f = File::open(\"foo.txt\")?;\n+    /// let raw_fd: RawFd = f.into_raw_fd();\n+    /// // SAFETY: no other functions should call `from_raw_fd`, so there\n+    /// // is only one owner for the file descriptor.\n+    /// let f = unsafe { File::from_raw_fd(raw_fd) };\n+    /// # Ok::<(), io::Error>(())\n     /// ```\n     #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n     unsafe fn from_raw_fd(fd: RawFd) -> Self;\n@@ -93,13 +91,12 @@ pub trait IntoRawFd {\n     ///\n     /// ```no_run\n     /// use std::fs::File;\n+    /// # use std::io;\n     /// use std::os::unix::io::{IntoRawFd, RawFd};\n     ///\n-    /// fn main() -> std::io::Result<()> {\n-    ///     let f = File::open(\"foo.txt\")?;\n-    ///     let raw_fd: RawFd = f.into_raw_fd();\n-    ///     Ok(())\n-    /// }\n+    /// let f = File::open(\"foo.txt\")?;\n+    /// let raw_fd: RawFd = f.into_raw_fd();\n+    /// # Ok::<(), io::Error>(())\n     /// ```\n     #[stable(feature = \"into_raw_os\", since = \"1.4.0\")]\n     fn into_raw_fd(self) -> RawFd;"}]}