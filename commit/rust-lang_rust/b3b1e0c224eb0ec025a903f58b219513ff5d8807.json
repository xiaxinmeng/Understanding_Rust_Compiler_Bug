{"sha": "b3b1e0c224eb0ec025a903f58b219513ff5d8807", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYjFlMGMyMjRlYjBlYzAyNWE5MDNmNThiMjE5NTEzZmY1ZDg4MDc=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-10-12T22:52:01Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-11-30T20:18:55Z"}, "message": "Intra doc links for f32/f64", "tree": {"sha": "a9985712a850b5813f1bde190891fe56c0311e64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9985712a850b5813f1bde190891fe56c0311e64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3b1e0c224eb0ec025a903f58b219513ff5d8807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b1e0c224eb0ec025a903f58b219513ff5d8807", "html_url": "https://github.com/rust-lang/rust/commit/b3b1e0c224eb0ec025a903f58b219513ff5d8807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3b1e0c224eb0ec025a903f58b219513ff5d8807/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e54b4c3e67aa1b9aebb36e43ff00343155954d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e54b4c3e67aa1b9aebb36e43ff00343155954d8", "html_url": "https://github.com/rust-lang/rust/commit/4e54b4c3e67aa1b9aebb36e43ff00343155954d8"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "5f335b73e9bd632e5b2dcdf4ee6c54d3d6ee72bf", "filename": "library/core/src/num/f32.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b3b1e0c224eb0ec025a903f58b219513ff5d8807/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3b1e0c224eb0ec025a903f58b219513ff5d8807/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs?ref=b3b1e0c224eb0ec025a903f58b219513ff5d8807", "patch": "@@ -776,8 +776,8 @@ impl f32 {\n     /// As the target platform's native endianness is used, portable code\n     /// should use [`to_be_bytes`] or [`to_le_bytes`], as appropriate, instead.\n     ///\n-    /// [`to_be_bytes`]: #method.to_be_bytes\n-    /// [`to_le_bytes`]: #method.to_le_bytes\n+    /// [`to_be_bytes`]: prim@f32::to_be_bytes()\n+    /// [`to_le_bytes`]: prim@f32::to_le_bytes()\n     ///\n     /// # Examples\n     ///\n@@ -804,7 +804,7 @@ impl f32 {\n     ///\n     /// [`to_ne_bytes`] should be preferred over this whenever possible.\n     ///\n-    /// [`to_ne_bytes`]: #method.to_ne_bytes\n+    /// [`to_ne_bytes`]: prim@f32::to_ne_bytes()\n     ///\n     /// # Examples\n     ///\n@@ -864,8 +864,8 @@ impl f32 {\n     /// likely wants to use [`from_be_bytes`] or [`from_le_bytes`], as\n     /// appropriate instead.\n     ///\n-    /// [`from_be_bytes`]: #method.from_be_bytes\n-    /// [`from_le_bytes`]: #method.from_le_bytes\n+    /// [`from_be_bytes`]: prim@f32::from_be_bytes()\n+    /// [`from_le_bytes`]: prim@f32::from_le_bytes()\n     ///\n     /// # Examples\n     ///"}, {"sha": "271671d14ef2522e9781c32682e7c2849aab8f84", "filename": "library/core/src/num/f64.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b3b1e0c224eb0ec025a903f58b219513ff5d8807/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3b1e0c224eb0ec025a903f58b219513ff5d8807/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs?ref=b3b1e0c224eb0ec025a903f58b219513ff5d8807", "patch": "@@ -790,8 +790,8 @@ impl f64 {\n     /// As the target platform's native endianness is used, portable code\n     /// should use [`to_be_bytes`] or [`to_le_bytes`], as appropriate, instead.\n     ///\n-    /// [`to_be_bytes`]: #method.to_be_bytes\n-    /// [`to_le_bytes`]: #method.to_le_bytes\n+    /// [`to_be_bytes`]: prim@f64::to_be_bytes()\n+    /// [`to_le_bytes`]: prim@f64::to_le_bytes()\n     ///\n     /// # Examples\n     ///\n@@ -818,7 +818,7 @@ impl f64 {\n     ///\n     /// [`to_ne_bytes`] should be preferred over this whenever possible.\n     ///\n-    /// [`to_ne_bytes`]: #method.to_ne_bytes\n+    /// [`to_ne_bytes`]: prim@f64::to_ne_bytes()\n     ///\n     /// # Examples\n     ///\n@@ -878,8 +878,8 @@ impl f64 {\n     /// likely wants to use [`from_be_bytes`] or [`from_le_bytes`], as\n     /// appropriate instead.\n     ///\n-    /// [`from_be_bytes`]: #method.from_be_bytes\n-    /// [`from_le_bytes`]: #method.from_le_bytes\n+    /// [`from_be_bytes`]: prim@f64::from_be_bytes()\n+    /// [`from_le_bytes`]: prim@f64::from_le_bytes()\n     ///\n     /// # Examples\n     ///"}]}