{"sha": "30b3f8a11713e32fdb0d0059141289152a46d501", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYjNmOGExMTcxM2UzMmZkYjBkMDA1OTE0MTI4OTE1MmE0NmQ1MDE=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-07-28T21:53:08Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-29T03:30:29Z"}, "message": "Add rust_dom::log_state, for logging the running/blocked/dead vectors per scheduling iteration.", "tree": {"sha": "abf0d4a9299e494db4993fca0ec75c63fad7d052", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abf0d4a9299e494db4993fca0ec75c63fad7d052"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30b3f8a11713e32fdb0d0059141289152a46d501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30b3f8a11713e32fdb0d0059141289152a46d501", "html_url": "https://github.com/rust-lang/rust/commit/30b3f8a11713e32fdb0d0059141289152a46d501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30b3f8a11713e32fdb0d0059141289152a46d501/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5db5eb0c55ff303db96390a4bf6a5365382cc357", "url": "https://api.github.com/repos/rust-lang/rust/commits/5db5eb0c55ff303db96390a4bf6a5365382cc357", "html_url": "https://github.com/rust-lang/rust/commit/5db5eb0c55ff303db96390a4bf6a5365382cc357"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "17cb1498b9330dfdf02e79c49ee8efbbdc17c079", "filename": "src/rt/rust_dom.cpp", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/30b3f8a11713e32fdb0d0059141289152a46d501/src%2Frt%2Frust_dom.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/30b3f8a11713e32fdb0d0059141289152a46d501/src%2Frt%2Frust_dom.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.cpp?ref=30b3f8a11713e32fdb0d0059141289152a46d501", "patch": "@@ -282,6 +282,32 @@ rust_dom::schedule_task()\n     return NULL;\n }\n \n+void\n+rust_dom::log_state() {\n+    if (!running_tasks.is_empty()) {\n+        log(rust_log::TASK, \"running tasks:\");\n+        for (size_t i = 0; i < running_tasks.length(); i++) {\n+            log(rust_log::TASK,\n+                \"\\t task: 0x%\" PRIxPTR, running_tasks[i]);\n+        }\n+    }\n+\n+    if (!blocked_tasks.is_empty()) {\n+        log(rust_log::TASK, \"blocked tasks:\");\n+        for (size_t i = 0; i < blocked_tasks.length(); i++) {\n+            log(rust_log::TASK,\n+                \"\\t task: 0x%\" PRIxPTR \", blocked on: 0x%\" PRIxPTR,\n+                blocked_tasks[i], blocked_tasks[i]->cond);\n+        }\n+    }\n+\n+    if (!dead_tasks.is_empty()) {\n+        log(rust_log::TASK, \"dead tasks:\");\n+        for (size_t i = 0; i < dead_tasks.length(); i++) {\n+            log(rust_log::TASK, \"\\t task: 0x%\" PRIxPTR, dead_tasks[i]);\n+        }\n+    }\n+}\n /**\n  * Starts the main scheduler loop which performs task scheduling for this\n  * domain.\n@@ -307,7 +333,11 @@ rust_dom::start_main_loop()\n         if (scheduled_task == NULL) {\n             log(rust_log::TASK,\n                 \"all tasks are blocked, waiting for progress ...\");\n+            if (_log.is_tracing(rust_log::TASK))\n+                log_state();\n             _progress.wait();\n+            log(rust_log::TASK,\n+                \"progress made, resuming ...\");\n             continue;\n         }\n "}, {"sha": "8247cbbdc7242573cc643aee83d041da9f928ac5", "filename": "src/rt/rust_dom.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30b3f8a11713e32fdb0d0059141289152a46d501/src%2Frt%2Frust_dom.h", "raw_url": "https://github.com/rust-lang/rust/raw/30b3f8a11713e32fdb0d0059141289152a46d501/src%2Frt%2Frust_dom.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.h?ref=30b3f8a11713e32fdb0d0059141289152a46d501", "patch": "@@ -88,6 +88,8 @@ struct rust_dom\n     void reap_dead_tasks();\n     rust_task *schedule_task();\n     int start_main_loop();\n+\n+    void log_state();\n };\n \n //"}]}