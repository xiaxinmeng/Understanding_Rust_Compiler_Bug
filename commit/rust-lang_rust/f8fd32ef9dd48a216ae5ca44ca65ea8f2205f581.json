{"sha": "f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZmQzMmVmOWRkNDhhMjE2YWU1Y2E0NGNhNjVlYThmMjIwNWY1ODE=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-15T03:45:39Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-21T17:59:58Z"}, "message": "Byte/raw binary literal fixes", "tree": {"sha": "37a93edb122a8b540b28be17704a306fb85dec86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37a93edb122a8b540b28be17704a306fb85dec86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581", "html_url": "https://github.com/rust-lang/rust/commit/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fc5cf902f9613f40ce4d4346d1ae98a0904e67a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fc5cf902f9613f40ce4d4346d1ae98a0904e67a", "html_url": "https://github.com/rust-lang/rust/commit/9fc5cf902f9613f40ce4d4346d1ae98a0904e67a"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "e77db28967e336b9474caad94b3276cd4508d970", "filename": "src/grammar/.gitignore", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581/src%2Fgrammar%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581/src%2Fgrammar%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2F.gitignore?ref=f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581", "patch": "@@ -0,0 +1,4 @@\n+verify\n+*.class\n+*.java\n+*.tokens"}, {"sha": "f2705e5421b9b02637fcf70ee8d6b33ca50d910f", "filename": "src/grammar/RustLexer.g4", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581/src%2Fgrammar%2FRustLexer.g4", "raw_url": "https://github.com/rust-lang/rust/raw/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581/src%2Fgrammar%2FRustLexer.g4", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2FRustLexer.g4?ref=f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581", "patch": "@@ -44,6 +44,7 @@ SHR     : '>>' ;\n \n BINOP\n     : PLUS\n+    | SLASH\n     | MINUS\n     | STAR\n     | PERCENT\n@@ -95,6 +96,10 @@ LIT_CHAR\n   : '\\'' ( '\\\\' CHAR_ESCAPE | ~[\\\\'\\n\\t\\r] ) '\\''\n   ;\n \n+LIT_BYTE\n+  : 'b\\'' ( '\\\\' ( [xX] HEXIT HEXIT | [nrt\\\\'\"0] ) | ~[\\\\'\\n\\t\\r] ) '\\''\n+  ;\n+\n fragment INT_SUFFIX\n   : 'i'\n   | 'i8'\n@@ -130,7 +135,7 @@ LIT_STR\n   ;\n \n LIT_BINARY : 'b' LIT_STR ;\n-LIT_BINARY_RAW : 'b' LIT_STR_RAW ;\n+LIT_BINARY_RAW : 'rb' LIT_STR_RAW ;\n \n /* this is a bit messy */\n \n@@ -159,7 +164,7 @@ OUTER_DOC_COMMENT : '//!' ~[\\r\\n]* -> type(DOC_COMMENT) ;\n LINE_COMMENT      : '//' ~[\\r\\n]* -> type(COMMENT) ;\n \n DOC_BLOCK_COMMENT\n-  : ('/**' | '/*!') (DOC_BLOCK_COMMENT | .)*? '*/' -> type(DOC_COMMENT)\n+  : ('/**' ~[*] | '/*!') (DOC_BLOCK_COMMENT | .)*? '*/' -> type(DOC_COMMENT)\n   ;\n \n BLOCK_COMMENT : '/*' (BLOCK_COMMENT | .)*? '*/' -> type(COMMENT) ;"}, {"sha": "c20aebe65d5001052756252693462e029165db59", "filename": "src/grammar/verify.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581/src%2Fgrammar%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581/src%2Fgrammar%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fverify.rs?ref=f8fd32ef9dd48a216ae5ca44ca65ea8f2205f581", "patch": "@@ -71,6 +71,7 @@ fn parse_token_list(file: &str) -> HashMap<String, Token> {\n             \"IDENT\" => id(),\n             \"PLUS\" => BINOP(PLUS),\n             \"LIT_CHAR\" => LIT_CHAR(Name(0)),\n+            \"LIT_BYTE\" => LIT_BYTE(Name(0)),\n             \"EQ\" => EQ,\n             \"RBRACKET\" => RBRACKET,\n             \"COMMENT\" => COMMENT,\n@@ -124,7 +125,7 @@ fn str_to_binop(s: &str) -> BinOp {\n     }\n }\n \n-/// Assuming a raw string/binary literal, strip out the leading/trailing\n+/// Assuming a string/binary literal, strip out the leading/trailing\n /// hashes and surrounding quotes/raw/binary prefix.\n fn fix(mut lit: &str) -> ast::Name {\n     if lit.char_at(0) == 'r' {\n@@ -143,6 +144,15 @@ fn fix(mut lit: &str) -> ast::Name {\n     parse::token::intern(lit.slice(leading_hashes + 1, lit.len() - leading_hashes - 1))\n }\n \n+/// Assuming a char/byte literal, strip the 'b' prefix and the single quotes.\n+fn fixchar(mut lit: &str) -> ast::Name {\n+    if lit.char_at(0) == 'b' {\n+        lit = lit.slice_from(1);\n+    }\n+\n+    parse::token::intern(lit.slice(1, lit.len() - 1))\n+}\n+\n fn count(lit: &str) -> uint {\n     lit.chars().take_while(|c| *c == '#').count()\n }\n@@ -167,7 +177,8 @@ fn parse_antlr_token(s: &str, tokens: &HashMap<String, Token>) -> TokenAndSpan {\n         BINOPEQ(..) => BINOPEQ(str_to_binop(content.slice_to(content.len() - 1))),\n         LIT_STR(..) => LIT_STR(fix(content)),\n         LIT_STR_RAW(..) => LIT_STR_RAW(fix(content), count(content)),\n-        LIT_CHAR(..) => LIT_CHAR(nm),\n+        LIT_CHAR(..) => LIT_CHAR(fixchar(content)),\n+        LIT_BYTE(..) => LIT_BYTE(fixchar(content)),\n         DOC_COMMENT(..) => DOC_COMMENT(nm),\n         LIT_INTEGER(..) => LIT_INTEGER(nm),\n         LIT_FLOAT(..) => LIT_FLOAT(nm),"}]}