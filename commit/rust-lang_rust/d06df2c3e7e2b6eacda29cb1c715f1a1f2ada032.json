{"sha": "d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNmRmMmMzZTdlMmI2ZWFjZGEyOWNiMWM3MTVmMWExZjJhZGEwMzI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-05T13:15:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-05T13:15:31Z"}, "message": "Merge #4756\n\n4756: Cleanup resolution of file paths r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "a1a1439aa2cd1b4cba3c559f41bfbde24a08aa36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1a1439aa2cd1b4cba3c559f41bfbde24a08aa36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe2kVzCRBK7hj4Ov3rIwAAdHIIABf2ZU6iKRQhtl8p0lhQT2X+\njnh/j1z8pIacxLfrKlswZmB2lkbAHlClP2ltK5cOLi/65j6MENxQ44XkslvJ9rp3\nQF2rBMt3Qm4sWLe6QrkEaOWZlZMDxyFoom5qhxB+QgMhwpi1UR0HQC8rdNImmGsk\noou9lw3Dd7Vi7ccDXX+ULlqzqcCXoi6oCzDrSDOErk3obkAHFFGcAQSckjOilAPn\nDZA66xZQAMg7/S1tyDXAyz7NHroPWARau86InqOqsdDAJ8dZqxhj4p6drnKjX4jm\neEYxVAn7Ky0OdIZcNog9188gLUrIgEEP2P7QyT6lQpTwl8nn9HDZq3UwxJFdCrE=\n=PVt1\n-----END PGP SIGNATURE-----\n", "payload": "tree a1a1439aa2cd1b4cba3c559f41bfbde24a08aa36\nparent f98d057218ca30d052da2a119fa0b3108ba3a091\nparent cb9d9040f7e5cb5971deabe3b66045010576a689\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591362931 +0000\ncommitter GitHub <noreply@github.com> 1591362931 +0000\n\nMerge #4756\n\n4756: Cleanup resolution of file paths r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "html_url": "https://github.com/rust-lang/rust/commit/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f98d057218ca30d052da2a119fa0b3108ba3a091", "url": "https://api.github.com/repos/rust-lang/rust/commits/f98d057218ca30d052da2a119fa0b3108ba3a091", "html_url": "https://github.com/rust-lang/rust/commit/f98d057218ca30d052da2a119fa0b3108ba3a091"}, {"sha": "cb9d9040f7e5cb5971deabe3b66045010576a689", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb9d9040f7e5cb5971deabe3b66045010576a689", "html_url": "https://github.com/rust-lang/rust/commit/cb9d9040f7e5cb5971deabe3b66045010576a689"}], "stats": {"total": 126, "additions": 36, "deletions": 90}, "files": [{"sha": "2e63cb46e96fa953543155c11d0dfc285c94b225", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -89,8 +89,7 @@ pub const DEFAULT_LRU_CAP: usize = 128;\n pub trait FileLoader {\n     /// Text of the file.\n     fn file_text(&self, file_id: FileId) -> Arc<String>;\n-    fn resolve_relative_path(&self, anchor: FileId, relative_path: &RelativePath)\n-        -> Option<FileId>;\n+    fn resolve_path(&self, anchor: FileId, path: &str) -> Option<FileId>;\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>>;\n \n     fn resolve_extern_path(\n@@ -155,20 +154,21 @@ impl<T: SourceDatabaseExt> FileLoader for FileLoaderDelegate<&'_ T> {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         SourceDatabaseExt::file_text(self.0, file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        let path = {\n-            let mut path = self.0.file_relative_path(anchor);\n-            assert!(path.pop());\n-            path.push(relative_path);\n-            path.normalize()\n+    /// Note that we intentionally accept a `&str` and not a `&Path` here. This\n+    /// method exists to handle `#[path = \"/some/path.rs\"] mod foo;` and such,\n+    /// so the input is guaranteed to be utf-8 string. We might introduce\n+    /// `struct StrPath(str)` for clarity some day, but it's a bit messy, so we\n+    /// get by with a `&str` for the time being.\n+    fn resolve_path(&self, anchor: FileId, path: &str) -> Option<FileId> {\n+        let rel_path = {\n+            let mut rel_path = self.0.file_relative_path(anchor);\n+            assert!(rel_path.pop());\n+            rel_path.push(path);\n+            rel_path.normalize()\n         };\n         let source_root = self.0.file_source_root(anchor);\n         let source_root = self.0.source_root(source_root);\n-        source_root.file_by_relative_path(&path)\n+        source_root.file_by_relative_path(&rel_path)\n     }\n \n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {"}, {"sha": "cede4a6fc9e363305c67a47aa6ed37eef660cb7e", "filename": "crates/ra_hir_def/src/nameres/mod_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -61,7 +61,7 @@ impl ModDir {\n         };\n \n         for candidate in candidate_files.iter() {\n-            if let Some(file_id) = db.resolve_relative_path(file_id, candidate) {\n+            if let Some(file_id) = db.resolve_path(file_id, candidate.as_str()) {\n                 let mut root_non_dir_owner = false;\n                 let mut mod_path = RelativePathBuf::new();\n                 if !(candidate.ends_with(\"mod.rs\") || attr_path.is_some()) {"}, {"sha": "e7a5182f03c0abbea40d5b68d3d53256f79ee71e", "filename": "crates/ra_hir_def/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_def%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_def%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ftest_db.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -58,12 +58,8 @@ impl FileLoader for TestDB {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, path: &str) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}, {"sha": "eec5fb8ebf85da531227868568c613dddfb2bfa0", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -8,7 +8,7 @@ use crate::{\n use crate::{quote, EagerMacroId, LazyMacroId, MacroCallId};\n use either::Either;\n use mbe::parse_to_token_tree;\n-use ra_db::{FileId, RelativePath};\n+use ra_db::FileId;\n use ra_parser::FragmentKind;\n \n macro_rules! register_builtin {\n@@ -297,7 +297,7 @@ fn relative_file(db: &dyn AstDatabase, call_id: MacroCallId, path: &str) -> Opti\n     let call_site = call_id.as_file().original_file(db);\n \n     // Handle trivial case\n-    if let Some(res) = db.resolve_relative_path(call_site, &RelativePath::new(&path)) {\n+    if let Some(res) = db.resolve_path(call_site, path) {\n         // Prevent include itself\n         return if res == call_site { None } else { Some(res) };\n     }"}, {"sha": "765a2f6d18e9341995ea9604f9872f618267d0cd", "filename": "crates/ra_hir_expand/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -41,12 +41,8 @@ impl FileLoader for TestDB {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, path: &str) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}, {"sha": "21a3bdfd154ff3bd39887637b3cd4c685d64d96f", "filename": "crates/ra_hir_ty/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -72,12 +72,8 @@ impl FileLoader for TestDB {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, path: &str) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}, {"sha": "93d5891a04b0f1dbd8515393fb603f748e74138e", "filename": "crates/ra_ide_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_ide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Fra_ide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Flib.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -57,12 +57,8 @@ impl FileLoader for RootDatabase {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, path: &str) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}, {"sha": "237aaa2a1fb4234b4b3b7f876c43d92d24561c6a", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 12, "deletions": 50, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=d06df2c3e7e2b6eacda29cb1c715f1a1f2ada032", "patch": "@@ -523,8 +523,6 @@ fn main() {\n     let vb = B;\n     message();\n }\n-\n-fn main() { message(); }\n \"###,\n     )\n     .with_config(|config| {\n@@ -552,34 +550,16 @@ fn main() { message(); }\n         },\n         json!([{\n             \"originSelectionRange\": {\n-                \"end\": {\n-                    \"character\": 10,\n-                    \"line\": 12\n-                },\n-                \"start\": {\n-                    \"character\": 8,\n-                    \"line\": 12\n-                }\n+                \"end\": { \"character\": 10, \"line\": 12 },\n+                \"start\": { \"character\": 8, \"line\": 12 }\n             },\n             \"targetRange\": {\n-                \"end\": {\n-                    \"character\": 9,\n-                    \"line\": 3\n-                },\n-                \"start\": {\n-                    \"character\": 0,\n-                    \"line\": 2\n-                }\n+                \"end\": { \"character\": 9, \"line\": 3 },\n+                \"start\": { \"character\": 0, \"line\": 2 }\n             },\n             \"targetSelectionRange\": {\n-                \"end\": {\n-                    \"character\": 8,\n-                    \"line\": 3\n-                },\n-                \"start\": {\n-                    \"character\": 7,\n-                    \"line\": 3\n-                }\n+                \"end\": { \"character\": 8, \"line\": 3 },\n+                \"start\": { \"character\": 7, \"line\": 3 }\n             },\n             \"targetUri\": \"file:///[..]src/main.rs\"\n         }]),\n@@ -595,34 +575,16 @@ fn main() { message(); }\n         },\n         json!([{\n             \"originSelectionRange\": {\n-                \"end\": {\n-                    \"character\": 10,\n-                    \"line\": 13\n-                },\n-                \"start\": {\n-                    \"character\": 8,\n-                    \"line\":13\n-                }\n+                \"end\": { \"character\": 10, \"line\": 13 },\n+                \"start\": { \"character\": 8, \"line\":13 }\n             },\n             \"targetRange\": {\n-                \"end\": {\n-                    \"character\": 9,\n-                    \"line\": 7\n-                },\n-                \"start\": {\n-                    \"character\": 0,\n-                    \"line\":6\n-                }\n+                \"end\": { \"character\": 9, \"line\": 7 },\n+                \"start\": { \"character\": 0, \"line\":6 }\n             },\n             \"targetSelectionRange\": {\n-                \"end\": {\n-                    \"character\": 8,\n-                    \"line\": 7\n-                },\n-                \"start\": {\n-                    \"character\": 7,\n-                    \"line\": 7\n-                }\n+                \"end\": { \"character\": 8, \"line\": 7 },\n+                \"start\": { \"character\": 7, \"line\": 7 }\n             },\n             \"targetUri\": \"file:///[..]src/main.rs\"\n         }]),"}]}