{"sha": "4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMGU0MjQ0NjE0ZjBkMWQ1NDhjMzUzZTY5NWFhMWUyYTY3ZGE3ZDY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-08-10T19:06:59Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-08-12T16:44:16Z"}, "message": "Apply c_enum_min_bits = 8 to (arm|thumb)-none- platforms", "tree": {"sha": "893610f12c98ce160d234c1e6ad2f726c4f009aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/893610f12c98ce160d234c1e6ad2f726c4f009aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "html_url": "https://github.com/rust-lang/rust/commit/4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd116c806aaa59fabd2ab72398d35fc665e8226e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd116c806aaa59fabd2ab72398d35fc665e8226e", "html_url": "https://github.com/rust-lang/rust/commit/fd116c806aaa59fabd2ab72398d35fc665e8226e"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "ed4779c0c023210a112ffd5fa61392f875db0db6", "filename": "compiler/rustc_target/src/spec/armebv7r_none_eabi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabi.rs?ref=4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "patch": "@@ -20,6 +20,8 @@ pub fn target() -> Target {\n             panic_strategy: PanicStrategy::Abort,\n             max_atomic_width: Some(32),\n             emit_debug_gdb_scripts: false,\n+            // GCC and Clang default to 8 for arm-none here\n+            c_enum_min_bits: 8,\n             ..Default::default()\n         },\n     }"}, {"sha": "b60e2895d7727db2863ac5638ca4c872f1609239", "filename": "compiler/rustc_target/src/spec/armebv7r_none_eabihf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabihf.rs?ref=4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "patch": "@@ -21,6 +21,8 @@ pub fn target() -> Target {\n             features: \"+vfp3,-d32,-fp16\".to_string(),\n             max_atomic_width: Some(32),\n             emit_debug_gdb_scripts: false,\n+            // GCC and Clang default to 8 for arm-none here\n+            c_enum_min_bits: 8,\n             ..Default::default()\n         },\n     }"}, {"sha": "88040f49d9e4e926dfd4cce8cb4776f64427d87b", "filename": "compiler/rustc_target/src/spec/armv7a_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7a_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7a_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7a_none_eabi.rs?ref=4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "patch": "@@ -28,6 +28,7 @@ pub fn target() -> Target {\n         max_atomic_width: Some(64),\n         panic_strategy: PanicStrategy::Abort,\n         emit_debug_gdb_scripts: false,\n+        c_enum_min_bits: 8,\n         ..Default::default()\n     };\n     Target {"}, {"sha": "af324843cede5c7090c01279be7fef673308a1c7", "filename": "compiler/rustc_target/src/spec/armv7a_none_eabihf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7a_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7a_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7a_none_eabihf.rs?ref=4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "patch": "@@ -19,6 +19,8 @@ pub fn target() -> Target {\n         max_atomic_width: Some(64),\n         panic_strategy: PanicStrategy::Abort,\n         emit_debug_gdb_scripts: false,\n+        // GCC and Clang default to 8 for arm-none here\n+        c_enum_min_bits: 8,\n         ..Default::default()\n     };\n     Target {"}, {"sha": "c0e970983e70484470aceaeb49af0142128c9385", "filename": "compiler/rustc_target/src/spec/armv7r_none_eabi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7r_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7r_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7r_none_eabi.rs?ref=4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "patch": "@@ -19,6 +19,8 @@ pub fn target() -> Target {\n             panic_strategy: PanicStrategy::Abort,\n             max_atomic_width: Some(32),\n             emit_debug_gdb_scripts: false,\n+            // GCC and Clang default to 8 for arm-none here\n+            c_enum_min_bits: 8,\n             ..Default::default()\n         },\n     }"}, {"sha": "b126887b27b33f946dded05057718f7945e61f47", "filename": "compiler/rustc_target/src/spec/armv7r_none_eabihf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7r_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7r_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7r_none_eabihf.rs?ref=4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "patch": "@@ -20,6 +20,8 @@ pub fn target() -> Target {\n             features: \"+vfp3,-d32,-fp16\".to_string(),\n             max_atomic_width: Some(32),\n             emit_debug_gdb_scripts: false,\n+            // GCC and Clang default to 8 for arm-none here\n+            c_enum_min_bits: 8,\n             ..Default::default()\n         },\n     }"}, {"sha": "e2e528561e79719c9a78f8d29b26c394fa0ba584", "filename": "compiler/rustc_target/src/spec/thumb_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0e4244614f0d1d548c353e695aa1e2a67da7d6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumb_base.rs?ref=4c0e4244614f0d1d548c353e695aa1e2a67da7d6", "patch": "@@ -53,6 +53,9 @@ pub fn opts() -> TargetOptions {\n         // LLVM is eager to trash the link register when calling `noreturn` functions, which\n         // breaks debugging. Preserve LR by default to prevent that from happening.\n         frame_pointer: FramePointer::Always,\n+        // ARM supports multiple ABIs for enums, the linux one matches the default of 32 here\n+        // but any arm-none or thumb-none target will be defaulted to 8 on GCC and clang\n+        c_enum_min_bits: 8,\n         ..Default::default()\n     }\n }"}]}