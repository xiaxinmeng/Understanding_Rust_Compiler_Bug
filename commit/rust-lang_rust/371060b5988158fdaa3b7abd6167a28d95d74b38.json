{"sha": "371060b5988158fdaa3b7abd6167a28d95d74b38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MTA2MGI1OTg4MTU4ZmRhYTNiN2FiZDYxNjdhMjhkOTVkNzRiMzg=", "commit": {"author": {"name": "David Renshaw", "email": "dwrenshaw@gmail.com", "date": "2020-02-10T04:01:23Z"}, "committer": {"name": "David Renshaw", "email": "dwrenshaw@gmail.com", "date": "2020-02-10T04:02:02Z"}, "message": "[parser] change an instance of span_bug() to struct_span_err() to avoid ICE", "tree": {"sha": "c035a26f3179b2bc9d0a6bd1eb9a6bb718bc80ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c035a26f3179b2bc9d0a6bd1eb9a6bb718bc80ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/371060b5988158fdaa3b7abd6167a28d95d74b38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/371060b5988158fdaa3b7abd6167a28d95d74b38", "html_url": "https://github.com/rust-lang/rust/commit/371060b5988158fdaa3b7abd6167a28d95d74b38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/371060b5988158fdaa3b7abd6167a28d95d74b38/comments", "author": {"login": "dwrensha", "id": 495768, "node_id": "MDQ6VXNlcjQ5NTc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/495768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwrensha", "html_url": "https://github.com/dwrensha", "followers_url": "https://api.github.com/users/dwrensha/followers", "following_url": "https://api.github.com/users/dwrensha/following{/other_user}", "gists_url": "https://api.github.com/users/dwrensha/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwrensha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwrensha/subscriptions", "organizations_url": "https://api.github.com/users/dwrensha/orgs", "repos_url": "https://api.github.com/users/dwrensha/repos", "events_url": "https://api.github.com/users/dwrensha/events{/privacy}", "received_events_url": "https://api.github.com/users/dwrensha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dwrensha", "id": 495768, "node_id": "MDQ6VXNlcjQ5NTc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/495768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwrensha", "html_url": "https://github.com/dwrensha", "followers_url": "https://api.github.com/users/dwrensha/followers", "following_url": "https://api.github.com/users/dwrensha/following{/other_user}", "gists_url": "https://api.github.com/users/dwrensha/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwrensha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwrensha/subscriptions", "organizations_url": "https://api.github.com/users/dwrensha/orgs", "repos_url": "https://api.github.com/users/dwrensha/repos", "events_url": "https://api.github.com/users/dwrensha/events{/privacy}", "received_events_url": "https://api.github.com/users/dwrensha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "840bdc349d2885a5173269b653025192969cfebc", "url": "https://api.github.com/repos/rust-lang/rust/commits/840bdc349d2885a5173269b653025192969cfebc", "html_url": "https://github.com/rust-lang/rust/commit/840bdc349d2885a5173269b653025192969cfebc"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "a573a1ee69976bf0aa38f0ba2d5eb59cda888474", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/371060b5988158fdaa3b7abd6167a28d95d74b38/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/371060b5988158fdaa3b7abd6167a28d95d74b38/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=371060b5988158fdaa3b7abd6167a28d95d74b38", "patch": "@@ -214,7 +214,10 @@ impl<'a> Parser<'a> {\n                     let path = match bounds.remove(0) {\n                         GenericBound::Trait(pt, ..) => pt.trait_ref.path,\n                         GenericBound::Outlives(..) => {\n-                            self.span_bug(ty.span, \"unexpected lifetime bound\")\n+                            return Err(self.struct_span_err(\n+                                ty.span,\n+                                \"expected trait bound, not lifetime bound\",\n+                            ));\n                         }\n                     };\n                     self.parse_remaining_bounds(Vec::new(), path, lo, true)"}, {"sha": "a7c5a5e13008aab8f32a4ef0fce4aef0b0af3b60", "filename": "src/test/ui/parser/issue-68890.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/371060b5988158fdaa3b7abd6167a28d95d74b38/src%2Ftest%2Fui%2Fparser%2Fissue-68890.rs", "raw_url": "https://github.com/rust-lang/rust/raw/371060b5988158fdaa3b7abd6167a28d95d74b38/src%2Ftest%2Fui%2Fparser%2Fissue-68890.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-68890.rs?ref=371060b5988158fdaa3b7abd6167a28d95d74b38", "patch": "@@ -0,0 +1,4 @@\n+enum e{A((?'a a+?+l))}\n+//~^ ERROR `?` may only modify trait bounds, not lifetime bounds\n+//~| ERROR expected one of `)`, `+`, or `,`\n+//~| ERROR expected trait bound, not lifetime bound"}, {"sha": "9bb8761b67b5fad3807d0afba91197a1d67da339", "filename": "src/test/ui/parser/issue-68890.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/371060b5988158fdaa3b7abd6167a28d95d74b38/src%2Ftest%2Fui%2Fparser%2Fissue-68890.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/371060b5988158fdaa3b7abd6167a28d95d74b38/src%2Ftest%2Fui%2Fparser%2Fissue-68890.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-68890.stderr?ref=371060b5988158fdaa3b7abd6167a28d95d74b38", "patch": "@@ -0,0 +1,20 @@\n+error: `?` may only modify trait bounds, not lifetime bounds\n+  --> $DIR/issue-68890.rs:1:11\n+   |\n+LL | enum e{A((?'a a+?+l))}\n+   |           ^\n+\n+error: expected one of `)`, `+`, or `,`, found `a`\n+  --> $DIR/issue-68890.rs:1:15\n+   |\n+LL | enum e{A((?'a a+?+l))}\n+   |               ^ expected one of `)`, `+`, or `,`\n+\n+error: expected trait bound, not lifetime bound\n+  --> $DIR/issue-68890.rs:1:11\n+   |\n+LL | enum e{A((?'a a+?+l))}\n+   |           ^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}