{"sha": "ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNWVmYWYxNmZjOWYwODBhOGIzOWU4ZDJjNzU4MmRiYjg0NmEwMmU=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-04-29T13:03:49Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-04-29T13:03:49Z"}, "message": "update tests", "tree": {"sha": "7cc7f79db84e2c9ce177e44af405f24cfb323b5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cc7f79db84e2c9ce177e44af405f24cfb323b5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "html_url": "https://github.com/rust-lang/rust/commit/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7415bcea235cab84b775d59dab3b9a0cb68dd01", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7415bcea235cab84b775d59dab3b9a0cb68dd01", "html_url": "https://github.com/rust-lang/rust/commit/f7415bcea235cab84b775d59dab3b9a0cb68dd01"}], "stats": {"total": 142, "additions": 82, "deletions": 60}, "files": [{"sha": "fd09d50d72d9a525365050f3c08a1105db79b83d", "filename": "tests/target/import-fencepost-length.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fimport-fencepost-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fimport-fencepost-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimport-fencepost-length.rs?ref=ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "patch": "@@ -1,4 +1,7 @@\n use aaaaaaaaaaaaaaa::bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n-use aaaaaaaaaaaaaaa::{bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc, dddddddd};\n-use aaaaaaaaaaaaaaa::{bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc,\n-                      ddddddddd};\n+use aaaaaaaaaaaaaaa::{\n+    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc, dddddddd,\n+};\n+use aaaaaaaaaaaaaaa::{\n+    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc, ddddddddd,\n+};"}, {"sha": "189f67cd8e9b91f0976581f39efc74af3eab946a", "filename": "tests/target/imports.rs", "status": "modified", "additions": 46, "deletions": 31, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "patch": "@@ -4,18 +4,22 @@\n // Imports.\n \n // Long import.\n-use exceedingly::loooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{ItemA,\n-                                                                                             ItemB};\n-use exceedingly::looooooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{ItemA,\n-                                                                                                ItemB};\n+use exceedingly::loooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{\n+    ItemA, ItemB,\n+};\n+use exceedingly::looooooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{\n+    ItemA, ItemB,\n+};\n use syntax::ast::{ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic};\n \n-use list::{// Another item\n-           AnotherItem, // Another Comment\n-           // Last Item\n-           LastItem,\n-           // Some item\n-           SomeItem /* Comment */};\n+use list::{\n+    // Another item\n+    AnotherItem, // Another Comment\n+    // Last Item\n+    LastItem,\n+    // Some item\n+    SomeItem, /* Comment */\n+};\n \n use test::{/* A */ self /* B */, Other /* C */};\n \n@@ -28,11 +32,14 @@ use std::io;\n use std::io;\n \n mod Foo {\n-    pub use syntax::ast::{ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic};\n+    pub use syntax::ast::{\n+        ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic,\n+    };\n \n     mod Foo2 {\n-        pub use syntax::ast::{self, ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod,\n-                              ItemStatic};\n+        pub use syntax::ast::{\n+            self, ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic,\n+        };\n     }\n }\n \n@@ -72,24 +79,32 @@ use foo::issue_1356::*;\n use self::unix::{};\n \n // nested imports\n-use foo::{a,\n-          b,\n-          bar::{baz,\n-                foo::{a, b, cxxxxxxxxxxxxx, yyyyyyyyyyyyyy, zzzzzzzzzzzzzzzz},\n-                qux,\n-                xxxxxxxxxxx,\n-                yyyyyyyyyyyyy,\n-                zzzzzzzzzzzzzzzz},\n-          boo,\n-          c};\n-\n-use fooo::{baar::foobar::{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n-                          zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz},\n-           bar,\n-           bar::*,\n-           x,\n-           y,\n-           z};\n+use foo::{\n+    a,\n+    b,\n+    bar::{\n+        baz,\n+        foo::{a, b, cxxxxxxxxxxxxx, yyyyyyyyyyyyyy, zzzzzzzzzzzzzzzz},\n+        qux,\n+        xxxxxxxxxxx,\n+        yyyyyyyyyyyyy,\n+        zzzzzzzzzzzzzzzz,\n+    },\n+    boo,\n+    c,\n+};\n+\n+use fooo::{\n+    baar::foobar::{\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n+    },\n+    bar,\n+    bar::*,\n+    x,\n+    y,\n+    z,\n+};\n \n // nested imports with a single sub-tree.\n use a::b::c::d;"}, {"sha": "b82e41621a8c3e87f52270d15fd45e2d1cd843c0", "filename": "tests/target/issue-2111.rs", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fissue-2111.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fissue-2111.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2111.rs?ref=ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "patch": "@@ -1,26 +1,28 @@\n // rustfmt-normalize_comments: false\n \n // An import with single line comments.\n-use super::{DelayChoice,\n-            Destinations,\n-            Holding,\n-            LodaModel,\n-            MethodDescription,\n-            ModelBehaviour,\n-            ModelEdges,\n-            ModelProperties,\n-            ModelRequestGraph,\n-            ModelSelector,\n-            RequestDescription,\n-            StringMap,\n-            Switch,\n-            //    ModelMetaData,\n-            //    Generated,\n-            //    SecondsString,\n-            //    DateString,\n-            //    ModelConfiguration,\n-            //    ModelRequests,\n-            //    RestResponse,\n-            //    RestResponseCode,\n-            //    UniformHolding\n-            SCHEMA_VERSIONS};\n+use super::{\n+    DelayChoice,\n+    Destinations,\n+    Holding,\n+    LodaModel,\n+    MethodDescription,\n+    ModelBehaviour,\n+    ModelEdges,\n+    ModelProperties,\n+    ModelRequestGraph,\n+    ModelSelector,\n+    RequestDescription,\n+    StringMap,\n+    Switch,\n+    //    ModelMetaData,\n+    //    Generated,\n+    //    SecondsString,\n+    //    DateString,\n+    //    ModelConfiguration,\n+    //    ModelRequests,\n+    //    RestResponse,\n+    //    RestResponseCode,\n+    //    UniformHolding\n+    SCHEMA_VERSIONS,\n+};"}, {"sha": "446b4357de3b1ed067caee8b81db66a81c58725b", "filename": "tests/target/multiple.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e/tests%2Ftarget%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiple.rs?ref=ce5efaf16fc9f080a8b39e8d2c7582dbb846a02e", "patch": "@@ -16,9 +16,11 @@ extern crate foo;\n extern crate foo;\n \n use std::cell::*;\n-use std::{self, any, ascii, borrow, borrow, borrow, borrow, borrow, borrow, borrow, borrow,\n-          borrow, borrow, borrow, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed,\n-          boxed, char, char, char, char, char, char, char, char, char, char};\n+use std::{\n+    self, any, ascii, borrow, borrow, borrow, borrow, borrow, borrow, borrow, borrow, borrow,\n+    borrow, borrow, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, char,\n+    char, char, char, char, char, char, char, char, char,\n+};\n \n mod doc;\n mod other;"}]}