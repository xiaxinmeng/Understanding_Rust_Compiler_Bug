{"sha": "01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "node_id": "C_kwDOAAsO6NoAKDAxYWFhZDNmMWZkMjI0ZDM3NjFjMmQzYjc4NDY5YzVlZDlkYjdmZjU", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-06-06T07:37:30Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-06-06T07:37:30Z"}, "message": "remove `has_error_field` helper method", "tree": {"sha": "bd021e0f595ae8044f9ca50da63bcad1865074c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd021e0f595ae8044f9ca50da63bcad1865074c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "html_url": "https://github.com/rust-lang/rust/commit/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd9bf594366e73efb1a26a023e0b4de8eff82b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd9bf594366e73efb1a26a023e0b4de8eff82b94", "html_url": "https://github.com/rust-lang/rust/commit/fd9bf594366e73efb1a26a023e0b4de8eff82b94"}], "stats": {"total": 49, "additions": 9, "deletions": 40}, "files": [{"sha": "a269a7a1d8b1ec341f3809a54cc2764f9aff0e76", "filename": "compiler/rustc_hir_analysis/src/check/wfcheck.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "patch": "@@ -1745,9 +1745,11 @@ fn check_variances_for_type_defn<'tcx>(\n     item: &hir::Item<'tcx>,\n     hir_generics: &hir::Generics<'_>,\n ) {\n-    let ty = tcx.type_of(item.owner_id).subst_identity();\n-    if tcx.has_error_field(ty) {\n-        return;\n+    let identity_substs = ty::InternalSubsts::identity_for_item(tcx, item.owner_id);\n+    for field in tcx.adt_def(item.owner_id).all_fields() {\n+        if field.ty(tcx, identity_substs).references_error() {\n+            return;\n+        }\n     }\n \n     let ty_predicates = tcx.predicates_of(item.owner_id);"}, {"sha": "d45e4d595a7cf718959c938723fffbfdd651ec11", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "patch": "@@ -173,18 +173,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         }\n     }\n \n-    pub fn has_error_field(self, ty: Ty<'tcx>) -> bool {\n-        if let ty::Adt(def, substs) = *ty.kind() {\n-            for field in def.all_fields() {\n-                let field_ty = field.ty(self, substs);\n-                if let ty::Error(_) = field_ty.kind() {\n-                    return true;\n-                }\n-            }\n-        }\n-        false\n-    }\n-\n     /// Attempts to returns the deeply last field of nested structures, but\n     /// does not apply any normalization in its search. Returns the same type\n     /// if input `ty` is not a structure at all."}, {"sha": "e508890dd7c8bf6adadb63adb1f278f188d2859d", "filename": "tests/ui/const-generics/const-param-type-depends-on-type-param.full.stderr", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.full.stderr?ref=01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "patch": "@@ -6,16 +6,6 @@ LL | pub struct Dependent<T, const X: T>([(); X]);\n    |\n    = note: type parameters may not be used in the type of const parameters\n \n-error[E0392]: parameter `T` is never used\n-  --> $DIR/const-param-type-depends-on-type-param.rs:11:22\n-   |\n-LL | pub struct Dependent<T, const X: T>([(); X]);\n-   |                      ^ unused parameter\n-   |\n-   = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n-   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0392, E0770.\n-For more information about an error, try `rustc --explain E0392`.\n+For more information about this error, try `rustc --explain E0770`."}, {"sha": "e508890dd7c8bf6adadb63adb1f278f188d2859d", "filename": "tests/ui/const-generics/const-param-type-depends-on-type-param.min.stderr", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.min.stderr?ref=01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "patch": "@@ -6,16 +6,6 @@ LL | pub struct Dependent<T, const X: T>([(); X]);\n    |\n    = note: type parameters may not be used in the type of const parameters\n \n-error[E0392]: parameter `T` is never used\n-  --> $DIR/const-param-type-depends-on-type-param.rs:11:22\n-   |\n-LL | pub struct Dependent<T, const X: T>([(); X]);\n-   |                      ^ unused parameter\n-   |\n-   = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n-   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0392, E0770.\n-For more information about an error, try `rustc --explain E0392`.\n+For more information about this error, try `rustc --explain E0770`."}, {"sha": "fc3aa9cbc27c90a9cce5d4c33c6661f9a765a086", "filename": "tests/ui/const-generics/const-param-type-depends-on-type-param.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs?ref=01aaad3f1fd224d3761c2d3b78469c5ed9db7ff5", "patch": "@@ -10,6 +10,5 @@\n \n pub struct Dependent<T, const X: T>([(); X]);\n //~^ ERROR: the type of const parameters must not depend on other generic parameters\n-//~| ERROR: parameter `T` is never used\n \n fn main() {}"}]}