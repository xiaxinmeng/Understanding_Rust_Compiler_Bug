{"sha": "3b2642ffa7eceb9d04113d34e8136bd4b4e429d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMjY0MmZmYTdlY2ViOWQwNDExM2QzNGU4MTM2YmQ0YjRlNDI5ZDU=", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-07-30T18:16:42Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-07-30T18:16:42Z"}, "message": "Add comments to explain the test case and the special treatment", "tree": {"sha": "c3c1d2dcdfd46588e97e2bdf0b1c42116122fa16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3c1d2dcdfd46588e97e2bdf0b1c42116122fa16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAl8jDr4ACgkQPNdIZH7v\nY1l/Ew/8CGdfDO6lJSdMxE4NxBRKQIBoJ5YUYwJZIpO7CIqYowTIomrGP1pcxKaO\neGGY+D9xMHE54Y3IvHOYibrwcZygRrJ6jyJ9vFLlCC/ok+djs8FNl4WG9oof/txz\nzxm6o1PMVl7m5tHprrTfVdxt7iVyjKIcu79UF8qT9Mj13oMos7b88VK6rLMYvTqm\nDEYm3hig4qDPqq5U2WkFjJwNcgWMa8PVKF3doxZV9ct3pteqCf1ZNNWscCJgGVgq\nkTb0oh6moSLJJxFlLgxxag2hd758DknHhCzCTx1+AlyltZyGWrEmtid4cgAZKH7r\nS6ST066jLNgL2wdG1mUj8HtO3M3mUf9l1s1kWBF4xbJx1isI/KHTabkc2xyvMTwY\nUs1fXkEOFqDTZuYqUB3us0T3eTp/vYQGzID+ICh4xXwWZHI5IsN/bAZT4evQuvky\nBZnfxl0sG62K5SpLP9sSdv7unvEIAI1Fp7ApAFB+G1HASqugjf3Uc41jcm2BgRDv\nwJWWykrCTCTWo1vLHH3eEXosWT3BoUEtALOxxcGo2otfd/R9JWtshyudFFaVBKu0\n0qbm44dRCpFtRCeVxF+t39l8FZQlbVy4kOEhnJm/A3xZduBlik0jKpdxk6A/ZGL8\n7LMZmsRtJeiuX8loz1NVPMwbolAKY8nce4lWg48m+YGlhG/kUrs=\n=L20V\n-----END PGP SIGNATURE-----", "payload": "tree c3c1d2dcdfd46588e97e2bdf0b1c42116122fa16\nparent ddbe69a5b2f268042d7d68b0bb5d2cac0055519b\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1596133002 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1596133002 +0800\n\nAdd comments to explain the test case and the special treatment\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5", "html_url": "https://github.com/rust-lang/rust/commit/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "html_url": "https://github.com/rust-lang/rust/commit/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "688f48f32b1207ed81da72845aa325a0dbe00747", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=3b2642ffa7eceb9d04113d34e8136bd4b4e429d5", "patch": "@@ -506,6 +506,10 @@ impl<'tcx> Validator<'_, 'tcx> {\n                 match *elem {\n                     ProjectionElem::Deref => {\n                         let mut not_promotable = true;\n+                        // This is a special treatment for cases like *&STATIC where STATIC is a\n+                        // global static variable.\n+                        // This pattern is generated only when global static variables are directly\n+                        // accessed and is qualified for promotion safely.\n                         if let TempState::Defined { location, .. } = self.temps[local] {\n                             let def_stmt =\n                                 self.body[location.block].statements.get(location.statement_index);\n@@ -517,7 +521,15 @@ impl<'tcx> Validator<'_, 'tcx> {\n                             {\n                                 if let Some(did) = c.check_static_ptr(self.tcx) {\n                                     if let Some(hir::ConstContext::Static(..)) = self.const_kind {\n-                                        if !self.tcx.is_thread_local_static(did) {\n+                                        // The `is_empty` predicate is introduced to exclude the case\n+                                        // where the projection operations are [ .field, * ].\n+                                        // The reason is because promotion will be illegal if field\n+                                        // accesses preceed the dereferencing.\n+                                        // Discussion can be found at\n+                                        // https://github.com/rust-lang/rust/pull/74945#discussion_r463063247 \n+                                        // There may be opportunity for generalization, but this needs to be\n+                                        // accounted for.\n+                                        if proj_base.is_empty() && !self.tcx.is_thread_local_static(did) {\n                                             not_promotable = false;\n                                         }\n                                     }"}, {"sha": "500af1e15e12e292f32cc3a5d26bdf39b94fcbe5", "filename": "src/test/ui/statics/static-promotion.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5/src%2Ftest%2Fui%2Fstatics%2Fstatic-promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b2642ffa7eceb9d04113d34e8136bd4b4e429d5/src%2Ftest%2Fui%2Fstatics%2Fstatic-promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatics%2Fstatic-promotion.rs?ref=3b2642ffa7eceb9d04113d34e8136bd4b4e429d5", "patch": "@@ -1,4 +1,12 @@\n-// run-pass\n+// check-pass\n+\n+// Use of global static variables in literal values should be allowed for\n+// promotion.\n+// This test is to demonstrate the issue raised in\n+// https://github.com/rust-lang/rust/issues/70584\n+\n+// Literal values were previously promoted into local static values when\n+// other global static variables are used.\n \n struct A<T: 'static>(&'static T);\n struct B<T: 'static + ?Sized> {"}]}