{"sha": "549ce9a9cf25efa3eba6549f96b2e43bc640faa9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0OWNlOWE5Y2YyNWVmYTNlYmE2NTQ5Zjk2YjJlNDNiYzY0MGZhYTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-28T21:17:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-28T21:17:03Z"}, "message": "Merge #4198\n\n4198: Complete union fields after dot r=matklad a=jonas-schievink\n\n\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "d10c38188fa278500dce9041bccd54b8b3006472", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d10c38188fa278500dce9041bccd54b8b3006472"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/549ce9a9cf25efa3eba6549f96b2e43bc640faa9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeqJ1PCRBK7hj4Ov3rIwAAdHIIAEQP5F78J4Pjc1etIUYDud98\nw7tyJVTBnDKJgiW6bl0gBEAaxL0EIVeGcemb5IoFP6wpnNQAeH0PA9zDLPb4ujP2\nSpFAcY9mhf0gfML5utZMlxyZEr7qbT/Ws9soYpT3RozEwmNg8cwgvgk20I4z23Be\nQBZMIYKJkCh5YhcEz5qzFuqvdgDRvbRY7mweYntOkP2jhWOsyE1/nXST8k07/JqZ\ngI02G5JL8ebGT4HDL9CAoiV0wflyATj18y12JW/hIHBw9yG3Hh4o5/k1XXDOZn/A\nCvG4MMksya2Ju7iF+knGQKQS1bVh/FkFuWIgzhpwujGEGGRnN0IyL98GyCFfO+I=\n=zqpT\n-----END PGP SIGNATURE-----\n", "payload": "tree d10c38188fa278500dce9041bccd54b8b3006472\nparent 0d7c9974b0e48de95b9ed016ef2d42dc11492831\nparent 8cb139090f969c9e8f8eecf9ffe3cd89624526d5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1588108623 +0000\ncommitter GitHub <noreply@github.com> 1588108623 +0000\n\nMerge #4198\n\n4198: Complete union fields after dot r=matklad a=jonas-schievink\n\n\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/549ce9a9cf25efa3eba6549f96b2e43bc640faa9", "html_url": "https://github.com/rust-lang/rust/commit/549ce9a9cf25efa3eba6549f96b2e43bc640faa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/549ce9a9cf25efa3eba6549f96b2e43bc640faa9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d7c9974b0e48de95b9ed016ef2d42dc11492831", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7c9974b0e48de95b9ed016ef2d42dc11492831", "html_url": "https://github.com/rust-lang/rust/commit/0d7c9974b0e48de95b9ed016ef2d42dc11492831"}, {"sha": "8cb139090f969c9e8f8eecf9ffe3cd89624526d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cb139090f969c9e8f8eecf9ffe3cd89624526d5", "html_url": "https://github.com/rust-lang/rust/commit/8cb139090f969c9e8f8eecf9ffe3cd89624526d5"}], "stats": {"total": 65, "additions": 53, "deletions": 12}, "files": [{"sha": "3fb4195718e16639b7f9db61ffb1219aeaa58cfb", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/549ce9a9cf25efa3eba6549f96b2e43bc640faa9/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/549ce9a9cf25efa3eba6549f96b2e43bc640faa9/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=549ce9a9cf25efa3eba6549f96b2e43bc640faa9", "patch": "@@ -1157,18 +1157,21 @@ impl Type {\n \n     pub fn fields(&self, db: &dyn HirDatabase) -> Vec<(Field, Type)> {\n         if let Ty::Apply(a_ty) = &self.ty.value {\n-            if let TypeCtor::Adt(AdtId::StructId(s)) = a_ty.ctor {\n-                let var_def = s.into();\n-                return db\n-                    .field_types(var_def)\n-                    .iter()\n-                    .map(|(local_id, ty)| {\n-                        let def = Field { parent: var_def.into(), id: local_id };\n-                        let ty = ty.clone().subst(&a_ty.parameters);\n-                        (def, self.derived(ty))\n-                    })\n-                    .collect();\n-            }\n+            let variant_id = match a_ty.ctor {\n+                TypeCtor::Adt(AdtId::StructId(s)) => s.into(),\n+                TypeCtor::Adt(AdtId::UnionId(u)) => u.into(),\n+                _ => return Vec::new(),\n+            };\n+\n+            return db\n+                .field_types(variant_id)\n+                .iter()\n+                .map(|(local_id, ty)| {\n+                    let def = Field { parent: variant_id.into(), id: local_id };\n+                    let ty = ty.clone().subst(&a_ty.parameters);\n+                    (def, self.derived(ty))\n+                })\n+                .collect();\n         };\n         Vec::new()\n     }"}, {"sha": "05f825c6fe22225b0042e229789a528142a1b752", "filename": "crates/ra_ide/src/completion/complete_dot.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/549ce9a9cf25efa3eba6549f96b2e43bc640faa9/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/549ce9a9cf25efa3eba6549f96b2e43bc640faa9/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=549ce9a9cf25efa3eba6549f96b2e43bc640faa9", "patch": "@@ -249,6 +249,44 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn test_union_field_completion() {\n+        assert_debug_snapshot!(\n+            do_ref_completion(\n+                r\"\n+            union Un {\n+                field: u8,\n+                other: u16,\n+            }\n+\n+            fn foo(u: Un) {\n+                u.<|>\n+            }\n+            \",\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"field\",\n+                source_range: 140..140,\n+                delete: 140..140,\n+                insert: \"field\",\n+                kind: Field,\n+                detail: \"u8\",\n+            },\n+            CompletionItem {\n+                label: \"other\",\n+                source_range: 140..140,\n+                delete: 140..140,\n+                insert: \"other\",\n+                kind: Field,\n+                detail: \"u16\",\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn test_method_completion() {\n         assert_debug_snapshot!("}]}