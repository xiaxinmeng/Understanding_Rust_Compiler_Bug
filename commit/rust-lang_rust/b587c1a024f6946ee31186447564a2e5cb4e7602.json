{"sha": "b587c1a024f6946ee31186447564a2e5cb4e7602", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ODdjMWEwMjRmNjk0NmVlMzExODY0NDc1NjRhMmU1Y2I0ZTc2MDI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-04T09:58:57Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-15T21:49:22Z"}, "message": "regionck: only add implied bounds from root fn to `free_region_map`", "tree": {"sha": "83e703141cd204b1db89907f60c5c6670fbb0754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83e703141cd204b1db89907f60c5c6670fbb0754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b587c1a024f6946ee31186447564a2e5cb4e7602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b587c1a024f6946ee31186447564a2e5cb4e7602", "html_url": "https://github.com/rust-lang/rust/commit/b587c1a024f6946ee31186447564a2e5cb4e7602", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b587c1a024f6946ee31186447564a2e5cb4e7602/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cc44a569ded1484b0ab4fcc5b8cfd545ea3a4b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cc44a569ded1484b0ab4fcc5b8cfd545ea3a4b5", "html_url": "https://github.com/rust-lang/rust/commit/3cc44a569ded1484b0ab4fcc5b8cfd545ea3a4b5"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "06e0e6ccdb59bc11070007df4956d430ed599760", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b587c1a024f6946ee31186447564a2e5cb4e7602/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b587c1a024f6946ee31186447564a2e5cb4e7602/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=b587c1a024f6946ee31186447564a2e5cb4e7602", "patch": "@@ -144,6 +144,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         rcx.resolve_regions_and_report_errors();\n     }\n \n+    /// Region check a function body. Not invoked on closures, but\n+    /// only on the \"root\" fn item (in which closures may be\n+    /// embedded). Walks the function body and adds various add'l\n+    /// constraints that are needed for region inference. This is\n+    /// separated both to isolate \"pure\" region constraints from the\n+    /// rest of type check and because sometimes we need type\n+    /// inference to have completed before we can determine which\n+    /// constraints to add.\n     pub fn regionck_fn(&self,\n                        fn_id: ast::NodeId,\n                        body: &'gcx hir::Body) {\n@@ -414,7 +422,16 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n                         // system to be more general and to make use\n                         // of *every* relationship that arises here,\n                         // but presently we do not.)\n-                        self.free_region_map.relate_regions(r_a, r_b);\n+                        if body_id == self.fcx.body_id {\n+                            // Only modify `free_region_map` if these\n+                            // are parameters from the root\n+                            // function. That's because this data\n+                            // struture is shared across all functions\n+                            // and hence we don't want to take implied\n+                            // bounds from one closure and use them\n+                            // outside.\n+                            self.free_region_map.relate_regions(r_a, r_b);\n+                        }\n                     }\n                 }\n             }"}]}