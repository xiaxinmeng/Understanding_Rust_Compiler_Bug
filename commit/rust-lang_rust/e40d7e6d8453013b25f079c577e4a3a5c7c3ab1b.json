{"sha": "e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MGQ3ZTZkODQ1MzAxM2IyNWYwNzljNTc3ZTRhM2E1YzdjM2FiMWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-13T09:10:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-13T09:10:43Z"}, "message": "Rollup merge of #84140 - b-naber:parser_past_eof, r=varkor\n\nDon't call bump in check_mistyped_turbofish_with_multiple_type_params\n\nFixes https://github.com/rust-lang/rust/issues/84117", "tree": {"sha": "b40d8443af4839bfc2c6bd2dedf5779f44f9fbea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b40d8443af4839bfc2c6bd2dedf5779f44f9fbea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgdWATCRBK7hj4Ov3rIwAAdHIIALAb6lpk2vpI1kmyEczNp5Jh\nNjbd9frBDSTT3pOifrfqQQu6G/T7NKVcdfZS+lL9rdS5ZvsNZy9YxGvONM3YVod/\nY5WTXquisjCrp9RYFUZlXhVryZhsmqqSdJXSGHLvpTutruaX67FPw42S7bLAg6+k\n/eVzlsxvT+4+JVn2hweEzdM/sDaO4pb+LsO99/kW6fRbTT1ec4PZ75pThWmqr4Iv\n4B3WPNH494dB5L8Yqy1Bd38c10JEmwLKOPH3KA6PyHTHzRIn73IOxIjk6ZuCAGc/\nl7ChdhbEGO60HRWhygvSANUvJITDgHmmarTe0DD8sSYSAria0iK9MZNdUFVEFMw=\n=/Uj9\n-----END PGP SIGNATURE-----\n", "payload": "tree b40d8443af4839bfc2c6bd2dedf5779f44f9fbea\nparent cf67c9bbf79d7f94af2a361fda666426e5e8d400\nparent 4dfaa784332f0fee3e64a75602fd44ad10527dff\nauthor Dylan DPC <dylan.dpc@gmail.com> 1618305043 +0200\ncommitter GitHub <noreply@github.com> 1618305043 +0200\n\nRollup merge of #84140 - b-naber:parser_past_eof, r=varkor\n\nDon't call bump in check_mistyped_turbofish_with_multiple_type_params\n\nFixes https://github.com/rust-lang/rust/issues/84117\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b", "html_url": "https://github.com/rust-lang/rust/commit/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf67c9bbf79d7f94af2a361fda666426e5e8d400", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf67c9bbf79d7f94af2a361fda666426e5e8d400", "html_url": "https://github.com/rust-lang/rust/commit/cf67c9bbf79d7f94af2a361fda666426e5e8d400"}, {"sha": "4dfaa784332f0fee3e64a75602fd44ad10527dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dfaa784332f0fee3e64a75602fd44ad10527dff", "html_url": "https://github.com/rust-lang/rust/commit/4dfaa784332f0fee3e64a75602fd44ad10527dff"}], "stats": {"total": 90, "additions": 75, "deletions": 15}, "files": [{"sha": "70a5ac6f15ec221c3ee9c0ab3a9aa1bdf8a0fa13", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b", "patch": "@@ -666,21 +666,23 @@ impl<'a> Parser<'a> {\n                     );\n                     match x {\n                         Ok((_, _, false)) => {\n-                            self.bump(); // `>`\n-                            match self.parse_expr() {\n-                                Ok(_) => {\n-                                    e.span_suggestion_verbose(\n-                                        binop.span.shrink_to_lo(),\n-                                        TURBOFISH_SUGGESTION_STR,\n-                                        \"::\".to_string(),\n-                                        Applicability::MaybeIncorrect,\n-                                    );\n-                                    e.emit();\n-                                    *expr = self.mk_expr_err(expr.span.to(self.prev_token.span));\n-                                    return Ok(());\n-                                }\n-                                Err(mut err) => {\n-                                    err.cancel();\n+                            if self.eat(&token::Gt) {\n+                                match self.parse_expr() {\n+                                    Ok(_) => {\n+                                        e.span_suggestion_verbose(\n+                                            binop.span.shrink_to_lo(),\n+                                            TURBOFISH_SUGGESTION_STR,\n+                                            \"::\".to_string(),\n+                                            Applicability::MaybeIncorrect,\n+                                        );\n+                                        e.emit();\n+                                        *expr =\n+                                            self.mk_expr_err(expr.span.to(self.prev_token.span));\n+                                        return Ok(());\n+                                    }\n+                                    Err(mut err) => {\n+                                        err.cancel();\n+                                    }\n                                 }\n                             }\n                         }"}, {"sha": "0f20073591598dc13ef724ac434e98ea7a90be75", "filename": "src/test/ui/parser/issue-84117.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b/src%2Ftest%2Fui%2Fparser%2Fissue-84117.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b/src%2Ftest%2Fui%2Fparser%2Fissue-84117.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-84117.rs?ref=e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n+    //~^ ERROR expected one of `>`, a const expression\n+    //~| ERROR expected one of `>`, a const expression, lifetime, or type, found `}`\n+    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+    //~| ERROR expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+}\n+//~^ ERROR expected one of `,`, `:`, `=`, or `>`, found `}`"}, {"sha": "d667a4977d0d31a815ed0b6aa2da6491ce660575", "filename": "src/test/ui/parser/issue-84117.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b/src%2Ftest%2Fui%2Fparser%2Fissue-84117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b/src%2Ftest%2Fui%2Fparser%2Fissue-84117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-84117.stderr?ref=e40d7e6d8453013b25f079c577e4a3a5c7c3ab1b", "patch": "@@ -0,0 +1,49 @@\n+error: expected one of `>`, a const expression, lifetime, or type, found `}`\n+  --> $DIR/issue-84117.rs:2:67\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n+   |                                         ------------              ^ expected one of `>`, a const expression, lifetime, or type\n+   |                                         |          |\n+   |                                         |          help: use `=` if you meant to assign\n+   |                                         while parsing the type for `inner_local`\n+\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+  --> $DIR/issue-84117.rs:2:65\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n+   |                                                                 ^ expected one of 7 possible tokens\n+\n+error: expected one of `,`, `:`, `=`, or `>`, found `}`\n+  --> $DIR/issue-84117.rs:8:1\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n+   |         ------------ help: use `=` if you meant to assign          - expected one of `,`, `:`, `=`, or `>`\n+   |         |\n+   |         while parsing the type for `outer_local`\n+...\n+LL | }\n+   | ^ unexpected token\n+\n+error: expected one of `>`, a const expression, lifetime, or type, found `}`\n+  --> $DIR/issue-84117.rs:2:67\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n+   |                                         ------------              ^ expected one of `>`, a const expression, lifetime, or type\n+   |                                         |          |\n+   |                                         |          help: use `=` if you meant to assign\n+   |                                         while parsing the type for `inner_local`\n+\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+  --> $DIR/issue-84117.rs:2:65\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n+   |                                                                 ^ expected one of 7 possible tokens\n+\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `,`\n+  --> $DIR/issue-84117.rs:2:33\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n+   |                                 ^ expected one of 7 possible tokens\n+\n+error: aborting due to 6 previous errors\n+"}]}