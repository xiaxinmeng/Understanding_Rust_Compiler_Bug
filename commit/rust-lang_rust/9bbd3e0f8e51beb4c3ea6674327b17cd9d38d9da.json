{"sha": "9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYmQzZTBmOGU1MWJlYjRjM2VhNjY3NDMyN2IxN2NkOWQzOGQ5ZGE=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-02-11T21:02:27Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-02-13T19:29:55Z"}, "message": "Remove ProjectionTy::from_ref_and_name", "tree": {"sha": "342c03c5abefe971762961f8f720e08156411c2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/342c03c5abefe971762961f8f720e08156411c2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "html_url": "https://github.com/rust-lang/rust/commit/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfa581ff8747c1d5804a08e8201031a37c2ea14a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa581ff8747c1d5804a08e8201031a37c2ea14a", "html_url": "https://github.com/rust-lang/rust/commit/dfa581ff8747c1d5804a08e8201031a37c2ea14a"}], "stats": {"total": 28, "additions": 6, "deletions": 22}, "files": [{"sha": "a5222e5c70237b848b97b81318f70a1e0719bf6a", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "patch": "@@ -238,6 +238,7 @@ language_item_table! {\n \n     Deref,                   sym::deref,               deref_trait,                Target::Trait;\n     DerefMut,                sym::deref_mut,           deref_mut_trait,            Target::Trait;\n+    DerefTarget,             sym::deref_target,        deref_target,               Target::AssocTy;\n     Receiver,                sym::receiver,            receiver_trait,             Target::Trait;\n \n     Fn,                      kw::Fn,                   fn_trait,                   Target::Trait;"}, {"sha": "8a8e70f76ced3a94140ebc33a87635d739012914", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "patch": "@@ -1112,22 +1112,6 @@ pub struct ProjectionTy<'tcx> {\n }\n \n impl<'tcx> ProjectionTy<'tcx> {\n-    /// Construct a `ProjectionTy` by searching the trait from `trait_ref` for the\n-    /// associated item named `item_name`.\n-    pub fn from_ref_and_name(\n-        tcx: TyCtxt<'_>,\n-        trait_ref: ty::TraitRef<'tcx>,\n-        item_name: Ident,\n-    ) -> ProjectionTy<'tcx> {\n-        let item_def_id = tcx\n-            .associated_items(trait_ref.def_id)\n-            .find_by_name_and_kind(tcx, item_name, ty::AssocKind::Type, trait_ref.def_id)\n-            .unwrap()\n-            .def_id;\n-\n-        ProjectionTy { substs: trait_ref.substs, item_def_id }\n-    }\n-\n     /// Extracts the underlying trait reference from this projection.\n     /// For example, if this is a projection of `<T as Iterator>::Item`,\n     /// then this function would return a `T: Iterator` trait reference."}, {"sha": "3f24a33f7d57074be463fb87460f02063da359e9", "filename": "compiler/rustc_trait_selection/src/autoderef.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs?ref=9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "patch": "@@ -6,7 +6,6 @@ use rustc_infer::infer::InferCtxt;\n use rustc_middle::ty::{self, TraitRef, Ty, TyCtxt, WithConstness};\n use rustc_middle::ty::{ToPredicate, TypeFoldable};\n use rustc_session::DiagnosticMessageId;\n-use rustc_span::symbol::{sym, Ident};\n use rustc_span::Span;\n \n #[derive(Copy, Clone, Debug)]\n@@ -146,11 +145,10 @@ impl<'a, 'tcx> Autoderef<'a, 'tcx> {\n         let normalized_ty = fulfillcx.normalize_projection_type(\n             &self.infcx,\n             self.param_env,\n-            ty::ProjectionTy::from_ref_and_name(\n-                tcx,\n-                trait_ref,\n-                Ident::with_dummy_span(sym::Target),\n-            ),\n+            ty::ProjectionTy {\n+                item_def_id: tcx.lang_items().deref_target()?,\n+                substs: trait_ref.substs,\n+            },\n             cause,\n         );\n         if let Err(e) = fulfillcx.select_where_possible(&self.infcx) {"}, {"sha": "2419771eae212fa79ef30efdcab1fdf0d951cd6e", "filename": "library/core/src/ops/deref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/library%2Fcore%2Fsrc%2Fops%2Fderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da/library%2Fcore%2Fsrc%2Fops%2Fderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fderef.rs?ref=9bbd3e0f8e51beb4c3ea6674327b17cd9d38d9da", "patch": "@@ -64,6 +64,7 @@ pub trait Deref {\n     /// The resulting type after dereferencing.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_diagnostic_item = \"deref_target\"]\n+    #[cfg_attr(not(bootstrap), lang = \"deref_target\")]\n     type Target: ?Sized;\n \n     /// Dereferences the value."}]}