{"sha": "1044099c196ced6108234fe2450fcd2f7f969fa7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNDQwOTljMTk2Y2VkNjEwODIzNGZlMjQ1MGZjZDJmN2Y5NjlmYTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-28T09:48:33Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-28T11:43:11Z"}, "message": "disable debug assertions in the standard library", "tree": {"sha": "e7bf6030903676d26af0485cef61d7dafc4e3256", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7bf6030903676d26af0485cef61d7dafc4e3256"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1044099c196ced6108234fe2450fcd2f7f969fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1044099c196ced6108234fe2450fcd2f7f969fa7", "html_url": "https://github.com/rust-lang/rust/commit/1044099c196ced6108234fe2450fcd2f7f969fa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1044099c196ced6108234fe2450fcd2f7f969fa7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7c77b149bb2401f82ffffc40989d084496986d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7c77b149bb2401f82ffffc40989d084496986d0", "html_url": "https://github.com/rust-lang/rust/commit/c7c77b149bb2401f82ffffc40989d084496986d0"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "6eff5f795e7cb92c67f6b500f96fec25a1650ded", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1044099c196ced6108234fe2450fcd2f7f969fa7/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1044099c196ced6108234fe2450fcd2f7f969fa7/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=1044099c196ced6108234fe2450fcd2f7f969fa7", "patch": "@@ -353,6 +353,8 @@ path = \"lib.rs\"\n     // to the sysroot either.\n     command.env_remove(\"RUSTC_WRAPPER\");\n     command.env_remove(\"RUSTFLAGS\");\n+    // Disable debug assertions in the standard library -- Miri is already slow enough.\n+    command.env(\"RUSTFLAGS\", \"-Cdebug-assertions=off\");\n     // Finally run it!\n     if command.status().expect(\"failed to run xargo\").success().not() {\n         show_error(format!(\"failed to run xargo\"));"}, {"sha": "941f79c7ad90361776a6ab6937d581b13f9cf6f5", "filename": "tests/run-pass/panic/catch_panic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1044099c196ced6108234fe2450fcd2f7f969fa7/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1044099c196ced6108234fe2450fcd2f7f969fa7/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs?ref=1044099c196ced6108234fe2450fcd2f7f969fa7", "patch": "@@ -78,7 +78,6 @@ fn main() {\n     // Assertion and debug assertion\n     test(None, |_old_val| { assert!(false); loop {} });\n     test(None, |_old_val| { debug_assert!(false); loop {} });\n-    test(None, |_old_val| { unsafe { std::char::from_u32_unchecked(0xFD10000); } loop {} }); // trigger debug-assertion in libstd\n \n     eprintln!(\"Success!\"); // Make sure we get this in stderr\n }"}, {"sha": "696dbc1f81813a55ef3198d611748beabed7704b", "filename": "tests/run-pass/panic/catch_panic.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1044099c196ced6108234fe2450fcd2f7f969fa7/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1044099c196ced6108234fe2450fcd2f7f969fa7/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr?ref=1044099c196ced6108234fe2450fcd2f7f969fa7", "patch": "@@ -23,6 +23,4 @@ thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:LL:29\n Caught panic message (&str): assertion failed: false\n thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:LL:29\n Caught panic message (&str): assertion failed: false\n-thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', $LOC\n-Caught panic message (&str): called `Option::unwrap()` on a `None` value\n Success!"}]}