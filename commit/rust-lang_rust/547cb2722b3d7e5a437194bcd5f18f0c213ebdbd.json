{"sha": "547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "node_id": "C_kwDOAAsO6NoAKDU0N2NiMjcyMmIzZDdlNWE0MzcxOTRiY2Q1ZjE4ZjBjMjEzZWJkYmQ", "commit": {"author": {"name": "Takayuki Maeda", "email": "41065217+TaKO8Ki@users.noreply.github.com", "date": "2022-04-21T07:47:01Z"}, "committer": {"name": "Takayuki Maeda", "email": "41065217+TaKO8Ki@users.noreply.github.com", "date": "2022-04-21T07:47:01Z"}, "message": "make `E0117` error clear", "tree": {"sha": "f551faa83f2f75084847659f481c6c9eda52c7da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f551faa83f2f75084847659f481c6c9eda52c7da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "html_url": "https://github.com/rust-lang/rust/commit/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09ccb6c59d026b94edae50ba949b22dfc5d65ed1", "url": "https://api.github.com/repos/rust-lang/rust/commits/09ccb6c59d026b94edae50ba949b22dfc5d65ed1", "html_url": "https://github.com/rust-lang/rust/commit/09ccb6c59d026b94edae50ba949b22dfc5d65ed1"}], "stats": {"total": 67, "additions": 37, "deletions": 30}, "files": [{"sha": "2fc425a6fc414bbef19c699661e96c4cc2ca4c91", "filename": "compiler/rustc_typeck/src/coherence/orphan.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -50,6 +50,7 @@ fn orphan_check_impl(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Result<(), ErrorGua\n             tcx,\n             sp,\n             tr.path.span,\n+            trait_ref.self_ty(),\n             impl_.self_ty.span,\n             &impl_.generics,\n             err,\n@@ -201,18 +202,24 @@ fn emit_orphan_check_error<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     sp: Span,\n     trait_span: Span,\n+    self_ty: Ty<'tcx>,\n     self_ty_span: Span,\n     generics: &hir::Generics<'tcx>,\n     err: traits::OrphanCheckErr<'tcx>,\n ) -> Result<!, ErrorGuaranteed> {\n     Err(match err {\n         traits::OrphanCheckErr::NonLocalInputType(tys) => {\n+            let msg = match self_ty.kind() {\n+                ty::Adt(..) => \"can be implemented for types defined outside of the crate\",\n+                ty::Param(_) => \"can have blanket implementations defined in this trait\",\n+                _ if self_ty.is_primitive() => \"can be implemented for primitive types\",\n+                _ => \"can be implemented for arbitrary types\",\n+            };\n             let mut err = struct_span_err!(\n                 tcx.sess,\n                 sp,\n                 E0117,\n-                \"only traits defined in the current crate can be implemented for \\\n-                        arbitrary types\"\n+                \"only traits defined in the current crate {msg}\"\n             );\n             err.span_label(sp, \"impl doesn't use only types from inside the current crate\");\n             for (ty, is_target_ty) in &tys {"}, {"sha": "fe4b5b410789572e32aaae7e0a003c16eb51df1e", "filename": "src/test/ui/coherence/coherence-cow.re_a.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-cow.rs:18:1\n    |\n LL | impl<T> Remote for Pair<T,Cover<T>> { }"}, {"sha": "da4ede3251ed83729fcfddde25d482c2b91df15b", "filename": "src/test/ui/coherence/coherence-cow.re_b.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-cow.rs:22:1\n    |\n LL | impl<T> Remote for Pair<Cover<T>,T> { }"}, {"sha": "d1a20c0ca101b99e1f597e1957438ba5c72edc8c", "filename": "src/test/ui/coherence/coherence-cow.re_c.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-cow.rs:26:1\n    |\n LL | impl<T,U> Remote for Pair<Cover<T>,U> { }"}, {"sha": "b3ca354c633aade9e89e5bfa9d21eba1407121a2", "filename": "src/test/ui/coherence/coherence-impls-copy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/coherence-impls-copy.rs:5:1\n    |\n LL | impl Copy for i32 {}"}, {"sha": "01f166a21f7683aee5f4d7678f0ec5d598eb30dd", "filename": "src/test/ui/coherence/coherence-orphan.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/coherence-orphan.rs:10:1\n    |\n LL | impl TheTrait<usize> for isize { }\n@@ -10,7 +10,7 @@ LL | impl TheTrait<usize> for isize { }\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-orphan.rs:17:1\n    |\n LL | impl !Send for Vec<isize> { }"}, {"sha": "15c92dfeb07d73d26bc9ab2b6961c5fa5d2a2e07", "filename": "src/test/ui/coherence/coherence-overlapping-pairs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-overlapping-pairs.rs:8:1\n    |\n LL | impl<T> Remote for lib::Pair<T,Foo> { }"}, {"sha": "03d787123812874dd36776e8534131e79af04800", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/coherence-pair-covered-uncovered-1.rs:12:1\n    |\n LL | impl<T, U> Remote1<Pair<T, Local<U>>> for i32 { }"}, {"sha": "73dfe2f572ae3e205c55d8b85d6566401f23b3ac", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-pair-covered-uncovered.rs:8:1\n    |\n LL | impl<T,U> Remote for Pair<T,Local<U>> { }"}, {"sha": "95fdf172ec255404e54378bd1dcb6837b7c8d48d", "filename": "src/test/ui/coherence/coherence-vec-local-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-vec-local-2.rs:11:1\n    |\n LL | impl<T> Remote for Vec<Local<T>> { }"}, {"sha": "4835e771abd3bf807d77609c75e175ba9097063c", "filename": "src/test/ui/coherence/coherence-vec-local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence-vec-local.rs:11:1\n    |\n LL | impl Remote for Vec<Local> { }"}, {"sha": "afc6fc45d0e03f890f5e9c5c020c2fd68f9c7bb4", "filename": "src/test/ui/coherence/coherence_local_err_struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/coherence_local_err_struct.rs:14:1\n    |\n LL | impl lib::MyCopy for lib::MyStruct<MyType> { }"}, {"sha": "93f7a6fdc25d34eb43be6bb0832b416fd415e6da", "filename": "src/test/ui/coherence/impl-foreign-for-foreign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign-for-foreign.rs:10:1\n    |\n LL | impl Remote for i32 {"}, {"sha": "e24537bce229a5f4942b6306a06c48efb599c9ef", "filename": "src/test/ui/coherence/impl-foreign-for-foreign[foreign].stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign-for-foreign[foreign].rs:10:1\n    |\n LL | impl Remote1<Rc<i32>> for i32 {\n@@ -10,7 +10,7 @@ LL | impl Remote1<Rc<i32>> for i32 {\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign-for-foreign[foreign].rs:14:1\n    |\n LL | impl Remote1<Rc<Local>> for f64 {\n@@ -22,7 +22,7 @@ LL | impl Remote1<Rc<Local>> for f64 {\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign-for-foreign[foreign].rs:18:1\n    |\n LL | impl<T> Remote1<Rc<T>> for f32 {"}, {"sha": "55ea4409e6f362f9b7037308b3298b9f61359d16", "filename": "src/test/ui/coherence/impl-foreign-for-fundamental[foreign].stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/impl-foreign-for-fundamental[foreign].rs:10:1\n    |\n LL | impl Remote for Box<i32> {\n@@ -10,7 +10,7 @@ LL | impl Remote for Box<i32> {\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/impl-foreign-for-fundamental[foreign].rs:14:1\n    |\n LL | impl<T> Remote for Box<Rc<T>> {"}, {"sha": "65b3aa394a85f756e942841fa000c0d0822c0f6e", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-foreign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign[foreign]-for-foreign.rs:10:1\n    |\n LL | impl Remote1<u32> for f64 {"}, {"sha": "8e77c13e1116aef74a36dcd8f9fe2542d5bc2277", "filename": "src/test/ui/coherence/impl-foreign[fundemental[foreign]]-for-foreign.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:11:1\n    |\n LL | impl Remote1<Box<String>> for i32 {\n@@ -11,7 +11,7 @@ LL | impl Remote1<Box<String>> for i32 {\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:15:1\n    |\n LL | impl Remote1<Box<Rc<i32>>> for f64 {\n@@ -24,7 +24,7 @@ LL | impl Remote1<Box<Rc<i32>>> for f64 {\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:19:1\n    |\n LL | impl<T> Remote1<Box<Rc<T>>> for f32 {"}, {"sha": "92346c29198cede287a0edafea079342fd0578cb", "filename": "src/test/ui/coherence/impl[t]-foreign-for-foreign[t].stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/impl[t]-foreign-for-foreign[t].rs:11:1\n    |\n LL | impl Remote for Rc<Local> {\n@@ -9,7 +9,7 @@ LL | impl Remote for Rc<Local> {\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/impl[t]-foreign-for-foreign[t].rs:16:1\n    |\n LL | impl<T> Remote for Arc<T> {"}, {"sha": "76d9f5cc0e52a3f8cfdf2b29fd983bd08f8ed4bf", "filename": "src/test/ui/error-codes/E0117.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/E0117.rs:1:1\n    |\n LL | impl Drop for u32 {}"}, {"sha": "dd5099317667307c38ebaac6edae56e645610fd4", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-and-non-const-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.rs?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -3,7 +3,7 @@\n pub struct Int(i32);\n \n impl const std::ops::Add for i32 { //~ ERROR type annotations needed\n-    //~^ ERROR only traits defined in the current crate can be implemented for arbitrary types\n+    //~^ ERROR only traits defined in the current crate can be implemented for primitive types\n     type Output = Self;\n \n     fn add(self, rhs: Self) -> Self {"}, {"sha": "9fd82196e79c11836cdd70352ced3100d967f50b", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-and-non-const-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -1,4 +1,4 @@\n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for primitive types\n   --> $DIR/const-and-non-const-impl.rs:5:1\n    |\n LL | impl const std::ops::Add for i32 {"}, {"sha": "fc3778b796745283c6a11c7928efc1f232047b06", "filename": "src/test/ui/typeck/typeck-default-trait-impl-cross-crate-coherence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr?ref=547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "patch": "@@ -26,7 +26,7 @@ error[E0321]: cross-crate traits with a default impl, like `DefaultedTrait`, can\n LL | impl DefaultedTrait for Box<C> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't implement cross-crate trait for type in another crate\n \n-error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+error[E0117]: only traits defined in the current crate can be implemented for types defined outside of the crate\n   --> $DIR/typeck-default-trait-impl-cross-crate-coherence.rs:22:1\n    |\n LL | impl DefaultedTrait for lib::Something<C> { }"}]}