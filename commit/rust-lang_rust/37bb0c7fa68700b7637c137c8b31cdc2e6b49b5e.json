{"sha": "37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YmIwYzdmYTY4NzAwYjc2MzdjMTM3YzhiMzFjZGMyZTZiNDliNWU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-23T11:16:38Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-24T08:47:45Z"}, "message": "def_collector: Do not forget to save indices of fields with multiple attributes", "tree": {"sha": "f136d47397110c38e059252995a11931dd748fe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f136d47397110c38e059252995a11931dd748fe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e", "html_url": "https://github.com/rust-lang/rust/commit/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f", "html_url": "https://github.com/rust-lang/rust/commit/e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "dd6b1d2119e3d8970532689cb7e5b8eeaaed3922", "filename": "src/librustc_resolve/def_collector.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e", "patch": "@@ -80,15 +80,16 @@ impl<'a> DefCollector<'a> {\n     }\n \n     fn collect_field(&mut self, field: &'a StructField, index: Option<usize>) {\n+        let index = |this: &Self| index.unwrap_or_else(|| {\n+            let node_id = NodeId::placeholder_from_expn_id(this.expansion);\n+            this.definitions.placeholder_field_index(node_id)\n+        });\n+\n         if field.is_placeholder {\n+            self.definitions.set_placeholder_field_index(field.id, index(self));\n             self.visit_macro_invoc(field.id);\n         } else {\n-            let name = field.ident.map(|ident| ident.name)\n-                .or_else(|| index.map(sym::integer))\n-                .unwrap_or_else(|| {\n-                    let node_id = NodeId::placeholder_from_expn_id(self.expansion);\n-                    sym::integer(self.definitions.placeholder_field_index(node_id))\n-                });\n+            let name = field.ident.map_or_else(|| sym::integer(index(self)), |ident| ident.name);\n             let def = self.create_def(field.id, DefPathData::ValueNs(name), field.span);\n             self.with_parent(def, |this| visit::walk_struct_field(this, field));\n         }\n@@ -190,9 +191,6 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n         // and every such attribute expands into a single field after it's resolved.\n         for (index, field) in data.fields().iter().enumerate() {\n             self.collect_field(field, Some(index));\n-            if field.is_placeholder && field.ident.is_none() {\n-                self.definitions.set_placeholder_field_index(field.id, index);\n-            }\n         }\n     }\n "}, {"sha": "7edfd0337945b813c4a513d2b4390a1a301e462e", "filename": "src/test/ui/attributes/unnamed-field-attributes-dup.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e/src%2Ftest%2Fui%2Fattributes%2Funnamed-field-attributes-dup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e/src%2Ftest%2Fui%2Fattributes%2Funnamed-field-attributes-dup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Funnamed-field-attributes-dup.rs?ref=37bb0c7fa68700b7637c137c8b31cdc2e6b49b5e", "patch": "@@ -0,0 +1,11 @@\n+// Duplicate non-builtin attributes can be used on unnamed fields.\n+\n+// check-pass\n+\n+struct S (\n+    #[rustfmt::skip]\n+    #[rustfmt::skip]\n+    u8\n+);\n+\n+fn main() {}"}]}