{"sha": "50510e4491ea8225c3abe997fe27f0c53e0094e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNTEwZTQ0OTFlYTgyMjVjM2FiZTk5N2ZlMjdmMGM1M2UwMDk0ZTI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-05T06:44:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-05T06:44:19Z"}, "message": "remove Scalar::is_null_ptr\n\nMiri does not need it any more and it is otherwise unused", "tree": {"sha": "ff988d1004eb7b7f58e7e9d2bcf59885ea29a224", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff988d1004eb7b7f58e7e9d2bcf59885ea29a224"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50510e4491ea8225c3abe997fe27f0c53e0094e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50510e4491ea8225c3abe997fe27f0c53e0094e2", "html_url": "https://github.com/rust-lang/rust/commit/50510e4491ea8225c3abe997fe27f0c53e0094e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50510e4491ea8225c3abe997fe27f0c53e0094e2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ca7a349da6869286d94fd8159eb225629ffba5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca7a349da6869286d94fd8159eb225629ffba5f", "html_url": "https://github.com/rust-lang/rust/commit/4ca7a349da6869286d94fd8159eb225629ffba5f"}], "stats": {"total": 11, "additions": 0, "deletions": 11}, "files": [{"sha": "867565d5e0922bec9359ea8d1369dfcb7ca35abb", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/50510e4491ea8225c3abe997fe27f0c53e0094e2/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50510e4491ea8225c3abe997fe27f0c53e0094e2/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=50510e4491ea8225c3abe997fe27f0c53e0094e2", "patch": "@@ -275,17 +275,6 @@ impl<'tcx, Tag> Scalar<Tag> {\n         }\n     }\n \n-    #[inline]\n-    pub fn is_null_ptr(self, cx: &impl HasDataLayout) -> bool {\n-        match self {\n-            Scalar::Raw { data, size } => {\n-                assert_eq!(size as u64, cx.data_layout().pointer_size.bytes());\n-                data == 0\n-            },\n-            Scalar::Ptr(_) => false,\n-        }\n-    }\n-\n     #[inline]\n     pub fn from_bool(b: bool) -> Self {\n         Scalar::Raw { data: b as u128, size: 1 }"}]}