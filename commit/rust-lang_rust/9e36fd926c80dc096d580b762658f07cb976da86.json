{"sha": "9e36fd926c80dc096d580b762658f07cb976da86", "node_id": "C_kwDOAAsO6NoAKDllMzZmZDkyNmM4MGRjMDk2ZDU4MGI3NjI2NThmMDdjYjk3NmRhODY", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-10-26T09:58:33Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-10-26T09:58:33Z"}, "message": "stabilize `int_log`", "tree": {"sha": "1f94cc97644a6c0881eea42828a3fe16af7aa8e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f94cc97644a6c0881eea42828a3fe16af7aa8e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e36fd926c80dc096d580b762658f07cb976da86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e36fd926c80dc096d580b762658f07cb976da86", "html_url": "https://github.com/rust-lang/rust/commit/9e36fd926c80dc096d580b762658f07cb976da86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e36fd926c80dc096d580b762658f07cb976da86/comments", "author": null, "committer": null, "parents": [{"sha": "542febd2d383b5082277c7d165b098c0a3b513f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/542febd2d383b5082277c7d165b098c0a3b513f6", "html_url": "https://github.com/rust-lang/rust/commit/542febd2d383b5082277c7d165b098c0a3b513f6"}], "stats": {"total": 70, "additions": 36, "deletions": 34}, "files": [{"sha": "5beb9a7759008fed58c6684e5dba96d8198ef5f8", "filename": "library/core/benches/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Flib.rs?ref=9e36fd926c80dc096d580b762658f07cb976da86", "patch": "@@ -1,7 +1,6 @@\n // wasm32 does not support benches (no time).\n #![cfg(not(target_arch = \"wasm32\"))]\n #![feature(flt2dec)]\n-#![feature(int_log)]\n #![feature(test)]\n #![feature(trusted_random_access)]\n #![feature(iter_array_chunks)]"}, {"sha": "404ddff4f9dab44cde4497c18671480afce09bd4", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=9e36fd926c80dc096d580b762658f07cb976da86", "patch": "@@ -2271,15 +2271,16 @@ macro_rules! int_impl {\n         /// # Panics\n         ///\n         /// This function will panic if `self` is less than or equal to zero,\n-        /// or if `base` is less then 2.\n+        /// or if `base` is less than 2.\n         ///\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".ilog(5), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2298,10 +2299,11 @@ macro_rules! int_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".ilog2(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2319,10 +2321,11 @@ macro_rules! int_impl {\n         /// # Example\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".ilog10(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2343,10 +2346,10 @@ macro_rules! int_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".checked_ilog(5), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2379,10 +2382,10 @@ macro_rules! int_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".checked_ilog2(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2403,10 +2406,10 @@ macro_rules! int_impl {\n         /// # Example\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".checked_ilog10(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "03e78329deb41647ab243960f34721c6ffc7136a", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=9e36fd926c80dc096d580b762658f07cb976da86", "patch": "@@ -457,14 +457,14 @@ macro_rules! nonzero_unsigned_operations {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(int_log)]\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(7).unwrap().ilog2(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(8).unwrap().ilog2(), 3);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(9).unwrap().ilog2(), 3);\")]\n                 /// ```\n-                #[unstable(feature = \"int_log\", issue = \"70887\")]\n+                #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+                #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n                 #[must_use = \"this returns the result of the operation, \\\n                               without modifying the original\"]\n                 #[inline]\n@@ -482,14 +482,14 @@ macro_rules! nonzero_unsigned_operations {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(int_log)]\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(99).unwrap().ilog10(), 1);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(100).unwrap().ilog10(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(101).unwrap().ilog10(), 2);\")]\n                 /// ```\n-                #[unstable(feature = \"int_log\", issue = \"70887\")]\n+                #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+                #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n                 #[must_use = \"this returns the result of the operation, \\\n                               without modifying the original\"]\n                 #[inline]"}, {"sha": "0563f28278d36e8da710808b0cf6ac7246632be2", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=9e36fd926c80dc096d580b762658f07cb976da86", "patch": "@@ -692,15 +692,16 @@ macro_rules! uint_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `self` is zero, or if `base` is less then 2.\n+        /// This function will panic if `self` is zero, or if `base` is less than 2.\n         ///\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".ilog(5), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -719,10 +720,11 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".ilog2(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -740,10 +742,11 @@ macro_rules! uint_impl {\n         /// # Example\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".ilog10(), 1);\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -764,10 +767,10 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".checked_ilog(5), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -800,10 +803,10 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".checked_ilog2(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -822,10 +825,10 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_log)]\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".checked_ilog10(), Some(1));\")]\n         /// ```\n-        #[unstable(feature = \"int_log\", issue = \"70887\")]\n+        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "cbc71d0ed1ae192366dfc97016871fe55bf78a6b", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e36fd926c80dc096d580b762658f07cb976da86/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=9e36fd926c80dc096d580b762658f07cb976da86", "patch": "@@ -62,7 +62,6 @@\n #![feature(try_trait_v2)]\n #![feature(slice_internals)]\n #![feature(slice_partition_dedup)]\n-#![feature(int_log)]\n #![feature(iter_advance_by)]\n #![feature(iter_array_chunks)]\n #![feature(iter_collect_into)]"}, {"sha": "e9c5c67e7f58b25da91a2f4356ad3f6da96df449", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e36fd926c80dc096d580b762658f07cb976da86/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e36fd926c80dc096d580b762658f07cb976da86/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=9e36fd926c80dc096d580b762658f07cb976da86", "patch": "@@ -3,7 +3,6 @@\n #![feature(never_type)]\n #![feature(try_blocks)]\n #![feature(io_error_more)]\n-#![feature(int_log)]\n #![feature(variant_count)]\n #![feature(yeet_expr)]\n #![feature(is_some_and)]"}, {"sha": "0ec1f8e9c693581300e8d0659eba6b63be59a2d5", "filename": "src/tools/miri/tests/pass/integer-ops.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e36fd926c80dc096d580b762658f07cb976da86/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e36fd926c80dc096d580b762658f07cb976da86/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Finteger-ops.rs?ref=9e36fd926c80dc096d580b762658f07cb976da86", "patch": "@@ -1,5 +1,4 @@\n //@compile-flags: -Coverflow-checks=off\n-#![feature(int_log)]\n #![allow(arithmetic_overflow)]\n \n pub fn main() {"}]}