{"sha": "c170aa262a34cf884fa2806513a27bfa07fcb8be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNzBhYTI2MmEzNGNmODg0ZmEyODA2NTEzYTI3YmZhMDdmY2I4YmU=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-05-11T19:56:52Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-05-11T19:56:52Z"}, "message": "Merge pull request #915 from Manishearth/sysroot\n\nUse rustc --print sysroot, bump to v66 r? @llogiq", "tree": {"sha": "8ac528d3e2890397ee399c8fc6a4d65ea4833676", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ac528d3e2890397ee399c8fc6a4d65ea4833676"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c170aa262a34cf884fa2806513a27bfa07fcb8be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c170aa262a34cf884fa2806513a27bfa07fcb8be", "html_url": "https://github.com/rust-lang/rust/commit/c170aa262a34cf884fa2806513a27bfa07fcb8be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c170aa262a34cf884fa2806513a27bfa07fcb8be/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f966778770ed0ebba524b3c6efb8dd92fc4b3908", "url": "https://api.github.com/repos/rust-lang/rust/commits/f966778770ed0ebba524b3c6efb8dd92fc4b3908", "html_url": "https://github.com/rust-lang/rust/commit/f966778770ed0ebba524b3c6efb8dd92fc4b3908"}, {"sha": "03a309d1825f5a65f9835c4a1e1e53b9c726011b", "url": "https://api.github.com/repos/rust-lang/rust/commits/03a309d1825f5a65f9835c4a1e1e53b9c726011b", "html_url": "https://github.com/rust-lang/rust/commit/03a309d1825f5a65f9835c4a1e1e53b9c726011b"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "3a767a97c713154cf4df442da87bd36bf69cd6d0", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c170aa262a34cf884fa2806513a27bfa07fcb8be/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c170aa262a34cf884fa2806513a27bfa07fcb8be/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=c170aa262a34cf884fa2806513a27bfa07fcb8be", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.65\"\n+version = \"0.0.66\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\","}, {"sha": "205f6bd079d87b0920049aed6a3a4cb1ad02ec34", "filename": "src/lib.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c170aa262a34cf884fa2806513a27bfa07fcb8be/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c170aa262a34cf884fa2806513a27bfa07fcb8be/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c170aa262a34cf884fa2806513a27bfa07fcb8be", "patch": "@@ -17,6 +17,7 @@ use rustc::session::{config, Session};\n use rustc::session::config::{Input, ErrorOutputType};\n use syntax::diagnostics;\n use std::path::PathBuf;\n+use std::process::Command;\n \n struct ClippyCompilerCalls(RustcDefaultCalls);\n \n@@ -109,9 +110,14 @@ pub fn main() {\n     let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n     let sys_root = match (home, toolchain) {\n         (Some(home), Some(toolchain)) => format!(\"{}/toolchains/{}\", home, toolchain),\n-        _ => option_env!(\"SYSROOT\")\n-                .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\")\n-                .to_owned(),\n+        _ => option_env!(\"SYSROOT\").map(|s| s.to_owned())\n+                                   .or(Command::new(\"rustc\").arg(\"--print\")\n+                                                            .arg(\"sysroot\")\n+                                                            .output().ok()\n+                                                            .and_then(|out| String::from_utf8(out.stdout).ok())\n+                                                            .map(|s| s.trim().to_owned())\n+                                                            )\n+                .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\"),\n     };\n \n     if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {"}]}