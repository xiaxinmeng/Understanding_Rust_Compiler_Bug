{"sha": "f281a76f838161a5e95fd0bba82847feb0a29435", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyODFhNzZmODM4MTYxYTVlOTVmZDBiYmE4Mjg0N2ZlYjBhMjk0MzU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-01T10:53:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-01T10:53:34Z"}, "message": "Rollup merge of #78599 - panstromek:master, r=m-ou-se\n\nAdd note to process::arg[s] that args shouldn't be escaped or quoted\n\nThis came out of discussion on [forum](https://users.rust-lang.org/t/how-to-get-full-output-from-command/50626), where I recently asked a question and it turned out that the problem was redundant quotation:\n\n```rust\n Command::new(\"rg\")\n        .arg(\"\\\"pattern\\\"\") // this will look for \"pattern\" with quotes included\n```\n\nThis is something that has bitten me few times already (in multiple languages actually), so It'd be grateful to have it in the docs, even though it's not sctrictly Rust specific problem. Other users also agreed.\n\nThis can be really annoying to debug, because in many cases (inluding mine), quotes can be legal part of the argument, so the command doesn't fail, it just behaves unexpectedly. Not everybody (including me) knows that quotes around arguments are part of the shell and not part of the called program. Coincidentally, somoene had the same problem [yesterday](https://www.reddit.com/r/rust/comments/jkxelc/going_crazy_over_running_a_curl_process_from_rust/) on reddit.\n\nI am not a native speaker, so I welcome any corrections or better formulation, I don't expect this to be merged as is. I was also reminded that this is platform/shell specific behaviour, but I didn't find a good way to formulate that briefly, any ideas welcome.\n\n It's also my first PR here, so I am not sure I did everything correctly, I did this just from Github UI.", "tree": {"sha": "1e9184bc65b6592f356ed98a4c826c1f407088f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e9184bc65b6592f356ed98a4c826c1f407088f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f281a76f838161a5e95fd0bba82847feb0a29435", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfnpOuCRBK7hj4Ov3rIwAAdHIIAEV4h/JE66YHGfIMbTK6Uy73\nRCSgPz5vqeDfhsoOUlPjQ19YG2FIqoa/SY5j/glz2ODdd96DWTuu0uc6QYqS2qHF\nQHCQzFy3fPdEyJduoUkHUEWr439/vlr3+WftaHwYiCz6a8V4BCOaatS5+5mV+nPo\nc5vhR1TYrujyYXxqy0iNP2kdZ8+n7Fq750SYOdJ8HHYgguVEg5L2GxrtY3MWzd4m\nIrf2raadSW50PmMFsyc8H7ioBvU86SHIEq3VNQJIRWjD1BNAN70N1IrSES2q5C1E\n3vjdzKUgA0+yV62eumoNENVfgtAEO25YibXqfp0IKFxloOrG3DzOPThpZI5g+E4=\n=fTFW\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e9184bc65b6592f356ed98a4c826c1f407088f7\nparent 25eac92987b628dfae8c7b59b97245a2869f6d63\nparent db416b232c1b7ebeb250e19cbca7b52ab81bc3f3\nauthor Mara Bos <m-ou.se@m-ou.se> 1604228014 +0100\ncommitter GitHub <noreply@github.com> 1604228014 +0100\n\nRollup merge of #78599 - panstromek:master, r=m-ou-se\n\nAdd note to process::arg[s] that args shouldn't be escaped or quoted\n\nThis came out of discussion on [forum](https://users.rust-lang.org/t/how-to-get-full-output-from-command/50626), where I recently asked a question and it turned out that the problem was redundant quotation:\n\n```rust\n Command::new(\"rg\")\n        .arg(\"\\\"pattern\\\"\") // this will look for \"pattern\" with quotes included\n```\n\nThis is something that has bitten me few times already (in multiple languages actually), so It'd be grateful to have it in the docs, even though it's not sctrictly Rust specific problem. Other users also agreed.\n\nThis can be really annoying to debug, because in many cases (inluding mine), quotes can be legal part of the argument, so the command doesn't fail, it just behaves unexpectedly. Not everybody (including me) knows that quotes around arguments are part of the shell and not part of the called program. Coincidentally, somoene had the same problem [yesterday](https://www.reddit.com/r/rust/comments/jkxelc/going_crazy_over_running_a_curl_process_from_rust/) on reddit.\n\nI am not a native speaker, so I welcome any corrections or better formulation, I don't expect this to be merged as is. I was also reminded that this is platform/shell specific behaviour, but I didn't find a good way to formulate that briefly, any ideas welcome.\n\n It's also my first PR here, so I am not sure I did everything correctly, I did this just from Github UI.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f281a76f838161a5e95fd0bba82847feb0a29435", "html_url": "https://github.com/rust-lang/rust/commit/f281a76f838161a5e95fd0bba82847feb0a29435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f281a76f838161a5e95fd0bba82847feb0a29435/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25eac92987b628dfae8c7b59b97245a2869f6d63", "url": "https://api.github.com/repos/rust-lang/rust/commits/25eac92987b628dfae8c7b59b97245a2869f6d63", "html_url": "https://github.com/rust-lang/rust/commit/25eac92987b628dfae8c7b59b97245a2869f6d63"}, {"sha": "db416b232c1b7ebeb250e19cbca7b52ab81bc3f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/db416b232c1b7ebeb250e19cbca7b52ab81bc3f3", "html_url": "https://github.com/rust-lang/rust/commit/db416b232c1b7ebeb250e19cbca7b52ab81bc3f3"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "2c7ed4614bce9e4701c3687481852d265f440eae", "filename": "library/std/src/process.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f281a76f838161a5e95fd0bba82847feb0a29435/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f281a76f838161a5e95fd0bba82847feb0a29435/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=f281a76f838161a5e95fd0bba82847feb0a29435", "patch": "@@ -557,6 +557,11 @@ impl Command {\n     ///\n     /// [`args`]: Command::args\n     ///\n+    /// Note that the argument is not passed through a shell, but given\n+    /// literally to the program. This means that shell syntax like quotes,\n+    /// escaped characters, word splitting, glob patterns, substitution, etc.\n+    /// have no effect.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -582,6 +587,11 @@ impl Command {\n     ///\n     /// [`arg`]: Command::arg\n     ///\n+    /// Note that the arguments are not passed through a shell, but given\n+    /// literally to the program. This means that shell syntax like quotes,\n+    /// escaped characters, word splitting, glob patterns, substitution, etc.\n+    /// have no effect.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:"}]}