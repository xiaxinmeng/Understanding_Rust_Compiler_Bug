{"sha": "8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "node_id": "C_kwDOAAsO6NoAKDhiMGY0M2IxOWRjZDk3Y2M2YjMxYzJkMDJiNTUyNmE0OGRkOTNjMDY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-04T16:49:38Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-04T18:40:02Z"}, "message": "Rename stock solver to classic", "tree": {"sha": "7b6ea8eda65159543b1774f44e0ec1e491e54c4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b6ea8eda65159543b1774f44e0ec1e491e54c4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "html_url": "https://github.com/rust-lang/rust/commit/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e81f9a47fb801fab1c06ba40b06347ffebbd066", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e81f9a47fb801fab1c06ba40b06347ffebbd066", "html_url": "https://github.com/rust-lang/rust/commit/1e81f9a47fb801fab1c06ba40b06347ffebbd066"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "a87e820386e7cbc2240e788eb232ff6cfffed3b2", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "patch": "@@ -556,8 +556,8 @@ pub enum PrintRequest {\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub enum TraitSolver {\n-    /// Stock trait solver in `rustc_trait_selection::traits::select`\n-    Stock,\n+    /// Classic trait solver in `rustc_trait_selection::traits::select`\n+    Classic,\n     /// Chalk trait solver\n     Chalk,\n     /// Experimental trait solver in `rustc_trait_selection::solve`"}, {"sha": "043a60a1c5310c7247ad0fe286c681d7269d2226", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "patch": "@@ -383,7 +383,7 @@ mod desc {\n     pub const parse_unpretty: &str = \"`string` or `string=string`\";\n     pub const parse_treat_err_as_bug: &str = \"either no value or a number bigger than 0\";\n     pub const parse_trait_solver: &str =\n-        \"one of the supported solver modes (`stock`, `chalk`, or `next`)\";\n+        \"one of the supported solver modes (`classic`, `chalk`, or `next`)\";\n     pub const parse_lto: &str =\n         \"either a boolean (`yes`, `no`, `on`, `off`, etc), `thin`, `fat`, or omitted\";\n     pub const parse_linker_plugin_lto: &str =\n@@ -884,9 +884,11 @@ mod parse {\n \n     pub(crate) fn parse_trait_solver(slot: &mut TraitSolver, v: Option<&str>) -> bool {\n         match v {\n-            Some(\"stock\") => *slot = TraitSolver::Stock,\n+            Some(\"classic\") => *slot = TraitSolver::Classic,\n             Some(\"chalk\") => *slot = TraitSolver::Chalk,\n             Some(\"next\") => *slot = TraitSolver::Next,\n+            // default trait solver is subject to change..\n+            Some(\"default\") => *slot = TraitSolver::Classic,\n             _ => return false,\n         }\n         true\n@@ -1619,8 +1621,8 @@ options! {\n         \"for every macro invocation, print its name and arguments (default: no)\"),\n     track_diagnostics: bool = (false, parse_bool, [UNTRACKED],\n         \"tracks where in rustc a diagnostic was emitted\"),\n-    trait_solver: TraitSolver = (TraitSolver::Stock, parse_trait_solver, [TRACKED],\n-        \"specify the trait solver mode used by rustc (default: stock)\"),\n+    trait_solver: TraitSolver = (TraitSolver::Classic, parse_trait_solver, [TRACKED],\n+        \"specify the trait solver mode used by rustc (default: classic)\"),\n     // Diagnostics are considered side-effects of a query (see `QuerySideEffects`) and are saved\n     // alongside query results and changes to translation options can affect diagnostics - so\n     // translation options should be tracked."}, {"sha": "bc6d9d4b922d87c27a6dd159416157aadae0dd64", "filename": "compiler/rustc_trait_selection/src/traits/engine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fengine.rs?ref=8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "patch": "@@ -32,15 +32,15 @@ pub trait TraitEngineExt<'tcx> {\n impl<'tcx> TraitEngineExt<'tcx> for dyn TraitEngine<'tcx> {\n     fn new(tcx: TyCtxt<'tcx>) -> Box<Self> {\n         match tcx.sess.opts.unstable_opts.trait_solver {\n-            TraitSolver::Stock => Box::new(FulfillmentContext::new()),\n+            TraitSolver::Classic => Box::new(FulfillmentContext::new()),\n             TraitSolver::Chalk => Box::new(ChalkFulfillmentContext::new()),\n             TraitSolver::Next => Box::new(NextFulfillmentCtxt::new()),\n         }\n     }\n \n     fn new_in_snapshot(tcx: TyCtxt<'tcx>) -> Box<Self> {\n         match tcx.sess.opts.unstable_opts.trait_solver {\n-            TraitSolver::Stock => Box::new(FulfillmentContext::new_in_snapshot()),\n+            TraitSolver::Classic => Box::new(FulfillmentContext::new_in_snapshot()),\n             TraitSolver::Chalk => Box::new(ChalkFulfillmentContext::new_in_snapshot()),\n             TraitSolver::Next => Box::new(NextFulfillmentCtxt::new()),\n         }"}, {"sha": "537dc92be192101237c068f44fe856b9ac4f5cb0", "filename": "src/test/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout?ref=8b0f43b19dcd97cc6b31c2d02b5526a48dd93c06", "patch": "@@ -174,7 +174,7 @@\n     -Z                               tls-model=val -- choose the TLS model to use (`rustc --print tls-models` for details)\n     -Z                            trace-macros=val -- for every macro invocation, print its name and arguments (default: no)\n     -Z                       track-diagnostics=val -- tracks where in rustc a diagnostic was emitted\n-    -Z                            trait-solver=val -- specify the trait solver mode used by rustc (default: stock)\n+    -Z                            trait-solver=val -- specify the trait solver mode used by rustc (default: classic)\n     -Z                translate-additional-ftl=val -- additional fluent translation to preferentially use (for testing translation)\n     -Z        translate-directionality-markers=val -- emit directionality isolation markers in translated diagnostics\n     -Z                          translate-lang=val -- language identifier for diagnostic output"}]}