{"sha": "d47673d3d7351c16aa8528edabfc886d2228fbb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NzY3M2QzZDczNTFjMTZhYTg1MjhlZGFiZmM4ODZkMjIyOGZiYjA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-21T16:37:11Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-21T16:37:11Z"}, "message": "typeck: use diverges.replace(..)", "tree": {"sha": "b75cf84ba6072c033fbe6a81abbbc11e72fdef47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b75cf84ba6072c033fbe6a81abbbc11e72fdef47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d47673d3d7351c16aa8528edabfc886d2228fbb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d47673d3d7351c16aa8528edabfc886d2228fbb0", "html_url": "https://github.com/rust-lang/rust/commit/d47673d3d7351c16aa8528edabfc886d2228fbb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d47673d3d7351c16aa8528edabfc886d2228fbb0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce361fb24f0896bf7d983549117cbe1f70f32dcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce361fb24f0896bf7d983549117cbe1f70f32dcf", "html_url": "https://github.com/rust-lang/rust/commit/ce361fb24f0896bf7d983549117cbe1f70f32dcf"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "a6f8a82a480f27a9ed64a786ada44322f8e587b0", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d47673d3d7351c16aa8528edabfc886d2228fbb0/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47673d3d7351c16aa8528edabfc886d2228fbb0/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=d47673d3d7351c16aa8528edabfc886d2228fbb0", "patch": "@@ -50,10 +50,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         self.warn_arms_when_scrutinee_diverges(arms, match_src);\n \n-        // Otherwise, we have to union together the types that the\n-        // arms produce and so forth.\n-        let scrut_diverges = self.diverges.get();\n-        self.diverges.set(Diverges::Maybe);\n+        // Otherwise, we have to union together the types that the arms produce and so forth.\n+        let scrut_diverges = self.diverges.replace(Diverges::Maybe);\n \n         // rust-lang/rust#55810: Typecheck patterns first (via eager\n         // collection into `Vec`), so we get types for all bindings."}, {"sha": "b4c2b85241f9612250f31779a2e5eb4cb15011e7", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d47673d3d7351c16aa8528edabfc886d2228fbb0/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47673d3d7351c16aa8528edabfc886d2228fbb0/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=d47673d3d7351c16aa8528edabfc886d2228fbb0", "patch": "@@ -165,10 +165,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n \n         // Hide the outer diverging and has_errors flags.\n-        let old_diverges = self.diverges.get();\n-        let old_has_errors = self.has_errors.get();\n-        self.diverges.set(Diverges::Maybe);\n-        self.has_errors.set(false);\n+        let old_diverges = self.diverges.replace(Diverges::Maybe);\n+        let old_has_errors = self.has_errors.replace(false);\n \n         let ty = self.check_expr_kind(expr, expected, needs);\n "}, {"sha": "7c0500c1c7425162c99e590b6895699ff5ac3426", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d47673d3d7351c16aa8528edabfc886d2228fbb0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47673d3d7351c16aa8528edabfc886d2228fbb0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=d47673d3d7351c16aa8528edabfc886d2228fbb0", "patch": "@@ -4418,10 +4418,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         self.warn_if_unreachable(stmt.hir_id, stmt.span, \"statement\");\n \n         // Hide the outer diverging and `has_errors` flags.\n-        let old_diverges = self.diverges.get();\n-        let old_has_errors = self.has_errors.get();\n-        self.diverges.set(Diverges::Maybe);\n-        self.has_errors.set(false);\n+        let old_diverges = self.diverges.replace(Diverges::Maybe);\n+        let old_has_errors = self.has_errors.replace(false);\n \n         match stmt.kind {\n             hir::StmtKind::Local(ref l) => {\n@@ -4431,7 +4429,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             hir::StmtKind::Item(_) => {}\n             hir::StmtKind::Expr(ref expr) => {\n                 // Check with expected type of `()`.\n-\n                 self.check_expr_has_type_or_error(&expr, self.tcx.mk_unit(), |err| {\n                     self.suggest_semicolon_at_end(expr.span, err);\n                 });"}]}