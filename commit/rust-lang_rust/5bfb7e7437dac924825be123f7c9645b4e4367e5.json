{"sha": "5bfb7e7437dac924825be123f7c9645b4e4367e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZmI3ZTc0MzdkYWM5MjQ4MjViZTEyM2Y3Yzk2NDViNGU0MzY3ZTU=", "commit": {"author": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2020-05-12T08:33:41Z"}, "committer": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2020-05-12T08:33:41Z"}, "message": "Add target thumbv7a-uwp-windows-msvc", "tree": {"sha": "b373ed9a50f031282e524f35a3cf687c49cb0ede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b373ed9a50f031282e524f35a3cf687c49cb0ede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bfb7e7437dac924825be123f7c9645b4e4367e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bfb7e7437dac924825be123f7c9645b4e4367e5", "html_url": "https://github.com/rust-lang/rust/commit/5bfb7e7437dac924825be123f7c9645b4e4367e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bfb7e7437dac924825be123f7c9645b4e4367e5/comments", "author": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09c817eeb29e764cfc12d0a8d94841e3ffe34023", "url": "https://api.github.com/repos/rust-lang/rust/commits/09c817eeb29e764cfc12d0a8d94841e3ffe34023", "html_url": "https://github.com/rust-lang/rust/commit/09c817eeb29e764cfc12d0a8d94841e3ffe34023"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "a035998030acc18d3df68d755e8a512e8cb0c897", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bfb7e7437dac924825be123f7c9645b4e4367e5/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bfb7e7437dac924825be123f7c9645b4e4367e5/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=5bfb7e7437dac924825be123f7c9645b4e4367e5", "patch": "@@ -181,6 +181,7 @@ fn get_linker(sess: &Session, linker: &Path, flavor: LinkerFlavor) -> Command {\n                     \"x86_64\" => Some(\"x64\".to_string()),\n                     \"x86\" => Some(\"x86\".to_string()),\n                     \"aarch64\" => Some(\"arm64\".to_string()),\n+                    \"arm\" => Some(\"arm\".to_string()),\n                     _ => None,\n                 };\n                 if let Some(ref a) = arch {"}, {"sha": "4e0530f53d7e9316c3cb3cd32ea1de36644b7a69", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bfb7e7437dac924825be123f7c9645b4e4367e5/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bfb7e7437dac924825be123f7c9645b4e4367e5/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=5bfb7e7437dac924825be123f7c9645b4e4367e5", "patch": "@@ -530,6 +530,7 @@ supported_targets! {\n     (\"i686-uwp-windows-msvc\", i686_uwp_windows_msvc),\n     (\"i586-pc-windows-msvc\", i586_pc_windows_msvc),\n     (\"thumbv7a-pc-windows-msvc\", thumbv7a_pc_windows_msvc),\n+    (\"thumbv7a-uwp-windows-msvc\", thumbv7a_uwp_windows_msvc),\n \n     (\"asmjs-unknown-emscripten\", asmjs_unknown_emscripten),\n     (\"wasm32-unknown-emscripten\", wasm32_unknown_emscripten),"}, {"sha": "ff2e89210060768b555c0cc85618388f950064f5", "filename": "src/librustc_target/spec/thumbv7a_uwp_windows_msvc.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5bfb7e7437dac924825be123f7c9645b4e4367e5/src%2Flibrustc_target%2Fspec%2Fthumbv7a_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bfb7e7437dac924825be123f7c9645b4e4367e5/src%2Flibrustc_target%2Fspec%2Fthumbv7a_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7a_uwp_windows_msvc.rs?ref=5bfb7e7437dac924825be123f7c9645b4e4367e5", "patch": "@@ -0,0 +1,30 @@\n+use crate::spec::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::windows_uwp_msvc_base::opts();\n+    base.max_atomic_width = Some(64);\n+    base.has_elf_tls = true;\n+\n+    // FIXME(jordanrh): use PanicStrategy::Unwind when SEH is\n+    // implemented for windows/arm in LLVM\n+    base.panic_strategy = PanicStrategy::Abort;\n+\n+    Ok(Target {\n+        llvm_target: \"thumbv7a-pc-windows-msvc\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:w-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"windows\".to_string(),\n+        target_env: \"msvc\".to_string(),\n+        target_vendor: \"uwp\".to_string(),\n+        linker_flavor: LinkerFlavor::Msvc,\n+        options: TargetOptions {\n+            features: \"+vfp3,+neon\".to_string(),\n+            cpu: \"generic\".to_string(),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            ..base\n+        },\n+    })\n+}"}]}