{"sha": "5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NDM0MDRhYmUyZWNmZTI4MGZmZDQzOTNkNGU0YzlhZDNkNDg5Yjg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-09T03:52:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-09T19:35:30Z"}, "message": "Track the path as we fold over the AST looking for unit tests. Issue #428", "tree": {"sha": "6413f156d3d7744c20d644f457a4715eb877edf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6413f156d3d7744c20d644f457a4715eb877edf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "html_url": "https://github.com/rust-lang/rust/commit/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9af59f9d81b8d8c91e2c470e82813d75a6bcdc9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9af59f9d81b8d8c91e2c470e82813d75a6bcdc9e", "html_url": "https://github.com/rust-lang/rust/commit/9af59f9d81b8d8c91e2c470e82813d75a6bcdc9e"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "101a8e5cc890c3ae49172e4c941065bd004e3011", "filename": "src/comp/front/test.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8/src%2Fcomp%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8/src%2Fcomp%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ftest.rs?ref=5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "patch": "@@ -1,14 +1,16 @@\n // Code that generates a test runner to run all the tests in a crate\n \n import std::option;\n+import std::ivec;\n import syntax::ast;\n import syntax::fold;\n \n export modify_for_testing;\n \n type node_id_gen = @fn() -> ast::node_id;\n \n-type test_ctxt = rec(node_id_gen next_node_id);\n+type test_ctxt = rec(node_id_gen next_node_id,\n+                     mutable ast::ident[] path);\n \n // Traverse the crate, collecting all the test functions, eliding any\n // existing main functions, and synthesizing a main test harness\n@@ -26,9 +28,11 @@ fn modify_for_testing(@ast::crate crate) -> @ast::crate {\n         ret this_node_id;\n     } (next_node_id);\n \n-    auto cx = rec(next_node_id = next_node_id_fn);\n+    auto cx = rec(next_node_id = next_node_id_fn,\n+                  mutable path = ~[]);\n \n-    auto precursor = rec(fold_crate = bind fold_crate(cx, _, _)\n+    auto precursor = rec(fold_crate = bind fold_crate(cx, _, _),\n+                         fold_item = bind fold_item(cx, _, _)\n                          with *fold::default_ast_fold());\n \n     auto fold = fold::make_fold(precursor);\n@@ -94,6 +98,16 @@ fn mk_main(&test_ctxt cx) -> @ast::item {\n     ret @item;\n }\n \n+fn fold_item(&test_ctxt cx, &@ast::item i,\n+             fold::ast_fold fld) -> @ast::item {\n+\n+    cx.path += ~[i.ident];\n+    log #fmt(\"current path: %s\", ast::path_name_i(cx.path));\n+    auto res = fold::noop_fold_item(i, fld);\n+    ivec::pop(cx.path);\n+    ret res;\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}, {"sha": "15cb5fc7d07bf553c04f4676d2aadd2d232ec673", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "patch": "@@ -20,7 +20,9 @@ type path_ = rec(ident[] idents, (@ty)[] types);\n \n type path = spanned[path_];\n \n-fn path_name(&path p) -> str { ret str::connect_ivec(p.node.idents, \"::\"); }\n+fn path_name(&path p) -> str { path_name_i(p.node.idents) }\n+\n+fn path_name_i(&ident[] idents) -> str { str::connect_ivec(idents, \"::\") }\n \n type crate_num = int;\n type node_id = int;"}, {"sha": "4c35dd821705d44bf59623d7d7de454dab05739c", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "patch": "@@ -12,6 +12,7 @@ export default_ast_fold;\n export make_fold;\n export dummy_out;\n export noop_fold_crate;\n+export noop_fold_item;\n \n type ast_fold = @mutable a_f;\n "}]}