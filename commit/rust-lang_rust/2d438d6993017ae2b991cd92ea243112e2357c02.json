{"sha": "2d438d6993017ae2b991cd92ea243112e2357c02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNDM4ZDY5OTMwMTdhZTJiOTkxY2Q5MmVhMjQzMTEyZTIzNTdjMDI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-22T17:15:57Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-22T17:15:57Z"}, "message": "Correctly suggest adding bounds to `impl Trait` argument", "tree": {"sha": "d830db95e9d3c93381f02f1bceb5505f506a412a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d830db95e9d3c93381f02f1bceb5505f506a412a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d438d6993017ae2b991cd92ea243112e2357c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d438d6993017ae2b991cd92ea243112e2357c02", "html_url": "https://github.com/rust-lang/rust/commit/2d438d6993017ae2b991cd92ea243112e2357c02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d438d6993017ae2b991cd92ea243112e2357c02/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b0085a613e69cb69fc9e4eb5d422fa4a39d5de1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b0085a613e69cb69fc9e4eb5d422fa4a39d5de1", "html_url": "https://github.com/rust-lang/rust/commit/7b0085a613e69cb69fc9e4eb5d422fa4a39d5de1"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "9f4fed23697abc44c745d44024efff39ef85e397", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=2d438d6993017ae2b991cd92ea243112e2357c02", "patch": "@@ -743,8 +743,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         // We do this to avoid suggesting code that ends up as `T: FooBar`,\n                         // instead we suggest `T: Foo + Bar` in that case.\n                         let mut has_bounds = false;\n+                        let mut impl_trait = false;\n                         if let Node::GenericParam(ref param) = hir.get(id) {\n-                            has_bounds = !param.bounds.is_empty();\n+                            match param.kind {\n+                                hir::GenericParamKind::Type { synthetic: Some(_), .. } => {\n+                                    impl_trait = true;  // #63706\n+                                    has_bounds = param.bounds.len() > 1;\n+                                }\n+                                _ => {\n+                                    has_bounds = !param.bounds.is_empty();\n+                                }\n+                            }\n                         }\n                         let sp = hir.span(id);\n                         // `sp` only covers `T`, change it so that it covers\n@@ -765,8 +774,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             sp,\n                             &msg[..],\n                             candidates.iter().map(|t| format!(\n-                                \"{}: {}{}\",\n+                                \"{}{} {}{}\",\n                                 param,\n+                                if impl_trait { \" +\" } else { \":\" },\n                                 self.tcx.def_path_str(t.def_id),\n                                 if has_bounds { \" +\"} else { \"\" },\n                             )),"}, {"sha": "5109511f95a6b4600ae006ab017cfa6ac15f1da0", "filename": "src/test/ui/suggestions/impl-trait-with-missing-trait-bounds-in-arg.fixed", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.fixed?ref=2d438d6993017ae2b991cd92ea243112e2357c02", "patch": "@@ -0,0 +1,20 @@\n+// run-rustfix\n+\n+trait Foo {}\n+\n+trait Bar {\n+    fn hello(&self) {}\n+}\n+\n+struct S;\n+\n+impl Foo for S {}\n+impl Bar for S {}\n+\n+fn test(foo: impl Foo + Bar) {\n+    foo.hello(); //~ ERROR E0599\n+}\n+\n+fn main() {\n+    test(S);\n+}"}, {"sha": "cd05b77386192270daceb3718bf12e4ec9863124", "filename": "src/test/ui/suggestions/impl-trait-with-missing-trait-bounds-in-arg.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.rs?ref=2d438d6993017ae2b991cd92ea243112e2357c02", "patch": "@@ -0,0 +1,20 @@\n+// run-rustfix\n+\n+trait Foo {}\n+\n+trait Bar {\n+    fn hello(&self) {}\n+}\n+\n+struct S;\n+\n+impl Foo for S {}\n+impl Bar for S {}\n+\n+fn test(foo: impl Foo) {\n+    foo.hello(); //~ ERROR E0599\n+}\n+\n+fn main() {\n+    test(S);\n+}"}, {"sha": "48c2503e8eb326e4b0aac109bc329b01631fc2c2", "filename": "src/test/ui/suggestions/impl-trait-with-missing-trait-bounds-in-arg.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2d438d6993017ae2b991cd92ea243112e2357c02/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-trait-bounds-in-arg.stderr?ref=2d438d6993017ae2b991cd92ea243112e2357c02", "patch": "@@ -0,0 +1,15 @@\n+error[E0599]: no method named `hello` found for type `impl Foo` in the current scope\n+  --> $DIR/impl-trait-with-missing-trait-bounds-in-arg.rs:15:9\n+   |\n+LL |     foo.hello();\n+   |         ^^^^^\n+   |\n+   = help: items from traits can only be used if the type parameter is bounded by the trait\n+help: the following trait defines an item `hello`, perhaps you need to restrict type parameter `impl Foo` with it:\n+   |\n+LL | fn test(foo: impl Foo + Bar) {\n+   |              ^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}