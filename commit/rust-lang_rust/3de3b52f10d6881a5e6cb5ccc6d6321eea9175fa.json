{"sha": "3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZTNiNTJmMTBkNjg4MWE1ZTZjYjVjY2M2ZDYzMjFlZWE5MTc1ZmE=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-05-09T22:39:36Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-05-09T22:39:36Z"}, "message": "Remove dbg", "tree": {"sha": "156ea8054a75f986929ab87c928cb0ff0cd996c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/156ea8054a75f986929ab87c928cb0ff0cd996c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa", "html_url": "https://github.com/rust-lang/rust/commit/3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2400d70442364769b4ae18315fc178427d2d95a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2400d70442364769b4ae18315fc178427d2d95a9", "html_url": "https://github.com/rust-lang/rust/commit/2400d70442364769b4ae18315fc178427d2d95a9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "84348b5defced354f079b5601a2c48ac4d898438", "filename": "crates/ra_proc_macro_srv/src/tests/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs?ref=3de3b52f10d6881a5e6cb5ccc6d6321eea9175fa", "patch": "@@ -24,7 +24,7 @@ mod fixtures {\n                 Message::CompilerArtifact(artifact) => {\n                     if artifact.target.kind.contains(&\"proc-macro\".to_string()) {\n                         let repr = format!(\"{} {}\", crate_name, version);\n-                        if artifact.package_id.repr.starts_with(dbg!(&repr)) {\n+                        if artifact.package_id.repr.starts_with(&repr) {\n                             return artifact.filenames[0].clone();\n                         }\n                     }"}]}