{"sha": "d37b8cf729187e5dcabb3650031eb806d1f79770", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzN2I4Y2Y3MjkxODdlNWRjYWJiMzY1MDAzMWViODA2ZDFmNzk3NzA=", "commit": {"author": {"name": "chansuke", "email": "chansuke@georepublic.de", "date": "2020-10-24T09:22:18Z"}, "committer": {"name": "chansuke", "email": "chansuke@georepublic.de", "date": "2020-10-24T09:22:18Z"}, "message": "Remove unnecessary unsafe block from condvar_atomics & mutex_atomics", "tree": {"sha": "9dcf548014f0a6f0f3c6a2072b1460376b2c22d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dcf548014f0a6f0f3c6a2072b1460376b2c22d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d37b8cf729187e5dcabb3650031eb806d1f79770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d37b8cf729187e5dcabb3650031eb806d1f79770", "html_url": "https://github.com/rust-lang/rust/commit/d37b8cf729187e5dcabb3650031eb806d1f79770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d37b8cf729187e5dcabb3650031eb806d1f79770/comments", "author": null, "committer": null, "parents": [{"sha": "d147f78e367386bf63ccb03d453e151e37cfdd81", "url": "https://api.github.com/repos/rust-lang/rust/commits/d147f78e367386bf63ccb03d453e151e37cfdd81", "html_url": "https://github.com/rust-lang/rust/commit/d147f78e367386bf63ccb03d453e151e37cfdd81"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0c1c076cc914241baa16f13bce8a9e057500842d", "filename": "library/std/src/sys/wasm/condvar_atomics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d37b8cf729187e5dcabb3650031eb806d1f79770/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fcondvar_atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d37b8cf729187e5dcabb3650031eb806d1f79770/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fcondvar_atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fcondvar_atomics.rs?ref=d37b8cf729187e5dcabb3650031eb806d1f79770", "patch": "@@ -53,7 +53,7 @@ impl Condvar {\n     #[inline]\n     pub unsafe fn notify_all(&self) {\n         self.cnt.fetch_add(1, SeqCst);\n-        // SAFETY: memory_atomic_notify()is always valid\n+        // SAFETY: ptr() is always valid\n         unsafe {\n             wasm32::memory_atomic_notify(self.ptr(), u32::MAX); // -1 == \"wake everyone\"\n         }"}, {"sha": "479182ffa44d5eec624d026a1bc8f786cf5ba1b4", "filename": "library/std/src/sys/wasm/mutex_atomics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d37b8cf729187e5dcabb3650031eb806d1f79770/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fmutex_atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d37b8cf729187e5dcabb3650031eb806d1f79770/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fmutex_atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fmutex_atomics.rs?ref=d37b8cf729187e5dcabb3650031eb806d1f79770", "patch": "@@ -50,7 +50,7 @@ impl Mutex {\n \n     #[inline]\n     pub unsafe fn try_lock(&self) -> bool {\n-        unsafe { self.locked.compare_exchange(0, 1, SeqCst, SeqCst).is_ok() }\n+        self.locked.compare_exchange(0, 1, SeqCst, SeqCst).is_ok()\n     }\n \n     #[inline]\n@@ -86,7 +86,7 @@ unsafe impl Sync for ReentrantMutex {}\n \n impl ReentrantMutex {\n     pub const unsafe fn uninitialized() -> ReentrantMutex {\n-        unsafe { ReentrantMutex { owner: AtomicU32::new(0), recursions: UnsafeCell::new(0) } }\n+        ReentrantMutex { owner: AtomicU32::new(0), recursions: UnsafeCell::new(0) }\n     }\n \n     pub unsafe fn init(&self) {"}]}