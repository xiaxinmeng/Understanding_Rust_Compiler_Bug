{"sha": "ee4cd865df06b02e88408fa003cf4987d764c246", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNGNkODY1ZGYwNmIwMmU4ODQwOGZhMDAzY2Y0OTg3ZDc2NGMyNDY=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-11-20T01:29:56Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-11-20T01:29:56Z"}, "message": "Include tuple projections in MIR tests", "tree": {"sha": "3116d6886fce915089ae5f86090e6417d0e63254", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3116d6886fce915089ae5f86090e6417d0e63254"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee4cd865df06b02e88408fa003cf4987d764c246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee4cd865df06b02e88408fa003cf4987d764c246", "html_url": "https://github.com/rust-lang/rust/commit/ee4cd865df06b02e88408fa003cf4987d764c246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee4cd865df06b02e88408fa003cf4987d764c246/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57c0801e33ed39560ac23ea8b6b6d87af6fe3a3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/57c0801e33ed39560ac23ea8b6b6d87af6fe3a3e", "html_url": "https://github.com/rust-lang/rust/commit/57c0801e33ed39560ac23ea8b6b6d87af6fe3a3e"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "1de5e151220fa0ba41d9c852c29cb862b5d70e98", "filename": "src/test/mir-opt/lower_128bit_debug_test.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ee4cd865df06b02e88408fa003cf4987d764c246/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee4cd865df06b02e88408fa003cf4987d764c246/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs?ref=ee4cd865df06b02e88408fa003cf4987d764c246", "patch": "@@ -74,31 +74,65 @@ fn main() {\n // START rustc.test_signed.Lower128Bit.after.mir\n //     _2 = const i128_addo(_1, const 1i128) -> bb10;\n //     ...\n+//     _1 = (_2.0: i128);\n //     _3 = const i128_subo(_1, const 2i128) -> bb11;\n //     ...\n+//     _1 = (_3.0: i128);\n //     _4 = const i128_mulo(_1, const 3i128) -> bb12;\n //     ...\n+//     _1 = (_4.0: i128);\n+//     ...\n //     _1 = const i128_div(_1, const 4i128) -> bb13;\n //     ...\n //     _1 = const i128_rem(_1, const 5i128) -> bb15;\n //     ...\n+//     _1 = (_13.0: i128);\n //     _14 = const i128_shro(_1, const 7i32) -> bb16;\n //     ...\n+//     _1 = (_14.0: i128);\n+//     ...\n+//     assert(!(_2.1: bool), \"attempt to add with overflow\") -> bb1;\n+//     ...\n+//     assert(!(_3.1: bool), \"attempt to subtract with overflow\") -> bb2;\n+//     ...\n+//     assert(!(_4.1: bool), \"attempt to multiply with overflow\") -> bb3;\n+//     ...\n+//     assert(!(_13.1: bool), \"attempt to shift left with overflow\") -> bb8;\n+//     ...\n //     _13 = const i128_shlo(_1, const 6i32) -> bb14;\n+//     ...\n+//     assert(!(_14.1: bool), \"attempt to shift right with overflow\") -> bb9;\n // END rustc.test_signed.Lower128Bit.after.mir\n \n // START rustc.test_unsigned.Lower128Bit.after.mir\n //     _2 = const u128_addo(_1, const 1u128) -> bb8;\n //     ...\n+//     _1 = (_2.0: u128);\n //     _3 = const u128_subo(_1, const 2u128) -> bb9;\n //     ...\n+//     _1 = (_3.0: u128);\n //     _4 = const u128_mulo(_1, const 3u128) -> bb10;\n //     ...\n+//     _1 = (_4.0: u128);\n+//     ...\n //     _1 = const u128_div(_1, const 4u128) -> bb11;\n //     ...\n //     _1 = const u128_rem(_1, const 5u128) -> bb13;\n //     ...\n+//     _1 = (_7.0: u128);\n //     _8 = const u128_shro(_1, const 7i32) -> bb14;\n //     ...\n+//     _1 = (_8.0: u128);\n+//     ...\n+//     assert(!(_2.1: bool), \"attempt to add with overflow\") -> bb1;\n+//     ...\n+//     assert(!(_3.1: bool), \"attempt to subtract with overflow\") -> bb2;\n+//     ...\n+//     assert(!(_4.1: bool), \"attempt to multiply with overflow\") -> bb3;\n+//     ...\n+//     assert(!(_7.1: bool), \"attempt to shift left with overflow\") -> bb6;\n+//     ...\n //     _7 = const i128_shlo(_1, const 6i32) -> bb12;\n+//     ...\n+//     assert(!(_8.1: bool), \"attempt to shift right with overflow\") -> bb7;\n // END rustc.test_unsigned.Lower128Bit.after.mir"}]}