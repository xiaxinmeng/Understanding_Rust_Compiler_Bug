{"sha": "aade0d563e1eb668566872d4c300a734b67f6600", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZGUwZDU2M2UxZWI2Njg1NjY4NzJkNGMzMDBhNzM0YjY3ZjY2MDA=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-01-23T20:32:06Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-01-29T09:03:52Z"}, "message": "Make lint work on all members of ast::Item_", "tree": {"sha": "96e07076d268d4fd6f1e0e1dc8ecd3641e2f69c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96e07076d268d4fd6f1e0e1dc8ecd3641e2f69c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aade0d563e1eb668566872d4c300a734b67f6600", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJabuN4AAoJEGZ8j0taaYpglQ0P/2jaz8uEhL068lP8416MQg3H\n1pvQ4RXxTQm8nNAWzCxIaA5iVrHYTylmGg0t7XN+osy2OtGSoj4LgHrL+CVQ0QcK\nVuMn9ce2p+Kx8wkgdQ5VpuMiqv8j9cuFBRp0Au8zayWDW0ICVhlTNrqRVbtBJWIj\n9u5aF2v3pXu+muQ8k42WgYGGmsteqsWkpPA8I0v4mvOtxP5gW/2LXOo5s0jELHd9\nmWtfilg3j6Wj0akcf9aj45FkZx2XjVfXd+pN3gvJUss3hMFU4uz8bGepx1CAmMTs\nHlp3C4gfG70QYKekvXb8+MxhlkOfb74xkLFMFaY7Vq4dsjPbjaX0SAcEmMllulgH\nGc9w0DQfKptxAXaiHePZODDq7cUEzTrovVFDYM1RMys8KxGiFlvfhBH3vzHt/LZN\nm3FiuePYRgN9+MnQhoOLzedPskSHcEBMWkLTG+ixOnE1dR/AmVoz3201XIsnrmHD\nbmh7oqaVLGxk4/WRzePudaqM4IF8AvwGvgvNSatXqstx9rKrOJwBVYNYoheCy9xr\naS9FY8+HW+DRVV/GGyir40F/JIsqCWhD1lOEPQ7qQn2m6+fvoZNMW+t5d+S0NT5d\n2BH427iXYUMkBOu4vfRb3hXg42jDVtAtE9UC44oJSCXt5wNOojmlXutO4mZnBd7P\nxvz6NpX6Fr2YiiPNxQ61\n=IBOP\n-----END PGP SIGNATURE-----", "payload": "tree 96e07076d268d4fd6f1e0e1dc8ecd3641e2f69c1\nparent 83909398d288579837922e68482f2e22b24f8406\nauthor Philipp Hansch <dev@phansch.net> 1516739526 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1517216632 +0100\n\nMake lint work on all members of ast::Item_\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aade0d563e1eb668566872d4c300a734b67f6600", "html_url": "https://github.com/rust-lang/rust/commit/aade0d563e1eb668566872d4c300a734b67f6600", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aade0d563e1eb668566872d4c300a734b67f6600/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83909398d288579837922e68482f2e22b24f8406", "url": "https://api.github.com/repos/rust-lang/rust/commits/83909398d288579837922e68482f2e22b24f8406", "html_url": "https://github.com/rust-lang/rust/commit/83909398d288579837922e68482f2e22b24f8406"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "5df932a8d93e949ab4d6e5e78107ee4c79d83142", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aade0d563e1eb668566872d4c300a734b67f6600/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aade0d563e1eb668566872d4c300a734b67f6600/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=aade0d563e1eb668566872d4c300a734b67f6600", "patch": "@@ -203,7 +203,7 @@ fn is_relevant_item(tcx: TyCtxt, item: &Item) -> bool {\n     if let ItemFn(_, _, _, _, _, eid) = item.node {\n         is_relevant_expr(tcx, tcx.body_tables(eid), &tcx.hir.body(eid).value)\n     } else {\n-        false\n+        true\n     }\n }\n "}, {"sha": "3d62a4913acf7025a701e98f5af9970c70f11140", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=aade0d563e1eb668566872d4c300a734b67f6600", "patch": "@@ -24,6 +24,29 @@ fn with_one_newline() { assert!(true) }\n \n fn with_two_newlines() { assert!(true) }\n \n+\n+// This should produce a warning\n+#[crate_type = \"lib\"]\n+\n+enum Baz {\n+    One,\n+    Two\n+}\n+\n+// This should produce a warning\n+#[crate_type = \"lib\"]\n+\n+struct Foo {\n+    one: isize,\n+    two: isize\n+}\n+\n+// This should produce a warning\n+#[crate_type = \"lib\"]\n+\n+mod foo {\n+}\n+\n // This should not produce a warning\n #[allow(non_camel_case_types)]\n #[allow(missing_docs)]"}, {"sha": "7c9c7b8f349532ef9054c87fbc52e617b4184cfd", "filename": "tests/ui/empty_line_after_outer_attribute.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.stderr?ref=aade0d563e1eb668566872d4c300a734b67f6600", "patch": "@@ -26,5 +26,29 @@ error: Found an empty line after an outer attribute. Perhaps you forgot to add a\n 25 | | fn with_two_newlines() { assert!(true) }\n    | |_\n \n-error: aborting due to 3 previous errors\n+error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n+  --> $DIR/empty_line_after_outer_attribute.rs:29:1\n+   |\n+29 | / #[crate_type = \"lib\"]\n+30 | |\n+31 | | enum Baz {\n+   | |_\n+\n+error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n+  --> $DIR/empty_line_after_outer_attribute.rs:37:1\n+   |\n+37 | / #[crate_type = \"lib\"]\n+38 | |\n+39 | | struct Foo {\n+   | |_\n+\n+error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n+  --> $DIR/empty_line_after_outer_attribute.rs:45:1\n+   |\n+45 | / #[crate_type = \"lib\"]\n+46 | |\n+47 | | mod foo {\n+   | |_\n+\n+error: aborting due to 6 previous errors\n "}, {"sha": "76e50e56780cd0b49478de40b158f8b5308e316f", "filename": "tests/ui/inline_fn_without_body.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.rs?ref=aade0d563e1eb668566872d4c300a734b67f6600", "patch": "@@ -11,7 +11,6 @@ trait Foo {\n     #[inline(always)]fn always_inline();\n \n     #[inline(never)]\n-\n     fn never_inline();\n \n     #[inline]"}, {"sha": "2b466b6861030ade207abb0759dd52bdbc22ab5e", "filename": "tests/ui/inline_fn_without_body.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Finline_fn_without_body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aade0d563e1eb668566872d4c300a734b67f6600/tests%2Fui%2Finline_fn_without_body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.stderr?ref=aade0d563e1eb668566872d4c300a734b67f6600", "patch": "@@ -19,8 +19,7 @@ error: use of `#[inline]` on trait method `never_inline` which has no body\n    |\n 13 |       #[inline(never)]\n    |  _____-^^^^^^^^^^^^^^^\n-14 | |\n-15 | |     fn never_inline();\n+14 | |     fn never_inline();\n    | |____- help: remove\n \n error: aborting due to 3 previous errors"}]}