{"sha": "538a353df0fc17ba05a53b260e2e33ee3f94b308", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzOGEzNTNkZjBmYzE3YmEwNWE1M2IyNjBlMmUzM2VlM2Y5NGIzMDg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-06T14:58:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-06T14:58:57Z"}, "message": "Rollup merge of #71819 - jyn514:check-for-tools, r=Mark-Simulacrum\n\nx.py: Give a more helpful error message if curl isn't installed\n\nBefore:\n\n```\nUpdating only changed submodules\nSubmodules updated in 0.01 seconds\nTraceback (most recent call last):\n  File \"./x.py\", line 11, in <module>\n    bootstrap.main()\n  ...\n  File \"/home/joshua/src/rust/src/bootstrap/bootstrap.py\", line 137, in run\n    ret = subprocess.Popen(args, **kwargs)\n  File \"/usr/lib/python2.7/subprocess.py\", line 394, in __init__\n    errread, errwrite)\n  File \"/usr/lib/python2.7/subprocess.py\", line 1047, in _execute_child\n    raise child_exception\nOSError: [Errno 2] No such file or directory\n```\n\nAfter:\n\n```\nUpdating only changed submodules\nSubmodules updated in 0.01 seconds\n\nspurious failure, trying again\n\nspurious failure, trying again\n\nspurious failure, trying again\n\nspurious failure, trying again\nfailed to run: curl -s -y 30 -Y 10 --connect-timeout 30 --retry 3 -Sf -o /tmp/tmpSWF21P.sha256 https://static.rust-lang.org/dist/2020-04-22/rust-std-beta-x86_64-unknown-linux-gnu.tar.gz.sha256: [Errno 2] No such file or directory\nBuild completed unsuccessfully in 0:00:00\n```", "tree": {"sha": "36060f7189ae3d1e55d56333a6007230a1512d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36060f7189ae3d1e55d56333a6007230a1512d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/538a353df0fc17ba05a53b260e2e33ee3f94b308", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJestCxCRBK7hj4Ov3rIwAAdHIIACHg5uwU0DzK9kHTac/nXXHe\nDegRAH1OZuD74VTp36bJAP8DWv48uBLB6phpY+a4RG+6n8FJegqpVPPeMx7Ujg/5\n34CADtmPwmg95Vq5jtJ4LBkvIRIVR/VUPC+fSLB6Y5JoJov7Kisgr5g1aaktmPRT\n6M78vkz6UUDYTkhiqSjX1cGMJOMHx1p0JT+aqx/ZbPiCgcxDE6YKfqrVQN99748n\nmD9DH36zHszzbiGgbD0aMzakY2Kfq4nLWeCjI10L4SEFa0KNmo+q4uxpcuMbwcJ6\nua9elVfsLIcYO4Jn3NLm6aQZyJSkZ+jLoxI7l1Q1oL3lHAN6exXQS3I7yOWUWXw=\n=loEd\n-----END PGP SIGNATURE-----\n", "payload": "tree 36060f7189ae3d1e55d56333a6007230a1512d80\nparent a6a7c755fabefe46c36094de154a15a12ae2edbc\nparent 9bcf4097e33d8982b57c063f6481f7dd453bb0aa\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588777137 +0200\ncommitter GitHub <noreply@github.com> 1588777137 +0200\n\nRollup merge of #71819 - jyn514:check-for-tools, r=Mark-Simulacrum\n\nx.py: Give a more helpful error message if curl isn't installed\n\nBefore:\n\n```\nUpdating only changed submodules\nSubmodules updated in 0.01 seconds\nTraceback (most recent call last):\n  File \"./x.py\", line 11, in <module>\n    bootstrap.main()\n  ...\n  File \"/home/joshua/src/rust/src/bootstrap/bootstrap.py\", line 137, in run\n    ret = subprocess.Popen(args, **kwargs)\n  File \"/usr/lib/python2.7/subprocess.py\", line 394, in __init__\n    errread, errwrite)\n  File \"/usr/lib/python2.7/subprocess.py\", line 1047, in _execute_child\n    raise child_exception\nOSError: [Errno 2] No such file or directory\n```\n\nAfter:\n\n```\nUpdating only changed submodules\nSubmodules updated in 0.01 seconds\n\nspurious failure, trying again\n\nspurious failure, trying again\n\nspurious failure, trying again\n\nspurious failure, trying again\nfailed to run: curl -s -y 30 -Y 10 --connect-timeout 30 --retry 3 -Sf -o /tmp/tmpSWF21P.sha256 https://static.rust-lang.org/dist/2020-04-22/rust-std-beta-x86_64-unknown-linux-gnu.tar.gz.sha256: [Errno 2] No such file or directory\nBuild completed unsuccessfully in 0:00:00\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/538a353df0fc17ba05a53b260e2e33ee3f94b308", "html_url": "https://github.com/rust-lang/rust/commit/538a353df0fc17ba05a53b260e2e33ee3f94b308", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/538a353df0fc17ba05a53b260e2e33ee3f94b308/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6a7c755fabefe46c36094de154a15a12ae2edbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a7c755fabefe46c36094de154a15a12ae2edbc", "html_url": "https://github.com/rust-lang/rust/commit/a6a7c755fabefe46c36094de154a15a12ae2edbc"}, {"sha": "9bcf4097e33d8982b57c063f6481f7dd453bb0aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bcf4097e33d8982b57c063f6481f7dd453bb0aa", "html_url": "https://github.com/rust-lang/rust/commit/9bcf4097e33d8982b57c063f6481f7dd453bb0aa"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "9e56dd3770d4679a3138e1a1d8944b2f18b1d6b6", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/538a353df0fc17ba05a53b260e2e33ee3f94b308/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/538a353df0fc17ba05a53b260e2e33ee3f94b308/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=538a353df0fc17ba05a53b260e2e33ee3f94b308", "patch": "@@ -79,6 +79,7 @@ def _download(path, url, probably_big, verbose, exception):\n             option = \"-#\"\n         else:\n             option = \"-s\"\n+        require([\"curl\", \"--version\"])\n         run([\"curl\", option,\n              \"-y\", \"30\", \"-Y\", \"10\",    # timeout if speed is < 10 bytes/sec for > 30 seconds\n              \"--connect-timeout\", \"30\",  # timeout if cannot connect within 30 seconds\n@@ -143,6 +144,21 @@ def run(args, verbose=False, exception=False, **kwargs):\n         sys.exit(err)\n \n \n+def require(cmd, exit=True):\n+    '''Run a command, returning its output.\n+    On error,\n+        If `exit` is `True`, exit the process.\n+        Otherwise, return None.'''\n+    try:\n+        return subprocess.check_output(cmd).strip()\n+    except (subprocess.CalledProcessError, OSError) as exc:\n+        if not exit:\n+            return None\n+        print(\"error: unable to run `{}`: {}\".format(' '.join(cmd), exc))\n+        print(\"Please make sure it's installed and in the path.\")\n+        sys.exit(1)\n+\n+\n def stage0_data(rust_root):\n     \"\"\"Build a dictionary from stage0.txt\"\"\"\n     nightlies = os.path.join(rust_root, \"src/stage0.txt\")\n@@ -164,16 +180,12 @@ def format_build_time(duration):\n def default_build_triple():\n     \"\"\"Build triple as in LLVM\"\"\"\n     default_encoding = sys.getdefaultencoding()\n-    try:\n-        ostype = subprocess.check_output(\n-            ['uname', '-s']).strip().decode(default_encoding)\n-        cputype = subprocess.check_output(\n-            ['uname', '-m']).strip().decode(default_encoding)\n-    except (subprocess.CalledProcessError, OSError):\n-        if sys.platform == 'win32':\n-            return 'x86_64-pc-windows-msvc'\n-        err = \"uname not found\"\n-        sys.exit(err)\n+    required = not sys.platform == 'win32'\n+    ostype = require([\"uname\", \"-s\"], exit=required).decode(default_encoding)\n+    cputype = require(['uname', '-m'], exit=required).decode(default_encoding)\n+\n+    if ostype is None or cputype is None:\n+        return 'x86_64-pc-windows-msvc'\n \n     # The goal here is to come up with the same triple as LLVM would,\n     # at least for the subset of platforms we're willing to target.\n@@ -203,12 +215,7 @@ def default_build_triple():\n         # output from that option is too generic for our purposes (it will\n         # always emit 'i386' on x86/amd64 systems).  As such, isainfo -k\n         # must be used instead.\n-        try:\n-            cputype = subprocess.check_output(\n-                ['isainfo', '-k']).strip().decode(default_encoding)\n-        except (subprocess.CalledProcessError, OSError):\n-            err = \"isainfo not found\"\n-            sys.exit(err)\n+        cputype = require(['isainfo', '-k']).decode(default_encoding)\n     elif ostype.startswith('MINGW'):\n         # msys' `uname` does not print gcc configuration, but prints msys\n         # configuration. so we cannot believe `uname -m`:\n@@ -766,13 +773,8 @@ def update_submodules(self):\n         default_encoding = sys.getdefaultencoding()\n \n         # check the existence and version of 'git' command\n-        try:\n-            git_version_output = subprocess.check_output(['git', '--version'])\n-            git_version_str = git_version_output.strip().split()[2].decode(default_encoding)\n-            self.git_version = distutils.version.LooseVersion(git_version_str)\n-        except (subprocess.CalledProcessError, OSError):\n-            print(\"error: `git` is not found, please make sure it's installed and in the path.\")\n-            sys.exit(1)\n+        git_version_str = require(['git', '--version']).split()[2].decode(default_encoding)\n+        self.git_version = distutils.version.LooseVersion(git_version_str)\n \n         slow_submodules = self.get_toml('fast-submodules') == \"false\"\n         start_time = time()"}]}