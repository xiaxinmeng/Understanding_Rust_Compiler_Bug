{"sha": "0402360abb95b4b9930ac74cf04bb22f343396e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MDIzNjBhYmI5NWI0Yjk5MzBhYzc0Y2YwNGJiMjJmMzQzMzk2ZTE=", "commit": {"author": {"name": "Jesse Jones", "email": "jesse9jones@gmail.com", "date": "2012-12-12T03:16:00Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-16T06:38:20Z"}, "message": "Abort instead of throwing on oom", "tree": {"sha": "1d5892ce6bbbeae703bca6eca26793ddf0c5b4ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d5892ce6bbbeae703bca6eca26793ddf0c5b4ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0402360abb95b4b9930ac74cf04bb22f343396e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0402360abb95b4b9930ac74cf04bb22f343396e1", "html_url": "https://github.com/rust-lang/rust/commit/0402360abb95b4b9930ac74cf04bb22f343396e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0402360abb95b4b9930ac74cf04bb22f343396e1/comments", "author": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8d2d559002d6f1cb0a12553674b9b0383224512", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8d2d559002d6f1cb0a12553674b9b0383224512", "html_url": "https://github.com/rust-lang/rust/commit/e8d2d559002d6f1cb0a12553674b9b0383224512"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "41d614d0b2d40251a0c329c0f4c058210c8c2780", "filename": "src/rt/util/array_list.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0402360abb95b4b9930ac74cf04bb22f343396e1/src%2Frt%2Futil%2Farray_list.h", "raw_url": "https://github.com/rust-lang/rust/raw/0402360abb95b4b9930ac74cf04bb22f343396e1/src%2Frt%2Futil%2Farray_list.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Futil%2Farray_list.h?ref=0402360abb95b4b9930ac74cf04bb22f343396e1", "patch": "@@ -72,8 +72,10 @@ array_list<T>::push(T value) {\n     if (_size == _capacity) {\n         size_t new_capacity = _capacity * 2;\n         void* buffer = realloc(_data, new_capacity * sizeof(T));\n-        if (buffer == NULL)\n-            throw std::bad_alloc();\n+        if (buffer == NULL) {\n+            fprintf(stderr, \"array_list::push> Out of memory allocating %ld bytes\", new_capacity * sizeof(T));\n+            abort();\n+        }\n         _data = (T *) buffer;\n         _capacity = new_capacity;\n     }"}]}