{"sha": "922bf1d2acf7b779fddd1bc05415d4d9052f9ec2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMmJmMWQyYWNmN2I3NzlmZGRkMWJjMDU0MTVkNGQ5MDUyZjllYzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-27T11:01:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-27T11:01:42Z"}, "message": "Clarify thread::park semantics", "tree": {"sha": "55d2de03af8732d93e885848af3b60fbda55b2f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55d2de03af8732d93e885848af3b60fbda55b2f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/922bf1d2acf7b779fddd1bc05415d4d9052f9ec2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbWvuWCRBK7hj4Ov3rIwAAdHIIAAULI0ICxNW4pyKHrVHoM5Ha\nNRolXKaqt6wBzmGRKLNgZ9SjMsQREisXSyz56zUWsxLU54a1TuTm80VEYGxCvKsY\n5YmL5t0zfVIubcRFCSe917ebtu0gUfkMdSFnl4FtOVa9k8sYSkiogCMqRj18vpTs\nxHpbYyHJpSJPacMRD8lqwqbN11GhbjkbJYYtEsTrmoO3AQd6bjiLcO2O8JlS/7xT\nYyH8JyNbrkOlIpGkiv8+W0GPc207NzSmT4C379beIoBDGuYQ08GmOWRPiwtNsCQw\nCfzDmw6affTyl6O1UIG0TWZSqzGuotX1e8RrW5JDYQiNdSbWXNwWuQ9y9xbD0Ss=\n=SF3/\n-----END PGP SIGNATURE-----\n", "payload": "tree 55d2de03af8732d93e885848af3b60fbda55b2f6\nparent 7c2aeb9d974e85e54efa18cd63195bfd95347a44\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1532689302 +0300\ncommitter GitHub <noreply@github.com> 1532689302 +0300\n\nClarify thread::park semantics"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/922bf1d2acf7b779fddd1bc05415d4d9052f9ec2", "html_url": "https://github.com/rust-lang/rust/commit/922bf1d2acf7b779fddd1bc05415d4d9052f9ec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/922bf1d2acf7b779fddd1bc05415d4d9052f9ec2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c2aeb9d974e85e54efa18cd63195bfd95347a44", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c2aeb9d974e85e54efa18cd63195bfd95347a44", "html_url": "https://github.com/rust-lang/rust/commit/7c2aeb9d974e85e54efa18cd63195bfd95347a44"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "6f3945301e4397ba510b8c6c26430884397aa3a6", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/922bf1d2acf7b779fddd1bc05415d4d9052f9ec2/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922bf1d2acf7b779fddd1bc05415d4d9052f9ec2/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=922bf1d2acf7b779fddd1bc05415d4d9052f9ec2", "patch": "@@ -731,7 +731,8 @@ const NOTIFIED: usize = 2;\n ///   specifying a maximum time to block the thread for.\n ///\n /// * The [`unpark`] method on a [`Thread`] atomically makes the token available\n-///   if it wasn't already.\n+///   if it wasn't already. Because the token is initially absent, [`unpark`] \n+///   followed by [`park`] will result in the second call returning immediately.\n ///\n /// In other words, each [`Thread`] acts a bit like a spinlock that can be\n /// locked and unlocked using `park` and `unpark`.\n@@ -766,6 +767,8 @@ const NOTIFIED: usize = 2;\n /// // Let some time pass for the thread to be spawned.\n /// thread::sleep(Duration::from_millis(10));\n ///\n+/// // There is no race condition here, if `unpark`\n+/// // happens first, `park` will return immediately.\n /// println!(\"Unpark the thread\");\n /// parked_thread.thread().unpark();\n ///"}]}