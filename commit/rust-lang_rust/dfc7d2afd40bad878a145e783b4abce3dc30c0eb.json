{"sha": "dfc7d2afd40bad878a145e783b4abce3dc30c0eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYzdkMmFmZDQwYmFkODc4YTE0NWU3ODNiNGFiY2UzZGMzMGMwZWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-12T10:09:52Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-12T10:09:52Z"}, "message": "Run rustfmt", "tree": {"sha": "76ca64c4cac97a47d2a67a35029214ff8f546095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76ca64c4cac97a47d2a67a35029214ff8f546095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfc7d2afd40bad878a145e783b4abce3dc30c0eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc7d2afd40bad878a145e783b4abce3dc30c0eb", "html_url": "https://github.com/rust-lang/rust/commit/dfc7d2afd40bad878a145e783b4abce3dc30c0eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfc7d2afd40bad878a145e783b4abce3dc30c0eb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "064878a13f7690b3e360b0bc62a128ed0e1ead6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/064878a13f7690b3e360b0bc62a128ed0e1ead6e", "html_url": "https://github.com/rust-lang/rust/commit/064878a13f7690b3e360b0bc62a128ed0e1ead6e"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b5acafac1698d53be8b4e7994a3097178b903b7a", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dfc7d2afd40bad878a145e783b4abce3dc30c0eb/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc7d2afd40bad878a145e783b4abce3dc30c0eb/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=dfc7d2afd40bad878a145e783b4abce3dc30c0eb", "patch": "@@ -465,16 +465,22 @@ fn check_to_owned(cx: &LateContext, expr: &Expr, other: &Expr) {\n         return;\n     }\n \n-    span_lint_and_then(cx, CMP_OWNED, expr.span, \"this creates an owned instance just for comparison\", |db| {\n-        // this is as good as our recursion check can get, we can't prove that the current function is called by\n+    span_lint_and_then(cx,\n+                       CMP_OWNED,\n+                       expr.span,\n+                       \"this creates an owned instance just for comparison\",\n+                       |db| {\n+        // this is as good as our recursion check can get, we can't prove that the current function is\n+        // called by\n         // PartialEq::eq, but we can at least ensure that this code is not part of it\n         let parent_fn = cx.tcx.hir.get_parent(expr.id);\n         let parent_impl = cx.tcx.hir.get_parent(parent_fn);\n         if parent_impl != CRATE_NODE_ID {\n             if let map::NodeItem(item) = cx.tcx.hir.get(parent_impl) {\n                 if let ItemImpl(.., Some(ref trait_ref), _, _) = item.node {\n                     if trait_ref.path.def.def_id() == partial_eq_trait_id {\n-                        // we are implementing PartialEq, don't suggest not doing `to_owned`, otherwise we go into recursion\n+                        // we are implementing PartialEq, don't suggest not doing `to_owned`, otherwise we go into\n+                        // recursion\n                         db.span_label(expr.span, \"try calling implementing the comparison without allocating\");\n                         return;\n                     }"}, {"sha": "bdedd5a93bd319819921531179e4d1199a580e2b", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc7d2afd40bad878a145e783b4abce3dc30c0eb/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc7d2afd40bad878a145e783b4abce3dc30c0eb/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=dfc7d2afd40bad878a145e783b4abce3dc30c0eb", "patch": "@@ -716,7 +716,7 @@ impl<'a, 'tcx> TypeComplexityPass {\n }\n \n /// Walks a type and assigns a complexity score to it.\n-struct TypeComplexityVisitor{\n+struct TypeComplexityVisitor {\n     /// total complexity score of the type\n     score: u64,\n     /// current nesting level"}, {"sha": "0e6f88563827457e4bb6a9f302a3016d5b3d502f", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dfc7d2afd40bad878a145e783b4abce3dc30c0eb/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc7d2afd40bad878a145e783b4abce3dc30c0eb/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=dfc7d2afd40bad878a145e783b4abce3dc30c0eb", "patch": "@@ -218,15 +218,15 @@ pub fn read(path: Option<&path::Path>) -> (Conf, Vec<Error>) {\n     let path = if let Some(path) = path {\n         path\n     } else {\n-        return default(Vec::new())\n+        return default(Vec::new());\n     };\n \n     let file = match fs::File::open(path) {\n         Ok(mut file) => {\n             let mut buf = String::new();\n \n             if let Err(err) = file.read_to_string(&mut buf) {\n-                return default(vec![err.into()])\n+                return default(vec![err.into()]);\n             }\n \n             buf"}]}