{"sha": "30d49a401ab11402429c8a839f54ff3b952d10a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZDQ5YTQwMWFiMTE0MDI0MjljOGE4MzlmNTRmZjNiOTUyZDEwYTc=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-07-17T04:58:23Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-07-17T18:32:36Z"}, "message": "Rustdoc accessibility: make the sidebar headers actual headers\n\nPart of #87059\n\nPreview it at: https://notriddle.com/notriddle-rustdoc-test/rustdoc-sidebar-header/std/index.html", "tree": {"sha": "6bf79b29439e1299c1f1fe702e85be37442fdc47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bf79b29439e1299c1f1fe702e85be37442fdc47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30d49a401ab11402429c8a839f54ff3b952d10a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30d49a401ab11402429c8a839f54ff3b952d10a7", "html_url": "https://github.com/rust-lang/rust/commit/30d49a401ab11402429c8a839f54ff3b952d10a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30d49a401ab11402429c8a839f54ff3b952d10a7/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c78ebb7bdcfc924a20fd069891ffe1364d6814e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c78ebb7bdcfc924a20fd069891ffe1364d6814e7", "html_url": "https://github.com/rust-lang/rust/commit/c78ebb7bdcfc924a20fd069891ffe1364d6814e7"}], "stats": {"total": 63, "additions": 34, "deletions": 29}, "files": [{"sha": "b6c3220901f06ad4289f50311357ebbf525084dc", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30d49a401ab11402429c8a839f54ff3b952d10a7/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d49a401ab11402429c8a839f54ff3b952d10a7/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=30d49a401ab11402429c8a839f54ff3b952d10a7", "patch": "@@ -539,7 +539,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         };\n         let sidebar = if let Some(ref version) = self.cache.crate_version {\n             format!(\n-                \"<p class=\\\"location\\\">Crate {}</p>\\\n+                \"<h2 class=\\\"location\\\">Crate {}</h2>\\\n                      <div class=\\\"block version\\\">\\\n                          <p>Version {}</p>\\\n                      </div>\\\n@@ -567,7 +567,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         page.root_path = \"./\";\n \n         let mut style_files = self.shared.style_files.clone();\n-        let sidebar = \"<p class=\\\"location\\\">Settings</p><div class=\\\"sidebar-elems\\\"></div>\";\n+        let sidebar = \"<h2 class=\\\"location\\\">Settings</h2><div class=\\\"sidebar-elems\\\"></div>\";\n         style_files.push(StylePath { path: PathBuf::from(\"settings.css\"), disabled: false });\n         let v = layout::render(\n             &self.shared.templates,"}, {"sha": "68c59612ccc448d58c4c508ada7f1e675e3c8da4", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/30d49a401ab11402429c8a839f54ff3b952d10a7/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d49a401ab11402429c8a839f54ff3b952d10a7/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=30d49a401ab11402429c8a839f54ff3b952d10a7", "patch": "@@ -1654,7 +1654,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n     {\n         write!(\n             buffer,\n-            \"<p class=\\\"location\\\">{}{}</p>\",\n+            \"<h2 class=\\\"location\\\">{}{}</h2>\",\n             match *it.kind {\n                 clean::StructItem(..) => \"Struct \",\n                 clean::TraitItem(..) => \"Trait \",\n@@ -1718,7 +1718,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n     // to navigate the documentation (though slightly inefficiently).\n \n     if !it.is_mod() {\n-        buffer.write_str(\"<p class=\\\"location\\\">Other items in<br>\");\n+        buffer.write_str(\"<h2 class=\\\"location\\\">Other items in<br>\");\n         for (i, name) in cx.current.iter().take(parentlen).enumerate() {\n             if i > 0 {\n                 buffer.write_str(\"::<wbr>\");\n@@ -1730,7 +1730,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n                 *name\n             );\n         }\n-        buffer.write_str(\"</p>\");\n+        buffer.write_str(\"</h2>\");\n     }\n \n     // Sidebar refers to the enclosing module, not this module.\n@@ -1841,7 +1841,7 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n                 ret.sort();\n \n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#implementations\\\">Methods</a>\\\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#implementations\\\">Methods</a></h3>\\\n                      <div class=\\\"sidebar-links\\\">\",\n                 );\n                 for line in ret {\n@@ -1906,24 +1906,24 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n \n             if !concrete_format.is_empty() {\n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#trait-implementations\\\">\\\n-                        Trait Implementations</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#trait-implementations\\\">\\\n+                        Trait Implementations</a></h3>\",\n                 );\n                 write_sidebar_links(out, concrete_format);\n             }\n \n             if !synthetic_format.is_empty() {\n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#synthetic-implementations\\\">\\\n-                        Auto Trait Implementations</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#synthetic-implementations\\\">\\\n+                        Auto Trait Implementations</a></h3>\",\n                 );\n                 write_sidebar_links(out, synthetic_format);\n             }\n \n             if !blanket_format.is_empty() {\n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#blanket-implementations\\\">\\\n-                        Blanket Implementations</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#blanket-implementations\\\">\\\n+                        Blanket Implementations</a></h3>\",\n                 );\n                 write_sidebar_links(out, blanket_format);\n             }\n@@ -1975,7 +1975,7 @@ fn sidebar_deref_methods(cx: &Context<'_>, out: &mut Buffer, impl_: &Impl, v: &V\n             if !ret.is_empty() {\n                 write!(\n                     out,\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#deref-methods\\\">Methods from {}&lt;Target={}&gt;</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#deref-methods\\\">Methods from {}&lt;Target={}&gt;</a></h3>\",\n                     Escape(&format!(\"{:#}\", impl_.inner_impl().trait_.as_ref().unwrap().print(cx))),\n                     Escape(&format!(\"{:#}\", real_target.print(cx))),\n                 );\n@@ -1998,7 +1998,7 @@ fn sidebar_struct(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, s: &clea\n     if !fields.is_empty() {\n         if let CtorKind::Fictive = s.struct_type {\n             sidebar.push_str(\n-                \"<a class=\\\"sidebar-title\\\" href=\\\"#fields\\\">Fields</a>\\\n+                \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#fields\\\">Fields</a></h3>\\\n                 <div class=\\\"sidebar-links\\\">\",\n             );\n \n@@ -2075,8 +2075,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#associated-types\\\">\\\n-            Associated Types</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#associated-types\\\">\\\n+            Associated Types</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_associated_type(),\n         |out, sym| write!(out, \"<a href=\\\"#associatedtype.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2085,8 +2085,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#associated-const\\\">\\\n-            Associated Constants</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#associated-const\\\">\\\n+            Associated Constants</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_associated_const(),\n         |out, sym| write!(out, \"<a href=\\\"#associatedconstant.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2095,8 +2095,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#required-methods\\\">\\\n-            Required Methods</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#required-methods\\\">\\\n+            Required Methods</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_ty_method(),\n         |out, sym| write!(out, \"<a href=\\\"#tymethod.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2105,8 +2105,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#provided-methods\\\">\\\n-            Provided Methods</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#provided-methods\\\">\\\n+            Provided Methods</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_method(),\n         |out, sym| write!(out, \"<a href=\\\"#method.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2128,8 +2128,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n         if !res.is_empty() {\n             res.sort();\n             buf.push_str(\n-                \"<a class=\\\"sidebar-title\\\" href=\\\"#foreign-impls\\\">\\\n-                    Implementations on Foreign Types</a>\\\n+                \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#foreign-impls\\\">\\\n+                    Implementations on Foreign Types</a></h3>\\\n                  <div class=\\\"sidebar-links\\\">\",\n             );\n             for (name, id) in res.into_iter() {\n@@ -2141,11 +2141,11 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n \n     sidebar_assoc_items(cx, buf, it);\n \n-    buf.push_str(\"<a class=\\\"sidebar-title\\\" href=\\\"#implementors\\\">Implementors</a>\");\n+    buf.push_str(\"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#implementors\\\">Implementors</a></h3>\");\n     if t.is_auto {\n         buf.push_str(\n-            \"<a class=\\\"sidebar-title\\\" \\\n-                href=\\\"#synthetic-implementors\\\">Auto Implementors</a>\",\n+            \"<h3 class=\\\"sidebar-title\\\"><a \\\n+                href=\\\"#synthetic-implementors\\\">Auto Implementors</a></h3>\",\n         );\n     }\n \n@@ -2188,7 +2188,7 @@ fn sidebar_union(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, u: &clean\n \n     if !fields.is_empty() {\n         sidebar.push_str(\n-            \"<a class=\\\"sidebar-title\\\" href=\\\"#fields\\\">Fields</a>\\\n+            \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#fields\\\">Fields</a></h3>\\\n             <div class=\\\"sidebar-links\\\">\",\n         );\n \n@@ -2220,7 +2220,7 @@ fn sidebar_enum(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, e: &clean:\n     if !variants.is_empty() {\n         variants.sort_unstable();\n         sidebar.push_str(&format!(\n-            \"<a class=\\\"sidebar-title\\\" href=\\\"#variants\\\">Variants</a>\\\n+            \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#variants\\\">Variants</a></h3>\\\n              <div class=\\\"sidebar-links\\\">{}</div>\",\n             variants.join(\"\"),\n         ));"}, {"sha": "bb7582e23b4d077c2806c34a49dde1e87f317a42", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/30d49a401ab11402429c8a839f54ff3b952d10a7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/30d49a401ab11402429c8a839f54ff3b952d10a7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=30d49a401ab11402429c8a839f54ff3b952d10a7", "patch": "@@ -339,9 +339,12 @@ nav.sub {\n .sidebar .location {\n \tborder: 1px solid;\n \tfont-size: 17px;\n+\tfont-weight: inherit;\n \tmargin: 30px 10px 20px 10px;\n \ttext-align: center;\n \tword-wrap: break-word;\n+\tfont-weight: inherit;\n+\tpadding: 0;\n }\n \n .sidebar .version {\n@@ -394,6 +397,8 @@ nav.sub {\n \ttext-align: center;\n \tfont-size: 17px;\n \tmargin-bottom: 5px;\n+\tfont-weight: inherit;\n+\tpadding: 0;\n }\n \n .sidebar-links {"}]}