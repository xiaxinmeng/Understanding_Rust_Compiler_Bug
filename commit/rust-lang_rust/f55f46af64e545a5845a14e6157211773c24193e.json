{"sha": "f55f46af64e545a5845a14e6157211773c24193e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NWY0NmFmNjRlNTQ1YTU4NDVhMTRlNjE1NzIxMTc3M2MyNDE5M2U=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-24T01:02:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-24T01:02:08Z"}, "message": "rustc: Typecheck whiles and do-whiles. Add a workaround to complex.rs pending a solution to the one-armed-if problem.", "tree": {"sha": "ded516265ba4ae8112bb562a9f6fcb4d5993d3c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded516265ba4ae8112bb562a9f6fcb4d5993d3c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f55f46af64e545a5845a14e6157211773c24193e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f55f46af64e545a5845a14e6157211773c24193e", "html_url": "https://github.com/rust-lang/rust/commit/f55f46af64e545a5845a14e6157211773c24193e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f55f46af64e545a5845a14e6157211773c24193e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4208352527a9c6a0541d89e2aea063e1e298a90e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4208352527a9c6a0541d89e2aea063e1e298a90e", "html_url": "https://github.com/rust-lang/rust/commit/4208352527a9c6a0541d89e2aea063e1e298a90e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "0a944ec31953a1dd8dafbc0544785530772cf6a8", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f55f46af64e545a5845a14e6157211773c24193e/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f55f46af64e545a5845a14e6157211773c24193e/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=f55f46af64e545a5845a14e6157211773c24193e", "patch": "@@ -545,6 +545,7 @@ TEST_XFAILS_SELF := $(filter-out \\\n                       $(addprefix test/compile-fail/, \\\n                         arg-count-mismatch.rs \\\n                         arg-type-mismatch.rs \\\n+                        while-type-error.rs \\\n                         ), \\\n                       $(wildcard test/*/*.rs test/*/*.rc))\n "}, {"sha": "aefb92bce9aa4156d5b455b7dc88366d28d238a6", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f55f46af64e545a5845a14e6157211773c24193e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f55f46af64e545a5845a14e6157211773c24193e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=f55f46af64e545a5845a14e6157211773c24193e", "patch": "@@ -1073,6 +1073,27 @@ fn check_expr(&fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n                                                     ast.ann_type(elsopt_t)));\n         }\n \n+        case (ast.expr_while(?cond, ?body, _)) {\n+            auto cond_0 = check_expr(fcx, cond);\n+            auto cond_1 = demand_expr(fcx, plain_ty(ty_bool), cond_0);\n+            auto body_1 = check_block(fcx, body);\n+\n+            auto ann = ast.ann_type(plain_ty(ty_nil));\n+            ret @fold.respan[ast.expr_](expr.span,\n+                                        ast.expr_while(cond_1, body_1, ann));\n+        }\n+\n+        case (ast.expr_do_while(?body, ?cond, _)) {\n+            auto cond_0 = check_expr(fcx, cond);\n+            auto cond_1 = demand_expr(fcx, plain_ty(ty_bool), cond_0);\n+            auto body_1 = check_block(fcx, body);\n+\n+            auto ann = ast.ann_type(block_ty(body_1));\n+            ret @fold.respan[ast.expr_](expr.span,\n+                                        ast.expr_do_while(body_1, cond_1,\n+                                                          ann));\n+        }\n+\n         case (ast.expr_call(?f, ?args, _)) {\n             // Check the function.\n             auto f_0 = check_expr(fcx, f);"}, {"sha": "f65159ce11066cdcd206362b3be14d359ced6f3f", "filename": "src/test/run-pass/complex.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f55f46af64e545a5845a14e6157211773c24193e/src%2Ftest%2Frun-pass%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f55f46af64e545a5845a14e6157211773c24193e/src%2Ftest%2Frun-pass%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomplex.rs?ref=f55f46af64e545a5845a14e6157211773c24193e", "patch": "@@ -1,6 +1,7 @@\n // -*- rust -*-\n \n type t = int;\n+fn nothing() {}\n fn putstr(str s) {}\n fn putint(int i) {\n   let int i = 33;\n@@ -15,7 +16,7 @@ fn foo(int x) -> int {\n   while (y < 10) {\n     putint(y);\n     if (y * 3 == 4) {\n-      y = y + 2;\n+      y = y + 2; nothing();\n     }\n   }\n   let t z;"}]}