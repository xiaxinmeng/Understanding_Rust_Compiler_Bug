{"sha": "aa523a9b4b42662c721fc747aa2cc278797195f2", "node_id": "C_kwDOAAsO6NoAKGFhNTIzYTliNGI0MjY2MmM3MjFmYzc0N2FhMmNjMjc4Nzk3MTk1ZjI", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-13T17:38:08Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-13T17:40:07Z"}, "message": "Fix errors on blanket impls by ignoring the children of their generated implementations", "tree": {"sha": "437344b204b145adbaf9ea3d2f52a33b59afce2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/437344b204b145adbaf9ea3d2f52a33b59afce2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa523a9b4b42662c721fc747aa2cc278797195f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa523a9b4b42662c721fc747aa2cc278797195f2", "html_url": "https://github.com/rust-lang/rust/commit/aa523a9b4b42662c721fc747aa2cc278797195f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa523a9b4b42662c721fc747aa2cc278797195f2/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e74d7b9cf1a7901650227e74650f1fcc797600", "url": "https://api.github.com/repos/rust-lang/rust/commits/72e74d7b9cf1a7901650227e74650f1fcc797600", "html_url": "https://github.com/rust-lang/rust/commit/72e74d7b9cf1a7901650227e74650f1fcc797600"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "c47a2c7ca03fab373788475f0776952b4c04b136", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa523a9b4b42662c721fc747aa2cc278797195f2/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa523a9b4b42662c721fc747aa2cc278797195f2/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=aa523a9b4b42662c721fc747aa2cc278797195f2", "patch": "@@ -75,6 +75,14 @@ impl ItemId {\n         }\n     }\n \n+    #[inline]\n+    crate fn is_local_impl(self) -> bool {\n+        match self {\n+            ItemId::Blanket { impl_id, .. } => impl_id.is_local(),\n+            ItemId::Auto { .. } | ItemId::DefId(_) | ItemId::Primitive(_, _) => false,\n+        }\n+    }\n+\n     #[inline]\n     #[track_caller]\n     crate fn expect_def_id(self) -> DefId {"}, {"sha": "c1efefc322e0e6593857c0a0473886f1cb81a011", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa523a9b4b42662c721fc747aa2cc278797195f2/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa523a9b4b42662c721fc747aa2cc278797195f2/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=aa523a9b4b42662c721fc747aa2cc278797195f2", "patch": "@@ -172,7 +172,11 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     /// implementations filled out before they're inserted.\n     fn item(&mut self, item: clean::Item) -> Result<(), Error> {\n         // Flatten items that recursively store other items\n-        item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n+        // We skip local blanket implementations, as we'll have already seen the actual generic\n+        // impl, and the generated ones don't need documenting.\n+        if !item.def_id.is_local_impl() {\n+            item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n+        }\n \n         let id = item.def_id;\n         if let Some(mut new_item) = self.convert_item(item) {"}, {"sha": "88d1477f0b2da93e127d57aed3eb7eaf724c59b9", "filename": "src/test/rustdoc-json/impls/blanket_with_local.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aa523a9b4b42662c721fc747aa2cc278797195f2/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa523a9b4b42662c721fc747aa2cc278797195f2/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs?ref=aa523a9b4b42662c721fc747aa2cc278797195f2", "patch": "@@ -0,0 +1,14 @@\n+// Test for the ICE in rust/83718\n+// A blanket impl plus a local type together shouldn't result in mismatched ID issues\n+\n+// @has method_abi.json \"$.index[*][?(@.name=='Load')]\"\n+pub trait Load {\n+    fn load() {}\n+}\n+\n+impl<P> Load for P {\n+    fn load() {}\n+}\n+\n+// @has - \"$.index[*][?(@.name=='Wrapper')]\"\n+pub struct Wrapper {}"}]}