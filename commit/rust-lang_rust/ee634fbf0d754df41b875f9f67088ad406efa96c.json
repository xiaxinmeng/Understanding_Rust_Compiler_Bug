{"sha": "ee634fbf0d754df41b875f9f67088ad406efa96c", "node_id": "C_kwDOAAsO6NoAKGVlNjM0ZmJmMGQ3NTRkZjQxYjg3NWY5ZjY3MDg4YWQ0MDZlZmE5NmM", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-08-12T10:00:02Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-08-12T10:00:02Z"}, "message": "[debuginfo] Update codegen tests for new cpp-like enum debuginfo encoding.", "tree": {"sha": "24ef74176d9fe72d9b54a44a6ac8d93f4c957069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ef74176d9fe72d9b54a44a6ac8d93f4c957069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee634fbf0d754df41b875f9f67088ad406efa96c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee634fbf0d754df41b875f9f67088ad406efa96c", "html_url": "https://github.com/rust-lang/rust/commit/ee634fbf0d754df41b875f9f67088ad406efa96c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee634fbf0d754df41b875f9f67088ad406efa96c/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0e3ed6e8dc6782ae86707e2332a9d42a44935d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0e3ed6e8dc6782ae86707e2332a9d42a44935d6", "html_url": "https://github.com/rust-lang/rust/commit/b0e3ed6e8dc6782ae86707e2332a9d42a44935d6"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "909cd0062a623050a02e6fcb98695e60295fc013", "filename": "src/test/codegen/async-fn-debug-awaitee-field.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fasync-fn-debug-awaitee-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fasync-fn-debug-awaitee-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasync-fn-debug-awaitee-field.rs?ref=ee634fbf0d754df41b875f9f67088ad406efa96c", "patch": "@@ -12,11 +12,11 @@ async fn async_fn_test() {\n }\n \n // NONMSVC: [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"{async_fn_env#0}\",\n-// MSVC: [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"enum$<async_fn_debug_awaitee_field::async_fn_test::async_fn_env$0>\",\n+// MSVC: [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"enum2$<async_fn_debug_awaitee_field::async_fn_test::async_fn_env$0>\",\n // CHECK: [[SUSPEND_STRUCT:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend0\", scope: [[GEN]],\n // CHECK: !DIDerivedType(tag: DW_TAG_member, name: \"__awaitee\", scope: [[SUSPEND_STRUCT]], {{.*}}, baseType: [[AWAITEE_TYPE:![0-9]*]],\n // NONMSVC: [[AWAITEE_TYPE]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"GenFuture<async_fn_debug_awaitee_field::foo::{async_fn_env#0}>\",\n-// MSVC: [[AWAITEE_TYPE]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"GenFuture<enum$<async_fn_debug_awaitee_field::foo::async_fn_env$0> >\",\n+// MSVC: [[AWAITEE_TYPE]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"GenFuture<enum2$<async_fn_debug_awaitee_field::foo::async_fn_env$0> >\",\n \n fn main() {\n     let _fn = async_fn_test();"}, {"sha": "73c652c9dd15ea3a87323f63628b2f5f356309e7", "filename": "src/test/codegen/async-fn-debug-msvc.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs?ref=ee634fbf0d754df41b875f9f67088ad406efa96c", "patch": "@@ -16,7 +16,7 @@ async fn async_fn_test() {\n \n // FIXME: No way to reliably check the filename.\n \n-// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"enum$<async_fn_debug_msvc::async_fn_test::async_fn_env$0>\",\n+// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"enum2$<async_fn_debug_msvc::async_fn_test::async_fn_env$0>\",\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant0\", scope: [[GEN]],\n // For brevity, we only check the struct name and members of the last variant.\n // CHECK-SAME: file: [[FILE:![0-9]*]], line: 11,\n@@ -36,16 +36,17 @@ async fn async_fn_test() {\n // CHECK-SAME: )\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant4\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 14,\n-// CHECK-SAME: baseType: [[VARIANT:![0-9]*]]\n+// CHECK-SAME: baseType: [[VARIANT_WRAPPER:![0-9]*]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"value\", scope: [[VARIANT_WRAPPER]], file: !2, baseType: [[VARIANT:![0-9]*]],\n // CHECK:      [[VARIANT]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[GEN]],\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"s\", scope: [[VARIANT]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"discriminant\", scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"tag\", scope: [[GEN]],\n // CHECK-NOT: flags: DIFlagArtificial\n \n fn main() {"}, {"sha": "bdd312878ec887bb5ade80915bdde69fce5060f7", "filename": "src/test/codegen/debug-vtable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fdebug-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fdebug-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fdebug-vtable.rs?ref=ee634fbf0d754df41b875f9f67088ad406efa96c", "patch": "@@ -46,7 +46,7 @@\n // CHECK: !DIDerivedType(tag: DW_TAG_member, name: \"align\", scope: ![[VTABLE_TY2]], {{.*}}, baseType: ![[USIZE]], size: {{64|32}}, align: {{64|32}}, offset: {{128|64}})\n \n // NONMSVC: !DIGlobalVariable(name: \"<debug_vtable::bar::{closure_env#0} as core::ops::function::FnOnce<(core::option::Option<&dyn core::ops::function::Fn<(), Output=()>>)>>::{vtable}\"\n-// MSVC: !DIGlobalVariable(name: \"impl$<debug_vtable::bar::closure_env$0, core::ops::function::FnOnce<tuple$<enum$<core::option::Option<ref$<dyn$<core::ops::function::Fn<tuple$<>,assoc$<Output,tuple$<> > > > > >, {{.*}}, {{.*}}, Some> > > >::vtable$\"\n+// MSVC: !DIGlobalVariable(name: \"impl$<debug_vtable::bar::closure_env$0, core::ops::function::FnOnce<tuple$<enum2$<core::option::Option<ref$<dyn$<core::ops::function::Fn<tuple$<>,assoc$<Output,tuple$<> > > > > > > > > >::vtable$\"\n \n // NONMSVC: !DIGlobalVariable(name: \"<debug_vtable::generic_closure::{closure_env#0}<bool> as core::ops::function::FnOnce<()>>::{vtable}\"\n // MSVC: !DIGlobalVariable(name: \"impl$<debug_vtable::generic_closure::closure_env$0<bool>, core::ops::function::FnOnce<tuple$<> > >::vtable$"}, {"sha": "b712068bf27f2ab9790ef7741df57ee3df78f8d3", "filename": "src/test/codegen/generator-debug-msvc.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee634fbf0d754df41b875f9f67088ad406efa96c/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs?ref=ee634fbf0d754df41b875f9f67088ad406efa96c", "patch": "@@ -20,7 +20,7 @@ fn generator_test() -> impl Generator<Yield = i32, Return = ()> {\n \n // FIXME: No way to reliably check the filename.\n \n-// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"enum$<generator_debug_msvc::generator_test::generator_env$0>\"\n+// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"enum2$<generator_debug_msvc::generator_test::generator_env$0>\"\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant0\", scope: [[GEN]],\n // For brevity, we only check the struct name and members of the last variant.\n // CHECK-SAME: file: [[FILE:![0-9]*]], line: 14,\n@@ -40,16 +40,18 @@ fn generator_test() -> impl Generator<Yield = i32, Return = ()> {\n // CHECK-SAME: )\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant4\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 17,\n-// CHECK-SAME: baseType: [[VARIANT:![0-9]*]]\n+// CHECK-SAME: baseType: [[VARIANT_WRAPPER:![0-9]*]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n+// CHECK:      [[VARIANT_WRAPPER]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Variant4\", scope: [[GEN]],\n+// CHECK:      !DIDerivedType(tag: DW_TAG_member, name: \"value\", scope: [[VARIANT_WRAPPER]], {{.*}}, baseType: [[VARIANT:![0-9]*]],\n // CHECK:      [[VARIANT]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[GEN]],\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"s\", scope: [[VARIANT]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"discriminant\", scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"tag\", scope: [[GEN]],\n // CHECK-NOT: flags: DIFlagArtificial\n \n fn main() {"}]}