{"sha": "28501cd80fe15152dd9d4104a65f1b1260b53d13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NTAxY2Q4MGZlMTUxNTJkZDlkNDEwNGE2NWYxYjEyNjBiNTNkMTM=", "commit": {"author": {"name": "Alik Aslanyan", "email": "inline0@protonmail.com", "date": "2021-04-26T14:37:08Z"}, "committer": {"name": "Alik Aslanyan", "email": "inline0@protonmail.com", "date": "2021-04-26T14:37:08Z"}, "message": "Implement setting thread name for Fuchsia", "tree": {"sha": "04a15621509029bde1549d029ef5351f72537c8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04a15621509029bde1549d029ef5351f72537c8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28501cd80fe15152dd9d4104a65f1b1260b53d13", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJLBAABCAA1FiEEeY134/OQL6hN3y4Jf+b9XVvEzPYFAmCG0BQXHGlubGluZTBA\ncHJvdG9ubWFpbC5jb20ACgkQf+b9XVvEzPZJYA/+Oo77ID844M9yM0wGH/7wjkyH\ncl7Cuzl0M4zWXrTb1Qn5wMYSA9DU27yVzMa1zTLliTZZUQ0hAn8EilW//qP/wU6w\nh5SAWe6iEnQOskwe7DUGhFY+/1h6qGSleGuzzCoYWlm3NRaVTNmM6g+9iUIXTqHa\n/Ver7N50SBggSAQeL5n4s6N1sGScqwWPtR36gJNqyr+0YOzwlDm64EC9trKnSNt/\n5d0JJeMYdCe1FUEOGhYaT2Wq0C/v9t+eJNy6uO/Slpaez0E97NS8zx9tIHp0VK4L\n5vYINwD2KByilTS+cWsWV40f/XBtEjULfDhjZrOboK4s2svxZFh4SZLRQGO7TMOm\nbtxLUB0a72obDP4kixU1J5sgUHNI+tWG9ssU2/0/OkFHVYIHoqpyPY8A9GF48CC8\nA0o9i+hDF5OCRXMoSPpO9NDqKRzvmSlZ74hbno+mNhYamOKWUJJk4q+otNIqe2TD\nQgugjdDmcaLtINaF8mrOWFRK/b311Apu3H3HcrLr5/8WosJBiGzt+s6ZbOwrmpxf\nWTL9ZHKWIxzGCinDVLHJL89F0FKrCQn1uZYHpUYCzdwZb0aH+mk3zsv5uo4gBK6Z\nf0Z3u1LRCb7rH9C5v43E3iMxTTiPwOp3DStBIR5LH2UmETNW6ymhM+HsLNnH8c6P\n0qKsJ+NNDpp0LJnU3m4=\n=ldVY\n-----END PGP SIGNATURE-----", "payload": "tree 04a15621509029bde1549d029ef5351f72537c8b\nparent 8212de8eb18a8cc4ab74074f244c386d5e99b281\nauthor Alik Aslanyan <inline0@protonmail.com> 1619447828 +0400\ncommitter Alik Aslanyan <inline0@protonmail.com> 1619447828 +0400\n\nImplement setting thread name for Fuchsia\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28501cd80fe15152dd9d4104a65f1b1260b53d13", "html_url": "https://github.com/rust-lang/rust/commit/28501cd80fe15152dd9d4104a65f1b1260b53d13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28501cd80fe15152dd9d4104a65f1b1260b53d13/comments", "author": {"login": "In-line", "id": 19331496, "node_id": "MDQ6VXNlcjE5MzMxNDk2", "avatar_url": "https://avatars.githubusercontent.com/u/19331496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/In-line", "html_url": "https://github.com/In-line", "followers_url": "https://api.github.com/users/In-line/followers", "following_url": "https://api.github.com/users/In-line/following{/other_user}", "gists_url": "https://api.github.com/users/In-line/gists{/gist_id}", "starred_url": "https://api.github.com/users/In-line/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/In-line/subscriptions", "organizations_url": "https://api.github.com/users/In-line/orgs", "repos_url": "https://api.github.com/users/In-line/repos", "events_url": "https://api.github.com/users/In-line/events{/privacy}", "received_events_url": "https://api.github.com/users/In-line/received_events", "type": "User", "site_admin": false}, "committer": {"login": "In-line", "id": 19331496, "node_id": "MDQ6VXNlcjE5MzMxNDk2", "avatar_url": "https://avatars.githubusercontent.com/u/19331496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/In-line", "html_url": "https://github.com/In-line", "followers_url": "https://api.github.com/users/In-line/followers", "following_url": "https://api.github.com/users/In-line/following{/other_user}", "gists_url": "https://api.github.com/users/In-line/gists{/gist_id}", "starred_url": "https://api.github.com/users/In-line/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/In-line/subscriptions", "organizations_url": "https://api.github.com/users/In-line/orgs", "repos_url": "https://api.github.com/users/In-line/repos", "events_url": "https://api.github.com/users/In-line/events{/privacy}", "received_events_url": "https://api.github.com/users/In-line/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8212de8eb18a8cc4ab74074f244c386d5e99b281", "url": "https://api.github.com/repos/rust-lang/rust/commits/8212de8eb18a8cc4ab74074f244c386d5e99b281", "html_url": "https://github.com/rust-lang/rust/commit/8212de8eb18a8cc4ab74074f244c386d5e99b281"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "0cdea58ca9fdc3b14ed5e7f6ac6a4dc70c853113", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/28501cd80fe15152dd9d4104a65f1b1260b53d13/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28501cd80fe15152dd9d4104a65f1b1260b53d13/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=28501cd80fe15152dd9d4104a65f1b1260b53d13", "patch": "@@ -13,6 +13,23 @@ pub const DEFAULT_MIN_STACK_SIZE: usize = 1024 * 1024;\n #[cfg(target_os = \"vxworks\")]\n pub const DEFAULT_MIN_STACK_SIZE: usize = 256 * 1024;\n \n+#[cfg(target_os = \"fuchsia\")]\n+mod zircon {\n+    type zx_handle_t = u32;\n+    type zx_status_t = i32;\n+    pub const ZX_PROP_NAME: u32 = 3;\n+\n+    extern \"C\" {\n+        pub fn zx_object_set_property(\n+            handle: zx_handle_t,\n+            property: u32,\n+            value: *const libc::c_void,\n+            value_size: libc::size_t,\n+        ) -> zx_status_t;\n+        pub fn zx_thread_self() -> zx_handle_t;\n+    }\n+}\n+\n pub struct Thread {\n     id: libc::pthread_t,\n }\n@@ -131,6 +148,19 @@ impl Thread {\n         }\n     }\n \n+    #[cfg(target_os = \"fuchsia\")]\n+    pub fn set_name(name: &CStr) {\n+        use self::zircon::*;\n+        unsafe {\n+            zx_object_set_property(\n+                zx_thread_self(),\n+                ZX_PROP_NAME,\n+                name.as_ptr() as *const libc::c_void,\n+                libc::strlen(name.as_ptr()),\n+            );\n+        }\n+    }\n+\n     #[cfg(any(\n         target_env = \"newlib\",\n         target_os = \"haiku\",\n@@ -142,10 +172,6 @@ impl Thread {\n     pub fn set_name(_name: &CStr) {\n         // Newlib, Haiku, Emscripten, and VxWorks have no way to set a thread name.\n     }\n-    #[cfg(target_os = \"fuchsia\")]\n-    pub fn set_name(_name: &CStr) {\n-        // FIXME: determine whether Fuchsia has a way to set a thread name.\n-    }\n \n     pub fn sleep(dur: Duration) {\n         let mut secs = dur.as_secs();"}]}