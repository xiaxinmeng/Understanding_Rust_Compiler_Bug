{"sha": "eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNGZjMmQ0ZmVmZTI2MzhmOTg2YWViMGZhMjM2OGZmODhjNTg0ZDU=", "commit": {"author": {"name": "maik", "email": "maik.klein@embark-studios.com", "date": "2020-01-07T14:33:33Z"}, "committer": {"name": "maik", "email": "maik.klein@embark-studios.com", "date": "2020-01-07T14:33:33Z"}, "message": "Export scalar statics in wasm", "tree": {"sha": "b2c151f8ac2bcac25237e7e9e205ac80372ecb3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2c151f8ac2bcac25237e7e9e205ac80372ecb3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5", "html_url": "https://github.com/rust-lang/rust/commit/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5/comments", "author": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f074dea1dbf28d7519bf408b7530e8cba019243", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f074dea1dbf28d7519bf408b7530e8cba019243", "html_url": "https://github.com/rust-lang/rust/commit/4f074dea1dbf28d7519bf408b7530e8cba019243"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "9cf0f0a801e1aca907ff11f0e62f6fa835110ecd", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5", "patch": "@@ -349,7 +349,12 @@ fn symbol_export_level(tcx: TyCtxt<'_>, sym_def_id: DefId) -> SymbolExportLevel\n             if let Some(Node::Item(&hir::Item { kind: hir::ItemKind::Static(..), .. })) =\n                 tcx.hir().get_if_local(sym_def_id)\n             {\n-                return SymbolExportLevel::Rust;\n+                let export_level = if tcx.type_of(sym_def_id).is_scalar() {\n+                    SymbolExportLevel::C\n+                } else {\n+                    SymbolExportLevel::Rust\n+                };\n+                return export_level;\n             }\n         }\n "}]}