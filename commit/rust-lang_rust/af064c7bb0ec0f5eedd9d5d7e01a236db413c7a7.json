{"sha": "af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMDY0YzdiYjBlYzBmNWVlZGQ5ZDVkN2UwMWEyMzZkYjQxM2M3YTc=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-04-27T14:50:55Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-04-27T14:50:55Z"}, "message": "Fixed typo in std::iter", "tree": {"sha": "f75a38f48e86816c9960686a9172634e159ba3ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f75a38f48e86816c9960686a9172634e159ba3ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7", "html_url": "https://github.com/rust-lang/rust/commit/af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2a8fae84c290f6dbbff769de7f59f76a9400103", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2a8fae84c290f6dbbff769de7f59f76a9400103", "html_url": "https://github.com/rust-lang/rust/commit/b2a8fae84c290f6dbbff769de7f59f76a9400103"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "18532c3944364edea7f7a93a537266d97ffea183", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=af064c7bb0ec0f5eedd9d5d7e01a236db413c7a7", "patch": "@@ -306,7 +306,7 @@ pub trait Iterator<A> {\n         Take{iter: self, n: n}\n     }\n \n-    /// Creates a new iterator which behaves in a similar fashion to foldl.\n+    /// Creates a new iterator which behaves in a similar fashion to fold.\n     /// There is a state which is passed between each iteration and can be\n     /// mutated as necessary. The yielded values from the closure are yielded\n     /// from the Scan instance when not None."}]}