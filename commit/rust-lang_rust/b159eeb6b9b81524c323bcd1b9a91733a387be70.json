{"sha": "b159eeb6b9b81524c323bcd1b9a91733a387be70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNTllZWI2YjliODE1MjRjMzIzYmNkMWI5YTkxNzMzYTM4N2JlNzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-25T10:07:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-25T10:07:28Z"}, "message": "Auto merge of #46949 - davidtwco:issue-46631, r=arielb1\n\nMIR borrowck: no \"move occurs because `X` is not Copy` error\n\nFixes #46631.\n\nr? @arielb1", "tree": {"sha": "cb276f98edefa65af8730821695aff0f6f4a93ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb276f98edefa65af8730821695aff0f6f4a93ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b159eeb6b9b81524c323bcd1b9a91733a387be70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b159eeb6b9b81524c323bcd1b9a91733a387be70", "html_url": "https://github.com/rust-lang/rust/commit/b159eeb6b9b81524c323bcd1b9a91733a387be70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b159eeb6b9b81524c323bcd1b9a91733a387be70/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cd67581e7d048810874903dc589e5b855f47e7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd67581e7d048810874903dc589e5b855f47e7d", "html_url": "https://github.com/rust-lang/rust/commit/0cd67581e7d048810874903dc589e5b855f47e7d"}, {"sha": "6710bd8614f92d241b62e52028d18810d765a79b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6710bd8614f92d241b62e52028d18810d765a79b", "html_url": "https://github.com/rust-lang/rust/commit/6710bd8614f92d241b62e52028d18810d765a79b"}], "stats": {"total": 77, "additions": 75, "deletions": 2}, "files": [{"sha": "1d9e05f677439c8c0a8732fdb0386b7fad6a6edd", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=b159eeb6b9b81524c323bcd1b9a91733a387be70", "patch": "@@ -81,7 +81,34 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     err.span_label(move_span, format!(\"value moved{} here\", move_msg));\n                 };\n             }\n-            //FIXME: add note for closure\n+\n+            if let Some(ty) = self.retrieve_type_for_place(place) {\n+                let needs_note = match ty.sty {\n+                    ty::TypeVariants::TyClosure(id, _) => {\n+                        let tables = self.tcx.typeck_tables_of(id);\n+                        let node_id = self.tcx.hir.as_local_node_id(id).unwrap();\n+                        let hir_id = self.tcx.hir.node_to_hir_id(node_id);\n+                        if let Some(_) = tables.closure_kind_origins().get(hir_id) {\n+                            false\n+                        } else {\n+                            true\n+                        }\n+                    },\n+                    _ => true,\n+                };\n+\n+                if needs_note {\n+                    let note_msg = match self.describe_place(place) {\n+                        Some(name) => format!(\"`{}`\", name),\n+                        None => \"value\".to_owned(),\n+                    };\n+\n+                    err.note(&format!(\"move occurs because {} has type `{}`, \\\n+                                       which does not implement the `Copy` trait\",\n+                                       note_msg, ty));\n+                }\n+            }\n+\n             err.emit();\n         }\n     }\n@@ -721,4 +748,21 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n     fn retrieve_borrow_span(&self, borrow: &BorrowData) -> Span {\n         self.mir.source_info(borrow.location).span\n     }\n+\n+    // Retrieve type of a place for the current MIR representation\n+    fn retrieve_type_for_place(&self, place: &Place<'tcx>) -> Option<ty::Ty> {\n+        match place {\n+            Place::Local(local) => {\n+                let local = &self.mir.local_decls[*local];\n+                Some(local.ty)\n+            },\n+            Place::Static(ref st) => Some(st.ty),\n+            Place::Projection(ref proj) => {\n+                match proj.elem {\n+                    ProjectionElem::Field(_, ty) => Some(ty),\n+                    _ => None,\n+                }\n+            },\n+        }\n+    }\n }"}, {"sha": "f36ed05051521ef341f2271f151bcb333da8a2d1", "filename": "src/test/ui/borrowck/borrowck-reinit.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reinit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reinit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reinit.stderr?ref=b159eeb6b9b81524c323bcd1b9a91733a387be70", "patch": "@@ -15,6 +15,8 @@ error[E0382]: use of moved value: `x` (Mir)\n    |          - value moved here\n 18 |     let _ = (1,x); //~ ERROR use of moved value: `x` (Ast)\n    |                ^ value used here after move\n+   |\n+   = note: move occurs because `x` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n \n error: aborting due to 2 previous errors\n "}, {"sha": "27903fee117b3d7658c2e10c8c700e570176e70e", "filename": "src/test/ui/moves-based-on-type-tuple.rs", "status": "renamed", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Ftest%2Fui%2Fmoves-based-on-type-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Ftest%2Fui%2Fmoves-based-on-type-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves-based-on-type-tuple.rs?ref=b159eeb6b9b81524c323bcd1b9a91733a387be70", "patch": "@@ -10,9 +10,14 @@\n \n #![feature(box_syntax)]\n \n+// compile-flags: -Z emit-end-regions -Z borrowck=compare\n+\n fn dup(x: Box<isize>) -> Box<(Box<isize>,Box<isize>)> {\n-    box (x, x) //~ ERROR use of moved value\n+    box (x, x)\n+    //~^ use of moved value: `x` (Ast) [E0382]\n+    //~| use of moved value: `x` (Mir) [E0382]\n }\n+\n fn main() {\n     dup(box 3);\n }", "previous_filename": "src/test/compile-fail/moves-based-on-type-tuple.rs"}, {"sha": "e1667107c927caec732646460172f805bccb49ea", "filename": "src/test/ui/moves-based-on-type-tuple.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Ftest%2Fui%2Fmoves-based-on-type-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b159eeb6b9b81524c323bcd1b9a91733a387be70/src%2Ftest%2Fui%2Fmoves-based-on-type-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves-based-on-type-tuple.stderr?ref=b159eeb6b9b81524c323bcd1b9a91733a387be70", "patch": "@@ -0,0 +1,22 @@\n+error[E0382]: use of moved value: `x` (Ast)\n+  --> $DIR/moves-based-on-type-tuple.rs:16:13\n+   |\n+16 |     box (x, x)\n+   |          -  ^ value used here after move\n+   |          |\n+   |          value moved here\n+   |\n+   = note: move occurs because `x` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `x` (Mir)\n+  --> $DIR/moves-based-on-type-tuple.rs:16:13\n+   |\n+16 |     box (x, x)\n+   |          -  ^ value used here after move\n+   |          |\n+   |          value moved here\n+   |\n+   = note: move occurs because `x` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+\n+error: aborting due to 2 previous errors\n+"}]}