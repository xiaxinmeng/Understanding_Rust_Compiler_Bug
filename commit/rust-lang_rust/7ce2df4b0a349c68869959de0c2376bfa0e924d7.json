{"sha": "7ce2df4b0a349c68869959de0c2376bfa0e924d7", "node_id": "C_kwDOAAsO6NoAKDdjZTJkZjRiMGEzNDljNjg4Njk5NTlkZTBjMjM3NmJmYTBlOTI0ZDc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-12T16:29:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-12T16:29:48Z"}, "message": "Merge #11969\n\n11969: fix: Add trailing `;` when completing assoc const/type in trait impl r=jonas-schievink a=jonas-schievink\n\nFinal item of https://github.com/rust-analyzer/rust-analyzer/issues/11860, thus closes https://github.com/rust-analyzer/rust-analyzer/issues/11860 :tada: \r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "c28235a5c39799ed67e44c261026f67b9a32222e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c28235a5c39799ed67e44c261026f67b9a32222e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ce2df4b0a349c68869959de0c2376bfa0e924d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiVaj8CRBK7hj4Ov3rIwAApV0IADbJOrPlp7RUNV8OsNayRmJv\n71MumuzotMMgOApjfnw8VbP1yheDYywF3Di8Je1ht3tZVBsDaFPVDoh8URXSBBCu\ntSWEsfxFlpEWYR8SrUfK5lxptb+I5eWN1V+mmiM93nZneT7pYhqxRW5PucpOYXS6\nWuYgSA6suoPs/aGHIjPM6WWo0RXRkH4Qw9t9YH0I1xeezMqEOgnSatcZkfU0tYGA\nEJQ3SRsXsZoAiB1k38Ct/Qr6bIkIZi1oF+UHUHFCeWZlGHXwyW9ctoeFAJFncRFW\nhF64FKJBGPWVPB9E1d9GyJFB27Uh1tE5XSSxTvV4eIBNen1o+a+l7d5SBFxCMx8=\n=0bJJ\n-----END PGP SIGNATURE-----\n", "payload": "tree c28235a5c39799ed67e44c261026f67b9a32222e\nparent a64a70ebff9c5d082a0d39459698bfd620610d38\nparent a182156517ff36bb63f32358febfe7b6cd481110\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1649780988 +0000\ncommitter GitHub <noreply@github.com> 1649780988 +0000\n\nMerge #11969\n\n11969: fix: Add trailing `;` when completing assoc const/type in trait impl r=jonas-schievink a=jonas-schievink\n\nFinal item of https://github.com/rust-analyzer/rust-analyzer/issues/11860, thus closes https://github.com/rust-analyzer/rust-analyzer/issues/11860 :tada: \r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce2df4b0a349c68869959de0c2376bfa0e924d7", "html_url": "https://github.com/rust-lang/rust/commit/7ce2df4b0a349c68869959de0c2376bfa0e924d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ce2df4b0a349c68869959de0c2376bfa0e924d7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a64a70ebff9c5d082a0d39459698bfd620610d38", "url": "https://api.github.com/repos/rust-lang/rust/commits/a64a70ebff9c5d082a0d39459698bfd620610d38", "html_url": "https://github.com/rust-lang/rust/commit/a64a70ebff9c5d082a0d39459698bfd620610d38"}, {"sha": "a182156517ff36bb63f32358febfe7b6cd481110", "url": "https://api.github.com/repos/rust-lang/rust/commits/a182156517ff36bb63f32358febfe7b6cd481110", "html_url": "https://github.com/rust-lang/rust/commit/a182156517ff36bb63f32358febfe7b6cd481110"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "43428f777f09c61f67b12fdcbe5a5af503531745", "filename": "crates/ide_completion/src/completions/trait_impl.rs", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/7ce2df4b0a349c68869959de0c2376bfa0e924d7/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce2df4b0a349c68869959de0c2376bfa0e924d7/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs?ref=7ce2df4b0a349c68869959de0c2376bfa0e924d7", "patch": "@@ -228,13 +228,17 @@ fn add_type_alias_impl(\n     let alias_name = type_alias.name(ctx.db).to_smol_str();\n \n     let label = format!(\"type {} =\", alias_name);\n-    let snippet = format!(\"type {} = \", alias_name);\n+    let replacement = format!(\"type {} = \", alias_name);\n \n     let mut item = CompletionItem::new(SymbolKind::TypeAlias, replacement_range, label);\n-    item.text_edit(TextEdit::replace(replacement_range, snippet))\n-        .lookup_by(format!(\"type {}\", alias_name))\n+    item.lookup_by(format!(\"type {}\", alias_name))\n         .set_documentation(type_alias.docs(ctx.db))\n         .set_relevance(CompletionRelevance { is_item_from_trait: true, ..Default::default() });\n+    match ctx.config.snippet_cap {\n+        Some(cap) => item\n+            .snippet_edit(cap, TextEdit::replace(replacement_range, format!(\"{}$0;\", replacement))),\n+        None => item.text_edit(TextEdit::replace(replacement_range, replacement)),\n+    };\n     item.add_to(acc);\n }\n \n@@ -257,16 +261,22 @@ fn add_const_impl(\n                 };\n \n                 let label = make_const_compl_syntax(&transformed_const);\n-                let snippet = format!(\"{} \", label);\n+                let replacement = format!(\"{} \", label);\n \n                 let mut item = CompletionItem::new(SymbolKind::Const, replacement_range, label);\n-                item.text_edit(TextEdit::replace(replacement_range, snippet))\n-                    .lookup_by(format!(\"const {}\", const_name))\n+                item.lookup_by(format!(\"const {}\", const_name))\n                     .set_documentation(const_.docs(ctx.db))\n                     .set_relevance(CompletionRelevance {\n                         is_item_from_trait: true,\n                         ..Default::default()\n                     });\n+                match ctx.config.snippet_cap {\n+                    Some(cap) => item.snippet_edit(\n+                        cap,\n+                        TextEdit::replace(replacement_range, format!(\"{}$0;\", replacement)),\n+                    ),\n+                    None => item.text_edit(TextEdit::replace(replacement_range, replacement)),\n+                };\n                 item.add_to(acc);\n             }\n         }\n@@ -678,7 +688,7 @@ trait Test {\n }\n \n impl Test for () {\n-    type SomeType = \\n\\\n+    type SomeType = $0;\\n\\\n }\n \",\n         );\n@@ -703,7 +713,7 @@ trait Test {\n }\n \n impl Test for () {\n-    const SOME_CONST: u16 = \\n\\\n+    const SOME_CONST: u16 = $0;\\n\\\n }\n \",\n         );\n@@ -725,7 +735,7 @@ trait Test {\n }\n \n impl Test for () {\n-    const SOME_CONST: u16 = \\n\\\n+    const SOME_CONST: u16 = $0;\\n\\\n }\n \",\n         );\n@@ -784,8 +794,8 @@ impl Test for T {{\n             \"default const OTHER_CONST: i32 = 0;\",\n         ] {\n             test(\"fn bar\", \"fn $0\", \"fn bar() {\\n    $0\\n}\", next_sibling);\n-            test(\"type Foo\", \"type $0\", \"type Foo = \", next_sibling);\n-            test(\"const CONST\", \"const $0\", \"const CONST: u16 = \", next_sibling);\n+            test(\"type Foo\", \"type $0\", \"type Foo = $0;\", next_sibling);\n+            test(\"const CONST\", \"const $0\", \"const CONST: u16 = $0;\", next_sibling);\n         }\n     }\n \n@@ -831,8 +841,8 @@ impl Foo for T {{\n             )\n         };\n         test(\"fn function\", \"fn f$0\", \"fn function() {\\n    $0\\n}\");\n-        test(\"type Type\", \"type T$0\", \"type Type = \");\n-        test(\"const CONST\", \"const C$0\", \"const CONST: i32 = \");\n+        test(\"type Type\", \"type T$0\", \"type Type = $0;\");\n+        test(\"const CONST\", \"const C$0\", \"const CONST: i32 = $0;\");\n     }\n \n     #[test]\n@@ -962,7 +972,7 @@ trait Foo<T> {\n struct Bar;\n \n impl Foo<u32> for Bar {\n-    const B$0;\n+    const B$0\n }\n \"#,\n             r#\"\n@@ -972,7 +982,7 @@ trait Foo<T> {\n struct Bar;\n \n impl Foo<u32> for Bar {\n-    const BAR: u32 = ;\n+    const BAR: u32 = $0;\n }\n \"#,\n         )"}]}