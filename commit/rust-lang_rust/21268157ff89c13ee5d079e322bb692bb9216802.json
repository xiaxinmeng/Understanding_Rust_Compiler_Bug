{"sha": "21268157ff89c13ee5d079e322bb692bb9216802", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMjY4MTU3ZmY4OWMxM2VlNWQwNzllMzIyYmI2OTJiYjkyMTY4MDI=", "commit": {"author": {"name": "Philippe Nadon", "email": "phil@nadon.io", "date": "2020-07-23T16:28:00Z"}, "committer": {"name": "Philippe Nadon", "email": "phil@nadon.io", "date": "2020-07-26T22:05:20Z"}, "message": "renamed Immediate::to_scalar_or_undef\n\nto Immediate::to_scalar_or_uninit\n\nin src/shims/intrinsics.rs\n\nrelated issue #71193", "tree": {"sha": "12769247864e232a97d51cb337c57e07dd91db4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12769247864e232a97d51cb337c57e07dd91db4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21268157ff89c13ee5d079e322bb692bb9216802", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21268157ff89c13ee5d079e322bb692bb9216802", "html_url": "https://github.com/rust-lang/rust/commit/21268157ff89c13ee5d079e322bb692bb9216802", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21268157ff89c13ee5d079e322bb692bb9216802/comments", "author": {"login": "pnadon", "id": 12490688, "node_id": "MDQ6VXNlcjEyNDkwNjg4", "avatar_url": "https://avatars.githubusercontent.com/u/12490688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnadon", "html_url": "https://github.com/pnadon", "followers_url": "https://api.github.com/users/pnadon/followers", "following_url": "https://api.github.com/users/pnadon/following{/other_user}", "gists_url": "https://api.github.com/users/pnadon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnadon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnadon/subscriptions", "organizations_url": "https://api.github.com/users/pnadon/orgs", "repos_url": "https://api.github.com/users/pnadon/repos", "events_url": "https://api.github.com/users/pnadon/events{/privacy}", "received_events_url": "https://api.github.com/users/pnadon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnadon", "id": 12490688, "node_id": "MDQ6VXNlcjEyNDkwNjg4", "avatar_url": "https://avatars.githubusercontent.com/u/12490688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnadon", "html_url": "https://github.com/pnadon", "followers_url": "https://api.github.com/users/pnadon/followers", "following_url": "https://api.github.com/users/pnadon/following{/other_user}", "gists_url": "https://api.github.com/users/pnadon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnadon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnadon/subscriptions", "organizations_url": "https://api.github.com/users/pnadon/orgs", "repos_url": "https://api.github.com/users/pnadon/repos", "events_url": "https://api.github.com/users/pnadon/events{/privacy}", "received_events_url": "https://api.github.com/users/pnadon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5161ba346c646914b4992aa9cc97d0e4309128b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5161ba346c646914b4992aa9cc97d0e4309128b6", "html_url": "https://github.com/rust-lang/rust/commit/5161ba346c646914b4992aa9cc97d0e4309128b6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ee64b1ffca44b77b27785919e32be1c14660943e", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21268157ff89c13ee5d079e322bb692bb9216802/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21268157ff89c13ee5d079e322bb692bb9216802/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=21268157ff89c13ee5d079e322bb692bb9216802", "patch": "@@ -392,7 +392,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n                 // `binary_op` will bail if either of them is not a scalar.\n                 let eq = this.overflowing_binary_op(mir::BinOp::Eq, old, expect_old)?.0;\n-                let res = Immediate::ScalarPair(old.to_scalar_or_undef(), eq.into());\n+                let res = Immediate::ScalarPair(old.to_scalar_or_uninit(), eq.into());\n                 // Return old value.\n                 this.write_immediate(res, dest)?;\n                 // Update ptr depending on comparison."}]}