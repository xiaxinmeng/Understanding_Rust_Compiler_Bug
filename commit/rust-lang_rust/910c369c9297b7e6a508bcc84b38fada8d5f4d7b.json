{"sha": "910c369c9297b7e6a508bcc84b38fada8d5f4d7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMGMzNjljOTI5N2I3ZTZhNTA4YmNjODRiMzhmYWRhOGQ1ZjRkN2I=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-09T15:31:53Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-09T15:31:53Z"}, "message": "enable checking for const fn without needing to go through `entry`", "tree": {"sha": "b4e0f016c4db91210d7f60450aed7415cbd1e1da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4e0f016c4db91210d7f60450aed7415cbd1e1da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/910c369c9297b7e6a508bcc84b38fada8d5f4d7b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYSs5pAAoJEFbW7qD8Z6xGl3sP/3JoCFNN81HibHFNsWBgKJUM\nHvoNQUm7vED//PwotcufaBeqyCrB+JJ1x/AVp3vWRm5obCwmIiJEDd8LSD8QYQ6R\n14FHsCzFJFciumAd0qFXeRpG4PnqM4feq1GqUmGz7Z1u1Zj8EVUvwWnWTQngp+SC\nNZN+biFyWqD2BJiyyc99e1VZL7JBH+I6hISX52DX9rNBwnB2Jloh9lkaMa9/T0yf\nvwrQX4MBzPI3XWiGeSy5F+wC/C3ZOxEEQicxTen3fnPmCWtGG7FMNvmyljjVC8S0\n9oQ9u15yjTk2qwjyqtlRQJ9deMIAZ2PSQIriQHX6nmd90krZnj4LpJ7/OC9+vaFB\nuVILDyRGGVXo6COvMkFqt7JZKSxsJvRd3Bcy3KoI2JeHFdYHcX/mSxc8bgzIRdTl\nPAfMPH1zdqleq6Z7FIbv5FQl0Zd5cOgKL7+Uo4IVR3qsYereqyyoXQni9v/Po3l2\nOMmh3E76DRvMiD9QxhTekZmXy7mehR6m2BwsZa5+/I9yy7/fzBp1J73YjlZOlx1Q\n9ih24PROlu4SGTx9ExsI3pRJfNbx7IVe4RAcTJZJWwz51IiVn1QXII7m8gVd0dth\nD6ErGD/4GHHqlTmDPXKKdldNdsmw3DFiPjDRNPHnxfaR9Xykn0SVjDMY+3gWwb0P\n63wMXmgtSqJoS+41dUeU\n=CodY\n-----END PGP SIGNATURE-----", "payload": "tree b4e0f016c4db91210d7f60450aed7415cbd1e1da\nparent acfb06fd593ed803a3da056c9d5acb399697d0e8\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1481297513 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1481297513 +0100\n\nenable checking for const fn without needing to go through `entry`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/910c369c9297b7e6a508bcc84b38fada8d5f4d7b", "html_url": "https://github.com/rust-lang/rust/commit/910c369c9297b7e6a508bcc84b38fada8d5f4d7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/910c369c9297b7e6a508bcc84b38fada8d5f4d7b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acfb06fd593ed803a3da056c9d5acb399697d0e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/acfb06fd593ed803a3da056c9d5acb399697d0e8", "html_url": "https://github.com/rust-lang/rust/commit/acfb06fd593ed803a3da056c9d5acb399697d0e8"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "e07868877283f97af8b635b6f78b6e927a4a94fe", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/910c369c9297b7e6a508bcc84b38fada8d5f4d7b/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/910c369c9297b7e6a508bcc84b38fada8d5f4d7b/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=910c369c9297b7e6a508bcc84b38fada8d5f4d7b", "patch": "@@ -504,6 +504,14 @@ impl<'tcx> EntryKind<'tcx> {\n             EntryKind::Closure(_) => return None,\n         })\n     }\n+    fn is_const_fn(&self, meta: &CrateMetadata) -> bool {\n+        let constness = match *self {\n+            EntryKind::Method(data) => data.decode(meta).fn_data.constness,\n+            EntryKind::Fn(data) => data.decode(meta).constness,\n+            _ => hir::Constness::NotConst,\n+        };\n+        constness == hir::Constness::Const\n+    }\n }\n \n impl<'a, 'tcx> CrateMetadata {\n@@ -1051,12 +1059,7 @@ impl<'a, 'tcx> CrateMetadata {\n     }\n \n     pub fn is_const_fn(&self, id: DefIndex) -> bool {\n-        let constness = match self.entry(id).kind {\n-            EntryKind::Method(data) => data.decode(self).fn_data.constness,\n-            EntryKind::Fn(data) => data.decode(self).constness,\n-            _ => hir::Constness::NotConst,\n-        };\n-        constness == hir::Constness::Const\n+        self.entry(id).kind.is_const_fn(self)\n     }\n \n     pub fn is_foreign_item(&self, id: DefIndex) -> bool {"}]}