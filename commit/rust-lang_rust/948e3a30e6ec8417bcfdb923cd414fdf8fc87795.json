{"sha": "948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0OGUzYTMwZTZlYzg0MTdiY2ZkYjkyM2NkNDE0ZmRmOGZjODc3OTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-10T08:24:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-10T08:24:08Z"}, "message": "Auto merge of #48755 - GuillaumeGomez:rustdoc-fixes, r=QuietMisdreavus\n\nMultiple rustdoc fixes\n\nFixes #48733.\n\nr? @QuietMisdreavus", "tree": {"sha": "ffd41279b8c3569db442219c8d72987061366863", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffd41279b8c3569db442219c8d72987061366863"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "html_url": "https://github.com/rust-lang/rust/commit/948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3edb3cc26c4030e62f26fd5f0d9d53fb7b78d618", "url": "https://api.github.com/repos/rust-lang/rust/commits/3edb3cc26c4030e62f26fd5f0d9d53fb7b78d618", "html_url": "https://github.com/rust-lang/rust/commit/3edb3cc26c4030e62f26fd5f0d9d53fb7b78d618"}, {"sha": "89f4f1bca1267ae42fcd2aa85dcdf5d348565038", "url": "https://api.github.com/repos/rust-lang/rust/commits/89f4f1bca1267ae42fcd2aa85dcdf5d348565038", "html_url": "https://github.com/rust-lang/rust/commit/89f4f1bca1267ae42fcd2aa85dcdf5d348565038"}], "stats": {"total": 161, "additions": 97, "deletions": 64}, "files": [{"sha": "3750faec801ad227f60240ed441990a8e72c1b27", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 23, "deletions": 28, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "patch": "@@ -3521,11 +3521,9 @@ impl<'a> fmt::Display for Sidebar<'a> {\n         let cx = self.cx;\n         let it = self.item;\n         let parentlen = cx.current.len() - if it.is_mod() {1} else {0};\n-        let mut should_close = false;\n \n         if it.is_struct() || it.is_trait() || it.is_primitive() || it.is_union()\n-            || it.is_enum() || it.is_mod() || it.is_typedef()\n-        {\n+            || it.is_enum() || it.is_mod() || it.is_typedef() {\n             write!(fmt, \"<p class='location'>\")?;\n             match it.inner {\n                 clean::StructItem(..) => write!(fmt, \"Struct \")?,\n@@ -3544,30 +3542,29 @@ impl<'a> fmt::Display for Sidebar<'a> {\n             }\n             write!(fmt, \"{}\", it.name.as_ref().unwrap())?;\n             write!(fmt, \"</p>\")?;\n+        }\n \n-            if it.is_crate() {\n-                if let Some(ref version) = cache().crate_version {\n-                    write!(fmt,\n-                           \"<div class='block version'>\\\n-                            <p>Version {}</p>\\\n-                            </div>\",\n-                           version)?;\n-                }\n+        if it.is_crate() {\n+            if let Some(ref version) = cache().crate_version {\n+                write!(fmt,\n+                       \"<div class='block version'>\\\n+                        <p>Version {}</p>\\\n+                        </div>\",\n+                       version)?;\n             }\n+        }\n \n-            write!(fmt, \"<div class=\\\"sidebar-elems\\\">\")?;\n-            should_close = true;\n-            match it.inner {\n-                clean::StructItem(ref s) => sidebar_struct(fmt, it, s)?,\n-                clean::TraitItem(ref t) => sidebar_trait(fmt, it, t)?,\n-                clean::PrimitiveItem(ref p) => sidebar_primitive(fmt, it, p)?,\n-                clean::UnionItem(ref u) => sidebar_union(fmt, it, u)?,\n-                clean::EnumItem(ref e) => sidebar_enum(fmt, it, e)?,\n-                clean::TypedefItem(ref t, _) => sidebar_typedef(fmt, it, t)?,\n-                clean::ModuleItem(ref m) => sidebar_module(fmt, it, &m.items)?,\n-                clean::ForeignTypeItem => sidebar_foreign_type(fmt, it)?,\n-                _ => (),\n-            }\n+        write!(fmt, \"<div class=\\\"sidebar-elems\\\">\")?;\n+        match it.inner {\n+            clean::StructItem(ref s) => sidebar_struct(fmt, it, s)?,\n+            clean::TraitItem(ref t) => sidebar_trait(fmt, it, t)?,\n+            clean::PrimitiveItem(ref p) => sidebar_primitive(fmt, it, p)?,\n+            clean::UnionItem(ref u) => sidebar_union(fmt, it, u)?,\n+            clean::EnumItem(ref e) => sidebar_enum(fmt, it, e)?,\n+            clean::TypedefItem(ref t, _) => sidebar_typedef(fmt, it, t)?,\n+            clean::ModuleItem(ref m) => sidebar_module(fmt, it, &m.items)?,\n+            clean::ForeignTypeItem => sidebar_foreign_type(fmt, it)?,\n+            _ => (),\n         }\n \n         // The sidebar is designed to display sibling functions, modules and\n@@ -3607,10 +3604,8 @@ impl<'a> fmt::Display for Sidebar<'a> {\n             write!(fmt, \"<script defer src=\\\"{path}sidebar-items.js\\\"></script>\",\n                    path = relpath)?;\n         }\n-        if should_close {\n-            // Closes sidebar-elems div.\n-            write!(fmt, \"</div>\")?;\n-        }\n+        // Closes sidebar-elems div.\n+        write!(fmt, \"</div>\")?;\n \n         Ok(())\n     }"}, {"sha": "f1c9c58a4ebcfda0cdda9c044e122fdfd967dba1", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 52, "deletions": 36, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "patch": "@@ -240,12 +240,15 @@\n     }\n \n     function handleShortcut(ev) {\n-        if (document.activeElement.tagName === \"INPUT\")\n+        if (document.activeElement.tagName === \"INPUT\" &&\n+                hasClass(document.getElementById('main'), \"hidden\")) {\n             return;\n+        }\n \n         // Don't interfere with browser shortcuts\n-        if (ev.ctrlKey || ev.altKey || ev.metaKey)\n+        if (ev.ctrlKey || ev.altKey || ev.metaKey) {\n             return;\n+        }\n \n         var help = document.getElementById(\"help\");\n         switch (getVirtualKey(ev)) {\n@@ -1457,36 +1460,38 @@\n         // Draw a convenient sidebar of known crates if we have a listing\n         if (rootPath === '../') {\n             var sidebar = document.getElementsByClassName('sidebar-elems')[0];\n-            var div = document.createElement('div');\n-            div.className = 'block crate';\n-            div.innerHTML = '<h3>Crates</h3>';\n-            var ul = document.createElement('ul');\n-            div.appendChild(ul);\n-\n-            var crates = [];\n-            for (var crate in rawSearchIndex) {\n-                if (!rawSearchIndex.hasOwnProperty(crate)) {\n-                    continue;\n+            if (sidebar) {\n+                var div = document.createElement('div');\n+                div.className = 'block crate';\n+                div.innerHTML = '<h3>Crates</h3>';\n+                var ul = document.createElement('ul');\n+                div.appendChild(ul);\n+\n+                var crates = [];\n+                for (var crate in rawSearchIndex) {\n+                    if (!rawSearchIndex.hasOwnProperty(crate)) {\n+                        continue;\n+                    }\n+                    crates.push(crate);\n                 }\n-                crates.push(crate);\n-            }\n-            crates.sort();\n-            for (var i = 0; i < crates.length; ++i) {\n-                var klass = 'crate';\n-                if (crates[i] === window.currentCrate) {\n-                    klass += ' current';\n+                crates.sort();\n+                for (var i = 0; i < crates.length; ++i) {\n+                    var klass = 'crate';\n+                    if (crates[i] === window.currentCrate) {\n+                        klass += ' current';\n+                    }\n+                    var link = document.createElement('a');\n+                    link.href = '../' + crates[i] + '/index.html';\n+                    link.title = rawSearchIndex[crates[i]].doc;\n+                    link.className = klass;\n+                    link.textContent = crates[i];\n+\n+                    var li = document.createElement('li');\n+                    li.appendChild(link);\n+                    ul.appendChild(li);\n                 }\n-                var link = document.createElement('a');\n-                link.href = '../' + crates[i] + '/index.html';\n-                link.title = rawSearchIndex[crates[i]].doc;\n-                link.className = klass;\n-                link.textContent = crates[i];\n-\n-                var li = document.createElement('li');\n-                li.appendChild(link);\n-                ul.appendChild(li);\n+                sidebar.appendChild(div);\n             }\n-            sidebar.appendChild(div);\n         }\n     }\n \n@@ -1776,22 +1781,33 @@\n         referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n     }\n \n+    function checkIfThereAreMethods(elems) {\n+        var areThereMethods = false;\n+\n+        onEach(elems, function(e) {\n+            if (hasClass(e, \"method\")) {\n+                areThereMethods = true;\n+                return true;\n+            }\n+        });\n+        return areThereMethods;\n+    }\n+\n     var toggle = document.createElement('a');\n     toggle.href = 'javascript:void(0)';\n     toggle.className = 'collapse-toggle';\n-    toggle.innerHTML = \"[<span class='inner'>\"+labelForToggleButton(false)+\"</span>]\";\n+    toggle.innerHTML = \"[<span class='inner'>\" + labelForToggleButton(false) + \"</span>]\";\n \n     var func = function(e) {\n         var next = e.nextElementSibling;\n         if (!next) {\n             return;\n         }\n-        if (hasClass(next, 'docblock') ||\n-            (hasClass(next, 'stability') &&\n-             hasClass(next.nextElementSibling, 'docblock'))) {\n-            insertAfter(toggle.cloneNode(true), e.childNodes[e.childNodes.length - 1]);\n-        }\n-        if (hasClass(e, 'impl')) {\n+        if ((checkIfThereAreMethods(next.childNodes) || hasClass(e, 'method')) &&\n+            (hasClass(next, 'docblock') ||\n+             hasClass(e, 'impl') ||\n+             (hasClass(next, 'stability') &&\n+              hasClass(next.nextElementSibling, 'docblock')))) {\n             insertAfter(toggle.cloneNode(true), e.childNodes[e.childNodes.length - 1]);\n         }\n     }"}, {"sha": "9b899dd4517ea05e50a1b129d60bdcb3e822272b", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "patch": "@@ -528,6 +528,9 @@ a {\n .anchor.field {\n \tleft: -5px;\n }\n+.small-section-header > .anchor {\n+\tleft: -28px;\n+}\n .anchor:before {\n \tcontent: '\\2002\\00a7\\2002';\n }"}, {"sha": "4da277a204b71838d7edbf8819f696047bc0ec8b", "filename": "src/test/rustdoc/fn-sidebar.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Ftest%2Frustdoc%2Ffn-sidebar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/948e3a30e6ec8417bcfdb923cd414fdf8fc87795/src%2Ftest%2Frustdoc%2Ffn-sidebar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ffn-sidebar.rs?ref=948e3a30e6ec8417bcfdb923cd414fdf8fc87795", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/fn.bar.html\n+// @has - '//*[@class=\"sidebar-elems\"]' ''\n+pub fn bar() {}\n+\n+// @has foo/constant.BAR.html\n+// @has - '//*[@class=\"sidebar-elems\"]' ''\n+pub const BAR: u32 = 0;"}]}