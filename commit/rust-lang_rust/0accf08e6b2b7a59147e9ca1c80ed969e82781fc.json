{"sha": "0accf08e6b2b7a59147e9ca1c80ed969e82781fc", "node_id": "C_kwDOAAsO6NoAKDBhY2NmMDhlNmIyYjdhNTkxNDdlOWNhMWM4MGVkOTY5ZTgyNzgxZmM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-01-19T15:06:25Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-01-19T15:06:25Z"}, "message": "remove unnecessary check for opaque types", "tree": {"sha": "94a0a4753d6d4b6c13e33fb686da08b191855295", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94a0a4753d6d4b6c13e33fb686da08b191855295"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0accf08e6b2b7a59147e9ca1c80ed969e82781fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0accf08e6b2b7a59147e9ca1c80ed969e82781fc", "html_url": "https://github.com/rust-lang/rust/commit/0accf08e6b2b7a59147e9ca1c80ed969e82781fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0accf08e6b2b7a59147e9ca1c80ed969e82781fc/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65d2f2a5f9c323c88d1068e8e90d0b47a20d491c", "url": "https://api.github.com/repos/rust-lang/rust/commits/65d2f2a5f9c323c88d1068e8e90d0b47a20d491c", "html_url": "https://github.com/rust-lang/rust/commit/65d2f2a5f9c323c88d1068e8e90d0b47a20d491c"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "3f83d40755ad8ea49116e5f2fa5cb538206da37d", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0accf08e6b2b7a59147e9ca1c80ed969e82781fc/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0accf08e6b2b7a59147e9ca1c80ed969e82781fc/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=0accf08e6b2b7a59147e9ca1c80ed969e82781fc", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::mir::{\n     ProjectionElem, RetagKind, RuntimePhase, Rvalue, SourceScope, Statement, StatementKind,\n     Terminator, TerminatorKind, UnOp, START_BLOCK,\n };\n-use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt, TypeVisitable};\n+use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt};\n use rustc_mir_dataflow::impls::MaybeStorageLive;\n use rustc_mir_dataflow::storage::always_storage_live_locals;\n use rustc_mir_dataflow::{Analysis, ResultsCursor};\n@@ -230,11 +230,6 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             // Equal types, all is good.\n             return true;\n         }\n-        // Normalization reveals opaque types, but we may be validating MIR while computing\n-        // said opaque types, causing cycles.\n-        if (src, dest).has_opaque_types() {\n-            return true;\n-        }\n \n         crate::util::is_subtype(self.tcx, self.param_env, src, dest)\n     }"}]}