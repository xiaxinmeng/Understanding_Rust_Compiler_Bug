{"sha": "b2aef9d58b3e568834dba85d1b62fca0b5d41cd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYWVmOWQ1OGIzZTU2ODgzNGRiYTg1ZDFiNjJmY2EwYjVkNDFjZDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-13T03:52:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-13T03:52:10Z"}, "message": "Auto merge of #27789 - chriskrycho:remove_pandoc_references, r=steveklabnik\n\nPer @steveklabnik's comment [here](https://github.com/rust-lang/cargo/issues/739#issuecomment-130085860), the Pandoc components of the Makefile are no longer used, and as such the corresponding components of the documentation are out of date.\r\n\r\n  - I've removed the Pandoc (and therefore also LaTeX) elements of the makefile and confirmed that the build proceeds correctly.\r\n  - I updated the documentation to reference `rustdoc` and  of Pandoc.\r\n\r\nr? @steveklabnik", "tree": {"sha": "a6071d8a093532450dcf4131820c01b46060be19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6071d8a093532450dcf4131820c01b46060be19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1", "html_url": "https://github.com/rust-lang/rust/commit/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aed55dcd5719505d245158dcb1b245067b025306", "url": "https://api.github.com/repos/rust-lang/rust/commits/aed55dcd5719505d245158dcb1b245067b025306", "html_url": "https://github.com/rust-lang/rust/commit/aed55dcd5719505d245158dcb1b245067b025306"}, {"sha": "75f7a68ffa2b8ff0a9292d3d751fc4f28c074f72", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f7a68ffa2b8ff0a9292d3d751fc4f28c074f72", "html_url": "https://github.com/rust-lang/rust/commit/75f7a68ffa2b8ff0a9292d3d751fc4f28c074f72"}], "stats": {"total": 108, "additions": 6, "deletions": 102}, "files": [{"sha": "b06ff4a60275f2fb128c0a0603acf961bc474ff3", "filename": "mk/docs.mk", "status": "modified", "additions": 2, "deletions": 89, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=b2aef9d58b3e568834dba85d1b62fca0b5d41cd1", "patch": "@@ -13,9 +13,6 @@\n #\n # The DOCS variable is their names (with no file extension).\n #\n-# PDF_DOCS lists the targets for which PDF documentation should be\n-# build.\n-#\n # RUSTDOC_FLAGS_xyz variables are extra arguments to pass to the\n # rustdoc invocation for xyz.\n #\n@@ -35,8 +32,6 @@ DOCS += guide-crates guide-error-handling guide-ffi guide-macros guide \\\n     guide-testing\n \n \n-PDF_DOCS := reference\n-\n RUSTDOC_DEPS_reference := doc/full-toc.inc\n RUSTDOC_FLAGS_reference := --html-in-header=doc/full-toc.inc\n \n@@ -52,13 +47,6 @@ RUSTDOC_HTML_OPTS_NO_CSS = --html-before-content=doc/version_info.html \\\n \n RUSTDOC_HTML_OPTS = $(RUSTDOC_HTML_OPTS_NO_CSS) --markdown-css rust.css\n \n-PANDOC_BASE_OPTS := --standalone --toc --number-sections\n-PANDOC_TEX_OPTS = $(PANDOC_BASE_OPTS) --from=markdown --to=latex \\\n-\t--include-before-body=doc/version.tex \\\n-\t--include-before-body=doc/footer.tex \\\n-\t--include-in-header=doc/uptack.tex\n-PANDOC_EPUB_OPTS = $(PANDOC_BASE_OPTS) --to=epub\n-\n # The rustdoc executable...\n RUSTDOC_EXE = $(HBIN2_H_$(CFG_BUILD))/rustdoc$(X_$(CFG_BUILD))\n # ...with rpath included in case --disable-rpath was provided to\n@@ -89,30 +77,10 @@ else\n HTML_DEPS :=\n endif\n \n-# Check for xelatex\n-\n-ifneq ($(CFG_XELATEX),)\n-    CFG_LATEX := $(CFG_XELATEX)\n-    XELATEX = 1\n-  else\n-    $(info cfg: no xelatex found, disabling LaTeX docs)\n-    NO_PDF_DOCS = 1\n-endif\n-\n-ifeq ($(CFG_PANDOC),)\n-$(info cfg: no pandoc found, omitting PDF and EPUB docs)\n-ONLY_HTML_DOCS = 1\n-endif\n-\n-\n ######################################################################\n # Rust version\n ######################################################################\n \n-doc/version.tex: $(MKFILE_DEPS) $(wildcard $(D)/*.*) | doc/\n-\t@$(call E, version-stamp: $@)\n-\t$(Q)echo \"$(CFG_VERSION)\" >$@\n-\n HTML_DEPS += doc/version_info.html\n doc/version_info.html: $(D)/version_info.html.template $(MKFILE_DEPS) \\\n                        $(wildcard $(D)/*.*) | doc/\n@@ -121,10 +89,10 @@ doc/version_info.html: $(D)/version_info.html.template $(MKFILE_DEPS) \\\n                 s/SHORT_HASH/$(CFG_SHORT_VER_HASH)/; \\\n                 s/STAMP/$(CFG_VER_HASH)/;\" $< >$@\n \n-GENERATED += doc/version.tex doc/version_info.html\n+GENERATED += doc/version_info.html\n \n ######################################################################\n-# Docs, from rustdoc and sometimes pandoc\n+# Docs from rustdoc\n ######################################################################\n \n doc/:\n@@ -150,20 +118,6 @@ doc/footer.inc: $(D)/footer.inc | doc/\n \t$(Q)cp -PRp $< $@ 2> /dev/null\n \n # The (english) documentation for each doc item.\n-\n-define DEF_SHOULD_BUILD_PDF_DOC\n-SHOULD_BUILD_PDF_DOC_$(1) = 1\n-endef\n-$(foreach docname,$(PDF_DOCS),$(eval $(call DEF_SHOULD_BUILD_PDF_DOC,$(docname))))\n-\n-doc/footer.tex: $(D)/footer.inc | doc/\n-\t@$(call E, pandoc: $@)\n-\t$(CFG_PANDOC) --from=html --to=latex $< --output=$@\n-\n-doc/uptack.tex: $(D)/uptack.tex | doc/\n-\t$(Q)cp $< $@\n-\n-# HTML (rustdoc)\n DOC_TARGETS += doc/not_found.html\n doc/not_found.html: $(D)/not_found.md $(HTML_DEPS) | doc/\n \t@$(call E, rustdoc: $@)\n@@ -179,47 +133,6 @@ doc/$(1).html: $$(D)/$(1).md $$(HTML_DEPS) $$(RUSTDOC_DEPS_$(1)) | doc/\n \t@$$(call E, rustdoc: $$@)\n \t$$(Q)$$(RUSTDOC) $$(RUSTDOC_HTML_OPTS) $$(RUSTDOC_FLAGS_$(1)) $$<\n \n-ifneq ($(ONLY_HTML_DOCS),1)\n-\n-# EPUB (pandoc directly)\n-DOC_TARGETS += doc/$(1).epub\n-doc/$(1).epub: $$(D)/$(1).md | doc/\n-\t@$$(call E, pandoc: $$@)\n-\t$$(CFG_PANDOC) $$(PANDOC_EPUB_OPTS) $$< --output=$$@\n-\n-# PDF (md =(pandoc)=> tex =(pdflatex)=> pdf)\n-DOC_TARGETS += doc/$(1).tex\n-doc/$(1).tex: $$(D)/$(1).md doc/uptack.tex doc/footer.tex doc/version.tex | doc/\n-\t@$$(call E, pandoc: $$@)\n-\t$$(CFG_PANDOC) $$(PANDOC_TEX_OPTS) $$< --output=$$@\n-\n-ifneq ($(NO_PDF_DOCS),1)\n-ifeq ($$(SHOULD_BUILD_PDF_DOC_$(1)),1)\n-DOC_TARGETS += doc/$(1).pdf\n-ifneq ($(XELATEX),1)\n-doc/$(1).pdf: doc/$(1).tex\n-\t@$$(call E, latex compiler: $$@)\n-\t$$(Q)$$(CFG_LATEX) \\\n-\t-interaction=batchmode \\\n-\t-output-directory=doc \\\n-\t$$<\n-else\n-# The version of xelatex on the snap bots seemingly ingores -output-directory\n-# So we'll output to . and move to the doc directory manually.\n-# This will leave some intermediate files in the build directory.\n-doc/$(1).pdf: doc/$(1).tex\n-\t@$$(call E, latex compiler: $$@)\n-\t$$(Q)$$(CFG_LATEX) \\\n-\t-interaction=batchmode \\\n-\t-output-directory=. \\\n-\t$$<\n-\t$$(Q)mv ./$(1).pdf $$@\n-endif # XELATEX\n-endif # SHOULD_BUILD_PDF_DOCS_$(1)\n-endif # NO_PDF_DOCS\n-\n-endif # ONLY_HTML_DOCS\n-\n endef\n \n $(foreach docname,$(DOCS),$(eval $(call DEF_DOC,$(docname))))"}, {"sha": "c09f28ae4f62d5cc0dd594505f39d0e50bec19ca", "filename": "src/doc/README.md", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1/src%2Fdoc%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/b2aef9d58b3e568834dba85d1b62fca0b5d41cd1/src%2Fdoc%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2FREADME.md?ref=b2aef9d58b3e568834dba85d1b62fca0b5d41cd1", "patch": "@@ -1,11 +1,5 @@\n # Rust documentations\n \n-## Dependencies\n-\n-[Pandoc](http://johnmacfarlane.net/pandoc/installing.html), a universal\n-document converter, is required to generate docs as HTML from Rust's\n-source code.\n-\n ## Building\n \n To generate all the docs, just run `make docs` from the root of the repository.\n@@ -26,15 +20,12 @@ To generate an HTML version of a doc from Markdown manually, you can do\n something like:\n \n ~~~~\n-pandoc --from=markdown --to=html5 --number-sections -o reference.html reference.md\n+rustdoc reference.md\n ~~~~\n \n (`reference.md` being the Rust Reference Manual.)\n \n-The syntax for pandoc flavored markdown can be found at:\n-\n-- http://johnmacfarlane.net/pandoc/README.html#pandocs-markdown\n-\n-A nice quick reference (for non-pandoc markdown) is at:\n+An overview of how to use the `rustdoc` command is available [in the docs][1].\n+Further details are available from the command line by with `rustdoc --help`.\n \n-- http://kramdown.gettalong.org/quickref.html\n+[1]: https://github.com/rust-lang/rust/blob/master/src/doc/trpl/documentation.md"}]}