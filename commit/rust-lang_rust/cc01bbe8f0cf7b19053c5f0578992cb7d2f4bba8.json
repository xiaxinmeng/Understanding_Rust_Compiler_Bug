{"sha": "cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMDFiYmU4ZjBjZjdiMTkwNTNjNWYwNTc4OTkyY2I3ZDJmNGJiYTg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-19T01:49:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-19T01:49:11Z"}, "message": "Rollup merge of #82259 - osa1:issue82156, r=petrochenkov\n\nFix popping singleton paths in when generating E0433\n\nFixes #82156\n\n---\n\nThis was introduced with #72923, so pinging `@Patryk27` for reviews.", "tree": {"sha": "df4b476cce5cf436042bd57e9e76e6d68bc1e78c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df4b476cce5cf436042bd57e9e76e6d68bc1e78c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgLxkXCRBK7hj4Ov3rIwAAdHIIAH4ECfn8Y0wv+ca2XLnjxK2M\nMv4+yZm/jQcnSyG9RxAX+hkLOrQx91tGk4Cnwc9UmQ5VUI8MtD90N8eT50yKm0hR\nkEeLrUWJUgplW+YrYViawR6Jxbxh0VwArUyAJhzk7VOtm+qGAkhJSvlGr7tvk6CS\nPHL0pE8AMshz7DwTYNpSemsDKp0bUNn0xT5M3jzAtHLcTJB1E5rkacFJdSPP3aus\nn+fm9OuJTS79fj9dd6IarARgHjWo8CtZEswzZq9DpZj+9WnsBKZrfL0mdgVNQmna\nMKa05p7nQ1+wvf/BZmBXvRBDBkCQlSPoXOV0rc6RyC7Nt4xhgmMzBiEerihXKFo=\n=bCnU\n-----END PGP SIGNATURE-----\n", "payload": "tree df4b476cce5cf436042bd57e9e76e6d68bc1e78c\nparent c244546626fb95b25df4713fa82c5f3877f7dbfc\nparent 9889e44470cbc6ae3c8e2fcfb6016ed15ed8cf51\nauthor Dylan DPC <dylan.dpc@gmail.com> 1613699351 +0100\ncommitter GitHub <noreply@github.com> 1613699351 +0100\n\nRollup merge of #82259 - osa1:issue82156, r=petrochenkov\n\nFix popping singleton paths in when generating E0433\n\nFixes #82156\n\n---\n\nThis was introduced with #72923, so pinging `@Patryk27` for reviews.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8", "html_url": "https://github.com/rust-lang/rust/commit/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c244546626fb95b25df4713fa82c5f3877f7dbfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c244546626fb95b25df4713fa82c5f3877f7dbfc", "html_url": "https://github.com/rust-lang/rust/commit/c244546626fb95b25df4713fa82c5f3877f7dbfc"}, {"sha": "9889e44470cbc6ae3c8e2fcfb6016ed15ed8cf51", "url": "https://api.github.com/repos/rust-lang/rust/commits/9889e44470cbc6ae3c8e2fcfb6016ed15ed8cf51", "html_url": "https://github.com/rust-lang/rust/commit/9889e44470cbc6ae3c8e2fcfb6016ed15ed8cf51"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "701d48a982d36db8c9c1d040d2bfbe31b9e70801", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8", "patch": "@@ -1801,7 +1801,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         crate_lint: CrateLint,\n     ) -> PartialRes {\n         tracing::debug!(\n-            \"smart_resolve_path_fragment(id={:?},qself={:?},path={:?}\",\n+            \"smart_resolve_path_fragment(id={:?}, qself={:?}, path={:?})\",\n             id,\n             qself,\n             path\n@@ -1841,11 +1841,10 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n \n             // Before we start looking for candidates, we have to get our hands\n             // on the type user is trying to perform invocation on; basically:\n-            // we're transforming `HashMap::new` into just `HashMap`\n-            let path = if let Some((_, path)) = path.split_last() {\n-                path\n-            } else {\n-                return Some(parent_err);\n+            // we're transforming `HashMap::new` into just `HashMap`.\n+            let path = match path.split_last() {\n+                Some((_, path)) if !path.is_empty() => path,\n+                _ => return Some(parent_err),\n             };\n \n             let (mut err, candidates) ="}, {"sha": "6215259e4865740ceae2115b1de1f99f1d2735fd", "filename": "src/test/ui/resolve/issue-82156.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8/src%2Ftest%2Fui%2Fresolve%2Fissue-82156.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8/src%2Ftest%2Fui%2Fresolve%2Fissue-82156.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-82156.rs?ref=cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    super(); //~ ERROR failed to resolve: there are too many leading `super` keywords\n+}"}, {"sha": "d53599dcce61bd82418549e0953ac419f92b8043", "filename": "src/test/ui/resolve/issue-82156.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8/src%2Ftest%2Fui%2Fresolve%2Fissue-82156.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8/src%2Ftest%2Fui%2Fresolve%2Fissue-82156.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-82156.stderr?ref=cc01bbe8f0cf7b19053c5f0578992cb7d2f4bba8", "patch": "@@ -0,0 +1,9 @@\n+error[E0433]: failed to resolve: there are too many leading `super` keywords\n+  --> $DIR/issue-82156.rs:2:5\n+   |\n+LL |     super();\n+   |     ^^^^^ there are too many leading `super` keywords\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}]}