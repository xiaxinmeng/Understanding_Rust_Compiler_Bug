{"sha": "35a199c0361946fbab75212c3a7d23ab03520598", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YTE5OWMwMzYxOTQ2ZmJhYjc1MjEyYzNhN2QyM2FiMDM1MjA1OTg=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-01T10:40:49Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-04T03:41:49Z"}, "message": "Formatting cleanups.", "tree": {"sha": "db0f3abf4bb4e7432d8387d90a1e8bca828a02fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db0f3abf4bb4e7432d8387d90a1e8bca828a02fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35a199c0361946fbab75212c3a7d23ab03520598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35a199c0361946fbab75212c3a7d23ab03520598", "html_url": "https://github.com/rust-lang/rust/commit/35a199c0361946fbab75212c3a7d23ab03520598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35a199c0361946fbab75212c3a7d23ab03520598/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9090a5c03b3ebcaee98de53ddf13f3204ff9c5f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9090a5c03b3ebcaee98de53ddf13f3204ff9c5f9", "html_url": "https://github.com/rust-lang/rust/commit/9090a5c03b3ebcaee98de53ddf13f3204ff9c5f9"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "26585b1eb7dca5a1d2f151d6dd57769ecc434f9a", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35a199c0361946fbab75212c3a7d23ab03520598/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35a199c0361946fbab75212c3a7d23ab03520598/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=35a199c0361946fbab75212c3a7d23ab03520598", "patch": "@@ -38,7 +38,7 @@ fn new_filemap_w_substr(filename: filename, substr: file_substr,\n fn new_filemap(filename: filename, src: @str,\n                start_pos_ch: uint, start_pos_byte: uint)\n     -> filemap {\n-    ret new_filemap_w_substr(filename, none, src, \n+    ret new_filemap_w_substr(filename, none, src,\n                              start_pos_ch, start_pos_byte);\n }\n "}, {"sha": "2f600c9f9ecfe6d91a218070452bced238d8c7bd", "filename": "src/comp/syntax/ext/qquote.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/35a199c0361946fbab75212c3a7d23ab03520598/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35a199c0361946fbab75212c3a7d23ab03520598/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs?ref=35a199c0361946fbab75212c3a7d23ab03520598", "patch": "@@ -43,23 +43,25 @@ fn is_space(c: char) -> bool {\n     syntax::parse::lexer::is_whitespace(c)\n }\n \n-fn expand_ast(ecx: ext_ctxt, _sp: span, _arg: ast::mac_arg, body: ast::mac_body)\n-    -> @ast::expr \n+fn expand_ast(ecx: ext_ctxt, _sp: span, _arg:\n+              ast::mac_arg, body: ast::mac_body)\n+    -> @ast::expr\n {\n     let body = get_mac_body(ecx,_sp,body);\n-    let str = @codemap::span_to_snippet(body.span, ecx.session().parse_sess.cm);\n-    let (fname, ss) = codemap::get_substr_info(ecx.session().parse_sess.cm, \n+    let cm = ecx.session().parse_sess.cm;\n+    let str = @codemap::span_to_snippet(body.span, cm);\n+    let (fname, ss) = codemap::get_substr_info(cm,\n                                                body.span.lo, body.span.hi);\n-    let {node: e, _} = parse_from_source_str(parser::parse_expr, \n-                                             fname, some(ss), str, \n-                                             ecx.session().opts.cfg, \n+    let {node: e, _} = parse_from_source_str(parser::parse_expr,\n+                                             fname, some(ss), str,\n+                                             ecx.session().opts.cfg,\n                                              ecx.session().parse_sess);\n     ret expand_qquote(ecx, e.span, some(*str), e);\n }\n \n-fn expand_qquote(ecx: ext_ctxt, sp: span, maybe_str: option::t<str>, \n-                 e: @ast::expr) \n-    -> @ast::expr \n+fn expand_qquote(ecx: ext_ctxt, sp: span, maybe_str: option::t<str>,\n+                 e: @ast::expr)\n+    -> @ast::expr\n {\n     let str = alt(maybe_str) {\n       some(s) {s}"}]}