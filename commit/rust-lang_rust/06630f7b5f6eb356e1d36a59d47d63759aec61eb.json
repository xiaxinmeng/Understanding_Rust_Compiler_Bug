{"sha": "06630f7b5f6eb356e1d36a59d47d63759aec61eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NjMwZjdiNWY2ZWIzNTZlMWQzNmE1OWQ0N2Q2Mzc1OWFlYzYxZWI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-04T11:01:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-04T11:01:12Z"}, "message": "Rollup merge of #82744 - camelid:cratenum-byval, r=GuillaumeGomez\n\nPass `CrateNum` by value instead of by reference\n\nIt's more idiomatic to pass a small Copy type by value and `CrateNum` is\nhalf the size of `&CrateNum` on 64-bit systems. The memory use change is\nalmost certainly insignificant, but why not!", "tree": {"sha": "ec2035416d62d8c24521fc4fc50bf31e6d70dea8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec2035416d62d8c24521fc4fc50bf31e6d70dea8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06630f7b5f6eb356e1d36a59d47d63759aec61eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQL34CRBK7hj4Ov3rIwAAdHIIACLecT8XoN0UUfaFLnk9R/jv\no7Hqio/r9SfV36Rpn2EVri6aXSGhvBBloG4UOnDy+/JyMUiXzejbalZFBWCE/ZlS\ndrN3LjKHt2x3kakkgJYiJ0lQkGnnEqL2ckw18xGzXAH75ZoJIljUthja/RAr38gk\nAq9cH/CpECpdkBdGqGN2r6v80v8FD+2A3PWpT5u2YRAWtUIglx1ta/83/jRr3zCI\nLPDPJCnH/dVDq/P0S4LT4SZBmIBVTxdQWE4PZLpDp6pZ8+epQQOaqhUSOUfnR1uy\nYucYDEnb+3GiTA7Cc2HdziejX4MRJCpQW8XQXlKHzC0CuZyQ9Ld608iB2A0lp9w=\n=QimP\n-----END PGP SIGNATURE-----\n", "payload": "tree ec2035416d62d8c24521fc4fc50bf31e6d70dea8\nparent 17121f2959ea3735c041c74b5959f9e7c4f84f03\nparent c79af862401465a7241e6920ba31f34adafa44fd\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1614855672 +0900\ncommitter GitHub <noreply@github.com> 1614855672 +0900\n\nRollup merge of #82744 - camelid:cratenum-byval, r=GuillaumeGomez\n\nPass `CrateNum` by value instead of by reference\n\nIt's more idiomatic to pass a small Copy type by value and `CrateNum` is\nhalf the size of `&CrateNum` on 64-bit systems. The memory use change is\nalmost certainly insignificant, but why not!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06630f7b5f6eb356e1d36a59d47d63759aec61eb", "html_url": "https://github.com/rust-lang/rust/commit/06630f7b5f6eb356e1d36a59d47d63759aec61eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06630f7b5f6eb356e1d36a59d47d63759aec61eb/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17121f2959ea3735c041c74b5959f9e7c4f84f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/17121f2959ea3735c041c74b5959f9e7c4f84f03", "html_url": "https://github.com/rust-lang/rust/commit/17121f2959ea3735c041c74b5959f9e7c4f84f03"}, {"sha": "c79af862401465a7241e6920ba31f34adafa44fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c79af862401465a7241e6920ba31f34adafa44fd", "html_url": "https://github.com/rust-lang/rust/commit/c79af862401465a7241e6920ba31f34adafa44fd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e3f47a85d5154ab1cb7baa356f2dd14101d268a4", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06630f7b5f6eb356e1d36a59d47d63759aec61eb/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06630f7b5f6eb356e1d36a59d47d63759aec61eb/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=06630f7b5f6eb356e1d36a59d47d63759aec61eb", "patch": "@@ -191,7 +191,7 @@ impl Item {\n     }\n \n     crate fn links(&self, cache: &Cache) -> Vec<RenderedLink> {\n-        self.attrs.links(&self.def_id.krate, cache)\n+        self.attrs.links(self.def_id.krate, cache)\n     }\n \n     crate fn is_crate(&self) -> bool {\n@@ -844,7 +844,7 @@ impl Attributes {\n     /// Gets links as a vector\n     ///\n     /// Cache must be populated before call\n-    crate fn links(&self, krate: &CrateNum, cache: &Cache) -> Vec<RenderedLink> {\n+    crate fn links(&self, krate: CrateNum, cache: &Cache) -> Vec<RenderedLink> {\n         use crate::html::format::href;\n         use crate::html::render::CURRENT_DEPTH;\n \n@@ -869,7 +869,7 @@ impl Attributes {\n                     }\n                     None => {\n                         if let Some(ref fragment) = *fragment {\n-                            let url = match cache.extern_locations.get(krate) {\n+                            let url = match cache.extern_locations.get(&krate) {\n                                 Some(&(_, _, ExternalLocation::Local)) => {\n                                     let depth = CURRENT_DEPTH.with(|l| l.get());\n                                     \"../\".repeat(depth)"}]}