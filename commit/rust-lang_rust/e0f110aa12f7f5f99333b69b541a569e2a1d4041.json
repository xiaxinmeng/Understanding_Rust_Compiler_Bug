{"sha": "e0f110aa12f7f5f99333b69b541a569e2a1d4041", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZjExMGFhMTJmN2Y1Zjk5MzMzYjY5YjU0MWE1NjllMmExZDQwNDE=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-04-16T22:29:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-20T22:23:22Z"}, "message": "clean and trying the global loop test as two separate loop lifetimes..\n\n.. seeing an occasional valgrind/barf spew on some invalid read/writes..\nneed to investigate further.. i think its related to my poor citizen\nconduct, re: pointers stashed in rust_kernel..", "tree": {"sha": "32879801cb32bbb8984d1dd29191d640fd322dca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32879801cb32bbb8984d1dd29191d640fd322dca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0f110aa12f7f5f99333b69b541a569e2a1d4041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0f110aa12f7f5f99333b69b541a569e2a1d4041", "html_url": "https://github.com/rust-lang/rust/commit/e0f110aa12f7f5f99333b69b541a569e2a1d4041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0f110aa12f7f5f99333b69b541a569e2a1d4041/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ba223c26824ed26d8f848b307d599ab24a733b", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ba223c26824ed26d8f848b307d599ab24a733b", "html_url": "https://github.com/rust-lang/rust/commit/31ba223c26824ed26d8f848b307d599ab24a733b"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "f9b761073ca53fc5f4f7a23f6aa33f7464d5f927", "filename": "src/libstd/uv_hl.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e0f110aa12f7f5f99333b69b541a569e2a1d4041/src%2Flibstd%2Fuv_hl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0f110aa12f7f5f99333b69b541a569e2a1d4041/src%2Flibstd%2Fuv_hl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_hl.rs?ref=e0f110aa12f7f5f99333b69b541a569e2a1d4041", "patch": "@@ -112,7 +112,7 @@ unsafe fn run_high_level_loop(loop_ptr: *libc::c_void,\n     let async_handle = ptr::addr_of(async);\n     // associate the async handle with the loop\n     ll::async_init(loop_ptr, async_handle, high_level_wake_up_cb);\n-    \n+\n     // initialize our loop data and store it in the loop\n     let data: global_loop_data = {\n         async_handle: async_handle,\n@@ -256,7 +256,7 @@ crust fn tear_down_close_cb(handle: *ll::uv_async_t) unsafe {\n                     handle));\n     // TODO: iterate through open handles on the loop and uv_close()\n     // them all\n-    let data = ll::get_data_for_uv_handle(handle) as *global_loop_data;\n+    //let data = ll::get_data_for_uv_handle(handle) as *global_loop_data;\n }\n \n fn high_level_tear_down(data: *global_loop_data) unsafe {\n@@ -458,12 +458,11 @@ mod test {\n         };\n         log(debug, \"exiting simple timer cb\");\n     }\n-    #[test]\n-    fn test_uv_hl_simple_timer() unsafe {\n+\n+    fn impl_uv_hl_simple_timer(hl_loop: high_level_loop) unsafe {\n         let exit_po = comm::port::<bool>();\n         let exit_ch = comm::chan(exit_po);\n         let exit_ch_ptr = ptr::addr_of(exit_ch);\n-        let hl_loop = get_global_loop();\n         let timer_handle = ll::timer_t();\n         let timer_ptr = ptr::addr_of(timer_handle);\n         interact(hl_loop) {|loop_ptr|\n@@ -489,4 +488,11 @@ mod test {\n         comm::recv(exit_po);\n         log(debug, \"test_uv_hl_simple_timer: msg recv on exit_po, done..\");\n     }\n+    #[test]\n+    #[ignore(cfg(target_os = \"freebsd\"))]\n+    fn test_uv_hl_high_level_global_timer() unsafe {\n+        let hl_loop = get_global_loop();\n+        impl_uv_hl_simple_timer(hl_loop);\n+        impl_uv_hl_simple_timer(hl_loop);\n+    }\n }\n\\ No newline at end of file"}, {"sha": "adc62053345d2fa27284829239c4c48375ace79f", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0f110aa12f7f5f99333b69b541a569e2a1d4041/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e0f110aa12f7f5f99333b69b541a569e2a1d4041/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=e0f110aa12f7f5f99333b69b541a569e2a1d4041", "patch": "@@ -27,8 +27,8 @@ rust_kernel::rust_kernel(rust_env *env) :\n     // set up storage of pointers needed to\n     // access the global loop.\n     global_loop_chan = 0;\n-    global_async_handle = (void**)::malloc( // FIXME -- can use this->malloc()\n-        sizeof(void*));                   // .. what do?\n+    global_async_handle = (void**)::malloc( // FIXME--can't use this->malloc()\n+        sizeof(void*));                     // .. what do?\n     *global_async_handle = (void*)0;\n \n     // Create the single threaded scheduler that will run on the platform's"}]}