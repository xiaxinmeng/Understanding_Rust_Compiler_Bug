{"sha": "a63446f2549afbeafe632c425112b7c38b5c9991", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MzQ0NmYyNTQ5YWZiZWFmZTYzMmM0MjUxMTJiN2MzOGI1Yzk5OTE=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-07T12:07:44Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-07T12:08:35Z"}, "message": "vscode: prerefactor util.ts and ctx.ts", "tree": {"sha": "de59f376c1101a122b8abdcf0e1f7a9a53c45e23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de59f376c1101a122b8abdcf0e1f7a9a53c45e23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a63446f2549afbeafe632c425112b7c38b5c9991", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a63446f2549afbeafe632c425112b7c38b5c9991", "html_url": "https://github.com/rust-lang/rust/commit/a63446f2549afbeafe632c425112b7c38b5c9991", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a63446f2549afbeafe632c425112b7c38b5c9991/comments", "author": null, "committer": null, "parents": [{"sha": "3d93e2108e182350e8bbf51d02a76c85ef831f8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d93e2108e182350e8bbf51d02a76c85ef831f8e", "html_url": "https://github.com/rust-lang/rust/commit/3d93e2108e182350e8bbf51d02a76c85ef831f8e"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "25ef38aed047f4c074e4e238fed9cb939745ea04", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a63446f2549afbeafe632c425112b7c38b5c9991/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a63446f2549afbeafe632c425112b7c38b5c9991/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=a63446f2549afbeafe632c425112b7c38b5c9991", "patch": "@@ -3,7 +3,7 @@ import * as lc from 'vscode-languageclient';\n \n import { Config } from './config';\n import { createClient } from './client';\n-import { isRustDocument } from './util';\n+import { isRustEditor, RustEditor } from './util';\n \n export class Ctx {\n     private constructor(\n@@ -22,17 +22,15 @@ export class Ctx {\n         return res;\n     }\n \n-    get activeRustEditor(): vscode.TextEditor | undefined {\n+    get activeRustEditor(): RustEditor | undefined {\n         const editor = vscode.window.activeTextEditor;\n-        return editor && isRustDocument(editor.document)\n+        return editor && isRustEditor(editor)\n             ? editor\n             : undefined;\n     }\n \n-    get visibleRustEditors(): vscode.TextEditor[] {\n-        return vscode.window.visibleTextEditors.filter(\n-            editor => isRustDocument(editor.document),\n-        );\n+    get visibleRustEditors(): RustEditor[] {\n+        return vscode.window.visibleTextEditors.filter(isRustEditor);\n     }\n \n     registerCommand(name: string, factory: (ctx: Ctx) => Cmd) {"}, {"sha": "95a5f1227ca25ae1782352d014f0d8c5f7c5f729", "filename": "editors/code/src/util.ts", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a63446f2549afbeafe632c425112b7c38b5c9991/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a63446f2549afbeafe632c425112b7c38b5c9991/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=a63446f2549afbeafe632c425112b7c38b5c9991", "patch": "@@ -1,7 +1,6 @@\n import * as lc from \"vscode-languageclient\";\n import * as vscode from \"vscode\";\n import { strict as nativeAssert } from \"assert\";\n-import { TextDocument } from \"vscode\";\n \n export function assert(condition: boolean, explanation: string): asserts condition {\n     try {\n@@ -67,9 +66,16 @@ function sleep(ms: number) {\n     return new Promise(resolve => setTimeout(resolve, ms));\n }\n \n-export function isRustDocument(document: TextDocument) {\n+export type RustDocument = vscode.TextDocument & { languageId: \"rust\" };\n+export type RustEditor = vscode.TextEditor & { document: RustDocument; id: string };\n+\n+export function isRustDocument(document: vscode.TextDocument): document is RustDocument {\n     return document.languageId === 'rust'\n         // SCM diff views have the same URI as the on-disk document but not the same content\n         && document.uri.scheme !== 'git'\n         && document.uri.scheme !== 'svn';\n-}\n\\ No newline at end of file\n+}\n+\n+export function isRustEditor(editor: vscode.TextEditor): editor is RustEditor {\n+    return isRustDocument(editor.document);\n+}"}]}