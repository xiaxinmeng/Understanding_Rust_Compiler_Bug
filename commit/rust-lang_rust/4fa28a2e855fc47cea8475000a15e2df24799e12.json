{"sha": "4fa28a2e855fc47cea8475000a15e2df24799e12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYTI4YTJlODU1ZmM0N2NlYTg0NzUwMDBhMTVlMmRmMjQ3OTllMTI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-02T23:58:12Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-02T23:58:12Z"}, "message": "Allow _ param name in trait default method for #8468.", "tree": {"sha": "0a24396d9800153ed448d6440d734c53adf43545", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a24396d9800153ed448d6440d734c53adf43545"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fa28a2e855fc47cea8475000a15e2df24799e12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fa28a2e855fc47cea8475000a15e2df24799e12", "html_url": "https://github.com/rust-lang/rust/commit/4fa28a2e855fc47cea8475000a15e2df24799e12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fa28a2e855fc47cea8475000a15e2df24799e12/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ff102a685de250eeecc77eb8a6d82cd25c1d8a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff102a685de250eeecc77eb8a6d82cd25c1d8a5", "html_url": "https://github.com/rust-lang/rust/commit/7ff102a685de250eeecc77eb8a6d82cd25c1d8a5"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b939ac109315f335952098968e7c5387614634bd", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4fa28a2e855fc47cea8475000a15e2df24799e12/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa28a2e855fc47cea8475000a15e2df24799e12/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4fa28a2e855fc47cea8475000a15e2df24799e12", "patch": "@@ -347,6 +347,13 @@ impl Drop for Parser {\n     fn drop(&self) {}\n }\n \n+fn is_plain_ident_or_underscore(t: &token::Token) -> bool {\n+    match *t {\n+        token::IDENT(_, false) | token::UNDERSCORE => true,\n+        _ => false,\n+    }\n+}\n+\n impl Parser {\n     // convert a token to a string using self's reader\n     pub fn token_to_str(&self, token: &token::Token) -> ~str {\n@@ -1242,11 +1249,13 @@ impl Parser {\n             _ => 0\n         };\n \n+        debug!(\"parser is_named_argument offset:%u\", offset);\n+\n         if offset == 0 {\n-            is_plain_ident(&*self.token)\n+            is_plain_ident_or_underscore(&*self.token)\n                 && self.look_ahead(1, |t| *t == token::COLON)\n         } else {\n-            self.look_ahead(offset, |t| is_plain_ident(t))\n+            self.look_ahead(offset, |t| is_plain_ident_or_underscore(t))\n                 && self.look_ahead(offset + 1, |t| *t == token::COLON)\n         }\n     }\n@@ -1256,6 +1265,8 @@ impl Parser {\n     pub fn parse_arg_general(&self, require_name: bool) -> arg {\n         let is_mutbl = self.eat_keyword(keywords::Mut);\n         let pat = if require_name || self.is_named_argument() {\n+            debug!(\"parse_arg_general parse_pat (require_name:%?)\",\n+                   require_name);\n             self.parse_arg_mode();\n             let pat = self.parse_pat();\n \n@@ -1266,6 +1277,7 @@ impl Parser {\n             self.expect(&token::COLON);\n             pat\n         } else {\n+            debug!(\"parse_arg_general ident_to_pat\");\n             ast_util::ident_to_pat(self.get_id(),\n                                    *self.last_span,\n                                    special_idents::invalid)"}]}