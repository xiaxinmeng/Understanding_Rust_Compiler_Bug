{"sha": "6b8f62fcc8467d4cf694727ef8fde8aefda264bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOGY2MmZjYzg0NjdkNGNmNjk0NzI3ZWY4ZmRlOGFlZmRhMjY0YmM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T08:42:52Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T08:42:52Z"}, "message": "Avoid regression", "tree": {"sha": "460fee088af16cf6a04a674a11eea9cf36651638", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/460fee088af16cf6a04a674a11eea9cf36651638"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b8f62fcc8467d4cf694727ef8fde8aefda264bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b8f62fcc8467d4cf694727ef8fde8aefda264bc", "html_url": "https://github.com/rust-lang/rust/commit/6b8f62fcc8467d4cf694727ef8fde8aefda264bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b8f62fcc8467d4cf694727ef8fde8aefda264bc/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "760d6b85e2e8b837ee441e404b9eafd1c17be7c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/760d6b85e2e8b837ee441e404b9eafd1c17be7c2", "html_url": "https://github.com/rust-lang/rust/commit/760d6b85e2e8b837ee441e404b9eafd1c17be7c2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7cebf793c600b97dbc1128102280d3d1da3a55a5", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b8f62fcc8467d4cf694727ef8fde8aefda264bc/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b8f62fcc8467d4cf694727ef8fde8aefda264bc/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=6b8f62fcc8467d4cf694727ef8fde8aefda264bc", "patch": "@@ -2281,10 +2281,10 @@ fn rewrite_last_closure(\n         let body_shape = try_opt!(shape.offset_left(extra_offset));\n         // When overflowing the closure which consists of a single control flow expression,\n         // force to use block if its condition uses multi line.\n-        if rewrite_cond(context, body, body_shape)\n-            .map(|cond| cond.contains('\\n'))\n-            .unwrap_or(false)\n-        {\n+        let is_multi_lined_cond = rewrite_cond(context, body, body_shape)\n+            .map(|cond| cond.contains('\\n') || cond.len() > body_shape.width)\n+            .unwrap_or(false);\n+        if is_multi_lined_cond {\n             return rewrite_closure_with_block(context, body_shape, &prefix, body);\n         }\n "}]}