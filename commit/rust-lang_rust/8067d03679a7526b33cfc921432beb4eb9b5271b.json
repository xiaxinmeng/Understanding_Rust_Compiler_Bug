{"sha": "8067d03679a7526b33cfc921432beb4eb9b5271b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNjdkMDM2NzlhNzUyNmIzM2NmYzkyMTQzMmJlYjRlYjliNTI3MWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-18T06:11:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-18T06:11:24Z"}, "message": "auto merge of #15726 : aturon/rust/macro-stability, r=alexcrichton\n\nThis small patch causes the stability lint to bail out when traversing\r\nany AST produced via a macro expansion. Ultimately, we would like to\r\nlint the contents of the macro at the place where the macro is defined,\r\nbut regardless we should not be linting it at the use site.\r\n\r\nCloses #15703", "tree": {"sha": "ae0e330b33f57bf032366c3320c1068b27462af0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae0e330b33f57bf032366c3320c1068b27462af0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8067d03679a7526b33cfc921432beb4eb9b5271b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8067d03679a7526b33cfc921432beb4eb9b5271b", "html_url": "https://github.com/rust-lang/rust/commit/8067d03679a7526b33cfc921432beb4eb9b5271b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8067d03679a7526b33cfc921432beb4eb9b5271b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a308b167f3a7feea3f1cd4b3be0a5048872e041", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a308b167f3a7feea3f1cd4b3be0a5048872e041", "html_url": "https://github.com/rust-lang/rust/commit/8a308b167f3a7feea3f1cd4b3be0a5048872e041"}, {"sha": "81b69d153869062af6992dc2c99c5536c7ff99f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/81b69d153869062af6992dc2c99c5536c7ff99f0", "html_url": "https://github.com/rust-lang/rust/commit/81b69d153869062af6992dc2c99c5536c7ff99f0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "fbe4b211f975264a90578b888a30046153b2b888", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8067d03679a7526b33cfc921432beb4eb9b5271b/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8067d03679a7526b33cfc921432beb4eb9b5271b/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=8067d03679a7526b33cfc921432beb4eb9b5271b", "patch": "@@ -1433,6 +1433,9 @@ impl LintPass for Stability {\n     }\n \n     fn check_expr(&mut self, cx: &Context, e: &ast::Expr) {\n+        // if the expression was produced by a macro expansion,\n+        if e.span.expn_info.is_some() { return }\n+\n         let id = match e.node {\n             ast::ExprPath(..) | ast::ExprStruct(..) => {\n                 match cx.tcx.def_map.borrow().find(&e.id) {"}, {"sha": "b0090c63969ab0e7fa0c76d629f06a0cb835f285", "filename": "src/test/auxiliary/lint_stability.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8067d03679a7526b33cfc921432beb4eb9b5271b/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8067d03679a7526b33cfc921432beb4eb9b5271b/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability.rs?ref=8067d03679a7526b33cfc921432beb4eb9b5271b", "patch": "@@ -10,6 +10,9 @@\n #![crate_id=\"lint_stability#0.1\"]\n #![crate_type = \"lib\"]\n \n+#![feature(macro_rules)]\n+#![macro_escape]\n+\n #[deprecated]\n pub fn deprecated() {}\n #[deprecated=\"text\"]\n@@ -173,3 +176,8 @@ pub struct StableTupleStruct(pub int);\n pub struct FrozenTupleStruct(pub int);\n #[locked]\n pub struct LockedTupleStruct(pub int);\n+\n+#[macro_export]\n+macro_rules! macro_test(\n+    () => (deprecated());\n+)"}, {"sha": "3a9380befbcb4460401308c7574c492fdc1574bd", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8067d03679a7526b33cfc921432beb4eb9b5271b/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8067d03679a7526b33cfc921432beb4eb9b5271b/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=8067d03679a7526b33cfc921432beb4eb9b5271b", "patch": "@@ -11,13 +11,14 @@\n // aux-build:lint_stability.rs\n // aux-build:inherited_stability.rs\n \n-#![feature(globs)]\n+#![feature(globs, phase)]\n #![deny(unstable)]\n #![deny(deprecated)]\n #![deny(experimental)]\n #![allow(dead_code)]\n \n mod cross_crate {\n+    #[phase(plugin, link)]\n     extern crate lint_stability;\n     use self::lint_stability::*;\n \n@@ -76,7 +77,6 @@ mod cross_crate {\n         foo.method_locked_text();\n         foo.trait_locked_text();\n \n-\n         let _ = DeprecatedStruct { i: 0 }; //~ ERROR use of deprecated item\n         let _ = ExperimentalStruct { i: 0 }; //~ ERROR use of experimental item\n         let _ = UnstableStruct { i: 0 }; //~ ERROR use of unstable item\n@@ -108,6 +108,13 @@ mod cross_crate {\n         let _ = StableTupleStruct (1);\n         let _ = FrozenTupleStruct (1);\n         let _ = LockedTupleStruct (1);\n+\n+        // At the moment, the following just checks that the stability\n+        // level of expanded code does not trigger the\n+        // lint. Eventually, we will want to lint the contents of the\n+        // macro in the module *defining* it. Also, stability levels\n+        // on macros themselves are not yet linted.\n+        macro_test!();\n     }\n \n     fn test_method_param<F: Trait>(foo: F) {"}]}