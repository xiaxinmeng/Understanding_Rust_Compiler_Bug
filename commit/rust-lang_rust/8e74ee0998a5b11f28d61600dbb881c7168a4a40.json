{"sha": "8e74ee0998a5b11f28d61600dbb881c7168a4a40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNzRlZTA5OThhNWIxMWYyOGQ2MTYwMGRiYjg4MWM3MTY4YTRhNDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-21T14:25:33Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-21T14:25:33Z"}, "message": "fix comment", "tree": {"sha": "bbf3e72f3fb82389fb9df5519dc17f2d9492df51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbf3e72f3fb82389fb9df5519dc17f2d9492df51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e74ee0998a5b11f28d61600dbb881c7168a4a40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e74ee0998a5b11f28d61600dbb881c7168a4a40", "html_url": "https://github.com/rust-lang/rust/commit/8e74ee0998a5b11f28d61600dbb881c7168a4a40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e74ee0998a5b11f28d61600dbb881c7168a4a40/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0309664491ba2cebc3dc7f509cfbad864f35d8d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0309664491ba2cebc3dc7f509cfbad864f35d8d1", "html_url": "https://github.com/rust-lang/rust/commit/0309664491ba2cebc3dc7f509cfbad864f35d8d1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "18ca284811080625e20397f26a8a8e3bf52fa0f6", "filename": "src/librustc_mir/interpret/snapshot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e74ee0998a5b11f28d61600dbb881c7168a4a40/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e74ee0998a5b11f28d61600dbb881c7168a4a40/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs?ref=8e74ee0998a5b11f28d61600dbb881c7168a4a40", "patch": "@@ -335,7 +335,7 @@ struct FrameSnapshot<'a, 'tcx: 'a> {\n     stmt: usize,\n }\n \n-// Not using the macro because that does not support types depending on 'tcx\n+// Not using the macro because that does not support types depending on two lifetimes\n impl<'a, 'mir, 'tcx: 'mir> HashStable<StableHashingContext<'a>> for Frame<'mir, 'tcx> {\n     fn hash_stable<W: StableHasherResult>(\n         &self,"}]}