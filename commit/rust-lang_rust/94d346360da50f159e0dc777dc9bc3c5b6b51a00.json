{"sha": "94d346360da50f159e0dc777dc9bc3c5b6b51a00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZDM0NjM2MGRhNTBmMTU5ZTBkYzc3N2RjOWJjM2M1YjZiNTFhMDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-09T20:03:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-09T20:03:54Z"}, "message": "Auto merge of #70960 - Centril:rollup-9vmokvw, r=Centril\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #70897 (bump Miri)\n - #70900 (Update cargo)\n - #70902 (Update Clippy)\n - #70939 (Add two const generics regression tests)\n - #70958 (Disable try_reserve tests on Android)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "dab641f94d87557dba0291edc8c852c85f8e6543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dab641f94d87557dba0291edc8c852c85f8e6543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94d346360da50f159e0dc777dc9bc3c5b6b51a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94d346360da50f159e0dc777dc9bc3c5b6b51a00", "html_url": "https://github.com/rust-lang/rust/commit/94d346360da50f159e0dc777dc9bc3c5b6b51a00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94d346360da50f159e0dc777dc9bc3c5b6b51a00/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93dc97a85381cc52eb872d27e50e4d518926a27c", "url": "https://api.github.com/repos/rust-lang/rust/commits/93dc97a85381cc52eb872d27e50e4d518926a27c", "html_url": "https://github.com/rust-lang/rust/commit/93dc97a85381cc52eb872d27e50e4d518926a27c"}, {"sha": "2c3147f018d8b6c05940b66e9f6098737277c882", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c3147f018d8b6c05940b66e9f6098737277c882", "html_url": "https://github.com/rust-lang/rust/commit/2c3147f018d8b6c05940b66e9f6098737277c882"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "9ea020d2d19f4a6349b3b21920e1e3a2b341f3e5", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -555,6 +555,7 @@ fn test_reserve_exact() {\n \n #[test]\n #[cfg_attr(miri, ignore)] // Miri does not support signalling OOM\n+#[cfg_attr(target_os = \"android\", ignore)] // Android used in CI has a broken dlmalloc\n fn test_try_reserve() {\n     // These are the interesting cases:\n     // * exactly isize::MAX should never trigger a CapacityOverflow (can be OOM)\n@@ -644,6 +645,7 @@ fn test_try_reserve() {\n \n #[test]\n #[cfg_attr(miri, ignore)] // Miri does not support signalling OOM\n+#[cfg_attr(target_os = \"android\", ignore)] // Android used in CI has a broken dlmalloc\n fn test_try_reserve_exact() {\n     // This is exactly the same as test_try_reserve with the method changed.\n     // See that test for comments."}, {"sha": "3d76324f7e880767f0a7be6aef82303d7d6c12a5", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -1137,6 +1137,7 @@ fn test_reserve_exact() {\n \n #[test]\n #[cfg_attr(miri, ignore)] // Miri does not support signalling OOM\n+#[cfg_attr(target_os = \"android\", ignore)] // Android used in CI has a broken dlmalloc\n fn test_try_reserve() {\n     // These are the interesting cases:\n     // * exactly isize::MAX should never trigger a CapacityOverflow (can be OOM)\n@@ -1254,6 +1255,7 @@ fn test_try_reserve() {\n \n #[test]\n #[cfg_attr(miri, ignore)] // Miri does not support signalling OOM\n+#[cfg_attr(target_os = \"android\", ignore)] // Android used in CI has a broken dlmalloc\n fn test_try_reserve_exact() {\n     // This is exactly the same as test_try_reserve with the method changed.\n     // See that test for comments."}, {"sha": "c4b6a36bb05412234a5c5aaf8cb0558b3277a68e", "filename": "src/liballoc/tests/vec_deque.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec_deque.rs?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -1134,6 +1134,7 @@ fn test_reserve_exact_2() {\n \n #[test]\n #[cfg_attr(miri, ignore)] // Miri does not support signalling OOM\n+#[cfg_attr(target_os = \"android\", ignore)] // Android used in CI has a broken dlmalloc\n fn test_try_reserve() {\n     // These are the interesting cases:\n     // * exactly isize::MAX should never trigger a CapacityOverflow (can be OOM)\n@@ -1248,6 +1249,7 @@ fn test_try_reserve() {\n \n #[test]\n #[cfg_attr(miri, ignore)] // Miri does not support signalling OOM\n+#[cfg_attr(target_os = \"android\", ignore)] // Android used in CI has a broken dlmalloc\n fn test_try_reserve_exact() {\n     // This is exactly the same as test_try_reserve with the method changed.\n     // See that test for comments."}, {"sha": "3b627a5e5301b78926733bd24fb2580891e68e4a", "filename": "src/test/ui/const-generics/issue-61522-array-len-succ.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.rs?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -0,0 +1,14 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+pub struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\n+//~^ ERROR constant expression depends on a generic parameter\n+\n+impl<const COUNT: usize> MyArray<COUNT> {\n+    fn inner(&self) -> &[u8; COUNT + 1] {\n+        //~^ ERROR constant expression depends on a generic parameter\n+        &self.0\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "0c4bd4afce4de21293cec1bed51bf795948a1461", "filename": "src/test/ui/const-generics/issue-61522-array-len-succ.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -0,0 +1,26 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/issue-61522-array-len-succ.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error: constant expression depends on a generic parameter\n+  --> $DIR/issue-61522-array-len-succ.rs:4:40\n+   |\n+LL | pub struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\n+   |                                        ^^^^^^^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: constant expression depends on a generic parameter\n+  --> $DIR/issue-61522-array-len-succ.rs:8:24\n+   |\n+LL |     fn inner(&self) -> &[u8; COUNT + 1] {\n+   |                        ^^^^^^^^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "b677dcc4af4b4bc103296acdb9debf256a730f1f", "filename": "src/test/ui/const-generics/issue-66596-impl-trait-for-str-const-arg.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.rs?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+trait Trait<const NAME: &'static str> {\n+    type Assoc;\n+}\n+\n+impl Trait<\"0\"> for () {\n+    type Assoc = ();\n+}\n+\n+fn main() {\n+    let _: <() as Trait<\"0\">>::Assoc = ();\n+}"}, {"sha": "8ab28cc2a858054eaad5094c024c9711aacf2c09", "filename": "src/test/ui/const-generics/issue-66596-impl-trait-for-str-const-arg.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94d346360da50f159e0dc777dc9bc3c5b6b51a00/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -0,0 +1,8 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/issue-66596-impl-trait-for-str-const-arg.rs:3:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+"}, {"sha": "390e8f245ef2cd7ac698b8a76abf029f9abcab0d", "filename": "src/tools/cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargo?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -1 +1 @@\n-Subproject commit 6e07d2dfb7fc87b1c9489de41da4dafa239daf03\n+Subproject commit 390e8f245ef2cd7ac698b8a76abf029f9abcab0d"}, {"sha": "d342cee78703c46d9df09088f9fb99ba85d021ae", "filename": "src/tools/clippy", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -1 +1 @@\n-Subproject commit 7907abea272bbf97812683ce03a1ab9c22f0557b\n+Subproject commit d342cee78703c46d9df09088f9fb99ba85d021ae"}, {"sha": "325682ad56d23369059ea93d5a8d44e5782e41cf", "filename": "src/tools/miri", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri?ref=94d346360da50f159e0dc777dc9bc3c5b6b51a00", "patch": "@@ -1 +1 @@\n-Subproject commit 147ea8f400de3ca529abcb5eb7b65f84a4896ae9\n+Subproject commit 325682ad56d23369059ea93d5a8d44e5782e41cf"}]}