{"sha": "7bc67ef6e02d69023c6fb04c2258beab54ac22b8", "node_id": "C_kwDOAAsO6NoAKDdiYzY3ZWY2ZTAyZDY5MDIzYzZmYjA0YzIyNThiZWFiNTRhYzIyYjg", "commit": {"author": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2023-02-04T15:36:26Z"}, "committer": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2023-03-17T22:04:54Z"}, "message": "Make the `Step` implementations const.", "tree": {"sha": "e5547ed201722ee3ea77ba2cf928e7fcabbba83e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5547ed201722ee3ea77ba2cf928e7fcabbba83e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bc67ef6e02d69023c6fb04c2258beab54ac22b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc67ef6e02d69023c6fb04c2258beab54ac22b8", "html_url": "https://github.com/rust-lang/rust/commit/7bc67ef6e02d69023c6fb04c2258beab54ac22b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bc67ef6e02d69023c6fb04c2258beab54ac22b8/comments", "author": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13afbdaa0655dda23d7129e59ac48f1ec88b2084", "url": "https://api.github.com/repos/rust-lang/rust/commits/13afbdaa0655dda23d7129e59ac48f1ec88b2084", "html_url": "https://github.com/rust-lang/rust/commit/13afbdaa0655dda23d7129e59ac48f1ec88b2084"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "dba2b2291ff6e4c928b4c5745ea263515df59b5d", "filename": "library/core/src/iter/range.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7bc67ef6e02d69023c6fb04c2258beab54ac22b8/library%2Fcore%2Fsrc%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc67ef6e02d69023c6fb04c2258beab54ac22b8/library%2Fcore%2Fsrc%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Frange.rs?ref=7bc67ef6e02d69023c6fb04c2258beab54ac22b8", "patch": "@@ -20,7 +20,8 @@ unsafe_impl_trusted_step![char i8 i16 i32 i64 i128 isize u8 u16 u32 u64 u128 usi\n /// The *successor* operation moves towards values that compare greater.\n /// The *predecessor* operation moves towards values that compare lesser.\n #[unstable(feature = \"step_trait\", reason = \"recently redesigned\", issue = \"42168\")]\n-pub trait Step: Clone + PartialOrd + Sized {\n+#[const_trait]\n+pub trait Step: ~const Clone + ~const PartialOrd + Sized {\n     /// Returns the number of *successor* steps required to get from `start` to `end`.\n     ///\n     /// Returns `None` if the number of steps would overflow `usize`\n@@ -234,7 +235,8 @@ macro_rules! step_integer_impls {\n         $(\n             #[allow(unreachable_patterns)]\n             #[unstable(feature = \"step_trait\", reason = \"recently redesigned\", issue = \"42168\")]\n-            impl Step for $u_narrower {\n+            #[rustc_const_unstable(feature = \"const_iter\", issue = \"92476\")]\n+            impl const Step for $u_narrower {\n                 step_identical_methods!();\n \n                 #[inline]\n@@ -266,7 +268,8 @@ macro_rules! step_integer_impls {\n \n             #[allow(unreachable_patterns)]\n             #[unstable(feature = \"step_trait\", reason = \"recently redesigned\", issue = \"42168\")]\n-            impl Step for $i_narrower {\n+            #[rustc_const_unstable(feature = \"const_iter\", issue = \"92476\")]\n+            impl const Step for $i_narrower {\n                 step_identical_methods!();\n \n                 #[inline]\n@@ -330,7 +333,8 @@ macro_rules! step_integer_impls {\n         $(\n             #[allow(unreachable_patterns)]\n             #[unstable(feature = \"step_trait\", reason = \"recently redesigned\", issue = \"42168\")]\n-            impl Step for $u_wider {\n+            #[rustc_const_unstable(feature = \"const_iter\", issue = \"92476\")]\n+            impl const Step for $u_wider {\n                 step_identical_methods!();\n \n                 #[inline]\n@@ -355,7 +359,8 @@ macro_rules! step_integer_impls {\n \n             #[allow(unreachable_patterns)]\n             #[unstable(feature = \"step_trait\", reason = \"recently redesigned\", issue = \"42168\")]\n-            impl Step for $i_wider {\n+            #[rustc_const_unstable(feature = \"const_iter\", issue = \"92476\")]\n+            impl const Step for $i_wider {\n                 step_identical_methods!();\n \n                 #[inline]\n@@ -405,7 +410,8 @@ step_integer_impls! {\n }\n \n #[unstable(feature = \"step_trait\", reason = \"recently redesigned\", issue = \"42168\")]\n-impl Step for char {\n+#[rustc_const_unstable(feature = \"const_iter\", issue = \"92476\")]\n+impl const Step for char {\n     #[inline]\n     fn steps_between(&start: &char, &end: &char) -> Option<usize> {\n         let start = start as u32;\n@@ -423,6 +429,7 @@ impl Step for char {\n     }\n \n     #[inline]\n+    #[rustc_allow_const_fn_unstable(const_try)]\n     fn forward_checked(start: char, count: usize) -> Option<char> {\n         let start = start as u32;\n         let mut res = Step::forward_checked(start, count)?;\n@@ -439,6 +446,7 @@ impl Step for char {\n     }\n \n     #[inline]\n+    #[rustc_allow_const_fn_unstable(const_try)]\n     fn backward_checked(start: char, count: usize) -> Option<char> {\n         let start = start as u32;\n         let mut res = Step::backward_checked(start, count)?;"}, {"sha": "c8f60defff771f7ca4a2064bd18e19e133f163f5", "filename": "library/core/src/iter/traits/marker.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bc67ef6e02d69023c6fb04c2258beab54ac22b8/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc67ef6e02d69023c6fb04c2258beab54ac22b8/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs?ref=7bc67ef6e02d69023c6fb04c2258beab54ac22b8", "patch": "@@ -86,4 +86,5 @@ pub unsafe trait InPlaceIterable: Iterator {}\n /// for details. Consumers are free to rely on the invariants in unsafe code.\n #[unstable(feature = \"trusted_step\", issue = \"85731\")]\n #[rustc_specialization_trait]\n-pub unsafe trait TrustedStep: Step {}\n+#[const_trait]\n+pub unsafe trait TrustedStep: ~const Step {}"}, {"sha": "a8b4b23dc129a24d95bb78a10a6b25c2265cd773", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bc67ef6e02d69023c6fb04c2258beab54ac22b8/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc67ef6e02d69023c6fb04c2258beab54ac22b8/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=7bc67ef6e02d69023c6fb04c2258beab54ac22b8", "patch": "@@ -126,6 +126,7 @@\n #![feature(const_intrinsic_forget)]\n #![feature(const_ipv4)]\n #![feature(const_ipv6)]\n+#![feature(const_iter)]\n #![feature(const_likely)]\n #![feature(const_maybe_uninit_uninit_array)]\n #![feature(const_maybe_uninit_as_mut_ptr)]"}]}