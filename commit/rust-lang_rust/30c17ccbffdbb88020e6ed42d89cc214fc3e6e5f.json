{"sha": "30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYzE3Y2NiZmZkYmI4ODAyMGU2ZWQ0MmQ4OWNjMjE0ZmMzZTZlNWY=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2018-06-23T02:50:56Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2018-06-23T03:40:52Z"}, "message": "Update libsyntax test", "tree": {"sha": "b5d5eb409fa4150a4fbd8551eab6951923b9fb80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5d5eb409fa4150a4fbd8551eab6951923b9fb80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f", "html_url": "https://github.com/rust-lang/rust/commit/30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a62c4aa03a3ca224442443dc77cf87803259388d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a62c4aa03a3ca224442443dc77cf87803259388d", "html_url": "https://github.com/rust-lang/rust/commit/a62c4aa03a3ca224442443dc77cf87803259388d"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "ac8088507dde7b6941d0fc211d4aa06ec726a112", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=30c17ccbffdbb88020e6ed42d89cc214fc3e6e5f", "patch": "@@ -3186,10 +3186,20 @@ mod tests {\n                 variadic: false\n             };\n             let generics = ast::Generics::default();\n-            assert_eq!(fun_to_string(&decl, ast::Unsafety::Normal,\n-                                    ast::Constness::NotConst,\n-                                    abba_ident, &generics),\n-                    \"fn abba()\");\n+            assert_eq!(\n+                fun_to_string(\n+                    &decl,\n+                    ast::FnHeader {\n+                        unsafety: ast::Unsafety::Normal,\n+                        constness: codemap::dummy_spanned(ast::Constness::NotConst),\n+                        asyncness: ast::IsAsync::NotAsync,\n+                        abi: Abi::Rust,\n+                    },\n+                    abba_ident,\n+                    &generics\n+                ),\n+                \"fn abba()\"\n+            );\n         })\n     }\n "}]}