{"sha": "ee06ed2bfd233b57c5989696bb723bddf6569622", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMDZlZDJiZmQyMzNiNTdjNTk4OTY5NmJiNzIzYmRkZjY1Njk2MjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-18T08:07:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-20T22:20:49Z"}, "message": "core::rt: Put a lock on the work queue", "tree": {"sha": "31fa57585ff8908ac4daf81c6ea94c9cffccc8b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31fa57585ff8908ac4daf81c6ea94c9cffccc8b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee06ed2bfd233b57c5989696bb723bddf6569622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee06ed2bfd233b57c5989696bb723bddf6569622", "html_url": "https://github.com/rust-lang/rust/commit/ee06ed2bfd233b57c5989696bb723bddf6569622", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee06ed2bfd233b57c5989696bb723bddf6569622/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f03c9bd08cde6c83306d91bb07c4810b8b8f13ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/f03c9bd08cde6c83306d91bb07c4810b8b8f13ba", "html_url": "https://github.com/rust-lang/rust/commit/f03c9bd08cde6c83306d91bb07c4810b8b8f13ba"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "31f73cd09b54d6eb557c3a594e904ef411096461", "filename": "src/libcore/rt/work_queue.rs", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/ee06ed2bfd233b57c5989696bb723bddf6569622/src%2Flibcore%2Frt%2Fwork_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee06ed2bfd233b57c5989696bb723bddf6569622/src%2Flibcore%2Frt%2Fwork_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fwork_queue.rs?ref=ee06ed2bfd233b57c5989696bb723bddf6569622", "patch": "@@ -11,39 +11,48 @@\n use container::Container;\n use option::*;\n use vec::OwnedVector;\n+use unstable::sync::{Exclusive, exclusive};\n+use cell::Cell;\n+use kinds::Owned;\n \n pub struct WorkQueue<T> {\n-    priv queue: ~[T]\n+    // XXX: Another mystery bug fixed by boxing this lock\n+    priv queue: ~Exclusive<~[T]>\n }\n \n-pub impl<T> WorkQueue<T> {\n+pub impl<T: Owned> WorkQueue<T> {\n     fn new() -> WorkQueue<T> {\n         WorkQueue {\n-            queue: ~[]\n+            queue: ~exclusive(~[])\n         }\n     }\n \n     fn push(&mut self, value: T) {\n-        self.queue.unshift(value)\n+        let value = Cell(value);\n+        self.queue.with(|q| q.unshift(value.take()) );\n     }\n \n     fn pop(&mut self) -> Option<T> {\n-        if !self.queue.is_empty() {\n-            Some(self.queue.shift())\n-        } else {\n-            None\n+        do self.queue.with |q| {\n+            if !q.is_empty() {\n+                Some(q.shift())\n+            } else {\n+                None\n+            }\n         }\n     }\n \n     fn steal(&mut self) -> Option<T> {\n-        if !self.queue.is_empty() {\n-            Some(self.queue.pop())\n-        } else {\n-            None\n+        do self.queue.with |q| {\n+            if !q.is_empty() {\n+                Some(q.pop())\n+            } else {\n+                None\n+            }\n         }\n     }\n \n     fn is_empty(&self) -> bool {\n-        return self.queue.is_empty();\n+        self.queue.with_imm(|q| q.is_empty() )\n     }\n }"}]}