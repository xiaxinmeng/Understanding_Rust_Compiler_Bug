{"sha": "00eb198a82376eeb608c32e6d4252743f6dcfc87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZWIxOThhODIzNzZlZWI2MDhjMzJlNmQ0MjUyNzQzZjZkY2ZjODc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-17T14:49:06Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-17T14:49:06Z"}, "message": "implement fn -> unsafe fn pointer casts", "tree": {"sha": "a2214dd3db79b6ffdf3f43a886e2eb763701e1ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2214dd3db79b6ffdf3f43a886e2eb763701e1ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00eb198a82376eeb608c32e6d4252743f6dcfc87", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXZA3iAAoJEFbW7qD8Z6xGH1YQAKsvfxwy6JGCWu4Gak+W21S0\nIEi97mULDxOx2S5Rs25ydveAO3Slz5uL4ZTGNPPvW0lOCkb8dvLsGBKnBtLW7Y07\npK+BxYY6nbPJ0KqmNjoHu1BG2qC/QT49qLTJVogZ77V5HXoWhgm/oAuol32lA217\nNdNgp6N2X2R42vczUnNmm0Zy8yuDDgeJR7JsTp6y8xtKYSE/GK12jFktv3AVP+hd\nOYb1AYDQz2AebXbAgsu0Vwoh6pXTE9VexEDeQNmqNEcnS996hE7Zt/2bjRX4HXvg\nujmlA7QZi8KUe01ztVO8l8j9IlEsZpnbCvMN+TWqi/UWrta7IcDjXxmg88oabB8m\n8CuehAs2s1hnQZOEUVD6WVljOaXIWEkPQbk54VfEJ0lADGLxVQYOo6QLEAJy5b5J\n/Bw0r5yF5U8tFeauNi5aJcmmaBJ+XQfkdrHA6gT25AgIzlY9YdBd+P6WOduIlCDq\nsfxkcS2M0so+Ohh+IssNVlGDHPzYDKfPF7IedNypDpB7Za/DdHs/Vs4eq4sZVDWp\nmCOz4rxzyqv60Y2bPRNfUTW+NuFCFsXNzjhNN68GBM4bh5q0+wIDiJVZdaZSymST\nsPx5Co72uQHfFI4enPIqLW5ScQrFzpiOTVROrx1frn8y9Us+ptGcE7nXebrWS3aE\nz2950T3c6yjNt29AuePb\n=/2T8\n-----END PGP SIGNATURE-----", "payload": "tree a2214dd3db79b6ffdf3f43a886e2eb763701e1ae\nparent e3a2bf84e26f0be966297d75b47b9d121feb3bf5\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466174946 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466174946 +0200\n\nimplement fn -> unsafe fn pointer casts"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00eb198a82376eeb608c32e6d4252743f6dcfc87", "html_url": "https://github.com/rust-lang/rust/commit/00eb198a82376eeb608c32e6d4252743f6dcfc87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00eb198a82376eeb608c32e6d4252743f6dcfc87/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3a2bf84e26f0be966297d75b47b9d121feb3bf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a2bf84e26f0be966297d75b47b9d121feb3bf5", "html_url": "https://github.com/rust-lang/rust/commit/e3a2bf84e26f0be966297d75b47b9d121feb3bf5"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "7ae08675226a85fa69efe1e1f91847c50f6d6e01", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/00eb198a82376eeb608c32e6d4252743f6dcfc87/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00eb198a82376eeb608c32e6d4252743f6dcfc87/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=00eb198a82376eeb608c32e6d4252743f6dcfc87", "patch": "@@ -1144,7 +1144,16 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         ref other => panic!(\"reify fn pointer on {:?}\", other),\n                     },\n \n-                    _ => return Err(EvalError::Unimplemented(format!(\"can't handle cast: {:?}\", rvalue))),\n+                    UnsafeFnPointer => match dest_ty.sty {\n+                        ty::TyFnPtr(unsafe_fn_ty) => {\n+                            let src = self.eval_operand(operand)?;\n+                            let ptr = self.memory.read_ptr(src)?;\n+                            let fn_def = self.memory.get_fn(ptr.alloc_id)?;\n+                            let fn_ptr = self.memory.create_fn_ptr(fn_def.def_id, fn_def.substs, unsafe_fn_ty);\n+                            self.memory.write_ptr(dest, fn_ptr)?;\n+                        },\n+                        ref other => panic!(\"fn to unsafe fn cast on {:?}\", other),\n+                    },\n                 }\n             }\n "}, {"sha": "225cd1391bc36d89aa7803a90f21c1d3b5c25de4", "filename": "tests/compile-fail/cast_fn_ptr_unsafe.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/00eb198a82376eeb608c32e6d4252743f6dcfc87/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00eb198a82376eeb608c32e6d4252743f6dcfc87/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe.rs?ref=00eb198a82376eeb608c32e6d4252743f6dcfc87", "patch": "@@ -0,0 +1,10 @@\n+// just making sure that fn -> unsafe fn casts are handled by rustc so miri doesn't have to\n+fn main() {\n+    fn f() {}\n+\n+    let g = f as fn() as unsafe fn(i32); //~ERROR: non-scalar cast: `fn()` as `unsafe fn(i32)`\n+\n+    unsafe {\n+        g(42);\n+    }\n+}"}, {"sha": "c3a2fb9556f824b8ad74a6692eb7540324344bb3", "filename": "tests/compile-fail/cast_fn_ptr_unsafe2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/00eb198a82376eeb608c32e6d4252743f6dcfc87/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00eb198a82376eeb608c32e6d4252743f6dcfc87/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr_unsafe2.rs?ref=00eb198a82376eeb608c32e6d4252743f6dcfc87", "patch": "@@ -0,0 +1,10 @@\n+// just making sure that fn -> unsafe fn casts are handled by rustc so miri doesn't have to\n+fn main() {\n+    fn f() {}\n+\n+    let g = f as fn() as fn(i32) as unsafe fn(i32); //~ERROR: non-scalar cast: `fn()` as `fn(i32)`\n+\n+    unsafe {\n+        g(42);\n+    }\n+}"}, {"sha": "0cabb369bfdd907ee6a5db31d4a307d1ec8896f9", "filename": "tests/run-pass/cast_fn_ptr_unsafe.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/00eb198a82376eeb608c32e6d4252743f6dcfc87/tests%2Frun-pass%2Fcast_fn_ptr_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00eb198a82376eeb608c32e6d4252743f6dcfc87/tests%2Frun-pass%2Fcast_fn_ptr_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcast_fn_ptr_unsafe.rs?ref=00eb198a82376eeb608c32e6d4252743f6dcfc87", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    fn f() {}\n+\n+    let g = f as fn() as unsafe fn();\n+    unsafe {\n+        g();\n+    }\n+}"}]}