{"sha": "a1f7e9a7250aea6f415fd62e88bbcb848baf73ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZjdlOWE3MjUwYWVhNmY0MTVmZDYyZTg4YmJjYjg0OGJhZjczZmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-10T09:28:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-10T09:28:51Z"}, "message": "assert that only statics can possibly be mutable", "tree": {"sha": "ada2d72e4de1034c21a7fc0c1d3f52769075baa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ada2d72e4de1034c21a7fc0c1d3f52769075baa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1f7e9a7250aea6f415fd62e88bbcb848baf73ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f7e9a7250aea6f415fd62e88bbcb848baf73ff", "html_url": "https://github.com/rust-lang/rust/commit/a1f7e9a7250aea6f415fd62e88bbcb848baf73ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1f7e9a7250aea6f415fd62e88bbcb848baf73ff/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d69c66811184707dfdb293673e58ce6121e3714f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d69c66811184707dfdb293673e58ce6121e3714f", "html_url": "https://github.com/rust-lang/rust/commit/d69c66811184707dfdb293673e58ce6121e3714f"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "3ddff6ea8ca4c3dddc85a287839025aa68461969", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a1f7e9a7250aea6f415fd62e88bbcb848baf73ff/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1f7e9a7250aea6f415fd62e88bbcb848baf73ff/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=a1f7e9a7250aea6f415fd62e88bbcb848baf73ff", "patch": "@@ -360,18 +360,18 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter {\n         } else {\n             // Read access. These are usually allowed, with some exceptions.\n             if memory_extra.can_access_statics {\n-                // This is allowed to read from anything.\n+                // Machine configuration allows us read from anything (e.g., `static` initializer).\n                 Ok(())\n-            } else if allocation.mutability == Mutability::Mut || static_def_id.is_some() {\n-                // This is a potentially dangerous read.\n-                // We *must* error on any access to a mutable global here, as the content of\n-                // this allocation may be different now and at run-time, so if we permit reading\n-                // now we might return the wrong value.\n-                // We conservatively also reject all statics here, but that could be relaxed\n-                // in the future.\n+            } else if static_def_id.is_some() {\n+                // Machine configuration does not allow us to read statics\n+                // (e.g., `const` initializer).\n                 Err(ConstEvalErrKind::ConstAccessesStatic.into())\n             } else {\n                 // Immutable global, this read is fine.\n+                // But make sure we never accept a read from something mutable, that would be\n+                // unsound. The reason is that as the content of this allocation may be different\n+                // now and at run-time, so if we permit reading now we might return the wrong value.\n+                assert_eq!(allocation.mutability, Mutability::Not);\n                 Ok(())\n             }\n         }"}]}