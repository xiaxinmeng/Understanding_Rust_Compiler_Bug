{"sha": "79d8d087a3d911ddcd881e452a7e72a8a7121435", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZDhkMDg3YTNkOTExZGRjZDg4MWU0NTJhN2U3MmE4YTcxMjE0MzU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-07-02T14:21:34Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-07-02T14:21:34Z"}, "message": "incr.comp.: Take names of children into account when computing the ICH of a module's HIR.", "tree": {"sha": "124a1a9dcdd920bb58d3f5224ff902aa81cbd810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/124a1a9dcdd920bb58d3f5224ff902aa81cbd810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79d8d087a3d911ddcd881e452a7e72a8a7121435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79d8d087a3d911ddcd881e452a7e72a8a7121435", "html_url": "https://github.com/rust-lang/rust/commit/79d8d087a3d911ddcd881e452a7e72a8a7121435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79d8d087a3d911ddcd881e452a7e72a8a7121435/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a53bd20fae43cb35d394d7823aacdf52ccbd19cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a53bd20fae43cb35d394d7823aacdf52ccbd19cb", "html_url": "https://github.com/rust-lang/rust/commit/a53bd20fae43cb35d394d7823aacdf52ccbd19cb"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "8917051bfd8ae44e6e569371f03a8102e0f872aa", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/79d8d087a3d911ddcd881e452a7e72a8a7121435/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d8d087a3d911ddcd881e452a7e72a8a7121435/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=79d8d087a3d911ddcd881e452a7e72a8a7121435", "patch": "@@ -756,13 +756,28 @@ impl_stable_hash_for!(enum hir::ImplPolarity {\n     Negative\n });\n \n-impl_stable_hash_for!(struct hir::Mod {\n-    inner,\n-    // We are not hashing the IDs of the items contained in the module.\n-    // This is harmless and matches the current behavior but it's not\n-    // actually correct. See issue #40876.\n-    item_ids -> _,\n-});\n+impl<'a> HashStable<StableHashingContext<'a>> for hir::Mod {\n+    fn hash_stable<W: StableHasherResult>(&self,\n+                                          hcx: &mut StableHashingContext<'a>,\n+                                          hasher: &mut StableHasher<W>) {\n+        let hir::Mod {\n+            inner: ref inner_span,\n+            ref item_ids,\n+        } = *self;\n+\n+        inner_span.hash_stable(hcx, hasher);\n+\n+        let mut item_ids: Vec<DefPathHash> = item_ids.iter().map(|id| {\n+            let (def_path_hash, local_id) = id.id.to_stable_hash_key(hcx);\n+            debug_assert_eq!(local_id, hir::ItemLocalId(0));\n+            def_path_hash\n+        }).collect();\n+\n+        item_ids.sort_unstable();\n+\n+        item_ids.hash_stable(hcx, hasher);\n+    }\n+}\n \n impl_stable_hash_for!(struct hir::ForeignMod {\n     abi,"}, {"sha": "c4a23ac653ca009a57c8458ce009f7f2b0426352", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79d8d087a3d911ddcd881e452a7e72a8a7121435/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d8d087a3d911ddcd881e452a7e72a8a7121435/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=79d8d087a3d911ddcd881e452a7e72a8a7121435", "patch": "@@ -25,11 +25,10 @@ use monomorphize::Instance;\n use type_of::LayoutLlvmExt;\n use rustc::hir;\n use rustc::hir::def::Def;\n-use rustc::hir::def_id::DefId;\n+use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::mir::mono::{Linkage, Visibility};\n use rustc::ty::TypeFoldable;\n use rustc::ty::layout::LayoutOf;\n-use syntax::attr;\n use std::fmt;\n \n pub use rustc::mir::mono::MonoItem;\n@@ -173,7 +172,7 @@ fn predefine_fn<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>,\n     // visibility as we're going to link this object all over the place but\n     // don't want the symbols to get exported.\n     if linkage != Linkage::Internal && linkage != Linkage::Private &&\n-       attr::contains_name(cx.tcx.hir.krate_attrs(), \"compiler_builtins\") {\n+       cx.tcx.is_compiler_builtins(LOCAL_CRATE) {\n         unsafe {\n             llvm::LLVMRustSetVisibility(lldecl, llvm::Visibility::Hidden);\n         }"}]}