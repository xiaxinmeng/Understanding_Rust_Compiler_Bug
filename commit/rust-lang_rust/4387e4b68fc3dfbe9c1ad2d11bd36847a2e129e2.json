{"sha": "4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2", "node_id": "C_kwDOAAsO6NoAKDQzODdlNGI2OGZjM2RmYmU5YzFhZDJkMTFiZDM2ODQ3YTJlMTI5ZTI", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-06T10:21:17Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-06T10:21:17Z"}, "message": "use `TraitEngineExt` to register obligations", "tree": {"sha": "500b4ac49dc3584fc2bda6df396fb65c550b4b54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/500b4ac49dc3584fc2bda6df396fb65c550b4b54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2", "html_url": "https://github.com/rust-lang/rust/commit/4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b8cf49c51833ee5d27ae2e8e179337dbb9f14d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8cf49c51833ee5d27ae2e8e179337dbb9f14d7", "html_url": "https://github.com/rust-lang/rust/commit/5b8cf49c51833ee5d27ae2e8e179337dbb9f14d7"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "c7fb49acb5af66d0fb3a66548ece1a95451f8ee4", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=4387e4b68fc3dfbe9c1ad2d11bd36847a2e129e2", "patch": "@@ -8,7 +8,7 @@ pub use self::ValuePairs::*;\n use self::opaque_types::OpaqueTypeStorage;\n pub(crate) use self::undo_log::{InferCtxtUndoLogs, Snapshot, UndoLog};\n \n-use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine};\n+use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine, TraitEngineExt};\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n@@ -618,9 +618,7 @@ impl<'tcx, T> InferOk<'tcx, T> {\n         fulfill_cx: &mut dyn TraitEngine<'tcx>,\n     ) -> T {\n         let InferOk { value, obligations } = self;\n-        for obligation in obligations {\n-            fulfill_cx.register_predicate_obligation(infcx, obligation);\n-        }\n+        fulfill_cx.register_predicate_obligations(infcx, obligations);\n         value\n     }\n }"}]}