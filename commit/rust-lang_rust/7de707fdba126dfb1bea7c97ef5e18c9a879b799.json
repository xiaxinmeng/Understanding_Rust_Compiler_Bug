{"sha": "7de707fdba126dfb1bea7c97ef5e18c9a879b799", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZTcwN2ZkYmExMjZkZmIxYmVhN2M5N2VmNWUxOGM5YTg3OWI3OTk=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-10T20:13:58Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-15T11:01:10Z"}, "message": "Remove further semicolon reduction", "tree": {"sha": "9bfa44a9fb1510adaf8fa85fa5853f9e8659637b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bfa44a9fb1510adaf8fa85fa5853f9e8659637b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7de707fdba126dfb1bea7c97ef5e18c9a879b799", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJa0zD2AAoJELb6Bqbg4mZbUNoP/3mjHx6Tx9aOUo4zMtkeb0Hh\nT/gwF0xXzVgQ0qBUi5aa45U56CHLbomThtYpDOR8qL9X0Ho9uQghPIR11qxZKeuh\nuWGr4WF+8FYwHmQf0/zLkgf8nh5KXIZn0m2JGzg8PCp0Objbo1WonA4aU6GtywHn\nqCrVaBAr7TqQDazT7k7mgXM1FGZ1MVBlCm5sn+zZomfbIU3/jBNaF8fp1X2bLLPA\nmkyd9c/WfFsnbu0AHi+QNrZbkfDWey7RNpWgoES0UtsN8+49S9UTgTb5TZzrjRpd\nXisRCUY3elkHkBMJSv5+NmpwnZyXhjS7tVR0/pyINsBRdrYcV7gmzFlH/vJopnC5\nk4ineSEEZYc+QsMHoebO+dxUMHLgoJqFHNJ1WvBSx4TdWDIiVVTGzcRxQqsuzefv\nkTjklwJ3PlDLbosTLKOJQQblbO+GaTp8uFczGk75/42fiWyXsG7p09Ln3w08CpQr\nM3bQkpQbUMKmmLTcB9/2LqBdtDtEgHsxlbu85vrWx87mtjUPNVanamLL3kiQxa6u\nVff0oVPZUvLM2ouncBZU1pJ58RVCQRH0zNC/xCpCXBOboJlOjAkIeJY4V0oMlObU\nEQHcNH5U4CA7JEtDlHshsGXPTmXp3PaINoiSFwdagF/WrFVosCZNtwlYXwFfuXva\nVbCPOSyV1Q2YX6kGB4JB\n=ZtQk\n-----END PGP SIGNATURE-----", "payload": "tree 9bfa44a9fb1510adaf8fa85fa5853f9e8659637b\nparent db60c67c5be3b7f2ceb24ba96c4eecb5015ec09b\nauthor Philipp Hansch <dev@phansch.net> 1523391238 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1523790070 +0200\n\nRemove further semicolon reduction\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7de707fdba126dfb1bea7c97ef5e18c9a879b799", "html_url": "https://github.com/rust-lang/rust/commit/7de707fdba126dfb1bea7c97ef5e18c9a879b799", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7de707fdba126dfb1bea7c97ef5e18c9a879b799/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db60c67c5be3b7f2ceb24ba96c4eecb5015ec09b", "url": "https://api.github.com/repos/rust-lang/rust/commits/db60c67c5be3b7f2ceb24ba96c4eecb5015ec09b", "html_url": "https://github.com/rust-lang/rust/commit/db60c67c5be3b7f2ceb24ba96c4eecb5015ec09b"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "b383f54993cf94d7d05d0b9d9c9ec409ccc69a9c", "filename": "clippy_lints/src/option_map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7de707fdba126dfb1bea7c97ef5e18c9a879b799/clippy_lints%2Fsrc%2Foption_map_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de707fdba126dfb1bea7c97ef5e18c9a879b799/clippy_lints%2Fsrc%2Foption_map_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_map_unit_fn.rs?ref=7de707fdba126dfb1bea7c97ef5e18c9a879b799", "patch": "@@ -97,17 +97,7 @@ fn reduce_unit_expression<'a>(cx: &LateContext, expr: &'a hir::Expr) -> Option<S\n                     match inner_stmt.node {\n                         hir::StmtDecl(ref d, _) => Some(d.span),\n                         hir::StmtExpr(ref e, _) => Some(e.span),\n-                        hir::StmtSemi(ref e, _) => {\n-                            if is_unit_expression(cx, e) {\n-                                // `X` returns unit so we can strip the\n-                                // semicolon and reduce further\n-                                reduce_unit_expression(cx, e)\n-                            } else {\n-                                // `X` doesn't return unit so it needs a\n-                                // trailing semicolon\n-                                Some(inner_stmt.span)\n-                            }\n-                        },\n+                        hir::StmtSemi(_, _) => Some(inner_stmt.span),\n                     }\n                 },\n                 _ => None,"}, {"sha": "84dedf9cd604698a14bdb632d882e77fc4081bfc", "filename": "tests/ui/option_map_unit_fn.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7de707fdba126dfb1bea7c97ef5e18c9a879b799/tests%2Fui%2Foption_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de707fdba126dfb1bea7c97ef5e18c9a879b799/tests%2Fui%2Foption_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn.stderr?ref=7de707fdba126dfb1bea7c97ef5e18c9a879b799", "patch": "@@ -62,15 +62,15 @@ error: called `map(f)` on an Option value where `f` is a unit closure\n 52 |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:54:5\n    |\n 54 |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:57:5\n@@ -94,15 +94,15 @@ error: called `map(f)` on an Option value where `f` is a unit closure\n 61 |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:63:5\n    |\n 63 |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:68:5"}]}