{"sha": "96d4666f23f71683965ded5844e78b3f4346406c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZDQ2NjZmMjNmNzE2ODM5NjVkZWQ1ODQ0ZTc4YjNmNDM0NjQwNmM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T21:42:48Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T21:43:38Z"}, "message": "Update tests for array_into_iter lint upgrade.", "tree": {"sha": "780e3dd2ea1638edc15defa040b5c7f652a5d109", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/780e3dd2ea1638edc15defa040b5c7f652a5d109"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96d4666f23f71683965ded5844e78b3f4346406c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96d4666f23f71683965ded5844e78b3f4346406c", "html_url": "https://github.com/rust-lang/rust/commit/96d4666f23f71683965ded5844e78b3f4346406c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96d4666f23f71683965ded5844e78b3f4346406c/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90080f47032b5b2d578b0940ee615a428680e884", "url": "https://api.github.com/repos/rust-lang/rust/commits/90080f47032b5b2d578b0940ee615a428680e884", "html_url": "https://github.com/rust-lang/rust/commit/90080f47032b5b2d578b0940ee615a428680e884"}], "stats": {"total": 113, "additions": 31, "deletions": 82}, "files": [{"sha": "60995170a5164397b459ca6c0df73e865863fd50", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/96d4666f23f71683965ded5844e78b3f4346406c/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d4666f23f71683965ded5844e78b3f4346406c/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs?ref=96d4666f23f71683965ded5844e78b3f4346406c", "patch": "@@ -19,9 +19,12 @@ fn main() {\n     //~^ WARNING this method call resolves to `<&[T; N] as IntoIterator>::into_iter`\n     //~| WARNING this changes meaning\n \n-    // The `array_into_iter` lint doesn't cover other wrappers that deref to an array.\n     let _: Iter<'_, i32> = Rc::new(array).into_iter();\n+    //~^ WARNING this method call resolves to `<&[T; N] as IntoIterator>::into_iter`\n+    //~| WARNING this changes meaning\n     let _: Iter<'_, i32> = Array(array).into_iter();\n+    //~^ WARNING this method call resolves to `<&[T; N] as IntoIterator>::into_iter`\n+    //~| WARNING this changes meaning\n \n     // But you can always use the trait method explicitly as an array.\n     let _: IntoIter<i32, 10> = IntoIterator::into_iter(array);"}, {"sha": "bc08fdcafa08d3dcc249e7c55e8b365cf848e373", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.stderr", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/96d4666f23f71683965ded5844e78b3f4346406c/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96d4666f23f71683965ded5844e78b3f4346406c/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr?ref=96d4666f23f71683965ded5844e78b3f4346406c", "patch": "@@ -20,21 +20,31 @@ warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (du\n   --> $DIR/into-iter-on-arrays-2018.rs:18:44\n    |\n LL |     let _: Iter<'_, i32> = Box::new(array).into_iter();\n-   |                                            ^^^^^^^^^\n+   |                                            ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n+\n+warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n+  --> $DIR/into-iter-on-arrays-2018.rs:22:43\n    |\n-LL |     let _: Iter<'_, i32> = Box::new(array).iter();\n-   |                                            ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n+LL |     let _: Iter<'_, i32> = Rc::new(array).into_iter();\n+   |                                           ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n+   |\n+   = warning: this changes meaning in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n+\n+warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n+  --> $DIR/into-iter-on-arrays-2018.rs:25:41\n    |\n-LL |     let _: Iter<'_, i32> = IntoIterator::into_iter(Box::new(array));\n-   |                            ++++++++++++++++++++++++               ~\n+LL |     let _: Iter<'_, i32> = Array(array).into_iter();\n+   |                                         ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n+   |\n+   = warning: this changes meaning in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-2018.rs:29:24\n+  --> $DIR/into-iter-on-arrays-2018.rs:32:24\n    |\n LL |     for _ in [1, 2, 3].into_iter() {}\n    |                        ^^^^^^^^^\n@@ -51,5 +61,5 @@ LL -     for _ in [1, 2, 3].into_iter() {}\n LL +     for _ in [1, 2, 3] {}\n    | \n \n-warning: 3 warnings emitted\n+warning: 5 warnings emitted\n "}, {"sha": "2df1a06df20ab027ad6e9e49be526149e87ec8ff", "filename": "src/test/ui/iterators/into-iter-on-arrays-lint.stderr", "status": "modified", "additions": 8, "deletions": 72, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/96d4666f23f71683965ded5844e78b3f4346406c/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96d4666f23f71683965ded5844e78b3f4346406c/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr?ref=96d4666f23f71683965ded5844e78b3f4346406c", "patch": "@@ -71,137 +71,73 @@ warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (du\n   --> $DIR/into-iter-on-arrays-lint.rs:23:21\n    |\n LL |     Box::new(small).into_iter();\n-   |                     ^^^^^^^^^\n+   |                     ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new(small).iter();\n-   |                     ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new(small));\n-   |     ++++++++++++++++++++++++               ~\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n   --> $DIR/into-iter-on-arrays-lint.rs:26:22\n    |\n LL |     Box::new([1, 2]).into_iter();\n-   |                      ^^^^^^^^^\n+   |                      ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new([1, 2]).iter();\n-   |                      ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new([1, 2]));\n-   |     ++++++++++++++++++++++++                ~\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n   --> $DIR/into-iter-on-arrays-lint.rs:29:19\n    |\n LL |     Box::new(big).into_iter();\n-   |                   ^^^^^^^^^\n+   |                   ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new(big).iter();\n-   |                   ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new(big));\n-   |     ++++++++++++++++++++++++             ~\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n   --> $DIR/into-iter-on-arrays-lint.rs:32:25\n    |\n LL |     Box::new([0u8; 33]).into_iter();\n-   |                         ^^^^^^^^^\n+   |                         ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new([0u8; 33]).iter();\n-   |                         ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new([0u8; 33]));\n-   |     ++++++++++++++++++++++++                   ~\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n   --> $DIR/into-iter-on-arrays-lint.rs:36:31\n    |\n LL |     Box::new(Box::new(small)).into_iter();\n-   |                               ^^^^^^^^^\n+   |                               ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new(Box::new(small)).iter();\n-   |                               ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new(Box::new(small)));\n-   |     ++++++++++++++++++++++++                         ~\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n   --> $DIR/into-iter-on-arrays-lint.rs:39:32\n    |\n LL |     Box::new(Box::new([1, 2])).into_iter();\n-   |                                ^^^^^^^^^\n+   |                                ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new(Box::new([1, 2])).iter();\n-   |                                ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new(Box::new([1, 2])));\n-   |     ++++++++++++++++++++++++                          ~\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n   --> $DIR/into-iter-on-arrays-lint.rs:42:29\n    |\n LL |     Box::new(Box::new(big)).into_iter();\n-   |                             ^^^^^^^^^\n+   |                             ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new(Box::new(big)).iter();\n-   |                             ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new(Box::new(big)));\n-   |     ++++++++++++++++++++++++                       ~\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n   --> $DIR/into-iter-on-arrays-lint.rs:45:35\n    |\n LL |     Box::new(Box::new([0u8; 33])).into_iter();\n-   |                                   ^^^^^^^^^\n+   |                                   ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n    |\n    = warning: this changes meaning in Rust 2021\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\n-help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n-   |\n-LL |     Box::new(Box::new([0u8; 33])).iter();\n-   |                                   ~~~~\n-help: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\n-   |\n-LL |     IntoIterator::into_iter(Box::new(Box::new([0u8; 33])));\n-   |     ++++++++++++++++++++++++                             ~\n \n warning: 12 warnings emitted\n "}]}