{"sha": "2918a7d5a9e65721a31598b50e975ae0882feac3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MThhN2Q1YTllNjU3MjFhMzE1OThiNTBlOTc1YWUwODgyZmVhYzM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-14T23:02:55Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-15T19:19:41Z"}, "message": "Add `BitIter::new()`.\n\nThis factors out some duplicated code.", "tree": {"sha": "4e6b2fdf9412b4885f5be18349188088a64f4a65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e6b2fdf9412b4885f5be18349188088a64f4a65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2918a7d5a9e65721a31598b50e975ae0882feac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2918a7d5a9e65721a31598b50e975ae0882feac3", "html_url": "https://github.com/rust-lang/rust/commit/2918a7d5a9e65721a31598b50e975ae0882feac3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2918a7d5a9e65721a31598b50e975ae0882feac3/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "237d54ff6c4fb3577e02d4c5af02813c11b63d01", "url": "https://api.github.com/repos/rust-lang/rust/commits/237d54ff6c4fb3577e02d4c5af02813c11b63d01", "html_url": "https://github.com/rust-lang/rust/commit/237d54ff6c4fb3577e02d4c5af02813c11b63d01"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "bfaeb847d80b816900e64c97f9b701097ec42dd4", "filename": "src/librustc_index/bit_set.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2918a7d5a9e65721a31598b50e975ae0882feac3/src%2Flibrustc_index%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2918a7d5a9e65721a31598b50e975ae0882feac3/src%2Flibrustc_index%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_index%2Fbit_set.rs?ref=2918a7d5a9e65721a31598b50e975ae0882feac3", "patch": "@@ -168,11 +168,7 @@ impl<T: Idx> BitSet<T> {\n     /// Iterates over the indices of set bits in a sorted order.\n     #[inline]\n     pub fn iter(&self) -> BitIter<'_, T> {\n-        BitIter {\n-            cur: None,\n-            iter: self.words.iter().enumerate(),\n-            marker: PhantomData,\n-        }\n+        BitIter::new(&self.words)\n     }\n \n     /// Duplicates the set as a hybrid set.\n@@ -296,6 +292,17 @@ pub struct BitIter<'a, T: Idx> {\n     marker: PhantomData<T>\n }\n \n+impl<'a, T: Idx> BitIter<'a, T> {\n+    #[inline]\n+    fn new(words: &'a [Word]) -> BitIter<'a, T> {\n+        BitIter {\n+            cur: None,\n+            iter: words.iter().enumerate(),\n+            marker: PhantomData,\n+        }\n+    }\n+}\n+\n impl<'a, T: Idx> Iterator for BitIter<'a, T> {\n     type Item = T;\n     fn next(&mut self) -> Option<T> {\n@@ -851,11 +858,7 @@ impl<R: Idx, C: Idx> BitMatrix<R, C> {\n     pub fn iter(&self, row: R) -> BitIter<'_, C> {\n         assert!(row.index() < self.num_rows);\n         let (start, end) = self.range(row);\n-        BitIter {\n-            cur: None,\n-            iter: self.words[start..end].iter().enumerate(),\n-            marker: PhantomData,\n-        }\n+        BitIter::new(&self.words[start..end])\n     }\n \n     /// Returns the number of elements in `row`."}]}