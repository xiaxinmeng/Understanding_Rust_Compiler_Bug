{"sha": "b81e74ceb7229fbfdd9283ac671a23357b5e6cf1", "node_id": "C_kwDOAAsO6NoAKGI4MWU3NGNlYjcyMjlmYmZkZDkyODNhYzY3MWEyMzM1N2I1ZTZjZjE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-20T11:34:53Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-20T11:34:53Z"}, "message": "remove `commit_unconditionally`", "tree": {"sha": "a9bfe5cb44b23aba913326c447120031a2bc697a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9bfe5cb44b23aba913326c447120031a2bc697a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1", "html_url": "https://github.com/rust-lang/rust/commit/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c12f5fc006cab3c8276d186545bef4ab99db3673", "url": "https://api.github.com/repos/rust-lang/rust/commits/c12f5fc006cab3c8276d186545bef4ab99db3673", "html_url": "https://github.com/rust-lang/rust/commit/c12f5fc006cab3c8276d186545bef4ab99db3673"}], "stats": {"total": 14, "additions": 1, "deletions": 13}, "files": [{"sha": "a551abf58d1152cf8a2b5a391a95a5f4b8dbd902", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=b81e74ceb7229fbfdd9283ac671a23357b5e6cf1", "patch": "@@ -813,18 +813,6 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         self.inner.borrow_mut().commit(undo_snapshot);\n     }\n \n-    /// Executes `f` and commit the bindings.\n-    #[instrument(skip(self, f), level = \"debug\")]\n-    pub fn commit_unconditionally<R, F>(&self, f: F) -> R\n-    where\n-        F: FnOnce(&CombinedSnapshot<'a, 'tcx>) -> R,\n-    {\n-        let snapshot = self.start_snapshot();\n-        let r = f(&snapshot);\n-        self.commit_from(snapshot);\n-        r\n-    }\n-\n     /// Execute `f` and commit the bindings if closure `f` returns `Ok(_)`.\n     #[instrument(skip(self, f), level = \"debug\")]\n     pub fn commit_if_ok<T, E, F>(&self, f: F) -> Result<T, E>"}, {"sha": "0a61674517b6f60207d3b44700d9106a4cc347fd", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b81e74ceb7229fbfdd9283ac671a23357b5e6cf1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=b81e74ceb7229fbfdd9283ac671a23357b5e6cf1", "patch": "@@ -737,7 +737,7 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n         F: FnOnce(Ty<'tcx>) -> Vec<Adjustment<'tcx>>,\n         G: FnOnce(Ty<'tcx>) -> Vec<Adjustment<'tcx>>,\n     {\n-        self.commit_unconditionally(|snapshot| {\n+        self.commit_if_ok(|snapshot| {\n             let result = if let ty::FnPtr(fn_ty_b) = b.kind()\n                 && let (hir::Unsafety::Normal, hir::Unsafety::Unsafe) =\n                     (fn_ty_a.unsafety(), fn_ty_b.unsafety())"}]}