{"sha": "15d9ba0133ce0b35348e1c8367afe00aec841ffa", "node_id": "C_kwDOAAsO6NoAKDE1ZDliYTAxMzNjZTBiMzUzNDhlMWM4MzY3YWZlMDBhZWM4NDFmZmE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-23T06:18:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-23T06:18:07Z"}, "message": "Auto merge of #88587 - bdbai:fix/uwpio, r=joshtriplett\n\nFix WinUWP std compilation errors due to I/O safety\n\nI/O safety for Windows has landed in #87329. However, it does not cover UWP specific parts and prevents all UWP targets from building. See https://github.com/YtFlow/Maple/issues/18. This PR fixes these compile errors when building std for UWP targets.", "tree": {"sha": "d94106466c291c3381313d7db1b3a2a4ad09bbf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d94106466c291c3381313d7db1b3a2a4ad09bbf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d9ba0133ce0b35348e1c8367afe00aec841ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d9ba0133ce0b35348e1c8367afe00aec841ffa", "html_url": "https://github.com/rust-lang/rust/commit/15d9ba0133ce0b35348e1c8367afe00aec841ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d9ba0133ce0b35348e1c8367afe00aec841ffa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67365d64bcdfeae1334bf2ff49587c27d1c973f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/67365d64bcdfeae1334bf2ff49587c27d1c973f0", "html_url": "https://github.com/rust-lang/rust/commit/67365d64bcdfeae1334bf2ff49587c27d1c973f0"}, {"sha": "4e01157969eb5726f08fa31a898108654d813fdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e01157969eb5726f08fa31a898108654d813fdd", "html_url": "https://github.com/rust-lang/rust/commit/4e01157969eb5726f08fa31a898108654d813fdd"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "cc137771bb8d41bf79c4dd6efa7717e330901b1d", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15d9ba0133ce0b35348e1c8367afe00aec841ffa/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d9ba0133ce0b35348e1c8367afe00aec841ffa/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=15d9ba0133ce0b35348e1c8367afe00aec841ffa", "patch": "@@ -357,7 +357,7 @@ impl File {\n             let mut info: c::FILE_BASIC_INFO = mem::zeroed();\n             let size = mem::size_of_val(&info);\n             cvt(c::GetFileInformationByHandleEx(\n-                self.handle.raw(),\n+                self.handle.as_raw_handle(),\n                 c::FileBasicInfo,\n                 &mut info as *mut _ as *mut libc::c_void,\n                 size as c::DWORD,\n@@ -385,7 +385,7 @@ impl File {\n             let mut info: c::FILE_STANDARD_INFO = mem::zeroed();\n             let size = mem::size_of_val(&info);\n             cvt(c::GetFileInformationByHandleEx(\n-                self.handle.raw(),\n+                self.handle.as_raw_handle(),\n                 c::FileStandardInfo,\n                 &mut info as *mut _ as *mut libc::c_void,\n                 size as c::DWORD,"}, {"sha": "32550f796ec64d8ba818caf51d00c18100e3041a", "filename": "library/std/src/sys/windows/stdio_uwp.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/15d9ba0133ce0b35348e1c8367afe00aec841ffa/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d9ba0133ce0b35348e1c8367afe00aec841ffa/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs?ref=15d9ba0133ce0b35348e1c8367afe00aec841ffa", "patch": "@@ -2,6 +2,7 @@\n \n use crate::io;\n use crate::mem::ManuallyDrop;\n+use crate::os::windows::io::FromRawHandle;\n use crate::sys::c;\n use crate::sys::handle::Handle;\n \n@@ -25,7 +26,8 @@ pub fn get_handle(handle_id: c::DWORD) -> io::Result<c::HANDLE> {\n \n fn write(handle_id: c::DWORD, data: &[u8]) -> io::Result<usize> {\n     let handle = get_handle(handle_id)?;\n-    let handle = Handle::new(handle);\n+    // SAFETY: The handle returned from `get_handle` must be valid and non-null.\n+    let handle = unsafe { Handle::from_raw_handle(handle) };\n     ManuallyDrop::new(handle).write(data)\n }\n \n@@ -38,7 +40,8 @@ impl Stdin {\n impl io::Read for Stdin {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n         let handle = get_handle(c::STD_INPUT_HANDLE)?;\n-        let handle = Handle::new(handle);\n+        // SAFETY: The handle returned from `get_handle` must be valid and non-null.\n+        let handle = unsafe { Handle::from_raw_handle(handle) };\n         ManuallyDrop::new(handle).read(buf)\n     }\n }"}]}