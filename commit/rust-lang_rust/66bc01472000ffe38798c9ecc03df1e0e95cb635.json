{"sha": "66bc01472000ffe38798c9ecc03df1e0e95cb635", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YmMwMTQ3MjAwMGZmZTM4Nzk4YzllY2MwM2RmMWUwZTk1Y2I2MzU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-31T12:24:08Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-31T12:24:08Z"}, "message": "Revert \"Replace xfail-stageN with simply xfail-test\"\n\nThis reverts commit 574194f6bcfb90b9f8486002b83babc4c21208c0.", "tree": {"sha": "f5ff21ffb0fd9f5d0727ae4612b849074b99cfd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5ff21ffb0fd9f5d0727ae4612b849074b99cfd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66bc01472000ffe38798c9ecc03df1e0e95cb635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66bc01472000ffe38798c9ecc03df1e0e95cb635", "html_url": "https://github.com/rust-lang/rust/commit/66bc01472000ffe38798c9ecc03df1e0e95cb635", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66bc01472000ffe38798c9ecc03df1e0e95cb635/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "574194f6bcfb90b9f8486002b83babc4c21208c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/574194f6bcfb90b9f8486002b83babc4c21208c0", "html_url": "https://github.com/rust-lang/rust/commit/574194f6bcfb90b9f8486002b83babc4c21208c0"}], "stats": {"total": 160, "additions": 119, "deletions": 41}, "files": [{"sha": "21ed07d34b7437b728774a982dfbc03679e1c71f", "filename": "mk/pp.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/mk%2Fpp.mk", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/mk%2Fpp.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fpp.mk?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -9,7 +9,7 @@ else\n               $(wildcard $(S)src/fuzzer/*.rs)\n \n   PP_INPUTS_FILTERED = $(shell echo $(PP_INPUTS) | xargs grep -L \\\n-                       \"no-reformat\\|xfail-pretty\\|xfail-test\")\n+                       \"no-reformat\\|xfail-pretty\\|xfail-stage2\")\n endif\n \n reformat: $(SREQ1)"}, {"sha": "3e94bdfd9ebca6c7716b56e7e7944113fde72dc1", "filename": "src/test/compile-fail/bad-type-env-capture.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // error-pattern: attempted dynamic environment-capture\n fn foo<T>() {\n     obj bar(b: T) { }"}, {"sha": "78c8f64ee9c1f603f7bd155194d2cd414ff4730c", "filename": "src/test/compile-fail/constrained-type-missing-check.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fconstrained-type-missing-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fconstrained-type-missing-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconstrained-type-missing-check.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,5 +1,7 @@\n // -*- rust -*-\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // error-pattern:Unsatisfied precondition\n \n tag list { cons(int, @list); nil; }"}, {"sha": "a40d78b17a9ee355664871dcf4c28df297641041", "filename": "src/test/compile-fail/dead-code-be.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n \n // error-pattern: dead"}, {"sha": "3200a6825ac861280b516112f9debeb1355e26e1", "filename": "src/test/compile-fail/dead-code-ret.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n \n // error-pattern: dead"}, {"sha": "06592b1e96310cde38d7abce3e4add98461013fe", "filename": "src/test/compile-fail/infinite-tag-type-recursion.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n \n // error-pattern: tag of infinite size"}, {"sha": "d953a903c39b2192f82e1ab341464e0830a91fbe", "filename": "src/test/compiletest/header.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fheader.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -59,9 +59,12 @@ fn is_test_ignored(config: &config, testfile: &istr) -> bool {\n     let found = false;\n     for each ln: istr in iter_header(testfile) {\n         // FIXME: Can't return or break from iterator\n-        found = found || parse_name_directive(ln, ~\"xfail-test\");\n+        found = found\n+            || parse_name_directive(ln, ~\"xfail-\"\n+                                    + config.stage_id);\n         if (config.mode == common::mode_pretty) {\n-            found = found || parse_name_directive(ln, ~\"xfail-pretty\");\n+            found = found\n+                || parse_name_directive(ln, ~\"xfail-pretty\");\n         }\n     }\n     ret found;"}, {"sha": "d78e29de7b43f3ccd8f0fe42219b70fe21b3e66a", "filename": "src/test/run-fail/fail-parens.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-fail%2Ffail-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-fail%2Ffail-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-parens.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // Fail statements without arguments need to be disambiguated in\n // certain positions\n // error-pattern:explicit-failure"}, {"sha": "5e551eca127f123e3cdf4ec33546030b98719603", "filename": "src/test/run-fail/task-comm-14.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n io fn main() {\n     let port<int> po = port();\n "}, {"sha": "9c77d5a9c4e533b4b6eaaccbb4aa5c2aa311557f", "filename": "src/test/run-fail/trivial-message2.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n \n /*\n   This program should hang on the po |> r line."}, {"sha": "6eb011484db68ef785af8551398851d916c05244", "filename": "src/test/run-pass/acyclic-unwind.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n \n use std;"}, {"sha": "62e3f209c6802e82fdd019897d55bf51d11c5527", "filename": "src/test/run-pass/alt-type-simple.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-type-simple.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n fn altsimple(any x) {\n   alt type (f) {\n     case (int i) { print(\"int\"); }"}, {"sha": "5ce20410eefed08ba038e47fbaa596983b2388e9", "filename": "src/test/run-pass/anon-obj-no-inner-obj.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fanon-obj-no-inner-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fanon-obj-no-inner-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-obj-no-inner-obj.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-//xfail-test\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n use std;\n \n // This is failing not because it's an anonymous object from nothing"}, {"sha": "e9cbdaaec1f41754ff21af02280af8f200108970", "filename": "src/test/run-pass/anon-obj-refer-to-parallel-method.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fanon-obj-refer-to-parallel-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fanon-obj-refer-to-parallel-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-obj-refer-to-parallel-method.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-//xfail-test\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n \n // Test case for issue #822.\n fn main() {"}, {"sha": "c63f8ac585a479047835c961e5fdba20f066e20f", "filename": "src/test/run-pass/anon-objs-with-fields.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fanon-objs-with-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fanon-objs-with-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-objs-with-fields.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-//xfail-test\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n use std;\n \n fn main() {"}, {"sha": "5dd321a5ef22d352f49d2c8783ac0a8f2bf0b3b1", "filename": "src/test/run-pass/bind-native.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fbind-native.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fbind-native.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-native.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -3,7 +3,9 @@ Can we bind native things?\n */\n \n //xfail-stage0\n-//xfail-test\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n \n native \"rust\" mod rustrt {\n     fn task_yield();"}, {"sha": "1feed8042e70d18f83a157f296f1dd0c3545a3dc", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,5 +1,7 @@\n //xfail-stage0\n-//xfail-test\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n \n use std;\n import std::task;"}, {"sha": "c9531a08dc530c20d9cb868f7340eb04a938b0d2", "filename": "src/test/run-pass/first-class-method.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ffirst-class-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ffirst-class-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffirst-class-method.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n \n // Test case for issue #758.\n obj foo() { fn f() { } }"}, {"sha": "f5b7e5ad6b238c220233674de9368620c5b2c07c", "filename": "src/test/run-pass/infinite-loops.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfinite-loops.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -2,7 +2,9 @@\n   A simple way to make sure threading works. This should use all the\n   CPU cycles an any machines that we're likely to see for a while.\n */\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n \n use std;\n import std::task::join;"}, {"sha": "8aca8f2b21dfc70ffe6cb69cea287a5ff72fe2d3", "filename": "src/test/run-pass/interface-narrowing.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Finterface-narrowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Finterface-narrowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finterface-narrowing.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-//xfail-test\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n \n // Test case for issue #115.\n type base ="}, {"sha": "3055792c0d46c6887e7e9b9a5ee7595f7ceb0084", "filename": "src/test/run-pass/mlist-cycle.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n use std;\n "}, {"sha": "9537942a4eadcbd2989714561318fe29be6550a2", "filename": "src/test/run-pass/native-mod.rc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-mod.rc?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n \n native mod libc = target_libc {"}, {"sha": "7a4c20e6fbbb25859e4c3a265a3c727869d981a0", "filename": "src/test/run-pass/native.rc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fnative.rc", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fnative.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative.rc?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n \n native \"rust\" mod rustrt {"}, {"sha": "42c80b4a8834f460e73199701a131208f46e93f4", "filename": "src/test/run-pass/obj-as.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fobj-as.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fobj-as.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobj-as.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n obj big() {\n     fn one() -> int { ret 1; }\n     fn two() -> int { ret 2; }"}, {"sha": "4fc67429e2c50336b8343c3e28ea1f8ada6fa880", "filename": "src/test/run-pass/preempt.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fpreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fpreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpreempt.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // This checks that preemption works.\n \n fn starve_main(alive: chan<int>) {"}, {"sha": "f2039013fd04d3602a0df7590a0a45c02604da6c", "filename": "src/test/run-pass/sio-client.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-client.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-client.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-client.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n use std;\n import std::sio;\n import std::task;"}, {"sha": "dd77bb9deddc1a1a4a90c84764cc7b09e52de2e7", "filename": "src/test/run-pass/sio-ctx.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-ctx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-ctx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-ctx.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,5 +1,7 @@\n // Seems to hang for long periods, probably with RUST_THREADS > 1. Issue #810\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n \n use std;\n import std::sio;"}, {"sha": "688aec7a40f41f440025e8f42e3367ae053e942c", "filename": "src/test/run-pass/sio-read.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-read.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n use std;\n import std::sio;\n import std::task;"}, {"sha": "a6ff53598ca94001197b3e74cf0c5387a18b534b", "filename": "src/test/run-pass/sio-srv.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-srv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-srv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-srv.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n use std;\n import std::sio;\n import std::net;"}, {"sha": "bdce70b97a1475df20ea24931345e147e3742051", "filename": "src/test/run-pass/sio-write.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsio-write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-write.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n use std;\n import std::sio;\n import std::task;"}, {"sha": "27c4a302b7ad7998efa431db729857db0122c455", "filename": "src/test/run-pass/syntax-extension-shell.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n fn main() {\n   auto s = #shell { uname -a };\n   log s;"}, {"sha": "acaa2b5f9b766cf2079f2e4d37df9d76222b5d07", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,5 +1,5 @@\n // Temporarily xfailing, because something is wrong.\n-// xfail-test\n+// xfail-stage2\n use std;\n \n import std::comm;"}, {"sha": "391576002637ea4daa90f5a2a19d5910e382aba3", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,7 +1,9 @@\n // FIXME: this test is xfailed until sending strings is legal again.\n \n //xfail-stage0\n-//xfail-test\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n \n use std;\n import std::task;"}, {"sha": "2a46121b9746b2b14c223e95bbd7718ad01c04ef", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage3\n use std;\n import std::comm;\n import std::task;"}, {"sha": "4dfc143991ca3e6a6da132eedfb2fb45b8eb67a7", "filename": "src/test/run-pass/task-comm-2.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,5 +1,7 @@\n // Broken under win\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n \n use std;\n "}, {"sha": "0e9116b65d3c44681dc1b808245b195247cf1d25", "filename": "src/test/run-pass/task-compare.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-compare.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -4,7 +4,9 @@\n \n // FIXME: This won't work until we can compare resources\n // xfail-stage0\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n \n use std;\n import std::task;"}, {"sha": "cfed8c136ab71ee7299a805d0d196a4351245ec5", "filename": "src/test/run-pass/task-killjoin.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n \n // Create a task that is supervised by another task,\n // join the supervised task from the supervising task,"}, {"sha": "25020ec3ed083a3a93be69b217cb313228293506", "filename": "src/test/run-pass/type-sizes.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-sizes.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n import std::sys::rustrt::size_of;\n use std;\n "}, {"sha": "2c4539e3534f3900065294d8e2a59a09228061d0", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n use std;\n use libc;\n use zed(name = \"std\");"}, {"sha": "994003d1fe22231f4b1b3e40a9fe0307bb427549", "filename": "src/test/run-pass/user.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fuser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fuser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuser.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n // -*- rust -*-\n \n use std (name = \"std\","}, {"sha": "f734059466f57dee7636368d50d5c8b3531d544e", "filename": "src/test/run-pass/vec-slice.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fvec-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc01472000ffe38798c9ecc03df1e0e95cb635/src%2Ftest%2Frun-pass%2Fvec-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-slice.rs?ref=66bc01472000ffe38798c9ecc03df1e0e95cb635", "patch": "@@ -1,4 +1,6 @@\n-// xfail-test\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n fn main() {\n   let vec<int> v = [1,2,3,4,5];\n   auto v2 = v.(1,2);"}]}