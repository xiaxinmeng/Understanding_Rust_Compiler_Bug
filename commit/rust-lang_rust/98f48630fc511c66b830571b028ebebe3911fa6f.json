{"sha": "98f48630fc511c66b830571b028ebebe3911fa6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZjQ4NjMwZmM1MTFjNjZiODMwNTcxYjAyOGViZWJlMzkxMWZhNmY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-25T17:37:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-25T17:37:23Z"}, "message": "rustdoc: Inline items from foreign mods\n\nThese were all just previously skipped.\n\nCloses #15648", "tree": {"sha": "f1a97c6c23e2a8b91aa2c55d1c50d4f9c8b98ce0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1a97c6c23e2a8b91aa2c55d1c50d4f9c8b98ce0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98f48630fc511c66b830571b028ebebe3911fa6f", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98f48630fc511c66b830571b028ebebe3911fa6f", "html_url": "https://github.com/rust-lang/rust/commit/98f48630fc511c66b830571b028ebebe3911fa6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98f48630fc511c66b830571b028ebebe3911fa6f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d7eb0598a9147f0ec92b1f333360e5e912ab546", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7eb0598a9147f0ec92b1f333360e5e912ab546", "html_url": "https://github.com/rust-lang/rust/commit/8d7eb0598a9147f0ec92b1f333360e5e912ab546"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "2f7d766c28fa87c1e086f91fe52d02e278cdb83d", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/98f48630fc511c66b830571b028ebebe3911fa6f/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98f48630fc511c66b830571b028ebebe3911fa6f/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=98f48630fc511c66b830571b028ebebe3911fa6f", "patch": "@@ -364,27 +364,33 @@ fn build_impl(cx: &core::DocContext,\n fn build_module(cx: &core::DocContext, tcx: &ty::ctxt,\n                 did: ast::DefId) -> clean::Module {\n     let mut items = Vec::new();\n+    fill_in(cx, tcx, did, &mut items);\n+    return clean::Module {\n+        items: items,\n+        is_crate: false,\n+    };\n \n     // FIXME: this doesn't handle reexports inside the module itself.\n     //        Should they be handled?\n-    csearch::each_child_of_item(&tcx.sess.cstore, did, |def, _, vis| {\n-        if vis != ast::Public { return }\n-        match def {\n-            decoder::DlDef(def) => {\n-                match try_inline_def(cx, tcx, def) {\n-                    Some(i) => items.extend(i.move_iter()),\n-                    None => {}\n+    fn fill_in(cx: &core::DocContext, tcx: &ty::ctxt, did: ast::DefId,\n+               items: &mut Vec<clean::Item>) {\n+        csearch::each_child_of_item(&tcx.sess.cstore, did, |def, _, vis| {\n+            match def {\n+                decoder::DlDef(def::DefForeignMod(did)) => {\n+                    fill_in(cx, tcx, did, items);\n+                }\n+                decoder::DlDef(def) if vis == ast::Public => {\n+                    match try_inline_def(cx, tcx, def) {\n+                        Some(i) => items.extend(i.move_iter()),\n+                        None => {}\n+                    }\n                 }\n+                decoder::DlDef(..) => {}\n+                // All impls were inlined above\n+                decoder::DlImpl(..) => {}\n+                decoder::DlField => fail!(\"unimplemented field\"),\n             }\n-            // All impls were inlined above\n-            decoder::DlImpl(..) => {}\n-            decoder::DlField => fail!(\"unimplemented field\"),\n-        }\n-    });\n-\n-    clean::Module {\n-        items: items,\n-        is_crate: false,\n+        });\n     }\n }\n "}]}