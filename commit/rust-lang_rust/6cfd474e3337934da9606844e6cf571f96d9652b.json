{"sha": "6cfd474e3337934da9606844e6cf571f96d9652b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZmQ0NzRlMzMzNzkzNGRhOTYwNjg0NGU2Y2Y1NzFmOTZkOTY1MmI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-03T23:38:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-03T23:38:44Z"}, "message": "Rollup merge of #62240 - arielb1:resolve-wf-fields, r=pnkfelix\n\nwfcheck: resolve the type-vars in `AdtField` types\n\nNormalization can leave some type-vars unresolved in its return type.\nMake sure to resolve them so we have an infcx-independent type that can\nbe used with `needs_drop`.\n\nFixes #61402.\n\nCloses #62212 - this PR fixes the root cause.", "tree": {"sha": "50f291bba07aadff790bbf6d17ce8010cabc101f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f291bba07aadff790bbf6d17ce8010cabc101f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cfd474e3337934da9606844e6cf571f96d9652b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdHTyECRBK7hj4Ov3rIwAAdHIIAEsdcOBfj5q9sfOQ3QNjd0PE\nVEAygJy+gI/9NzkksXFottBOIIUyznbGzv/b5E2DxQ2JgxV5+zH6nILmmSUeq4o7\nALho0H46Kyetsm19FjmgV7xx3IqUn8PU2wMD69ZqZJ6vvTROXFPyjs2+7/vjBXNf\nKrzSgjJqVYCjdPL5Q/qaGPrUpJ2v3v8l9/tgBskj2rNTORnhRwqTZkspPsNR6Cqp\n5GOZb64tDJZqyC2vEia0pM2zCY/i+bYxWWE88jcZyO1Qe8ITZCCr6R1M4AaVzDAV\n7LgV4FxyVoo9gSJzmcm/9l2NQdXAxVpDcGvyeimlK0ahRFTgoweIsSkInfo2PsE=\n=MVot\n-----END PGP SIGNATURE-----\n", "payload": "tree 50f291bba07aadff790bbf6d17ce8010cabc101f\nparent 740d5bd1575b52d501d3431a82bb326469d93b00\nparent a02d4364e47724ee342c2fdac09a38877c20a984\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562197124 +0200\ncommitter GitHub <noreply@github.com> 1562197124 +0200\n\nRollup merge of #62240 - arielb1:resolve-wf-fields, r=pnkfelix\n\nwfcheck: resolve the type-vars in `AdtField` types\n\nNormalization can leave some type-vars unresolved in its return type.\nMake sure to resolve them so we have an infcx-independent type that can\nbe used with `needs_drop`.\n\nFixes #61402.\n\nCloses #62212 - this PR fixes the root cause.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfd474e3337934da9606844e6cf571f96d9652b", "html_url": "https://github.com/rust-lang/rust/commit/6cfd474e3337934da9606844e6cf571f96d9652b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cfd474e3337934da9606844e6cf571f96d9652b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "740d5bd1575b52d501d3431a82bb326469d93b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/740d5bd1575b52d501d3431a82bb326469d93b00", "html_url": "https://github.com/rust-lang/rust/commit/740d5bd1575b52d501d3431a82bb326469d93b00"}, {"sha": "a02d4364e47724ee342c2fdac09a38877c20a984", "url": "https://api.github.com/repos/rust-lang/rust/commits/a02d4364e47724ee342c2fdac09a38877c20a984", "html_url": "https://github.com/rust-lang/rust/commit/a02d4364e47724ee342c2fdac09a38877c20a984"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "3aa144ca35282ad1e5a0f99e70da5e1e280a858a", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cfd474e3337934da9606844e6cf571f96d9652b/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cfd474e3337934da9606844e6cf571f96d9652b/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=6cfd474e3337934da9606844e6cf571f96d9652b", "patch": "@@ -1104,6 +1104,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let field_ty = self.tcx.type_of(self.tcx.hir().local_def_id_from_hir_id(field.hir_id));\n             let field_ty = self.normalize_associated_types_in(field.span,\n                                                               &field_ty);\n+            let field_ty = self.resolve_vars_if_possible(&field_ty);\n+            debug!(\"non_enum_variant: type of field {:?} is {:?}\", field, field_ty);\n             AdtField { ty: field_ty, span: field.span }\n         })\n         .collect();"}, {"sha": "6028b8f5ab4918c9eaa58a15319d02146b67864c", "filename": "src/test/run-pass/packed/packed-with-inference-vars-issue-61402.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6cfd474e3337934da9606844e6cf571f96d9652b/src%2Ftest%2Frun-pass%2Fpacked%2Fpacked-with-inference-vars-issue-61402.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cfd474e3337934da9606844e6cf571f96d9652b/src%2Ftest%2Frun-pass%2Fpacked%2Fpacked-with-inference-vars-issue-61402.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked%2Fpacked-with-inference-vars-issue-61402.rs?ref=6cfd474e3337934da9606844e6cf571f96d9652b", "patch": "@@ -0,0 +1,21 @@\n+// If a struct is packed and its last field has drop glue, then that\n+// field needs to be Sized (to allow it to be destroyed out-of-place).\n+//\n+// This is checked by the compiler during wfcheck. That check used\n+// to have problems with associated types in the last field - test\n+// that this doesn't ICE.\n+\n+#![allow(unused_imports, dead_code)]\n+\n+pub struct S;\n+\n+pub trait Trait<R> { type Assoc; }\n+\n+impl<X> Trait<X> for S { type Assoc = X; }\n+\n+#[repr(C, packed)]\n+struct PackedAssocSized {\n+    pos: Box<<S as Trait<usize>>::Assoc>,\n+}\n+\n+fn main() { println!(\"Hello, world!\"); }"}]}