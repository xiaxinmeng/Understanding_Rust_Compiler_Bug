{"sha": "89044a908ed602ae3dee74905866cffd63c164b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDQ0YTkwOGVkNjAyYWUzZGVlNzQ5MDU4NjZjZmZkNjNjMTY0YjM=", "commit": {"author": {"name": "Martin Finkel", "email": "finkel2804@gmail.com", "date": "2019-08-07T15:49:15Z"}, "committer": {"name": "Martin Finkel", "email": "finkel2804@gmail.com", "date": "2019-08-08T16:25:47Z"}, "message": "move store lib probing code to librustc_codegen_ssa", "tree": {"sha": "dedc3bee8fa202433f9f6496f3c644b087a0a596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dedc3bee8fa202433f9f6496f3c644b087a0a596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89044a908ed602ae3dee74905866cffd63c164b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89044a908ed602ae3dee74905866cffd63c164b3", "html_url": "https://github.com/rust-lang/rust/commit/89044a908ed602ae3dee74905866cffd63c164b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89044a908ed602ae3dee74905866cffd63c164b3/comments", "author": {"login": "mfkl", "id": 3928834, "node_id": "MDQ6VXNlcjM5Mjg4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3928834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfkl", "html_url": "https://github.com/mfkl", "followers_url": "https://api.github.com/users/mfkl/followers", "following_url": "https://api.github.com/users/mfkl/following{/other_user}", "gists_url": "https://api.github.com/users/mfkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfkl/subscriptions", "organizations_url": "https://api.github.com/users/mfkl/orgs", "repos_url": "https://api.github.com/users/mfkl/repos", "events_url": "https://api.github.com/users/mfkl/events{/privacy}", "received_events_url": "https://api.github.com/users/mfkl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mfkl", "id": 3928834, "node_id": "MDQ6VXNlcjM5Mjg4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3928834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfkl", "html_url": "https://github.com/mfkl", "followers_url": "https://api.github.com/users/mfkl/followers", "following_url": "https://api.github.com/users/mfkl/following{/other_user}", "gists_url": "https://api.github.com/users/mfkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfkl/subscriptions", "organizations_url": "https://api.github.com/users/mfkl/orgs", "repos_url": "https://api.github.com/users/mfkl/repos", "events_url": "https://api.github.com/users/mfkl/events{/privacy}", "received_events_url": "https://api.github.com/users/mfkl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3d8b6817ef0369915fb0dc5f2f519e942f8d67f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d8b6817ef0369915fb0dc5f2f519e942f8d67f", "html_url": "https://github.com/rust-lang/rust/commit/e3d8b6817ef0369915fb0dc5f2f519e942f8d67f"}], "stats": {"total": 55, "additions": 14, "deletions": 41}, "files": [{"sha": "c08d7444d14eae91f12218f5930c78d51828baef", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89044a908ed602ae3dee74905866cffd63c164b3/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/89044a908ed602ae3dee74905866cffd63c164b3/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=89044a908ed602ae3dee74905866cffd63c164b3", "patch": "@@ -3126,7 +3126,6 @@ name = \"rustc_target\"\n version = \"0.0.0\"\n dependencies = [\n  \"bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cc 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_data_structures 0.0.0\",\n  \"serialize 0.0.0\","}, {"sha": "ea8e55145fa62fc08a18e32d9b998fe88f63e18b", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=89044a908ed602ae3dee74905866cffd63c164b3", "patch": "@@ -1027,6 +1027,20 @@ fn link_args<'a, B: ArchiveBuilder<'a>>(cmd: &mut dyn Linker,\n     let t = &sess.target.target;\n \n     cmd.include_path(&fix_windows_verbatim_for_gcc(&lib_path));\n+\n+    if t.linker_flavor == LinkerFlavor::Msvc && t.target_vendor == \"uwp\" {\n+        let link_tool = windows_registry::find_tool(\"x86_64-pc-windows-msvc\", \"link.exe\")\n+            .expect(\"no path found for link.exe\");\n+\n+        let original_path = link_tool.path();\n+        let root_lib_path = original_path.ancestors().skip(4).next().unwrap();\n+        if t.arch == \"aarch64\".to_string() {\n+            cmd.include_path(&root_lib_path.join(format!(\"lib\\\\arm64\\\\store\")));\n+        } else {\n+            cmd.include_path(&root_lib_path.join(format!(\"lib\\\\{}\\\\store\", t.arch)));\n+        }\n+    }\n+    \n     for obj in codegen_results.modules.iter().filter_map(|m| m.object.as_ref()) {\n         cmd.add_object(obj);\n     }"}, {"sha": "cab1e0e01371d73c8a3ddc4d8e3deb37d20ae1ee", "filename": "src/librustc_target/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FCargo.toml?ref=89044a908ed602ae3dee74905866cffd63c164b3", "patch": "@@ -11,7 +11,6 @@ path = \"lib.rs\"\n [dependencies]\n bitflags = \"1.0\"\n log = \"0.4\"\n-cc = \"1.0.1\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "5d8b829f2ab711c9ee25ed7ab0ebe399de205946", "filename": "src/librustc_target/spec/aarch64_uwp_windows_msvc.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs?ref=89044a908ed602ae3dee74905866cffd63c164b3", "patch": "@@ -1,5 +1,4 @@\n use crate::spec::{LinkerFlavor, Target, TargetResult, PanicStrategy};\n-use cc::windows_registry;\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_uwp_msvc_base::opts();\n@@ -9,18 +8,6 @@ pub fn target() -> TargetResult {\n     // FIXME: this shouldn't be panic=abort, it should be panic=unwind\n     base.panic_strategy = PanicStrategy::Abort;\n \n-    let link_tool = windows_registry::find_tool(\"x86_64-pc-windows-msvc\", \"link.exe\")\n-        .expect(\"no path found for link.exe\");\n-\n-    let original_path = link_tool.path();\n-    let lib_root_path = original_path.ancestors().skip(4).next().unwrap().display();\n-\n-    base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n-        .push(format!(\"{}{}{}\",\n-            \"/LIBPATH:\".to_string(),\n-            lib_root_path,\n-            \"lib\\\\arm64\\\\store\".to_string()));\n-\n     Ok(Target {\n         llvm_target: \"aarch64-pc-windows-msvc\".to_string(),\n         target_endian: \"little\".to_string(),"}, {"sha": "5e8e8c2a4149c6eb242bb254686dfe8f5b8106e7", "filename": "src/librustc_target/spec/i686_uwp_windows_msvc.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs?ref=89044a908ed602ae3dee74905866cffd63c164b3", "patch": "@@ -1,24 +1,11 @@\n use crate::spec::{LinkerFlavor, Target, TargetResult};\n-use cc::windows_registry;\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_uwp_msvc_base::opts();\n     base.cpu = \"pentium4\".to_string();\n     base.max_atomic_width = Some(64);\n     base.has_elf_tls = true;\n \n-    let link_tool = windows_registry::find_tool(\"x86_64-pc-windows-msvc\", \"link.exe\")\n-        .expect(\"no path found for link.exe\");\n-\n-    let original_path = link_tool.path();\n-    let lib_root_path = original_path.ancestors().skip(4).next().unwrap().display();\n-\n-    base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n-            .push(format!(\"{}{}{}\",\n-            \"/LIBPATH:\".to_string(),\n-            lib_root_path,\n-            \"lib\\\\x86\\\\store\".to_string()));\n-\n     Ok(Target {\n         llvm_target: \"i686-pc-windows-msvc\".to_string(),\n         target_endian: \"little\".to_string(),"}, {"sha": "40dd52c159151f5c4484fedd6dfa5dfe244b6112", "filename": "src/librustc_target/spec/x86_64_uwp_windows_msvc.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89044a908ed602ae3dee74905866cffd63c164b3/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs?ref=89044a908ed602ae3dee74905866cffd63c164b3", "patch": "@@ -1,24 +1,11 @@\n use crate::spec::{LinkerFlavor, Target, TargetResult};\n-use cc::windows_registry;\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_uwp_msvc_base::opts();\n     base.cpu = \"x86-64\".to_string();\n     base.max_atomic_width = Some(64);\n     base.has_elf_tls = true;\n \n-    let link_tool = windows_registry::find_tool(\"x86_64-pc-windows-msvc\", \"link.exe\")\n-        .expect(\"no path found for link.exe\");\n-\n-    let original_path = link_tool.path();\n-    let lib_root_path = original_path.ancestors().skip(4).next().unwrap().display();\n-\n-    base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n-            .push(format!(\"{}{}{}\",\n-            \"/LIBPATH:\".to_string(),\n-            lib_root_path,\n-            \"lib\\\\x64\\\\store\".to_string()));\n-\n     Ok(Target {\n         llvm_target: \"x86_64-pc-windows-msvc\".to_string(),\n         target_endian: \"little\".to_string(),"}]}