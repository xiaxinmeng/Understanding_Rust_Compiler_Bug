{"sha": "554145609484d111f6ca3acaca644ae881c20a10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NDE0NTYwOTQ4NGQxMTFmNmNhM2FjYWNhNjQ0YWU4ODFjMjBhMTA=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-10-05T14:47:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-05T14:47:52Z"}, "message": "Hint doc use convert::identity relative link", "tree": {"sha": "e883ef25c655fab65eb7b03a0cc0bdea8e031ef5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e883ef25c655fab65eb7b03a0cc0bdea8e031ef5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554145609484d111f6ca3acaca644ae881c20a10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfezIYCRBK7hj4Ov3rIwAAdHIIADF2rZtOoG0hN71k3CaQt3pl\nIZJlHTNlvHjbE74Pd4c0T8Ak56zOi2OHp9s7TUE/Kdo5F5FHnpdpJ0idr+bqb4jS\nfWkZpyZbX2ZsL8RUlEQXvFgkFGq51btQPV0sGA0D1bdOrDW6udwX7R4KGvkUbHEO\nh34iq+fHUDFQMGjN5vgYshFyHU2IPggs1YYUKj/Y9SwL/sXU4RfY4NUw9PGaaPBQ\nI4lNEvplUlmNUqUHVuwfw/GPqUY5pOh2MGbhNKUHzIPvTzOBTYdEFvCJmuNtm/8u\n6mnxVzlkY3hdFIojw24wnNGf0hX9TfafU3v+iukq1zGdkt3/24V1Ewqmy3E6K7I=\n=tj4q\n-----END PGP SIGNATURE-----\n", "payload": "tree e883ef25c655fab65eb7b03a0cc0bdea8e031ef5\nparent d890e64dff3fd2c28635c60cc9315648dd46c8f7\nauthor Ivan Tham <pickfire@riseup.net> 1601909272 +0800\ncommitter GitHub <noreply@github.com> 1601909272 +0800\n\nHint doc use convert::identity relative link"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554145609484d111f6ca3acaca644ae881c20a10", "html_url": "https://github.com/rust-lang/rust/commit/554145609484d111f6ca3acaca644ae881c20a10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554145609484d111f6ca3acaca644ae881c20a10/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d890e64dff3fd2c28635c60cc9315648dd46c8f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d890e64dff3fd2c28635c60cc9315648dd46c8f7", "html_url": "https://github.com/rust-lang/rust/commit/d890e64dff3fd2c28635c60cc9315648dd46c8f7"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5d8137f91ee060286a27bf11a2f1f156d94119ce", "filename": "library/core/src/hint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/554145609484d111f6ca3acaca644ae881c20a10/library%2Fcore%2Fsrc%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554145609484d111f6ca3acaca644ae881c20a10/library%2Fcore%2Fsrc%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhint.rs?ref=554145609484d111f6ca3acaca644ae881c20a10", "patch": "@@ -98,8 +98,6 @@ pub fn spin_loop() {\n /// An identity function that *__hints__* to the compiler to be maximally pessimistic about what\n /// `black_box` could do.\n ///\n-/// [`std::convert::identity`]: https://doc.rust-lang.org/core/convert/fn.identity.html\n-///\n /// Unlike [`std::convert::identity`], a Rust compiler is encouraged to assume that `black_box` can\n /// use `dummy` in any possible valid way that Rust code is allowed to without introducing undefined\n /// behavior in the calling code. This property makes `black_box` useful for writing code in which\n@@ -108,6 +106,8 @@ pub fn spin_loop() {\n /// Note however, that `black_box` is only (and can only be) provided on a \"best-effort\" basis. The\n /// extent to which it can block optimisations may vary depending upon the platform and code-gen\n /// backend used. Programs cannot rely on `black_box` for *correctness* in any way.\n+///\n+/// [`std::convert::identity`]: ../convert/fn.identity.html\n #[cfg_attr(not(miri), inline)]\n #[cfg_attr(miri, inline(never))]\n #[unstable(feature = \"test\", issue = \"50297\")]"}]}