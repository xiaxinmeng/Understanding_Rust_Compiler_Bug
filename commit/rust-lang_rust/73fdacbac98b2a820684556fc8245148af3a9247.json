{"sha": "73fdacbac98b2a820684556fc8245148af3a9247", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZmRhY2JhYzk4YjJhODIwNjg0NTU2ZmM4MjQ1MTQ4YWYzYTkyNDc=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-15T21:51:39Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-18T16:39:47Z"}, "message": "std::to_bytes: Implement IterBytes on 1- to 8-tuples", "tree": {"sha": "2c6184032073ef7c3aca9f3e20624548a6e22717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c6184032073ef7c3aca9f3e20624548a6e22717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73fdacbac98b2a820684556fc8245148af3a9247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73fdacbac98b2a820684556fc8245148af3a9247", "html_url": "https://github.com/rust-lang/rust/commit/73fdacbac98b2a820684556fc8245148af3a9247", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73fdacbac98b2a820684556fc8245148af3a9247/comments", "author": null, "committer": null, "parents": [{"sha": "6066118b2988fee1b758d542cee18ffe7a84acab", "url": "https://api.github.com/repos/rust-lang/rust/commits/6066118b2988fee1b758d542cee18ffe7a84acab", "html_url": "https://github.com/rust-lang/rust/commit/6066118b2988fee1b758d542cee18ffe7a84acab"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "198c09964bb6ff274354d4f8b559afeaaaf5a1ac", "filename": "src/libstd/to_bytes.rs", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/73fdacbac98b2a820684556fc8245148af3a9247/src%2Flibstd%2Fto_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73fdacbac98b2a820684556fc8245148af3a9247/src%2Flibstd%2Fto_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fto_bytes.rs?ref=73fdacbac98b2a820684556fc8245148af3a9247", "patch": "@@ -235,29 +235,38 @@ impl<'self,A:IterBytes> IterBytes for &'self [A] {\n     }\n }\n \n-impl<A:IterBytes,B:IterBytes> IterBytes for (A,B) {\n-  #[inline]\n-  fn iter_bytes(&self, lsb0: bool, f: Cb) -> bool {\n-    match *self {\n-      (ref a, ref b) => { a.iter_bytes(lsb0, |b| f(b)) &&\n-                          b.iter_bytes(lsb0, |b| f(b)) }\n-    }\n-  }\n-}\n-\n-impl<A:IterBytes,B:IterBytes,C:IterBytes> IterBytes for (A,B,C) {\n-  #[inline]\n-  fn iter_bytes(&self, lsb0: bool, f: Cb) -> bool {\n-    match *self {\n-      (ref a, ref b, ref c) => {\n-        a.iter_bytes(lsb0, |b| f(b)) &&\n-        b.iter_bytes(lsb0, |b| f(b)) &&\n-        c.iter_bytes(lsb0, |b| f(b))\n-      }\n+impl<A: IterBytes> IterBytes for (A, ) {\n+    fn iter_bytes(&self, lsb0: bool, f: Cb) -> bool {\n+        match *self {\n+            (ref a, ) => a.iter_bytes(lsb0, |b| f(b))\n+        }\n     }\n-  }\n }\n \n+macro_rules! iter_bytes_tuple(\n+    ($($A:ident),+) => (\n+        impl<$($A: IterBytes),+> IterBytes for ($($A),+) {\n+            fn iter_bytes(&self, lsb0: bool, f: Cb) -> bool {\n+                match *self {\n+                    ($(ref $A),+) => {\n+                        $(\n+                            $A .iter_bytes(lsb0, |b| f(b))\n+                        )&&+\n+                    }\n+                }\n+            }\n+        }\n+    )\n+)\n+\n+iter_bytes_tuple!(A, B)\n+iter_bytes_tuple!(A, B, C)\n+iter_bytes_tuple!(A, B, C, D)\n+iter_bytes_tuple!(A, B, C, D, E)\n+iter_bytes_tuple!(A, B, C, D, E, F)\n+iter_bytes_tuple!(A, B, C, D, E, F, G)\n+iter_bytes_tuple!(A, B, C, D, E, F, G, H)\n+\n impl<A:IterBytes> IterBytes for ~[A] {\n     #[inline]\n     fn iter_bytes(&self, lsb0: bool, f: Cb) -> bool {"}]}