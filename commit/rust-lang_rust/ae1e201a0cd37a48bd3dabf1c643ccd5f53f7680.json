{"sha": "ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMWUyMDFhMGNkMzdhNDhiZDNkYWJmMWM2NDNjY2Q1ZjUzZjc2ODA=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-08-05T15:50:44Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-08-16T15:11:18Z"}, "message": "Add a comment on the usage of Layout::new::<RcBox<()>>()", "tree": {"sha": "48d1d3b2e6dd88c8720547c5113d2d98158047d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48d1d3b2e6dd88c8720547c5113d2d98158047d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680", "html_url": "https://github.com/rust-lang/rust/commit/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78264f5e3c94592ff64aab831499f48497083a91", "url": "https://api.github.com/repos/rust-lang/rust/commits/78264f5e3c94592ff64aab831499f48497083a91", "html_url": "https://github.com/rust-lang/rust/commit/78264f5e3c94592ff64aab831499f48497083a91"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "9d608c886b88e97203bea086ba96ce0a76008797", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680", "patch": "@@ -441,6 +441,8 @@ impl<T> Rc<[T]> {\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_uninit_slice(len: usize) -> Rc<[mem::MaybeUninit<T>]> {\n         let data_layout = Layout::array::<mem::MaybeUninit<T>>(len).unwrap();\n+        // This relies on `value` being the last field of `RcBox` in memory,\n+        // so that the layout of `RcBox<T>` is the same as that of `RcBox<()>` followed by `T`.\n         let (layout, offset) = Layout::new::<RcBox<()>>().extend(data_layout).unwrap();\n         unsafe {\n             let allocated_ptr = Global.alloc(layout)"}, {"sha": "1bd177be0d5430366b68c71b0bc6fea5a39076b3", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=ae1e201a0cd37a48bd3dabf1c643ccd5f53f7680", "patch": "@@ -425,6 +425,8 @@ impl<T> Arc<[T]> {\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_uninit_slice(len: usize) -> Arc<[mem::MaybeUninit<T>]> {\n         let data_layout = Layout::array::<mem::MaybeUninit<T>>(len).unwrap();\n+        // This relies on `value` being the last field of `RcBox` in memory,\n+        // so that the layout of `RcBox<T>` is the same as that of `RcBox<()>` followed by `T`.\n         let (layout, offset) = Layout::new::<ArcInner<()>>().extend(data_layout).unwrap();\n         unsafe {\n             let allocated_ptr = Global.alloc(layout)"}]}