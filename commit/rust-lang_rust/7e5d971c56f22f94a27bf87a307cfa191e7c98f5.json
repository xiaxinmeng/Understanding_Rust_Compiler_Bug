{"sha": "7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNWQ5NzFjNTZmMjJmOTRhMjdiZjg3YTMwN2NmYTE5MWU3Yzk4ZjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-12T16:45:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-12T16:45:44Z"}, "message": "fix warnings; make test suite pass again", "tree": {"sha": "5fb39eaa2a0e3ae2c948ccfa2251960d8974ef9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fb39eaa2a0e3ae2c948ccfa2251960d8974ef9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "html_url": "https://github.com/rust-lang/rust/commit/7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2be159bacdbad72dc9e89eaa7a79bf8576c103cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2be159bacdbad72dc9e89eaa7a79bf8576c103cd", "html_url": "https://github.com/rust-lang/rust/commit/2be159bacdbad72dc9e89eaa7a79bf8576c103cd"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "9930555c199d161186855cd2a11f85b28ebc9d0e", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "patch": "@@ -1454,7 +1454,7 @@ impl<'a, 'tcx, M: Machine<'tcx>> Memory<'a, 'tcx, M> {\n             return Ok(());\n         }\n         let ptr = ptr.to_ptr()?;\n-        let mut alloc = self.get_mut(ptr.alloc_id)?;\n+        let alloc = self.get_mut(ptr.alloc_id)?;\n         alloc.undef_mask.set_range(\n             ptr.offset,\n             ptr.offset + size,"}, {"sha": "8abb0b86bf8f5f9de48efce6ce34c76091bed40a", "filename": "src/librustc_mir/interpret/value.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/src%2Flibrustc_mir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/src%2Flibrustc_mir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalue.rs?ref=7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "patch": "@@ -1,5 +1,4 @@\n #![allow(unknown_lints)]\n-#![allow(float_cmp)]\n \n use rustc::ty::layout::HasDataLayout;\n "}, {"sha": "f3ae3ab913a36df74f639873103cb0784204e64a", "filename": "tests/run-pass/pointers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/tests%2Frun-pass%2Fpointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/tests%2Frun-pass%2Fpointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpointers.rs?ref=7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "patch": "@@ -34,7 +34,7 @@ fn tuple_ref_mut() -> (i8, i8) {\n fn match_ref_mut() -> i8 {\n     let mut t = (20, 22);\n     {\n-        let mut opt = Some(&mut t);\n+        let opt = Some(&mut t);\n         match opt {\n             Some(&mut (ref mut x, ref mut y)) => *x += *y,\n             None => {},"}, {"sha": "db00e42d99ac8f46c456826305f3fed71e8b8ce8", "filename": "tests/run-pass/thread-local.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/tests%2Frun-pass%2Fthread-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5d971c56f22f94a27bf87a307cfa191e7c98f5/tests%2Frun-pass%2Fthread-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fthread-local.rs?ref=7e5d971c56f22f94a27bf87a307cfa191e7c98f5", "patch": "@@ -29,10 +29,10 @@ pub fn record(r: usize) {\n     unsafe { RECORD = RECORD*10 + r };\n }\n \n-unsafe extern fn dtor(mut ptr: *mut u64) {\n+unsafe extern fn dtor(ptr: *mut u64) {\n     assert!(CANNARY != 0 as *mut _); // make sure we do not get run too often\n     let val = *ptr;\n-    \n+\n     let which_key = GLOBALS.iter().position(|global| global as *const _ == ptr).expect(\"Should find my global\");\n     record(which_key);\n "}]}