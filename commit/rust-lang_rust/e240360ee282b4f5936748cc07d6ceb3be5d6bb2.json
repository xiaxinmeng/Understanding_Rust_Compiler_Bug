{"sha": "e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNDAzNjBlZTI4MmI0ZjU5MzY3NDhjYzA3ZDZjZWIzYmU1ZDZiYjI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-09-11T07:32:36Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-09-11T07:32:36Z"}, "message": "Merge #68\n\n68: Implement incremental reparsing for remaining braced blocks r=matklad a=darksv\n\nFixes #66\n\nCo-authored-by: darksv <darek969-12@o2.pl>", "tree": {"sha": "0affc5f30030d0702fb2bf6c4d9c0a84a5a6732f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0affc5f30030d0702fb2bf6c4d9c0a84a5a6732f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "html_url": "https://github.com/rust-lang/rust/commit/e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "505895a25f98423de07c3cec4793b66a19d098c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/505895a25f98423de07c3cec4793b66a19d098c7", "html_url": "https://github.com/rust-lang/rust/commit/505895a25f98423de07c3cec4793b66a19d098c7"}, {"sha": "d0cfeb4f1616e125ca3a941f2dcf5dfbb5f2b03f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0cfeb4f1616e125ca3a941f2dcf5dfbb5f2b03f", "html_url": "https://github.com/rust-lang/rust/commit/d0cfeb4f1616e125ca3a941f2dcf5dfbb5f2b03f"}], "stats": {"total": 126, "additions": 98, "deletions": 28}, "files": [{"sha": "f01df56bc630ece62327847049c6d0eded369943", "filename": "crates/libsyntax2/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -287,7 +287,7 @@ fn match_expr(p: &mut Parser) -> CompletedMarker {\n     m.complete(p, MATCH_EXPR)\n }\n \n-fn match_arm_list(p: &mut Parser) {\n+pub(crate) fn match_arm_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.eat(L_CURLY);"}, {"sha": "20e0fa3289eea114bd1df32872672f0831502db0", "filename": "crates/libsyntax2/src/grammar/expressions/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -2,6 +2,7 @@ mod atom;\n \n use super::*;\n pub(super) use self::atom::{literal, LITERAL_FIRST};\n+pub(crate) use self::atom::match_arm_list;\n \n const EXPR_FIRST: TokenSet = LHS_FIRST;\n \n@@ -419,7 +420,7 @@ fn path_expr(p: &mut Parser, r: Restrictions) -> CompletedMarker {\n //     S { x, y: 32, };\n //     S { x, y: 32, ..Default::default() };\n // }\n-fn named_field_list(p: &mut Parser) {\n+pub(crate) fn named_field_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.bump();"}, {"sha": "8c19aa179555bbe48caa6afbd5017213f2316805", "filename": "crates/libsyntax2/src/grammar/items/mod.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -5,7 +5,12 @@ mod traits;\n mod use_item;\n \n use super::*;\n-pub(crate) use self::nominal::named_field_def_list;\n+pub(crate) use self::{\n+    expressions::{named_field_list, match_arm_list},\n+    nominal::{enum_variant_list, named_field_def_list},\n+    traits::{trait_item_list, impl_item_list},\n+    use_item::use_tree_list,\n+};\n \n // test mod_contents\n // fn foo() {}\n@@ -223,7 +228,7 @@ fn extern_crate_item(p: &mut Parser) {\n     p.expect(SEMI);\n }\n \n-fn extern_item_list(p: &mut Parser) {\n+pub(crate) fn extern_item_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.bump();\n@@ -295,7 +300,7 @@ fn type_def(p: &mut Parser) {\n     p.expect(SEMI);\n }\n \n-fn mod_item(p: &mut Parser) {\n+pub(crate) fn mod_item(p: &mut Parser) {\n     assert!(p.at(MOD_KW));\n     p.bump();\n \n@@ -307,7 +312,7 @@ fn mod_item(p: &mut Parser) {\n     }\n }\n \n-fn mod_item_list(p: &mut Parser) {\n+pub(crate) fn mod_item_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.bump();\n@@ -343,7 +348,7 @@ pub(super) fn macro_call_after_excl(p: &mut Parser) -> BlockLike {\n     flavor\n }\n \n-pub(super) fn token_tree(p: &mut Parser) {\n+pub(crate) fn token_tree(p: &mut Parser) {\n     let closing_paren_kind = match p.current() {\n         L_CURLY => R_CURLY,\n         L_PAREN => R_PAREN,"}, {"sha": "11c43e371e9ceccb51190808aa33b92047296a62", "filename": "crates/libsyntax2/src/grammar/items/nominal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -51,7 +51,7 @@ pub(super) fn enum_def(p: &mut Parser) {\n     }\n }\n \n-fn enum_variant_list(p: &mut Parser) {\n+pub(crate) fn enum_variant_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.bump();"}, {"sha": "c21cfb1a9b4ea07c2995ab363f800ea1c232de19", "filename": "crates/libsyntax2/src/grammar/items/traits.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -25,7 +25,7 @@ pub(super) fn trait_def(p: &mut Parser) {\n //     fn foo() {}\n //     fn bar(&self);\n // }\n-fn trait_item_list(p: &mut Parser) {\n+pub(crate) fn trait_item_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.bump();\n@@ -74,7 +74,7 @@ pub(super) fn impl_item(p: &mut Parser) {\n //     fn foo() {}\n //     fn bar(&self) {}\n // }\n-fn impl_item_list(p: &mut Parser) {\n+pub(crate) fn impl_item_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.bump();"}, {"sha": "1ee4349fda2f834e94822a116f5c123733d1dd4f", "filename": "crates/libsyntax2/src/grammar/items/use_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -53,7 +53,7 @@ fn use_tree(p: &mut Parser) {\n     m.complete(p, USE_TREE);\n }\n \n-fn use_tree_list(p: &mut Parser) {\n+pub(crate) fn use_tree_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.bump();"}, {"sha": "2cb11dc1e30e0118af476b3be3235852034c4ca9", "filename": "crates/libsyntax2/src/grammar/mod.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fmod.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -37,8 +37,21 @@ use {\n     SyntaxKind::{self, *},\n };\n pub(crate) use self::{\n-    expressions::block,\n-    items::named_field_def_list,\n+    expressions::{\n+        block,\n+    },\n+    items::{\n+        enum_variant_list,\n+        extern_item_list,\n+        impl_item_list,\n+        match_arm_list,\n+        mod_item_list,\n+        named_field_def_list,\n+        named_field_list,\n+        token_tree,\n+        trait_item_list,\n+        use_tree_list,\n+    },\n };\n \n pub(crate) fn root(p: &mut Parser) {"}, {"sha": "fd58cb4fa6e067ec97fac3263118eb518c207517", "filename": "crates/libsyntax2/src/lib.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Flib.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -144,6 +144,21 @@ fn find_reparsable_node(node: SyntaxNodeRef, range: TextRange) -> Option<(Syntax\n         let res = match node.kind() {\n             BLOCK => grammar::block,\n             NAMED_FIELD_DEF_LIST => grammar::named_field_def_list,\n+            NAMED_FIELD_LIST => grammar::named_field_list,\n+            ENUM_VARIANT_LIST => grammar::enum_variant_list,\n+            MATCH_ARM_LIST => grammar::match_arm_list,\n+            USE_TREE_LIST => grammar::use_tree_list,\n+            EXTERN_ITEM_LIST => grammar::extern_item_list,\n+            TOKEN_TREE if node.first_child().unwrap().kind() == L_CURLY => grammar::token_tree,\n+            ITEM_LIST => {\n+                let parent = node.parent().unwrap();\n+                match parent.kind() {\n+                    IMPL_ITEM => grammar::impl_item_list,\n+                    TRAIT_DEF => grammar::trait_item_list,\n+                    MODULE => grammar::mod_item_list,\n+                    _ => return None,\n+                }\n+            },\n             _ => return None,\n         };\n         Some(res)"}, {"sha": "644df9f3c686034cf07731649f051fb26945b838", "filename": "crates/libsyntax2/tests/test/main.rs", "status": "modified", "additions": 51, "deletions": 15, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240360ee282b4f5936748cc07d6ceb3be5d6bb2/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs?ref=e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "patch": "@@ -23,21 +23,6 @@ fn lexer_tests() {\n     })\n }\n \n-#[test]\n-fn parser_tests() {\n-    dir_tests(&[\"parser/inline\", \"parser/ok\", \"parser/err\"], |text| {\n-        let file = File::parse(text);\n-        dump_tree(file.syntax())\n-    })\n-}\n-\n-#[test]\n-fn parser_fuzz_tests() {\n-    for (_, text) in collect_tests(&[\"parser/fuzz-failures\"]) {\n-        check_fuzz_invariants(&text)\n-    }\n-}\n-\n #[test]\n fn reparse_test() {\n     fn do_check(before: &str, replace_with: &str) {\n@@ -73,6 +58,57 @@ fn foo {\n     <|>92<|>;\n }\n \", \"62\");\n+    do_check(r\"\n+mod foo {\n+    fn <|><|>\n+}\n+\", \"bar\");\n+    do_check(r\"\n+trait Foo {\n+    type <|>Foo<|>;\n+}\n+\", \"Output\");\n+    do_check(r\"\n+impl IntoIterator<Item=i32> for Foo {\n+    f<|><|>\n+}\n+\", \"n next(\");\n+    do_check(r\"\n+use a::b::{foo,<|>,bar<|>};\n+    \", \"baz\");\n+    do_check(r\"\n+pub enum A {\n+    Foo<|><|>\n+}\n+\", \"\\nBar;\\n\");\n+    do_check(r\"\n+foo!{a, b<|><|> d}\n+\", \", c[3]\");\n+    do_check(r\"\n+fn foo() {\n+    vec![<|><|>]\n+}\n+\", \"123\");\n+    do_check(r\"\n+extern {\n+    fn<|>;<|>\n+}\n+\", \" exit(code: c_int)\");\n+}\n+\n+#[test]\n+fn parser_tests() {\n+    dir_tests(&[\"parser/inline\", \"parser/ok\", \"parser/err\"], |text| {\n+        let file = File::parse(text);\n+        dump_tree(file.syntax())\n+    })\n+}\n+\n+#[test]\n+fn parser_fuzz_tests() {\n+    for (_, text) in collect_tests(&[\"parser/fuzz-failures\"]) {\n+        check_fuzz_invariants(&text)\n+    }\n }\n \n "}]}