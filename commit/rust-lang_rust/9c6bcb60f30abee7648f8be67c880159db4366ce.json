{"sha": "9c6bcb60f30abee7648f8be67c880159db4366ce", "node_id": "C_kwDOAAsO6NoAKDljNmJjYjYwZjMwYWJlZTc2NDhmOGJlNjdjODgwMTU5ZGI0MzY2Y2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-08T06:00:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-08T06:00:37Z"}, "message": "Rollup merge of #98718 - yoshuawuyts:stabilize-into-future, r=yaahc\n\nStabilize `into_future`\n\nhttps://github.com/rust-lang/rust/issues/67644 has been labeled with [S-tracking-ready-to-stabilize](https://github.com/rust-lang/rust/labels/S-tracking-ready-to-stabilize) - which mentions someone needs to file a stabilization PR. So hence this PR! :sparkles: Thanks!\n\nCloses https://github.com/rust-lang/rust/issues/67644\n\nr? ``@joshtriplett``", "tree": {"sha": "beab62003f4363ce1eb66b839b021981aa5bab7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/beab62003f4363ce1eb66b839b021981aa5bab7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c6bcb60f30abee7648f8be67c880159db4366ce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJix8gFCRBK7hj4Ov3rIwAApKwIAE6mxYmCcNDlM3krCq+eEoE2\n2tsTKuGEguNlEjyXOtMYQUQdqwY6IJjQ/CbnVjHscCwllAV3CcIOQDcjAaovZ49X\nK2vygmOAGkSKDLRtkn/ieytIiAne8LfRffRix39IiPPfRMP9qZQe/HdBtcd7LqgH\nELvoqkmsUuVaTWIjKdhEK3i+nQ1cSA7UuXs4BRTfPwMz0e/uRzvBXxIujxm66m2C\nOno5BSQijgvaqVEKrD02+NwqX7V+hMf5sg0L4fpg9XHD/MD2gm+xKGs2dHii7jx3\nC/N/i7vQio7zCskQL3wZNqwjdeeHQVF7Jm8gR2spdNx7q/ipCka3Pv/cnMuea4s=\n=LL7n\n-----END PGP SIGNATURE-----\n", "payload": "tree beab62003f4363ce1eb66b839b021981aa5bab7d\nparent b36e58a4589706ff790eb25bbd78f40b1d649431\nparent 992cfc16839d701e17f0437585a44102e83d4d14\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1657260037 +0200\ncommitter GitHub <noreply@github.com> 1657260037 +0200\n\nRollup merge of #98718 - yoshuawuyts:stabilize-into-future, r=yaahc\n\nStabilize `into_future`\n\nhttps://github.com/rust-lang/rust/issues/67644 has been labeled with [S-tracking-ready-to-stabilize](https://github.com/rust-lang/rust/labels/S-tracking-ready-to-stabilize) - which mentions someone needs to file a stabilization PR. So hence this PR! :sparkles: Thanks!\n\nCloses https://github.com/rust-lang/rust/issues/67644\n\nr? ``@joshtriplett``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c6bcb60f30abee7648f8be67c880159db4366ce", "html_url": "https://github.com/rust-lang/rust/commit/9c6bcb60f30abee7648f8be67c880159db4366ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c6bcb60f30abee7648f8be67c880159db4366ce/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b36e58a4589706ff790eb25bbd78f40b1d649431", "url": "https://api.github.com/repos/rust-lang/rust/commits/b36e58a4589706ff790eb25bbd78f40b1d649431", "html_url": "https://github.com/rust-lang/rust/commit/b36e58a4589706ff790eb25bbd78f40b1d649431"}, {"sha": "992cfc16839d701e17f0437585a44102e83d4d14", "url": "https://api.github.com/repos/rust-lang/rust/commits/992cfc16839d701e17f0437585a44102e83d4d14", "html_url": "https://github.com/rust-lang/rust/commit/992cfc16839d701e17f0437585a44102e83d4d14"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "649b4338772226762f67194e650621463d1075f6", "filename": "library/core/src/future/into_future.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9c6bcb60f30abee7648f8be67c880159db4366ce/library%2Fcore%2Fsrc%2Ffuture%2Finto_future.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c6bcb60f30abee7648f8be67c880159db4366ce/library%2Fcore%2Fsrc%2Ffuture%2Finto_future.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Finto_future.rs?ref=9c6bcb60f30abee7648f8be67c880159db4366ce", "patch": "@@ -13,8 +13,6 @@ use crate::future::Future;\n /// on all futures.\n ///\n /// ```no_run\n-/// #![feature(into_future)]\n-///\n /// use std::future::IntoFuture;\n ///\n /// # async fn foo() {\n@@ -33,8 +31,6 @@ use crate::future::Future;\n /// multiple times before being `.await`ed.\n ///\n /// ```rust\n-/// #![feature(into_future)]\n-///\n /// use std::future::{ready, Ready, IntoFuture};\n ///\n /// /// Eventually multiply two numbers\n@@ -91,8 +87,6 @@ use crate::future::Future;\n /// `IntoFuture::into_future` to obtain an instance of `Future`:\n ///\n /// ```rust\n-/// #![feature(into_future)]\n-///\n /// use std::future::IntoFuture;\n ///\n /// /// Convert the output of a future to a string.\n@@ -104,14 +98,14 @@ use crate::future::Future;\n ///     format!(\"{:?}\", fut.await)\n /// }\n /// ```\n-#[unstable(feature = \"into_future\", issue = \"67644\")]\n+#[stable(feature = \"into_future\", since = \"1.64.0\")]\n pub trait IntoFuture {\n     /// The output that the future will produce on completion.\n-    #[unstable(feature = \"into_future\", issue = \"67644\")]\n+    #[stable(feature = \"into_future\", since = \"1.64.0\")]\n     type Output;\n \n     /// Which kind of future are we turning this into?\n-    #[unstable(feature = \"into_future\", issue = \"67644\")]\n+    #[stable(feature = \"into_future\", since = \"1.64.0\")]\n     type IntoFuture: Future<Output = Self::Output>;\n \n     /// Creates a future from a value.\n@@ -121,8 +115,6 @@ pub trait IntoFuture {\n     /// Basic usage:\n     ///\n     /// ```no_run\n-    /// #![feature(into_future)]\n-    ///\n     /// use std::future::IntoFuture;\n     ///\n     /// # async fn foo() {\n@@ -131,12 +123,12 @@ pub trait IntoFuture {\n     /// assert_eq!(\"meow\", fut.await);\n     /// # }\n     /// ```\n-    #[unstable(feature = \"into_future\", issue = \"67644\")]\n+    #[stable(feature = \"into_future\", since = \"1.64.0\")]\n     #[lang = \"into_future\"]\n     fn into_future(self) -> Self::IntoFuture;\n }\n \n-#[unstable(feature = \"into_future\", issue = \"67644\")]\n+#[stable(feature = \"into_future\", since = \"1.64.0\")]\n impl<F: Future> IntoFuture for F {\n     type Output = F::Output;\n     type IntoFuture = F;"}, {"sha": "90eecb9d4a0003e0a9507e3b28d8592e2346f1cb", "filename": "library/core/src/future/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c6bcb60f30abee7648f8be67c880159db4366ce/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c6bcb60f30abee7648f8be67c880159db4366ce/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs?ref=9c6bcb60f30abee7648f8be67c880159db4366ce", "patch": "@@ -29,7 +29,7 @@ pub use self::future::Future;\n #[unstable(feature = \"future_join\", issue = \"91642\")]\n pub use self::join::join;\n \n-#[unstable(feature = \"into_future\", issue = \"67644\")]\n+#[stable(feature = \"into_future\", since = \"1.64.0\")]\n pub use into_future::IntoFuture;\n \n #[stable(feature = \"future_readiness_fns\", since = \"1.48.0\")]"}, {"sha": "8bf1385b3c5cde4b0f1b105759a2c0151f6aaf34", "filename": "src/test/ui/async-await/await-into-future.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c6bcb60f30abee7648f8be67c880159db4366ce/src%2Ftest%2Fui%2Fasync-await%2Fawait-into-future.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c6bcb60f30abee7648f8be67c880159db4366ce/src%2Ftest%2Fui%2Fasync-await%2Fawait-into-future.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-into-future.rs?ref=9c6bcb60f30abee7648f8be67c880159db4366ce", "patch": "@@ -1,8 +1,6 @@\n // run-pass\n // aux-build: issue-72470-lib.rs\n // edition:2021\n-#![feature(into_future)]\n-\n extern crate issue_72470_lib;\n use std::{future::{Future, IntoFuture}, pin::Pin};\n "}]}