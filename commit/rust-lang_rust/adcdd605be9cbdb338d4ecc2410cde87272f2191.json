{"sha": "adcdd605be9cbdb338d4ecc2410cde87272f2191", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkY2RkNjA1YmU5Y2JkYjMzOGQ0ZWNjMjQxMGNkZTg3MjcyZjIxOTE=", "commit": {"author": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2017-03-17T18:16:29Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-15T02:05:11Z"}, "message": "Put overlapping impls behind feature gate, add tests\n\nI've added some explicit tests that negative impls are allowed to\noverlap, and also to make sure that the feature doesn't interfere with\nspecialization. I've not added an explicit test for positive overlapping\nwith negative, as that's already tested elsewhere.", "tree": {"sha": "b078c4e2b4196dff490db3318824b1693a0a2ef0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b078c4e2b4196dff490db3318824b1693a0a2ef0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adcdd605be9cbdb338d4ecc2410cde87272f2191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adcdd605be9cbdb338d4ecc2410cde87272f2191", "html_url": "https://github.com/rust-lang/rust/commit/adcdd605be9cbdb338d4ecc2410cde87272f2191", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adcdd605be9cbdb338d4ecc2410cde87272f2191/comments", "author": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c81c958e984b92222909e2ba5c74a2260a44bdae", "url": "https://api.github.com/repos/rust-lang/rust/commits/c81c958e984b92222909e2ba5c74a2260a44bdae", "html_url": "https://github.com/rust-lang/rust/commit/c81c958e984b92222909e2ba5c74a2260a44bdae"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "3da9383762bc6c682889daef12a5be762b0215cc", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=adcdd605be9cbdb338d4ecc2410cde87272f2191", "patch": "@@ -2230,6 +2230,9 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     /// Returns true if the impls are the same polarity and are implementing\n     /// a trait which contains no items\n     pub fn impls_are_allowed_to_overlap(self, def_id1: DefId, def_id2: DefId) -> bool {\n+        if !self.sess.features.borrow().overlapping_marker_traits {\n+            return false;\n+        }\n         let trait1_is_empty = self.impl_trait_ref(def_id1)\n             .map_or(false, |trait_ref| {\n                 self.associated_item_def_ids(trait_ref.def_id).is_empty()"}, {"sha": "6e455234196d461d6430838a1e6c6bd10be46927", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=adcdd605be9cbdb338d4ecc2410cde87272f2191", "patch": "@@ -349,6 +349,9 @@ declare_features! (\n \n     // Allows module-level inline assembly by way of global_asm!()\n     (active, global_asm, \"1.18.0\", Some(35119)),\n+\n+    // Allows overlapping impls of marker traits\n+    (active, overlapping_marker_traits, \"1.18.0\", Some(29864)),\n );\n \n declare_features! ("}, {"sha": "8e9d1eff34580575dc64b4ba6e43c77ae09c6f2c", "filename": "src/test/compile-fail/coherence-conflicting-negative-trait-impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Fcompile-fail%2Fcoherence-conflicting-negative-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Fcompile-fail%2Fcoherence-conflicting-negative-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-conflicting-negative-trait-impl.rs?ref=adcdd605be9cbdb338d4ecc2410cde87272f2191", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(optin_builtin_traits)]\n+#![feature(overlapping_marker_traits)]\n \n trait MyTrait {}\n "}, {"sha": "9caaee41aeb1dba09b2ad576a83cba1a559d3143", "filename": "src/test/compile-fail/coherence-impls-send.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Fcompile-fail%2Fcoherence-impls-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Fcompile-fail%2Fcoherence-impls-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-impls-send.rs?ref=adcdd605be9cbdb338d4ecc2410cde87272f2191", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(optin_builtin_traits)]\n+#![feature(overlapping_marker_traits)]\n \n use std::marker::Copy;\n "}, {"sha": "bf2b06dd8ba0c87c223b382be4c3f20814a92ffc", "filename": "src/test/compile-fail/overlapping-impls-requires-feature-gate.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Fcompile-fail%2Foverlapping-impls-requires-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Fcompile-fail%2Foverlapping-impls-requires-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Foverlapping-impls-requires-feature-gate.rs?ref=adcdd605be9cbdb338d4ecc2410cde87272f2191", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait MyMarker {}\n+\n+impl<T> MyMarker for T {}\n+impl<T> MyMarker for Vec<T> {}\n+//~^ ERROR E0119\n+\n+fn main() {}"}, {"sha": "ed45d81c0d6a155937f7514f4019d8d261f06e56", "filename": "src/test/run-pass/overlap-doesnt-conflict-with-specialization.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Frun-pass%2Foverlap-doesnt-conflict-with-specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Frun-pass%2Foverlap-doesnt-conflict-with-specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foverlap-doesnt-conflict-with-specialization.rs?ref=adcdd605be9cbdb338d4ecc2410cde87272f2191", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(overlapping_marker_traits)]\n+#![feature(specialization)]\n+\n+trait MyMarker {}\n+\n+impl<T> MyMarker for T {}\n+impl<T> MyMarker for Vec<T> {}\n+\n+fn foo<T: MyMarker>(t: T) -> T {\n+    t\n+}\n+\n+fn main() {\n+    assert_eq!(1, foo(1));\n+    assert_eq!(2.0, foo(2.0));\n+    assert_eq!(vec![1], foo(vec![1]));\n+}"}, {"sha": "45085c093fc986b670fedf91a2b2f2c496b29990", "filename": "src/test/run-pass/overlap-permitted-for-marker-traits.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Frun-pass%2Foverlap-permitted-for-marker-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcdd605be9cbdb338d4ecc2410cde87272f2191/src%2Ftest%2Frun-pass%2Foverlap-permitted-for-marker-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foverlap-permitted-for-marker-traits.rs?ref=adcdd605be9cbdb338d4ecc2410cde87272f2191", "patch": "@@ -8,11 +8,18 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(overlapping_marker_traits)]\n+#![feature(optin_builtin_traits)]\n+\n trait MyMarker {}\n \n impl<T: Copy> MyMarker for T {}\n impl<T: Eq> MyMarker for T {}\n \n+struct MyStruct;\n+impl !Send for MyStruct {}\n+impl !Send for MyStruct {}\n+\n fn foo<T: MyMarker>(t: T) -> T {\n     t\n }"}]}