{"sha": "dc6383c42237fc46c0955d15ae2d13e7f3527635", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNjM4M2M0MjIzN2ZjNDZjMDk1NWQxNWFlMmQxM2U3ZjM1Mjc2MzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-24T11:33:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-24T11:33:00Z"}, "message": "Merge #3289\n\n3289: Don't break onEnter if rust-analyzer fails to start r=matklad a=matklad\n\ncloses #3253\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "276c350d7a3d36564d1bcd6a70bb3abb57fe00e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/276c350d7a3d36564d1bcd6a70bb3abb57fe00e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc6383c42237fc46c0955d15ae2d13e7f3527635", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeU7RsCRBK7hj4Ov3rIwAAdHIIACKmpmVJDTfE+rXEBIC+tyDX\nX2xPLWU2Wfjy20fEFp8jSYch4ZWcStkpKHsLxVk+/4PCvnyoRfjrMVezPL0CGLkE\nnt1BgNLIx+rgNQ40RrUFpv2P2+CFJavKyCybcCDtftmpIp9q3Ipodc4NG6Um9WGv\nmxYndkYvvWt6iKqcfBDUzYnMJnOIvc2QOcup6W4IbGYT2eMc75MjFQVfzkdjuQhK\nw0Zg9vWKIB6nqixFTZBMlIDsAGK6/oJoLhlyBZHHBzYsG/LFYUPyto6/GyC5nHpj\nn/4+BnOFtgwlPk70UKfvTIp0qGZaPvmdZcixR0/R0xBhdTHkEzNNzADXmdvrgEM=\n=Z5qw\n-----END PGP SIGNATURE-----\n", "payload": "tree 276c350d7a3d36564d1bcd6a70bb3abb57fe00e9\nparent 1d1c1b0d85547d31775f9e0f3b5516c4b38fed9f\nparent b12cbd60628b6061649c3d41bc8d7022c75aa362\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582543980 +0000\ncommitter GitHub <noreply@github.com> 1582543980 +0000\n\nMerge #3289\n\n3289: Don't break onEnter if rust-analyzer fails to start r=matklad a=matklad\n\ncloses #3253\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6383c42237fc46c0955d15ae2d13e7f3527635", "html_url": "https://github.com/rust-lang/rust/commit/dc6383c42237fc46c0955d15ae2d13e7f3527635", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc6383c42237fc46c0955d15ae2d13e7f3527635/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d1c1b0d85547d31775f9e0f3b5516c4b38fed9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1c1b0d85547d31775f9e0f3b5516c4b38fed9f", "html_url": "https://github.com/rust-lang/rust/commit/1d1c1b0d85547d31775f9e0f3b5516c4b38fed9f"}, {"sha": "b12cbd60628b6061649c3d41bc8d7022c75aa362", "url": "https://api.github.com/repos/rust-lang/rust/commits/b12cbd60628b6061649c3d41bc8d7022c75aa362", "html_url": "https://github.com/rust-lang/rust/commit/b12cbd60628b6061649c3d41bc8d7022c75aa362"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "424ff1ac3d6a041e7c9565acf50c1f14623dfee4", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dc6383c42237fc46c0955d15ae2d13e7f3527635/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/dc6383c42237fc46c0955d15ae2d13e7f3527635/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=dc6383c42237fc46c0955d15ae2d13e7f3527635", "patch": "@@ -12,6 +12,26 @@ import { log } from './util';\n let ctx: Ctx | undefined;\n \n export async function activate(context: vscode.ExtensionContext) {\n+    // Register a \"dumb\" onEnter command for the case where server fails to\n+    // start.\n+    //\n+    // FIXME: refactor command registration code such that commands are\n+    // **always** registered, even if the server does not start. Use API like\n+    // this perhaps?\n+    //\n+    // ```TypeScript\n+    // registerCommand(\n+    //    factory: (Ctx) => ((Ctx) => any),\n+    //    fallback: () => any = () => vscode.window.showErrorMessage(\n+    //        \"rust-analyzer is not available\"\n+    //    ),\n+    // )\n+    const defaultOnEnter = vscode.commands.registerCommand(\n+        'rust-analyzer.onEnter',\n+        () => vscode.commands.executeCommand('default:type', { text: '\\n' }),\n+    );\n+    context.subscriptions.push(defaultOnEnter);\n+\n     const config = new Config(context);\n \n     const serverPath = await ensureServerBinary(config.serverSource);\n@@ -54,7 +74,10 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('syntaxTree', commands.syntaxTree);\n     ctx.registerCommand('expandMacro', commands.expandMacro);\n     ctx.registerCommand('run', commands.run);\n+\n+    defaultOnEnter.dispose();\n     ctx.registerCommand('onEnter', commands.onEnter);\n+\n     ctx.registerCommand('ssr', commands.ssr);\n     ctx.registerCommand('serverVersion', commands.serverVersion);\n "}]}