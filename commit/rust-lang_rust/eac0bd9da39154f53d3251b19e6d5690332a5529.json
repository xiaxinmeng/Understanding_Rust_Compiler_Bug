{"sha": "eac0bd9da39154f53d3251b19e6d5690332a5529", "node_id": "C_kwDOAAsO6NoAKGVhYzBiZDlkYTM5MTU0ZjUzZDMyNTFiMTllNmQ1NjkwMzMyYTU1Mjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-16T17:25:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-16T17:25:25Z"}, "message": "Auto merge of #10361 - nindalf:nth_bytes_copy, r=llogiq\n\nStop bytes_nth from suggesting code that does not compile\n\nFixes #10151\n\nAs discussed in the issue, this PR changes the lint in 2 ways\n\n1. Replace `bytes().nth(n).unwrap()` with `as_bytes()[n]`\n2. Replace other `bytes().nth(n)` with `as_bytes().get(n).copied()`\n\n---\n\nchangelog: Stop bytes_nth from suggesting code that does not compile in some cases", "tree": {"sha": "19ea914b8826aed21163aed2943f9fb5a53a8027", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19ea914b8826aed21163aed2943f9fb5a53a8027"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eac0bd9da39154f53d3251b19e6d5690332a5529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eac0bd9da39154f53d3251b19e6d5690332a5529", "html_url": "https://github.com/rust-lang/rust/commit/eac0bd9da39154f53d3251b19e6d5690332a5529", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eac0bd9da39154f53d3251b19e6d5690332a5529/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be7477381ba0327c0972c850e2428ee31e2cc7b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/be7477381ba0327c0972c850e2428ee31e2cc7b8", "html_url": "https://github.com/rust-lang/rust/commit/be7477381ba0327c0972c850e2428ee31e2cc7b8"}, {"sha": "7e53e27dfdb5ce4cda44912fcc6c288c34ac7d91", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e53e27dfdb5ce4cda44912fcc6c288c34ac7d91", "html_url": "https://github.com/rust-lang/rust/commit/7e53e27dfdb5ce4cda44912fcc6c288c34ac7d91"}], "stats": {"total": 60, "additions": 38, "deletions": 22}, "files": [{"sha": "c5fc145b28908417afda5aeb4f3919edcbcdb0a1", "filename": "clippy_lints/src/methods/bytes_nth.rs", "status": "modified", "additions": 29, "deletions": 13, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/eac0bd9da39154f53d3251b19e6d5690332a5529/clippy_lints%2Fsrc%2Fmethods%2Fbytes_nth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eac0bd9da39154f53d3251b19e6d5690332a5529/clippy_lints%2Fsrc%2Fmethods%2Fbytes_nth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fbytes_nth.rs?ref=eac0bd9da39154f53d3251b19e6d5690332a5529", "patch": "@@ -5,6 +5,8 @@ use rustc_errors::Applicability;\n use rustc_hir::{Expr, LangItem};\n use rustc_lint::LateContext;\n \n+use crate::methods::method_call;\n+\n use super::BYTES_NTH;\n \n pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'_>, recv: &'tcx Expr<'tcx>, n_arg: &'tcx Expr<'tcx>) {\n@@ -16,18 +18,32 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'_>, recv: &'tcx E\n     } else {\n         return;\n     };\n+\n     let mut applicability = Applicability::MachineApplicable;\n-    span_lint_and_sugg(\n-        cx,\n-        BYTES_NTH,\n-        expr.span,\n-        &format!(\"called `.bytes().nth()` on a `{caller_type}`\"),\n-        \"try\",\n-        format!(\n-            \"{}.as_bytes().get({})\",\n-            snippet_with_applicability(cx, recv.span, \"..\", &mut applicability),\n-            snippet_with_applicability(cx, n_arg.span, \"..\", &mut applicability)\n-        ),\n-        applicability,\n-    );\n+    let receiver = snippet_with_applicability(cx, recv.span, \"..\", &mut applicability);\n+    let n = snippet_with_applicability(cx, n_arg.span, \"..\", &mut applicability);\n+\n+    if let Some(parent) = clippy_utils::get_parent_expr(cx, expr)\n+      && let Some((name, _, _, _, _)) = method_call(parent)\n+      && name == \"unwrap\" {\n+        span_lint_and_sugg(\n+            cx,\n+            BYTES_NTH,\n+            parent.span,\n+            &format!(\"called `.bytes().nth().unwrap()` on a `{caller_type}`\"),\n+            \"try\",\n+            format!(\"{receiver}.as_bytes()[{n}]\",),\n+            applicability\n+        );\n+    } else {\n+        span_lint_and_sugg(\n+            cx,\n+            BYTES_NTH,\n+            expr.span,\n+            &format!(\"called `.bytes().nth()` on a `{caller_type}`\"),\n+            \"try\",\n+            format!(\"{receiver}.as_bytes().get({n}).copied()\"), \n+            applicability\n+        );\n+    };\n }"}, {"sha": "a35c679afb71f37739b7e0b60dcfa70092a54e06", "filename": "tests/ui/bytes_nth.fixed", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eac0bd9da39154f53d3251b19e6d5690332a5529/tests%2Fui%2Fbytes_nth.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eac0bd9da39154f53d3251b19e6d5690332a5529/tests%2Fui%2Fbytes_nth.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_nth.fixed?ref=eac0bd9da39154f53d3251b19e6d5690332a5529", "patch": "@@ -5,7 +5,7 @@\n \n fn main() {\n     let s = String::from(\"String\");\n-    let _ = s.as_bytes().get(3);\n-    let _ = &s.as_bytes().get(3);\n-    let _ = s[..].as_bytes().get(3);\n+    let _ = s.as_bytes().get(3).copied();\n+    let _ = &s.as_bytes()[3];\n+    let _ = s[..].as_bytes().get(3).copied();\n }"}, {"sha": "1ecffea53035e3e308333f6b1539a901b7746286", "filename": "tests/ui/bytes_nth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eac0bd9da39154f53d3251b19e6d5690332a5529/tests%2Fui%2Fbytes_nth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eac0bd9da39154f53d3251b19e6d5690332a5529/tests%2Fui%2Fbytes_nth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_nth.rs?ref=eac0bd9da39154f53d3251b19e6d5690332a5529", "patch": "@@ -6,6 +6,6 @@\n fn main() {\n     let s = String::from(\"String\");\n     let _ = s.bytes().nth(3);\n-    let _ = &s.bytes().nth(3);\n+    let _ = &s.bytes().nth(3).unwrap();\n     let _ = s[..].bytes().nth(3);\n }"}, {"sha": "e8b15027829e38e4e0a9d851fe8e0be45a4cf264", "filename": "tests/ui/bytes_nth.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eac0bd9da39154f53d3251b19e6d5690332a5529/tests%2Fui%2Fbytes_nth.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eac0bd9da39154f53d3251b19e6d5690332a5529/tests%2Fui%2Fbytes_nth.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_nth.stderr?ref=eac0bd9da39154f53d3251b19e6d5690332a5529", "patch": "@@ -2,21 +2,21 @@ error: called `.bytes().nth()` on a `String`\n   --> $DIR/bytes_nth.rs:8:13\n    |\n LL |     let _ = s.bytes().nth(3);\n-   |             ^^^^^^^^^^^^^^^^ help: try: `s.as_bytes().get(3)`\n+   |             ^^^^^^^^^^^^^^^^ help: try: `s.as_bytes().get(3).copied()`\n    |\n    = note: `-D clippy::bytes-nth` implied by `-D warnings`\n \n-error: called `.bytes().nth()` on a `String`\n+error: called `.bytes().nth().unwrap()` on a `String`\n   --> $DIR/bytes_nth.rs:9:14\n    |\n-LL |     let _ = &s.bytes().nth(3);\n-   |              ^^^^^^^^^^^^^^^^ help: try: `s.as_bytes().get(3)`\n+LL |     let _ = &s.bytes().nth(3).unwrap();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `s.as_bytes()[3]`\n \n error: called `.bytes().nth()` on a `str`\n   --> $DIR/bytes_nth.rs:10:13\n    |\n LL |     let _ = s[..].bytes().nth(3);\n-   |             ^^^^^^^^^^^^^^^^^^^^ help: try: `s[..].as_bytes().get(3)`\n+   |             ^^^^^^^^^^^^^^^^^^^^ help: try: `s[..].as_bytes().get(3).copied()`\n \n error: aborting due to 3 previous errors\n "}]}