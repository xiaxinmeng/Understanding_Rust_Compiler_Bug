{"sha": "d585c96eaf5ba0d719b7385f15f241a4be765b20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ODVjOTZlYWY1YmEwZDcxOWI3Mzg1ZjE1ZjI0MWE0YmU3NjViMjA=", "commit": {"author": {"name": "Cassandra Fridkin", "email": "cass@swag.lgbt", "date": "2020-10-06T00:14:11Z"}, "committer": {"name": "Cassandra Fridkin", "email": "cass@swag.lgbt", "date": "2020-10-06T00:22:11Z"}, "message": "Add install_git_hook_maybe to setup.rs", "tree": {"sha": "b0159feca2eba087cd617efae94a8eba2f84f96d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0159feca2eba087cd617efae94a8eba2f84f96d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d585c96eaf5ba0d719b7385f15f241a4be765b20", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEdn8arGOPUN7UUjx9sGOAzKYTMzoFAl97uLcACgkQsGOAzKYT\nMzp/xxAAjrUyIRELyoUtl6HAFQYzcluQ+gx8SuG3NlYGOu7BlQkaWRsUEoUdRUyG\nwhTpmrSjJZpdv6rToyB2tjaosWcmN1wROjbSmFGM8oPXccxZTdxwhaYBPEmfKP2d\nIGD998J55M6HptDbhq+6xhARoqSgfyX688rMAE7i3i+6sUGBIrVDKaNNgGYavYuC\nvQ9flwKSso7H4jaJVKYgDSwb1LdRE7u2u2QH+KG0ufCJVReXs2HJ/xsPjzVXWIgk\nZQCZBOkoAyv4P98u8v7KtRADTihvF8zejEb/m8HXDoUIK8mMdyDCKLYp6ZTbHO9e\n+NVNfiUdXuC45aXambBOo/ArXedrgsBgjNTztgEMB3mgyNpHeaPWjT4wxifEJvgY\nnC236OOjMyWC6sIluzXJeXBu2eJmKLkPdM9iCNEEysfXWAI1fGRlTyp2NZ076H5m\n3vbKiikE9dezLtZ37B8CX7Smey3eH/KVkVKOkML9Ae/8ryxJE2lVkLHpRZHxaLpQ\nUSnXL6nS6ZyBNWaGhTQM4S8kUgJnzfBUhzcO+mZe0fPlL/0O9OJBuoV+8uRIQLPv\n978nTOdI1i+VeZPQevPhXUYllkUk0M1uQInq3IXOQypY3AAHDuB91TDqGTMOKg2W\nuM03l+xzPQokU2lerVX6wGSXStKUcQCdX8NQAudQ3mSOtcYzj/0=\n=C12c\n-----END PGP SIGNATURE-----", "payload": "tree b0159feca2eba087cd617efae94a8eba2f84f96d\nparent 68ca4742c58f97b4078357e297e963dec031a1a9\nauthor Cassandra Fridkin <cass@swag.lgbt> 1601943251 -0400\ncommitter Cassandra Fridkin <cass@swag.lgbt> 1601943731 -0400\n\nAdd install_git_hook_maybe to setup.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d585c96eaf5ba0d719b7385f15f241a4be765b20", "html_url": "https://github.com/rust-lang/rust/commit/d585c96eaf5ba0d719b7385f15f241a4be765b20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d585c96eaf5ba0d719b7385f15f241a4be765b20/comments", "author": {"login": "caass", "id": 25358963, "node_id": "MDQ6VXNlcjI1MzU4OTYz", "avatar_url": "https://avatars.githubusercontent.com/u/25358963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caass", "html_url": "https://github.com/caass", "followers_url": "https://api.github.com/users/caass/followers", "following_url": "https://api.github.com/users/caass/following{/other_user}", "gists_url": "https://api.github.com/users/caass/gists{/gist_id}", "starred_url": "https://api.github.com/users/caass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caass/subscriptions", "organizations_url": "https://api.github.com/users/caass/orgs", "repos_url": "https://api.github.com/users/caass/repos", "events_url": "https://api.github.com/users/caass/events{/privacy}", "received_events_url": "https://api.github.com/users/caass/received_events", "type": "User", "site_admin": false}, "committer": {"login": "caass", "id": 25358963, "node_id": "MDQ6VXNlcjI1MzU4OTYz", "avatar_url": "https://avatars.githubusercontent.com/u/25358963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caass", "html_url": "https://github.com/caass", "followers_url": "https://api.github.com/users/caass/followers", "following_url": "https://api.github.com/users/caass/following{/other_user}", "gists_url": "https://api.github.com/users/caass/gists{/gist_id}", "starred_url": "https://api.github.com/users/caass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caass/subscriptions", "organizations_url": "https://api.github.com/users/caass/orgs", "repos_url": "https://api.github.com/users/caass/repos", "events_url": "https://api.github.com/users/caass/events{/privacy}", "received_events_url": "https://api.github.com/users/caass/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68ca4742c58f97b4078357e297e963dec031a1a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/68ca4742c58f97b4078357e297e963dec031a1a9", "html_url": "https://github.com/rust-lang/rust/commit/68ca4742c58f97b4078357e297e963dec031a1a9"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "f5ec1d6d247d7481b3e90a20a10a1c2a2777dfb7", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/d585c96eaf5ba0d719b7385f15f241a4be765b20/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d585c96eaf5ba0d719b7385f15f241a4be765b20/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=d585c96eaf5ba0d719b7385f15f241a4be765b20", "patch": "@@ -46,6 +46,8 @@ pub fn setup(src_path: &Path, include_name: &str) {\n         _ => return,\n     };\n \n+    t!(install_git_hook_maybe(src_path));\n+\n     println!(\"To get started, try one of the following commands:\");\n     for cmd in suggestions {\n         println!(\"- `x.py {}`\", cmd);\n@@ -86,3 +88,41 @@ d) Install Rust from source\"\n     };\n     Ok(template.to_owned())\n }\n+\n+// install a git hook to automatically run tidy --bless, if they want\n+fn install_git_hook_maybe(src_path: &Path) -> io::Result<()> {\n+    let mut input = String::new();\n+    println!(\n+        \"Rust's CI will automatically fail if it doesn't pass `tidy`, the internal tool for ensuring code quality.\n+If you'd like, x.py can install a git hook for you that will automatically run `tidy --bless` on each commit\n+to ensure your code is up to par. If you decide later that this behavior is undesirable,\n+simply delete the `pre-commit` file from .git/hooks.\"\n+    );\n+\n+    let should_install = loop {\n+        print!(\"Would you like to install the git hook?: [y/N] \");\n+        io::stdout().flush()?;\n+        io::stdin().read_line(&mut input)?;\n+        break match input.trim().to_lowercase().as_str() {\n+            \"y\" | \"yes\" => true,\n+            // is this the right way to check for \"entered nothing\"?\n+            \"n\" | \"no\" | \"\" => false,\n+            _ => {\n+                println!(\"error: unrecognized option '{}'\", input.trim());\n+                println!(\"note: press Ctrl+C to exit\");\n+                continue;\n+            }\n+        };\n+    };\n+\n+    if should_install {\n+        let src = src_path.join(\"/etc/pre-commit.rs\");\n+        let dst = src_path.join(\"/.git/hooks/pre-commit\");\n+        fs::hard_link(src, dst)?;\n+        println!(\"Linked `src/etc/pre-commit.sh` to `.git/hooks/pre-commit`\");\n+    } else {\n+        println!(\"Ok, skipping installation!\");\n+    };\n+\n+    Ok(())\n+}"}]}