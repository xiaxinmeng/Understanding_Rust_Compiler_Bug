{"sha": "d561d4c9eb808cbca28fd641934825fdf96fb762", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NjFkNGM5ZWI4MDhjYmNhMjhmZDY0MTkzNDgyNWZkZjk2ZmI3NjI=", "commit": {"author": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-05T19:40:26Z"}, "committer": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-05T19:40:26Z"}, "message": "propper trait of item impl", "tree": {"sha": "9cee16702d2ef642f2b9f6c376fa406d9b8ac2fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cee16702d2ef642f2b9f6c376fa406d9b8ac2fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d561d4c9eb808cbca28fd641934825fdf96fb762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d561d4c9eb808cbca28fd641934825fdf96fb762", "html_url": "https://github.com/rust-lang/rust/commit/d561d4c9eb808cbca28fd641934825fdf96fb762", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d561d4c9eb808cbca28fd641934825fdf96fb762/comments", "author": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a7946df703f2d9149adc0ca5c7e0b116e82a98d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a7946df703f2d9149adc0ca5c7e0b116e82a98d", "html_url": "https://github.com/rust-lang/rust/commit/5a7946df703f2d9149adc0ca5c7e0b116e82a98d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9f43ed9bf5bb5afb4d7eda9d560a601fb4f808f3", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d561d4c9eb808cbca28fd641934825fdf96fb762/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d561d4c9eb808cbca28fd641934825fdf96fb762/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=d561d4c9eb808cbca28fd641934825fdf96fb762", "patch": "@@ -2682,7 +2682,7 @@ fn def_span<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Span {\n /// Otherwise, return `None`.\n fn trait_of_item<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Option<DefId> {\n     if def_id.krate != LOCAL_CRATE {\n-        return None\n+        return tcx.trait_of_item(def_id)\n     }\n     tcx.opt_associated_item(def_id)\n         .and_then(|associated_item| {"}]}