{"sha": "ec137f29c5812df6461095dbc5c62ce3fe4ebc01", "node_id": "C_kwDOAAsO6NoAKGVjMTM3ZjI5YzU4MTJkZjY0NjEwOTVkYmM1YzYyY2UzZmU0ZWJjMDE", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-06-27T08:39:10Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-06-27T08:39:10Z"}, "message": "catch unwind of every iter in parallel mode during wfcheck", "tree": {"sha": "a50caa0d176e5a49ab110c478b9f368c575814f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a50caa0d176e5a49ab110c478b9f368c575814f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec137f29c5812df6461095dbc5c62ce3fe4ebc01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec137f29c5812df6461095dbc5c62ce3fe4ebc01", "html_url": "https://github.com/rust-lang/rust/commit/ec137f29c5812df6461095dbc5c62ce3fe4ebc01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec137f29c5812df6461095dbc5c62ce3fe4ebc01/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b0d4813ab461ec81eab8980bb884691c97c5a35", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b0d4813ab461ec81eab8980bb884691c97c5a35", "html_url": "https://github.com/rust-lang/rust/commit/3b0d4813ab461ec81eab8980bb884691c97c5a35"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "4437c0b1b6964b38c2cd885ac31d428dad9bf486", "filename": "compiler/rustc_data_structures/src/sync.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ec137f29c5812df6461095dbc5c62ce3fe4ebc01/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec137f29c5812df6461095dbc5c62ce3fe4ebc01/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs?ref=ec137f29c5812df6461095dbc5c62ce3fe4ebc01", "patch": "@@ -21,6 +21,7 @@ use crate::owning_ref::{Erased, OwningRef};\n use std::collections::HashMap;\n use std::hash::{BuildHasher, Hash};\n use std::ops::{Deref, DerefMut};\n+use std::panic::{catch_unwind, resume_unwind, AssertUnwindSafe};\n \n pub use std::sync::atomic::Ordering;\n pub use std::sync::atomic::Ordering::SeqCst;\n@@ -41,7 +42,6 @@ cfg_if! {\n         }\n \n         use std::ops::Add;\n-        use std::panic::{resume_unwind, catch_unwind, AssertUnwindSafe};\n \n         /// This is a single threaded variant of `AtomicU64`, `AtomicUsize`, etc.\n         /// It has explicit ordering arguments and is only intended for use with\n@@ -339,7 +339,10 @@ cfg_if! {\n             t: T,\n             for_each: impl Fn(T::Item) + Sync + Send,\n         ) {\n-            t.into_par_iter().for_each(for_each)\n+            let ps: Vec<_> = t.into_par_iter().map(|i| catch_unwind(AssertUnwindSafe(|| for_each(i)))).collect();\n+            ps.into_iter().for_each(|p| if let Err(panic) = p {\n+                resume_unwind(panic)\n+            });\n         }\n \n         pub type MetadataRef = OwningRef<Box<dyn Erased + Send + Sync>, [u8]>;"}]}