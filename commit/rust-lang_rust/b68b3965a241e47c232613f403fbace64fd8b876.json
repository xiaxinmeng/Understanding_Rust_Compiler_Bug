{"sha": "b68b3965a241e47c232613f403fbace64fd8b876", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2OGIzOTY1YTI0MWU0N2MyMzI2MTNmNDAzZmJhY2U2NGZkOGI4NzY=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-08-03T08:19:22Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-08-03T08:19:22Z"}, "message": "Don't collect() when size_hint is useless", "tree": {"sha": "f08775c6ea1e22d20212a459aa7774c8b2fe8786", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f08775c6ea1e22d20212a459aa7774c8b2fe8786"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b68b3965a241e47c232613f403fbace64fd8b876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b68b3965a241e47c232613f403fbace64fd8b876", "html_url": "https://github.com/rust-lang/rust/commit/b68b3965a241e47c232613f403fbace64fd8b876", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b68b3965a241e47c232613f403fbace64fd8b876/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e8ca9f8bd8325398e76bc30ac09aab138bbb127", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e8ca9f8bd8325398e76bc30ac09aab138bbb127", "html_url": "https://github.com/rust-lang/rust/commit/7e8ca9f8bd8325398e76bc30ac09aab138bbb127"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "3598d66060bf227363a3277073369dd30b21f7fc", "filename": "src/librustc/infer/outlives/obligations.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b68b3965a241e47c232613f403fbace64fd8b876/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68b3965a241e47c232613f403fbace64fd8b876/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs?ref=b68b3965a241e47c232613f403fbace64fd8b876", "patch": "@@ -151,12 +151,14 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n         debug!(\"process_registered_region_obligations()\");\n \n         // pull out the region obligations with the given `body_id` (leaving the rest)\n-        let my_region_obligations = {\n+        let mut my_region_obligations = Vec::with_capacity(self.region_obligations.borrow().len());\n+        {\n             let mut r_o = self.region_obligations.borrow_mut();\n-            let my_r_o = r_o.drain_filter(|(ro_body_id, _)| *ro_body_id == body_id)\n-                            .map(|(_, obligation)| obligation).collect::<Vec<_>>();\n-            my_r_o\n-        };\n+            my_region_obligations.extend(\n+                r_o.drain_filter(|(ro_body_id, _)| *ro_body_id == body_id)\n+                   .map(|(_, obligation)| obligation)\n+            );\n+        }\n \n         let outlives = &mut TypeOutlives::new(\n             self,"}, {"sha": "e958fd7da613e4ab54c5ef58d21ec1a1fd50cbb5", "filename": "src/librustc_data_structures/small_vec.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b68b3965a241e47c232613f403fbace64fd8b876/src%2Flibrustc_data_structures%2Fsmall_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68b3965a241e47c232613f403fbace64fd8b876/src%2Flibrustc_data_structures%2Fsmall_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsmall_vec.rs?ref=b68b3965a241e47c232613f403fbace64fd8b876", "patch": "@@ -210,7 +210,12 @@ impl<A> Decodable for SmallVec<A>\n           A::Element: Decodable {\n     fn decode<D: Decoder>(d: &mut D) -> Result<SmallVec<A>, D::Error> {\n         d.read_seq(|d, len| {\n-            (0..len).map(|i| d.read_seq_elt(i, |d| Decodable::decode(d))).collect()\n+            let mut vec = SmallVec::with_capacity(len);\n+            // FIXME(#48994) - could just be collected into a Result<SmallVec, D::Error>\n+            for i in 0..len {\n+                vec.push(d.read_seq_elt(i, |d| Decodable::decode(d))?);\n+            }\n+            Ok(vec)\n         })\n     }\n }"}, {"sha": "6925ed2afb83b51e947b108bc1a2c8aa4562070c", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b68b3965a241e47c232613f403fbace64fd8b876/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68b3965a241e47c232613f403fbace64fd8b876/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=b68b3965a241e47c232613f403fbace64fd8b876", "patch": "@@ -501,7 +501,11 @@ impl Pat {\n             PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                 pats[0].to_ty().map(TyKind::Slice)?,\n             PatKind::Tuple(pats, None) => {\n-                let tys = pats.iter().map(|pat| pat.to_ty()).collect::<Option<Vec<_>>>()?;\n+                let mut tys = Vec::with_capacity(pats.len());\n+                // FIXME(#48994) - could just be collected into an Option<Vec>\n+                for pat in pats {\n+                    tys.push(pat.to_ty()?);\n+                }\n                 TyKind::Tup(tys)\n             }\n             _ => return None,"}]}