{"sha": "318472bea9c30415a092db9d417589909b98a083", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxODQ3MmJlYTljMzA0MTVhMDkyZGI5ZDQxNzU4OTkwOWI5OGEwODM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-10-19T22:27:56Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-10-31T22:05:12Z"}, "message": "test", "tree": {"sha": "a200eaeea9deeb3a342e7f5cfb578b37c9645310", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a200eaeea9deeb3a342e7f5cfb578b37c9645310"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/318472bea9c30415a092db9d417589909b98a083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/318472bea9c30415a092db9d417589909b98a083", "html_url": "https://github.com/rust-lang/rust/commit/318472bea9c30415a092db9d417589909b98a083", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/318472bea9c30415a092db9d417589909b98a083/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1397f990fe190d88dff8963eac1cebb25210a09f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1397f990fe190d88dff8963eac1cebb25210a09f", "html_url": "https://github.com/rust-lang/rust/commit/1397f990fe190d88dff8963eac1cebb25210a09f"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "8e48ded5653970ff2945f7b6522c59af8d331596", "filename": "src/test/auxiliary/method_self_arg.rs", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/318472bea9c30415a092db9d417589909b98a083/src%2Ftest%2Fauxiliary%2Fmethod_self_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/318472bea9c30415a092db9d417589909b98a083/src%2Ftest%2Fauxiliary%2Fmethod_self_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmethod_self_arg.rs?ref=318472bea9c30415a092db9d417589909b98a083", "patch": "@@ -0,0 +1,87 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+static mut COUNT: u64 = 1;\n+\n+pub fn get_count() -> u64 { unsafe { COUNT } }\n+pub fn reset_count() { unsafe { COUNT = 1; } }\n+\n+pub struct Foo;\n+\n+impl Foo {\n+    pub fn foo(self, x: &Foo) {\n+        unsafe { COUNT *= 2; }\n+        // Test internal call.\n+        Foo::bar(&self);\n+        Foo::bar(x);\n+\n+        Foo::baz(self);\n+        Foo::baz(*x);\n+\n+        Foo::qux(box self);\n+        Foo::qux(box *x);\n+    }\n+\n+    pub fn bar(&self) {\n+        unsafe { COUNT *= 3; }\n+    }\n+\n+    pub fn baz(self) {\n+        unsafe { COUNT *= 5; }\n+    }\n+\n+    pub fn qux(self: Box<Foo>) {\n+        unsafe { COUNT *= 7; }\n+    }\n+\n+    pub fn run_trait(self) {\n+        unsafe { COUNT *= 17; }\n+        // Test internal call.\n+        Bar::foo1(&self);\n+        Bar::foo2(self);\n+        Bar::foo3(box self);\n+\n+        Bar::bar1(&self);\n+        Bar::bar2(self);\n+        Bar::bar3(box self);\n+    }\n+}\n+\n+pub trait Bar {\n+    fn foo1(&self);\n+    fn foo2(self);\n+    fn foo3(self: Box<Self>);\n+\n+    fn bar1(&self) {\n+        unsafe { COUNT *= 7; }\n+    }\n+    fn bar2(self) {\n+        unsafe { COUNT *= 11; }\n+    }\n+    fn bar3(self: Box<Self>) {\n+        unsafe { COUNT *= 13; }\n+    }\n+}\n+\n+impl Bar for Foo {\n+    fn foo1(&self) {\n+        unsafe { COUNT *= 2; }\n+    }\n+\n+    fn foo2(self) {\n+        unsafe { COUNT *= 3; }\n+    }\n+\n+    fn foo3(self: Box<Foo>) {\n+        unsafe { COUNT *= 5; }\n+    }\n+}"}, {"sha": "9c081855a7b8ab818f23a06e542047428168ec00", "filename": "src/test/run-pass/method-self-arg-aux.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/318472bea9c30415a092db9d417589909b98a083/src%2Ftest%2Frun-pass%2Fmethod-self-arg-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/318472bea9c30415a092db9d417589909b98a083/src%2Ftest%2Frun-pass%2Fmethod-self-arg-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmethod-self-arg-aux.rs?ref=318472bea9c30415a092db9d417589909b98a083", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test method calls with self as an argument (cross-crate)\n+\n+// aux-build:method_self_arg.rs\n+extern crate method_self_arg;\n+use method_self_arg::{Foo, Bar};\n+\n+fn main() {\n+    let x = Foo;\n+    // Test external call.\n+    Foo::bar(&x);\n+    Foo::baz(x);\n+    Foo::qux(box x);\n+\n+    x.foo(&x);\n+\n+    assert!(method_self_arg::get_count() == 2u64*3*3*3*5*5*5*7*7*7);\n+\n+    method_self_arg::reset_count();\n+    // Test external call.\n+    Bar::foo1(&x);\n+    Bar::foo2(x);\n+    Bar::foo3(box x);\n+\n+    Bar::bar1(&x);\n+    Bar::bar2(x);\n+    Bar::bar3(box x);\n+\n+    x.run_trait();\n+\n+    println!(\"{}, {}\", method_self_arg::get_count(), 2u64*2*3*3*5*5*7*7*11*11*13*13*17);\n+    assert!(method_self_arg::get_count() == 2u64*2*3*3*5*5*7*7*11*11*13*13*17);\n+}"}]}