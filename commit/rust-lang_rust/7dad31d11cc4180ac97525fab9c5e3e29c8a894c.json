{"sha": "7dad31d11cc4180ac97525fab9c5e3e29c8a894c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYWQzMWQxMWNjNDE4MGFjOTc1MjVmYWI5YzVlM2UyOWM4YTg5NGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-20T23:30:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-20T23:30:27Z"}, "message": "Fix comment typos", "tree": {"sha": "bf91c50e90be1222bd159d9086eb60b3dd562c59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf91c50e90be1222bd159d9086eb60b3dd562c59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dad31d11cc4180ac97525fab9c5e3e29c8a894c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dad31d11cc4180ac97525fab9c5e3e29c8a894c", "html_url": "https://github.com/rust-lang/rust/commit/7dad31d11cc4180ac97525fab9c5e3e29c8a894c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dad31d11cc4180ac97525fab9c5e3e29c8a894c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abdb6cd71bdd5b66d42ddfc517c9adf318b17c9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/abdb6cd71bdd5b66d42ddfc517c9adf318b17c9f", "html_url": "https://github.com/rust-lang/rust/commit/abdb6cd71bdd5b66d42ddfc517c9adf318b17c9f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "859db885e8295c4d0269a77c3a8cce5ada3019a5", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7dad31d11cc4180ac97525fab9c5e3e29c8a894c/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7dad31d11cc4180ac97525fab9c5e3e29c8a894c/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=7dad31d11cc4180ac97525fab9c5e3e29c8a894c", "patch": "@@ -104,7 +104,7 @@ rust_scheduler::reap_dead_tasks(int id) {\n         return;\n     }\n \n-    // First make up copy of the dead_task list with the lock held\n+    // First make a copy of the dead_task list with the lock held\n     size_t dead_tasks_len = dead_tasks.length();\n     rust_task **dead_tasks_copy = (rust_task**)\n         srv->malloc(sizeof(rust_task*) * dead_tasks_len);\n@@ -145,7 +145,7 @@ rust_scheduler::reap_dead_tasks(int id) {\n     }\n \n     // Now unlock again because we have to actually free the dead tasks,\n-    // and that may end up wanting to do lock the task and sched locks\n+    // and that may end up wanting to lock the task and sched locks\n     // again (via target->send)\n     lock.unlock();\n "}]}