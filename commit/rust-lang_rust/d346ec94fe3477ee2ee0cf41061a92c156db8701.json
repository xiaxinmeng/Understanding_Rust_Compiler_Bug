{"sha": "d346ec94fe3477ee2ee0cf41061a92c156db8701", "node_id": "C_kwDOAAsO6NoAKGQzNDZlYzk0ZmUzNDc3ZWUyZWUwY2Y0MTA2MWE5MmMxNTZkYjg3MDE", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2021-11-26T14:16:48Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2021-11-26T14:27:53Z"}, "message": "Add async/const fn tests for needless-late-init\n\n+nits", "tree": {"sha": "cd4929d2db698445995e73c1d78fab901f0d7698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd4929d2db698445995e73c1d78fab901f0d7698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d346ec94fe3477ee2ee0cf41061a92c156db8701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d346ec94fe3477ee2ee0cf41061a92c156db8701", "html_url": "https://github.com/rust-lang/rust/commit/d346ec94fe3477ee2ee0cf41061a92c156db8701", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d346ec94fe3477ee2ee0cf41061a92c156db8701/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3957244120444d2ff9a5e43a0a2df97d79168174", "url": "https://api.github.com/repos/rust-lang/rust/commits/3957244120444d2ff9a5e43a0a2df97d79168174", "html_url": "https://github.com/rust-lang/rust/commit/3957244120444d2ff9a5e43a0a2df97d79168174"}], "stats": {"total": 164, "additions": 102, "deletions": 62}, "files": [{"sha": "e0522f3fe0b1affc1bc8043d33c770c5c65d0e0c", "filename": "clippy_lints/src/needless_late_init.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d346ec94fe3477ee2ee0cf41061a92c156db8701/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d346ec94fe3477ee2ee0cf41061a92c156db8701/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_late_init.rs?ref=d346ec94fe3477ee2ee0cf41061a92c156db8701", "patch": "@@ -11,11 +11,11 @@ use rustc_span::Span;\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for late initializations that can be replaced by a let statement\n+    /// Checks for late initializations that can be replaced by a `let` statement\n     /// with an initializer.\n     ///\n     /// ### Why is this bad?\n-    /// Assigning in the let statement is less repetitive.\n+    /// Assigning in the `let` statement is less repetitive.\n     ///\n     /// ### Example\n     /// ```rust\n@@ -55,7 +55,7 @@ declare_clippy_lint! {\n     #[clippy::version = \"1.58.0\"]\n     pub NEEDLESS_LATE_INIT,\n     style,\n-    \"late initializations that can be replaced by a let statement with an initializer\"\n+    \"late initializations that can be replaced by a `let` statement with an initializer\"\n }\n declare_lint_pass!(NeedlessLateInit => [NEEDLESS_LATE_INIT]);\n \n@@ -275,7 +275,7 @@ fn check<'tcx>(\n                     if usage.needs_semi {\n                         diag.span_suggestion(\n                             usage.stmt.span.shrink_to_hi(),\n-                            \"add a semicolon after the if expression\",\n+                            \"add a semicolon after the `if` expression\",\n                             \";\".to_string(),\n                             applicability,\n                         );\n@@ -301,12 +301,16 @@ fn check<'tcx>(\n                         applicability,\n                     );\n \n-                    diag.multipart_suggestion(\"remove the assignments from the match arms\", suggestions, applicability);\n+                    diag.multipart_suggestion(\n+                        \"remove the assignments from the `match` arms\",\n+                        suggestions,\n+                        applicability,\n+                    );\n \n                     if usage.needs_semi {\n                         diag.span_suggestion(\n                             usage.stmt.span.shrink_to_hi(),\n-                            \"add a semicolon after the match expression\",\n+                            \"add a semicolon after the `match` expression\",\n                             \";\".to_string(),\n                             applicability,\n                         );"}, {"sha": "c5cb2eb1fe1c2e66a727e317a0a13ffa169b8df2", "filename": "tests/ui/let_if_seq.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.rs?ref=d346ec94fe3477ee2ee0cf41061a92c156db8701", "patch": "@@ -3,7 +3,8 @@\n     unused_assignments,\n     clippy::similar_names,\n     clippy::blacklisted_name,\n-    clippy::branches_sharing_code\n+    clippy::branches_sharing_code,\n+    clippy::needless_late_init\n )]\n #![warn(clippy::useless_let_if_seq)]\n "}, {"sha": "271ccce681c9fe4bb5a05f6a976bb16b7a894f91", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 5, "deletions": 46, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=d346ec94fe3477ee2ee0cf41061a92c156db8701", "patch": "@@ -1,25 +1,5 @@\n-error: unneeded late initalization\n-  --> $DIR/let_if_seq.rs:48:5\n-   |\n-LL |     let foo;\n-   |     ^^^^^^^^\n-   |\n-   = note: `-D clippy::needless-late-init` implied by `-D warnings`\n-help: declare `foo` here\n-   |\n-LL |     let foo = if f() {\n-   |     +++++++++\n-help: remove the assignments from the branches\n-   |\n-LL |         0\n-   |\n-help: add a semicolon after the if expression\n-   |\n-LL |     };\n-   |      +\n-\n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:65:5\n+  --> $DIR/let_if_seq.rs:66:5\n    |\n LL | /     let mut foo = 0;\n LL | |     if f() {\n@@ -31,7 +11,7 @@ LL | |     }\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:70:5\n+  --> $DIR/let_if_seq.rs:71:5\n    |\n LL | /     let mut bar = 0;\n LL | |     if f() {\n@@ -45,7 +25,7 @@ LL | |     }\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:78:5\n+  --> $DIR/let_if_seq.rs:79:5\n    |\n LL | /     let quz;\n LL | |     if f() {\n@@ -56,7 +36,7 @@ LL | |     }\n    | |_____^ help: it is more idiomatic to write: `let quz = if f() { 42 } else { 0 };`\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:107:5\n+  --> $DIR/let_if_seq.rs:108:5\n    |\n LL | /     let mut baz = 0;\n LL | |     if f() {\n@@ -66,26 +46,5 @@ LL | |     }\n    |\n    = note: you might not need `mut` at all\n \n-error: unneeded late initalization\n-  --> $DIR/let_if_seq.rs:78:5\n-   |\n-LL |     let quz;\n-   |     ^^^^^^^^\n-   |\n-help: declare `quz` here\n-   |\n-LL |     let quz = if f() {\n-   |     +++++++++\n-help: remove the assignments from the branches\n-   |\n-LL ~         42\n-LL |     } else {\n-LL ~         0\n-   |\n-help: add a semicolon after the if expression\n-   |\n-LL |     };\n-   |      +\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "6fdb4cc566f58f62a956ded4c0ada435da02c990", "filename": "tests/ui/needless_late_init.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.rs?ref=d346ec94fe3477ee2ee0cf41061a92c156db8701", "patch": "@@ -42,6 +42,40 @@ fn main() {\n     println!(\"{}\", a);\n }\n \n+async fn in_async() -> &'static str {\n+    async fn f() -> &'static str {\n+        \"one\"\n+    }\n+\n+    let a;\n+    let n = 1;\n+    match n {\n+        1 => a = f().await,\n+        _ => {\n+            a = \"two\";\n+        },\n+    }\n+\n+    a\n+}\n+\n+const fn in_const() -> &'static str {\n+    const fn f() -> &'static str {\n+        \"one\"\n+    }\n+\n+    let a;\n+    let n = 1;\n+    match n {\n+        1 => a = f(),\n+        _ => {\n+            a = \"two\";\n+        },\n+    }\n+\n+    a\n+}\n+\n fn does_not_lint() {\n     let z;\n     if false {"}, {"sha": "cbb7538c63b3e3aac924ef7de4a54362e599e4db", "filename": "tests/ui/needless_late_init.stderr", "status": "modified", "additions": 49, "deletions": 7, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Fneedless_late_init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Fneedless_late_init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.stderr?ref=d346ec94fe3477ee2ee0cf41061a92c156db8701", "patch": "@@ -9,13 +9,13 @@ help: declare `a` here\n    |\n LL |     let a = match n {\n    |     +++++++\n-help: remove the assignments from the match arms\n+help: remove the assignments from the `match` arms\n    |\n LL ~         1 => \"one\",\n LL |         _ => {\n LL ~             \"two\"\n    |\n-help: add a semicolon after the match expression\n+help: add a semicolon after the `match` expression\n    |\n LL |     };\n    |      +\n@@ -36,7 +36,7 @@ LL ~         \"four\"\n LL |     } else {\n LL ~         \"five\"\n    |\n-help: add a semicolon after the if expression\n+help: add a semicolon after the `if` expression\n    |\n LL |     };\n    |      +\n@@ -57,7 +57,7 @@ LL ~         n\n LL |     } else {\n LL ~         -50\n    |\n-help: add a semicolon after the if expression\n+help: add a semicolon after the `if` expression\n    |\n LL |     };\n    |      +\n@@ -78,7 +78,7 @@ LL ~         temp\n LL |     } else {\n LL ~         15\n    |\n-help: add a semicolon after the if expression\n+help: add a semicolon after the `if` expression\n    |\n LL |     };\n    |      +\n@@ -99,10 +99,52 @@ LL ~         format!(\"{} {}\", a, b)\n LL |     } else {\n LL ~         format!(\"{}\", c)\n    |\n-help: add a semicolon after the if expression\n+help: add a semicolon after the `if` expression\n    |\n LL |     };\n    |      +\n \n-error: aborting due to 5 previous errors\n+error: unneeded late initalization\n+  --> $DIR/needless_late_init.rs:50:5\n+   |\n+LL |     let a;\n+   |     ^^^^^^\n+   |\n+help: declare `a` here\n+   |\n+LL |     let a = match n {\n+   |     +++++++\n+help: remove the assignments from the `match` arms\n+   |\n+LL ~         1 => f().await,\n+LL |         _ => {\n+LL ~             \"two\"\n+   |\n+help: add a semicolon after the `match` expression\n+   |\n+LL |     };\n+   |      +\n+\n+error: unneeded late initalization\n+  --> $DIR/needless_late_init.rs:67:5\n+   |\n+LL |     let a;\n+   |     ^^^^^^\n+   |\n+help: declare `a` here\n+   |\n+LL |     let a = match n {\n+   |     +++++++\n+help: remove the assignments from the `match` arms\n+   |\n+LL ~         1 => f(),\n+LL |         _ => {\n+LL ~             \"two\"\n+   |\n+help: add a semicolon after the `match` expression\n+   |\n+LL |     };\n+   |      +\n+\n+error: aborting due to 7 previous errors\n "}, {"sha": "a0ce4f812f4e511e2c2436dda7237b7adb22ebfc", "filename": "tests/ui/needless_late_init_fixable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Fneedless_late_init_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d346ec94fe3477ee2ee0cf41061a92c156db8701/tests%2Fui%2Fneedless_late_init_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init_fixable.stderr?ref=d346ec94fe3477ee2ee0cf41061a92c156db8701", "patch": "@@ -64,7 +64,7 @@ help: declare `f` here\n    |\n LL |     let f = match 1 {\n    |     +++++++\n-help: remove the assignments from the match arms\n+help: remove the assignments from the `match` arms\n    |\n LL |         1 => \"three\",\n    |              ~~~~~~~\n@@ -83,7 +83,7 @@ help: remove the assignments from the branches\n    |\n LL |         5\n    |\n-help: add a semicolon after the if expression\n+help: add a semicolon after the `if` expression\n    |\n LL |     };\n    |      +"}]}