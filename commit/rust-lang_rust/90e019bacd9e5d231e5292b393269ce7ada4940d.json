{"sha": "90e019bacd9e5d231e5292b393269ce7ada4940d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZTAxOWJhY2Q5ZTVkMjMxZTUyOTJiMzkzMjY5Y2U3YWRhNDk0MGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-06T09:22:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-06T09:22:16Z"}, "message": "Auto merge of #47083 - CAD97:issue-46976, r=nikomatsakis\n\nIssue 46976\n\nICE is due to an empty path segments, so I set the path to be the same as the in band ty params symbol. (I think this is how regular generics end up being handled?)\n\nPinging @cramertj, this is your code I'm editing here.", "tree": {"sha": "7328c14fc2cc9df97f3c102c0bbeb5e326d89fe9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7328c14fc2cc9df97f3c102c0bbeb5e326d89fe9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90e019bacd9e5d231e5292b393269ce7ada4940d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90e019bacd9e5d231e5292b393269ce7ada4940d", "html_url": "https://github.com/rust-lang/rust/commit/90e019bacd9e5d231e5292b393269ce7ada4940d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90e019bacd9e5d231e5292b393269ce7ada4940d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdc6ca44c37e58be4064f44977515c66f4e07262", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdc6ca44c37e58be4064f44977515c66f4e07262", "html_url": "https://github.com/rust-lang/rust/commit/fdc6ca44c37e58be4064f44977515c66f4e07262"}, {"sha": "077ba8a7991ed3706cb2ebe2982607402a86f618", "url": "https://api.github.com/repos/rust-lang/rust/commits/077ba8a7991ed3706cb2ebe2982607402a86f618", "html_url": "https://github.com/rust-lang/rust/commit/077ba8a7991ed3706cb2ebe2982607402a86f618"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "059181d2a6a579ba2a42be2a10b27ceda0e5bfda", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/90e019bacd9e5d231e5292b393269ce7ada4940d/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90e019bacd9e5d231e5292b393269ce7ada4940d/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=90e019bacd9e5d231e5292b393269ce7ada4940d", "patch": "@@ -995,9 +995,10 @@ impl<'a> LoweringContext<'a> {\n                         );\n \n                         let hir_bounds = self.lower_bounds(bounds, itctx);\n+                        // Set the name to `impl Bound1 + Bound2`\n+                        let name = Symbol::intern(&pprust::ty_to_string(t));\n                         self.in_band_ty_params.push(hir::TyParam {\n-                            // Set the name to `impl Bound1 + Bound2`\n-                            name: Symbol::intern(&pprust::ty_to_string(t)),\n+                            name,\n                             id: def_node_id,\n                             bounds: hir_bounds,\n                             default: None,\n@@ -1009,7 +1010,7 @@ impl<'a> LoweringContext<'a> {\n                         hir::TyPath(hir::QPath::Resolved(None, P(hir::Path {\n                             span,\n                             def: Def::TyParam(DefId::local(def_index)),\n-                            segments: vec![].into(),\n+                            segments: hir_vec![hir::PathSegment::from_name(name)],\n                         })))\n                     },\n                     ImplTraitContext::Disallowed => {"}, {"sha": "a389b26a5879bbf2bde93626dead762a1e452409", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90e019bacd9e5d231e5292b393269ce7ada4940d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90e019bacd9e5d231e5292b393269ce7ada4940d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=90e019bacd9e5d231e5292b393269ce7ada4940d", "patch": "@@ -4136,7 +4136,11 @@ fn get_index_type_name(clean_type: &clean::Type, accept_generic: bool) -> Option\n     match *clean_type {\n         clean::ResolvedPath { ref path, .. } => {\n             let segments = &path.segments;\n-            Some(segments[segments.len() - 1].name.clone())\n+            let path_segment = segments.into_iter().last().unwrap_or_else(|| panic!(\n+                \"get_index_type_name(clean_type: {:?}, accept_generic: {:?}) had length zero path\",\n+                clean_type, accept_generic\n+            ));\n+            Some(path_segment.name.clone())\n         }\n         clean::Generic(ref s) if accept_generic => Some(s.clone()),\n         clean::Primitive(ref p) => Some(format!(\"{:?}\", p)),"}, {"sha": "0df80fe3bd77aa6c5dff05d97e78098361fff485", "filename": "src/test/rustdoc/issue-46976.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90e019bacd9e5d231e5292b393269ce7ada4940d/src%2Ftest%2Frustdoc%2Fissue-46976.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90e019bacd9e5d231e5292b393269ce7ada4940d/src%2Ftest%2Frustdoc%2Fissue-46976.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-46976.rs?ref=90e019bacd9e5d231e5292b393269ce7ada4940d", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(universal_impl_trait)]\n+pub fn ice(f: impl Fn()) {}"}]}