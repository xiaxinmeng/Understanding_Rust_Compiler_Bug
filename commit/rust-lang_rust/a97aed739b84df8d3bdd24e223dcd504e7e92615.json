{"sha": "a97aed739b84df8d3bdd24e223dcd504e7e92615", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5N2FlZDczOWI4NGRmOGQzYmRkMjRlMjIzZGNkNTA0ZTdlOTI2MTU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-19T17:33:59Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-20T16:40:02Z"}, "message": "Remove unnecessary logic when finding simpilar `impl` candidates.", "tree": {"sha": "dd06b1f49ce28b4c33331e5403ddda31a8f6b714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd06b1f49ce28b4c33331e5403ddda31a8f6b714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a97aed739b84df8d3bdd24e223dcd504e7e92615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a97aed739b84df8d3bdd24e223dcd504e7e92615", "html_url": "https://github.com/rust-lang/rust/commit/a97aed739b84df8d3bdd24e223dcd504e7e92615", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a97aed739b84df8d3bdd24e223dcd504e7e92615/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fe48d598ee188ae4d64a1fd12928e1026accf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/83fe48d598ee188ae4d64a1fd12928e1026accf7", "html_url": "https://github.com/rust-lang/rust/commit/83fe48d598ee188ae4d64a1fd12928e1026accf7"}], "stats": {"total": 34, "additions": 3, "deletions": 31}, "files": [{"sha": "9354a8f735bc6c2f0dfd91d4702e63a050641840", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 31, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a97aed739b84df8d3bdd24e223dcd504e7e92615/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aed739b84df8d3bdd24e223dcd504e7e92615/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=a97aed739b84df8d3bdd24e223dcd504e7e92615", "patch": "@@ -359,34 +359,9 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn report_similar_impl_candidates(&self,\n-                                      trait_ref: ty::PolyTraitRef<'tcx>,\n+                                      impl_candidates: Vec<ty::TraitRef<'tcx>>,\n                                       err: &mut DiagnosticBuilder)\n     {\n-        let simp = fast_reject::simplify_type(self.tcx,\n-                                              trait_ref.skip_binder().self_ty(),\n-                                              true);\n-        let mut impl_candidates = Vec::new();\n-        let trait_def = self.tcx.lookup_trait_def(trait_ref.def_id());\n-\n-        match simp {\n-            Some(simp) => trait_def.for_each_impl(self.tcx, |def_id| {\n-                let imp = self.tcx.impl_trait_ref(def_id).unwrap();\n-                let imp_simp = fast_reject::simplify_type(self.tcx,\n-                                                          imp.self_ty(),\n-                                                          true);\n-                if let Some(imp_simp) = imp_simp {\n-                    if simp != imp_simp {\n-                        return;\n-                    }\n-                }\n-                impl_candidates.push(imp);\n-            }),\n-            None => trait_def.for_each_impl(self.tcx, |def_id| {\n-                impl_candidates.push(\n-                    self.tcx.impl_trait_ref(def_id).unwrap());\n-            })\n-        };\n-\n         if impl_candidates.is_empty() {\n             return;\n         }\n@@ -574,11 +549,8 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                         } else {\n                             // If we can't show anything useful, try to find\n                             // similar impls.\n-                            let impl_candidates =\n-                                self.find_similar_impl_candidates(trait_ref);\n-                            if impl_candidates.len() > 0 {\n-                                self.report_similar_impl_candidates(trait_ref, &mut err);\n-                            }\n+                            let impl_candidates = self.find_similar_impl_candidates(trait_ref);\n+                            self.report_similar_impl_candidates(impl_candidates, &mut err);\n                         }\n                         err\n                     }"}]}