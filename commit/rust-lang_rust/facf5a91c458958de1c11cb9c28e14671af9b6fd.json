{"sha": "facf5a91c458958de1c11cb9c28e14671af9b6fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhY2Y1YTkxYzQ1ODk1OGRlMWMxMWNiOWMyOGUxNDY3MWFmOWI2ZmQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-08-04T22:13:01Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-08-13T00:15:43Z"}, "message": "Build rustdoc only at the top stage", "tree": {"sha": "41cc5eeb317da5208f16981fac9840eb448ab56d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41cc5eeb317da5208f16981fac9840eb448ab56d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/facf5a91c458958de1c11cb9c28e14671af9b6fd", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/facf5a91c458958de1c11cb9c28e14671af9b6fd", "html_url": "https://github.com/rust-lang/rust/commit/facf5a91c458958de1c11cb9c28e14671af9b6fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/facf5a91c458958de1c11cb9c28e14671af9b6fd/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad4acbaadf7d093f157e4499b2aedda9d91ec03b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad4acbaadf7d093f157e4499b2aedda9d91ec03b", "html_url": "https://github.com/rust-lang/rust/commit/ad4acbaadf7d093f157e4499b2aedda9d91ec03b"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "d469f7c1722a5b0b1f4a197d6219ee0b9ad3484c", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=facf5a91c458958de1c11cb9c28e14671af9b6fd", "patch": "@@ -407,22 +407,19 @@ impl<'a> Builder<'a> {\n         }\n     }\n \n-    pub fn rustdoc(&self, compiler: Compiler) -> PathBuf {\n-        self.ensure(tool::Rustdoc { target_compiler: compiler })\n+    pub fn rustdoc(&self, host: Interned<String>) -> PathBuf {\n+        self.ensure(tool::Rustdoc { host })\n     }\n \n-    pub fn rustdoc_cmd(&self, compiler: Compiler) -> Command {\n+    pub fn rustdoc_cmd(&self, host: Interned<String>) -> Command {\n         let mut cmd = Command::new(&self.out.join(\"bootstrap/debug/rustdoc\"));\n+        let compiler = self.compiler(self.top_stage, host);\n         cmd\n             .env(\"RUSTC_STAGE\", compiler.stage.to_string())\n-            .env(\"RUSTC_SYSROOT\", if compiler.is_snapshot(&self.build) {\n-                INTERNER.intern_path(self.build.rustc_snapshot_libdir())\n-            } else {\n-                self.sysroot(compiler)\n-            })\n-            .env(\"RUSTC_LIBDIR\", self.rustc_libdir(compiler))\n+            .env(\"RUSTC_SYSROOT\", self.sysroot(compiler))\n+            .env(\"RUSTC_LIBDIR\", self.sysroot_libdir(compiler, self.build.build))\n             .env(\"CFG_RELEASE_CHANNEL\", &self.build.config.channel)\n-            .env(\"RUSTDOC_REAL\", self.rustdoc(compiler));\n+            .env(\"RUSTDOC_REAL\", self.rustdoc(host));\n         cmd\n     }\n \n@@ -476,7 +473,7 @@ impl<'a> Builder<'a> {\n              .env(\"RUSTC_RPATH\", self.config.rust_rpath.to_string())\n              .env(\"RUSTDOC\", self.out.join(\"bootstrap/debug/rustdoc\"))\n              .env(\"RUSTDOC_REAL\", if cmd == \"doc\" || cmd == \"test\" {\n-                 self.rustdoc(compiler)\n+                 self.rustdoc(compiler.host)\n              } else {\n                  PathBuf::from(\"/path/to/nowhere/rustdoc/not/required\")\n              })"}, {"sha": "d4d6fdc5c1b7db436ef02916e15abdb8b8ace82b", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=facf5a91c458958de1c11cb9c28e14671af9b6fd", "patch": "@@ -164,7 +164,7 @@ impl Step for Cargotest {\n         try_run(build, cmd.arg(&build.initial_cargo)\n                           .arg(&out_dir)\n                           .env(\"RUSTC\", builder.rustc(compiler))\n-                          .env(\"RUSTDOC\", builder.rustdoc(compiler)));\n+                          .env(\"RUSTDOC\", builder.rustdoc(compiler.host)));\n     }\n }\n \n@@ -565,7 +565,7 @@ impl Step for Compiletest {\n \n         // Avoid depending on rustdoc when we don't need it.\n         if mode == \"rustdoc\" || mode == \"run-make\" {\n-            cmd.arg(\"--rustdoc-path\").arg(builder.rustdoc(compiler));\n+            cmd.arg(\"--rustdoc-path\").arg(builder.rustdoc(compiler.host));\n         }\n \n         cmd.arg(\"--src-base\").arg(build.src.join(\"src/test\").join(suite));\n@@ -814,7 +814,7 @@ fn markdown_test(builder: &Builder, compiler: Compiler, markdown: &Path) {\n     }\n \n     println!(\"doc tests for: {}\", markdown.display());\n-    let mut cmd = builder.rustdoc_cmd(compiler);\n+    let mut cmd = builder.rustdoc_cmd(compiler.host);\n     build.add_rust_test_threads(&mut cmd);\n     cmd.arg(\"--test\");\n     cmd.arg(markdown);"}, {"sha": "bfcfb5f9a37f8d994017461956d437aa83f1ef7b", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=facf5a91c458958de1c11cb9c28e14671af9b6fd", "patch": "@@ -413,8 +413,7 @@ impl Step for Rustc {\n             t!(fs::create_dir_all(image.join(\"bin\")));\n             cp_r(&src.join(\"bin\"), &image.join(\"bin\"));\n \n-            install(&builder.ensure(tool::Rustdoc { target_compiler: compiler }),\n-                &image.join(\"bin\"), 0o755);\n+            install(&builder.rustdoc(compiler.host), &image.join(\"bin\"), 0o755);\n \n             // Copy runtime DLLs needed by the compiler\n             if libdir != \"bin\" {"}, {"sha": "f0e0874abed604ba305e5544f176af65e41f2d5d", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=facf5a91c458958de1c11cb9c28e14671af9b6fd", "patch": "@@ -260,7 +260,7 @@ fn invoke_rustdoc(builder: &Builder, compiler: Compiler, target: Interned<String\n         t!(t!(File::create(&version_info)).write_all(info.as_bytes()));\n     }\n \n-    let mut cmd = builder.rustdoc_cmd(compiler);\n+    let mut cmd = builder.rustdoc_cmd(compiler.host);\n \n     let out = out.join(\"book\");\n \n@@ -343,7 +343,7 @@ impl Step for Standalone {\n             }\n \n             let html = out.join(filename).with_extension(\"html\");\n-            let rustdoc = builder.rustdoc(compiler);\n+            let rustdoc = builder.rustdoc(compiler.host);\n             if up_to_date(&path, &html) &&\n                up_to_date(&footer, &html) &&\n                up_to_date(&favicon, &html) &&\n@@ -353,7 +353,7 @@ impl Step for Standalone {\n                 continue\n             }\n \n-            let mut cmd = builder.rustdoc_cmd(compiler);\n+            let mut cmd = builder.rustdoc_cmd(compiler.host);\n             cmd.arg(\"--html-after-content\").arg(&footer)\n                .arg(\"--html-before-content\").arg(&version_info)\n                .arg(\"--html-in-header\").arg(&favicon)\n@@ -408,7 +408,7 @@ impl Step for Std {\n         let out = build.doc_out(target);\n         t!(fs::create_dir_all(&out));\n         let compiler = builder.compiler(stage, build.build);\n-        let rustdoc = builder.rustdoc(compiler);\n+        let rustdoc = builder.rustdoc(compiler.host);\n         let compiler = if build.force_use_stage1(compiler, target) {\n             builder.compiler(1, compiler.host)\n         } else {\n@@ -493,7 +493,7 @@ impl Step for Test {\n         let out = build.doc_out(target);\n         t!(fs::create_dir_all(&out));\n         let compiler = builder.compiler(stage, build.build);\n-        let rustdoc = builder.rustdoc(compiler);\n+        let rustdoc = builder.rustdoc(compiler.host);\n         let compiler = if build.force_use_stage1(compiler, target) {\n             builder.compiler(1, compiler.host)\n         } else {\n@@ -554,7 +554,7 @@ impl Step for Rustc {\n         let out = build.doc_out(target);\n         t!(fs::create_dir_all(&out));\n         let compiler = builder.compiler(stage, build.build);\n-        let rustdoc = builder.rustdoc(compiler);\n+        let rustdoc = builder.rustdoc(compiler.host);\n         let compiler = if build.force_use_stage1(compiler, target) {\n             builder.compiler(1, compiler.host)\n         } else {"}, {"sha": "89b1b1137973cc3c005f3336de716031535d02b3", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facf5a91c458958de1c11cb9c28e14671af9b6fd/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=facf5a91c458958de1c11cb9c28e14671af9b6fd", "patch": "@@ -236,7 +236,7 @@ impl Step for RemoteTestServer {\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Rustdoc {\n-    pub target_compiler: Compiler,\n+    pub host: Interned<String>,\n }\n \n impl Step for Rustdoc {\n@@ -250,13 +250,13 @@ impl Step for Rustdoc {\n \n     fn make_run(run: RunConfig) {\n         run.builder.ensure(Rustdoc {\n-            target_compiler: run.builder.compiler(run.builder.top_stage, run.host),\n+            host: run.host,\n         });\n     }\n \n     fn run(self, builder: &Builder) -> PathBuf {\n         let build = builder.build;\n-        let target_compiler = self.target_compiler;\n+        let target_compiler = builder.compiler(builder.top_stage, self.host);\n         let target = target_compiler.host;\n         let build_compiler = if target_compiler.stage == 0 {\n             builder.compiler(0, builder.build.build)"}]}