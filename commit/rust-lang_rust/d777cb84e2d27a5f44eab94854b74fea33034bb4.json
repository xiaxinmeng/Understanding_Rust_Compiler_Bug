{"sha": "d777cb84e2d27a5f44eab94854b74fea33034bb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NzdjYjg0ZTJkMjdhNWY0NGVhYjk0ODU0Yjc0ZmVhMzMwMzRiYjQ=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-07T17:44:36Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-07T17:44:36Z"}, "message": "less opt in const param of", "tree": {"sha": "fabbc7a16d6ddc1dab6690cd82c569437470e831", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fabbc7a16d6ddc1dab6690cd82c569437470e831"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d777cb84e2d27a5f44eab94854b74fea33034bb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d777cb84e2d27a5f44eab94854b74fea33034bb4", "html_url": "https://github.com/rust-lang/rust/commit/d777cb84e2d27a5f44eab94854b74fea33034bb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d777cb84e2d27a5f44eab94854b74fea33034bb4/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "508b328c398b84126011f6fe74d018fe855bc242", "url": "https://api.github.com/repos/rust-lang/rust/commits/508b328c398b84126011f6fe74d018fe855bc242", "html_url": "https://github.com/rust-lang/rust/commit/508b328c398b84126011f6fe74d018fe855bc242"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "7083b11f7d0ace4760477b4794a64316b89837da", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d777cb84e2d27a5f44eab94854b74fea33034bb4/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d777cb84e2d27a5f44eab94854b74fea33034bb4/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=d777cb84e2d27a5f44eab94854b74fea33034bb4", "patch": "@@ -190,8 +190,12 @@ pub(super) fn opt_const_param_of(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Option<\n                 // Try to use the segment resolution if it is valid, otherwise we\n                 // default to the path resolution.\n                 let res = segment.res.filter(|&r| r != Res::Err).unwrap_or(path.res);\n+                use def::CtorOf;\n                 let generics = match res {\n-                    Res::Def(DefKind::Ctor(..), def_id) => {\n+                    Res::Def(DefKind::Ctor(CtorOf::Variant, _), def_id) => {\n+                        tcx.generics_of(tcx.parent(def_id).and_then(|def_id| tcx.parent(def_id)).unwrap())\n+                    }\n+                    Res::Def(DefKind::Variant | DefKind::Ctor(CtorOf::Struct, _), def_id) => {\n                         tcx.generics_of(tcx.parent(def_id).unwrap())\n                     }\n                     // Other `DefKind`s don't have generics and would ICE when calling\n@@ -200,7 +204,6 @@ pub(super) fn opt_const_param_of(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Option<\n                         DefKind::Struct\n                         | DefKind::Union\n                         | DefKind::Enum\n-                        | DefKind::Variant\n                         | DefKind::Trait\n                         | DefKind::OpaqueTy\n                         | DefKind::TyAlias"}, {"sha": "a82db1c4b3217c13946c9d3fb0a7494fa35fd018", "filename": "src/test/ui/const-generics/enum-variants.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d777cb84e2d27a5f44eab94854b74fea33034bb4/src%2Ftest%2Fui%2Fconst-generics%2Fenum-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d777cb84e2d27a5f44eab94854b74fea33034bb4/src%2Ftest%2Fui%2Fconst-generics%2Fenum-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fenum-variants.rs?ref=d777cb84e2d27a5f44eab94854b74fea33034bb4", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+pub enum Foo<const N: usize> {\n+    Variant,\n+    Variant2(),\n+    Variant3{},\n+}\n+\n+struct Bar<const N: usize>;\n+struct Bar2<const N: usize>();\n+struct Bar3<const N: usize> {}\n+\n+fn main() {\n+    let _ = Foo::Variant::<1>;\n+    let _ = Foo::Variant2::<1>();\n+    let _ = Foo::Variant3::<1>{};\n+\n+    let _ = Foo::<1>::Variant;\n+    let _ = Foo::<1>::Variant2();\n+    let _ = Foo::<1>::Variant3{};\n+\n+    let _ = Bar::<1>;\n+    let _ = Bar2::<1>();\n+    let _ = Bar3::<1>{};\n+}"}]}