{"sha": "65839fa622c623393893b5610b6d3b4151abe233", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ODM5ZmE2MjJjNjIzMzkzODkzYjU2MTBiNmQzYjQxNTFhYmUyMzM=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-22T23:56:16Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-22T23:58:05Z"}, "message": "Emit a type error for integer literals where the expected type is char\n\nFor example, in let x: char = 42; This was an ICE and is now a\nproper type error, as per #3477", "tree": {"sha": "83daf90b0856e448616d5a662c648af20e464c85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83daf90b0856e448616d5a662c648af20e464c85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65839fa622c623393893b5610b6d3b4151abe233", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65839fa622c623393893b5610b6d3b4151abe233", "html_url": "https://github.com/rust-lang/rust/commit/65839fa622c623393893b5610b6d3b4151abe233", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65839fa622c623393893b5610b6d3b4151abe233/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c6e928e32390b410187f39f3bab9ffbcae4bd6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c6e928e32390b410187f39f3bab9ffbcae4bd6a", "html_url": "https://github.com/rust-lang/rust/commit/5c6e928e32390b410187f39f3bab9ffbcae4bd6a"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "01e52cfa1d0e5b1c7b68bbf8f6099dbc4597f013", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/65839fa622c623393893b5610b6d3b4151abe233/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65839fa622c623393893b5610b6d3b4151abe233/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=65839fa622c623393893b5610b6d3b4151abe233", "patch": "@@ -144,10 +144,11 @@ export kind_is_durable;\n export meta_kind, kind_lteq, type_kind, type_kind_ext;\n export operators;\n export type_err, terr_vstore_kind;\n-export terr_mismatch, terr_onceness_mismatch;\n+export terr_integer_as_char, terr_mismatch, terr_onceness_mismatch;\n export type_err_to_str, note_and_explain_type_err;\n export expected_found;\n export type_needs_drop;\n+export type_is_char;\n export type_is_empty;\n export type_is_integral;\n export type_is_numeric;\n@@ -696,6 +697,7 @@ enum type_err {\n     terr_in_field(@type_err, ast::ident),\n     terr_sorts(expected_found<t>),\n     terr_self_substs,\n+    terr_integer_as_char,\n     terr_no_integral_type,\n     terr_no_floating_point_type,\n }\n@@ -2520,6 +2522,13 @@ fn type_is_integral(ty: t) -> bool {\n     }\n }\n \n+fn type_is_char(ty: t) -> bool {\n+    match get(ty).sty {\n+        ty_int(ty_char) => true,\n+        _ => false\n+    }\n+}\n+\n fn type_is_fp(ty: t) -> bool {\n     match get(ty).sty {\n       ty_infer(FloatVar(_)) | ty_float(_) => true,\n@@ -3489,6 +3498,10 @@ fn type_err_to_str(cx: ctxt, err: &type_err) -> ~str {\n             ~\"couldn't determine an appropriate integral type for integer \\\n               literal\"\n         }\n+        terr_integer_as_char => {\n+            ~\"integer literals can't be inferred to char type \\\n+              (try an explicit cast)\"\n+        }\n         terr_no_floating_point_type => {\n             ~\"couldn't determine an appropriate floating point type for \\\n               floating point literal\""}, {"sha": "7ffd7e4720dfedac78e14f71bc7e63d24615f024", "filename": "src/librustc/middle/typeck/infer/unify.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65839fa622c623393893b5610b6d3b4151abe233/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65839fa622c623393893b5610b6d3b4151abe233/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs?ref=65839fa622c623393893b5610b6d3b4151abe233", "patch": "@@ -362,6 +362,10 @@ impl infer_ctxt {\n     }\n \n     fn int_var_sub_t(a_id: ty::IntVid, b: ty::t) -> ures {\n+        if ty::type_is_char(b) {\n+            return Err(ty::terr_integer_as_char);\n+        }\n+\n         assert ty::type_is_integral(b);\n \n         let vb = &self.int_var_bindings;"}, {"sha": "7e189348db354643f04082f6aa41e1e8f6e6ebc5", "filename": "src/test/compile-fail/issue-3477.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/65839fa622c623393893b5610b6d3b4151abe233/src%2Ftest%2Fcompile-fail%2Fissue-3477.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65839fa622c623393893b5610b6d3b4151abe233/src%2Ftest%2Fcompile-fail%2Fissue-3477.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3477.rs?ref=65839fa622c623393893b5610b6d3b4151abe233", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    let _p: char = 100; //~ ERROR mismatched types: expected `char` but found\n+}\n\\ No newline at end of file"}]}