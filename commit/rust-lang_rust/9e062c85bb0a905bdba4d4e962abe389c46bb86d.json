{"sha": "9e062c85bb0a905bdba4d4e962abe389c46bb86d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMDYyYzg1YmIwYTkwNWJkYmE0ZDRlOTYyYWJlMzg5YzQ2YmI4NmQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-30T15:11:52Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-30T15:33:27Z"}, "message": "Report a targeted note for generic parameters", "tree": {"sha": "d273a1f918c61a7b71d6c76870ef31d52d0a7f23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d273a1f918c61a7b71d6c76870ef31d52d0a7f23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e062c85bb0a905bdba4d4e962abe389c46bb86d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlogJMkACgkQpp+NIls6\n19lKfQ//Y2odfkty9nRi1LBhvISvo83pdO7I5USSDHtHWuc80N8ipfIe5CDyA2cc\n8PTezQGx0Gw6GMtLhUTZd6/GwajVyeRcizz1E+tQiXiZmYYsbG5Zk4gFoHRoAwgO\nvrjXeMHfD+Ola/Y04NYiWflyErWHxNS/tGhmhaYl2kkEgzdQOq+92b6GufWQ0u9t\nJiyLXC67VtlTSPjwYPSaVR/A+VrNrFwGypwh2A/oNjP7bcSuRZ+0epvZSaPA/Umi\nmlAX2yHmZ2hkiGifc8NjLgyWTmXRzr56dCevoU1ryPLcMEJy90aNpVmUWMfxK3pK\nIFDTLsPmoTTWsprYBBPyW65BGKbhUWRoutO7Oddh8YQDby+rdfF96i/i3NZr5Z+x\nTq8PRJKs3Fj11W16EL+RaCpMBR6tFn7GcGGT3OphJRNfkZil6vPzUmygdSmBL+vM\natmnXkNhBFznRHKAfcxsj0l2OAl3pkCpdpSsu/Yi2qCRpzaxe3+Nkz/1NiUkCgiU\nQzMiTcswHqYZfegWb1icj9g4sEeiVrq1busQfdPMcMT+gro78FzgUhgA+8j4iMxu\nHfmW9rn+EMkW7RKih4s8SgnvWYmVQMXCWACKCw+w16QH96MbYaodz3Sh07QKQQft\np4WxrPJ1hvp2+yMHSk+4SChiBpGoYZbW44qETdnQjpkfjWWcEjc=\n=fGVU\n-----END PGP SIGNATURE-----", "payload": "tree d273a1f918c61a7b71d6c76870ef31d52d0a7f23\nparent 12697fa998cb3def57275254df78825def0c01b8\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1512054712 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1512056007 +0100\n\nReport a targeted note for generic parameters\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e062c85bb0a905bdba4d4e962abe389c46bb86d", "html_url": "https://github.com/rust-lang/rust/commit/9e062c85bb0a905bdba4d4e962abe389c46bb86d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e062c85bb0a905bdba4d4e962abe389c46bb86d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12697fa998cb3def57275254df78825def0c01b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/12697fa998cb3def57275254df78825def0c01b8", "html_url": "https://github.com/rust-lang/rust/commit/12697fa998cb3def57275254df78825def0c01b8"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "e099d1c0c2531a46a7a43c809e3a00d682c23090", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e062c85bb0a905bdba4d4e962abe389c46bb86d/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e062c85bb0a905bdba4d4e962abe389c46bb86d/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=9e062c85bb0a905bdba4d4e962abe389c46bb86d", "patch": "@@ -289,6 +289,11 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                 // This has nothing here because it means we did string\n                                 // concatenation (e.g. \"Hello \" + \"World!\"). This means\n                                 // we don't want the note in the else clause to be emitted\n+                            } else if let ty::TyParam(_) = lhs_ty.sty {\n+                                // FIXME: point to span of param\n+                                err.note(\n+                                    &format!(\"`{}` might need a bound for `{}`\",\n+                                             lhs_ty, missing_trait));\n                             } else {\n                                 err.note(\n                                     &format!(\"an implementation of `{}` might be missing for `{}`\","}, {"sha": "fe008db68a00415bac81a0560c76a7a6cdc8335c", "filename": "src/test/ui/type-check/missing_trait_impl.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9e062c85bb0a905bdba4d4e962abe389c46bb86d/src%2Ftest%2Fui%2Ftype-check%2Fmissing_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e062c85bb0a905bdba4d4e962abe389c46bb86d/src%2Ftest%2Fui%2Ftype-check%2Fmissing_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fmissing_trait_impl.rs?ref=9e062c85bb0a905bdba4d4e962abe389c46bb86d", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+}\n+\n+fn foo<T>(x: T, y: T) {\n+    let z = x + y; //~ ERROR binary operation `+` cannot be applied to type `T`\n+    //~^ NOTE `T` might need a bound for `std::ops::Add`\n+}"}, {"sha": "64f8167eb1d01d2f82430016545a99cce3786369", "filename": "src/test/ui/type-check/missing_trait_impl.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9e062c85bb0a905bdba4d4e962abe389c46bb86d/src%2Ftest%2Fui%2Ftype-check%2Fmissing_trait_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9e062c85bb0a905bdba4d4e962abe389c46bb86d/src%2Ftest%2Fui%2Ftype-check%2Fmissing_trait_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fmissing_trait_impl.stderr?ref=9e062c85bb0a905bdba4d4e962abe389c46bb86d", "patch": "@@ -0,0 +1,10 @@\n+error[E0369]: binary operation `+` cannot be applied to type `T`\n+  --> $DIR/missing_trait_impl.rs:15:13\n+   |\n+15 |     let z = x + y; //~ ERROR binary operation `+` cannot be applied to type `T`\n+   |             ^^^^^\n+   |\n+   = note: `T` might need a bound for `std::ops::Add`\n+\n+error: aborting due to previous error\n+"}]}