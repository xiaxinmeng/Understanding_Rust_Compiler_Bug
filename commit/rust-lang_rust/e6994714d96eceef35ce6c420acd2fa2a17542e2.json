{"sha": "e6994714d96eceef35ce6c420acd2fa2a17542e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OTk0NzE0ZDk2ZWNlZWYzNWNlNmM0MjBhY2QyZmEyYTE3NTQyZTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-06T13:36:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-06T13:36:28Z"}, "message": "Rollup merge of #62821 - GuillaumeGomez:not-listed-methods, r=Mark-Simulacrum\n\nNot listed methods\n\nFixes #60326.\n\ncc @rust-lang/rustdoc\nr? @QuietMisdreavus", "tree": {"sha": "df330e82efae8cc7422c4f6fe25b8ac2dcc9ba26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df330e82efae8cc7422c4f6fe25b8ac2dcc9ba26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6994714d96eceef35ce6c420acd2fa2a17542e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSYJcCRBK7hj4Ov3rIwAAdHIIAF5FUodbDGIEBBd7hzuMFngr\nUVaiI9szZy2eE1IeQlAwJqkSxuhC4Gw5yfzmuHX7lfZmUs9Bd6BLIC7OsJj7Pwlf\n+n3m9sMOJdLrEUwa3DApB0oWSl5s/CaO99X7z3thVZZIQaF2eoOuNpXiX6FODGKI\nF+XniM+MFvObM1HFf/l0IBfPRiMvnSfchYGKmMZr7M4vnLcQGPx2S/dskfVSLJcn\n/tyIl7CXcDfU7yrNOqQsxLXSCR4b61hdnzUgiBZTHHDhwwXeutJ0gkcQG2q86DaB\n6sn9CUHye7G3vF0G0A+JHqRHWlllG33MbMAUl1/se54sPM3tG9xloXkmtCLUa5c=\n=zfYT\n-----END PGP SIGNATURE-----\n", "payload": "tree df330e82efae8cc7422c4f6fe25b8ac2dcc9ba26\nparent c32735d03c5dffe4acf79f500bb2f248469a4e66\nparent 4fb29f9fd2758a5c07328fc12aa771bb239f9450\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565098588 +0200\ncommitter GitHub <noreply@github.com> 1565098588 +0200\n\nRollup merge of #62821 - GuillaumeGomez:not-listed-methods, r=Mark-Simulacrum\n\nNot listed methods\n\nFixes #60326.\n\ncc @rust-lang/rustdoc\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6994714d96eceef35ce6c420acd2fa2a17542e2", "html_url": "https://github.com/rust-lang/rust/commit/e6994714d96eceef35ce6c420acd2fa2a17542e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6994714d96eceef35ce6c420acd2fa2a17542e2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c32735d03c5dffe4acf79f500bb2f248469a4e66", "url": "https://api.github.com/repos/rust-lang/rust/commits/c32735d03c5dffe4acf79f500bb2f248469a4e66", "html_url": "https://github.com/rust-lang/rust/commit/c32735d03c5dffe4acf79f500bb2f248469a4e66"}, {"sha": "4fb29f9fd2758a5c07328fc12aa771bb239f9450", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb29f9fd2758a5c07328fc12aa771bb239f9450", "html_url": "https://github.com/rust-lang/rust/commit/4fb29f9fd2758a5c07328fc12aa771bb239f9450"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "ea0ebe47100790e345555ea80cead9caa8dd72b1", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6994714d96eceef35ce6c420acd2fa2a17542e2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6994714d96eceef35ce6c420acd2fa2a17542e2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e6994714d96eceef35ce6c420acd2fa2a17542e2", "patch": "@@ -4579,12 +4579,13 @@ fn get_methods(\n     i: &clean::Impl,\n     for_deref: bool,\n     used_links: &mut FxHashSet<String>,\n+    deref_mut: bool,\n ) -> Vec<String> {\n     i.items.iter().filter_map(|item| {\n         match item.name {\n             // Maybe check with clean::Visibility::Public as well?\n             Some(ref name) if !name.is_empty() && item.visibility.is_some() && item.is_method() => {\n-                if !for_deref || should_render_item(item, false) {\n+                if !for_deref || should_render_item(item, deref_mut) {\n                     Some(format!(\"<a href=\\\"#{}\\\">{}</a>\",\n                                  get_next_url(used_links, format!(\"method.{}\", name)),\n                                  name))\n@@ -4625,7 +4626,7 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                            .filter(|i| i.inner_impl().trait_.is_none())\n                            .flat_map(move |i| get_methods(i.inner_impl(),\n                                                           false,\n-                                                          &mut used_links_bor.borrow_mut()))\n+                                                          &mut used_links_bor.borrow_mut(), false))\n                            .collect::<Vec<_>>();\n             // We want links' order to be reproducible so we don't use unstable sort.\n             ret.sort();\n@@ -4659,7 +4660,8 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                                            .filter(|i| i.inner_impl().trait_.is_none())\n                                            .flat_map(|i| get_methods(i.inner_impl(),\n                                                                      true,\n-                                                                     &mut used_links))\n+                                                                     &mut used_links,\n+                                                                     true))\n                                            .collect::<Vec<_>>();\n                         // We want links' order to be reproducible so we don't use unstable sort.\n                         ret.sort();"}, {"sha": "0e27fc90b69a6cc69d87ddfeca7413a37e86efb3", "filename": "src/test/rustdoc/deref-mut-methods.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e6994714d96eceef35ce6c420acd2fa2a17542e2/src%2Ftest%2Frustdoc%2Fderef-mut-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6994714d96eceef35ce6c420acd2fa2a17542e2/src%2Ftest%2Frustdoc%2Fderef-mut-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-mut-methods.rs?ref=e6994714d96eceef35ce6c420acd2fa2a17542e2", "patch": "@@ -0,0 +1,29 @@\n+#![crate_name = \"foo\"]\n+\n+use std::ops;\n+\n+pub struct Foo;\n+\n+impl Foo {\n+    pub fn foo(&mut self) {}\n+}\n+\n+// @has foo/struct.Bar.html\n+// @has - '//div[@class=\"sidebar-links\"]/a[@href=\"#method.foo\"]' 'foo'\n+pub struct Bar {\n+    foo: Foo,\n+}\n+\n+impl ops::Deref for Bar {\n+    type Target = Foo;\n+\n+    fn deref(&self) -> &Foo {\n+        &self.foo\n+    }\n+}\n+\n+impl ops::DerefMut for Bar {\n+    fn deref_mut(&mut self) -> &mut Foo {\n+        &mut self.foo\n+    }\n+}"}]}