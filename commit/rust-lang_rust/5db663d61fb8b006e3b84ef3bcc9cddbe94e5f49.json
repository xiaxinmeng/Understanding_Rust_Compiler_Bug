{"sha": "5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjY2M2Q2MWZiOGIwMDZlM2I4NGVmM2JjYzljZGRiZTk0ZTVmNDk=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-16T15:45:10Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-17T23:42:23Z"}, "message": "Clippy lint:  single-character string constant", "tree": {"sha": "b4b904c3580f975bc69f1f68ff938fe70da11bfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4b904c3580f975bc69f1f68ff938fe70da11bfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "html_url": "https://github.com/rust-lang/rust/commit/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dbf0379ccd5c7643d48658f0ecc224add5a5c5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbf0379ccd5c7643d48658f0ecc224add5a5c5c", "html_url": "https://github.com/rust-lang/rust/commit/4dbf0379ccd5c7643d48658f0ecc224add5a5c5c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9b0d935afb519dc913070707f9aa03e90bccf4dd", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "patch": "@@ -388,7 +388,7 @@ impl AnalysisImpl {\n                                     .text()\n                                     .slice(range_search)\n                                     .to_string()\n-                                    .matches(\",\")\n+                                    .matches(',')\n                                     .count();\n \n                                 // If we have a method call eat the first param since it's just self."}, {"sha": "9d8df25c3adb5a3599c9cb2384cbe4c39e52335a", "filename": "crates/ra_editor/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs?ref=5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "patch": "@@ -63,7 +63,7 @@ fn extend_ws(root: SyntaxNodeRef, ws: SyntaxNodeRef, offset: TextUnit) -> TextRa\n     let prefix = TextRange::from_to(ws.range().start(), offset) - ws.range().start();\n     let ws_suffix = &ws_text.as_str()[suffix];\n     let ws_prefix = &ws_text.as_str()[prefix];\n-    if ws_text.contains(\"\\n\") && !ws_suffix.contains(\"\\n\") {\n+    if ws_text.contains('\\n') && !ws_suffix.contains('\\n') {\n         if let Some(node) = ws.next_sibling() {\n             let start = match ws_prefix.rfind('\\n') {\n                 Some(idx) => ws.range().start() + TextUnit::from((idx + 1) as u32),"}, {"sha": "49bd7895a6635f3b0ddf979e90db9621ced28984", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "patch": "@@ -160,8 +160,8 @@ pub fn handle_workspace_symbol(\n     params: req::WorkspaceSymbolParams,\n     token: JobToken,\n ) -> Result<Option<Vec<SymbolInformation>>> {\n-    let all_symbols = params.query.contains(\"#\");\n-    let libs = params.query.contains(\"*\");\n+    let all_symbols = params.query.contains('#');\n+    let libs = params.query.contains('*');\n     let query = {\n         let query: String = params\n             .query"}, {"sha": "7c5410d3c7865ecded0a28b9ed111f5ee2c26aa1", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=5db663d61fb8b006e3b84ef3bcc9cddbe94e5f49", "patch": "@@ -50,7 +50,7 @@ pub fn collect_tests(s: &str) -> Vec<(usize, Test)> {\n             block.map(|(_, line)| line).chain(::std::iter::once(\"\")),\n             \"\\n\",\n         );\n-        assert!(!text.trim().is_empty() && text.ends_with(\"\\n\"));\n+        assert!(!text.trim().is_empty() && text.ends_with('\\n'));\n         res.push((start_line, Test { name, text }))\n     }\n     res"}]}