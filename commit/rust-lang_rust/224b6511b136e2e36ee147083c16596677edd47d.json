{"sha": "224b6511b136e2e36ee147083c16596677edd47d", "node_id": "C_kwDOAAsO6NoAKDIyNGI2NTExYjEzNmUyZTM2ZWUxNDcwODNjMTY1OTY2NzdlZGQ0N2Q", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-24T04:05:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-24T04:05:37Z"}, "message": "Rollup merge of #111861 - compiler-errors:rtn-in-super, r=jackh726\n\nDon't ICE on return-type notation when promoting trait preds to associated type bounds\n\nFixes #111846", "tree": {"sha": "65c8da0e52fcb8c4ba835d5832c62f3f190e879b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65c8da0e52fcb8c4ba835d5832c62f3f190e879b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224b6511b136e2e36ee147083c16596677edd47d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkbY0RCRBK7hj4Ov3rIwAAYasIAJCBlY+8KG/mGUvnBH+t4Wv7\n/hQf5OcGv1rWuR5y5OcUvNjYTSNjbFFbWw55VWyqEDvzvp58dbUa79lYLFVoQ+OE\nBD1iJOdmuR7WRaSdui/hz3S3v24B2sbIguiTsuCwHOeD7ARt6nKvgJOA5LqsUv1w\n1Ek41kh2LSy92qsvkOuohUjmqUgqt4uxzF0ruyfZQt5tQ4n/GBkPAlFYIbW8dwwo\nqUdA6a0xqJFMT0Y4qYnR7TCQCGFee+quG1Y0hDOzA2TNmqrG2ms2dOQP4S+3RE/g\no2HzvgxmMMew0+D9JhjDQHU2gG+SseTJ4aefB1PJTEwom7VqxW2jpvt6ANEOmNw=\n=x3Y3\n-----END PGP SIGNATURE-----\n", "payload": "tree 65c8da0e52fcb8c4ba835d5832c62f3f190e879b\nparent edbd5c5a78853d11f66b7581b6b90109b4853b7b\nparent e54bc1c5ff7f17aa38632597719141688ee24242\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684901137 +0200\ncommitter GitHub <noreply@github.com> 1684901137 +0200\n\nRollup merge of #111861 - compiler-errors:rtn-in-super, r=jackh726\n\nDon't ICE on return-type notation when promoting trait preds to associated type bounds\n\nFixes #111846\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224b6511b136e2e36ee147083c16596677edd47d", "html_url": "https://github.com/rust-lang/rust/commit/224b6511b136e2e36ee147083c16596677edd47d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224b6511b136e2e36ee147083c16596677edd47d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edbd5c5a78853d11f66b7581b6b90109b4853b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/edbd5c5a78853d11f66b7581b6b90109b4853b7b", "html_url": "https://github.com/rust-lang/rust/commit/edbd5c5a78853d11f66b7581b6b90109b4853b7b"}, {"sha": "e54bc1c5ff7f17aa38632597719141688ee24242", "url": "https://api.github.com/repos/rust-lang/rust/commits/e54bc1c5ff7f17aa38632597719141688ee24242", "html_url": "https://github.com/rust-lang/rust/commit/e54bc1c5ff7f17aa38632597719141688ee24242"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e5b5dae551e875c2d4635b8e5b3a65d398cd3765", "filename": "compiler/rustc_hir_analysis/src/collect/predicates_of.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/224b6511b136e2e36ee147083c16596677edd47d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fpredicates_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224b6511b136e2e36ee147083c16596677edd47d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fpredicates_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fpredicates_of.rs?ref=224b6511b136e2e36ee147083c16596677edd47d", "patch": "@@ -427,6 +427,8 @@ pub(super) fn explicit_predicates_of<'tcx>(\n             //   supertrait).\n             if let ty::Alias(ty::Projection, projection) = ty.kind() {\n                 projection.substs == trait_identity_substs\n+                    // FIXME(return_type_notation): This check should be more robust\n+                    && !tcx.is_impl_trait_in_trait(projection.def_id)\n                     && tcx.associated_item(projection.def_id).container_id(tcx)\n                         == def_id.to_def_id()\n             } else {"}, {"sha": "19bcfe3046bdc1cdd2904676e2381c461031bd7e", "filename": "tests/ui/async-await/return-type-notation/supertrait-bound.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/224b6511b136e2e36ee147083c16596677edd47d/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsupertrait-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224b6511b136e2e36ee147083c16596677edd47d/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsupertrait-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsupertrait-bound.rs?ref=224b6511b136e2e36ee147083c16596677edd47d", "patch": "@@ -0,0 +1,11 @@\n+// check-pass\n+\n+#![feature(return_position_impl_trait_in_trait, return_type_notation)]\n+//~^ WARN the feature `return_type_notation` is incomplete and may not be safe to use\n+\n+trait IntFactory {\n+    fn stream(&self) -> impl Iterator<Item = i32>;\n+}\n+trait SendIntFactory: IntFactory<stream(): Send> + Send {}\n+\n+fn main() {}"}, {"sha": "c8cec4946b4e4dbd0a6c50f093a9f5a4970d2f3e", "filename": "tests/ui/async-await/return-type-notation/supertrait-bound.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/224b6511b136e2e36ee147083c16596677edd47d/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsupertrait-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/224b6511b136e2e36ee147083c16596677edd47d/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsupertrait-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsupertrait-bound.stderr?ref=224b6511b136e2e36ee147083c16596677edd47d", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `return_type_notation` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/supertrait-bound.rs:3:49\n+   |\n+LL | #![feature(return_position_impl_trait_in_trait, return_type_notation)]\n+   |                                                 ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #109417 <https://github.com/rust-lang/rust/issues/109417> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}