{"sha": "b93408d0b2609b82f869b1953122df4a46bb0014", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MzQwOGQwYjI2MDliODJmODY5YjE5NTMxMjJkZjRhNDZiYjAwMTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-12T08:21:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-12T08:21:19Z"}, "message": "Merge #5715\n\n5715: Simplify\n\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "8f278d6a23234a8b7a0b304c3eb5cad4b92b1e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f278d6a23234a8b7a0b304c3eb5cad4b92b1e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b93408d0b2609b82f869b1953122df4a46bb0014", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfM6Z/CRBK7hj4Ov3rIwAAdHIIAEmEZnRYhZWOoEZq2wJmQPBL\nZkbyadDRu8UK3UPH3fvkzm6mEWLZj39Sy/C1QkLnhDSlNckhaii8DYkjJH2C4IsT\niJ42D+g3ba7TDVohscTCBPzoyPCHTVP1dNoa7Jz0aYxAdffqkvyeNJ6hE3OoUyds\nby6n0hydPw60WV3/zBItmmnb7pahQBjH4M6+JhuzhmUBMvLb0iJKydeB0r8taoZh\ng8GBmD9VyoAxnafNzkWPFmNYog+wcX19Yqu8d6qX11kurQzybLOXWEXcWlNtOQqf\ncfYQNJktGvJQdl6ekkYLMcrwm4AxUGNIdA6Q2rItvOx6Pt2RTeEp2mi2WmVEfX4=\n=CnpY\n-----END PGP SIGNATURE-----\n", "payload": "tree 8f278d6a23234a8b7a0b304c3eb5cad4b92b1e59\nparent e0de2475208765a171f335dfffde764f96243d41\nparent 8aba6bfef511acb2c5dc968bd75ef291c2ad3425\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597220479 +0000\ncommitter GitHub <noreply@github.com> 1597220479 +0000\n\nMerge #5715\n\n5715: Simplify\n\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b93408d0b2609b82f869b1953122df4a46bb0014", "html_url": "https://github.com/rust-lang/rust/commit/b93408d0b2609b82f869b1953122df4a46bb0014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b93408d0b2609b82f869b1953122df4a46bb0014/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0de2475208765a171f335dfffde764f96243d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0de2475208765a171f335dfffde764f96243d41", "html_url": "https://github.com/rust-lang/rust/commit/e0de2475208765a171f335dfffde764f96243d41"}, {"sha": "8aba6bfef511acb2c5dc968bd75ef291c2ad3425", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aba6bfef511acb2c5dc968bd75ef291c2ad3425", "html_url": "https://github.com/rust-lang/rust/commit/8aba6bfef511acb2c5dc968bd75ef291c2ad3425"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d2487acc3b9c4b6d449db01cc1599e384c3c2060", "filename": "crates/ra_parser/src/parser.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b93408d0b2609b82f869b1953122df4a46bb0014/crates%2Fra_parser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93408d0b2609b82f869b1953122df4a46bb0014/crates%2Fra_parser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fparser.rs?ref=b93408d0b2609b82f869b1953122df4a46bb0014", "patch": "@@ -269,8 +269,8 @@ impl Marker {\n     pub(crate) fn complete(mut self, p: &mut Parser, kind: SyntaxKind) -> CompletedMarker {\n         self.bomb.defuse();\n         let idx = self.pos as usize;\n-        match p.events[idx] {\n-            Event::Start { kind: ref mut slot, .. } => {\n+        match &mut p.events[idx] {\n+            Event::Start { kind: slot, .. } => {\n                 *slot = kind;\n             }\n             _ => unreachable!(),\n@@ -320,8 +320,8 @@ impl CompletedMarker {\n     pub(crate) fn precede(self, p: &mut Parser) -> Marker {\n         let new_pos = p.start();\n         let idx = self.start_pos as usize;\n-        match p.events[idx] {\n-            Event::Start { ref mut forward_parent, .. } => {\n+        match &mut p.events[idx] {\n+            Event::Start { forward_parent, .. } => {\n                 *forward_parent = Some(new_pos.pos - self.start_pos);\n             }\n             _ => unreachable!(),\n@@ -333,12 +333,12 @@ impl CompletedMarker {\n     pub(crate) fn undo_completion(self, p: &mut Parser) -> Marker {\n         let start_idx = self.start_pos as usize;\n         let finish_idx = self.finish_pos as usize;\n-        match p.events[start_idx] {\n-            Event::Start { ref mut kind, forward_parent: None } => *kind = TOMBSTONE,\n+        match &mut p.events[start_idx] {\n+            Event::Start { kind, forward_parent: None } => *kind = TOMBSTONE,\n             _ => unreachable!(),\n         }\n-        match p.events[finish_idx] {\n-            ref mut slot @ Event::Finish => *slot = Event::tombstone(),\n+        match &mut p.events[finish_idx] {\n+            slot @ Event::Finish => *slot = Event::tombstone(),\n             _ => unreachable!(),\n         }\n         Marker::new(self.start_pos)"}]}