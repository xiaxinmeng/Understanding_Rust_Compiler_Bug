{"sha": "d8287f0e41be93fa0c902cac71637cbcb1632a50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4Mjg3ZjBlNDFiZTkzZmEwYzkwMmNhYzcxNjM3Y2JjYjE2MzJhNTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-06T00:31:46Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-06T00:31:46Z"}, "message": "rustc: Translate default methods on traits for each impl in which they're used instead of once.\n\nThis is a step on the way to default methods.", "tree": {"sha": "c4b844f18a54c17a30b2afed3ca005b09c1f028a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4b844f18a54c17a30b2afed3ca005b09c1f028a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8287f0e41be93fa0c902cac71637cbcb1632a50", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8287f0e41be93fa0c902cac71637cbcb1632a50", "html_url": "https://github.com/rust-lang/rust/commit/d8287f0e41be93fa0c902cac71637cbcb1632a50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8287f0e41be93fa0c902cac71637cbcb1632a50/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "937f8f4067836de1a56dbe75fb8b1ae3179a73e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/937f8f4067836de1a56dbe75fb8b1ae3179a73e9", "html_url": "https://github.com/rust-lang/rust/commit/937f8f4067836de1a56dbe75fb8b1ae3179a73e9"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "ce4ec72a582cecde61caea646c9a141cb213baa9", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d8287f0e41be93fa0c902cac71637cbcb1632a50/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8287f0e41be93fa0c902cac71637cbcb1632a50/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=d8287f0e41be93fa0c902cac71637cbcb1632a50", "patch": "@@ -21,7 +21,7 @@ use session::session;\n use syntax::attr;\n use back::{link, abi, upcall};\n use syntax::{ast, ast_util, codemap, ast_map};\n-use ast_util::{local_def, path_to_ident};\n+use ast_util::{def_id_of_def, local_def, path_to_ident};\n use syntax::visit;\n use syntax::codemap::span;\n use syntax::print::pprust::{expr_to_str, stmt_to_str, path_to_str};\n@@ -1847,8 +1847,33 @@ fn trans_item(ccx: @crate_ctxt, item: ast::item) {\n             }\n         }\n       }\n-      ast::item_impl(tps, _, _, ms) => {\n+      ast::item_impl(tps, trait_refs, _, ms) => {\n         meth::trans_impl(ccx, *path, item.ident, ms, tps);\n+\n+        // Translate any methods that have provided implementations.\n+        for trait_refs.each |trait_ref_ptr| {\n+            let trait_def = ccx.tcx.def_map.get(trait_ref_ptr.ref_id);\n+\n+            // XXX: Cross-crate default methods.\n+            match ccx.tcx.items.get(def_id_of_def(trait_def).node) {\n+                ast_map::node_item(trait_item, _) => {\n+                    match trait_item.node {\n+                        ast::item_trait(tps, _, trait_methods) => {\n+                            trans_trait(ccx, tps, trait_methods, path,\n+                                        item.ident);\n+                        }\n+                        _ => {\n+                            ccx.tcx.sess.impossible_case(item.span,\n+                                                         ~\"trait item not a \\\n+                                                           trait\");\n+                        }\n+                    }\n+                }\n+                _ => {\n+                    ccx.tcx.sess.impossible_case(item.span, ~\"no trait item\");\n+                }\n+            }\n+        }\n       }\n       ast::item_mod(m) => {\n         trans_mod(ccx, m);\n@@ -1873,9 +1898,6 @@ fn trans_item(ccx: @crate_ctxt, item: ast::item) {\n       ast::item_class(struct_def, tps) => {\n         trans_struct_def(ccx, struct_def, tps, path, item.ident, item.id);\n       }\n-      ast::item_trait(tps, _, trait_methods) => {\n-        trans_trait(ccx, tps, trait_methods, path, item.ident);\n-      }\n       _ => {/* fall through */ }\n     }\n }"}]}