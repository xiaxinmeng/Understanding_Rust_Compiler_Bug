{"sha": "ab44a811501c12c4e3c471387f02ad451034639f", "node_id": "C_kwDOAAsO6NoAKGFiNDRhODExNTAxYzEyYzRlM2M0NzEzODdmMDJhZDQ1MTAzNDYzOWY", "commit": {"author": {"name": "fprasx", "email": "felix725@gmail.com", "date": "2022-08-04T14:43:09Z"}, "committer": {"name": "fprasx", "email": "felix725@gmail.com", "date": "2022-08-04T14:43:09Z"}, "message": "Fixed up for loops, added fixme with problem\n\nhttps://github.com/rust-lang/rust-analyzer/pull/12937#discussion_r937633695", "tree": {"sha": "80ed5a4c2a1ddfe8a14c5e12548356e86ff8f282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80ed5a4c2a1ddfe8a14c5e12548356e86ff8f282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab44a811501c12c4e3c471387f02ad451034639f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab44a811501c12c4e3c471387f02ad451034639f", "html_url": "https://github.com/rust-lang/rust/commit/ab44a811501c12c4e3c471387f02ad451034639f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab44a811501c12c4e3c471387f02ad451034639f/comments", "author": {"login": "fprasx", "id": 91577249, "node_id": "U_kgDOBXVboQ", "avatar_url": "https://avatars.githubusercontent.com/u/91577249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fprasx", "html_url": "https://github.com/fprasx", "followers_url": "https://api.github.com/users/fprasx/followers", "following_url": "https://api.github.com/users/fprasx/following{/other_user}", "gists_url": "https://api.github.com/users/fprasx/gists{/gist_id}", "starred_url": "https://api.github.com/users/fprasx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fprasx/subscriptions", "organizations_url": "https://api.github.com/users/fprasx/orgs", "repos_url": "https://api.github.com/users/fprasx/repos", "events_url": "https://api.github.com/users/fprasx/events{/privacy}", "received_events_url": "https://api.github.com/users/fprasx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fprasx", "id": 91577249, "node_id": "U_kgDOBXVboQ", "avatar_url": "https://avatars.githubusercontent.com/u/91577249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fprasx", "html_url": "https://github.com/fprasx", "followers_url": "https://api.github.com/users/fprasx/followers", "following_url": "https://api.github.com/users/fprasx/following{/other_user}", "gists_url": "https://api.github.com/users/fprasx/gists{/gist_id}", "starred_url": "https://api.github.com/users/fprasx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fprasx/subscriptions", "organizations_url": "https://api.github.com/users/fprasx/orgs", "repos_url": "https://api.github.com/users/fprasx/repos", "events_url": "https://api.github.com/users/fprasx/events{/privacy}", "received_events_url": "https://api.github.com/users/fprasx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6d8a1c18f29ad6402f9594e3908cbb6d80aa31c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6d8a1c18f29ad6402f9594e3908cbb6d80aa31c", "html_url": "https://github.com/rust-lang/rust/commit/d6d8a1c18f29ad6402f9594e3908cbb6d80aa31c"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "46257b6bc4dce2faf5081807f2f3487461194224", "filename": "crates/hir-expand/src/fixup.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ab44a811501c12c4e3c471387f02ad451034639f/crates%2Fhir-expand%2Fsrc%2Ffixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab44a811501c12c4e3c471387f02ad451034639f/crates%2Fhir-expand%2Fsrc%2Ffixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Ffixup.rs?ref=ab44a811501c12c4e3c471387f02ad451034639f", "patch": "@@ -240,10 +240,9 @@ pub(crate) fn fixup_syntax(node: &SyntaxNode) -> SyntaxFixups {\n \n                     if it.pat().is_none() && it.in_token().is_none() && it.iterable().is_none() {\n                         append.insert(for_token.into(), vec![pat, in_token, iter]);\n+                    // does something funky -- see test case for_no_pat\n                     } else if it.pat().is_none() {\n                         append.insert(for_token.into(), vec![pat]);\n-                    } else if it.pat().is_none() && it.in_token().is_none() {\n-                        append.insert(for_token.into(), vec![pat, in_token]);\n                     }\n \n                     if it.loop_body().is_none() {\n@@ -356,7 +355,7 @@ mod tests {\n     }\n \n     #[test]\n-    fn for_no_iter_no_body() {\n+    fn just_for_token() {\n         check(\n             r#\"\n fn foo() {\n@@ -369,42 +368,47 @@ fn foo () {for _ in __ra_fixup {}}\n         )\n     }\n \n-    fn for_no_iter_no_in() {\n+    #[test]\n+    fn for_no_iter_pattern() {\n         check(\n             r#\"\n fn foo() {\n-    for _ {}\n+    for {}\n }\n \"#,\n             expect![[r#\"\n fn foo () {for _ in __ra_fixup {}}\n \"#]],\n         )\n     }\n+\n     #[test]\n-    fn for_no_iter() {\n+    fn for_no_body() {\n         check(\n             r#\"\n fn foo() {\n-    for {}\n+    for bar in qux\n }\n \"#,\n             expect![[r#\"\n-fn foo () {for _ in __ra_fixup {}}\n+fn foo () {for bar in qux {}}\n \"#]],\n         )\n     }\n \n+    // FIXME: https://github.com/rust-lang/rust-analyzer/pull/12937#discussion_r937633695\n     #[test]\n-    fn for_no_body() {\n+    fn for_no_pat() {\n         check(\n             r#\"\n fn foo() {\n-    for bar in qux\n+    for in qux {\n+\n+    }\n }\n \"#,\n             expect![[r#\"\n-fn foo () {for bar in qux {}}\n+fn foo () {__ra_fixup}\n \"#]],\n         )\n     }"}]}