{"sha": "576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NmU5YWYwYWVhM2ViOTNjMmE3Zjk0MGJmMWJkYTdmMmQ3NjFkMGE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-06-06T02:37:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-06T02:37:25Z"}, "message": "Merge pull request #2769 from topecongiro/issue-2765\n\nPut each nested import on its own line", "tree": {"sha": "559505ef6778aacb712920c32b195cba2bbc4135", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/559505ef6778aacb712920c32b195cba2bbc4135"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbF0jlCRBK7hj4Ov3rIwAAdHIIAFM9KT0hRLEJ62VOxc1f2iZy\nUSGdzKB5YFoMYWE7obCDMMlks/B2d+YzKHV3eTEL9LnFVp+0VmL7QqhQu1WtgbRo\nm4L2h879z5DsYAMSczIM70a5zqE8Eit7/Cs25ockEXb0LapeNVnKF2VMHewRmSas\n3Z9Wpqf5HNAO3oHFUJZdkdSxpbvWEw2JBnxDiuwWviRgkuVLlS0vxrOlajQx7x1C\nLdv6B9XsCtUFHeUI7AXZO1e/vhM6spt+dfw8t64/LRWwbo70Ug7W9sae1ejHch3U\n0/QlxjbC5M4dNe+a8mcW0d5aiNt8E3EhH+zW6eIYDtb2xAmu0oSNAKs46jOIjAI=\n=5pdk\n-----END PGP SIGNATURE-----\n", "payload": "tree 559505ef6778aacb712920c32b195cba2bbc4135\nparent f545dfe95eca33dfc753bd9b57bd2753efddf3e8\nparent 42ab258757167abcc067433aa15945f5c51a1e8e\nauthor Nick Cameron <nrc@ncameron.org> 1528252645 +1200\ncommitter GitHub <noreply@github.com> 1528252645 +1200\n\nMerge pull request #2769 from topecongiro/issue-2765\n\nPut each nested import on its own line"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "html_url": "https://github.com/rust-lang/rust/commit/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f545dfe95eca33dfc753bd9b57bd2753efddf3e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f545dfe95eca33dfc753bd9b57bd2753efddf3e8", "html_url": "https://github.com/rust-lang/rust/commit/f545dfe95eca33dfc753bd9b57bd2753efddf3e8"}, {"sha": "42ab258757167abcc067433aa15945f5c51a1e8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/42ab258757167abcc067433aa15945f5c51a1e8e", "html_url": "https://github.com/rust-lang/rust/commit/42ab258757167abcc067433aa15945f5c51a1e8e"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "a9846a1cc74883c82e7b946d973553cc9b118076", "filename": "src/config/lists.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/src%2Fconfig%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/src%2Fconfig%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Flists.rs?ref=576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "patch": "@@ -19,6 +19,8 @@ pub enum DefinitiveListTactic {\n     Vertical,\n     Horizontal,\n     Mixed,\n+    /// Tactic for nested import.\n+    NestedImport,\n     /// Special case tactic for `format!()`, `write!()` style macros.\n     SpecialMacro(usize),\n }"}, {"sha": "a1cf6a83f07fbbbc6031b34f05031e3e51258c29", "filename": "src/imports.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "patch": "@@ -706,12 +706,16 @@ fn rewrite_nested_use_tree(\n         shape.width.saturating_sub(2)\n     };\n \n-    let tactic = definitive_tactic(\n-        &list_items,\n-        context.config.imports_layout(),\n-        Separator::Comma,\n-        remaining_width,\n-    );\n+    let tactic = if has_nested_list {\n+        DefinitiveListTactic::NestedImport\n+    } else {\n+        definitive_tactic(\n+            &list_items,\n+            context.config.imports_layout(),\n+            Separator::Comma,\n+            remaining_width,\n+        )\n+    };\n \n     let ends_with_newline = context.config.imports_indent() == IndentStyle::Block\n         && tactic != DefinitiveListTactic::Horizontal;"}, {"sha": "6e86791886418701ad1e341771ec7715932d297b", "filename": "src/lists.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "patch": "@@ -229,6 +229,7 @@ where\n     let sep_place =\n         SeparatorPlace::from_tactic(formatting.separator_place, tactic, formatting.separator);\n     let mut prev_item_had_post_comment = false;\n+    let mut prev_item_is_nested_import = false;\n \n     let mut line_len = 0;\n     let indent_str = &formatting.shape.indent.to_string(formatting.config);\n@@ -281,12 +282,14 @@ where\n                 result.push('\\n');\n                 result.push_str(indent_str);\n             }\n-            DefinitiveListTactic::Mixed => {\n+            DefinitiveListTactic::Mixed | DefinitiveListTactic::NestedImport => {\n                 let total_width = total_item_width(item) + item_sep_len;\n \n                 // 1 is space between separator and item.\n                 if (line_len > 0 && line_len + 1 + total_width > formatting.shape.width)\n                     || prev_item_had_post_comment\n+                    || (tactic == DefinitiveListTactic::NestedImport\n+                        && (prev_item_is_nested_import || (!first && inner_item.contains(\"::\"))))\n                 {\n                     result.push('\\n');\n                     result.push_str(indent_str);\n@@ -452,6 +455,7 @@ where\n         }\n \n         prev_item_had_post_comment = item.post_comment.is_some();\n+        prev_item_is_nested_import = inner_item.contains(\"::\");\n     }\n \n     Some(result)"}, {"sha": "b56e3f1afdb8628989cdceb81357b0b1e1a67393", "filename": "tests/source/imports.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/tests%2Fsource%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/tests%2Fsource%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports.rs?ref=576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "patch": "@@ -83,6 +83,8 @@ use foo::{a, bar::{baz, qux, xxxxxxxxxxx, yyyyyyyyyyyyy, zzzzzzzzzzzzzzzz, foo::\n \n use fooo::{baar::{foobar::{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy, zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz}}, z, bar, bar::*, x, y};\n \n+use exonum::{api::{Api, ApiError}, blockchain::{self, BlockProof, Blockchain, Transaction, TransactionSet}, crypto::{Hash, PublicKey}, helpers::Height, node::TransactionSend, storage::{ListProof, MapProof}};\n+\n // nested imports with a single sub-tree.\n use a::{b::{c::*}};\n use a::{b::{c::{}}};"}, {"sha": "415a11211a12df24593337b63e2fc047d24d48e3", "filename": "tests/target/configs/imports_layout/merge_mixed.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/tests%2Ftarget%2Fconfigs%2Fimports_layout%2Fmerge_mixed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/tests%2Ftarget%2Fconfigs%2Fimports_layout%2Fmerge_mixed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fimports_layout%2Fmerge_mixed.rs?ref=576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "patch": "@@ -3,5 +3,6 @@\n // rustfmt-imports_layout: Mixed\n \n use std::{\n-    fmt, io, str::{self, FromStr},\n+    fmt, io,\n+    str::{self, FromStr},\n };"}, {"sha": "df4d8cdd864d12136810da1fff02c83b12b09f54", "filename": "tests/target/imports.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "patch": "@@ -82,8 +82,9 @@ use self::unix::{};\n use foo::{\n     a, b,\n     bar::{\n-        baz, foo::{a, b, cxxxxxxxxxxxxx, yyyyyyyyyyyyyy, zzzzzzzzzzzzzzzz}, qux, xxxxxxxxxxx,\n-        yyyyyyyyyyyyy, zzzzzzzzzzzzzzzz,\n+        baz,\n+        foo::{a, b, cxxxxxxxxxxxxx, yyyyyyyyyyyyyy, zzzzzzzzzzzzzzzz},\n+        qux, xxxxxxxxxxx, yyyyyyyyyyyyy, zzzzzzzzzzzzzzzz,\n     },\n     boo, c,\n };\n@@ -93,7 +94,18 @@ use fooo::{\n         xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n         zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n     },\n-    bar, bar::*, x, y, z,\n+    bar,\n+    bar::*,\n+    x, y, z,\n+};\n+\n+use exonum::{\n+    api::{Api, ApiError},\n+    blockchain::{self, BlockProof, Blockchain, Transaction, TransactionSet},\n+    crypto::{Hash, PublicKey},\n+    helpers::Height,\n+    node::TransactionSend,\n+    storage::{ListProof, MapProof},\n };\n \n // nested imports with a single sub-tree."}]}