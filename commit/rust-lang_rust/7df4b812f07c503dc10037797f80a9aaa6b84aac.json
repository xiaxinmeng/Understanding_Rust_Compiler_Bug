{"sha": "7df4b812f07c503dc10037797f80a9aaa6b84aac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZjRiODEyZjA3YzUwM2RjMTAwMzc3OTdmODBhOWFhYTZiODRhYWM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-06T13:23:29Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-06T13:32:00Z"}, "message": "Fix bug in from_key_hashed_nocheck", "tree": {"sha": "4cd4c4decdf8f7694c9f92c13389de1ad60e6960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cd4c4decdf8f7694c9f92c13389de1ad60e6960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7df4b812f07c503dc10037797f80a9aaa6b84aac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7df4b812f07c503dc10037797f80a9aaa6b84aac", "html_url": "https://github.com/rust-lang/rust/commit/7df4b812f07c503dc10037797f80a9aaa6b84aac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7df4b812f07c503dc10037797f80a9aaa6b84aac/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "128a1fa4e1f85e04f522653bb9bee83ed6523440", "url": "https://api.github.com/repos/rust-lang/rust/commits/128a1fa4e1f85e04f522653bb9bee83ed6523440", "html_url": "https://github.com/rust-lang/rust/commit/128a1fa4e1f85e04f522653bb9bee83ed6523440"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "11ccf206d00b3182cff3dca2e54a774a2d3b13cb", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7df4b812f07c503dc10037797f80a9aaa6b84aac/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df4b812f07c503dc10037797f80a9aaa6b84aac/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=7df4b812f07c503dc10037797f80a9aaa6b84aac", "patch": "@@ -11,6 +11,7 @@\n use self::Entry::*;\n use self::VacantEntryState::*;\n \n+use intrinsics::unlikely;\n use collections::CollectionAllocErr;\n use cell::Cell;\n use borrow::Borrow;\n@@ -1992,6 +1993,9 @@ impl<'a, K, V, S> RawEntryBuilder<'a, K, V, S>\n     fn search<F>(self, hash: u64, is_match: F, compare_hashes: bool) -> Option<(&'a K, &'a V)>\n         where F: FnMut(&K) -> bool\n     {\n+        if unsafe { unlikely(self.map.table.size() == 0) } {\n+            return None;\n+        }\n         match search_hashed_nonempty(&self.map.table,\n                                      SafeHash::new(hash),\n                                      is_match,"}]}