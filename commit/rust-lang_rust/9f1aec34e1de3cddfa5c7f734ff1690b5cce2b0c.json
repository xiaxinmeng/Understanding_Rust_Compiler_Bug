{"sha": "9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMWFlYzM0ZTFkZTNjZGRmYTVjN2Y3MzRmZjE2OTBiNWNjZTJiMGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-17T08:21:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-17T08:21:42Z"}, "message": "Auto merge of #1055 - RalfJung:panic-stub, r=RalfJung\n\nminimal rustup for panic changes\n\nMain patch by @Aaron1011", "tree": {"sha": "0747ab3e5e1c7fe4a952dee8bc9037082c358112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0747ab3e5e1c7fe4a952dee8bc9037082c358112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "html_url": "https://github.com/rust-lang/rust/commit/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abab0207af3172af5840ed9efd8582654760184e", "url": "https://api.github.com/repos/rust-lang/rust/commits/abab0207af3172af5840ed9efd8582654760184e", "html_url": "https://github.com/rust-lang/rust/commit/abab0207af3172af5840ed9efd8582654760184e"}, {"sha": "f2c0c44a098e9afda322fd9b378add202b49b637", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c0c44a098e9afda322fd9b378add202b49b637", "html_url": "https://github.com/rust-lang/rust/commit/f2c0c44a098e9afda322fd9b378add202b49b637"}], "stats": {"total": 81, "additions": 51, "deletions": 30}, "files": [{"sha": "c930566c86a5b6eb78244fa7774794b24c8dad89", "filename": "Cargo.lock", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -172,6 +172,7 @@ dependencies = [\n  \"serde_derive 1.0.101 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.41 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tester 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -203,6 +204,15 @@ dependencies = [\n  \"dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"dirs\"\n+version = \"2.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"dirs-sys\"\n version = \"0.3.4\"\n@@ -671,6 +681,15 @@ dependencies = [\n  \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"term\"\n+version = \"0.6.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"termcolor\"\n version = \"1.0.5\"\n@@ -679,6 +698,16 @@ dependencies = [\n  \"wincolor 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"tester\"\n+version = \"0.5.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"getopts 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"term 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"thread_local\"\n version = \"0.3.6\"\n@@ -795,6 +824,7 @@ dependencies = [\n \"checksum crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"04973fa96e96579258a5091af6003abde64af786b860f18622b82e026cca60e6\"\n \"checksum diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3c2b69f912779fbb121ceb775d74d51e915af17aaebc38d28a592843a2dd0a3a\"\n \"checksum directories 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"551a778172a450d7fc12e629ca3b0428d00f6afa9a43da1b630d54604e97371c\"\n+\"checksum dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"13aea89a5c93364a98e9b37b2fa237effbb694d5cfe01c5b70941f7eb087d5e3\"\n \"checksum dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"afa0b23de8fd801745c471deffa6e12d248f962c9fd4b4c33787b055599bde7b\"\n \"checksum env_logger 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"44533bbbb3bb3c1fa17d9f2e4e38bbbaf8396ba82193c4cb1b6445d711445d36\"\n \"checksum failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8273f13c977665c5db7eb2b99ae520952fe5ac831ae4cd09d80c4c7042b5ed9\"\n@@ -850,7 +880,9 @@ dependencies = [\n \"checksum syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"66850e97125af79138385e9b88339cbcd037e3f28ceab8c5ad98e64f0f1f80bf\"\n \"checksum synstructure 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3f085a5855930c0441ca1288cf044ea4aecf4f43a91668abdb870b4ba546a203\"\n \"checksum tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9\"\n+\"checksum term 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c0863a3345e70f61d613eab32ee046ccd1bcc5f9105fe402c61fcd0c13eeb8b5\"\n \"checksum termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"96d6098003bde162e4277c70665bd87c326f5a0c3f3fbfb285787fa482d54e6e\"\n+\"checksum tester 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cd0d1044cb5ca390e9c93f8c35abd2c55484397dfd786f189321aa34605ee6ab\"\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n \"checksum time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f\"\n \"checksum unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7007dbd421b92cc6e28410fe7362e2e0a2503394908f417b68ec8d1c364c4e20\""}, {"sha": "8a09bb7ac17878f59f91f04669a73638e8f1088b", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -59,5 +59,5 @@ cargo_miri = [\"cargo_metadata\", \"directories\", \"rustc_version\"]\n rustc_tests = []\n \n [dev-dependencies]\n-compiletest_rs = { version = \"0.3.24\", features = [\"tmp\"] }\n+compiletest_rs = { version = \"0.3.24\", features = [\"tmp\", \"stable\"] }\n colored = \"1.6\""}, {"sha": "0d6f14df928cb2339f69939031609a83bf79cb38", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -1 +1 @@\n-56237d75b4271a8a2e0f47d86ea76ebf6d966152\n+8831d766ace89bc74714918a7d9fbd3ca5ec946a"}, {"sha": "920c92544300746745d4eb61a230933eee4e503c", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -29,16 +29,6 @@ struct MiriCompilerCalls {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls {\n-    fn after_parsing(&mut self, compiler: &interface::Compiler) -> Compilation {\n-        let attr = (\n-            syntax::symbol::Symbol::intern(\"miri\"),\n-            syntax::feature_gate::AttributeType::Whitelisted,\n-        );\n-        compiler.session().plugin_attributes.borrow_mut().push(attr);\n-\n-        Compilation::Continue\n-    }\n-\n     fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n         compiler.session().abort_if_errors();\n         compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {"}, {"sha": "481491ea722f87200cb005a22d1f1dfccf48fe78", "filename": "src/bin/miri.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -28,16 +28,6 @@ struct MiriCompilerCalls {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls {\n-    fn after_parsing(&mut self, compiler: &interface::Compiler) -> Compilation {\n-        let attr = (\n-            syntax::symbol::Symbol::intern(\"miri\"),\n-            syntax::feature_gate::AttributeType::Whitelisted,\n-        );\n-        compiler.session().plugin_attributes.borrow_mut().push(attr);\n-\n-        Compilation::Continue\n-    }\n-\n     fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n         init_late_loggers();\n         compiler.session().abort_if_errors();"}, {"sha": "65f6d5dd027185d991025afd3dc2c7333181f3c3", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -213,7 +213,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) {\n             };\n             e.print_backtrace();\n             if let Some(frame) = ecx.stack().last() {\n-                let block = &frame.body.basic_blocks()[frame.block];\n+                let block = &frame.body.basic_blocks()[frame.block.unwrap()];\n                 let span = if frame.stmt < block.statements.len() {\n                     block.statements[frame.stmt].source_info.span\n                 } else {"}, {"sha": "20abfdcf54bb540c3aea8bbaa5e949bde9686f85", "filename": "src/machine.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -173,6 +173,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         args: &[OpTy<'tcx, Tag>],\n         dest: Option<PlaceTy<'tcx, Tag>>,\n         ret: Option<mir::BasicBlock>,\n+        _unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx, Option<&'mir mir::Body<'tcx>>> {\n         ecx.find_fn(instance, args, dest, ret)\n     }\n@@ -194,8 +195,14 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         span: Span,\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx, Tag>],\n-        dest: PlaceTy<'tcx, Tag>,\n+        dest: Option<PlaceTy<'tcx, Tag>>,\n+        _ret: Option<mir::BasicBlock>,\n+        _unwind: Option<mir::BasicBlock>\n     ) -> InterpResult<'tcx> {\n+        let dest = match dest {\n+            Some(dest) => dest,\n+            None => throw_ub!(Unreachable)\n+        };\n         ecx.call_intrinsic(span, instance, args, dest)\n     }\n \n@@ -353,13 +360,15 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n     fn stack_pop(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         extra: stacked_borrows::CallId,\n-    ) -> InterpResult<'tcx> {\n-        Ok(ecx\n+        _unwinding: bool\n+    ) -> InterpResult<'tcx, StackPopInfo> {\n+        ecx\n             .memory\n             .extra\n             .stacked_borrows\n             .borrow_mut()\n-            .end_call(extra))\n+            .end_call(extra);\n+        Ok(StackPopInfo::Normal)\n     }\n \n     #[inline(always)]"}, {"sha": "55ec36387f2e82aedde18361f56bb0d9d0bb8dd3", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -335,7 +335,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     mir,\n                     Some(ret_place),\n                     // Directly return to caller.\n-                    StackPopCleanup::Goto(Some(ret)),\n+                    StackPopCleanup::Goto { ret: Some(ret), unwind: None },\n                 )?;\n                 let mut args = this.frame().body.args_iter();\n "}, {"sha": "20031f837bc38fdfb6297ece1fcf10fe9e32ea63", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -22,7 +22,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         dest: PlaceTy<'tcx, Tag>,\n     ) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n-        if this.emulate_intrinsic(span, instance, args, dest)? {\n+        if this.emulate_intrinsic(span, instance, args, Some(dest))? {\n             return Ok(());\n         }\n         let tcx = &{this.tcx.tcx};"}, {"sha": "d9de27596cd0d34456513ae45280c8076d5ac27f", "filename": "src/shims/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=9f1aec34e1de3cddfa5c7f734ff1690b5cce2b0c", "patch": "@@ -27,7 +27,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         );\n \n         // First, run the common hooks also supported by CTFE.\n-        if this.hook_fn(instance, args, dest)? {\n+        if this.hook_panic_fn(instance, args, dest)? {\n             this.goto_block(ret)?;\n             return Ok(None);\n         }"}]}