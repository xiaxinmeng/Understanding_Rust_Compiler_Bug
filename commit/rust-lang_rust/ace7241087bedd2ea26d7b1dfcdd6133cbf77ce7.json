{"sha": "ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "node_id": "C_kwDOAAsO6NoAKGFjZTcyNDEwODdiZWRkMmVhMjZkN2IxZGZjZGQ2MTMzY2JmNzdjZTc", "commit": {"author": {"name": "Gabriel Smith", "email": "ga29smith@gmail.com", "date": "2022-01-29T21:44:49Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-02-11T03:02:59Z"}, "message": "Fix incorrect string indentation in macro defs with `format_strings`", "tree": {"sha": "324093c4e213126c971e7058bc4922e387341699", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/324093c4e213126c971e7058bc4922e387341699"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "html_url": "https://github.com/rust-lang/rust/commit/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/comments", "author": {"login": "yodaldevoid", "id": 1204409, "node_id": "MDQ6VXNlcjEyMDQ0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1204409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yodaldevoid", "html_url": "https://github.com/yodaldevoid", "followers_url": "https://api.github.com/users/yodaldevoid/followers", "following_url": "https://api.github.com/users/yodaldevoid/following{/other_user}", "gists_url": "https://api.github.com/users/yodaldevoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/yodaldevoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yodaldevoid/subscriptions", "organizations_url": "https://api.github.com/users/yodaldevoid/orgs", "repos_url": "https://api.github.com/users/yodaldevoid/repos", "events_url": "https://api.github.com/users/yodaldevoid/events{/privacy}", "received_events_url": "https://api.github.com/users/yodaldevoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "html_url": "https://github.com/rust-lang/rust/commit/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e"}], "stats": {"total": 102, "additions": 99, "deletions": 3}, "files": [{"sha": "1b9208d31e00027e7d9b9921bed7f2081bc4378d", "filename": "CHANGELOG.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -2,6 +2,10 @@\n \n ## [Unreleased]\n \n+### Fixed\n+\n+- Fixes issue where wrapped strings would be incorrectly indented in macro defs when `format_strings` was enabled [#4036](https://github.com/rust-lang/rustfmt/issues/4036)\n+\n ## [1.4.38] 2021-10-20\n \n ### Changed"}, {"sha": "35512e78fa6e29988e58eee9bd427f7eeb4c96a5", "filename": "src/utils.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -646,9 +646,22 @@ pub(crate) fn trim_left_preserve_layout(\n }\n \n /// Based on the given line, determine if the next line can be indented or not.\n-/// This allows to preserve the indentation of multi-line literals.\n-pub(crate) fn indent_next_line(kind: FullCodeCharKind, _line: &str, config: &Config) -> bool {\n-    !(kind.is_string() || (config.version() == Version::Two && kind.is_commented_string()))\n+/// This allows to preserve the indentation of multi-line literals when\n+/// re-inserted a code block that has been formatted separately from the rest\n+/// of the code, such as code in macro defs or code blocks doc comments.\n+pub(crate) fn indent_next_line(kind: FullCodeCharKind, line: &str, config: &Config) -> bool {\n+    if kind.is_string() {\n+        // If the string ends with '\\', the string has been wrapped over\n+        // multiple lines. If `format_strings = true`, then the indentation of\n+        // strings wrapped over multiple lines will have been adjusted while\n+        // formatting the code block, therefore the string's indentation needs\n+        // to be adjusted for the code surrounding the code block.\n+        config.format_strings() && line.ends_with('\\\\')\n+    } else if config.version() == Version::Two {\n+        !kind.is_commented_string()\n+    } else {\n+        true\n+    }\n }\n \n pub(crate) fn is_empty_line(s: &str) -> bool {"}, {"sha": "9f9675f51631a76519d27ba428fa8e724e8e2f0a", "filename": "tests/source/issue-4036/one.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Fsource%2Fissue-4036%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Fsource%2Fissue-4036%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4036%2Fone.rs?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-format_strings: true\n+\n+macro_rules! test {\n+    () => {\n+        fn from() {\n+            None.expect(\n+                \"We asserted that `buffer.len()` is exactly `$n` so we can expect `ApInt::from_iter` to be successful.\",\n+            )\n+        }\n+    };\n+}"}, {"sha": "e1865dd0868b61ec0613eab13e7ce183f03b2b00", "filename": "tests/source/issue-4036/three.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Fsource%2Fissue-4036%2Fthree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Fsource%2Fissue-4036%2Fthree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4036%2Fthree.rs?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-format_strings: true\n+// rustfmt-hard_tabs: true\n+\n+macro_rules! test {\n+    () => {\n+        fn from() {\n+            None.expect(\n+                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n+            )\n+        }\n+    };\n+}"}, {"sha": "fa54d2e3e09cbe58bcc0d9ba1a7ba1ed3d759005", "filename": "tests/source/issue-4036/two.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Fsource%2Fissue-4036%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Fsource%2Fissue-4036%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4036%2Ftwo.rs?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-format_strings: true\n+\n+macro_rules! test {\n+    () => {\n+        fn from() {\n+            None.expect(\n+                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n+            )\n+        }\n+    };\n+}"}, {"sha": "54e490b7fbeae313c0ef898a30dd2f4fbf7374a5", "filename": "tests/target/issue-4036/one.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Ftarget%2Fissue-4036%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Ftarget%2Fissue-4036%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4036%2Fone.rs?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-format_strings: true\n+\n+macro_rules! test {\n+    () => {\n+        fn from() {\n+            None.expect(\n+                \"We asserted that `buffer.len()` is exactly `$n` so we can expect \\\n+                 `ApInt::from_iter` to be successful.\",\n+            )\n+        }\n+    };\n+}"}, {"sha": "394dc8633f5344926adf82bad1ac4998882e7af4", "filename": "tests/target/issue-4036/three.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Ftarget%2Fissue-4036%2Fthree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Ftarget%2Fissue-4036%2Fthree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4036%2Fthree.rs?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -0,0 +1,17 @@\n+// rustfmt-format_strings: true\n+// rustfmt-hard_tabs: true\n+\n+macro_rules! test {\n+\t() => {\n+\t\tfn from() {\n+\t\t\tNone.expect(\n+\t\t\t\t\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \\\n+\t\t\t\t incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \\\n+\t\t\t\t nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\\n+\t\t\t\t Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu \\\n+\t\t\t\t fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in \\\n+\t\t\t\t culpa qui officia deserunt mollit anim id est laborum.\",\n+\t\t\t)\n+\t\t}\n+\t};\n+}"}, {"sha": "01cafa76b68424b9012e16c6ff3a8c11414ddb31", "filename": "tests/target/issue-4036/two.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Ftarget%2Fissue-4036%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7/tests%2Ftarget%2Fissue-4036%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4036%2Ftwo.rs?ref=ace7241087bedd2ea26d7b1dfcdd6133cbf77ce7", "patch": "@@ -0,0 +1,16 @@\n+// rustfmt-format_strings: true\n+\n+macro_rules! test {\n+    () => {\n+        fn from() {\n+            None.expect(\n+                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \\\n+                 incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \\\n+                 nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\\n+                 Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu \\\n+                 fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in \\\n+                 culpa qui officia deserunt mollit anim id est laborum.\",\n+            )\n+        }\n+    };\n+}"}]}