{"sha": "089e257769a3f46fe8cc0668bebe602a9209d334", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4OWUyNTc3NjlhM2Y0NmZlOGNjMDY2OGJlYmU2MDJhOTIwOWQzMzQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-12T01:07:50Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-12T01:18:53Z"}, "message": "manual: capitalize more examples properly.", "tree": {"sha": "9a685cd24108fa1eea491784597938add439ace1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a685cd24108fa1eea491784597938add439ace1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/089e257769a3f46fe8cc0668bebe602a9209d334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/089e257769a3f46fe8cc0668bebe602a9209d334", "html_url": "https://github.com/rust-lang/rust/commit/089e257769a3f46fe8cc0668bebe602a9209d334", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/089e257769a3f46fe8cc0668bebe602a9209d334/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ea5e6a3b26213a64db3bd14ec3f74523d8f1d62", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea5e6a3b26213a64db3bd14ec3f74523d8f1d62", "html_url": "https://github.com/rust-lang/rust/commit/9ea5e6a3b26213a64db3bd14ec3f74523d8f1d62"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "eab1e04c92a0c7084c5d99f1b4b2f5c89631677d", "filename": "doc/rust.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/089e257769a3f46fe8cc0668bebe602a9209d334/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/089e257769a3f46fe8cc0668bebe602a9209d334/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=089e257769a3f46fe8cc0668bebe602a9209d334", "patch": "@@ -2686,8 +2686,8 @@ fn add(x: int, y: int) -> int {\n \n let mut x = add(5,7);\n \n-type binop = fn(int,int) -> int;\n-let bo: binop = add;\n+type Binop = fn(int,int) -> int;\n+let bo: Binop = add;\n x = bo(5,7);\n ~~~~~~~~\n \n@@ -2697,24 +2697,24 @@ Every trait item (see [traits](#traits)) defines a type with the same name\n as the trait. For a trait `T`, cast expressions introduce values of type `T`:\n \n ~~~~~~~~\n-trait printable {\n+trait Printable {\n   fn to_str() -> ~str;\n }\n \n-impl ~str: printable {\n+impl ~str: Printable {\n   fn to_str() -> ~str { self }\n }\n \n-fn print(a: printable) {\n+fn print(a: Printable) {\n    io::println(a.to_str());\n }\n \n fn main() {\n-   print(~\"meow\" as printable);\n+   print(~\"meow\" as ~Printable);\n }\n ~~~~~~~~\n \n-In this example, the trait `printable` occurs as a type in both the type signature of\n+In this example, the trait `Printable` occurs as a type in both the type signature of\n `print`, and the cast expression in `main`.\n \n ### Type parameters\n@@ -2740,16 +2740,16 @@ impl item. It refers to the type of the implicit `self` argument. For\n example, in:\n \n ~~~~~~\n-trait printable {\n+trait Printable {\n   fn to_str() -> ~str;\n }\n \n-impl ~str: printable {\n+impl ~str: Printable {\n   fn to_str() -> ~str { self }\n }\n ~~~~~~\n \n-`self` refers to the value of type `str` that is the receiver for a\n+`self` refers to the value of type `~str` that is the receiver for a\n call to the method `to_str`.\n \n ## Type kinds"}]}