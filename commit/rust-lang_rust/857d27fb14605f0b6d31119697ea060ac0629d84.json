{"sha": "857d27fb14605f0b6d31119697ea060ac0629d84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1N2QyN2ZiMTQ2MDVmMGI2ZDMxMTE5Njk3ZWEwNjBhYzA2MjlkODQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-18T21:56:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-18T21:56:45Z"}, "message": "Rollup merge of #57658 - nnethercote:rm-hir-P-Lit, r=michaelwoerister\n\nTwo HIR tweaks\n\nTwo HIR tweaks that make things slightly simpler and faster.", "tree": {"sha": "7b94bb786f1c46ddebe2ba7a72adf606ab19d2a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b94bb786f1c46ddebe2ba7a72adf606ab19d2a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/857d27fb14605f0b6d31119697ea060ac0629d84", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcQkueCRBK7hj4Ov3rIwAAdHIIAEATgaZ1mOB6fMzdT2tYvEPa\nWXXDDuY5YLAcyUPlsxELwoHSmcZ9uWzVZasG0LqAOqRo+/dYwf0mggNBpxrn2ezn\nB8zuIoxAZEyTgyP+oq2O3k4mv6PHZAK4sqBN6bYOVPweR/TNC0lcLKkBru6Df2Wj\nz7Bd9U2g48hOHeG/PvQH5a9IVC5Fr042i0Fyt9qFBllmLXBHNiJmMFO6S6Sdb5+Z\nEc6mEa3Jq3poXG012rCrtuaxBPAkqHzS5FHToGvlZcRRNWAp7o/8gu3Z0XVybX4a\nRp9die82GvQob/eK+z3rL+j97YMA4WOqealoRo3KD+E5488wDnEct92vUEbkHdI=\n=9+Kp\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b94bb786f1c46ddebe2ba7a72adf606ab19d2a9\nparent 0eb4bdc5f18a64d74437b5824e3e6788415fa20f\nparent dc455286205bc0b3be6a6c6dcefff0498a6f4bcf\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547848605 +0100\ncommitter GitHub <noreply@github.com> 1547848605 +0100\n\nRollup merge of #57658 - nnethercote:rm-hir-P-Lit, r=michaelwoerister\n\nTwo HIR tweaks\n\nTwo HIR tweaks that make things slightly simpler and faster.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/857d27fb14605f0b6d31119697ea060ac0629d84", "html_url": "https://github.com/rust-lang/rust/commit/857d27fb14605f0b6d31119697ea060ac0629d84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/857d27fb14605f0b6d31119697ea060ac0629d84/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0eb4bdc5f18a64d74437b5824e3e6788415fa20f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb4bdc5f18a64d74437b5824e3e6788415fa20f", "html_url": "https://github.com/rust-lang/rust/commit/0eb4bdc5f18a64d74437b5824e3e6788415fa20f"}, {"sha": "dc455286205bc0b3be6a6c6dcefff0498a6f4bcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc455286205bc0b3be6a6c6dcefff0498a6f4bcf", "html_url": "https://github.com/rust-lang/rust/commit/dc455286205bc0b3be6a6c6dcefff0498a6f4bcf"}], "stats": {"total": 19, "additions": 4, "deletions": 15}, "files": [{"sha": "8cdc493e6fda7763a64f9ee99e9148aa9d36d8d1", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/857d27fb14605f0b6d31119697ea060ac0629d84/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857d27fb14605f0b6d31119697ea060ac0629d84/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=857d27fb14605f0b6d31119697ea060ac0629d84", "patch": "@@ -3775,7 +3775,7 @@ impl<'a> LoweringContext<'a> {\n                 let ohs = P(self.lower_expr(ohs));\n                 hir::ExprKind::Unary(op, ohs)\n             }\n-            ExprKind::Lit(ref l) => hir::ExprKind::Lit(P((*l).clone())),\n+            ExprKind::Lit(ref l) => hir::ExprKind::Lit((*l).clone()),\n             ExprKind::Cast(ref expr, ref ty) => {\n                 let expr = P(self.lower_expr(expr));\n                 hir::ExprKind::Cast(expr, self.lower_ty(ty, ImplTraitContext::disallowed()))"}, {"sha": "aaef1c722be9695db03e144f374832078e7620bd", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/857d27fb14605f0b6d31119697ea060ac0629d84/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857d27fb14605f0b6d31119697ea060ac0629d84/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=857d27fb14605f0b6d31119697ea060ac0629d84", "patch": "@@ -19,7 +19,7 @@ use syntax_pos::{Span, DUMMY_SP, symbol::InternedString};\n use syntax::source_map::{self, Spanned};\n use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, CrateSugar, Ident, Name, NodeId, DUMMY_NODE_ID, AsmDialect};\n-use syntax::ast::{Attribute, Lit, StrStyle, FloatTy, IntTy, UintTy};\n+use syntax::ast::{Attribute, Label, Lit, StrStyle, FloatTy, IntTy, UintTy};\n use syntax::attr::InlineAttr;\n use syntax::ext::hygiene::SyntaxContext;\n use syntax::ptr::P;\n@@ -142,17 +142,6 @@ pub const DUMMY_HIR_ID: HirId = HirId {\n \n pub const DUMMY_ITEM_LOCAL_ID: ItemLocalId = ItemLocalId::MAX;\n \n-#[derive(Clone, RustcEncodable, RustcDecodable, Copy)]\n-pub struct Label {\n-    pub ident: Ident,\n-}\n-\n-impl fmt::Debug for Label {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        write!(f, \"label({:?})\", self.ident)\n-    }\n-}\n-\n #[derive(Clone, RustcEncodable, RustcDecodable, Copy)]\n pub struct Lifetime {\n     pub id: NodeId,\n@@ -1466,7 +1455,7 @@ pub enum ExprKind {\n     /// A unary operation (For example: `!x`, `*x`)\n     Unary(UnOp, P<Expr>),\n     /// A literal (For example: `1`, `\"foo\"`)\n-    Lit(P<Lit>),\n+    Lit(Lit),\n     /// A cast (`foo as f64`)\n     Cast(P<Expr>, P<Ty>),\n     Type(P<Expr>, P<Ty>),"}, {"sha": "f48059b328ff3631ae97c0fee29b9e188b7ab131", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/857d27fb14605f0b6d31119697ea060ac0629d84/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857d27fb14605f0b6d31119697ea060ac0629d84/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=857d27fb14605f0b6d31119697ea060ac0629d84", "patch": "@@ -153,7 +153,7 @@ impl_stable_hash_for!(enum hir::LifetimeName {\n     Error,\n });\n \n-impl_stable_hash_for!(struct hir::Label {\n+impl_stable_hash_for!(struct ast::Label {\n     ident\n });\n "}]}