{"sha": "0757c0fa7f37e1984492f4dce14b46dd686c67a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NTdjMGZhN2YzN2UxOTg0NDkyZjRkY2UxNGI0NmRkNjg2YzY3YTk=", "commit": {"author": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2018-10-27T19:05:13Z"}, "committer": {"name": "cad97", "email": "cad97@cad97.com", "date": "2018-10-28T08:16:58Z"}, "message": "Add ManuallyDrop::take\n\nhttps://internals.rust-lang.org/t/mini-rfc-manuallydrop-take/8679", "tree": {"sha": "500b987c0649bf2e4d518a0d9bc0eb71cc04a0e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/500b987c0649bf2e4d518a0d9bc0eb71cc04a0e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0757c0fa7f37e1984492f4dce14b46dd686c67a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0757c0fa7f37e1984492f4dce14b46dd686c67a9", "html_url": "https://github.com/rust-lang/rust/commit/0757c0fa7f37e1984492f4dce14b46dd686c67a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0757c0fa7f37e1984492f4dce14b46dd686c67a9/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f32f1113c93fe84f252293ae4af86be1ceae4a84", "url": "https://api.github.com/repos/rust-lang/rust/commits/f32f1113c93fe84f252293ae4af86be1ceae4a84", "html_url": "https://github.com/rust-lang/rust/commit/f32f1113c93fe84f252293ae4af86be1ceae4a84"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "8e218fa5a46054e2f6bcff977437d4889c24a2ab", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0757c0fa7f37e1984492f4dce14b46dd686c67a9/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0757c0fa7f37e1984492f4dce14b46dd686c67a9/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=0757c0fa7f37e1984492f4dce14b46dd686c67a9", "patch": "@@ -973,6 +973,26 @@ impl<T> ManuallyDrop<T> {\n     pub fn into_inner(slot: ManuallyDrop<T>) -> T {\n         slot.value\n     }\n+\n+    /// Takes the contained value out.\n+    ///\n+    /// This method is primarily intended for moving out values in drop.\n+    /// Instead of using [`ManuallyDrop::drop`] to manually drop the value,\n+    /// you can use this method to take the value and use it however desired.\n+    /// `Drop` will be invoked on the returned value following normal end-of-scope rules.\n+    ///\n+    /// If you have ownership of the container, you can use [`ManuallyDrop::into_inner`] instead.\n+    ///\n+    /// # Safety\n+    ///\n+    /// This function semantically moves out the contained value without preventing further usage.\n+    /// It is up to the user of this method to ensure that this container is not used again.\n+    #[must_use = \"if you don't need the value, you can use `ManuallyDrop::drop` instead\"]\n+    #[unstable(feature = \"manually_drop_take\", issue = \"55422\")]\n+    #[inline]\n+    pub unsafe fn take(slot: &mut ManuallyDrop<T>) -> T {\n+        ManuallyDrop::into_inner(ptr::read(slot))\n+    }\n }\n \n impl<T: ?Sized> ManuallyDrop<T> {"}]}