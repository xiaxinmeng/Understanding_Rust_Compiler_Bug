{"sha": "81c27c6af74670045c1e6f8550475087861d3c76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYzI3YzZhZjc0NjcwMDQ1YzFlNmY4NTUwNDc1MDg3ODYxZDNjNzY=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-14T04:49:39Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Add another FIXME about suggestions", "tree": {"sha": "d76420276c8b9bf8c39469cd7aa45a4e968938b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d76420276c8b9bf8c39469cd7aa45a4e968938b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81c27c6af74670045c1e6f8550475087861d3c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81c27c6af74670045c1e6f8550475087861d3c76", "html_url": "https://github.com/rust-lang/rust/commit/81c27c6af74670045c1e6f8550475087861d3c76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81c27c6af74670045c1e6f8550475087861d3c76/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343", "html_url": "https://github.com/rust-lang/rust/commit/9a0020a8794d8bcb7551e3c22bb345ee3c2b4343"}], "stats": {"total": 164, "additions": 83, "deletions": 81}, "files": [{"sha": "3f5b87e5ea6d1674b14b753bee6f0e961541b609", "filename": "src/test/ui/suggestions/dont-suggest-ref.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81c27c6af74670045c1e6f8550475087861d3c76/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81c27c6af74670045c1e6f8550475087861d3c76/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs?ref=81c27c6af74670045c1e6f8550475087861d3c76", "patch": "@@ -263,7 +263,9 @@ pub fn main() {\n     //~| HELP consider removing the `&mut`\n     //~| SUGGESTION X(_t)\n \n-    // -------- move from tuple of &Either/&X (no suggestions) --------\n+    // -------- move from tuple of &Either/&X --------\n+\n+    // FIXME: These should have suggestions.\n \n     let (&X(_t),) = (&x.clone(),);\n     //~^ ERROR cannot move"}, {"sha": "8994152d1a5ce845e8627e6209b56aca02526b32", "filename": "src/test/ui/suggestions/dont-suggest-ref.stderr", "status": "modified", "additions": 80, "deletions": 80, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/81c27c6af74670045c1e6f8550475087861d3c76/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81c27c6af74670045c1e6f8550475087861d3c76/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr?ref=81c27c6af74670045c1e6f8550475087861d3c76", "patch": "@@ -598,49 +598,49 @@ LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:268:21\n+  --> $DIR/dont-suggest-ref.rs:270:21\n    |\n LL |     let (&X(_t),) = (&x.clone(),);\n    |             --      ^^^^^^^^^^^^^ cannot move out of borrowed content\n    |             |\n    |             data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:268:13\n+  --> $DIR/dont-suggest-ref.rs:270:13\n    |\n LL |     let (&X(_t),) = (&x.clone(),);\n    |             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:270:34\n+  --> $DIR/dont-suggest-ref.rs:272:34\n    |\n LL |     if let (&Either::One(_t),) = (&e.clone(),) { }\n    |                          --      ^^^^^^^^^^^^^ cannot move out of borrowed content\n    |                          |\n    |                          data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:270:26\n+  --> $DIR/dont-suggest-ref.rs:272:26\n    |\n LL |     if let (&Either::One(_t),) = (&e.clone(),) { }\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:272:37\n+  --> $DIR/dont-suggest-ref.rs:274:37\n    |\n LL |     while let (&Either::One(_t),) = (&e.clone(),) { }\n    |                             --      ^^^^^^^^^^^^^ cannot move out of borrowed content\n    |                             |\n    |                             data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:272:29\n+  --> $DIR/dont-suggest-ref.rs:274:29\n    |\n LL |     while let (&Either::One(_t),) = (&e.clone(),) { }\n    |                             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:274:11\n+  --> $DIR/dont-suggest-ref.rs:276:11\n    |\n LL |     match (&e.clone(),) {\n    |           ^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -649,55 +649,55 @@ LL |         (&Either::One(_t),)\n    |                       -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:276:23\n+  --> $DIR/dont-suggest-ref.rs:278:23\n    |\n LL |         (&Either::One(_t),)\n    |                       ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:282:25\n+  --> $DIR/dont-suggest-ref.rs:284:25\n    |\n LL |     let (&mut X(_t),) = (&mut xm.clone(),);\n    |                 --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |                 |\n    |                 data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:282:17\n+  --> $DIR/dont-suggest-ref.rs:284:17\n    |\n LL |     let (&mut X(_t),) = (&mut xm.clone(),);\n    |                 ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:284:38\n+  --> $DIR/dont-suggest-ref.rs:286:38\n    |\n LL |     if let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n    |                              --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |                              |\n    |                              data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:284:30\n+  --> $DIR/dont-suggest-ref.rs:286:30\n    |\n LL |     if let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n    |                              ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:286:41\n+  --> $DIR/dont-suggest-ref.rs:288:41\n    |\n LL |     while let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n    |                                 --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |                                 |\n    |                                 data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:286:33\n+  --> $DIR/dont-suggest-ref.rs:288:33\n    |\n LL |     while let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n    |                                 ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:288:11\n+  --> $DIR/dont-suggest-ref.rs:290:11\n    |\n LL |     match (&mut em.clone(),) {\n    |           ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -708,15 +708,15 @@ LL |         (&mut Either::Two(_t),) => (),\n    |                           -- ...and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:290:27\n+  --> $DIR/dont-suggest-ref.rs:292:27\n    |\n LL |         (&mut Either::One(_t),) => (),\n    |                           ^^\n LL |         (&mut Either::Two(_t),) => (),\n    |                           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:298:18\n+  --> $DIR/dont-suggest-ref.rs:300:18\n    |\n LL |     let &X(_t) = &x;\n    |         ------   ^^ cannot move out of borrowed content\n@@ -725,13 +725,13 @@ LL |     let &X(_t) = &x;\n    |         help: consider removing the `&`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:298:12\n+  --> $DIR/dont-suggest-ref.rs:300:12\n    |\n LL |     let &X(_t) = &x;\n    |            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:302:31\n+  --> $DIR/dont-suggest-ref.rs:304:31\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |            ----------------   ^^ cannot move out of borrowed content\n@@ -740,13 +740,13 @@ LL |     if let &Either::One(_t) = &e { }\n    |            help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:302:25\n+  --> $DIR/dont-suggest-ref.rs:304:25\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |                         ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:306:34\n+  --> $DIR/dont-suggest-ref.rs:308:34\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |               ----------------   ^^ cannot move out of borrowed content\n@@ -755,13 +755,13 @@ LL |     while let &Either::One(_t) = &e { }\n    |               help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:306:28\n+  --> $DIR/dont-suggest-ref.rs:308:28\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |                            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:310:11\n+  --> $DIR/dont-suggest-ref.rs:312:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -773,13 +773,13 @@ LL |         &Either::One(_t)\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:312:22\n+  --> $DIR/dont-suggest-ref.rs:314:22\n    |\n LL |         &Either::One(_t)\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:318:11\n+  --> $DIR/dont-suggest-ref.rs:320:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -791,13 +791,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:320:22\n+  --> $DIR/dont-suggest-ref.rs:322:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:325:11\n+  --> $DIR/dont-suggest-ref.rs:327:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -809,13 +809,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:327:22\n+  --> $DIR/dont-suggest-ref.rs:329:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:333:22\n+  --> $DIR/dont-suggest-ref.rs:335:22\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |         ----------   ^^^^^^^ cannot move out of borrowed content\n@@ -824,13 +824,13 @@ LL |     let &mut X(_t) = &mut xm;\n    |         help: consider removing the `&mut`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:333:16\n+  --> $DIR/dont-suggest-ref.rs:335:16\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:337:35\n+  --> $DIR/dont-suggest-ref.rs:339:35\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |            --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -839,13 +839,13 @@ LL |     if let &mut Either::One(_t) = &mut em { }\n    |            help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:337:29\n+  --> $DIR/dont-suggest-ref.rs:339:29\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |                             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:341:38\n+  --> $DIR/dont-suggest-ref.rs:343:38\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |               --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -854,13 +854,13 @@ LL |     while let &mut Either::One(_t) = &mut em { }\n    |               help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:341:32\n+  --> $DIR/dont-suggest-ref.rs:343:32\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |                                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:345:11\n+  --> $DIR/dont-suggest-ref.rs:347:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -872,13 +872,13 @@ LL |         &mut Either::One(_t)\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:347:26\n+  --> $DIR/dont-suggest-ref.rs:349:26\n    |\n LL |         &mut Either::One(_t)\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:353:11\n+  --> $DIR/dont-suggest-ref.rs:355:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -890,13 +890,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:355:26\n+  --> $DIR/dont-suggest-ref.rs:357:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:360:11\n+  --> $DIR/dont-suggest-ref.rs:362:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -908,13 +908,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:362:26\n+  --> $DIR/dont-suggest-ref.rs:364:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:367:11\n+  --> $DIR/dont-suggest-ref.rs:369:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -926,13 +926,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:369:26\n+  --> $DIR/dont-suggest-ref.rs:371:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:377:27\n+  --> $DIR/dont-suggest-ref.rs:379:27\n    |\n LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |         ---------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -942,13 +942,13 @@ LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |         help: consider removing the `&`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:377:13\n+  --> $DIR/dont-suggest-ref.rs:379:13\n    |\n LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |             ^^     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:381:50\n+  --> $DIR/dont-suggest-ref.rs:383:50\n    |\n LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |            -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -958,13 +958,13 @@ LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) {\n    |            help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:381:26\n+  --> $DIR/dont-suggest-ref.rs:383:26\n    |\n LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |                          ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:385:53\n+  --> $DIR/dont-suggest-ref.rs:387:53\n    |\n LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |               -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -974,13 +974,13 @@ LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone())\n    |               help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:385:29\n+  --> $DIR/dont-suggest-ref.rs:387:29\n    |\n LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |                             ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:389:11\n+  --> $DIR/dont-suggest-ref.rs:391:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -994,7 +994,7 @@ LL |         &(Either::Two(_t), Either::One(_u)) => (),\n    |                       -- ...and here   -- ...and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:391:23\n+  --> $DIR/dont-suggest-ref.rs:393:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |                       ^^               ^^\n@@ -1011,7 +1011,7 @@ LL |         (Either::Two(_t), Either::One(_u)) => (),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:399:11\n+  --> $DIR/dont-suggest-ref.rs:401:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1024,13 +1024,13 @@ LL |         &(Either::One(_t), Either::Two(_u))\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:401:23\n+  --> $DIR/dont-suggest-ref.rs:403:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u))\n    |                       ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:408:11\n+  --> $DIR/dont-suggest-ref.rs:410:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1043,13 +1043,13 @@ LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:410:23\n+  --> $DIR/dont-suggest-ref.rs:412:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |                       ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:416:11\n+  --> $DIR/dont-suggest-ref.rs:418:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1062,13 +1062,13 @@ LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:418:23\n+  --> $DIR/dont-suggest-ref.rs:420:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |                       ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:429:31\n+  --> $DIR/dont-suggest-ref.rs:431:31\n    |\n LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |         -------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1078,13 +1078,13 @@ LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |         help: consider removing the `&mut`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:429:17\n+  --> $DIR/dont-suggest-ref.rs:431:17\n    |\n LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |                 ^^     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:433:54\n+  --> $DIR/dont-suggest-ref.rs:435:54\n    |\n LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |            ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1094,13 +1094,13 @@ LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.c\n    |            help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:433:30\n+  --> $DIR/dont-suggest-ref.rs:435:30\n    |\n LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |                              ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:437:57\n+  --> $DIR/dont-suggest-ref.rs:439:57\n    |\n LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |               ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1110,13 +1110,13 @@ LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), e\n    |               help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:437:33\n+  --> $DIR/dont-suggest-ref.rs:439:33\n    |\n LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |                                 ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:441:11\n+  --> $DIR/dont-suggest-ref.rs:443:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1130,7 +1130,7 @@ LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n    |                           -- ...and here   -- ...and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:443:27\n+  --> $DIR/dont-suggest-ref.rs:445:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n@@ -1147,7 +1147,7 @@ LL |         (Either::Two(_t), Either::One(_u)) => (),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:451:11\n+  --> $DIR/dont-suggest-ref.rs:453:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1160,13 +1160,13 @@ LL |         &mut (Either::One(_t), Either::Two(_u))\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:453:27\n+  --> $DIR/dont-suggest-ref.rs:455:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u))\n    |                           ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:460:11\n+  --> $DIR/dont-suggest-ref.rs:462:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1179,13 +1179,13 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:462:27\n+  --> $DIR/dont-suggest-ref.rs:464:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:468:11\n+  --> $DIR/dont-suggest-ref.rs:470:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1198,13 +1198,13 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:470:27\n+  --> $DIR/dont-suggest-ref.rs:472:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:476:11\n+  --> $DIR/dont-suggest-ref.rs:478:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1217,7 +1217,7 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:478:27\n+  --> $DIR/dont-suggest-ref.rs:480:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n@@ -1255,7 +1255,7 @@ LL |     fn f2(&mut X(_t): &mut X) { }\n    |                  ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:279:11\n+  --> $DIR/dont-suggest-ref.rs:281:11\n    |\n LL |     fn f3((&X(_t),): (&X,)) { }\n    |           ^^^^--^^^\n@@ -1264,13 +1264,13 @@ LL |     fn f3((&X(_t),): (&X,)) { }\n    |           cannot move out of borrowed content\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:279:15\n+  --> $DIR/dont-suggest-ref.rs:281:15\n    |\n LL |     fn f3((&X(_t),): (&X,)) { }\n    |               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:293:11\n+  --> $DIR/dont-suggest-ref.rs:295:11\n    |\n LL |     fn f4((&mut X(_t),): (&mut X,)) { }\n    |           ^^^^^^^^--^^^\n@@ -1279,13 +1279,13 @@ LL |     fn f4((&mut X(_t),): (&mut X,)) { }\n    |           cannot move out of borrowed content\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:293:19\n+  --> $DIR/dont-suggest-ref.rs:295:19\n    |\n LL |     fn f4((&mut X(_t),): (&mut X,)) { }\n    |                   ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:424:11\n+  --> $DIR/dont-suggest-ref.rs:426:11\n    |\n LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n    |           ^^^^--^^^^^--^^\n@@ -1296,13 +1296,13 @@ LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n    |           help: consider removing the `&`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:424:15\n+  --> $DIR/dont-suggest-ref.rs:426:15\n    |\n LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n    |               ^^     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:484:11\n+  --> $DIR/dont-suggest-ref.rs:486:11\n    |\n LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |           ^^^^^^^^--^^^^^--^^\n@@ -1313,7 +1313,7 @@ LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |           help: consider removing the `&mut`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:484:19\n+  --> $DIR/dont-suggest-ref.rs:486:19\n    |\n LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |                   ^^     ^^"}]}