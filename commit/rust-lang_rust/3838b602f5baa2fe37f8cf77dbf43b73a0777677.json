{"sha": "3838b602f5baa2fe37f8cf77dbf43b73a0777677", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MzhiNjAyZjViYWEyZmUzN2Y4Y2Y3N2RiZjQzYjczYTA3Nzc2Nzc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-08T06:58:45Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T17:34:00Z"}, "message": "parse_ptr -> parse_ty_ptr & refactor", "tree": {"sha": "f3d54476810df649f9f8a6d2379ceed549bd5800", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d54476810df649f9f8a6d2379ceed549bd5800"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3838b602f5baa2fe37f8cf77dbf43b73a0777677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3838b602f5baa2fe37f8cf77dbf43b73a0777677", "html_url": "https://github.com/rust-lang/rust/commit/3838b602f5baa2fe37f8cf77dbf43b73a0777677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3838b602f5baa2fe37f8cf77dbf43b73a0777677/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67c30dba60866770f3babc7a33470a5dfe5ea77", "url": "https://api.github.com/repos/rust-lang/rust/commits/c67c30dba60866770f3babc7a33470a5dfe5ea77", "html_url": "https://github.com/rust-lang/rust/commit/c67c30dba60866770f3babc7a33470a5dfe5ea77"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9ea5a88ddadf9e44f9fa63ce325dc17a1da5b97f", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3838b602f5baa2fe37f8cf77dbf43b73a0777677/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3838b602f5baa2fe37f8cf77dbf43b73a0777677/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=3838b602f5baa2fe37f8cf77dbf43b73a0777677", "patch": "@@ -79,8 +79,7 @@ impl<'a> Parser<'a> {\n             // Never type `!`\n             TyKind::Never\n         } else if self.eat(&token::BinOp(token::Star)) {\n-            // Raw pointer\n-            TyKind::Ptr(self.parse_ptr()?)\n+            self.parse_ty_ptr()?\n         } else if self.eat(&token::OpenDelim(token::Bracket)) {\n             // Array or slice\n             let t = self.parse_ty()?;\n@@ -251,7 +250,8 @@ impl<'a> Parser<'a> {\n         Ok(TyKind::TraitObject(bounds, TraitObjectSyntax::None))\n     }\n \n-    fn parse_ptr(&mut self) -> PResult<'a, MutTy> {\n+    /// Parses a raw pointer type: `*[const | mut] $type`.\n+    fn parse_ty_ptr(&mut self) -> PResult<'a, TyKind> {\n         let mutbl = self.parse_const_or_mut().unwrap_or_else(|| {\n             let span = self.prev_span;\n             let msg = \"expected mut or const in raw pointer type\";\n@@ -261,8 +261,8 @@ impl<'a> Parser<'a> {\n                 .emit();\n             Mutability::Immutable\n         });\n-        let t = self.parse_ty_no_plus()?;\n-        Ok(MutTy { ty: t, mutbl })\n+        let ty = self.parse_ty_no_plus()?;\n+        Ok(TyKind::Ptr(MutTy { ty, mutbl }))\n     }\n \n     fn maybe_parse_fixed_length_of_vec(&mut self) -> PResult<'a, Option<P<ast::Expr>>> {"}]}