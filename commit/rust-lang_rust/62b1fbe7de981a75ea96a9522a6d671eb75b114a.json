{"sha": "62b1fbe7de981a75ea96a9522a6d671eb75b114a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYjFmYmU3ZGU5ODFhNzVlYTk2YTk1MjJhNmQ2NzFlYjc1YjExNGE=", "commit": {"author": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2014-08-18T09:24:23Z"}, "committer": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2014-08-18T11:12:56Z"}, "message": "libtime: Implement Add and Sub for Timespec.", "tree": {"sha": "20e5ed96240d02b95462f9c3551dbc59f75389eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e5ed96240d02b95462f9c3551dbc59f75389eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62b1fbe7de981a75ea96a9522a6d671eb75b114a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62b1fbe7de981a75ea96a9522a6d671eb75b114a", "html_url": "https://github.com/rust-lang/rust/commit/62b1fbe7de981a75ea96a9522a6d671eb75b114a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62b1fbe7de981a75ea96a9522a6d671eb75b114a/comments", "author": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef439ddce0d735bf6ae6f583a76b36a22951ab28", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef439ddce0d735bf6ae6f583a76b36a22951ab28", "html_url": "https://github.com/rust-lang/rust/commit/ef439ddce0d735bf6ae6f583a76b36a22951ab28"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "d0b4c6b1e4c7411a6fce2b4f21728ae51549f830", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/62b1fbe7de981a75ea96a9522a6d671eb75b114a/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b1fbe7de981a75ea96a9522a6d671eb75b114a/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=62b1fbe7de981a75ea96a9522a6d671eb75b114a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -90,6 +90,30 @@ impl Timespec {\n     }\n }\n \n+impl Add<Timespec, Timespec> for Timespec {\n+    fn add(&self, other: &Timespec) -> Timespec {\n+        let mut sec = self.sec + other.sec;\n+        let mut nsec = self.nsec + other.nsec;\n+        if nsec >= NSEC_PER_SEC {\n+            nsec -= NSEC_PER_SEC;\n+            sec += 1;\n+        }\n+        Timespec::new(sec, nsec)\n+    }\n+}\n+\n+impl Sub<Timespec, Timespec> for Timespec {\n+    fn sub(&self, other: &Timespec) -> Timespec {\n+        let mut sec = self.sec - other.sec;\n+        let mut nsec = self.nsec - other.nsec;\n+        if nsec < 0 {\n+            nsec += NSEC_PER_SEC;\n+            sec -= 1;\n+        }\n+        Timespec::new(sec, nsec)\n+    }\n+}\n+\n /**\n  * Returns the current time as a `timespec` containing the seconds and\n  * nanoseconds since 1970-01-01T00:00:00Z.\n@@ -1489,6 +1513,46 @@ mod tests {\n         assert!(d.gt(c));\n     }\n \n+    fn test_timespec_add() {\n+        let a = Timespec::new(1, 2);\n+        let b = Timespec::new(2, 3);\n+        let c = a + b;\n+        assert_eq!(c.sec, 3);\n+        assert_eq!(c.nsec, 5);\n+\n+        let p = Timespec::new(1, super::NSEC_PER_SEC - 2);\n+        let q = Timespec::new(2, 2);\n+        let r = p + q;\n+        assert_eq!(r.sec, 4);\n+        assert_eq!(r.nsec, 0);\n+\n+        let u = Timespec::new(1, super::NSEC_PER_SEC - 2);\n+        let v = Timespec::new(2, 3);\n+        let w = u + v;\n+        assert_eq!(w.sec, 4);\n+        assert_eq!(w.nsec, 1);\n+    }\n+\n+    fn test_timespec_sub() {\n+        let a = Timespec::new(2, 3);\n+        let b = Timespec::new(1, 2);\n+        let c = a - b;\n+        assert_eq!(c.sec, 1);\n+        assert_eq!(c.nsec, 1);\n+\n+        let p = Timespec::new(2, 0);\n+        let q = Timespec::new(1, 2);\n+        let r = p - q;\n+        assert_eq!(r.sec, 0);\n+        assert_eq!(r.nsec, super::NSEC_PER_SEC - 2);\n+\n+        let u = Timespec::new(1, 2);\n+        let v = Timespec::new(2, 3);\n+        let w = u - v;\n+        assert_eq!(w.sec, -2);\n+        assert_eq!(w.nsec, super::NSEC_PER_SEC - 1);\n+    }\n+\n     #[test]\n     #[ignore(cfg(target_os = \"android\"))] // FIXME #10958\n     fn run_tests() {\n@@ -1505,6 +1569,8 @@ mod tests {\n         test_ctime();\n         test_strftime();\n         test_timespec_eq_ord();\n+        test_timespec_add();\n+        test_timespec_sub();\n     }\n \n     #[bench]"}]}