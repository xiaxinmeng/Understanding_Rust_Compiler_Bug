{"sha": "19967c5890851148800886e3770fb45fb4b9ff90", "node_id": "C_kwDOAAsO6NoAKDE5OTY3YzU4OTA4NTExNDg4MDA4ODZlMzc3MGZiNDVmYjRiOWZmOTA", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-05-15T06:41:32Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-05-15T08:30:26Z"}, "message": "Make `Cursor::number` less DRY.\n\nA tiny bit of repetition makes this easier to read, and avoids a test on\nthe \"Not a base prefix\" match arm.", "tree": {"sha": "c75e6d539bf48c3beb60bad6ba0c0e568ea09f42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c75e6d539bf48c3beb60bad6ba0c0e568ea09f42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19967c5890851148800886e3770fb45fb4b9ff90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19967c5890851148800886e3770fb45fb4b9ff90", "html_url": "https://github.com/rust-lang/rust/commit/19967c5890851148800886e3770fb45fb4b9ff90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19967c5890851148800886e3770fb45fb4b9ff90/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18bfe5d8a9ca0e226171e98f8f4ef071790f3352", "url": "https://api.github.com/repos/rust-lang/rust/commits/18bfe5d8a9ca0e226171e98f8f4ef071790f3352", "html_url": "https://github.com/rust-lang/rust/commit/18bfe5d8a9ca0e226171e98f8f4ef071790f3352"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "30b7686314eb8abb1cbbb6cff4024a7475cac6b5", "filename": "compiler/rustc_lexer/src/lib.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/19967c5890851148800886e3770fb45fb4b9ff90/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19967c5890851148800886e3770fb45fb4b9ff90/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Flib.rs?ref=19967c5890851148800886e3770fb45fb4b9ff90", "patch": "@@ -582,34 +582,34 @@ impl Cursor<'_> {\n         let mut base = Base::Decimal;\n         if first_digit == '0' {\n             // Attempt to parse encoding base.\n-            let has_digits = match self.first() {\n+            match self.first() {\n                 'b' => {\n                     base = Base::Binary;\n                     self.bump();\n-                    self.eat_decimal_digits()\n+                    if !self.eat_decimal_digits() {\n+                        return Int { base, empty_int: true };\n+                    }\n                 }\n                 'o' => {\n                     base = Base::Octal;\n                     self.bump();\n-                    self.eat_decimal_digits()\n+                    if !self.eat_decimal_digits() {\n+                        return Int { base, empty_int: true };\n+                    }\n                 }\n                 'x' => {\n                     base = Base::Hexadecimal;\n                     self.bump();\n-                    self.eat_hexadecimal_digits()\n+                    if !self.eat_hexadecimal_digits() {\n+                        return Int { base, empty_int: true };\n+                    }\n                 }\n                 // Not a base prefix.\n                 '0'..='9' | '_' | '.' | 'e' | 'E' => {\n                     self.eat_decimal_digits();\n-                    true\n                 }\n                 // Just a 0.\n                 _ => return Int { base, empty_int: false },\n-            };\n-            // Base prefix was provided, but there were no digits\n-            // after it, e.g. \"0x\".\n-            if !has_digits {\n-                return Int { base, empty_int: true };\n             }\n         } else {\n             // No base prefix, parse number in the usual way."}]}