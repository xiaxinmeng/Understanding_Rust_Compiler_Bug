{"sha": "f3f9db133aae35956f2fb91ce4d017260f5f7828", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZjlkYjEzM2FhZTM1OTU2ZjJmYjkxY2U0ZDAxNzI2MGY1Zjc4Mjg=", "commit": {"author": {"name": "Philipp Br\u00fcschweiler", "email": "blei42@gmail.com", "date": "2013-06-07T16:08:06Z"}, "committer": {"name": "Philipp Br\u00fcschweiler", "email": "blei42@gmail.com", "date": "2013-06-08T07:34:32Z"}, "message": "rustc: Fix an ICE \"Autoderef but type not derefable\"\n\nRelated to #5062 (same error message), but that test case causes\na different ICE than mentioned there (even without this fix).", "tree": {"sha": "52bca838cd1e0c860a23f27f11535f735a56f31e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52bca838cd1e0c860a23f27f11535f735a56f31e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3f9db133aae35956f2fb91ce4d017260f5f7828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3f9db133aae35956f2fb91ce4d017260f5f7828", "html_url": "https://github.com/rust-lang/rust/commit/f3f9db133aae35956f2fb91ce4d017260f5f7828", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3f9db133aae35956f2fb91ce4d017260f5f7828/comments", "author": {"login": "Blei", "id": 52674, "node_id": "MDQ6VXNlcjUyNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/52674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blei", "html_url": "https://github.com/Blei", "followers_url": "https://api.github.com/users/Blei/followers", "following_url": "https://api.github.com/users/Blei/following{/other_user}", "gists_url": "https://api.github.com/users/Blei/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blei/subscriptions", "organizations_url": "https://api.github.com/users/Blei/orgs", "repos_url": "https://api.github.com/users/Blei/repos", "events_url": "https://api.github.com/users/Blei/events{/privacy}", "received_events_url": "https://api.github.com/users/Blei/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Blei", "id": 52674, "node_id": "MDQ6VXNlcjUyNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/52674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blei", "html_url": "https://github.com/Blei", "followers_url": "https://api.github.com/users/Blei/followers", "following_url": "https://api.github.com/users/Blei/following{/other_user}", "gists_url": "https://api.github.com/users/Blei/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blei/subscriptions", "organizations_url": "https://api.github.com/users/Blei/orgs", "repos_url": "https://api.github.com/users/Blei/repos", "events_url": "https://api.github.com/users/Blei/events{/privacy}", "received_events_url": "https://api.github.com/users/Blei/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c786b68dd3ecf96e202f50ba600292f54b35f2ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/c786b68dd3ecf96e202f50ba600292f54b35f2ee", "html_url": "https://github.com/rust-lang/rust/commit/c786b68dd3ecf96e202f50ba600292f54b35f2ee"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "f32df13ad2a36dc8cf3cbe7b314333e9a156c460", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f3f9db133aae35956f2fb91ce4d017260f5f7828/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f9db133aae35956f2fb91ce4d017260f5f7828/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=f3f9db133aae35956f2fb91ce4d017260f5f7828", "patch": "@@ -3042,15 +3042,17 @@ pub fn adjust_ty(cx: ctxt,\n         Some(@AutoDerefRef(ref adj)) => {\n             let mut adjusted_ty = unadjusted_ty;\n \n-            for uint::range(0, adj.autoderefs) |i| {\n-                match ty::deref(cx, adjusted_ty, true) {\n-                    Some(mt) => { adjusted_ty = mt.ty; }\n-                    None => {\n-                        cx.sess.span_bug(\n-                            span,\n-                            fmt!(\"The %uth autoderef failed: %s\",\n-                                 i, ty_to_str(cx,\n-                                              adjusted_ty)));\n+            if (!ty::type_is_error(adjusted_ty)) {\n+                for uint::range(0, adj.autoderefs) |i| {\n+                    match ty::deref(cx, adjusted_ty, true) {\n+                        Some(mt) => { adjusted_ty = mt.ty; }\n+                        None => {\n+                            cx.sess.span_bug(\n+                                span,\n+                                fmt!(\"The %uth autoderef failed: %s\",\n+                                     i, ty_to_str(cx,\n+                                                  adjusted_ty)));\n+                        }\n                     }\n                 }\n             }"}, {"sha": "2eb646a0b9b4b18e7f54d6e856548778137b6600", "filename": "src/librustc/middle/typeck/check/regionck.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3f9db133aae35956f2fb91ce4d017260f5f7828/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f9db133aae35956f2fb91ce4d017260f5f7828/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=f3f9db133aae35956f2fb91ce4d017260f5f7828", "patch": "@@ -1108,6 +1108,12 @@ pub mod guarantor {\n      -> ExprCategorizationType {\n         let mut ct = ct;\n         let tcx = rcx.fcx.ccx.tcx;\n+\n+        if (ty::type_is_error(ct.ty)) {\n+            ct.cat.pointer = NotPointer;\n+            return ct;\n+        }\n+\n         for uint::range(0, autoderefs) |_| {\n             ct.cat.guarantor = guarantor_of_deref(&ct.cat);\n "}]}