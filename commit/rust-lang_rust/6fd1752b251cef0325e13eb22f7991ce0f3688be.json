{"sha": "6fd1752b251cef0325e13eb22f7991ce0f3688be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZDE3NTJiMjUxY2VmMDMyNWUxM2ViMjJmNzk5MWNlMGYzNjg4YmU=", "commit": {"author": {"name": "Rahul Sharma", "email": "rsconceptx@gmail.com", "date": "2016-07-11T12:48:11Z"}, "committer": {"name": "Rahul Sharma", "email": "rsconceptx@gmail.com", "date": "2016-08-08T19:02:35Z"}, "message": "extend lifetime on binary_search_by_key of SliceExt trait", "tree": {"sha": "3b5953f9bc33b8c646e7af37e4e457cd123f1dda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b5953f9bc33b8c646e7af37e4e457cd123f1dda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fd1752b251cef0325e13eb22f7991ce0f3688be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd1752b251cef0325e13eb22f7991ce0f3688be", "html_url": "https://github.com/rust-lang/rust/commit/6fd1752b251cef0325e13eb22f7991ce0f3688be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fd1752b251cef0325e13eb22f7991ce0f3688be/comments", "author": {"login": "creativcoder", "id": 5155745, "node_id": "MDQ6VXNlcjUxNTU3NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5155745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/creativcoder", "html_url": "https://github.com/creativcoder", "followers_url": "https://api.github.com/users/creativcoder/followers", "following_url": "https://api.github.com/users/creativcoder/following{/other_user}", "gists_url": "https://api.github.com/users/creativcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/creativcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/creativcoder/subscriptions", "organizations_url": "https://api.github.com/users/creativcoder/orgs", "repos_url": "https://api.github.com/users/creativcoder/repos", "events_url": "https://api.github.com/users/creativcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/creativcoder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "creativcoder", "id": 5155745, "node_id": "MDQ6VXNlcjUxNTU3NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5155745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/creativcoder", "html_url": "https://github.com/creativcoder", "followers_url": "https://api.github.com/users/creativcoder/followers", "following_url": "https://api.github.com/users/creativcoder/following{/other_user}", "gists_url": "https://api.github.com/users/creativcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/creativcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/creativcoder/subscriptions", "organizations_url": "https://api.github.com/users/creativcoder/orgs", "repos_url": "https://api.github.com/users/creativcoder/repos", "events_url": "https://api.github.com/users/creativcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/creativcoder/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9316ae515e2f8f3f497fb4f1559910c1eef2433d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9316ae515e2f8f3f497fb4f1559910c1eef2433d", "html_url": "https://github.com/rust-lang/rust/commit/9316ae515e2f8f3f497fb4f1559910c1eef2433d"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "462b16f033165bec848c162c8e56648f43f5558d", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6fd1752b251cef0325e13eb22f7991ce0f3688be/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd1752b251cef0325e13eb22f7991ce0f3688be/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=6fd1752b251cef0325e13eb22f7991ce0f3688be", "patch": "@@ -950,8 +950,8 @@ impl<T> [T] {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n-    pub fn binary_search_by<F>(&self, f: F) -> Result<usize, usize>\n-        where F: FnMut(&T) -> Ordering\n+    pub fn binary_search_by<'a, F>(&'a self, f: F) -> Result<usize, usize>\n+        where F: FnMut(&'a T) -> Ordering\n     {\n         core_slice::SliceExt::binary_search_by(self, f)\n     }\n@@ -986,8 +986,8 @@ impl<T> [T] {\n     /// ```\n     #[stable(feature = \"slice_binary_search_by_key\", since = \"1.10.0\")]\n     #[inline]\n-    pub fn binary_search_by_key<B, F>(&self, b: &B, f: F) -> Result<usize, usize>\n-        where F: FnMut(&T) -> B,\n+    pub fn binary_search_by_key<'a, B, F>(&'a self, b: &B, f: F) -> Result<usize, usize>\n+        where F: FnMut(&'a T) -> B,\n               B: Ord\n     {\n         core_slice::SliceExt::binary_search_by_key(self, b, f)"}, {"sha": "3141c289e931ce0b5e001213edec511ca0dbe996", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6fd1752b251cef0325e13eb22f7991ce0f3688be/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd1752b251cef0325e13eb22f7991ce0f3688be/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=6fd1752b251cef0325e13eb22f7991ce0f3688be", "patch": "@@ -105,11 +105,11 @@ pub trait SliceExt {\n     fn binary_search(&self, x: &Self::Item) -> Result<usize, usize>\n         where Self::Item: Ord;\n     #[stable(feature = \"core\", since = \"1.6.0\")]\n-    fn binary_search_by<F>(&self, f: F) -> Result<usize, usize>\n-        where F: FnMut(&Self::Item) -> Ordering;\n+    fn binary_search_by<'a, F>(&'a self, f: F) -> Result<usize, usize>\n+        where F: FnMut(&'a Self::Item) -> Ordering;\n     #[stable(feature = \"slice_binary_search_by_key\", since = \"1.10.0\")]\n-    fn binary_search_by_key<B, F>(&self, b: &B, f: F) -> Result<usize, usize>\n-        where F: FnMut(&Self::Item) -> B,\n+    fn binary_search_by_key<'a, B, F>(&'a self, b: &B, f: F) -> Result<usize, usize>\n+        where F: FnMut(&'a Self::Item) -> B,\n               B: Ord;\n     #[stable(feature = \"core\", since = \"1.6.0\")]\n     fn len(&self) -> usize;\n@@ -301,8 +301,8 @@ impl<T> SliceExt for [T] {\n         self as *const [T] as *const T\n     }\n \n-    fn binary_search_by<F>(&self, mut f: F) -> Result<usize, usize> where\n-        F: FnMut(&T) -> Ordering\n+    fn binary_search_by<'a, F>(&'a self, mut f: F) -> Result<usize, usize>\n+        where F: FnMut(&'a T) -> Ordering\n     {\n         let mut base = 0usize;\n         let mut s = self;\n@@ -514,8 +514,8 @@ impl<T> SliceExt for [T] {\n     }\n \n     #[inline]\n-    fn binary_search_by_key<B, F>(&self, b: &B, mut f: F) -> Result<usize, usize>\n-        where F: FnMut(&Self::Item) -> B,\n+    fn binary_search_by_key<'a, B, F>(&'a self, b: &B, mut f: F) -> Result<usize, usize>\n+        where F: FnMut(&'a Self::Item) -> B,\n               B: Ord\n     {\n         self.binary_search_by(|k| f(k).cmp(b))"}, {"sha": "80b370d58fc5370a4b88640a8be21c9e38028dc7", "filename": "src/test/run-pass/slice_binary_search.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6fd1752b251cef0325e13eb22f7991ce0f3688be/src%2Ftest%2Frun-pass%2Fslice_binary_search.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd1752b251cef0325e13eb22f7991ce0f3688be/src%2Ftest%2Frun-pass%2Fslice_binary_search.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice_binary_search.rs?ref=6fd1752b251cef0325e13eb22f7991ce0f3688be", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test binary_search_by_key lifetime. Issue #34683\n+\n+#[derive(Debug)]\n+struct Assignment {\n+    topic: String,\n+    partition: i32,\n+}\n+\n+fn main() {\n+    let xs = vec![\n+        Assignment { topic: \"abc\".into(), partition: 1 },\n+        Assignment { topic: \"def\".into(), partition: 2 },\n+        Assignment { topic: \"ghi\".into(), partition: 3 },\n+    ];\n+\n+    let key: &str = \"def\";\n+    let r = xs.binary_search_by_key(&key, |e| &e.topic);\n+    assert_eq!(Ok(1), r.map(|i| i));\n+}"}]}