{"sha": "3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMTJjZDQ5ZWNmOGJkY2Q4YzRjZTgyY2I0NDk4MzZiN2EwMmQ0ZmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T13:21:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T13:22:09Z"}, "message": "Simplify ctor", "tree": {"sha": "e4656586e273dc19cda8d50f6f3b95f901cfb9f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4656586e273dc19cda8d50f6f3b95f901cfb9f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb", "html_url": "https://github.com/rust-lang/rust/commit/3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dccfd9183cc10acae7ead993979c3261fbe37ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dccfd9183cc10acae7ead993979c3261fbe37ca", "html_url": "https://github.com/rust-lang/rust/commit/7dccfd9183cc10acae7ead993979c3261fbe37ca"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "dfc8aa7b9dae29da58841e1f42799525f5e8853f", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=3c12cd49ecf8bdcd8c4ce82cb449836b7a02d4fb", "patch": "@@ -5,17 +5,13 @@ import { Config } from './config';\n import { createClient } from './client';\n \n export class Ctx {\n-    readonly config: Config;\n-    // Because we have \"reload server\" action, various listeners **will** face a\n-    // situation where the client is not ready yet, and should be prepared to\n-    // deal with it.\n-    //\n-    // Ideally, this should be replaced with async getter though.\n-    // FIXME: this actually needs syncronization of some kind (check how\n-    // vscode deals with `deactivate()` call when extension has some work scheduled\n-    // on the event loop to get a better picture of what we can do here)\n-    client: lc.LanguageClient;\n-    private extCtx: vscode.ExtensionContext;\n+    private constructor(\n+        readonly config: Config,\n+        private readonly extCtx: vscode.ExtensionContext,\n+        readonly client: lc.LanguageClient\n+    ) {\n+\n+    }\n \n     static async create(config: Config, extCtx: vscode.ExtensionContext, serverPath: string): Promise<Ctx> {\n         const client = await createClient(config, serverPath);\n@@ -25,12 +21,6 @@ export class Ctx {\n         return res;\n     }\n \n-    private constructor(config: Config, extCtx: vscode.ExtensionContext, client: lc.LanguageClient) {\n-        this.config = config;\n-        this.extCtx = extCtx;\n-        this.client = client\n-    }\n-\n     get activeRustEditor(): vscode.TextEditor | undefined {\n         const editor = vscode.window.activeTextEditor;\n         return editor && editor.document.languageId === 'rust'"}]}