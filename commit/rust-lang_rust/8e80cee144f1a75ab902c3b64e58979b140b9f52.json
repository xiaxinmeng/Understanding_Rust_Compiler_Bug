{"sha": "8e80cee144f1a75ab902c3b64e58979b140b9f52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlODBjZWUxNDRmMWE3NWFiOTAyYzNiNjRlNTg5NzliMTQwYjlmNTI=", "commit": {"author": {"name": "Joshua Sheard", "email": "mail@jsheard.com", "date": "2017-09-06T19:40:34Z"}, "committer": {"name": "Joshua Sheard", "email": "mail@jsheard.com", "date": "2017-09-06T19:40:34Z"}, "message": "Implement named threads on Windows", "tree": {"sha": "ea4141f54837d2de8f3f96cc72ffac9ecca4c634", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea4141f54837d2de8f3f96cc72ffac9ecca4c634"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e80cee144f1a75ab902c3b64e58979b140b9f52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e80cee144f1a75ab902c3b64e58979b140b9f52", "html_url": "https://github.com/rust-lang/rust/commit/8e80cee144f1a75ab902c3b64e58979b140b9f52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e80cee144f1a75ab902c3b64e58979b140b9f52/comments", "author": {"login": "jsheard", "id": 3153547, "node_id": "MDQ6VXNlcjMxNTM1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3153547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsheard", "html_url": "https://github.com/jsheard", "followers_url": "https://api.github.com/users/jsheard/followers", "following_url": "https://api.github.com/users/jsheard/following{/other_user}", "gists_url": "https://api.github.com/users/jsheard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsheard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsheard/subscriptions", "organizations_url": "https://api.github.com/users/jsheard/orgs", "repos_url": "https://api.github.com/users/jsheard/repos", "events_url": "https://api.github.com/users/jsheard/events{/privacy}", "received_events_url": "https://api.github.com/users/jsheard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsheard", "id": 3153547, "node_id": "MDQ6VXNlcjMxNTM1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3153547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsheard", "html_url": "https://github.com/jsheard", "followers_url": "https://api.github.com/users/jsheard/followers", "following_url": "https://api.github.com/users/jsheard/following{/other_user}", "gists_url": "https://api.github.com/users/jsheard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsheard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsheard/subscriptions", "organizations_url": "https://api.github.com/users/jsheard/orgs", "repos_url": "https://api.github.com/users/jsheard/repos", "events_url": "https://api.github.com/users/jsheard/events{/privacy}", "received_events_url": "https://api.github.com/users/jsheard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20953906056f85f71896795e762ac242e1891aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20953906056f85f71896795e762ac242e1891aa", "html_url": "https://github.com/rust-lang/rust/commit/a20953906056f85f71896795e762ac242e1891aa"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "9535ddfe5cada5143c22cee3dbf9a1f9a48ba84a", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e80cee144f1a75ab902c3b64e58979b140b9f52/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e80cee144f1a75ab902c3b64e58979b140b9f52/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=8e80cee144f1a75ab902c3b64e58979b140b9f52", "patch": "@@ -32,6 +32,7 @@ pub type DWORD = c_ulong;\n pub type HANDLE = LPVOID;\n pub type HINSTANCE = HANDLE;\n pub type HMODULE = HINSTANCE;\n+pub type HRESULT = LONG;\n pub type BOOL = c_int;\n pub type BYTE = u8;\n pub type BOOLEAN = BYTE;\n@@ -197,6 +198,8 @@ pub const ERROR_OPERATION_ABORTED: DWORD = 995;\n pub const ERROR_IO_PENDING: DWORD = 997;\n pub const ERROR_TIMEOUT: DWORD = 0x5B4;\n \n+pub const E_NOTIMPL: HRESULT = 0x80004001u32 as HRESULT;\n+\n pub const INVALID_HANDLE_VALUE: HANDLE = !0 as HANDLE;\n \n pub const FACILITY_NT_BIT: DWORD = 0x1000_0000;\n@@ -1163,8 +1166,8 @@ extern \"system\" {\n                   timeout: *const timeval) -> c_int;\n }\n \n-// Functions that aren't available on Windows XP, but we still use them and just\n-// provide some form of a fallback implementation.\n+// Functions that aren't available on every version of Windows that we support,\n+// but we still use them and just provide some form of a fallback implementation.\n compat_fn! {\n     kernel32:\n \n@@ -1182,6 +1185,10 @@ compat_fn! {\n     pub fn SetThreadStackGuarantee(_size: *mut c_ulong) -> BOOL {\n         SetLastError(ERROR_CALL_NOT_IMPLEMENTED as DWORD); 0\n     }\n+    pub fn SetThreadDescription(hThread: HANDLE,\n+                                lpThreadDescription: LPCWSTR) -> HRESULT {\n+        SetLastError(ERROR_CALL_NOT_IMPLEMENTED as DWORD); E_NOTIMPL\n+    }\n     pub fn SetFileInformationByHandle(_hFile: HANDLE,\n                     _FileInformationClass: FILE_INFO_BY_HANDLE_CLASS,\n                     _lpFileInformation: LPVOID,"}, {"sha": "4043f6bc738f66401caab071b531a49936bc7fb8", "filename": "src/libstd/sys/windows/thread.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8e80cee144f1a75ab902c3b64e58979b140b9f52/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e80cee144f1a75ab902c3b64e58979b140b9f52/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs?ref=8e80cee144f1a75ab902c3b64e58979b140b9f52", "patch": "@@ -19,6 +19,8 @@ use sys::handle::Handle;\n use sys_common::thread::*;\n use time::Duration;\n \n+use super::to_u16s;\n+\n pub struct Thread {\n     handle: Handle\n }\n@@ -53,11 +55,12 @@ impl Thread {\n         }\n     }\n \n-    pub fn set_name(_name: &CStr) {\n-        // Windows threads are nameless\n-        // The names in MSVC debugger are obtained using a \"magic\" exception,\n-        // which requires a use of MS C++ extensions.\n-        // See https://msdn.microsoft.com/en-us/library/xcb2z8hs.aspx\n+    pub fn set_name(name: &CStr) {\n+        if let Ok(utf8) = name.to_str() {\n+            if let Ok(utf16) = to_u16s(utf8) {\n+                unsafe { c::SetThreadDescription(c::GetCurrentThread(), utf16.as_ptr()); };\n+            };\n+        };\n     }\n \n     pub fn join(self) {"}]}