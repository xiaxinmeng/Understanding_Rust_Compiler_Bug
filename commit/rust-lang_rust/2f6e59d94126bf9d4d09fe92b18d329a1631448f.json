{"sha": "2f6e59d94126bf9d4d09fe92b18d329a1631448f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNmU1OWQ5NDEyNmJmOWQ0ZDA5ZmU5MmIxOGQzMjlhMTYzMTQ0OGY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-19T15:54:09Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-31T00:02:15Z"}, "message": "Don't display empty future-compat report", "tree": {"sha": "e864a8467603fdbac9fe65a1e43f6d598de80148", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e864a8467603fdbac9fe65a1e43f6d598de80148"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f6e59d94126bf9d4d09fe92b18d329a1631448f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl+cqYcACgkQtAh+UQ6Y\nsWRqxw/7BIvMgkoiSyz4oOmwMcN3GbjC4L7Pp4FlHyBm4zUrCeiIEe1vUnLqTlW/\nnvfyMLUCEknyxy0dOdTNCVNm46toGLdOEO0Iy6K59Xd6344/mDPzB9cSo4ON94XX\n/CgyCxkznucTJ/NAhkwGywbS5B2I/6qktnbe0nTTiqIItCpueE5hix94QLURbE5V\ntxshpBUIPPqWL/sVHzF1QKk2EnfcQ4tX/jjRx2KucgdUZOk867R2FXQck4ZWMeLc\nQ5GTceRCDTU94286aScQdcUDs1AAu2Gb0w6MOvOR969KqL0k5OqQwUQBRAe/A+lQ\nfJ8iMq0HkGPjDInhjUcoz5RuLFLBpdw5axfimelZ/vyU9MpPd96o+cFAR3lphwtL\n9jUWnSyXx/+PIfyf/xtV1vdFR7tUeY/cccLzHj3OtnuVr55YgKlutsH0eVYhaLHp\nSyjTBKb13qtC2VKdF6V5oLf1d+e4YB/SQoXxby+6m6ZDVSKxqg0sUHw08pZAII4m\nSLXoBq6UVYfmGMXjObDj+Jc26AHk+B9hpdE/Ji5Xk+nhsh4UtkWJX86ORF8E6rLw\n6H/X3BGMlIvnF39FuwFoAQb1kfg7f0warOk6a4Fh+016kko/QHJZdvkDI28HhFWT\nAwmxFp4eFcFF4ELhXxNmwapgyNRpMqCK7MeZq01Ji6abCg2oo3U=\n=qqjt\n-----END PGP SIGNATURE-----", "payload": "tree e864a8467603fdbac9fe65a1e43f6d598de80148\nparent 4621ce9858856389c32f890725feac489bc94ac5\nauthor Aaron Hill <aa1ronham@gmail.com> 1603122849 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1604102535 -0400\n\nDon't display empty future-compat report\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f6e59d94126bf9d4d09fe92b18d329a1631448f", "html_url": "https://github.com/rust-lang/rust/commit/2f6e59d94126bf9d4d09fe92b18d329a1631448f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f6e59d94126bf9d4d09fe92b18d329a1631448f/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4621ce9858856389c32f890725feac489bc94ac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4621ce9858856389c32f890725feac489bc94ac5", "html_url": "https://github.com/rust-lang/rust/commit/4621ce9858856389c32f890725feac489bc94ac5"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "19aec0ea598f9eb6b658d2ecaae0b0f30b1bb3ff", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2f6e59d94126bf9d4d09fe92b18d329a1631448f/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f6e59d94126bf9d4d09fe92b18d329a1631448f/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=2f6e59d94126bf9d4d09fe92b18d329a1631448f", "patch": "@@ -94,22 +94,27 @@ pub fn extract_rendered(output: &str) -> String {\n                 if let Ok(diagnostic) = serde_json::from_str::<Diagnostic>(line) {\n                     diagnostic.rendered\n                 } else if let Ok(report) = serde_json::from_str::<FutureIncompatReport>(line) {\n-                    Some(format!(\n-                        \"Future incompatibility report: {}\",\n-                        report\n-                            .future_incompat_report\n-                            .into_iter()\n-                            .map(|item| {\n-                                format!(\n-                                    \"Future breakage date: {}, diagnostic:\\n{}\",\n-                                    item.future_breakage_date.unwrap_or_else(|| \"None\".to_string()),\n-                                    item.diagnostic\n-                                        .rendered\n-                                        .unwrap_or_else(|| \"Not rendered\".to_string())\n-                                )\n-                            })\n-                            .collect::<String>()\n-                    ))\n+                    if report.future_incompat_report.is_empty() {\n+                        None\n+                    } else {\n+                        Some(format!(\n+                            \"Future incompatibility report: {}\",\n+                            report\n+                                .future_incompat_report\n+                                .into_iter()\n+                                .map(|item| {\n+                                    format!(\n+                                        \"Future breakage date: {}, diagnostic:\\n{}\",\n+                                        item.future_breakage_date\n+                                            .unwrap_or_else(|| \"None\".to_string()),\n+                                        item.diagnostic\n+                                            .rendered\n+                                            .unwrap_or_else(|| \"Not rendered\".to_string())\n+                                    )\n+                                })\n+                                .collect::<String>()\n+                        ))\n+                    }\n                 } else if serde_json::from_str::<ArtifactNotification>(line).is_ok() {\n                     // Ignore the notification.\n                     None"}]}