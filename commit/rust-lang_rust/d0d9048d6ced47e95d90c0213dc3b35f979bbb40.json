{"sha": "d0d9048d6ced47e95d90c0213dc3b35f979bbb40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZDkwNDhkNmNlZDQ3ZTk1ZDkwYzAyMTNkYzNiMzVmOTc5YmJiNDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-14T11:23:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-14T11:23:26Z"}, "message": "add a FIXME concerning interning of promoteds", "tree": {"sha": "8ebcbf5cf1d12c895f4b8ffdaeef5bbb1aeea665", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ebcbf5cf1d12c895f4b8ffdaeef5bbb1aeea665"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0d9048d6ced47e95d90c0213dc3b35f979bbb40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d9048d6ced47e95d90c0213dc3b35f979bbb40", "html_url": "https://github.com/rust-lang/rust/commit/d0d9048d6ced47e95d90c0213dc3b35f979bbb40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0d9048d6ced47e95d90c0213dc3b35f979bbb40/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7805c200d982f11ab6dc3ead72bca89e9be4d294", "url": "https://api.github.com/repos/rust-lang/rust/commits/7805c200d982f11ab6dc3ead72bca89e9be4d294", "html_url": "https://github.com/rust-lang/rust/commit/7805c200d982f11ab6dc3ead72bca89e9be4d294"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4101f70b8206dbaacda90a9940e8e35b54168fe5", "filename": "src/librustc_mir/const_eval/eval_queries.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0d9048d6ced47e95d90c0213dc3b35f979bbb40/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d9048d6ced47e95d90c0213dc3b35f979bbb40/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs?ref=d0d9048d6ced47e95d90c0213dc3b35f979bbb40", "patch": "@@ -57,6 +57,12 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n     ecx.run()?;\n \n     // Intern the result\n+    // FIXME: since the DefId of a promoted is the DefId of its owner, this\n+    // means that promoteds in statics are actually interned like statics!\n+    // However, this is also currently crucial because we promote mutable\n+    // non-empty slices in statics to extend their lifetime, and this\n+    // ensures that they are put into a mutable allocation.\n+    // For other kinds of promoteds in statics (like array initializers), this is rather silly.\n     let intern_kind = match tcx.static_mutability(cid.instance.def_id()) {\n         Some(m) => InternKind::Static(m),\n         None if cid.promoted.is_some() => InternKind::Promoted,"}]}