{"sha": "7894bc82d790c9ef700d0576f2c1e5756a07532d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4OTRiYzgyZDc5MGM5ZWY3MDBkMDU3NmYyYzFlNTc1NmEwNzUzMmQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-22T22:36:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-22T22:36:33Z"}, "message": "Rollup merge of #64294 - wchargin:wchargin-stdio-piped-docs, r=Dylan-DPC\n\nFix `Stdio::piped` example code and lint\n\nSummary:\nInvoking `rev` does not add a trailing newline when none is present in\nthe input (at least on my Debian). Nearby examples use `echo` rather\nthan `rev`, which probably explains the source of the discrepancy.\n\nAlso, a `mut` qualifier is unused.\n\nTest Plan:\nCopy the code block into <https://play.rust-lang.org> with a `fn main`\nwrapper, and run it. Note that it compiles and runs cleanly; prior to\nthis commit, it would emit an `unused_mut` warning and then panic.\n\nwchargin-branch: stdio-piped-docs", "tree": {"sha": "b56a31bfd7a246da384f5cf158f2487d356834f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b56a31bfd7a246da384f5cf158f2487d356834f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7894bc82d790c9ef700d0576f2c1e5756a07532d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdh/dxCRBK7hj4Ov3rIwAAdHIIAE2o5VG0yfqpDTOh4CwBfYH6\nlgXqbAp8IQ7bQ4sFzVHxBAiNdt4zeDM2vhRuU/8Qx2+WlUcnjOmR+SuUargKtfsu\nhnNc+zlI6/P+LmXTvHqYMgfg7xdD4lkkA19It7uqSdTKpNwwaNJrerbyZ0fZ1XGF\nBEnoWQi2HkqoFkZGk19OQ6aR1tiMxtBf92L3LKyOj+oruNbXw+5jiXML5/XfO+PK\nBfEauyyAsVWFk7+u1VH/jmHtCA6tQT1VBMct00QNAqRe+Vn2656oUVUTOsfKOvPL\nqu7TUEwfGWw3cPfXxL4HOpFa7aksOOCSonsjJJCzSkzyeQAgw6nKPsdPpot1adU=\n=+WGq\n-----END PGP SIGNATURE-----\n", "payload": "tree b56a31bfd7a246da384f5cf158f2487d356834f1\nparent 1dd1884891636d0eb51157d137230076bcf20627\nparent 9bf577311473aa0accbf0d456cbd26b7530b200f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569191793 +0200\ncommitter GitHub <noreply@github.com> 1569191793 +0200\n\nRollup merge of #64294 - wchargin:wchargin-stdio-piped-docs, r=Dylan-DPC\n\nFix `Stdio::piped` example code and lint\n\nSummary:\nInvoking `rev` does not add a trailing newline when none is present in\nthe input (at least on my Debian). Nearby examples use `echo` rather\nthan `rev`, which probably explains the source of the discrepancy.\n\nAlso, a `mut` qualifier is unused.\n\nTest Plan:\nCopy the code block into <https://play.rust-lang.org> with a `fn main`\nwrapper, and run it. Note that it compiles and runs cleanly; prior to\nthis commit, it would emit an `unused_mut` warning and then panic.\n\nwchargin-branch: stdio-piped-docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7894bc82d790c9ef700d0576f2c1e5756a07532d", "html_url": "https://github.com/rust-lang/rust/commit/7894bc82d790c9ef700d0576f2c1e5756a07532d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7894bc82d790c9ef700d0576f2c1e5756a07532d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dd1884891636d0eb51157d137230076bcf20627", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd1884891636d0eb51157d137230076bcf20627", "html_url": "https://github.com/rust-lang/rust/commit/1dd1884891636d0eb51157d137230076bcf20627"}, {"sha": "9bf577311473aa0accbf0d456cbd26b7530b200f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bf577311473aa0accbf0d456cbd26b7530b200f", "html_url": "https://github.com/rust-lang/rust/commit/9bf577311473aa0accbf0d456cbd26b7530b200f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "da136ca6bf68dcbf6d9ff30fa607c0bcb2806d3e", "filename": "src/libstd/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7894bc82d790c9ef700d0576f2c1e5756a07532d/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7894bc82d790c9ef700d0576f2c1e5756a07532d/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=7894bc82d790c9ef700d0576f2c1e5756a07532d", "patch": "@@ -940,7 +940,7 @@ impl Stdio {\n     /// }\n     ///\n     /// let output = child.wait_with_output().expect(\"Failed to read stdout\");\n-    /// assert_eq!(String::from_utf8_lossy(&output.stdout), \"!dlrow ,olleH\\n\");\n+    /// assert_eq!(String::from_utf8_lossy(&output.stdout), \"!dlrow ,olleH\");\n     /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n     pub fn piped() -> Stdio { Stdio(imp::Stdio::MakePipe) }"}]}