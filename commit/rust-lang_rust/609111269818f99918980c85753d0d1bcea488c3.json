{"sha": "609111269818f99918980c85753d0d1bcea488c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwOTExMTI2OTgxOGY5OTkxODk4MGM4NTc1M2QwZDFiY2VhNDg4YzM=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2015-12-13T00:31:34Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2015-12-13T05:39:10Z"}, "message": "Update tests", "tree": {"sha": "b0dc0ee0b91c785b17ff1bbadfbada06a3b05c5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0dc0ee0b91c785b17ff1bbadfbada06a3b05c5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/609111269818f99918980c85753d0d1bcea488c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/609111269818f99918980c85753d0d1bcea488c3", "html_url": "https://github.com/rust-lang/rust/commit/609111269818f99918980c85753d0d1bcea488c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/609111269818f99918980c85753d0d1bcea488c3/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43b96d59ade2321bf55f2ee0f082b8f0b7080bfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/43b96d59ade2321bf55f2ee0f082b8f0b7080bfe", "html_url": "https://github.com/rust-lang/rust/commit/43b96d59ade2321bf55f2ee0f082b8f0b7080bfe"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "5c3aeeb789945b98fce949e84e2b61c463d08907", "filename": "src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/609111269818f99918980c85753d0d1bcea488c3/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/609111269818f99918980c85753d0d1bcea488c3/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=609111269818f99918980c85753d0d1bcea488c3", "patch": "@@ -345,7 +345,7 @@ impl LateLintPass for UsedUnderscoreBinding {\n         };\n         if needs_lint {\n             cx.span_lint(USED_UNDERSCORE_BINDING, expr.span, &format!(\n-                \"Used binding which is prefixed with an underscore. A leading underscore signals\\\n+                \"used binding which is prefixed with an underscore. A leading underscore signals\\\n                  that a binding will not be used.\"));\n         }\n     }"}, {"sha": "adc20d67841f39068fc34c6b2b44bcb8c340155f", "filename": "tests/compile-fail/used_underscore_binding.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/609111269818f99918980c85753d0d1bcea488c3/tests%2Fcompile-fail%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/609111269818f99918980c85753d0d1bcea488c3/tests%2Fcompile-fail%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fused_underscore_binding.rs?ref=609111269818f99918980c85753d0d1bcea488c3", "patch": "@@ -1,22 +1,30 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n-#[deny(used_underscore_binding)]\n+#![deny(clippy)]\n \n-fn main() {\n-    let foo = 0u32;\n-    prefix_underscore(foo); //should fail\n-    non_prefix_underscore(foo); //should pass\n-    unused_underscore(foo); //should pass\n+fn prefix_underscore(_x: u32) -> u32{\n+    _x + 1 //~ ERROR used binding which is prefixed with an underscore\n }\n \n-fn prefix_underscore(_x: u32){\n-    println!(\"{}\", _x + 1); //~Error: Used binding which is prefixed with an underscore\n+fn in_macro(_x: u32) {\n+    println!(\"{}\", _x); //~ ERROR used binding which is prefixed with an underscore\n }\n \n-fn non_prefix_underscore(some_foo: u32) {\n-    println!(\"{}\", some_foo + 1);\n+fn non_prefix_underscore(some_foo: u32) -> u32 {\n+    some_foo + 1\n }\n \n-fn unused_underscore(_foo: u32) {\n-    println!(\"{}\", 1);\n+fn unused_underscore(_foo: u32) -> u32 {\n+    1\n }\n+\n+fn main() {\n+    let foo = 0u32;\n+    // tests of unused_underscore lint\n+    let _ = prefix_underscore(foo);\n+    in_macro(foo);\n+    // possible false positives\n+    let _ = non_prefix_underscore(foo);\n+    let _ = unused_underscore(foo);\n+}\n+"}]}