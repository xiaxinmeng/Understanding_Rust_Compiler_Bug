{"sha": "f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMjA3OWY3YzBmN2JiMmI1YjJjOTBjNzU2NGUzYmE4N2QwZmM1YWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-14T05:34:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-16T17:29:08Z"}, "message": "Convert most main functions to the ivec signature\n\nConverting rustc will still take a snapshot", "tree": {"sha": "107fc3e73cfe5f3ab2f899366acb784a9d0426d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/107fc3e73cfe5f3ab2f899366acb784a9d0426d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "html_url": "https://github.com/rust-lang/rust/commit/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "184eac90ab5e5e1e52d24b6711813bf3b66c1fea", "url": "https://api.github.com/repos/rust-lang/rust/commits/184eac90ab5e5e1e52d24b6711813bf3b66c1fea", "html_url": "https://github.com/rust-lang/rust/commit/184eac90ab5e5e1e52d24b6711813bf3b66c1fea"}], "stats": {"total": 87, "additions": 39, "deletions": 48}, "files": [{"sha": "5ea8459de881e636780b2f6c2f8249f7864b54a1", "filename": "src/etc/combine-tests.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -29,7 +29,7 @@ def scrub(b):\n         if not (\"xfail-stage2\" in s or\n                 \"xfail-fast\" in s):\n             stage2_tests.append(t)\n-            if \"main(args: vec[str])\" in s:\n+            if \"main(args: [str])\" in s:\n                 take_args[t] = True\n         f.close()\n \n@@ -60,7 +60,7 @@ def scrub(b):\n     p = p.replace(\"\\\\\", \"\\\\\\\\\")\n     d.write(\"    out.write_str(\\\"run-pass [stage2]: %s\\\\n\\\");\\n\" % p)\n     if t in take_args:\n-        d.write(\"    t_%d::main([\\\"arg0\\\"]);\\n\" % i)\n+        d.write(\"    t_%d::main(~[\\\"arg0\\\"]);\\n\" % i)\n     else:\n         d.write(\"    t_%d::main();\\n\" % i)\n     i += 1"}, {"sha": "971cedae1cf35a8f620d4e9058408d1c1a4972c0", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -345,14 +345,13 @@ fn check_variants(files: &[str]) {\n     }\n }\n \n-fn main(args: vec[str]) {\n-    let iargs = ivec::from_vec(args);\n-    if ivec::len(iargs) != 2u {\n-        log_err #fmt(\"usage: %s <testdir>\", iargs.(0));\n+fn main(args: [str]) {\n+    if ivec::len(args) != 2u {\n+        log_err #fmt(\"usage: %s <testdir>\", args.(0));\n         ret;\n     }\n     let files = ~[];\n-    let root = iargs.(1);\n+    let root = args.(1);\n \n     find_rust_files(files, root);\n     check_convergence(files);"}, {"sha": "ae5831f5cb026f35576a6ea554f83facc28a19cb", "filename": "src/test/bench/shootout-fannkuchredux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -56,7 +56,7 @@ fn fannkuch(n: int) -> int {\n     ret flips;\n }\n \n-fn main(args: vec[str]) {\n+fn main(args: [str]) {\n     let n = 7;\n     log #fmt(\"Pfannkuchen(%d) = %d\", n, fannkuch(n));\n }\n\\ No newline at end of file"}, {"sha": "bdb3143328dc3cc6a72aafa1d9bcc11916d21518", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -67,7 +67,7 @@ fn make_repeat_fasta(id: str, desc: str, s: str, n: int) {\n \n fn acid(ch: char, prob: u32) -> aminoacids { ret {ch: ch, prob: prob}; }\n \n-fn main(args: vec[str]) {\n+fn main(args: [str]) {\n     let iub: [aminoacids] =\n         make_cumulative(\n             ~[acid('a', 27u32), acid('c', 12u32), acid('g', 12u32),"}, {"sha": "ff48f62efd7d1b3aa0c76b44f8edb73c33980a70", "filename": "src/test/bench/shootout-pfib.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pfib.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -79,20 +79,19 @@ fn stress(num_tasks: int) {\n     for t in tasks { task::join_id(t); }\n }\n \n-fn main(argv: vec[str]) {\n-    let iargv = ivec::from_vec(argv);\n-    if ivec::len(iargv) == 1u {\n+fn main(argv: [str]) {\n+    if ivec::len(argv) == 1u {\n         assert (fib(8) == 21);\n         log fib(8);\n     } else {\n         // Interactive mode! Wooo!!!!\n-        let opts = parse_opts(iargv);\n+        let opts = parse_opts(argv);\n \n \n         if opts.stress {\n             stress(2);\n         } else {\n-            let max = uint::parse_buf(str::bytes(iargv.(1)), 10u) as int;\n+            let max = uint::parse_buf(str::bytes(argv.(1)), 10u) as int;\n \n             let num_trials = 10;\n "}, {"sha": "4e2cf2bcf7570e5113e11cbfbc169612e8635e2f", "filename": "src/test/bench/task-perf-spawnalot.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -14,13 +14,12 @@ fn f(n: uint) {\n \n fn g() {}\n \n-fn main(args: vec[str]) {\n+fn main(args: [str]) {\n \n-    let iargs = ivec::from_vec(args);\n-    let n = if ivec::len(iargs) < 2u {\n+    let n = if ivec::len(args) < 2u {\n         10u\n     } else {\n-        uint::parse_buf(str::bytes(iargs.(1)), 10u)\n+        uint::parse_buf(str::bytes(args.(1)), 10u)\n     };\n     let i = 0u;\n     while i < n {"}, {"sha": "9a051d28cb9a00d768ec8ac22299fe6e2facd98a", "filename": "src/test/bench/task-perf-word-count.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -198,12 +198,11 @@ mod map_reduce {\n     }\n }\n \n-fn main(argv: vec[str]) {\n-    let iargv = ivec::from_vec(argv);\n-    if ivec::len(iargv) < 2u {\n+fn main(argv: [str]) {\n+    if ivec::len(argv) < 2u {\n         let out = io::stdout();\n \n-        out.write_line(#fmt(\"Usage: %s <filename> ...\", iargv.(0)));\n+        out.write_line(#fmt(\"Usage: %s <filename> ...\", argv.(0)));\n \n         // TODO: run something just to make sure the code hasn't\n         // broken yet. This is the unit test mode of this program.\n@@ -217,7 +216,7 @@ fn main(argv: vec[str]) {\n \n     let start = time::precise_time_ns();\n \n-    map_reduce::map_reduce(ivec::slice(iargv, 1u, ivec::len(iargv)));\n+    map_reduce::map_reduce(ivec::slice(argv, 1u, ivec::len(argv)));\n     let stop = time::precise_time_ns();\n \n     let elapsed = stop - start;"}, {"sha": "86fc40027f9b943a1857053025ca53084511e37b", "filename": "src/test/compile-fail/bad-expr-path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -2,4 +2,4 @@\n \n mod m1 { }\n \n-fn main(args: vec[str]) { log m1::a; }\n\\ No newline at end of file\n+fn main(args: [str]) { log m1::a; }\n\\ No newline at end of file"}, {"sha": "9216c000fbfbaa4a24ce356af9601f16b11a4823", "filename": "src/test/compile-fail/bad-expr-path2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fbad-expr-path2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fbad-expr-path2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-expr-path2.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -4,4 +4,4 @@ mod m1 {\n     mod a { }\n }\n \n-fn main(args: vec[str]) { log m1::a; }\n\\ No newline at end of file\n+fn main(args: [str]) { log m1::a; }\n\\ No newline at end of file"}, {"sha": "7503a7df91f68f2efcb62a59e82b95adc27e45df", "filename": "src/test/compile-fail/import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -4,4 +4,4 @@ import zed::baz;\n mod zed {\n     fn bar() { log \"bar\"; }\n }\n-fn main(args: vec[str]) { bar(); }\n\\ No newline at end of file\n+fn main(args: [str]) { bar(); }\n\\ No newline at end of file"}, {"sha": "2449377f785982af7e5e26cbacf43d522a0cb20f", "filename": "src/test/compile-fail/import2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport2.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -4,4 +4,4 @@ mod baz { }\n mod zed {\n     fn bar() { log \"bar3\"; }\n }\n-fn main(args: vec[str]) { bar(); }\n\\ No newline at end of file\n+fn main(args: [str]) { bar(); }\n\\ No newline at end of file"}, {"sha": "0f8fdcf26360ad93edd851a309aa958844aa8058", "filename": "src/test/compile-fail/import3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport3.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -1,4 +1,4 @@\n // error-pattern: unresolved modulename\n import main::bar;\n \n-fn main(args: vec[str]) { log \"foo\"; }\n\\ No newline at end of file\n+fn main(args: [str]) { log \"foo\"; }\n\\ No newline at end of file"}, {"sha": "65d8893177fc583b97c7d0782d176c278fdd1b97", "filename": "src/test/compile-fail/import4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompile-fail%2Fimport4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport4.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -3,4 +3,4 @@\n import zed::bar;\n import bar::zed;\n \n-fn main(args: vec[str]) { log \"loop\"; }\n\\ No newline at end of file\n+fn main(args: [str]) { log \"loop\"; }\n\\ No newline at end of file"}, {"sha": "4c3a30d39521a71d406db998dc3531e54d705a3e", "filename": "src/test/compiletest/compiletest.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fcompiletest.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -22,11 +22,9 @@ import common::mode_pretty;\n import common::mode;\n import util::logv;\n \n-fn main(args: vec[str]) {\n+fn main(args: [str]) {\n \n-    let ivec_args = ivec::from_vec(args);\n-\n-    let config = parse_config(ivec_args);\n+    let config = parse_config(args);\n     log_config(config);\n     run_tests(config);\n }"}, {"sha": "b0feeff2232bb0f0a0c225e5eb70b77f7dc6d9dd", "filename": "src/test/run-pass/argv.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fargv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fargv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fargv.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -1,8 +1,5 @@\n-use std;\n-import std::ivec;\n-\n-fn main(args: vec[str]) {\n+fn main(args: [str]) {\n     let vs: [str] = ~[\"hi\", \"there\", \"this\", \"is\", \"a\", \"vec\"];\n-    let vvs: [[str]] = ~[ivec::from_vec(args), vs];\n+    let vvs: [[str]] = ~[args, vs];\n     for vs: [str] in vvs { for s: str in vs { log s; } }\n }"}, {"sha": "5040e6888abf216f8ed67f39195a847f169d3ffc", "filename": "src/test/run-pass/command-line-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fcommand-line-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fcommand-line-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-line-args.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -1,3 +1,3 @@\n \n \n-fn main(args: vec[str]) { log args.(0); }\n\\ No newline at end of file\n+fn main(args: [str]) { log args.(0); }\n\\ No newline at end of file"}, {"sha": "00e5aca8e1c2186cd638a16996b57a627656bcbb", "filename": "src/test/run-pass/import4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fimport4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fimport4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport4.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -5,4 +5,4 @@ mod zed {\n     fn bar() { log \"bar\"; }\n }\n \n-fn main(args: vec[str]) { let zed = 42; bar(); }\n\\ No newline at end of file\n+fn main(args: [str]) { let zed = 42; bar(); }\n\\ No newline at end of file"}, {"sha": "0be63b38e079e17c28ff9665f6f04e5781f37d39", "filename": "src/test/run-pass/import5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fimport5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fimport5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport5.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -7,4 +7,4 @@ mod foo {\n     }\n }\n \n-fn main(args: vec[str]) { bar(); }\n\\ No newline at end of file\n+fn main(args: [str]) { bar(); }\n\\ No newline at end of file"}, {"sha": "760a3ff37ca9cbc5bff258087de2a66082c45510", "filename": "src/test/run-pass/import7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fimport7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fimport7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport7.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -12,4 +12,4 @@ mod bar {\n         mod zed { }\n     }\n }\n-fn main(args: vec[str]) { baz(); }\n\\ No newline at end of file\n+fn main(args: [str]) { baz(); }\n\\ No newline at end of file"}, {"sha": "b450a34c4110d6e3f98748ec1a0431350f202915", "filename": "src/test/run-pass/iter-ret.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fiter-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fiter-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fiter-ret.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -4,4 +4,4 @@ iter x() -> int { }\n \n fn f() -> bool { for each i: int in x() { ret true; } ret false; }\n \n-fn main(args: vec[str]) { f(); }\n+fn main(args: [str]) { f(); }"}, {"sha": "cb4be22508fb698401b934ac39e3f44c9f8527c2", "filename": "src/test/run-pass/native2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fnative2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fnative2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative2.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -15,4 +15,4 @@ native \"cdecl\" mod libc = \"\" {\n \n native \"cdecl\" mod baz = \"\" { }\n \n-fn main(args: vec[str]) { }\n\\ No newline at end of file\n+fn main(args: [str]) { }\n\\ No newline at end of file"}, {"sha": "2b3a17ed86d256329272051a67a978525d758f34", "filename": "src/test/run-pass/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpath.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -4,4 +4,4 @@ mod foo {\n     fn bar(offset: uint) { }\n }\n \n-fn main(args: vec[str]) { foo::bar(0u); }\n\\ No newline at end of file\n+fn main(args: [str]) { foo::bar(0u); }\n\\ No newline at end of file"}, {"sha": "a553103bbd404f47c9e70c3945e48418f4db9d24", "filename": "src/test/run-pass/tag-in-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Ftag-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Ftag-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-in-block.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -6,4 +6,4 @@ fn foo() {\n     fn baz() { zed(nil); }\n }\n \n-fn main(args: vec[str]) { }\n\\ No newline at end of file\n+fn main(args: [str]) { }\n\\ No newline at end of file"}, {"sha": "4729d6a4b075f48558e70eca4775d9bce8624239", "filename": "src/test/run-pass/type-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Ftype-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Ftype-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-param.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -2,4 +2,4 @@\n \n type lteq[T] = fn(&T) -> bool ;\n \n-fn main(args: vec[str]) { }\n\\ No newline at end of file\n+fn main(args: [str]) { }\n\\ No newline at end of file"}, {"sha": "8c71b5abfb444a15811c9b892ed4a3566872ac7d", "filename": "src/test/run-pass/type-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-ptr.rs?ref=f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "patch": "@@ -2,4 +2,4 @@ fn f(a: *int) -> *int { ret a; }\n \n fn g(a: *int) -> *int { let b = f(a); ret b; }\n \n-fn main(args: vec[str]) { ret; }\n\\ No newline at end of file\n+fn main(args: [str]) { ret; }\n\\ No newline at end of file"}]}