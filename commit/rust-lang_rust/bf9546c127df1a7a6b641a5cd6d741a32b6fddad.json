{"sha": "bf9546c127df1a7a6b641a5cd6d741a32b6fddad", "node_id": "C_kwDOAAsO6NoAKGJmOTU0NmMxMjdkZjFhN2E2YjY0MWE1Y2Q2ZDc0MWEzMmI2ZmRkYWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-05T14:05:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-05T14:05:46Z"}, "message": "Rollup merge of #92442 - pierwill:localdefid-doc-ord, r=Aaron1011\n\nAdd negative `impl` for `Ord`, `PartialOrd` on `LocalDefId`\n\nSuggested in https://github.com/rust-lang/rust/pull/92233#discussion_r776123222.\n\nThis also fixes some formatting in the doc comment.\n\nr? `@cjgillot`", "tree": {"sha": "cd3c9248c375936b9730a2344d50f4a5d5a7fc29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd3c9248c375936b9730a2344d50f4a5d5a7fc29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf9546c127df1a7a6b641a5cd6d741a32b6fddad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1aW6CRBK7hj4Ov3rIwAAzqMIAHXVd8lJ+cmPUHLidji2O+Dq\n3EvJy5hNVTHO7t7DU74I2J+9llvYE1aCamGiDgPrk0sg9vqXZL+K3zAHlgaPFEdU\nYML8LAF0eJlTe63PcbTjZGX9haCMf3Rs5GaGxHETwMUqae63FAA3NxloEmJnO39U\n0wzi0UNyrAlrXLRUIEbhGYWLisKKRIwHvDatX4/vaoFBddITXz/JXFXzsTxINsfK\n+OcrAM29xNZxMnKdxuAD3KEdis6w/WdBBNmTkcl/RHcogOR9tf7dVqmNvSbt4jJR\nptr5B9fnGe4lR4E1fF56TkmJGIluKiPnaO+qaAZ3vIb6RAgMOyudXH2QO8heXHA=\n=tgUL\n-----END PGP SIGNATURE-----\n", "payload": "tree cd3c9248c375936b9730a2344d50f4a5d5a7fc29\nparent 84e48a41d3feeb65cc90cc13fd30e3997d313535\nparent 0bac713569a56089c3b5435f49d7e8d900535d30\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641391546 +0100\ncommitter GitHub <noreply@github.com> 1641391546 +0100\n\nRollup merge of #92442 - pierwill:localdefid-doc-ord, r=Aaron1011\n\nAdd negative `impl` for `Ord`, `PartialOrd` on `LocalDefId`\n\nSuggested in https://github.com/rust-lang/rust/pull/92233#discussion_r776123222.\n\nThis also fixes some formatting in the doc comment.\n\nr? `@cjgillot`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf9546c127df1a7a6b641a5cd6d741a32b6fddad", "html_url": "https://github.com/rust-lang/rust/commit/bf9546c127df1a7a6b641a5cd6d741a32b6fddad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf9546c127df1a7a6b641a5cd6d741a32b6fddad/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84e48a41d3feeb65cc90cc13fd30e3997d313535", "url": "https://api.github.com/repos/rust-lang/rust/commits/84e48a41d3feeb65cc90cc13fd30e3997d313535", "html_url": "https://github.com/rust-lang/rust/commit/84e48a41d3feeb65cc90cc13fd30e3997d313535"}, {"sha": "0bac713569a56089c3b5435f49d7e8d900535d30", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bac713569a56089c3b5435f49d7e8d900535d30", "html_url": "https://github.com/rust-lang/rust/commit/0bac713569a56089c3b5435f49d7e8d900535d30"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "f6b0785a07c0e4c3004938d698f077fbb0d3f574", "filename": "compiler/rustc_span/src/def_id.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bf9546c127df1a7a6b641a5cd6d741a32b6fddad/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf9546c127df1a7a6b641a5cd6d741a32b6fddad/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs?ref=bf9546c127df1a7a6b641a5cd6d741a32b6fddad", "patch": "@@ -316,17 +316,23 @@ impl fmt::Debug for DefId {\n \n rustc_data_structures::define_id_collections!(DefIdMap, DefIdSet, DefId);\n \n-/// A LocalDefId is equivalent to a DefId with `krate == LOCAL_CRATE`. Since\n+/// A `LocalDefId` is equivalent to a `DefId` with `krate == LOCAL_CRATE`. Since\n /// we encode this information in the type, we can ensure at compile time that\n-/// no DefIds from upstream crates get thrown into the mix. There are quite a\n-/// few cases where we know that only DefIds from the local crate are expected\n-/// and a DefId from a different crate would signify a bug somewhere. This\n-/// is when LocalDefId comes in handy.\n+/// no `DefId`s from upstream crates get thrown into the mix. There are quite a\n+/// few cases where we know that only `DefId`s from the local crate are expected;\n+/// a `DefId` from a different crate would signify a bug somewhere. This\n+/// is when `LocalDefId` comes in handy.\n #[derive(Clone, Copy, PartialEq, Eq, Hash)]\n pub struct LocalDefId {\n     pub local_def_index: DefIndex,\n }\n \n+// To ensure correctness of incremental compilation,\n+// `LocalDefId` must not implement `Ord` or `PartialOrd`.\n+// See https://github.com/rust-lang/rust/issues/90317.\n+impl !Ord for LocalDefId {}\n+impl !PartialOrd for LocalDefId {}\n+\n pub const CRATE_DEF_ID: LocalDefId = LocalDefId { local_def_index: CRATE_DEF_INDEX };\n \n impl Idx for LocalDefId {"}]}