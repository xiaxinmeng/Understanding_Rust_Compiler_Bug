{"sha": "6e4865de73aae64c9285dd0f3f89984a59c02c2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNDg2NWRlNzNhYWU2NGM5Mjg1ZGQwZjNmODk5ODRhNTljMDJjMmU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-04-01T10:57:06Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-04-01T10:57:06Z"}, "message": "Merge #1081\n\n1081: Async closure syntax r=matklad a=robojumper\n\nFixes #1080.\r\n\r\nAlso fixes an error introduced by #1072 where something like `async move \"foo\"` in expression position would trigger the assertion in `block_expr`.\n\nCo-authored-by: robojumper <robojumper@gmail.com>", "tree": {"sha": "5870b84becc89f88a554eef9a5762e2f38add050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5870b84becc89f88a554eef9a5762e2f38add050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e4865de73aae64c9285dd0f3f89984a59c02c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4865de73aae64c9285dd0f3f89984a59c02c2e", "html_url": "https://github.com/rust-lang/rust/commit/6e4865de73aae64c9285dd0f3f89984a59c02c2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e4865de73aae64c9285dd0f3f89984a59c02c2e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "42a883f06c28ddeab22e5703a578f19110dde7f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a883f06c28ddeab22e5703a578f19110dde7f3", "html_url": "https://github.com/rust-lang/rust/commit/42a883f06c28ddeab22e5703a578f19110dde7f3"}, {"sha": "d43dff43b4bb89306c418222df3b262a715c0fda", "url": "https://api.github.com/repos/rust-lang/rust/commits/d43dff43b4bb89306c418222df3b262a715c0fda", "html_url": "https://github.com/rust-lang/rust/commit/d43dff43b4bb89306c418222df3b262a715c0fda"}], "stats": {"total": 75, "additions": 66, "deletions": 9}, "files": [{"sha": "d0feed616533df51d417462308bbc94caa2b4c5e", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=6e4865de73aae64c9285dd0f3f89984a59c02c2e", "patch": "@@ -68,6 +68,7 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n         L_BRACK => array_expr(p),\n         PIPE => lambda_expr(p),\n         MOVE_KW if la == PIPE => lambda_expr(p),\n+        ASYNC_KW if la == PIPE || (la == MOVE_KW && p.nth(2) == PIPE) => lambda_expr(p),\n         IF_KW => if_expr(p),\n \n         LOOP_KW => loop_expr(p, None),\n@@ -92,7 +93,7 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n                 }\n             }\n         }\n-        ASYNC_KW if la == L_CURLY || la == MOVE_KW => {\n+        ASYNC_KW if la == L_CURLY || (la == MOVE_KW && p.nth(2) == L_CURLY) => {\n             let m = p.start();\n             p.bump();\n             p.eat(MOVE_KW);\n@@ -190,10 +191,19 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n //     || -> i32 { 92 };\n //     |x| x;\n //     move |x: i32,| x;\n+//     async || {};\n+//     move || {};\n+//     async move || {};\n // }\n fn lambda_expr(p: &mut Parser) -> CompletedMarker {\n-    assert!(p.at(PIPE) || (p.at(MOVE_KW) && p.nth(1) == PIPE));\n+    assert!(\n+        p.at(PIPE)\n+            || (p.at(MOVE_KW) && p.nth(1) == PIPE)\n+            || (p.at(ASYNC_KW) && p.nth(1) == PIPE)\n+            || (p.at(ASYNC_KW) && p.nth(1) == MOVE_KW && p.nth(2) == PIPE)\n+    );\n     let m = p.start();\n+    p.eat(ASYNC_KW);\n     p.eat(MOVE_KW);\n     params::param_list_opt_types(p);\n     if opt_fn_ret_type(p) {"}, {"sha": "c4b8ef3c7d9b67a6760ec780ec31611cdc077ab1", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=6e4865de73aae64c9285dd0f3f89984a59c02c2e", "patch": "@@ -82,7 +82,7 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n     // test_err async_without_semicolon\n     // fn foo() { let _ = async {} }\n     has_mods |= p.eat(CONST_KW);\n-    if p.at(ASYNC_KW) && p.nth(1) != L_CURLY && p.nth(1) != MOVE_KW {\n+    if p.at(ASYNC_KW) && p.nth(1) != L_CURLY && p.nth(1) != MOVE_KW && p.nth(1) != PIPE {\n         p.eat(ASYNC_KW);\n         has_mods = true;\n     }"}, {"sha": "0757178239d1e1049dff5fc860739a00d8729f5e", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0106_lambda_expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs?ref=6e4865de73aae64c9285dd0f3f89984a59c02c2e", "patch": "@@ -3,4 +3,7 @@ fn foo() {\n     || -> i32 { 92 };\n     |x| x;\n     move |x: i32,| x;\n+    async || {};\n+    move || {};\n+    async move || {};\n }"}, {"sha": "b885d239ab55d971ca595544f202605df89fa782", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0106_lambda_expr.txt", "status": "modified", "additions": 50, "deletions": 6, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6e4865de73aae64c9285dd0f3f89984a59c02c2e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt?ref=6e4865de73aae64c9285dd0f3f89984a59c02c2e", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 79)\n-  FN_DEF@[0; 78)\n+SOURCE_FILE@[0; 134)\n+  FN_DEF@[0; 133)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 79)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n     WHITESPACE@[8; 9)\n-    BLOCK@[9; 78)\n+    BLOCK@[9; 133)\n       L_CURLY@[9; 10)\n       WHITESPACE@[10; 15)\n       EXPR_STMT@[15; 21)\n@@ -90,6 +90,50 @@ SOURCE_FILE@[0; 79)\n                 NAME_REF@[74; 75)\n                   IDENT@[74; 75) \"x\"\n         SEMI@[75; 76)\n-      WHITESPACE@[76; 77)\n-      R_CURLY@[77; 78)\n-  WHITESPACE@[78; 79)\n+      WHITESPACE@[76; 81)\n+      EXPR_STMT@[81; 93)\n+        LAMBDA_EXPR@[81; 92)\n+          ASYNC_KW@[81; 86)\n+          WHITESPACE@[86; 87)\n+          PARAM_LIST@[87; 89)\n+            PIPE@[87; 88)\n+            PIPE@[88; 89)\n+          WHITESPACE@[89; 90)\n+          BLOCK_EXPR@[90; 92)\n+            BLOCK@[90; 92)\n+              L_CURLY@[90; 91)\n+              R_CURLY@[91; 92)\n+        SEMI@[92; 93)\n+      WHITESPACE@[93; 98)\n+      EXPR_STMT@[98; 109)\n+        LAMBDA_EXPR@[98; 108)\n+          MOVE_KW@[98; 102)\n+          WHITESPACE@[102; 103)\n+          PARAM_LIST@[103; 105)\n+            PIPE@[103; 104)\n+            PIPE@[104; 105)\n+          WHITESPACE@[105; 106)\n+          BLOCK_EXPR@[106; 108)\n+            BLOCK@[106; 108)\n+              L_CURLY@[106; 107)\n+              R_CURLY@[107; 108)\n+        SEMI@[108; 109)\n+      WHITESPACE@[109; 114)\n+      EXPR_STMT@[114; 131)\n+        LAMBDA_EXPR@[114; 130)\n+          ASYNC_KW@[114; 119)\n+          WHITESPACE@[119; 120)\n+          MOVE_KW@[120; 124)\n+          WHITESPACE@[124; 125)\n+          PARAM_LIST@[125; 127)\n+            PIPE@[125; 126)\n+            PIPE@[126; 127)\n+          WHITESPACE@[127; 128)\n+          BLOCK_EXPR@[128; 130)\n+            BLOCK@[128; 130)\n+              L_CURLY@[128; 129)\n+              R_CURLY@[129; 130)\n+        SEMI@[130; 131)\n+      WHITESPACE@[131; 132)\n+      R_CURLY@[132; 133)\n+  WHITESPACE@[133; 134)"}]}