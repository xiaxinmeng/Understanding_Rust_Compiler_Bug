{"sha": "3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMzJjNmFhOGRjZWIwNzU5ZGY3ZjFhYWRiNDZmYmQzNWU0MGIwMDM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-09-23T16:15:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-09-23T16:15:58Z"}, "message": "Fix some tests with no llvm build", "tree": {"sha": "b8db79fb7a0902f6f09a2ed10fc693ccebdc4b4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8db79fb7a0902f6f09a2ed10fc693ccebdc4b4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "html_url": "https://github.com/rust-lang/rust/commit/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56c46707ed19caaadfe8b0e7fdb034d140eb45fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/56c46707ed19caaadfe8b0e7fdb034d140eb45fb", "html_url": "https://github.com/rust-lang/rust/commit/56c46707ed19caaadfe8b0e7fdb034d140eb45fb"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "b0d24670daeaa5802a49151911634cd4f7a5f836", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "patch": "@@ -94,7 +94,7 @@ use syntax::ast;\n \n use mir::lvalue::Alignment;\n \n-pub use rustc_trans_utils::find_exported_symbols;\n+pub use rustc_trans_utils::{find_exported_symbols, check_for_rustc_errors_attr};\n \n pub struct StatRecorder<'a, 'tcx: 'a> {\n     ccx: &'a CrateContext<'a, 'tcx>,\n@@ -661,20 +661,6 @@ pub fn set_link_section(ccx: &CrateContext,\n     }\n }\n \n-// check for the #[rustc_error] annotation, which forces an\n-// error in trans. This is used to write compile-fail tests\n-// that actually test that compilation succeeds without\n-// reporting an error.\n-fn check_for_rustc_errors_attr(tcx: TyCtxt) {\n-    if let Some((id, span)) = *tcx.sess.entry_fn.borrow() {\n-        let main_def_id = tcx.hir.local_def_id(id);\n-\n-        if tcx.has_attr(main_def_id, \"rustc_error\") {\n-            tcx.sess.span_fatal(span, \"compilation successful\");\n-        }\n-    }\n-}\n-\n /// Create the `main` function which will initialize the rust runtime and call\n /// users main function.\n fn maybe_create_entry_wrapper(ccx: &CrateContext) {"}, {"sha": "6873befd2bfcac5eb8b688d13d4d21944d8f4c10", "filename": "src/librustc_trans_utils/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003/src%2Flibrustc_trans_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003/src%2Flibrustc_trans_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Flib.rs?ref=3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "patch": "@@ -52,6 +52,20 @@ use syntax::attr;\n pub mod link;\n pub mod trans_crate;\n \n+/// check for the #[rustc_error] annotation, which forces an\n+/// error in trans. This is used to write compile-fail tests\n+/// that actually test that compilation succeeds without\n+/// reporting an error.\n+pub fn check_for_rustc_errors_attr(tcx: TyCtxt) {\n+    if let Some((id, span)) = *tcx.sess.entry_fn.borrow() {\n+        let main_def_id = tcx.hir.local_def_id(id);\n+\n+        if tcx.has_attr(main_def_id, \"rustc_error\") {\n+            tcx.sess.span_fatal(span, \"compilation successful\");\n+        }\n+    }\n+}\n+\n /// The context provided lists a set of reachable ids as calculated by\n /// middle::reachable, but this contains far more ids and symbols than we're\n /// actually exposing from the object file. This function will filter the set in"}, {"sha": "76a15920b24028324be4d8bd96ffea0026085eaa", "filename": "src/librustc_trans_utils/trans_crate.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c32c6aa8dceb0759df7f1aadb46fbd35e40b003/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Ftrans_crate.rs?ref=3c32c6aa8dceb0759df7f1aadb46fbd35e40b003", "patch": "@@ -192,6 +192,11 @@ impl TransCrate for MetadataOnlyTransCrate {\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         _rx: mpsc::Receiver<Box<Any + Send>>\n     ) -> Self::OngoingCrateTranslation {\n+        ::check_for_rustc_errors_attr(tcx);\n+        let _ = tcx.link_args(LOCAL_CRATE);\n+        let _ = tcx.native_libraries(LOCAL_CRATE);\n+        tcx.sess.abort_if_errors();\n+\n         let crate_hash = tcx.dep_graph\n                         .fingerprint_of(&DepNode::new_no_params(DepKind::Krate))\n                         .unwrap();"}]}