{"sha": "ef3307289056ac3151a1a6eb29065932e5326bcf", "node_id": "C_kwDOAAsO6NoAKGVmMzMwNzI4OTA1NmFjMzE1MWExYTZlYjI5MDY1OTMyZTUzMjZiY2Y", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-12-20T20:24:18Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-11T22:39:59Z"}, "message": "Migrate usefulness.rs", "tree": {"sha": "b484749203f3f330fc506196b362a15ac9e213c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b484749203f3f330fc506196b362a15ac9e213c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef3307289056ac3151a1a6eb29065932e5326bcf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmO/Or8ACgkQ+boUO5X/\nbYKP8hAApYE3pOzJDTRPIaWXhnZ8pTVnSGFRCWML0dbigrZ2XNj8DVsO8zI9NcLc\nVq1sg7FmiHw5c+yVnGQJfX6Kmjqd8BLBdP8Ur8ZqOF46VV/ZjrkZSCpzqxTmygci\nmg7FjTKBFhGlD3mx9pffaVW3lFVGtPbK+BvS2tDVXvJnVVXQmEbKcnPsOc0x9V2w\nLePU4faqGUF/93FI5X48Z9Gb56iNXQcy41XKp5SqK7fFbQrJMBJcjZcH/8eOAeRe\nxOPlBUG4eSiSfqNRxtezY/9q7UJ6eXZWj0iZrodJ2yiwDM3ZwKgZHjuCajg3YtY6\nHk8XH/sUh8HDOdBQ4vabcf9KkYk8AI21A0mJCN9ee+pBGYAGW5F4vzSLuciM8aHy\nwKATmRNKC0plLRqHodStigZGsmL5BtIOdhcXlK9Wv7lZbiJ/WvkTSrV75dSm9c9X\nXrRCikk7Mv3i5lGDj8TJVjv3LQF8aeWpKJckWxUgAq7MifOY2D/biUmrphEFC70G\na8vRpG6VvyVjDxsoBXn7K91OjJlRrE3lJEpY8TUzHMlOgbjah2lPl1B7IqshUbnH\n1GM8vcgm64I7QuFTZn4upXXaa/0DgxmbXnwUA/IgT267awXNiI1vgydJmMgDfpv0\nyYdGHO71xn2qk75TbiaLwm5x1Fb8tdxV2/gtMU+thQqxpL6LVRM=\n=zDa6\n-----END PGP SIGNATURE-----", "payload": "tree b484749203f3f330fc506196b362a15ac9e213c0\nparent 5d2b9a9ed09ac8a4cb4b7977cdc513fe1cf56408\nauthor mejrs <> 1671567858 +0100\ncommitter David Tolnay <dtolnay@gmail.com> 1673476799 -0800\n\nMigrate usefulness.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef3307289056ac3151a1a6eb29065932e5326bcf", "html_url": "https://github.com/rust-lang/rust/commit/ef3307289056ac3151a1a6eb29065932e5326bcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef3307289056ac3151a1a6eb29065932e5326bcf/comments", "author": {}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d2b9a9ed09ac8a4cb4b7977cdc513fe1cf56408", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2b9a9ed09ac8a4cb4b7977cdc513fe1cf56408", "html_url": "https://github.com/rust-lang/rust/commit/5d2b9a9ed09ac8a4cb4b7977cdc513fe1cf56408"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "9f10dc4b634c0236128a46e22a5dceb2ea433ed8", "filename": "compiler/rustc_error_messages/locales/en-US/mir_build.ftl", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_build.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_build.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_build.ftl?ref=ef3307289056ac3151a1a6eb29065932e5326bcf", "patch": "@@ -313,14 +313,24 @@ mir_build_float_pattern = floating-point types cannot be used in patterns\n \n mir_build_pointer_pattern = function pointers and unsized pointers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.\n \n-mir_build_indirect_structural_match = \n+mir_build_indirect_structural_match =\n     to use a constant of type `{$non_sm_ty}` in a pattern, `{$non_sm_ty}` must be annotated with `#[derive(PartialEq, Eq)]`\n \n-mir_build_nontrivial_structural_match = \n+mir_build_nontrivial_structural_match =\n     to use a constant of type `{$non_sm_ty}` in a pattern, the constant's initializer must be trivial or `{$non_sm_ty}` must be annotated with `#[derive(PartialEq, Eq)]`\n \n mir_build_overlapping_range_endpoints = multiple patterns overlap on their endpoints\n     .range = ... with this range\n     .note = you likely meant to write mutually exclusive ranges\n \n mir_build_overlapping_range = this range overlaps on `{$range}`...\n+\n+mir_build_non_exhaustive_omitted_pattern = some variants are not matched explicitly\n+    .label = {$count ->\n+        [1] pattern `{$witness_1}`\n+        [2] patterns `{$witness_1}` and `{$witness_2}`\n+        [3] patterns `{$witness_1}`, `{$witness_2}` and `{$witness_3}`\n+        *[other] patterns `{$witness_1}`, `{$witness_2}`, `{$witness_3}` and more\n+    } not covered\n+    .help = ensure that all variants are matched explicitly by adding the suggested match arms\n+    .note = the matched value is of type `{$scrut_ty}` and the `non_exhaustive_omitted_patterns` attribute was found"}, {"sha": "e15da5bb9ce1be4f04d46258656458ddd1b4bf0c", "filename": "compiler/rustc_mir_build/src/errors.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Ferrors.rs?ref=ef3307289056ac3151a1a6eb29065932e5326bcf", "patch": "@@ -685,3 +685,17 @@ pub struct Overlap<'tcx> {\n     pub span: Span,\n     pub range: Pat<'tcx>,\n }\n+\n+#[derive(LintDiagnostic)]\n+#[diag(mir_build_non_exhaustive_omitted_pattern)]\n+#[help]\n+#[note]\n+pub(crate) struct NonExhaustiveOmittedPattern<'tcx> {\n+    pub scrut_ty: Ty<'tcx>,\n+    #[label]\n+    pub uncovered: Span,\n+    pub count: usize,\n+    pub witness_1: Pat<'tcx>,\n+    pub witness_2: Pat<'tcx>,\n+    pub witness_3: Pat<'tcx>,\n+}"}, {"sha": "7f3519945c3fed4ea3ba3ea29da636dd456c5e02", "filename": "compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs?ref=ef3307289056ac3151a1a6eb29065932e5326bcf", "patch": "@@ -435,7 +435,7 @@ impl<'tcx> ConstToPat<'tcx> {\n                 _ => {\n                     if !pointee_ty.is_sized(tcx, param_env) {\n                         // `tcx.deref_mir_constant()` below will ICE with an unsized type\n-                        // (except slices, which are handled in a separate arm above).                        \n+                        // (except slices, which are handled in a separate arm above).\n \n                         let err = UnsizedPattern { span, non_sm_ty: *pointee_ty };\n                         tcx.sess.create_err(err).emit_unless(!self.include_lint_checks);"}, {"sha": "6395b75a08f6f9688fe7ac25bff0b1f12ce942ee", "filename": "compiler/rustc_mir_build/src/thir/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs?ref=ef3307289056ac3151a1a6eb29065932e5326bcf", "patch": "@@ -2,7 +2,7 @@\n \n mod check_match;\n mod const_to_pat;\n-mod deconstruct_pat;\n+pub(crate) mod deconstruct_pat;\n mod usefulness;\n \n pub(crate) use self::check_match::check_match;"}, {"sha": "37aed5bd14da44a7c419ad5b2f4d7e744189ef65", "filename": "compiler/rustc_mir_build/src/thir/pattern/usefulness.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3307289056ac3151a1a6eb29065932e5326bcf/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs?ref=ef3307289056ac3151a1a6eb29065932e5326bcf", "patch": "@@ -291,9 +291,8 @@\n \n use self::ArmType::*;\n use self::Usefulness::*;\n-\n-use super::check_match::{joined_uncovered_patterns, pattern_not_covered_label};\n use super::deconstruct_pat::{Constructor, DeconstructedPat, Fields, SplitWildcard};\n+use crate::errors::NonExhaustiveOmittedPattern;\n \n use rustc_data_structures::captures::Captures;\n \n@@ -754,6 +753,23 @@ fn lint_non_exhaustive_omitted_patterns<'p, 'tcx>(\n     hir_id: HirId,\n     witnesses: Vec<DeconstructedPat<'p, 'tcx>>,\n ) {\n+    let witness_1 = witnesses.get(0).unwrap().to_pat(cx);\n+\n+    cx.tcx.emit_spanned_lint(\n+        NON_EXHAUSTIVE_OMITTED_PATTERNS,\n+        hir_id,\n+        sp,\n+        NonExhaustiveOmittedPattern {\n+            scrut_ty,\n+            uncovered: sp,\n+            count: witnesses.len(),\n+            // Substitute dummy values if witnesses is smaller than 3.\n+            witness_2: witnesses.get(1).map(|w| w.to_pat(cx)).unwrap_or_else(|| witness_1.clone()),\n+            witness_3: witnesses.get(2).map(|w| w.to_pat(cx)).unwrap_or_else(|| witness_1.clone()),\n+            witness_1,\n+        },\n+    );\n+    /*\n     cx.tcx.struct_span_lint_hir(NON_EXHAUSTIVE_OMITTED_PATTERNS, hir_id, sp, \"some variants are not matched explicitly\", |lint| {\n         let joined_patterns = joined_uncovered_patterns(cx, &witnesses);\n         lint.span_label(sp, pattern_not_covered_label(&witnesses, &joined_patterns));\n@@ -766,6 +782,7 @@ fn lint_non_exhaustive_omitted_patterns<'p, 'tcx>(\n         ));\n         lint\n     });\n+    */\n }\n \n /// Algorithm from <http://moscova.inria.fr/~maranget/papers/warn/index.html>."}]}