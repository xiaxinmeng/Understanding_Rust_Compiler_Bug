{"sha": "98eb4ddbceb5bed5e83a9b5e91c173b190532333", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZWI0ZGRiY2ViNWJlZDVlODNhOWI1ZTkxYzE3M2IxOTA1MzIzMzM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-02-22T21:54:30Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-02-22T21:54:30Z"}, "message": "Fix parsing of extern paths in types and poly-traits", "tree": {"sha": "d1a2e6456b3594daed116e1f625c9fc01cef2f5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1a2e6456b3594daed116e1f625c9fc01cef2f5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98eb4ddbceb5bed5e83a9b5e91c173b190532333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98eb4ddbceb5bed5e83a9b5e91c173b190532333", "html_url": "https://github.com/rust-lang/rust/commit/98eb4ddbceb5bed5e83a9b5e91c173b190532333", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98eb4ddbceb5bed5e83a9b5e91c173b190532333/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "html_url": "https://github.com/rust-lang/rust/commit/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "058d6ab0762f7c2ab964ab9492b156aea7fa91e4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98eb4ddbceb5bed5e83a9b5e91c173b190532333/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eb4ddbceb5bed5e83a9b5e91c173b190532333/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=98eb4ddbceb5bed5e83a9b5e91c173b190532333", "patch": "@@ -1321,7 +1321,7 @@ impl<'a> Parser<'a> {\n     pub fn token_is_bare_fn_keyword(&mut self) -> bool {\n         self.check_keyword(keywords::Fn) ||\n             self.check_keyword(keywords::Unsafe) ||\n-            self.check_keyword(keywords::Extern)\n+            self.check_keyword(keywords::Extern) && self.is_extern_non_path()\n     }\n \n     fn eat_label(&mut self) -> Option<Label> {"}, {"sha": "a5214d796cd6253291f9b66867517bc029c6a518", "filename": "src/test/run-pass/rfc-2126-extern-absolute-paths/auxiliary/xcrate.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98eb4ddbceb5bed5e83a9b5e91c173b190532333/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fauxiliary%2Fxcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eb4ddbceb5bed5e83a9b5e91c173b190532333/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fauxiliary%2Fxcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fauxiliary%2Fxcrate.rs?ref=98eb4ddbceb5bed5e83a9b5e91c173b190532333", "patch": "@@ -8,8 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq)]\n pub struct S;\n \n #[derive(Debug)]\n pub struct Z;\n+\n+pub trait Tr<'a> {}"}, {"sha": "15b754e1fe6b2ae500fe83289ec2b299421c9c3e", "filename": "src/test/run-pass/rfc-2126-extern-absolute-paths/extern.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98eb4ddbceb5bed5e83a9b5e91c173b190532333/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fextern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eb4ddbceb5bed5e83a9b5e91c173b190532333/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fextern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fextern.rs?ref=98eb4ddbceb5bed5e83a9b5e91c173b190532333", "patch": "@@ -14,6 +14,9 @@\n \n use extern::xcrate::Z;\n \n+type A = extern::xcrate::S;\n+type B = for<'a> extern::xcrate::Tr<'a>;\n+\n fn f() {\n     use extern::xcrate;\n     use extern::xcrate as ycrate;\n@@ -28,4 +31,5 @@ fn main() {\n     assert_eq!(format!(\"{:?}\", s), \"S\");\n     let z = Z;\n     assert_eq!(format!(\"{:?}\", z), \"Z\");\n+    assert_eq!(A {}, extern::xcrate::S {});\n }"}]}