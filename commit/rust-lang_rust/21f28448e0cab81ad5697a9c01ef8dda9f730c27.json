{"sha": "21f28448e0cab81ad5697a9c01ef8dda9f730c27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZjI4NDQ4ZTBjYWI4MWFkNTY5N2E5YzAxZWY4ZGRhOWY3MzBjMjc=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-23T02:22:43Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-27T04:05:02Z"}, "message": "Add `to_symbol` methods.", "tree": {"sha": "32f643d7312d34e18da1188b8940fafde71f56a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32f643d7312d34e18da1188b8940fafde71f56a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21f28448e0cab81ad5697a9c01ef8dda9f730c27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21f28448e0cab81ad5697a9c01ef8dda9f730c27", "html_url": "https://github.com/rust-lang/rust/commit/21f28448e0cab81ad5697a9c01ef8dda9f730c27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21f28448e0cab81ad5697a9c01ef8dda9f730c27/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c7d28d4fdd95bcd6062fb82a2dd2f280bda3e72", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c7d28d4fdd95bcd6062fb82a2dd2f280bda3e72", "html_url": "https://github.com/rust-lang/rust/commit/9c7d28d4fdd95bcd6062fb82a2dd2f280bda3e72"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "d5e2969e9649a59fb36efba127c8c5181d64da84", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21f28448e0cab81ad5697a9c01ef8dda9f730c27/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/21f28448e0cab81ad5697a9c01ef8dda9f730c27/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=21f28448e0cab81ad5697a9c01ef8dda9f730c27", "patch": "@@ -3009,6 +3009,7 @@ dependencies = [\n  \"rustc_cratesio_shim 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"serialize 0.0.0\",\n+ \"syntax_pos 0.0.0\",\n ]\n \n [[package]]"}, {"sha": "3ab25146331c15729d1b8dd1032a48a8f80769d2", "filename": "src/librustc_target/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibrustc_target%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibrustc_target%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FCargo.toml?ref=21f28448e0cab81ad5697a9c01ef8dda9f730c27", "patch": "@@ -15,3 +15,4 @@ log = \"0.4\"\n rustc_cratesio_shim = { path = \"../librustc_cratesio_shim\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n serialize = { path = \"../libserialize\" }\n+syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "8fc5e6aae34d4b8051ef89b9afa6ea25a52d7bc1", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=21f28448e0cab81ad5697a9c01ef8dda9f730c27", "patch": "@@ -7,6 +7,7 @@ use std::fmt;\n use std::ops::{Add, Deref, Sub, Mul, AddAssign, Range, RangeInclusive};\n \n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use syntax_pos::symbol::{sym, Symbol};\n \n pub mod call;\n \n@@ -552,6 +553,13 @@ impl FloatTy {\n         }\n     }\n \n+    pub fn to_symbol(self) -> Symbol {\n+        match self {\n+            FloatTy::F32 => sym::f32,\n+            FloatTy::F64 => sym::f64,\n+        }\n+    }\n+\n     pub fn bit_width(self) -> usize {\n         match self {\n             FloatTy::F32 => 32,"}, {"sha": "75e83bd9f9c74db2f0b606452781f3e389da361e", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=21f28448e0cab81ad5697a9c01ef8dda9f730c27", "patch": "@@ -10,7 +10,7 @@ use crate::parse::token;\n use crate::print::pprust;\n use crate::ptr::P;\n use crate::source_map::{dummy_spanned, respan, Spanned};\n-use crate::symbol::{kw, Symbol};\n+use crate::symbol::{kw, sym, Symbol};\n use crate::tokenstream::TokenStream;\n use crate::ThinVec;\n \n@@ -1531,6 +1531,17 @@ impl IntTy {\n         }\n     }\n \n+    pub fn to_symbol(&self) -> Symbol {\n+        match *self {\n+            IntTy::Isize => sym::isize,\n+            IntTy::I8 => sym::i8,\n+            IntTy::I16 => sym::i16,\n+            IntTy::I32 => sym::i32,\n+            IntTy::I64 => sym::i64,\n+            IntTy::I128 => sym::i128,\n+        }\n+    }\n+\n     pub fn val_to_string(&self, val: i128) -> String {\n         // Cast to a `u128` so we can correctly print `INT128_MIN`. All integral types\n         // are parsed as `u128`, so we wouldn't want to print an extra negative\n@@ -1572,6 +1583,17 @@ impl UintTy {\n         }\n     }\n \n+    pub fn to_symbol(&self) -> Symbol {\n+        match *self {\n+            UintTy::Usize => sym::usize,\n+            UintTy::U8 => sym::u8,\n+            UintTy::U16 => sym::u16,\n+            UintTy::U32 => sym::u32,\n+            UintTy::U64 => sym::u64,\n+            UintTy::U128 => sym::u128,\n+        }\n+    }\n+\n     pub fn val_to_string(&self, val: u128) -> String {\n         format!(\"{}{}\", val, self.ty_to_string())\n     }"}, {"sha": "58573093127c9ae2d9663f470ffe03a46cfe79aa", "filename": "src/libsyntax/parse/literal.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibsyntax%2Fparse%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21f28448e0cab81ad5697a9c01ef8dda9f730c27/src%2Flibsyntax%2Fparse%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fliteral.rs?ref=21f28448e0cab81ad5697a9c01ef8dda9f730c27", "patch": "@@ -193,14 +193,14 @@ impl LitKind {\n             }\n             LitKind::Int(n, ty) => {\n                 let suffix = match ty {\n-                    ast::LitIntType::Unsigned(ty) => Some(Symbol::intern(ty.ty_to_string())),\n-                    ast::LitIntType::Signed(ty) => Some(Symbol::intern(ty.ty_to_string())),\n+                    ast::LitIntType::Unsigned(ty) => Some(ty.to_symbol()),\n+                    ast::LitIntType::Signed(ty) => Some(ty.to_symbol()),\n                     ast::LitIntType::Unsuffixed => None,\n                 };\n                 (token::Integer, sym::integer(n), suffix)\n             }\n             LitKind::Float(symbol, ty) => {\n-                (token::Float, symbol, Some(Symbol::intern(ty.ty_to_string())))\n+                (token::Float, symbol, Some(ty.to_symbol()))\n             }\n             LitKind::FloatUnsuffixed(symbol) => {\n                 (token::Float, symbol, None)"}]}