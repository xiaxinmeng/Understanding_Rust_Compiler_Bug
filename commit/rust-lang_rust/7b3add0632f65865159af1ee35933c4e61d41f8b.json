{"sha": "7b3add0632f65865159af1ee35933c4e61d41f8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiM2FkZDA2MzJmNjU4NjUxNTlhZjFlZTM1OTMzYzRlNjFkNDFmOGI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-05T23:55:01Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-05T23:56:09Z"}, "message": "make disallow_kill an int for nested unkillables (closes #2782)", "tree": {"sha": "1688463a649a5c405e4579368b97287d5a2e21a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1688463a649a5c405e4579368b97287d5a2e21a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b3add0632f65865159af1ee35933c4e61d41f8b", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3add0632f65865159af1ee35933c4e61d41f8b", "html_url": "https://github.com/rust-lang/rust/commit/7b3add0632f65865159af1ee35933c4e61d41f8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b3add0632f65865159af1ee35933c4e61d41f8b/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f56d740726d296b5658173a43c02a681879374a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f56d740726d296b5658173a43c02a681879374a", "html_url": "https://github.com/rust-lang/rust/commit/7f56d740726d296b5658173a43c02a681879374a"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "c66f094eec060a090d747bc40286540460392783", "filename": "src/libcore/dlist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b3add0632f65865159af1ee35933c4e61d41f8b/src%2Flibcore%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b3add0632f65865159af1ee35933c4e61d41f8b/src%2Flibcore%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdlist.rs?ref=7b3add0632f65865159af1ee35933c4e61d41f8b", "patch": "@@ -609,7 +609,7 @@ mod tests {\n     #[test] #[should_fail] #[ignore(cfg(windows))]\n     fn test_asymmetric_link() {\n         let l = create::<int>();\n-        let one = l.push_n(1);\n+        let _one = l.push_n(1);\n         let two = l.push_n(2);\n         two.prev = none;\n         l.assert_consistent();"}, {"sha": "d7d43bcd27d2b9e49ab95af9220d88727c028ef5", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7b3add0632f65865159af1ee35933c4e61d41f8b/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7b3add0632f65865159af1ee35933c4e61d41f8b/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=7b3add0632f65865159af1ee35933c4e61d41f8b", "patch": "@@ -38,7 +38,7 @@ rust_task::rust_task(rust_sched_loop *sched_loop, rust_task_state state,\n     cond_name(\"none\"),\n     killed(false),\n     reentered_rust_stack(false),\n-    disallow_kill(false),\n+    disallow_kill(0),\n     c_stack(NULL),\n     next_c_sp(0),\n     next_rust_sp(0),\n@@ -237,7 +237,7 @@ rust_task::must_fail_from_being_killed() {\n bool\n rust_task::must_fail_from_being_killed_unlocked() {\n     kill_lock.must_have_lock();\n-    return killed && !reentered_rust_stack && !disallow_kill;\n+    return killed && !reentered_rust_stack && disallow_kill == 0;\n }\n \n // Only run this on the rust stack\n@@ -683,13 +683,14 @@ rust_task::on_rust_stack() {\n void\n rust_task::inhibit_kill() {\n     scoped_lock with(kill_lock);\n-    disallow_kill = true;\n+    disallow_kill++;\n }\n \n void\n rust_task::allow_kill() {\n     scoped_lock with(kill_lock);\n-    disallow_kill = false;\n+    assert(disallow_kill > 0 && \"Illegal allow_kill(): already killable!\");\n+    disallow_kill--;\n }\n \n //"}, {"sha": "96b0bddd4e06fdd0eab94ff71af42632684f86a9", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b3add0632f65865159af1ee35933c4e61d41f8b/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/7b3add0632f65865159af1ee35933c4e61d41f8b/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=7b3add0632f65865159af1ee35933c4e61d41f8b", "patch": "@@ -181,7 +181,7 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     bool killed;\n     // Indicates that we've called back into Rust from C\n     bool reentered_rust_stack;\n-    bool disallow_kill;\n+    int disallow_kill;\n \n     // The stack used for running C code, borrowed from the scheduler thread\n     stk_seg *c_stack;"}]}