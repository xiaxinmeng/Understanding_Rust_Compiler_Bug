{"sha": "277d42f589966f105cb4cba8da0b80c64fa7d28b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3N2Q0MmY1ODk5NjZmMTA1Y2I0Y2JhOGRhMGI4MGM2NGZhN2QyOGI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-20T00:33:46Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-20T00:33:46Z"}, "message": "rustc: Only declare each native function once. std.rc now links.", "tree": {"sha": "ba11f2e807afeb18aa355b93031e3f06fe77613f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba11f2e807afeb18aa355b93031e3f06fe77613f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/277d42f589966f105cb4cba8da0b80c64fa7d28b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/277d42f589966f105cb4cba8da0b80c64fa7d28b", "html_url": "https://github.com/rust-lang/rust/commit/277d42f589966f105cb4cba8da0b80c64fa7d28b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/277d42f589966f105cb4cba8da0b80c64fa7d28b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1aad2869061b9ecf9d22f93c2d42e9dbe550d17", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1aad2869061b9ecf9d22f93c2d42e9dbe550d17", "html_url": "https://github.com/rust-lang/rust/commit/a1aad2869061b9ecf9d22f93c2d42e9dbe550d17"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "50ce6716115474e313e3e6fb8390be97c4c6cace", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/277d42f589966f105cb4cba8da0b80c64fa7d28b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277d42f589966f105cb4cba8da0b80c64fa7d28b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=277d42f589966f105cb4cba8da0b80c64fa7d28b", "patch": "@@ -71,6 +71,7 @@ state type crate_ctxt = rec(session.session sess,\n                             hashmap[str, ValueRef] upcalls,\n                             hashmap[str, ValueRef] intrinsics,\n                             hashmap[str, ValueRef] item_names,\n+                            hashmap[str, ValueRef] native_fns,\n                             hashmap[ast.def_id, ValueRef] item_ids,\n                             hashmap[ast.def_id, @ast.item] items,\n                             hashmap[ast.def_id,\n@@ -5452,7 +5453,19 @@ fn decl_native_fn_and_pair(@crate_ctxt cx,\n     auto abi = ty.ty_fn_abi(fn_type);\n     auto llfnty = type_of_native_fn(cx, abi, ty.ty_fn_args(fn_type),\n                                     ty.ty_fn_ret(fn_type), num_ty_param);\n-    auto function = decl_cdecl_fn(cx.llmod, name, llfnty);\n+\n+    // We can only declare a native function with a given name once; LLVM\n+    // unhelpfully mangles the names if we try to multiply declare one.\n+    auto function;\n+    if (!cx.native_fns.contains_key(name)) {\n+        function = decl_cdecl_fn(cx.llmod, name, llfnty);\n+        cx.native_fns.insert(name, function);\n+    } else {\n+        // We support type-punning a native function by giving it different\n+        // Rust types.\n+        auto llorigfn = cx.native_fns.get(name);\n+        function = bcx.build.PointerCast(llorigfn, T_ptr(llfnty));\n+    }\n \n     let vec[ValueRef] call_args = vec();\n     auto arg_n = 3u;\n@@ -6200,6 +6213,7 @@ fn trans_crate(session.session sess, @ast.crate crate, str output,\n                    upcalls = new_str_hash[ValueRef](),\n                    intrinsics = intrinsics,\n                    item_names = new_str_hash[ValueRef](),\n+                   native_fns = new_str_hash[ValueRef](),\n                    item_ids = new_def_hash[ValueRef](),\n                    items = new_def_hash[@ast.item](),\n                    native_items = new_def_hash[@ast.native_item](),"}]}