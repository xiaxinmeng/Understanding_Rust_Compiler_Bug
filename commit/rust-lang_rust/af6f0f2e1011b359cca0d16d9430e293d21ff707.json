{"sha": "af6f0f2e1011b359cca0d16d9430e293d21ff707", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNmYwZjJlMTAxMWIzNTljY2EwZDE2ZDk0MzBlMjkzZDIxZmY3MDc=", "commit": {"author": {"name": "Fabian K\u00f6ssel", "email": "fkjogu@users.noreply.github.com", "date": "2018-04-30T14:06:53Z"}, "committer": {"name": "Fabian K\u00f6ssel", "email": "fkjogu@users.noreply.github.com", "date": "2018-06-26T11:09:55Z"}, "message": "Document round-off error in `.mod_euc()`-method, see issue #50179", "tree": {"sha": "433f635892940bacd7a0ce1d2056e67549056cad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/433f635892940bacd7a0ce1d2056e67549056cad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af6f0f2e1011b359cca0d16d9430e293d21ff707", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af6f0f2e1011b359cca0d16d9430e293d21ff707", "html_url": "https://github.com/rust-lang/rust/commit/af6f0f2e1011b359cca0d16d9430e293d21ff707", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af6f0f2e1011b359cca0d16d9430e293d21ff707/comments", "author": null, "committer": null, "parents": [{"sha": "773ce53ce7b3acb97cfbd3d189dc3fbf33ec05c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/773ce53ce7b3acb97cfbd3d189dc3fbf33ec05c6", "html_url": "https://github.com/rust-lang/rust/commit/773ce53ce7b3acb97cfbd3d189dc3fbf33ec05c6"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "242046702298aa5cb62e1314446dd046714cf178", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/af6f0f2e1011b359cca0d16d9430e293d21ff707/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af6f0f2e1011b359cca0d16d9430e293d21ff707/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=af6f0f2e1011b359cca0d16d9430e293d21ff707", "patch": "@@ -254,7 +254,10 @@ impl f32 {\n \n     /// Calculates the Euclidean modulo (self mod rhs), which is never negative.\n     ///\n-    /// In particular, the result `n` satisfies `0 <= n < rhs.abs()`.\n+    /// In particular, the return value `r` satisfies `0.0 <= r < rhs.abs()` in\n+    /// most cases. However, due to a floating point round-off error it can\n+    /// result in `r == rhs.abs()`, violating the mathematical definition, if\n+    /// `self` is much smaller than `rhs.abs()` in magnitude and `self < 0.0`.\n     ///\n     /// # Examples\n     ///\n@@ -266,6 +269,8 @@ impl f32 {\n     /// assert_eq!((-a).mod_euc(b), 1.0);\n     /// assert_eq!(a.mod_euc(-b), 3.0);\n     /// assert_eq!((-a).mod_euc(-b), 1.0);\n+    /// // limitation due to round-off error\n+    /// assert!((-std::f32::EPSILON).mod_euc(3.0) != 0.0);\n     /// ```\n     #[inline]\n     #[unstable(feature = \"euclidean_division\", issue = \"49048\")]"}, {"sha": "bd7ef2eb1a4ff81cf8dcf2a8dbf80a4b2028a7b7", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/af6f0f2e1011b359cca0d16d9430e293d21ff707/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af6f0f2e1011b359cca0d16d9430e293d21ff707/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=af6f0f2e1011b359cca0d16d9430e293d21ff707", "patch": "@@ -230,7 +230,10 @@ impl f64 {\n \n     /// Calculates the Euclidean modulo (self mod rhs), which is never negative.\n     ///\n-    /// In particular, the result `n` satisfies `0 <= n < rhs.abs()`.\n+    /// In particular, the return value `r` satisfies `0.0 <= r < rhs.abs()` in\n+    /// most cases.  However, due to a floating point round-off error it can\n+    /// result in `r == rhs.abs()`, violating the mathematical definition, if\n+    /// `self` is much smaller than `rhs.abs()` in magnitude and `self < 0.0`.\n     ///\n     /// # Examples\n     ///\n@@ -242,6 +245,8 @@ impl f64 {\n     /// assert_eq!((-a).mod_euc(b), 1.0);\n     /// assert_eq!(a.mod_euc(-b), 3.0);\n     /// assert_eq!((-a).mod_euc(-b), 1.0);\n+    /// // limitation due to round-off error\n+    /// assert!((-std::f64::EPSILON).mod_euc(3.0) != 0.0);\n     /// ```\n     #[inline]\n     #[unstable(feature = \"euclidean_division\", issue = \"49048\")]"}]}