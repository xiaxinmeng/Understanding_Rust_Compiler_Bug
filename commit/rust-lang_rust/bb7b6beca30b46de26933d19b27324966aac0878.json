{"sha": "bb7b6beca30b46de26933d19b27324966aac0878", "node_id": "C_kwDOAAsO6NoAKGJiN2I2YmVjYTMwYjQ2ZGUyNjkzM2QxOWIyNzMyNDk2NmFhYzA4Nzg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-26T14:05:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-26T14:05:35Z"}, "message": "Auto merge of #8133 - surechen:fix_8128, r=xFrednet\n\nFix 8128\n\nFixes #8128\n\nchangelog: Fix  error suggestion of `skip(..).next()` for immutable variable.", "tree": {"sha": "6fa76e4b35d692c980efaeab092dbe7b806b11d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fa76e4b35d692c980efaeab092dbe7b806b11d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb7b6beca30b46de26933d19b27324966aac0878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7b6beca30b46de26933d19b27324966aac0878", "html_url": "https://github.com/rust-lang/rust/commit/bb7b6beca30b46de26933d19b27324966aac0878", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb7b6beca30b46de26933d19b27324966aac0878/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547efad9454123b5d37e627eb8643666aa3ddf3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/547efad9454123b5d37e627eb8643666aa3ddf3b", "html_url": "https://github.com/rust-lang/rust/commit/547efad9454123b5d37e627eb8643666aa3ddf3b"}, {"sha": "4ffd66074a462b30d15da8d40cc0f356dd43bb1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ffd66074a462b30d15da8d40cc0f356dd43bb1c", "html_url": "https://github.com/rust-lang/rust/commit/4ffd66074a462b30d15da8d40cc0f356dd43bb1c"}], "stats": {"total": 148, "additions": 138, "deletions": 10}, "files": [{"sha": "f5410c7fd7fc808cab894f0ba762cc20919d3a72", "filename": "clippy_lints/src/methods/iter_skip_next.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b6beca30b46de26933d19b27324966aac0878/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b6beca30b46de26933d19b27324966aac0878/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs?ref=bb7b6beca30b46de26933d19b27324966aac0878", "patch": "@@ -1,8 +1,10 @@\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::is_trait_method;\n+use clippy_utils::path_to_local;\n use clippy_utils::source::snippet;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n+use rustc_hir::{BindingAnnotation, Node, PatKind};\n use rustc_lint::LateContext;\n use rustc_span::sym;\n \n@@ -11,14 +13,34 @@ use super::ITER_SKIP_NEXT;\n pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, recv: &hir::Expr<'_>, arg: &hir::Expr<'_>) {\n     // lint if caller of skip is an Iterator\n     if is_trait_method(cx, expr, sym::Iterator) {\n-        span_lint_and_sugg(\n+        let mut application = Applicability::MachineApplicable;\n+        span_lint_and_then(\n             cx,\n             ITER_SKIP_NEXT,\n             expr.span.trim_start(recv.span).unwrap(),\n             \"called `skip(..).next()` on an iterator\",\n-            \"use `nth` instead\",\n-            format!(\".nth({})\", snippet(cx, arg.span, \"..\")),\n-            Applicability::MachineApplicable,\n+            |diag| {\n+                if_chain! {\n+                    if let Some(id) = path_to_local(recv);\n+                    if let Node::Binding(pat) = cx.tcx.hir().get(id);\n+                    if let PatKind::Binding(ann, _, _, _)  = pat.kind;\n+                    if ann != BindingAnnotation::Mutable;\n+                    then {\n+                        application = Applicability::Unspecified;\n+                        diag.span_help(\n+                            pat.span,\n+                            &format!(\"for this change `{}` has to be mutable\", snippet(cx, pat.span, \"..\")),\n+                        );\n+                    }\n+                }\n+\n+                diag.span_suggestion(\n+                    expr.span.trim_start(recv.span).unwrap(),\n+                    \"use `nth` instead\",\n+                    format!(\".nth({})\", snippet(cx, arg.span, \"..\")),\n+                    application,\n+                );\n+            },\n         );\n     }\n }"}, {"sha": "2db4c2bee7f2bc62db61af4877891a091dcba504", "filename": "tests/ui/iter_skip_next.fixed", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.fixed?ref=bb7b6beca30b46de26933d19b27324966aac0878", "patch": "@@ -4,6 +4,7 @@\n #![warn(clippy::iter_skip_next)]\n #![allow(clippy::blacklisted_name)]\n #![allow(clippy::iter_nth)]\n+#![allow(unused_mut, dead_code)]\n \n extern crate option_helpers;\n \n@@ -19,4 +20,18 @@ fn main() {\n     let foo = IteratorFalsePositives { foo: 0 };\n     let _ = foo.skip(42).next();\n     let _ = foo.filter().skip(42).next();\n+\n+    // fix #8128\n+    let test_string = \"1|1 2\";\n+    let mut sp = test_string.split('|').map(|s| s.trim());\n+    let _: Vec<&str> = sp.nth(1).unwrap().split(' ').collect();\n+    if let Some(mut s) = Some(test_string.split('|').map(|s| s.trim())) {\n+        let _: Vec<&str> = s.nth(1).unwrap().split(' ').collect();\n+    };\n+    fn check<T>(mut s: T)\n+    where\n+        T: Iterator<Item = String>,\n+    {\n+        let _: Vec<&str> = s.nth(1).unwrap().split(' ').collect();\n+    }\n }"}, {"sha": "692edb9aed9396386c1a04cc1e97d6725e337871", "filename": "tests/ui/iter_skip_next.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.rs?ref=bb7b6beca30b46de26933d19b27324966aac0878", "patch": "@@ -4,6 +4,7 @@\n #![warn(clippy::iter_skip_next)]\n #![allow(clippy::blacklisted_name)]\n #![allow(clippy::iter_nth)]\n+#![allow(unused_mut, dead_code)]\n \n extern crate option_helpers;\n \n@@ -19,4 +20,18 @@ fn main() {\n     let foo = IteratorFalsePositives { foo: 0 };\n     let _ = foo.skip(42).next();\n     let _ = foo.filter().skip(42).next();\n+\n+    // fix #8128\n+    let test_string = \"1|1 2\";\n+    let mut sp = test_string.split('|').map(|s| s.trim());\n+    let _: Vec<&str> = sp.skip(1).next().unwrap().split(' ').collect();\n+    if let Some(mut s) = Some(test_string.split('|').map(|s| s.trim())) {\n+        let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+    };\n+    fn check<T>(mut s: T)\n+    where\n+        T: Iterator<Item = String>,\n+    {\n+        let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+    }\n }"}, {"sha": "ca6970b27f16c50fdff4e834cf08d55840ccf8c3", "filename": "tests/ui/iter_skip_next.stderr", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.stderr?ref=bb7b6beca30b46de26933d19b27324966aac0878", "patch": "@@ -1,28 +1,46 @@\n error: called `skip(..).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:15:28\n+  --> $DIR/iter_skip_next.rs:16:28\n    |\n LL |     let _ = some_vec.iter().skip(42).next();\n    |                            ^^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(42)`\n    |\n    = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n \n error: called `skip(..).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:16:36\n+  --> $DIR/iter_skip_next.rs:17:36\n    |\n LL |     let _ = some_vec.iter().cycle().skip(42).next();\n    |                                    ^^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(42)`\n \n error: called `skip(..).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:17:20\n+  --> $DIR/iter_skip_next.rs:18:20\n    |\n LL |     let _ = (1..10).skip(10).next();\n    |                    ^^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(10)`\n \n error: called `skip(..).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:18:33\n+  --> $DIR/iter_skip_next.rs:19:33\n    |\n LL |     let _ = &some_vec[..].iter().skip(3).next();\n    |                                 ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(3)`\n \n-error: aborting due to 4 previous errors\n+error: called `skip(..).next()` on an iterator\n+  --> $DIR/iter_skip_next.rs:27:26\n+   |\n+LL |     let _: Vec<&str> = sp.skip(1).next().unwrap().split(' ').collect();\n+   |                          ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(1)`\n+\n+error: called `skip(..).next()` on an iterator\n+  --> $DIR/iter_skip_next.rs:29:29\n+   |\n+LL |         let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+   |                             ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(1)`\n+\n+error: called `skip(..).next()` on an iterator\n+  --> $DIR/iter_skip_next.rs:35:29\n+   |\n+LL |         let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+   |                             ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(1)`\n+\n+error: aborting due to 7 previous errors\n "}, {"sha": "3607330cfa0d370149a80375b2f0f6cc041c0d88", "filename": "tests/ui/iter_skip_next_unfixable.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next_unfixable.rs?ref=bb7b6beca30b46de26933d19b27324966aac0878", "patch": "@@ -0,0 +1,19 @@\n+#![warn(clippy::iter_skip_next)]\n+#![allow(dead_code)]\n+\n+/// Checks implementation of `ITER_SKIP_NEXT` lint\n+fn main() {\n+    // fix #8128\n+    let test_string = \"1|1 2\";\n+    let sp = test_string.split('|').map(|s| s.trim());\n+    let _: Vec<&str> = sp.skip(1).next().unwrap().split(' ').collect();\n+    if let Some(s) = Some(test_string.split('|').map(|s| s.trim())) {\n+        let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+    };\n+    fn check<T>(s: T)\n+    where\n+        T: Iterator<Item = String>,\n+    {\n+        let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+    }\n+}"}, {"sha": "74c327c748361df3feb10de6718e1b0fecfcbaf1", "filename": "tests/ui/iter_skip_next_unfixable.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b6beca30b46de26933d19b27324966aac0878/tests%2Fui%2Fiter_skip_next_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next_unfixable.stderr?ref=bb7b6beca30b46de26933d19b27324966aac0878", "patch": "@@ -0,0 +1,39 @@\n+error: called `skip(..).next()` on an iterator\n+  --> $DIR/iter_skip_next_unfixable.rs:9:26\n+   |\n+LL |     let _: Vec<&str> = sp.skip(1).next().unwrap().split(' ').collect();\n+   |                          ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(1)`\n+   |\n+   = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n+help: for this change `sp` has to be mutable\n+  --> $DIR/iter_skip_next_unfixable.rs:8:9\n+   |\n+LL |     let sp = test_string.split('|').map(|s| s.trim());\n+   |         ^^\n+\n+error: called `skip(..).next()` on an iterator\n+  --> $DIR/iter_skip_next_unfixable.rs:11:29\n+   |\n+LL |         let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+   |                             ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(1)`\n+   |\n+help: for this change `s` has to be mutable\n+  --> $DIR/iter_skip_next_unfixable.rs:10:17\n+   |\n+LL |     if let Some(s) = Some(test_string.split('|').map(|s| s.trim())) {\n+   |                 ^\n+\n+error: called `skip(..).next()` on an iterator\n+  --> $DIR/iter_skip_next_unfixable.rs:17:29\n+   |\n+LL |         let _: Vec<&str> = s.skip(1).next().unwrap().split(' ').collect();\n+   |                             ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(1)`\n+   |\n+help: for this change `s` has to be mutable\n+  --> $DIR/iter_skip_next_unfixable.rs:13:17\n+   |\n+LL |     fn check<T>(s: T)\n+   |                 ^\n+\n+error: aborting due to 3 previous errors\n+"}]}