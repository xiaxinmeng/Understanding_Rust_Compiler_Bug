{"sha": "2b2e4dda217b159553b903b117ed7aa66d9f3965", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMmU0ZGRhMjE3YjE1OTU1M2I5MDNiMTE3ZWQ3YWE2NmQ5ZjM5NjU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-10T23:10:46Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-14T04:52:28Z"}, "message": "Visit visibilities in the ast visitor's `walk_*` functions", "tree": {"sha": "9f0e2ad1b8456a7c177e8fbfd95f9546b412af69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f0e2ad1b8456a7c177e8fbfd95f9546b412af69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b2e4dda217b159553b903b117ed7aa66d9f3965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b2e4dda217b159553b903b117ed7aa66d9f3965", "html_url": "https://github.com/rust-lang/rust/commit/2b2e4dda217b159553b903b117ed7aa66d9f3965", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b2e4dda217b159553b903b117ed7aa66d9f3965/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b189e65c827e8b8f8c31234e5db29ed8e8df280", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b189e65c827e8b8f8c31234e5db29ed8e8df280", "html_url": "https://github.com/rust-lang/rust/commit/4b189e65c827e8b8f8c31234e5db29ed8e8df280"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "89451e795503f0c272b562f74af7201d95deca0f", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b2e4dda217b159553b903b117ed7aa66d9f3965/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b2e4dda217b159553b903b117ed7aa66d9f3965/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=2b2e4dda217b159553b903b117ed7aa66d9f3965", "patch": "@@ -850,7 +850,7 @@ pub fn noop_fold_struct_field<T: Folder>(f: StructField, fld: &mut T) -> StructF\n         span: fld.new_span(f.span),\n         id: fld.new_id(f.id),\n         ident: f.ident.map(|ident| fld.fold_ident(ident)),\n-        vis: f.vis,\n+        vis: fld.fold_vis(f.vis),\n         ty: fld.fold_ty(f.ty),\n         attrs: fold_attrs(f.attrs, fld),\n     }"}, {"sha": "413017c727177351559122a67881fa161695c2ee", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b2e4dda217b159553b903b117ed7aa66d9f3965/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b2e4dda217b159553b903b117ed7aa66d9f3965/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=2b2e4dda217b159553b903b117ed7aa66d9f3965", "patch": "@@ -231,6 +231,7 @@ pub fn walk_trait_ref<'v,V>(visitor: &mut V,\n }\n \n pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n+    visitor.visit_vis(&item.vis);\n     visitor.visit_ident(item.span, item.ident);\n     match item.node {\n         ItemKind::ExternCrate(opt_name) => {\n@@ -470,6 +471,7 @@ pub fn walk_pat<'v, V: Visitor<'v>>(visitor: &mut V, pattern: &'v Pat) {\n \n pub fn walk_foreign_item<'v, V: Visitor<'v>>(visitor: &mut V,\n                                              foreign_item: &'v ForeignItem) {\n+    visitor.visit_vis(&foreign_item.vis);\n     visitor.visit_ident(foreign_item.span, foreign_item.ident);\n \n     match foreign_item.node {\n@@ -592,6 +594,7 @@ pub fn walk_trait_item<'v, V: Visitor<'v>>(visitor: &mut V, trait_item: &'v Trai\n }\n \n pub fn walk_impl_item<'v, V: Visitor<'v>>(visitor: &mut V, impl_item: &'v ImplItem) {\n+    visitor.visit_vis(&impl_item.vis);\n     visitor.visit_ident(impl_item.span, impl_item.ident);\n     walk_list!(visitor, visit_attribute, &impl_item.attrs);\n     match impl_item.node {\n@@ -619,6 +622,7 @@ pub fn walk_struct_def<'v, V: Visitor<'v>>(visitor: &mut V,\n \n pub fn walk_struct_field<'v, V: Visitor<'v>>(visitor: &mut V,\n                                              struct_field: &'v StructField) {\n+    visitor.visit_vis(&struct_field.vis);\n     walk_opt_ident(visitor, struct_field.span, struct_field.ident);\n     visitor.visit_ty(&struct_field.ty);\n     walk_list!(visitor, visit_attribute, &struct_field.attrs);\n@@ -812,8 +816,7 @@ pub fn walk_arm<'v, V: Visitor<'v>>(visitor: &mut V, arm: &'v Arm) {\n }\n \n pub fn walk_vis<'v, V: Visitor<'v>>(visitor: &mut V, vis: &'v Visibility) {\n-    match *vis {\n-        Visibility::Restricted { ref path, id } => visitor.visit_path(path, id),\n-        _ => {}\n+    if let Visibility::Restricted { ref path, id } = *vis {\n+        visitor.visit_path(path, id);\n     }\n }"}]}