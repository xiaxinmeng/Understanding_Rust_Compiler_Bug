{"sha": "d8087cae442ba3ca5070c7f3865e798f3786d28c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MDg3Y2FlNDQyYmEzY2E1MDcwYzdmMzg2NWU3OThmMzc4NmQyOGM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-27T14:50:48Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-27T14:50:48Z"}, "message": "extra: silence some test warnings.", "tree": {"sha": "92fbc68e041d277f87acf53199468bb25607a99b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92fbc68e041d277f87acf53199468bb25607a99b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8087cae442ba3ca5070c7f3865e798f3786d28c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8087cae442ba3ca5070c7f3865e798f3786d28c", "html_url": "https://github.com/rust-lang/rust/commit/d8087cae442ba3ca5070c7f3865e798f3786d28c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8087cae442ba3ca5070c7f3865e798f3786d28c/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32d655916f1c3365a521616b57d9d0efc2bae643", "url": "https://api.github.com/repos/rust-lang/rust/commits/32d655916f1c3365a521616b57d9d0efc2bae643", "html_url": "https://github.com/rust-lang/rust/commit/32d655916f1c3365a521616b57d9d0efc2bae643"}], "stats": {"total": 65, "additions": 22, "deletions": 43}, "files": [{"sha": "c076b7f8fbe06284b976b3d29e80e1bfe6a9da19", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=d8087cae442ba3ca5070c7f3865e798f3786d28c", "patch": "@@ -517,7 +517,6 @@ mod tests {\n \n     use arc::*;\n \n-    use core::vec;\n     use core::cell::Cell;\n     use core::comm;\n     use core::task;"}, {"sha": "79ef5bf2b7eaf4a36f907a57123be788352bb986", "filename": "src/libextra/c_vec.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fc_vec.rs?ref=d8087cae442ba3ca5070c7f3865e798f3786d28c", "patch": "@@ -159,8 +159,7 @@ mod tests {\n \n             assert!(mem as int != 0);\n \n-            return c_vec_with_dtor(mem as *mut u8, n as uint,\n-                                   || unsafe { free(mem) });\n+            c_vec_with_dtor(mem as *mut u8, n as uint, || free(mem))\n         }\n     }\n "}, {"sha": "ee86340e47bed7e2ad974c762bbacb2d8b3ac2fa", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=d8087cae442ba3ca5070c7f3865e798f3786d28c", "patch": "@@ -526,8 +526,6 @@ mod tests {\n \n     use super::*;\n \n-    use core::vec;\n-\n     #[test]\n     fn test_dlist_concat() {\n         let a = from_vec([1,2]);"}, {"sha": "f3f6ffde6603ec9703ec0a60c83d41c111ad794d", "filename": "src/libextra/net_tcp.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnet_tcp.rs?ref=d8087cae442ba3ca5070c7f3865e798f3786d28c", "patch": "@@ -1457,33 +1457,23 @@ mod test {\n \n             #[test]\n             fn test_gl_tcp_server_and_client_ipv4() {\n-                unsafe {\n-                    impl_gl_tcp_ipv4_server_and_client();\n-                }\n+                impl_gl_tcp_ipv4_server_and_client();\n             }\n             #[test]\n             fn test_gl_tcp_get_peer_addr() {\n-                unsafe {\n-                    impl_gl_tcp_ipv4_get_peer_addr();\n-                }\n+                impl_gl_tcp_ipv4_get_peer_addr();\n             }\n             #[test]\n             fn test_gl_tcp_ipv4_client_error_connection_refused() {\n-                unsafe {\n-                    impl_gl_tcp_ipv4_client_error_connection_refused();\n-                }\n+                impl_gl_tcp_ipv4_client_error_connection_refused();\n             }\n             #[test]\n             fn test_gl_tcp_server_address_in_use() {\n-                unsafe {\n-                    impl_gl_tcp_ipv4_server_address_in_use();\n-                }\n+                impl_gl_tcp_ipv4_server_address_in_use();\n             }\n             #[test]\n             fn test_gl_tcp_server_access_denied() {\n-                unsafe {\n-                    impl_gl_tcp_ipv4_server_access_denied();\n-                }\n+                impl_gl_tcp_ipv4_server_access_denied();\n             }\n             // Strange failure on Windows. --pcwalton\n             #[test]"}, {"sha": "817e1ab12261057ab701735b28cf91505db4f745", "filename": "src/libextra/sync.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsync.rs?ref=d8087cae442ba3ca5070c7f3865e798f3786d28c", "patch": "@@ -808,7 +808,6 @@ mod tests {\n     use core::comm;\n     use core::result;\n     use core::task;\n-    use core::vec;\n \n     /************************************************************************\n      * Semaphore tests"}, {"sha": "f1dde1b8cb41dbceff1419cf827b3a1bfe82953f", "filename": "src/libextra/uv_global_loop.rs", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fuv_global_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fuv_global_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuv_global_loop.rs?ref=d8087cae442ba3ca5070c7f3865e798f3786d28c", "patch": "@@ -150,9 +150,7 @@ mod test {\n             let hl_loop = &get_gl();\n             do iotask::interact(hl_loop) |_loop_ptr| {\n                 debug!(~\"closing timer\");\n-                unsafe {\n-                    ll::close(timer_ptr, simple_timer_close_cb);\n-                }\n+                ll::close(timer_ptr, simple_timer_close_cb);\n                 debug!(~\"about to deref exit_ch_ptr\");\n                 debug!(~\"after msg sent on deref'd exit_ch\");\n             };\n@@ -169,24 +167,22 @@ mod test {\n             let timer_handle = ll::timer_t();\n             let timer_ptr: *ll::uv_timer_t = &timer_handle;\n             do iotask::interact(iotask) |loop_ptr| {\n-                unsafe {\n-                    debug!(~\"user code inside interact loop!!!\");\n-                    let init_status = ll::timer_init(loop_ptr, timer_ptr);\n-                    if(init_status == 0i32) {\n-                        ll::set_data_for_uv_handle(\n-                            timer_ptr as *libc::c_void,\n-                            exit_ch_ptr);\n-                        let start_status = ll::timer_start(timer_ptr,\n-                                                           simple_timer_cb,\n-                                                           1u, 0u);\n-                        if(start_status != 0i32) {\n-                            fail!(\"failure on ll::timer_start()\");\n-                        }\n-                    }\n-                    else {\n-                        fail!(\"failure on ll::timer_init()\");\n+                debug!(~\"user code inside interact loop!!!\");\n+                let init_status = ll::timer_init(loop_ptr, timer_ptr);\n+                if(init_status == 0i32) {\n+                    ll::set_data_for_uv_handle(\n+                        timer_ptr as *libc::c_void,\n+                        exit_ch_ptr);\n+                    let start_status = ll::timer_start(timer_ptr,\n+                                                       simple_timer_cb,\n+                                                       1u, 0u);\n+                    if(start_status != 0i32) {\n+                        fail!(\"failure on ll::timer_start()\");\n                     }\n                 }\n+                else {\n+                    fail!(\"failure on ll::timer_init()\");\n+                }\n             };\n             exit_po.recv();\n             debug!("}, {"sha": "58b477d4ccf46197149d8d69fb2fa2f945fcef91", "filename": "src/libextra/uv_ll.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8087cae442ba3ca5070c7f3865e798f3786d28c/src%2Flibextra%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuv_ll.rs?ref=d8087cae442ba3ca5070c7f3865e798f3786d28c", "patch": "@@ -1767,9 +1767,7 @@ mod test {\n         mod impl64 {\n             #[test]\n             fn test_uv_ll_tcp_server_and_request() {\n-                unsafe {\n-                    super::super::impl_uv_tcp_server_and_request();\n-                }\n+                super::super::impl_uv_tcp_server_and_request();\n             }\n         }\n         #[cfg(target_arch=\"x86\")]"}]}