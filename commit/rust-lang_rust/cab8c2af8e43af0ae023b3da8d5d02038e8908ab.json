{"sha": "cab8c2af8e43af0ae023b3da8d5d02038e8908ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYjhjMmFmOGU0M2FmMGFlMDIzYjNkYThkNWQwMjAzOGU4OTA4YWI=", "commit": {"author": {"name": "Benjamin Herr", "email": "ben@0x539.de", "date": "2016-02-08T13:48:12Z"}, "committer": {"name": "Benjamin Herr", "email": "ben@0x539.de", "date": "2016-02-08T13:48:12Z"}, "message": "std: `_lock` -> `_guard` in Mutex example\n\nThe comment in the next line was already talking about `_guard`, and the\nscope guard a couple lines further down is also called `guard`, so I\nassume that was just a typo.", "tree": {"sha": "a60b74f797d2e7142589faac73382044ce749892", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a60b74f797d2e7142589faac73382044ce749892"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cab8c2af8e43af0ae023b3da8d5d02038e8908ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cab8c2af8e43af0ae023b3da8d5d02038e8908ab", "html_url": "https://github.com/rust-lang/rust/commit/cab8c2af8e43af0ae023b3da8d5d02038e8908ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cab8c2af8e43af0ae023b3da8d5d02038e8908ab/comments", "author": {"login": "ben0x539", "id": 24142, "node_id": "MDQ6VXNlcjI0MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/24142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben0x539", "html_url": "https://github.com/ben0x539", "followers_url": "https://api.github.com/users/ben0x539/followers", "following_url": "https://api.github.com/users/ben0x539/following{/other_user}", "gists_url": "https://api.github.com/users/ben0x539/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben0x539/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben0x539/subscriptions", "organizations_url": "https://api.github.com/users/ben0x539/orgs", "repos_url": "https://api.github.com/users/ben0x539/repos", "events_url": "https://api.github.com/users/ben0x539/events{/privacy}", "received_events_url": "https://api.github.com/users/ben0x539/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ben0x539", "id": 24142, "node_id": "MDQ6VXNlcjI0MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/24142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben0x539", "html_url": "https://github.com/ben0x539", "followers_url": "https://api.github.com/users/ben0x539/followers", "following_url": "https://api.github.com/users/ben0x539/following{/other_user}", "gists_url": "https://api.github.com/users/ben0x539/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben0x539/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben0x539/subscriptions", "organizations_url": "https://api.github.com/users/ben0x539/orgs", "repos_url": "https://api.github.com/users/ben0x539/repos", "events_url": "https://api.github.com/users/ben0x539/events{/privacy}", "received_events_url": "https://api.github.com/users/ben0x539/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06f6928cb840a018706cabf75ab2bf3807551b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06f6928cb840a018706cabf75ab2bf3807551b1", "html_url": "https://github.com/rust-lang/rust/commit/e06f6928cb840a018706cabf75ab2bf3807551b1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "34c9c7cf1e9e44c734e148ba7b47dc65e2ba61c5", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cab8c2af8e43af0ae023b3da8d5d02038e8908ab/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab8c2af8e43af0ae023b3da8d5d02038e8908ab/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=cab8c2af8e43af0ae023b3da8d5d02038e8908ab", "patch": "@@ -96,7 +96,7 @@ use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n /// let _ = thread::spawn(move || -> () {\n ///     // This thread will acquire the mutex first, unwrapping the result of\n ///     // `lock` because the lock has not been poisoned.\n-///     let _lock = lock2.lock().unwrap();\n+///     let _guard = lock2.lock().unwrap();\n ///\n ///     // This panic while holding the lock (`_guard` is in scope) will poison\n ///     // the mutex."}]}