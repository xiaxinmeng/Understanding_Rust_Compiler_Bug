{"sha": "4b68c965feec8ce0e86d0b396baca5e33c3cf0af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNjhjOTY1ZmVlYzhjZTBlODZkMGIzOTZiYWNhNWUzM2MzY2YwYWY=", "commit": {"author": {"name": "Joshua Holmer", "email": "jholmer@dminc.com", "date": "2018-10-17T14:43:32Z"}, "committer": {"name": "Joshua Holmer", "email": "jholmer@dminc.com", "date": "2018-10-17T14:43:32Z"}, "message": "Resolve ICE in needless range loop lint\n\nAn ICE would occur if the needless range loop was triggered\nwithin a procedural macro, because Clippy would try to produce\na code suggestion which was invalid, and caused the compiler\nto crash.\n\nThis commit takes the same approach which Clippy currently takes\nto work around this type of crash in the needless pass by value lint,\nwhich is to skip the lint if Clippy is inside of a macro.", "tree": {"sha": "956be266761be3da344ce9b2bc9a28a2b157ad6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/956be266761be3da344ce9b2bc9a28a2b157ad6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b68c965feec8ce0e86d0b396baca5e33c3cf0af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b68c965feec8ce0e86d0b396baca5e33c3cf0af", "html_url": "https://github.com/rust-lang/rust/commit/4b68c965feec8ce0e86d0b396baca5e33c3cf0af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b68c965feec8ce0e86d0b396baca5e33c3cf0af/comments", "author": null, "committer": null, "parents": [{"sha": "6ae89c4f1123d81e56141b02cd3b83436c1ad035", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ae89c4f1123d81e56141b02cd3b83436c1ad035", "html_url": "https://github.com/rust-lang/rust/commit/6ae89c4f1123d81e56141b02cd3b83436c1ad035"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "950c1043802cc6896da5a587b6dd235399070ca1", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b68c965feec8ce0e86d0b396baca5e33c3cf0af/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b68c965feec8ce0e86d0b396baca5e33c3cf0af/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=4b68c965feec8ce0e86d0b396baca5e33c3cf0af", "patch": "@@ -31,7 +31,7 @@ use std::mem;\n use crate::syntax::ast;\n use crate::syntax::source_map::Span;\n use crate::syntax_pos::BytePos;\n-use crate::utils::{sugg, sext};\n+use crate::utils::{in_macro, sugg, sext};\n use crate::utils::usage::mutated_variables;\n use crate::consts::{constant, Constant};\n \n@@ -1030,6 +1030,10 @@ fn check_for_loop_range<'a, 'tcx>(\n     body: &'tcx Expr,\n     expr: &'tcx Expr,\n ) {\n+    if in_macro(expr.span) {\n+        return;\n+    }\n+\n     if let Some(higher::Range {\n         start: Some(start),\n         ref end,"}, {"sha": "b640597586215e2b107661c9cf97dd0ec85736a4", "filename": "mini-macro/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4b68c965feec8ce0e86d0b396baca5e33c3cf0af/mini-macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b68c965feec8ce0e86d0b396baca5e33c3cf0af/mini-macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-macro%2Fsrc%2Flib.rs?ref=4b68c965feec8ce0e86d0b396baca5e33c3cf0af", "patch": "@@ -17,5 +17,10 @@ use proc_macro::{TokenStream, quote};\n pub fn mini_macro(_: TokenStream) -> TokenStream {\n     quote!(\n         #[allow(unused)] fn needless_take_by_value(s: String) { println!(\"{}\", s.len()); }\n+        #[allow(unused)] fn needless_loop(items: &[u8]) {\n+            for i in 0..items.len() {\n+                println!(\"{}\", items[i]);\n+            }\n+        }\n     )\n }"}]}