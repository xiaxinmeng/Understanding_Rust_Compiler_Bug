{"sha": "6cab003fd1d83c55068b7193d91290aef56424df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYWIwMDNmZDFkODNjNTUwNjhiNzE5M2Q5MTI5MGFlZjU2NDI0ZGY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-24T19:14:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-07-02T16:25:22Z"}, "message": "cleanup formatting of comment and add attribution", "tree": {"sha": "0043009eecb0b5831df4491734c54afb21849706", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0043009eecb0b5831df4491734c54afb21849706"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cab003fd1d83c55068b7193d91290aef56424df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cab003fd1d83c55068b7193d91290aef56424df", "html_url": "https://github.com/rust-lang/rust/commit/6cab003fd1d83c55068b7193d91290aef56424df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cab003fd1d83c55068b7193d91290aef56424df/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9588f7fe7434fa7201799d10a16ef810bf1ae2a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9588f7fe7434fa7201799d10a16ef810bf1ae2a1", "html_url": "https://github.com/rust-lang/rust/commit/9588f7fe7434fa7201799d10a16ef810bf1ae2a1"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "d06c4434b3aaf8d4a1b5c9eb003ce63e188dd97c", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/6cab003fd1d83c55068b7193d91290aef56424df/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cab003fd1d83c55068b7193d91290aef56424df/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=6cab003fd1d83c55068b7193d91290aef56424df", "patch": "@@ -628,28 +628,29 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n             match *value {\n                 VarValue::Value(_) => { /* Inference successful */ }\n                 VarValue::ErrorValue => {\n-                    /* Inference impossible: this value contains\n-                    inconsistent constraints.\n-\n-                    I think that in this case we should report an\n-                    error now -- unlike the case above, we can't\n-                    wait to see whether the user needs the result\n-                    of this variable. The reason is that the mere\n-                    existence of this variable implies that the\n-                    region graph is inconsistent, whether or not it\n-                    is used.\n-\n-                    For example, we may have created a region\n-                    variable that is the GLB of two other regions\n-                    which do not have a GLB. Even if that variable\n-                    is not used, it implies that those two regions\n-                    *should* have a GLB.\n-\n-                    At least I think this is true. It may be that\n-                    the mere existence of a conflict in a region variable\n-                    that is not used is not a problem, so if this rule\n-                    starts to create problems we'll have to revisit\n-                    this portion of the code and think hard about it. =) */\n+                    // Inference impossible: this value contains\n+                    // inconsistent constraints.\n+                    //\n+                    // I think that in this case we should report an\n+                    // error now -- unlike the case above, we can't\n+                    // wait to see whether the user needs the result\n+                    // of this variable. The reason is that the mere\n+                    // existence of this variable implies that the\n+                    // region graph is inconsistent, whether or not it\n+                    // is used.\n+                    //\n+                    // For example, we may have created a region\n+                    // variable that is the GLB of two other regions\n+                    // which do not have a GLB. Even if that variable\n+                    // is not used, it implies that those two regions\n+                    // *should* have a GLB.\n+                    //\n+                    // At least I think this is true. It may be that\n+                    // the mere existence of a conflict in a region\n+                    // variable that is not used is not a problem, so\n+                    // if this rule starts to create problems we'll\n+                    // have to revisit this portion of the code and\n+                    // think hard about it. =) -- nikomatsakis\n                     self.collect_error_for_expanding_node(graph, &mut dup_vec, node_vid, errors);\n                 }\n             }"}]}