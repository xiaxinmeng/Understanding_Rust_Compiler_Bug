{"sha": "3ba7e041f10f1e955120c33f5aab0817e02c5222", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYTdlMDQxZjEwZjFlOTU1MTIwYzMzZjVhYWIwODE3ZTAyYzUyMjI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-03-26T23:08:05Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-03-26T23:08:05Z"}, "message": "core: As per #4898, finish impls for one-tuples", "tree": {"sha": "52ed07e29729b43fb6d2436a381e079787c12f74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52ed07e29729b43fb6d2436a381e079787c12f74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ba7e041f10f1e955120c33f5aab0817e02c5222", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ba7e041f10f1e955120c33f5aab0817e02c5222", "html_url": "https://github.com/rust-lang/rust/commit/3ba7e041f10f1e955120c33f5aab0817e02c5222", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ba7e041f10f1e955120c33f5aab0817e02c5222/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f7c74d0225354b93bf7649fed8cdd2774480106", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f7c74d0225354b93bf7649fed8cdd2774480106", "html_url": "https://github.com/rust-lang/rust/commit/3f7c74d0225354b93bf7649fed8cdd2774480106"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "5277ba32614a36c4273ad1b0c706823363b166e7", "filename": "src/libcore/repr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3ba7e041f10f1e955120c33f5aab0817e02c5222/src%2Flibcore%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba7e041f10f1e955120c33f5aab0817e02c5222/src%2Flibcore%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frepr.rs?ref=3ba7e041f10f1e955120c33f5aab0817e02c5222", "patch": "@@ -451,6 +451,9 @@ impl TyVisitor for ReprVisitor {\n     }\n     fn visit_leave_tup(&self, _n_fields: uint,\n                        _sz: uint, _align: uint) -> bool {\n+        if _n_fields == 1 {\n+            self.writer.write_char(',');\n+        }\n         self.writer.write_char(')');\n         true\n     }\n@@ -591,7 +594,6 @@ fn test_repr() {\n         fail_unless!(s == e);\n     }\n \n-\n     exact_test(&10, \"10\");\n     exact_test(&true, \"true\");\n     exact_test(&false, \"false\");\n@@ -608,6 +610,7 @@ fn test_repr() {\n     let mut x = 10;\n     exact_test(&(&mut x), \"&mut 10\");\n \n+    exact_test(&(1,), \"(1,)\");\n     exact_test(&(@[1,2,3,4,5,6,7,8]),\n                \"@[1, 2, 3, 4, 5, 6, 7, 8]\");\n     exact_test(&(@[1u8,2u8,3u8,4u8]),"}, {"sha": "c942f508be8415c031f5871666eb9a95f0be897e", "filename": "src/libcore/to_str.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3ba7e041f10f1e955120c33f5aab0817e02c5222/src%2Flibcore%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba7e041f10f1e955120c33f5aab0817e02c5222/src%2Flibcore%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fto_str.rs?ref=3ba7e041f10f1e955120c33f5aab0817e02c5222", "patch": "@@ -29,7 +29,16 @@ impl ToStr for () {\n     fn to_str(&self) -> ~str { ~\"()\" }\n }\n \n-// FIXME #4898: impl for one-tuples\n+impl<A:ToStr> ToStr for (A,) {\n+    #[inline(always)]\n+    fn to_str(&self) -> ~str {\n+        match *self {\n+            (ref a,) => {\n+                ~\"(\" + a.to_str() + ~\", \" + ~\")\"\n+            }\n+        }\n+    }\n+}\n \n impl<A:ToStr,B:ToStr> ToStr for (A, B) {\n     #[inline(always)]"}, {"sha": "1762c2c64262c79e0c2a68680cfb34c15dc4b9cc", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3ba7e041f10f1e955120c33f5aab0817e02c5222/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba7e041f10f1e955120c33f5aab0817e02c5222/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=3ba7e041f10f1e955120c33f5aab0817e02c5222", "patch": "@@ -112,7 +112,45 @@ impl<A:Copy,B:Copy> ExtendedTupleOps<A,B> for (~[A], ~[B]) {\n     }\n }\n \n-// FIXME #4898: impl for one-tuples\n+#[cfg(notest)]\n+impl<A:Eq> Eq for (A,) {\n+    #[inline(always)]\n+    fn eq(&self, other: &(A,)) -> bool {\n+        match (*self) {\n+            (ref self_a,) => match other {\n+                &(ref other_a,) => {\n+                    (*self_a).eq(other_a)\n+                }\n+            }\n+        }\n+    }\n+    #[inline(always)]\n+    fn ne(&self, other: &(A,)) -> bool { !(*self).eq(other) }\n+}\n+\n+#[cfg(notest)]\n+impl<A:Ord> Ord for (A,) {\n+    #[inline(always)]\n+    fn lt(&self, other: &(A,)) -> bool {\n+        match (*self) {\n+            (ref self_a,) => {\n+                match (*other) {\n+                    (ref other_a,) => {\n+                        if (*self_a).lt(other_a) { return true; }\n+                        return false;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    #[inline(always)]\n+    fn le(&self, other: &(A,)) -> bool { !other.lt(&(*self)) }\n+    #[inline(always)]\n+    fn ge(&self, other: &(A,)) -> bool { !self.lt(other) }\n+    #[inline(always)]\n+    fn gt(&self, other: &(A,)) -> bool { other.lt(&(*self))  }\n+}\n+\n \n #[cfg(notest)]\n impl<A:Eq,B:Eq> Eq for (A, B) {"}]}