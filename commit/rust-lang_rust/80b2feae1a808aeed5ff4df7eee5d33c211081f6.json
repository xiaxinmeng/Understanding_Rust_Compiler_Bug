{"sha": "80b2feae1a808aeed5ff4df7eee5d33c211081f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYjJmZWFlMWE4MDhhZWVkNWZmNGRmN2VlZTVkMzNjMjExMDgxZjY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-15T13:49:57Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-15T14:22:18Z"}, "message": "Run the rustc test suite on CI", "tree": {"sha": "3ac91bdf2b869d4248eea917fe9f2d1487e588c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ac91bdf2b869d4248eea917fe9f2d1487e588c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80b2feae1a808aeed5ff4df7eee5d33c211081f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80b2feae1a808aeed5ff4df7eee5d33c211081f6", "html_url": "https://github.com/rust-lang/rust/commit/80b2feae1a808aeed5ff4df7eee5d33c211081f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80b2feae1a808aeed5ff4df7eee5d33c211081f6/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "154668bd02a6bf29632ee500ec1778b7fb820c5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/154668bd02a6bf29632ee500ec1778b7fb820c5d", "html_url": "https://github.com/rust-lang/rust/commit/154668bd02a6bf29632ee500ec1778b7fb820c5d"}], "stats": {"total": 212, "additions": 168, "deletions": 44}, "files": [{"sha": "8c94a0aa5e6ebe7beba14d52e5ed817053529f8e", "filename": ".github/workflows/bootstrap_rustc.yml", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/154668bd02a6bf29632ee500ec1778b7fb820c5d/.github%2Fworkflows%2Fbootstrap_rustc.yml", "raw_url": "https://github.com/rust-lang/rust/raw/154668bd02a6bf29632ee500ec1778b7fb820c5d/.github%2Fworkflows%2Fbootstrap_rustc.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fbootstrap_rustc.yml?ref=154668bd02a6bf29632ee500ec1778b7fb820c5d", "patch": "@@ -1,44 +0,0 @@\n-name: Bootstrap rustc using cg_clif\n-\n-on:\n-  - push\n-\n-jobs:\n-  bootstrap_rustc:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - uses: actions/checkout@v2\n-\n-    - name: Cache cargo installed crates\n-      uses: actions/cache@v2\n-      with:\n-        path: ~/.cargo/bin\n-        key: ${{ runner.os }}-cargo-installed-crates\n-\n-    - name: Cache cargo registry and index\n-      uses: actions/cache@v2\n-      with:\n-        path: |\n-            ~/.cargo/registry\n-            ~/.cargo/git\n-        key: ${{ runner.os }}-cargo-registry-and-index-${{ hashFiles('**/Cargo.lock') }}\n-\n-    - name: Cache cargo target dir\n-      uses: actions/cache@v2\n-      with:\n-        path: target\n-        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n-\n-    - name: Prepare dependencies\n-      run: |\n-        git config --global user.email \"user@example.com\"\n-        git config --global user.name \"User\"\n-        ./prepare.sh\n-\n-    - name: Test\n-      run: |\n-        # Enable backtraces for easier debugging\n-        export RUST_BACKTRACE=1\n-\n-        ./scripts/test_bootstrap.sh"}, {"sha": "e01a92598bab745b4df24ef41bb5e50ccfef4701", "filename": ".github/workflows/rustc.yml", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/80b2feae1a808aeed5ff4df7eee5d33c211081f6/.github%2Fworkflows%2Frustc.yml", "raw_url": "https://github.com/rust-lang/rust/raw/80b2feae1a808aeed5ff4df7eee5d33c211081f6/.github%2Fworkflows%2Frustc.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frustc.yml?ref=80b2feae1a808aeed5ff4df7eee5d33c211081f6", "patch": "@@ -0,0 +1,82 @@\n+name: Various rustc tests\n+\n+on:\n+  - push\n+\n+jobs:\n+  bootstrap_rustc:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+\n+    - name: Cache cargo installed crates\n+      uses: actions/cache@v2\n+      with:\n+        path: ~/.cargo/bin\n+        key: ${{ runner.os }}-cargo-installed-crates\n+\n+    - name: Cache cargo registry and index\n+      uses: actions/cache@v2\n+      with:\n+        path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+        key: ${{ runner.os }}-cargo-registry-and-index-${{ hashFiles('**/Cargo.lock') }}\n+\n+    - name: Cache cargo target dir\n+      uses: actions/cache@v2\n+      with:\n+        path: target\n+        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n+\n+    - name: Prepare dependencies\n+      run: |\n+        git config --global user.email \"user@example.com\"\n+        git config --global user.name \"User\"\n+        ./prepare.sh\n+\n+    - name: Test\n+      run: |\n+        # Enable backtraces for easier debugging\n+        export RUST_BACKTRACE=1\n+\n+        ./scripts/test_bootstrap.sh\n+  rustc_test_suite:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+\n+    - name: Cache cargo installed crates\n+      uses: actions/cache@v2\n+      with:\n+        path: ~/.cargo/bin\n+        key: ${{ runner.os }}-cargo-installed-crates\n+\n+    - name: Cache cargo registry and index\n+      uses: actions/cache@v2\n+      with:\n+        path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+        key: ${{ runner.os }}-cargo-registry-and-index-${{ hashFiles('**/Cargo.lock') }}\n+\n+    - name: Cache cargo target dir\n+      uses: actions/cache@v2\n+      with:\n+        path: target\n+        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n+\n+    - name: Prepare dependencies\n+      run: |\n+        git config --global user.email \"user@example.com\"\n+        git config --global user.name \"User\"\n+        ./prepare.sh\n+\n+    - name: Test\n+      run: |\n+        # Enable backtraces for easier debugging\n+        export RUST_BACKTRACE=1\n+\n+        ./scripts/test_rustc_tests.sh"}, {"sha": "1c3318d53de77970b4ab7bac13b11dfed393d30e", "filename": "scripts/test_rustc_tests.sh", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/80b2feae1a808aeed5ff4df7eee5d33c211081f6/scripts%2Ftest_rustc_tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/80b2feae1a808aeed5ff4df7eee5d33c211081f6/scripts%2Ftest_rustc_tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftest_rustc_tests.sh?ref=80b2feae1a808aeed5ff4df7eee5d33c211081f6", "patch": "@@ -0,0 +1,86 @@\n+#!/bin/bash\n+set -e\n+\n+cd $(dirname \"$0\")/../\n+\n+source ./scripts/setup_rust_fork.sh\n+\n+echo \"[TEST] Test suite of rustc\"\n+pushd rust\n+\n+cargo install ripgrep\n+\n+rm -r src/test/ui/{extern/,panics/,unsized-locals/,thinlto/,simd*,*lto*.rs,linkage*,unwind-*.rs} || true\n+for test in $(rg --files-with-matches \"asm!|catch_unwind|should_panic|lto\" src/test/ui); do\n+  rm $test\n+done\n+\n+for test in $(rg -i --files-with-matches \"//(\\[\\w+\\])?~|// error-pattern:|// build-fail|// run-fail|-Cllvm-args\" src/test/ui); do\n+  rm $test\n+done\n+\n+git checkout -- src/test/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n+\n+# these all depend on unwinding support\n+rm src/test/ui/backtrace.rs\n+rm src/test/ui/array-slice-vec/box-of-array-of-drop-*.rs\n+rm src/test/ui/array-slice-vec/slice-panic-*.rs\n+rm src/test/ui/array-slice-vec/nested-vec-3.rs\n+rm src/test/ui/cleanup-rvalue-temp-during-incomplete-alloc.rs\n+rm src/test/ui/issues/issue-26655.rs\n+rm src/test/ui/issues/issue-29485.rs\n+rm src/test/ui/issues/issue-30018-panic.rs\n+rm src/test/ui/multi-panic.rs\n+rm src/test/ui/sepcomp/sepcomp-unwind.rs\n+rm src/test/ui/structs-enums/unit-like-struct-drop-run.rs\n+rm src/test/ui/terminate-in-initializer.rs\n+rm src/test/ui/threads-sendsync/task-stderr.rs\n+rm src/test/ui/numbers-arithmetic/int-abs-overflow.rs\n+rm src/test/ui/drop/drop-trait-enum.rs\n+rm src/test/ui/numbers-arithmetic/issue-8460.rs\n+\n+rm src/test/ui/issues/issue-28950.rs # depends on stack size optimizations\n+rm src/test/ui/init-large-type.rs # same\n+rm src/test/ui/sse2.rs # cpuid not supported, so sse2 not detected\n+rm src/test/ui/issues/issue-33992.rs # unsupported linkages\n+rm src/test/ui/issues/issue-51947.rs # same\n+rm src/test/ui/numbers-arithmetic/saturating-float-casts.rs # intrinsic gives different but valid result\n+rm src/test/ui/mir/mir_misc_casts.rs # depends on deduplication of constants\n+rm src/test/ui/mir/mir_raw_fat_ptr.rs # same\n+rm src/test/ui/async-await/async-fn-size-moved-locals.rs # -Cpanic=abort shrinks some generator by one byte\n+rm src/test/ui/async-await/async-fn-size-uninit-locals.rs # same\n+rm src/test/ui/generator/size-moved-locals.rs # same\n+rm src/test/ui/fn/dyn-fn-alignment.rs # wants a 256 byte alignment\n+rm src/test/ui/test-attrs/test-fn-signature-verification-for-explicit-return-type.rs # \"Cannot run dynamic test fn out-of-process\"\n+rm src/test/ui/intrinsics/intrinsic-nearby.rs # unimplemented nearbyintf32 and nearbyintf64 intrinsics\n+\n+rm src/test/incremental/hashes/inline_asm.rs # inline asm\n+rm src/test/incremental/issue-72386.rs # same\n+rm src/test/incremental/change_crate_dep_kind.rs # requires -Cpanic=unwind\n+rm src/test/incremental/issue-49482.rs # same\n+rm src/test/incremental/issue-54059.rs # same\n+rm src/test/incremental/lto.rs # requires lto\n+\n+rm src/test/pretty/asm.rs # inline asm\n+rm src/test/pretty/raw-str-nonexpr.rs # same\n+\n+rm -r src/test/run-pass-valgrind/unsized-locals\n+\n+rm src/test/ui/json-bom-plus-crlf-multifile.rs # differing warning\n+rm src/test/ui/json-bom-plus-crlf.rs # same\n+\n+rm src/test/ui/allocator/no_std-alloc-error-handler-default.rs # missing rust_oom definition\n+rm src/test/ui/cfg/cfg-panic.rs\n+rm src/test/ui/default-alloc-error-hook.rs\n+rm -r src/test/ui/hygiene/\n+\n+rm -r src/test/ui/polymorphization/ # polymorphization not yet supported\n+rm src/test/codegen-units/polymorphization/unused_type_parameters.rs # same\n+\n+rm -r src/test/run-make/fmt-write-bloat/ # tests an optimization\n+rm src/test/ui/abi/mir/mir_codegen_calls_variadic.rs # requires float varargs\n+rm src/test/ui/abi/variadic-ffi.rs # requires callee side vararg support\n+\n+echo \"[TEST] rustc test suite\"\n+RUST_TEST_NOCAPTURE=1 COMPILETEST_FORCE_STAGE0=1 ./x.py test --stage 0 src/test/{codegen-units,run-make,run-pass-valgrind,ui}\n+popd"}]}