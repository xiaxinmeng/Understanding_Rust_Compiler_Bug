{"sha": "ef4c8167e87c27950bbc9553a50c269d0e27fd56", "node_id": "C_kwDOAAsO6NoAKGVmNGM4MTY3ZTg3YzI3OTUwYmJjOTU1M2E1MGMyNjlkMGUyN2ZkNTY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-22T11:00:25Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-22T11:00:25Z"}, "message": "Pass `FamousDefs` around in inlay hints", "tree": {"sha": "c08e7ea6ec0dd2d7d6995ce859bd714f6d1ff317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c08e7ea6ec0dd2d7d6995ce859bd714f6d1ff317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef4c8167e87c27950bbc9553a50c269d0e27fd56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4c8167e87c27950bbc9553a50c269d0e27fd56", "html_url": "https://github.com/rust-lang/rust/commit/ef4c8167e87c27950bbc9553a50c269d0e27fd56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef4c8167e87c27950bbc9553a50c269d0e27fd56/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb3963b22ec8ec7e99aeb1a2c7acb5689a2f76c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb3963b22ec8ec7e99aeb1a2c7acb5689a2f76c5", "html_url": "https://github.com/rust-lang/rust/commit/eb3963b22ec8ec7e99aeb1a2c7acb5689a2f76c5"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "2b78dc51d948d9f38dea5de71679cc36b7023770", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=ef4c8167e87c27950bbc9553a50c269d0e27fd56", "patch": "@@ -232,8 +232,7 @@ impl InlayHintLabelBuilder<'_> {\n }\n \n fn label_of_ty(\n-    sema: &Semantics<'_, RootDatabase>,\n-    desc_pat: &impl AstNode,\n+    famous_defs @ FamousDefs(sema, _): &FamousDefs<'_, '_>,\n     config: &InlayHintsConfig,\n     ty: hir::Type,\n ) -> Option<InlayHintLabel> {\n@@ -263,8 +262,6 @@ fn label_of_ty(\n         };\n     }\n \n-    let krate = sema.scope(desc_pat.syntax())?.krate();\n-    let famous_defs = FamousDefs(sema, krate);\n     let mut label_builder = InlayHintLabelBuilder {\n         db: sema.db,\n         last_part: String::new(),\n@@ -329,7 +326,7 @@ pub(crate) fn inlay_hints(\n \n fn hints(\n     hints: &mut Vec<InlayHint>,\n-    FamousDefs(sema, _): &FamousDefs<'_, '_>,\n+    famous_defs @ FamousDefs(sema, _): &FamousDefs<'_, '_>,\n     config: &InlayHintsConfig,\n     file_id: FileId,\n     node: SyntaxNode,\n@@ -338,14 +335,14 @@ fn hints(\n     match_ast! {\n         match node {\n             ast::Expr(expr) => {\n-                chaining::hints(hints, sema, config, file_id, &expr);\n+                chaining::hints(hints, famous_defs, config, file_id, &expr);\n                 adjustment::hints(hints, sema, config, &expr);\n                 match expr {\n                     ast::Expr::CallExpr(it) => param_name::hints(hints, sema, config, ast::Expr::from(it)),\n                     ast::Expr::MethodCallExpr(it) => {\n                         param_name::hints(hints, sema, config, ast::Expr::from(it))\n                     }\n-                    ast::Expr::ClosureExpr(it) => closure_ret::hints(hints, sema, config, file_id, it),\n+                    ast::Expr::ClosureExpr(it) => closure_ret::hints(hints, famous_defs, config, file_id, it),\n                     // We could show reborrows for all expressions, but usually that is just noise to the user\n                     // and the main point here is to show why \"moving\" a mutable reference doesn't necessarily move it\n                     // ast::Expr::PathExpr(_) => reborrow_hints(hints, sema, config, &expr),\n@@ -355,7 +352,7 @@ fn hints(\n             ast::Pat(it) => {\n                 binding_mode::hints(hints, sema, config, &it);\n                 if let ast::Pat::IdentPat(it) = it {\n-                    bind_pat::hints(hints, sema, config, file_id, &it);\n+                    bind_pat::hints(hints, famous_defs, config, file_id, &it);\n                 }\n                 Some(())\n             },"}, {"sha": "e22b16a3f820d4e8c61702b5525241af9520d757", "filename": "crates/ide/src/inlay_hints/bind_pat.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs?ref=ef4c8167e87c27950bbc9553a50c269d0e27fd56", "patch": "@@ -4,7 +4,7 @@\n //! let _x /* i32 */= f(4, 4);\n //! ```\n use hir::{Semantics, TypeInfo};\n-use ide_db::{base_db::FileId, RootDatabase};\n+use ide_db::{base_db::FileId, famous_defs::FamousDefs, RootDatabase};\n \n use itertools::Itertools;\n use syntax::{\n@@ -20,7 +20,7 @@ use super::label_of_ty;\n \n pub(super) fn hints(\n     acc: &mut Vec<InlayHint>,\n-    sema: &Semantics<'_, RootDatabase>,\n+    famous_defs @ FamousDefs(sema, _): &FamousDefs<'_, '_>,\n     config: &InlayHintsConfig,\n     file_id: FileId,\n     pat: &ast::IdentPat,\n@@ -37,7 +37,7 @@ pub(super) fn hints(\n         return None;\n     }\n \n-    let label = label_of_ty(sema, desc_pat, config, ty)?;\n+    let label = label_of_ty(famous_defs, config, ty)?;\n \n     if config.hide_named_constructor_hints\n         && is_named_constructor(sema, pat, &label.to_string()).is_some()"}, {"sha": "8810d5d34dbd9536c267080fea34da99d90b6381", "filename": "crates/ide/src/inlay_hints/chaining.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs?ref=ef4c8167e87c27950bbc9553a50c269d0e27fd56", "patch": "@@ -1,6 +1,5 @@\n //! Implementation of \"chaining\" inlay hints.\n-use hir::Semantics;\n-use ide_db::RootDatabase;\n+use ide_db::famous_defs::FamousDefs;\n use syntax::{\n     ast::{self, AstNode},\n     Direction, NodeOrToken, SyntaxKind, T,\n@@ -12,7 +11,7 @@ use super::label_of_ty;\n \n pub(super) fn hints(\n     acc: &mut Vec<InlayHint>,\n-    sema: &Semantics<'_, RootDatabase>,\n+    famous_defs @ FamousDefs(sema, _): &FamousDefs<'_, '_>,\n     config: &InlayHintsConfig,\n     file_id: FileId,\n     expr: &ast::Expr,\n@@ -61,7 +60,7 @@ pub(super) fn hints(\n             acc.push(InlayHint {\n                 range: expr.syntax().text_range(),\n                 kind: InlayKind::ChainingHint,\n-                label: label_of_ty(sema, desc_expr, config, ty)?,\n+                label: label_of_ty(famous_defs, config, ty)?,\n                 tooltip: Some(InlayTooltip::HoverRanged(file_id, expr.syntax().text_range())),\n             });\n         }"}, {"sha": "e711a4af235a5762d64bddc407d21bc738f53fe4", "filename": "crates/ide/src/inlay_hints/closure_ret.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosure_ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4c8167e87c27950bbc9553a50c269d0e27fd56/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosure_ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosure_ret.rs?ref=ef4c8167e87c27950bbc9553a50c269d0e27fd56", "patch": "@@ -1,6 +1,5 @@\n //! Implementation of \"closure return type\" inlay hints.\n-use hir::Semantics;\n-use ide_db::{base_db::FileId, RootDatabase};\n+use ide_db::{base_db::FileId, famous_defs::FamousDefs};\n use syntax::ast::{self, AstNode};\n \n use crate::{\n@@ -12,7 +11,7 @@ use super::label_of_ty;\n \n pub(super) fn hints(\n     acc: &mut Vec<InlayHint>,\n-    sema: &Semantics<'_, RootDatabase>,\n+    famous_defs @ FamousDefs(sema, _): &FamousDefs<'_, '_>,\n     config: &InlayHintsConfig,\n     file_id: FileId,\n     closure: ast::ClosureExpr,\n@@ -43,7 +42,7 @@ pub(super) fn hints(\n     acc.push(InlayHint {\n         range: param_list.syntax().text_range(),\n         kind: InlayKind::ClosureReturnTypeHint,\n-        label: label_of_ty(sema, &param_list, config, ty)?,\n+        label: label_of_ty(famous_defs, config, ty)?,\n         tooltip: Some(InlayTooltip::HoverRanged(file_id, param_list.syntax().text_range())),\n     });\n     Some(())"}]}