{"sha": "55fbf59f3bec1425e03b56516050912ed02147c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZmJmNTlmM2JlYzE0MjVlMDNiNTY1MTYwNTA5MTJlZDAyMTQ3Yzk=", "commit": {"author": {"name": "KALPESH KRISHNA", "email": "kalpeshk2011@gmail.com", "date": "2016-03-06T15:01:17Z"}, "committer": {"name": "KALPESH KRISHNA", "email": "kalpeshk2011@gmail.com", "date": "2016-03-07T21:18:42Z"}, "message": "Linting classical overflow checks.", "tree": {"sha": "ec03386a67a901d9238234b0cee70026f2fa05d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec03386a67a901d9238234b0cee70026f2fa05d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55fbf59f3bec1425e03b56516050912ed02147c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55fbf59f3bec1425e03b56516050912ed02147c9", "html_url": "https://github.com/rust-lang/rust/commit/55fbf59f3bec1425e03b56516050912ed02147c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55fbf59f3bec1425e03b56516050912ed02147c9/comments", "author": {"login": "martiansideofthemoon", "id": 8805240, "node_id": "MDQ6VXNlcjg4MDUyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8805240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martiansideofthemoon", "html_url": "https://github.com/martiansideofthemoon", "followers_url": "https://api.github.com/users/martiansideofthemoon/followers", "following_url": "https://api.github.com/users/martiansideofthemoon/following{/other_user}", "gists_url": "https://api.github.com/users/martiansideofthemoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/martiansideofthemoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martiansideofthemoon/subscriptions", "organizations_url": "https://api.github.com/users/martiansideofthemoon/orgs", "repos_url": "https://api.github.com/users/martiansideofthemoon/repos", "events_url": "https://api.github.com/users/martiansideofthemoon/events{/privacy}", "received_events_url": "https://api.github.com/users/martiansideofthemoon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "martiansideofthemoon", "id": 8805240, "node_id": "MDQ6VXNlcjg4MDUyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8805240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martiansideofthemoon", "html_url": "https://github.com/martiansideofthemoon", "followers_url": "https://api.github.com/users/martiansideofthemoon/followers", "following_url": "https://api.github.com/users/martiansideofthemoon/following{/other_user}", "gists_url": "https://api.github.com/users/martiansideofthemoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/martiansideofthemoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martiansideofthemoon/subscriptions", "organizations_url": "https://api.github.com/users/martiansideofthemoon/orgs", "repos_url": "https://api.github.com/users/martiansideofthemoon/repos", "events_url": "https://api.github.com/users/martiansideofthemoon/events{/privacy}", "received_events_url": "https://api.github.com/users/martiansideofthemoon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88ac226ac22a234b948fc78dceb953fceff8d6f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/88ac226ac22a234b948fc78dceb953fceff8d6f7", "html_url": "https://github.com/rust-lang/rust/commit/88ac226ac22a234b948fc78dceb953fceff8d6f7"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "77518df6b3990652d91ade3ec6ffe03f69cad2cc", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55fbf59f3bec1425e03b56516050912ed02147c9/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/55fbf59f3bec1425e03b56516050912ed02147c9/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=55fbf59f3bec1425e03b56516050912ed02147c9", "patch": "@@ -8,7 +8,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n [Jump to usage instructions](#usage)\n \n ##Lints\n-There are 130 lints included in this crate:\n+There are 131 lints included in this crate:\n \n name                                                                                                                 | default | meaning\n ---------------------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -92,6 +92,7 @@ name\n [option_unwrap_used](https://github.com/Manishearth/rust-clippy/wiki#option_unwrap_used)                             | allow   | using `Option.unwrap()`, which should at least get a better message using `expect()`\n [or_fun_call](https://github.com/Manishearth/rust-clippy/wiki#or_fun_call)                                           | warn    | using any `*or` method when the `*or_else` would do\n [out_of_bounds_indexing](https://github.com/Manishearth/rust-clippy/wiki#out_of_bounds_indexing)                     | deny    | out of bound constant indexing\n+[overflow_check_conditional](https://github.com/Manishearth/rust-clippy/wiki#overflow_check_conditional)             | warn    | Using overflow checks which are likely to panic\n [panic_params](https://github.com/Manishearth/rust-clippy/wiki#panic_params)                                         | warn    | missing parameters in `panic!`\n [precedence](https://github.com/Manishearth/rust-clippy/wiki#precedence)                                             | warn    | catches operations where precedence may be unclear. See the wiki for a list of cases caught\n [print_stdout](https://github.com/Manishearth/rust-clippy/wiki#print_stdout)                                         | allow   | printing on stdout"}, {"sha": "51292bea8b2f6d61059dec812fe0f99f10cbd01b", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55fbf59f3bec1425e03b56516050912ed02147c9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55fbf59f3bec1425e03b56516050912ed02147c9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=55fbf59f3bec1425e03b56516050912ed02147c9", "patch": "@@ -79,6 +79,7 @@ pub mod needless_features;\n pub mod needless_update;\n pub mod no_effect;\n pub mod open_options;\n+pub mod overflow_check_conditional;\n pub mod panic;\n pub mod precedence;\n pub mod print;\n@@ -173,6 +174,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_early_lint_pass(box formatting::Formatting);\n     reg.register_late_lint_pass(box swap::Swap);\n     reg.register_early_lint_pass(box if_not_else::IfNotElse);\n+    reg.register_late_lint_pass(box overflow_check_conditional::OverflowCheckConditional);\n \n     reg.register_lint_group(\"clippy_pedantic\", vec![\n         enum_glob_use::ENUM_GLOB_USE,\n@@ -283,6 +285,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         needless_update::NEEDLESS_UPDATE,\n         no_effect::NO_EFFECT,\n         open_options::NONSENSICAL_OPEN_OPTIONS,\n+        overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n         panic::PANIC_PARAMS,\n         precedence::PRECEDENCE,\n         ptr_arg::PTR_ARG,"}, {"sha": "7f4f4b3597cdcde1e002e51991852ef49aeb1d17", "filename": "src/overflow_check_conditional.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/55fbf59f3bec1425e03b56516050912ed02147c9/src%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55fbf59f3bec1425e03b56516050912ed02147c9/src%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow_check_conditional.rs?ref=55fbf59f3bec1425e03b56516050912ed02147c9", "patch": "@@ -0,0 +1,41 @@\n+use rustc::lint::*;\n+use rustc_front::hir::*;\n+use utils::{span_lint};\n+\n+/// **What it does:** This lint finds classic overflow checks.\n+///\n+/// **Why is this bad?** Most classic C overflow checks will fail in Rust. Users can use functions like `overflowing_*` and `wrapping_*` instead.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:** `a + b < a`\n+declare_lint!(pub OVERFLOW_CHECK_CONDITIONAL, Warn,\n+              \"Using overflow checks which are likely to panic\");\n+\n+#[derive(Copy, Clone)]\n+pub struct OverflowCheckConditional;\n+\n+impl LintPass for OverflowCheckConditional {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(OVERFLOW_CHECK_CONDITIONAL)\n+    }\n+}\n+\n+impl LateLintPass for OverflowCheckConditional {\n+    fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n+        if_let_chain! {[\n+        let Expr_::ExprBinary(ref op, ref first, ref second) = expr.node,\n+        let BinOp_::BiLt = op.node,\n+        let Expr_::ExprBinary(ref op2, ref add1, ref add2) = first.node,\n+        let BinOp_::BiAdd = op2.node,\n+        let Expr_::ExprPath(_,ref path1) = add1.node,\n+        let Expr_::ExprPath(_, ref path2) = add2.node,\n+        let Expr_::ExprPath(_, ref path3) = second.node,\n+        (&path1.segments[0]).identifier == (&path3.segments[0]).identifier || (&path2.segments[0]).identifier == (&path3.segments[0]).identifier,\n+        cx.tcx.expr_ty(add1).is_integral(),\n+        cx.tcx.expr_ty(add2).is_integral()\n+        ], {\n+            span_lint(cx, OVERFLOW_CHECK_CONDITIONAL, expr.span, \"You are trying to use classic C overflow conditons that will fail in Rust.\");\n+        }}\n+    }\n+}"}, {"sha": "0b5e486df4694a1c4870d9baaa873a1d05c4b799", "filename": "tests/compile-fail/overflow_check_conditional.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55fbf59f3bec1425e03b56516050912ed02147c9/tests%2Fcompile-fail%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55fbf59f3bec1425e03b56516050912ed02147c9/tests%2Fcompile-fail%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Foverflow_check_conditional.rs?ref=55fbf59f3bec1425e03b56516050912ed02147c9", "patch": "@@ -0,0 +1,25 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![deny(overflow_check_conditional)]\n+\n+fn main() {\n+\tlet a: u32 = 1;\n+\tlet b: u32 = 2;\n+\tlet c: u32 = 3;\n+\tif a + b < a { //~ERROR You are trying to use classic C overflow conditons that will fail in Rust.\n+\n+\t}\n+\tif a + b < b { //~ERROR You are trying to use classic C overflow conditons that will fail in Rust.\n+\n+\t}\n+\tif a + b < c {\n+\n+\t}\n+\tlet i = 1.1;\n+\tlet j = 2.2;\n+\tif i + j < i {\n+\n+\t}\n+}\n+"}]}