{"sha": "388db666f42f31ce6f7f72a9dd1f737e9b58d443", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OGRiNjY2ZjQyZjMxY2U2ZjdmNzJhOWRkMWY3MzdlOWI1OGQ0NDM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-05T17:45:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-05T17:45:02Z"}, "message": "Rollup merge of #39439 - king6cong:move, r=alexcrichton\n\nrename other than copy/remove", "tree": {"sha": "77d737f1014bccb04d3ee4949e5168cb98ebbe01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77d737f1014bccb04d3ee4949e5168cb98ebbe01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/388db666f42f31ce6f7f72a9dd1f737e9b58d443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/388db666f42f31ce6f7f72a9dd1f737e9b58d443", "html_url": "https://github.com/rust-lang/rust/commit/388db666f42f31ce6f7f72a9dd1f737e9b58d443", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/388db666f42f31ce6f7f72a9dd1f737e9b58d443/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c8cdb2923a69177017165a4cdb0e1ea673fc49f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8cdb2923a69177017165a4cdb0e1ea673fc49f", "html_url": "https://github.com/rust-lang/rust/commit/9c8cdb2923a69177017165a4cdb0e1ea673fc49f"}, {"sha": "5a21f42cb7f193663fa7a3e95f27e4bf805b5be2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2", "html_url": "https://github.com/rust-lang/rust/commit/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "3b4b3998c574531ee3cd16afaaf8540a0d2be24b", "filename": "src/librustc/util/fs.rs", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/388db666f42f31ce6f7f72a9dd1f737e9b58d443/src%2Flibrustc%2Futil%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/388db666f42f31ce6f7f72a9dd1f737e9b58d443/src%2Flibrustc%2Futil%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Ffs.rs?ref=388db666f42f31ce6f7f72a9dd1f737e9b58d443", "patch": "@@ -31,7 +31,7 @@ use std::io;\n //   https://github.com/rust-lang/rust/issues/25505#issuecomment-102876737\n pub fn fix_windows_verbatim_for_gcc(p: &Path) -> PathBuf {\n     if !cfg!(windows) {\n-        return p.to_path_buf()\n+        return p.to_path_buf();\n     }\n     let mut components = p.components();\n     let prefix = match components.next() {\n@@ -58,7 +58,7 @@ pub fn fix_windows_verbatim_for_gcc(p: &Path) -> PathBuf {\n \n pub enum LinkOrCopy {\n     Link,\n-    Copy\n+    Copy,\n }\n \n /// Copy `p` into `q`, preferring to use hard-linking if possible. If\n@@ -76,7 +76,35 @@ pub fn link_or_copy<P: AsRef<Path>, Q: AsRef<Path>>(p: P, q: Q) -> io::Result<Li\n         Err(_) => {\n             match fs::copy(p, q) {\n                 Ok(_) => Ok(LinkOrCopy::Copy),\n-                Err(e) => Err(e)\n+                Err(e) => Err(e),\n+            }\n+        }\n+    }\n+}\n+\n+#[derive(Debug)]\n+pub enum RenameOrCopyRemove {\n+    Rename,\n+    CopyRemove,\n+}\n+\n+/// Rename `p` into `q`, preferring to use `rename` if possible.\n+/// If `rename` fails (rename may fail for reasons such as crossing\n+/// filesystem), fallback to copy & remove\n+pub fn rename_or_copy_remove<P: AsRef<Path>, Q: AsRef<Path>>(p: P,\n+                                                             q: Q)\n+                                                             -> io::Result<RenameOrCopyRemove> {\n+    let p = p.as_ref();\n+    let q = q.as_ref();\n+    match fs::rename(p, q) {\n+        Ok(()) => Ok(RenameOrCopyRemove::Rename),\n+        Err(_) => {\n+            match fs::copy(p, q) {\n+                Ok(_) => {\n+                    fs::remove_file(p)?;\n+                    Ok(RenameOrCopyRemove::CopyRemove)\n+                }\n+                Err(e) => Err(e),\n             }\n         }\n     }\n@@ -93,8 +121,7 @@ pub fn create_dir_racy(path: &Path) -> io::Result<()> {\n     }\n     match path.parent() {\n         Some(p) => try!(create_dir_racy(p)),\n-        None => return Err(io::Error::new(io::ErrorKind::Other,\n-                                          \"failed to create whole tree\")),\n+        None => return Err(io::Error::new(io::ErrorKind::Other, \"failed to create whole tree\")),\n     }\n     match fs::create_dir(path) {\n         Ok(()) => Ok(()),"}, {"sha": "33bf4d5276adf23e7f9aa8b0d3204bc8483660a0", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/388db666f42f31ce6f7f72a9dd1f737e9b58d443/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/388db666f42f31ce6f7f72a9dd1f737e9b58d443/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=388db666f42f31ce6f7f72a9dd1f737e9b58d443", "patch": "@@ -22,6 +22,7 @@ use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, TyCtxt, Resolutions, GlobalArenas};\n use rustc::util::common::time;\n use rustc::util::nodemap::{NodeSet, NodeMap};\n+use rustc::util::fs::rename_or_copy_remove;\n use rustc_borrowck as borrowck;\n use rustc_incremental::{self, IncrementalHashesMap};\n use rustc_incremental::ich::Fingerprint;\n@@ -1084,10 +1085,9 @@ pub fn phase_5_run_llvm_passes(sess: &Session,\n         // are going to build an executable\n         if sess.opts.output_types.contains_key(&OutputType::Exe) {\n             let f = outputs.path(OutputType::Object);\n-            fs::copy(&f,\n+            rename_or_copy_remove(&f,\n                      f.with_file_name(format!(\"{}.0.o\",\n                                               f.file_stem().unwrap().to_string_lossy()))).unwrap();\n-            fs::remove_file(f).unwrap();\n         }\n \n         // Remove assembly source, unless --save-temps was specified"}]}