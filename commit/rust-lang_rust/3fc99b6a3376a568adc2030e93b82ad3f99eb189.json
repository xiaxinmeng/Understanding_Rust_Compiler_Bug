{"sha": "3fc99b6a3376a568adc2030e93b82ad3f99eb189", "node_id": "C_kwDOAAsO6NoAKDNmYzk5YjZhMzM3NmE1NjhhZGMyMDMwZTkzYjgyYWQzZjk5ZWIxODk", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-19T10:27:37Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-19T10:50:49Z"}, "message": "Update test for `question_mark` to cover `Result`", "tree": {"sha": "1cf6cf73082e5475e78d0678eb5cdcd5d5733863", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cf6cf73082e5475e78d0678eb5cdcd5d5733863"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fc99b6a3376a568adc2030e93b82ad3f99eb189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fc99b6a3376a568adc2030e93b82ad3f99eb189", "html_url": "https://github.com/rust-lang/rust/commit/3fc99b6a3376a568adc2030e93b82ad3f99eb189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fc99b6a3376a568adc2030e93b82ad3f99eb189/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "687f3925da6481d938be0d787808328f8a93fdee", "url": "https://api.github.com/repos/rust-lang/rust/commits/687f3925da6481d938be0d787808328f8a93fdee", "html_url": "https://github.com/rust-lang/rust/commit/687f3925da6481d938be0d787808328f8a93fdee"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "ccb2e5a302e91590feb0ba2af50ae467e00e8115", "filename": "tests/ui/question_mark.fixed", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3fc99b6a3376a568adc2030e93b82ad3f99eb189/tests%2Fui%2Fquestion_mark.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3fc99b6a3376a568adc2030e93b82ad3f99eb189/tests%2Fui%2Fquestion_mark.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.fixed?ref=3fc99b6a3376a568adc2030e93b82ad3f99eb189", "patch": "@@ -104,6 +104,21 @@ fn func() -> Option<i32> {\n     Some(0)\n }\n \n+fn result_func(x: Result<i32, &str>) -> Result<i32, &str> {\n+    let _ = x?;\n+\n+    x?;\n+\n+    // No warning\n+    let y = if let Ok(x) = x {\n+        x\n+    } else {\n+        return Err(\"some error\");\n+    };\n+\n+    Ok(y)\n+}\n+\n fn main() {\n     some_func(Some(42));\n     some_func(None);\n@@ -123,4 +138,6 @@ fn main() {\n     returns_something_similar_to_option(so);\n \n     func();\n+\n+    let _ = result_func(Ok(42));\n }"}, {"sha": "ca3722371f524b53b27ca94f15fd1a46e7d867ca", "filename": "tests/ui/question_mark.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3fc99b6a3376a568adc2030e93b82ad3f99eb189/tests%2Fui%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fc99b6a3376a568adc2030e93b82ad3f99eb189/tests%2Fui%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.rs?ref=3fc99b6a3376a568adc2030e93b82ad3f99eb189", "patch": "@@ -134,6 +134,23 @@ fn func() -> Option<i32> {\n     Some(0)\n }\n \n+fn result_func(x: Result<i32, &str>) -> Result<i32, &str> {\n+    let _ = if let Ok(x) = x { x } else { return x };\n+\n+    if x.is_err() {\n+        return x;\n+    }\n+\n+    // No warning\n+    let y = if let Ok(x) = x {\n+        x\n+    } else {\n+        return Err(\"some error\");\n+    };\n+\n+    Ok(y)\n+}\n+\n fn main() {\n     some_func(Some(42));\n     some_func(None);\n@@ -153,4 +170,6 @@ fn main() {\n     returns_something_similar_to_option(so);\n \n     func();\n+\n+    let _ = result_func(Ok(42));\n }"}, {"sha": "161588cb73cba06797561917e4ee5fe6fa3710d9", "filename": "tests/ui/question_mark.stderr", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3fc99b6a3376a568adc2030e93b82ad3f99eb189/tests%2Fui%2Fquestion_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fc99b6a3376a568adc2030e93b82ad3f99eb189/tests%2Fui%2Fquestion_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.stderr?ref=3fc99b6a3376a568adc2030e93b82ad3f99eb189", "patch": "@@ -100,5 +100,19 @@ LL | |         return None;\n LL | |     }\n    | |_____^ help: replace it with: `f()?;`\n \n-error: aborting due to 11 previous errors\n+error: this if-let-else may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:138:13\n+   |\n+LL |     let _ = if let Ok(x) = x { x } else { return x };\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `x?`\n+\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:140:5\n+   |\n+LL | /     if x.is_err() {\n+LL | |         return x;\n+LL | |     }\n+   | |_____^ help: replace it with: `x?;`\n+\n+error: aborting due to 13 previous errors\n "}]}