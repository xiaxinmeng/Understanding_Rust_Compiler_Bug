{"sha": "8ce45d855ed8aff9b421fcc5089997b9ec0293b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZTQ1ZDg1NWVkOGFmZjliNDIxZmNjNTA4OTk5N2I5ZWMwMjkzYjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-08T15:53:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-08T15:53:38Z"}, "message": "Rollup merge of #69651 - Mark-Simulacrum:black-box-marker, r=eddyb\n\nTry to ensure usize marker does not get merged\n\nThis follows up on [this conversation](https://github.com/rust-lang/rust/pull/69209#discussion_r379911282). However, I'm not confident this is quite correct, so feedback is appreciated, as always.", "tree": {"sha": "943e9ae87dacb152c579b07ef86abb0cde136f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/943e9ae87dacb152c579b07ef86abb0cde136f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ce45d855ed8aff9b421fcc5089997b9ec0293b6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeZRUCCRBK7hj4Ov3rIwAAdHIIACJkVT1uoO8MFl2Sx9GPBeWi\nDSsY3da6ZSUCzctoQArdPY0A6C8BAiiUaKMX99wOIg3Fax7Y0/lrIR/3rwPdFYh4\nEfxhkFGZi+Z9bmjM5BaSnTsy+4z9aWNRh/RTG/NZK0kB+uVyWBoA1CP+vm7FNCBZ\nhompfsEJq7FlTc9glu8O5BudbJs+tTI1NiSHqgsTZS7xJ/HT6CaL5XSB0P5VQ27N\nr4IE3RUCcbDTACEBLcfQvccl0D/L7nwioyCja1LriSfgLShLoUGALv0bIypqZOSp\nna7/UEl+2nFC2DF0vWAHpuZZflef58ribWeCIueuaB9zPl+8kyOPRUTPKFQPflo=\n=ianD\n-----END PGP SIGNATURE-----\n", "payload": "tree 943e9ae87dacb152c579b07ef86abb0cde136f60\nparent c31b7044c1a1fceb9b22813b9e7219967cf478f3\nparent a9259fb7c7f9f6138b6b774679295084f18a24a3\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1583682818 +0100\ncommitter GitHub <noreply@github.com> 1583682818 +0100\n\nRollup merge of #69651 - Mark-Simulacrum:black-box-marker, r=eddyb\n\nTry to ensure usize marker does not get merged\n\nThis follows up on [this conversation](https://github.com/rust-lang/rust/pull/69209#discussion_r379911282). However, I'm not confident this is quite correct, so feedback is appreciated, as always.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ce45d855ed8aff9b421fcc5089997b9ec0293b6", "html_url": "https://github.com/rust-lang/rust/commit/8ce45d855ed8aff9b421fcc5089997b9ec0293b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ce45d855ed8aff9b421fcc5089997b9ec0293b6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c31b7044c1a1fceb9b22813b9e7219967cf478f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c31b7044c1a1fceb9b22813b9e7219967cf478f3", "html_url": "https://github.com/rust-lang/rust/commit/c31b7044c1a1fceb9b22813b9e7219967cf478f3"}, {"sha": "a9259fb7c7f9f6138b6b774679295084f18a24a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9259fb7c7f9f6138b6b774679295084f18a24a3", "html_url": "https://github.com/rust-lang/rust/commit/a9259fb7c7f9f6138b6b774679295084f18a24a3"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "d2cebf593ab09acc7b97fe84588ae79b773b2845", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8ce45d855ed8aff9b421fcc5089997b9ec0293b6/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ce45d855ed8aff9b421fcc5089997b9ec0293b6/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=8ce45d855ed8aff9b421fcc5089997b9ec0293b6", "patch": "@@ -264,8 +264,18 @@ pub struct ArgumentV1<'a> {\n // could have been miscompiled. In practice, we never call as_usize on non-usize\n // containing data (as a matter of static generation of the formatting\n // arguments), so this is merely an additional check.\n+//\n+// We primarily want to ensure that the function pointer at `USIZE_MARKER` has\n+// an address corresponding *only* to functions that also take `&usize` as their\n+// first argument. The read_volatile here ensures that we can safely ready out a\n+// usize from the passed reference and that this address does not point at a\n+// non-usize taking function.\n #[unstable(feature = \"fmt_internals\", reason = \"internal to format_args!\", issue = \"none\")]\n-static USIZE_MARKER: fn(&usize, &mut Formatter<'_>) -> Result = |_, _| loop {};\n+static USIZE_MARKER: fn(&usize, &mut Formatter<'_>) -> Result = |ptr, _| {\n+    // SAFETY: ptr is a reference\n+    let _v: usize = unsafe { crate::ptr::read_volatile(ptr) };\n+    loop {}\n+};\n \n impl<'a> ArgumentV1<'a> {\n     #[doc(hidden)]"}]}