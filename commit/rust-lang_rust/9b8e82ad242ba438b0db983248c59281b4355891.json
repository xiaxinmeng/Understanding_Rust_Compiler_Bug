{"sha": "9b8e82ad242ba438b0db983248c59281b4355891", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliOGU4MmFkMjQyYmE0MzhiMGRiOTgzMjQ4YzU5MjgxYjQzNTU4OTE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-15T17:05:15Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-24T10:36:32Z"}, "message": "Use correct alignment checks for scalars and zsts, too", "tree": {"sha": "819a991d8b91254c8fbb2c7ecccb4054768b24a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/819a991d8b91254c8fbb2c7ecccb4054768b24a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b8e82ad242ba438b0db983248c59281b4355891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b8e82ad242ba438b0db983248c59281b4355891", "html_url": "https://github.com/rust-lang/rust/commit/9b8e82ad242ba438b0db983248c59281b4355891", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b8e82ad242ba438b0db983248c59281b4355891/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "927c5aab47c624fe9f4cf02289a2acccd425432c", "url": "https://api.github.com/repos/rust-lang/rust/commits/927c5aab47c624fe9f4cf02289a2acccd425432c", "html_url": "https://github.com/rust-lang/rust/commit/927c5aab47c624fe9f4cf02289a2acccd425432c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4ec01b6ca1032e28810b0ff5bc390ad901524aaa", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b8e82ad242ba438b0db983248c59281b4355891/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b8e82ad242ba438b0db983248c59281b4355891/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=9b8e82ad242ba438b0db983248c59281b4355891", "patch": "@@ -271,13 +271,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         if mplace.layout.is_zst() {\n             // Not all ZSTs have a layout we would handle below, so just short-circuit them\n             // all here.\n-            self.memory.check_align(ptr, ptr_align)?;\n+            self.memory.check_align(ptr, ptr_align.min(mplace.layout.align))?;\n             return Ok(Some(Immediate::Scalar(Scalar::zst().into())));\n         }\n \n         // check for integer pointers before alignment to report better errors\n         let ptr = ptr.to_ptr()?;\n-        self.memory.check_align(ptr.into(), ptr_align)?;\n+        self.memory.check_align(ptr.into(), ptr_align.min(mplace.layout.align))?;\n         match mplace.layout.abi {\n             layout::Abi::Scalar(..) => {\n                 let scalar = self.memory"}]}