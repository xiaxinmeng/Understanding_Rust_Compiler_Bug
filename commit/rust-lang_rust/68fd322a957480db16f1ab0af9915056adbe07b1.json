{"sha": "68fd322a957480db16f1ab0af9915056adbe07b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZmQzMjJhOTU3NDgwZGIxNmYxYWIwYWY5OTE1MDU2YWRiZTA3YjE=", "commit": {"author": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-25T01:57:44Z"}, "committer": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-25T01:57:44Z"}, "message": "Change to `Elaborate::None` inside `compute_projection`", "tree": {"sha": "eaca9c66603ea590561fee5feda1999c44db5336", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaca9c66603ea590561fee5feda1999c44db5336"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68fd322a957480db16f1ab0af9915056adbe07b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68fd322a957480db16f1ab0af9915056adbe07b1", "html_url": "https://github.com/rust-lang/rust/commit/68fd322a957480db16f1ab0af9915056adbe07b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68fd322a957480db16f1ab0af9915056adbe07b1/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "373e909d07344f18b6e8ce443d4a4c484afc5c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/373e909d07344f18b6e8ce443d4a4c484afc5c92", "html_url": "https://github.com/rust-lang/rust/commit/373e909d07344f18b6e8ce443d4a4c484afc5c92"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6d9e648452fd345fb8732a4660892e70fc06c705", "filename": "src/librustc/ty/wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68fd322a957480db16f1ab0af9915056adbe07b1/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fd322a957480db16f1ab0af9915056adbe07b1/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=68fd322a957480db16f1ab0af9915056adbe07b1", "patch": "@@ -198,7 +198,7 @@ impl<'a, 'gcx, 'tcx> WfPredicates<'a, 'gcx, 'tcx> {\n         // WF and (b) the trait-ref holds.  (It may also be\n         // normalizable and be WF that way.)\n         let trait_ref = data.trait_ref(self.infcx.tcx);\n-        self.compute_trait_ref(&trait_ref, Elaborate::All);\n+        self.compute_trait_ref(&trait_ref, Elaborate::None);\n \n         if !data.has_escaping_regions() {\n             let predicate = trait_ref.to_predicate();"}]}