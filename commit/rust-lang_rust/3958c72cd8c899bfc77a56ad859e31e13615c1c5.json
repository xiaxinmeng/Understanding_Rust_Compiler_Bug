{"sha": "3958c72cd8c899bfc77a56ad859e31e13615c1c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NThjNzJjZDhjODk5YmZjNzdhNTZhZDg1OWUzMWUxMzYxNWMxYzU=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-08T01:32:45Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-08T01:32:45Z"}, "message": "Some cleanup", "tree": {"sha": "a2e0f3f44b8788c7e38e9a9a931adfa3c24c0a95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2e0f3f44b8788c7e38e9a9a931adfa3c24c0a95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3958c72cd8c899bfc77a56ad859e31e13615c1c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3958c72cd8c899bfc77a56ad859e31e13615c1c5", "html_url": "https://github.com/rust-lang/rust/commit/3958c72cd8c899bfc77a56ad859e31e13615c1c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3958c72cd8c899bfc77a56ad859e31e13615c1c5/comments", "author": null, "committer": null, "parents": [{"sha": "4739953b84b814de3b2b80f273f6292c33e33010", "url": "https://api.github.com/repos/rust-lang/rust/commits/4739953b84b814de3b2b80f273f6292c33e33010", "html_url": "https://github.com/rust-lang/rust/commit/4739953b84b814de3b2b80f273f6292c33e33010"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "5bcc5ea9df824ebb94d22cee6ddc782e6b5a56fe", "filename": "src/rt/memory.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3958c72cd8c899bfc77a56ad859e31e13615c1c5/src%2Frt%2Fmemory.h", "raw_url": "https://github.com/rust-lang/rust/raw/3958c72cd8c899bfc77a56ad859e31e13615c1c5/src%2Frt%2Fmemory.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory.h?ref=3958c72cd8c899bfc77a56ad859e31e13615c1c5", "patch": "@@ -2,13 +2,6 @@\n #ifndef MEMORY_H\n #define MEMORY_H\n \n-#if 0\n-inline void operator delete(void *mem, rust_task *task) {\n-    task->free(mem);\n-    return;\n-}\n-#endif\n-\n // FIXME: It would be really nice to be able to get rid of this.\n inline void *operator new[](size_t size, rust_task *task) {\n     return task->malloc(size);"}, {"sha": "99d06f6265f2e0a56759972488b5d4a8cb77adb5", "filename": "src/rt/rust_chan.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3958c72cd8c899bfc77a56ad859e31e13615c1c5/src%2Frt%2Frust_chan.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3958c72cd8c899bfc77a56ad859e31e13615c1c5/src%2Frt%2Frust_chan.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_chan.cpp?ref=3958c72cd8c899bfc77a56ad859e31e13615c1c5", "patch": "@@ -88,7 +88,7 @@ void rust_chan::send(void *sptr) {\n         buffer.dequeue(NULL);\n     } else {\n         rust_port *target_port = port->referent();\n-        scoped_lock right(target_port->lock);\n+        scoped_lock with(target_port->lock);\n         if (target_port->task->blocked_on(target_port)) {\n             DLOG(sched, comm, \"dequeued in rendezvous_ptr\");\n             buffer.dequeue(target_port->task->rendezvous_ptr);"}]}