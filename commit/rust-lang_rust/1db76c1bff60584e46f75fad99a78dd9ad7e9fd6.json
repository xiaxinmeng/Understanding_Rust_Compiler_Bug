{"sha": "1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYjc2YzFiZmY2MDU4NGU0NmY3NWZhZDk5YTc4ZGQ5YWQ3ZTlmZDY=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2019-04-14T22:53:51Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2019-04-14T22:55:14Z"}, "message": "rustdoc: Remove default keyword from re-exported trait methods", "tree": {"sha": "65bfdf8fd37df4ed3d663ce577107d609b56f735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65bfdf8fd37df4ed3d663ce577107d609b56f735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "html_url": "https://github.com/rust-lang/rust/commit/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a612b2348212d84fa0b839a4c18e4a13fafaf05", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a612b2348212d84fa0b839a4c18e4a13fafaf05", "html_url": "https://github.com/rust-lang/rust/commit/9a612b2348212d84fa0b839a4c18e4a13fafaf05"}], "stats": {"total": 83, "additions": 67, "deletions": 16}, "files": [{"sha": "80e796b0af73216047fa42c5ee6ec5eccc056a77", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "patch": "@@ -2325,6 +2325,10 @@ impl<'tcx> Clean<Item> for ty::AssociatedItem {\n                     } else {\n                         hir::Constness::NotConst\n                     };\n+                    let defaultness = match self.container {\n+                        ty::ImplContainer(_) => Some(self.defaultness),\n+                        ty::TraitContainer(_) => None,\n+                    };\n                     MethodItem(Method {\n                         generics,\n                         decl,\n@@ -2334,7 +2338,7 @@ impl<'tcx> Clean<Item> for ty::AssociatedItem {\n                             constness,\n                             asyncness: hir::IsAsync::NotAsync,\n                         },\n-                        defaultness: Some(self.defaultness),\n+                        defaultness,\n                         all_types,\n                         ret_types,\n                     })"}, {"sha": "3d6ebef5a1d5b095ddd5618200c50ceaac024463", "filename": "src/test/rustdoc/default-trait-method.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Ftest%2Frustdoc%2Fdefault-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Ftest%2Frustdoc%2Fdefault-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdefault-trait-method.rs?ref=1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "patch": "@@ -0,0 +1,26 @@\n+#![feature(specialization)]\n+\n+// @has default_trait_method/trait.Item.html\n+// @has - '//*[@id=\"tymethod.foo\"]' 'fn foo()'\n+// @!has - '//*[@id=\"tymethod.foo\"]' 'default fn foo()'\n+// @has - '//*[@id=\"tymethod.bar\"]' 'fn bar()'\n+// @!has - '//*[@id=\"tymethod.bar\"]' 'default fn bar()'\n+// @has - '//*[@id=\"method.baz\"]' 'fn baz()'\n+// @!has - '//*[@id=\"method.baz\"]' 'default fn baz()'\n+pub trait Item {\n+    fn foo();\n+    fn bar();\n+    fn baz() {}\n+}\n+\n+// @has default_trait_method/struct.Foo.html\n+// @has - '//*[@id=\"method.foo\"]' 'default fn foo()'\n+// @has - '//*[@id=\"method.bar\"]' 'fn bar()'\n+// @!has - '//*[@id=\"method.bar\"]' 'default fn bar()'\n+// @has - '//*[@id=\"method.baz\"]' 'fn baz()'\n+// @!has - '//*[@id=\"method.baz\"]' 'default fn baz()'\n+pub struct Foo;\n+impl Item for Foo {\n+    default fn foo() {}\n+    fn bar() {}\n+}"}, {"sha": "dfbd8f2210fa4ef912e28cf413e5755c7a771855", "filename": "src/test/rustdoc/default_trait_method.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9a612b2348212d84fa0b839a4c18e4a13fafaf05/src%2Ftest%2Frustdoc%2Fdefault_trait_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a612b2348212d84fa0b839a4c18e4a13fafaf05/src%2Ftest%2Frustdoc%2Fdefault_trait_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdefault_trait_method.rs?ref=9a612b2348212d84fa0b839a4c18e4a13fafaf05", "patch": "@@ -1,15 +0,0 @@\n-#![feature(specialization)]\n-\n-pub trait Item {\n-    fn foo();\n-    fn bar();\n-}\n-\n-// @has default_trait_method/trait.Item.html\n-// @has - '//*[@id=\"method.foo\"]' 'default fn foo()'\n-// @has - '//*[@id=\"method.bar\"]' 'fn bar()'\n-// @!has - '//*[@id=\"method.bar\"]' 'default fn bar()'\n-impl<T: ?Sized> Item for T {\n-    default fn foo() {}\n-    fn bar() {}\n-}"}, {"sha": "ce60bbfb4b0de0e6f07e6a343a585cd2fdc33a08", "filename": "src/test/rustdoc/inline_cross/auxiliary/default-trait-method.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fdefault-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fdefault-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fdefault-trait-method.rs?ref=1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "patch": "@@ -0,0 +1,16 @@\n+#![feature(specialization)]\n+\n+#![crate_name = \"foo\"]\n+\n+pub trait Item {\n+    fn foo();\n+    fn bar();\n+    fn baz() {}\n+}\n+\n+pub struct Foo;\n+\n+impl Item for Foo {\n+    default fn foo() {}\n+    fn bar() {}\n+}"}, {"sha": "a4ec73a127d4e34a61cfdf74024e87afd2a89aee", "filename": "src/test/rustdoc/inline_cross/default-trait-method.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Ftest%2Frustdoc%2Finline_cross%2Fdefault-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db76c1bff60584e46f75fad99a78dd9ad7e9fd6/src%2Ftest%2Frustdoc%2Finline_cross%2Fdefault-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fdefault-trait-method.rs?ref=1db76c1bff60584e46f75fad99a78dd9ad7e9fd6", "patch": "@@ -0,0 +1,20 @@\n+// aux-build:default-trait-method.rs\n+\n+extern crate foo;\n+\n+// @has default_trait_method/trait.Item.html\n+// @has - '//*[@id=\"tymethod.foo\"]' 'fn foo()'\n+// @!has - '//*[@id=\"tymethod.foo\"]' 'default fn foo()'\n+// @has - '//*[@id=\"tymethod.bar\"]' 'fn bar()'\n+// @!has - '//*[@id=\"tymethod.bar\"]' 'default fn bar()'\n+// @has - '//*[@id=\"method.baz\"]' 'fn baz()'\n+// @!has - '//*[@id=\"method.baz\"]' 'default fn baz()'\n+pub use foo::Item;\n+\n+// @has default_trait_method/struct.Foo.html\n+// @has - '//*[@id=\"method.foo\"]' 'default fn foo()'\n+// @has - '//*[@id=\"method.bar\"]' 'fn bar()'\n+// @!has - '//*[@id=\"method.bar\"]' 'default fn bar()'\n+// @has - '//*[@id=\"method.baz\"]' 'fn baz()'\n+// @!has - '//*[@id=\"method.baz\"]' 'default fn baz()'\n+pub use foo::Foo;"}]}