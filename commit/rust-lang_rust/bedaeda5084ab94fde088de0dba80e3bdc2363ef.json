{"sha": "bedaeda5084ab94fde088de0dba80e3bdc2363ef", "node_id": "C_kwDOAAsO6NoAKGJlZGFlZGE1MDg0YWI5NGZkZTA4OGRlMGRiYTgwZTNiZGMyMzYzZWY", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2023-01-25T06:46:19Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T03:03:22Z"}, "message": "create and use GlobalAlloc::address_space", "tree": {"sha": "dc4c1da3678c1156c35a0dcdb3743406a570b672", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc4c1da3678c1156c35a0dcdb3743406a570b672"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bedaeda5084ab94fde088de0dba80e3bdc2363ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bedaeda5084ab94fde088de0dba80e3bdc2363ef", "html_url": "https://github.com/rust-lang/rust/commit/bedaeda5084ab94fde088de0dba80e3bdc2363ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bedaeda5084ab94fde088de0dba80e3bdc2363ef/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bf06701693934ded0774f0c17f45943cdbe44f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf06701693934ded0774f0c17f45943cdbe44f3", "html_url": "https://github.com/rust-lang/rust/commit/7bf06701693934ded0774f0c17f45943cdbe44f3"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "b651b60924f7a290aa1241342ec4e4121b446d26", "filename": "src/consts.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bedaeda5084ab94fde088de0dba80e3bdc2363ef/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bedaeda5084ab94fde088de0dba80e3bdc2363ef/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=bedaeda5084ab94fde088de0dba80e3bdc2363ef", "patch": "@@ -7,9 +7,9 @@ use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs}\n use rustc_middle::mir::mono::MonoItem;\n use rustc_middle::ty::{self, Instance, Ty};\n use rustc_middle::ty::layout::LayoutOf;\n-use rustc_middle::mir::interpret::{self, ConstAllocation, ErrorHandled, GlobalAlloc, Scalar as InterpScalar, read_target_uint};\n+use rustc_middle::mir::interpret::{self, ConstAllocation, ErrorHandled, Scalar as InterpScalar, read_target_uint};\n use rustc_span::def_id::DefId;\n-use rustc_target::abi::{self, AddressSpace, Align, HasDataLayout, Primitive, Size, WrappingRange};\n+use rustc_target::abi::{self, Align, HasDataLayout, Primitive, Size, WrappingRange};\n \n use crate::base;\n use crate::context::CodegenCx;\n@@ -307,12 +307,7 @@ pub fn const_alloc_to_gcc<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, alloc: ConstAl\n             .expect(\"const_alloc_to_llvm: could not read relocation pointer\")\n             as u64;\n \n-        let address_space = match cx.tcx.global_alloc(alloc_id) {\n-            GlobalAlloc::Function(..) => cx.data_layout().instruction_address_space,\n-            GlobalAlloc::Static(..) | GlobalAlloc::Memory(..) | GlobalAlloc::VTable(..) => {\n-                AddressSpace::DATA\n-            }\n-        };\n+        let address_space = cx.tcx.global_alloc(alloc_id).address_space(cx);\n \n         llvals.push(cx.scalar_to_backend(\n             InterpScalar::from_pointer("}]}