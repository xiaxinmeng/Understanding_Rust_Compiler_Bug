{"sha": "a376f46862cef319ca6bb59b9b571e5e0ae55d8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNzZmNDY4NjJjZWYzMTljYTZiYjU5YjliNTcxZTVlMGFlNTVkOGQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-23T02:22:12Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-27T04:29:35Z"}, "message": "librustc: Stop parsing `[T * N]`.", "tree": {"sha": "710572c49347fa6aaf7554f3b85042eae5098ebb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/710572c49347fa6aaf7554f3b85042eae5098ebb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a376f46862cef319ca6bb59b9b571e5e0ae55d8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a376f46862cef319ca6bb59b9b571e5e0ae55d8d", "html_url": "https://github.com/rust-lang/rust/commit/a376f46862cef319ca6bb59b9b571e5e0ae55d8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a376f46862cef319ca6bb59b9b571e5e0ae55d8d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "142dbd65da9ae168c198162f0e1eec1c960e91f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/142dbd65da9ae168c198162f0e1eec1c960e91f5", "html_url": "https://github.com/rust-lang/rust/commit/142dbd65da9ae168c198162f0e1eec1c960e91f5"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5ead4f3a5278fcb440394ec232f7bdf13c5dae02", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a376f46862cef319ca6bb59b9b571e5e0ae55d8d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a376f46862cef319ca6bb59b9b571e5e0ae55d8d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=a376f46862cef319ca6bb59b9b571e5e0ae55d8d", "patch": "@@ -78,7 +78,7 @@ pub enum LangItem {\n }\n \n pub struct LanguageItems {\n-    items: [ Option<def_id> * 35 ]\n+    items: [Option<def_id>, ..35]\n }\n \n pub impl LanguageItems {"}, {"sha": "75a3d9ab2b14aadfea93cb64b7a3d18e777be1c5", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a376f46862cef319ca6bb59b9b571e5e0ae55d8d/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a376f46862cef319ca6bb59b9b571e5e0ae55d8d/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=a376f46862cef319ca6bb59b9b571e5e0ae55d8d", "patch": "@@ -61,6 +61,7 @@ pub enum ObsoleteSyntax {\n     ObsoletePurity,\n     ObsoleteStaticMethod,\n     ObsoleteConstItem,\n+    ObsoleteFixedLengthVectorType,\n }\n \n impl to_bytes::IterBytes for ObsoleteSyntax {\n@@ -209,6 +210,10 @@ pub impl Parser {\n                 \"`const` items are now `static` items; replace `const` with \\\n                  `static`\"\n             ),\n+            ObsoleteFixedLengthVectorType => (\n+                \"fixed-length vector notation\",\n+                \"instead of `[T * N]`, write `[T, ..N]`\"\n+            ),\n         };\n \n         self.report(sp, kind, kind_str, desc);"}, {"sha": "962607ffec429d1e6b15279eb833bf83abd59acb", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a376f46862cef319ca6bb59b9b571e5e0ae55d8d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a376f46862cef319ca6bb59b9b571e5e0ae55d8d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a376f46862cef319ca6bb59b9b571e5e0ae55d8d", "patch": "@@ -81,7 +81,7 @@ use parse::obsolete::{ObsoleteBareFnType, ObsoleteNewtypeEnum};\n use parse::obsolete::{ObsoleteMode, ObsoleteImplicitSelf};\n use parse::obsolete::{ObsoleteLifetimeNotation, ObsoleteConstManagedPointer};\n use parse::obsolete::{ObsoletePurity, ObsoleteStaticMethod};\n-use parse::obsolete::{ObsoleteConstItem};\n+use parse::obsolete::{ObsoleteConstItem, ObsoleteFixedLengthVectorType};\n use parse::prec::{as_prec, token_to_binop};\n use parse::token::{can_begin_expr, is_ident, is_ident_or_path};\n use parse::token::{is_plain_ident, INTERPOLATED, special_idents};\n@@ -825,7 +825,7 @@ pub impl Parser {\n \n     fn maybe_parse_fixed_vstore(&self) -> Option<@ast::expr> {\n         if self.eat(&token::BINOP(token::STAR)) {\n-            // XXX: Obsolete; remove after snapshot.\n+            self.obsolete(*self.last_span, ObsoleteFixedLengthVectorType);\n             Some(self.parse_expr())\n         } else if *self.token == token::COMMA &&\n                 self.look_ahead(1) == token::DOTDOT {"}]}