{"sha": "a3f5d8aea1e43a1c5b0814dac407e6ddfab07417", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZjVkOGFlYTFlNDNhMWM1YjA4MTRkYWM0MDdlNmRkZmFiMDc0MTc=", "commit": {"author": {"name": "Kaiyin Zhong", "email": "kindlychung@gmail.com", "date": "2016-04-15T16:12:52Z"}, "committer": {"name": "Kaiyin Zhong", "email": "kindlychung@gmail.com", "date": "2016-04-15T16:12:52Z"}, "message": "make the borrowing example more concrete", "tree": {"sha": "6f82cf84916504179bf08838de6e24466235c742", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f82cf84916504179bf08838de6e24466235c742"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417", "html_url": "https://github.com/rust-lang/rust/commit/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417/comments", "author": {"login": "kindlychung", "id": 995761, "node_id": "MDQ6VXNlcjk5NTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/995761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kindlychung", "html_url": "https://github.com/kindlychung", "followers_url": "https://api.github.com/users/kindlychung/followers", "following_url": "https://api.github.com/users/kindlychung/following{/other_user}", "gists_url": "https://api.github.com/users/kindlychung/gists{/gist_id}", "starred_url": "https://api.github.com/users/kindlychung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kindlychung/subscriptions", "organizations_url": "https://api.github.com/users/kindlychung/orgs", "repos_url": "https://api.github.com/users/kindlychung/repos", "events_url": "https://api.github.com/users/kindlychung/events{/privacy}", "received_events_url": "https://api.github.com/users/kindlychung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kindlychung", "id": 995761, "node_id": "MDQ6VXNlcjk5NTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/995761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kindlychung", "html_url": "https://github.com/kindlychung", "followers_url": "https://api.github.com/users/kindlychung/followers", "following_url": "https://api.github.com/users/kindlychung/following{/other_user}", "gists_url": "https://api.github.com/users/kindlychung/gists{/gist_id}", "starred_url": "https://api.github.com/users/kindlychung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kindlychung/subscriptions", "organizations_url": "https://api.github.com/users/kindlychung/orgs", "repos_url": "https://api.github.com/users/kindlychung/repos", "events_url": "https://api.github.com/users/kindlychung/events{/privacy}", "received_events_url": "https://api.github.com/users/kindlychung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b3684d009c0e243a282c9a573ef5e29a2681d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/74b3684d009c0e243a282c9a573ef5e29a2681d9", "html_url": "https://github.com/rust-lang/rust/commit/74b3684d009c0e243a282c9a573ef5e29a2681d9"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "3a1f3f004be622eedbcec3c8bed94c8c117f3596", "filename": "src/doc/book/references-and-borrowing.md", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md", "raw_url": "https://github.com/rust-lang/rust/raw/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md?ref=a3f5d8aea1e43a1c5b0814dac407e6ddfab07417", "patch": "@@ -62,19 +62,27 @@ This is not idiomatic Rust, however, as it doesn\u2019t take advantage of borrowing\n the first step:\n \n ```rust\n-fn foo(v1: &Vec<i32>, v2: &Vec<i32>) -> i32 {\n-    // do stuff with v1 and v2\n-\n-    // return the answer\n-    42\n+fn main() {\n+    // Don't worry if you don't understand how `fold` works, the point here is that an immutable reference is borrowed.\n+    fn sum_vec(v: &Vec<i32>) -> i32 {\n+        return v.iter().fold(0, |a, &b| a + b);\n+    }\n+    // Borrow two vectors and and sum them.\n+    // This kind of borrowing does not allow mutation to the borrowed.\n+    fn foo(v1: &Vec<i32>, v2: &Vec<i32>) -> i32 {\n+        // do stuff with v1 and v2\n+        let s1 = sum_vec(v1);\n+        let s2 = sum_vec(v2);\n+        // return the answer\n+        s1 + s2\n+    }\n+\n+    let v1 = vec![1, 2, 3];\n+    let v2 = vec![4, 5, 6];\n+\n+    let answer = foo(&v1, &v2);\n+    println!(\"{}\", answer);\n }\n-\n-let v1 = vec![1, 2, 3];\n-let v2 = vec![1, 2, 3];\n-\n-let answer = foo(&v1, &v2);\n-\n-// we can use v1 and v2 here!\n ```\n \n Instead of taking `Vec<i32>`s as our arguments, we take a reference:"}]}