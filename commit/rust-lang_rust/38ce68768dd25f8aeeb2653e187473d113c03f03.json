{"sha": "38ce68768dd25f8aeeb2653e187473d113c03f03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4Y2U2ODc2OGRkMjVmOGFlZWIyNjUzZTE4NzQ3M2QxMTNjMDNmMDM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T01:59:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-05T01:59:35Z"}, "message": "Rollup merge of #63549 - sfanxiang:rev-rposition, r=scottmcm\n\nRev::rposition counts from the wrong end\n\nIntroduced in #43074.\n\ncc @SimonSapin", "tree": {"sha": "ee51dc5dfc51c2b570ef3f3d56616478840971d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee51dc5dfc51c2b570ef3f3d56616478840971d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38ce68768dd25f8aeeb2653e187473d113c03f03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdcGwHCRBK7hj4Ov3rIwAAdHIIAIqwGogkibrAYT793Lm/DI4s\nG6jUb6Jr6hGCkQwxRX7gswopfZw2WZW/Qejcm/1zx+Og9An4y9vS65TNri8McAQW\nVaJJuoIK2DrQXb7YZX+k7QV5b3T2XldQ07Mj83jvEoK4oT4aTOATo3O9NUtNf2E8\nXJTzk6Vipbec+lcJg33XlivwbVDN1N2vywHPqaAmypgQiHXeMfXEBRUnQbAtYU6+\nnjyXrYEOKlukh29mOiKd6c6bgB7BnDlHbeu73vk6DWQQGFJvIuYvavhWhjKCHyWH\nRhbD6YUo+EoaXYtXh2evj4nTzEayitue/+pyAX6ofrV8M/gnIoGSTJPdrYa9HQk=\n=DkXW\n-----END PGP SIGNATURE-----\n", "payload": "tree ee51dc5dfc51c2b570ef3f3d56616478840971d7\nparent ee437eb5d45a757f9cfd156de1c1db988c60650a\nparent 0e597d4c479b4533e38016b1adbe565b44aab922\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567648775 +0200\ncommitter GitHub <noreply@github.com> 1567648775 +0200\n\nRollup merge of #63549 - sfanxiang:rev-rposition, r=scottmcm\n\nRev::rposition counts from the wrong end\n\nIntroduced in #43074.\n\ncc @SimonSapin\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38ce68768dd25f8aeeb2653e187473d113c03f03", "html_url": "https://github.com/rust-lang/rust/commit/38ce68768dd25f8aeeb2653e187473d113c03f03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38ce68768dd25f8aeeb2653e187473d113c03f03/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee437eb5d45a757f9cfd156de1c1db988c60650a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee437eb5d45a757f9cfd156de1c1db988c60650a", "html_url": "https://github.com/rust-lang/rust/commit/ee437eb5d45a757f9cfd156de1c1db988c60650a"}, {"sha": "0e597d4c479b4533e38016b1adbe565b44aab922", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e597d4c479b4533e38016b1adbe565b44aab922", "html_url": "https://github.com/rust-lang/rust/commit/0e597d4c479b4533e38016b1adbe565b44aab922"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "8e1ac6082c8a8fa98de57c097e8c7d762a6dc088", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/38ce68768dd25f8aeeb2653e187473d113c03f03/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38ce68768dd25f8aeeb2653e187473d113c03f03/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=38ce68768dd25f8aeeb2653e187473d113c03f03", "patch": "@@ -66,13 +66,6 @@ impl<I> Iterator for Rev<I> where I: DoubleEndedIterator {\n     {\n         self.iter.rfind(predicate)\n     }\n-\n-    #[inline]\n-    fn rposition<P>(&mut self, predicate: P) -> Option<usize> where\n-        P: FnMut(Self::Item) -> bool\n-    {\n-        self.iter.position(predicate)\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "8e0658d87c1fb466badfff3bb8c6b4d73797ed3d", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38ce68768dd25f8aeeb2653e187473d113c03f03/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38ce68768dd25f8aeeb2653e187473d113c03f03/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=38ce68768dd25f8aeeb2653e187473d113c03f03", "patch": "@@ -1688,6 +1688,12 @@ fn test_rposition() {\n     assert!(v.iter().rposition(g).is_none());\n }\n \n+#[test]\n+fn test_rev_rposition() {\n+    let v = [0, 0, 1, 1];\n+    assert_eq!(v.iter().rev().rposition(|&x| x == 1), Some(1));\n+}\n+\n #[test]\n #[should_panic]\n fn test_rposition_panic() {"}]}