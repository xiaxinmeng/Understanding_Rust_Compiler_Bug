{"sha": "79a8499f77dcd22d5d43fad88300bc094af9f3f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YTg0OTlmNzdkY2QyMmQ1ZDQzZmFkODgzMDBiYzA5NGFmOWYzZjk=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-01-16T17:30:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-16T17:30:02Z"}, "message": "Rollup merge of #80941 - JohnTitor:ref-mut-pat-in-loops, r=varkor\n\nDo not suggest invalid code in pattern with loop\n\nFixes #80913", "tree": {"sha": "e508a502af10fd9a80ce0995fb45b6714a1bfb2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e508a502af10fd9a80ce0995fb45b6714a1bfb2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79a8499f77dcd22d5d43fad88300bc094af9f3f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgAyKaCRBK7hj4Ov3rIwAAdHIIABCFIW4Dbb6q78P1+UOAU2Rm\nuKEE4CQqyPbHhOcpRV0bDsRZRvn4SKbqv0/NG7TcwP+UEDdOGrNOvEPC0hpNVpr0\nl2z0xvRctUlIHwkG4qOH81y2pI5R8ort+ispklBSBL5RpRjHq2l24Otp26WMVFaz\nbp+zi+ACv2jET5ACZTqtdFLhIPdgxmvqpdnxz0czwr0xd9AwxPg/TrbTkmYK2Zie\nCO4qFu6cluUbjtjx3nhiWddrdU4X9G6jWaO7lyMQShvBNbh79wOlrhtQ+7GYoigz\n0SXa0Rd25CPoDRNAT+cbm8loTrdKaqLsP1izBgG4XaBSxSvfV3XghSkkuosZWow=\n=UL06\n-----END PGP SIGNATURE-----\n", "payload": "tree e508a502af10fd9a80ce0995fb45b6714a1bfb2c\nparent b3aa880cb41129f8a2a11f29a05346757b85301e\nparent 4362da13b128e897712140b3c11397e871e5b2fc\nauthor Mara Bos <m-ou.se@m-ou.se> 1610818202 +0000\ncommitter GitHub <noreply@github.com> 1610818202 +0000\n\nRollup merge of #80941 - JohnTitor:ref-mut-pat-in-loops, r=varkor\n\nDo not suggest invalid code in pattern with loop\n\nFixes #80913\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79a8499f77dcd22d5d43fad88300bc094af9f3f9", "html_url": "https://github.com/rust-lang/rust/commit/79a8499f77dcd22d5d43fad88300bc094af9f3f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79a8499f77dcd22d5d43fad88300bc094af9f3f9/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3aa880cb41129f8a2a11f29a05346757b85301e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3aa880cb41129f8a2a11f29a05346757b85301e", "html_url": "https://github.com/rust-lang/rust/commit/b3aa880cb41129f8a2a11f29a05346757b85301e"}, {"sha": "4362da13b128e897712140b3c11397e871e5b2fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4362da13b128e897712140b3c11397e871e5b2fc", "html_url": "https://github.com/rust-lang/rust/commit/4362da13b128e897712140b3c11397e871e5b2fc"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "a5fb8a1cbe8b78dd6d4537abcadcaba39b862c43", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79a8499f77dcd22d5d43fad88300bc094af9f3f9/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a8499f77dcd22d5d43fad88300bc094af9f3f9/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=79a8499f77dcd22d5d43fad88300bc094af9f3f9", "patch": "@@ -141,6 +141,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             self.add_moved_or_invoked_closure_note(location, used_place, &mut err);\n \n             let mut is_loop_move = false;\n+            let mut in_pattern = false;\n \n             for move_site in &move_site_vec {\n                 let move_out = self.move_data.moves[(*move_site).moi];\n@@ -256,6 +257,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                         \"ref \".to_string(),\n                         Applicability::MachineApplicable,\n                     );\n+                    in_pattern = true;\n                 }\n \n                 if let Some(DesugaringKind::ForLoop(_)) = move_span.desugaring_kind() {\n@@ -302,7 +304,8 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             let place = &self.move_data.move_paths[mpi].place;\n             let ty = place.ty(self.body, self.infcx.tcx).ty;\n \n-            if is_loop_move {\n+            // If we're in pattern, we do nothing in favor of the previous suggestion (#80913).\n+            if is_loop_move & !in_pattern {\n                 if let ty::Ref(_, _, hir::Mutability::Mut) = ty.kind() {\n                     // We have a `&mut` ref, we need to reborrow on each iteration (#62112).\n                     err.span_suggestion_verbose("}, {"sha": "4b42f9d4cd58009c7e22614dae3396354b2bcca8", "filename": "src/test/ui/borrowck/move-in-pattern-mut-in-loop.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79a8499f77dcd22d5d43fad88300bc094af9f3f9/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-pattern-mut-in-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a8499f77dcd22d5d43fad88300bc094af9f3f9/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-pattern-mut-in-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-pattern-mut-in-loop.rs?ref=79a8499f77dcd22d5d43fad88300bc094af9f3f9", "patch": "@@ -0,0 +1,10 @@\n+// Regression test for #80913.\n+\n+fn main() {\n+    let mut x = 42_i32;\n+    let mut opt = Some(&mut x);\n+    for _ in 0..5 {\n+        if let Some(mut _x) = opt {}\n+        //~^ ERROR: use of moved value\n+    }\n+}"}, {"sha": "9373e4d95fccdd83c88df95d2e30c7050870206f", "filename": "src/test/ui/borrowck/move-in-pattern-mut-in-loop.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/79a8499f77dcd22d5d43fad88300bc094af9f3f9/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-pattern-mut-in-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79a8499f77dcd22d5d43fad88300bc094af9f3f9/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-pattern-mut-in-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-pattern-mut-in-loop.stderr?ref=79a8499f77dcd22d5d43fad88300bc094af9f3f9", "patch": "@@ -0,0 +1,15 @@\n+error[E0382]: use of moved value\n+  --> $DIR/move-in-pattern-mut-in-loop.rs:7:21\n+   |\n+LL |         if let Some(mut _x) = opt {}\n+   |                     ^^^^^^ value moved here, in previous iteration of loop\n+   |\n+   = note: move occurs because value has type `&mut i32`, which does not implement the `Copy` trait\n+help: borrow this field in the pattern to avoid moving `opt.0`\n+   |\n+LL |         if let Some(ref mut _x) = opt {}\n+   |                     ^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}]}