{"sha": "797a6c3041f2d06d68267232e312302bb59932a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5N2E2YzMwNDFmMmQwNmQ2ODI2NzIzMmUzMTIzMDJiYjU5OTMyYTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-11T16:14:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-11T16:14:41Z"}, "message": "Merge #2527\n\n2527: Enable tsc builtin lint options  for vscode/extension r=matklad a=saneyuki\n\n* These options are not enabled by `--strict` option and these options make a code more solid.\r\n    * https://www.typescriptlang.org/docs/handbook/compiler-options.html\r\n* For `noUnusedParameters` , we need to tweak tslint option to allow `_bar` style.\n\nCo-authored-by: Tetsuharu OHZEKI <tetsuharu.ohzeki@gmail.com>", "tree": {"sha": "8ecd119d1595aa61c9b3076e285eb71371930e10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ecd119d1595aa61c9b3076e285eb71371930e10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/797a6c3041f2d06d68267232e312302bb59932a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8RXxCRBK7hj4Ov3rIwAAdHIIADKNF5lqFfqCmkr5r3l2tXZh\n9feSIyNpc1w6GZ6zq8jxsd0QrZMBO0PVOFVbVO73J+gcgJuGoeLxzu5jiea6TyxV\nf+D7PrMXPQ/6iWCtADm1WzHfwa0Q5p13GyZgS3Pe8nArXEIVGVpoit6Ex46PPSOk\nsfGtsKSRk78a2d28GFMoBDF+1l6WznB/Zn8YqmUO9JRWASmHqVANm+m1UeFu7ASt\nUAFCkAz331cGbZqco6FDfSOTz6+6FT5uk+IjYujN+Zjr9LVM1cG3IWobZjj8492J\n2suDHISeVsLeOzczO8/P7VWW9Lp4XEA7OGEjQynTTekQwWRbY+SPClX3eRRC15g=\n=BIrk\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ecd119d1595aa61c9b3076e285eb71371930e10\nparent 143484922284b2b3177393706ba27c76a3113292\nparent f0f259bda32a3cf04f45cea946b5d12368454342\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1576080881 +0000\ncommitter GitHub <noreply@github.com> 1576080881 +0000\n\nMerge #2527\n\n2527: Enable tsc builtin lint options  for vscode/extension r=matklad a=saneyuki\n\n* These options are not enabled by `--strict` option and these options make a code more solid.\r\n    * https://www.typescriptlang.org/docs/handbook/compiler-options.html\r\n* For `noUnusedParameters` , we need to tweak tslint option to allow `_bar` style.\n\nCo-authored-by: Tetsuharu OHZEKI <tetsuharu.ohzeki@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/797a6c3041f2d06d68267232e312302bb59932a3", "html_url": "https://github.com/rust-lang/rust/commit/797a6c3041f2d06d68267232e312302bb59932a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/797a6c3041f2d06d68267232e312302bb59932a3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "143484922284b2b3177393706ba27c76a3113292", "url": "https://api.github.com/repos/rust-lang/rust/commits/143484922284b2b3177393706ba27c76a3113292", "html_url": "https://github.com/rust-lang/rust/commit/143484922284b2b3177393706ba27c76a3113292"}, {"sha": "f0f259bda32a3cf04f45cea946b5d12368454342", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0f259bda32a3cf04f45cea946b5d12368454342", "html_url": "https://github.com/rust-lang/rust/commit/f0f259bda32a3cf04f45cea946b5d12368454342"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "2777ced2479f5b14d3c4a618cb95baa90f4a47f5", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -9,7 +9,7 @@ export class TextDocumentContentProvider\n     public syntaxTree: string = 'Not available';\n \n     public provideTextDocumentContent(\n-        uri: vscode.Uri,\n+        _uri: vscode.Uri,\n     ): vscode.ProviderResult<string> {\n         const editor = vscode.window.activeTextEditor;\n         if (editor == null) {"}, {"sha": "17c78280a89a5fc4c09973407090160bbfd342df", "filename": "editors/code/src/commands/expand_macro.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -11,7 +11,7 @@ export class ExpandMacroContentProvider\n     public eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n \n     public provideTextDocumentContent(\n-        uri: vscode.Uri,\n+        _uri: vscode.Uri,\n     ): vscode.ProviderResult<string> {\n         async function handle() {\n             const editor = vscode.window.activeTextEditor;"}, {"sha": "cf980e257854796d121765309238392c5c145ae3", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -73,7 +73,7 @@ function createTask(spec: Runnable): vscode.Task {\n }\n \n let prevRunnable: RunnableQuickPick | undefined;\n-export async function handle() {\n+export async function handle(): Promise<vscode.TaskExecution | undefined> {\n     const editor = vscode.window.activeTextEditor;\n     if (editor == null || editor.document.languageId !== 'rust') {\n         return;\n@@ -105,12 +105,14 @@ export async function handle() {\n         items.push(new RunnableQuickPick(r));\n     }\n     const item = await vscode.window.showQuickPick(items);\n-    if (item) {\n-        item.detail = 'rerun';\n-        prevRunnable = item;\n-        const task = createTask(item.runnable);\n-        return await vscode.tasks.executeTask(task);\n+    if (!item) {\n+        return;\n     }\n+\n+    item.detail = 'rerun';\n+    prevRunnable = item;\n+    const task = createTask(item.runnable);\n+    return await vscode.tasks.executeTask(task);\n }\n \n export async function handleSingle(runnable: Runnable) {\n@@ -178,7 +180,7 @@ export async function startCargoWatch(\n         }\n \n         const label = 'install-cargo-watch';\n-        const taskFinished = new Promise((resolve, reject) => {\n+        const taskFinished = new Promise((resolve, _reject) => {\n             const disposable = vscode.tasks.onDidEndTask(({ execution }) => {\n                 if (execution.task.name === label) {\n                     disposable.dispose();"}, {"sha": "2b25eb705dd35743f432df559326249c34ba4244", "filename": "editors/code/src/test/utils/diagnotics/SuggestedFix.test.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2FSuggestedFix.test.ts", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2FSuggestedFix.test.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2FSuggestedFix.test.ts?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -114,7 +114,8 @@ describe('SuggestedFix', () => {\n \n             const edit = codeAction.edit;\n             if (!edit) {\n-                return assert.fail('Code Action edit unexpectedly missing');\n+                assert.fail('Code Action edit unexpectedly missing');\n+                return;\n             }\n \n             const editEntries = edit.entries();"}, {"sha": "ef09013f413040e763c942dad1bc006a118a1312", "filename": "editors/code/src/test/utils/diagnotics/SuggestedFixCollection.test.ts", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2FSuggestedFixCollection.test.ts", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2FSuggestedFixCollection.test.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2FSuggestedFixCollection.test.ts?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -53,7 +53,8 @@ describe('SuggestedFixCollection', () => {\n \n         const { diagnostics } = codeAction;\n         if (!diagnostics) {\n-            return assert.fail('Diagnostics unexpectedly missing');\n+            assert.fail('Diagnostics unexpectedly missing');\n+            return;\n         }\n \n         assert.strictEqual(diagnostics.length, 1);\n@@ -114,7 +115,8 @@ describe('SuggestedFixCollection', () => {\n         const { diagnostics } = codeAction;\n \n         if (!diagnostics) {\n-            return assert.fail('Diagnostics unexpectedly missing');\n+            assert.fail('Diagnostics unexpectedly missing');\n+            return;\n         }\n \n         // We should be associated with both diagnostics"}, {"sha": "0222dbbaa0e69f94758d74946f8816c6c097161b", "filename": "editors/code/src/test/utils/diagnotics/rust.test.ts", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2Frust.test.ts", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2Frust.test.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2Frust.test.ts?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -120,7 +120,8 @@ describe('mapRustDiagnosticToVsCode', () => {\n         // One related information for the original definition\n         const relatedInformation = diagnostic.relatedInformation;\n         if (!relatedInformation) {\n-            return assert.fail('Related information unexpectedly undefined');\n+            assert.fail('Related information unexpectedly undefined');\n+            return;\n         }\n         assert.strictEqual(relatedInformation.length, 1);\n         const [related] = relatedInformation;\n@@ -154,7 +155,8 @@ describe('mapRustDiagnosticToVsCode', () => {\n         // One related information for the lint definition\n         const relatedInformation = diagnostic.relatedInformation;\n         if (!relatedInformation) {\n-            return assert.fail('Related information unexpectedly undefined');\n+            assert.fail('Related information unexpectedly undefined');\n+            return;\n         }\n         assert.strictEqual(relatedInformation.length, 1);\n         const [related] = relatedInformation;"}, {"sha": "5e11c37751201d2b8e57fa3e88293695cbd8b29a", "filename": "editors/code/tsconfig.json", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Ftsconfig.json", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Ftsconfig.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftsconfig.json?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -7,7 +7,10 @@\n         \"sourceMap\": true,\n         \"rootDir\": \"src\",\n         \"strict\": true,\n-        \"noUnusedLocals\": true\n+        \"noUnusedLocals\": true,\n+        \"noUnusedParameters\": true,\n+        \"noImplicitReturns\": true,\n+        \"noFallthroughCasesInSwitch\": true\n     },\n     \"exclude\": [\"node_modules\", \".vscode-test\"]\n }"}, {"sha": "b69c5574d26535de4edf66c964acf115cecc2be9", "filename": "editors/code/tslint.json", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Ftslint.json", "raw_url": "https://github.com/rust-lang/rust/raw/797a6c3041f2d06d68267232e312302bb59932a3/editors%2Fcode%2Ftslint.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftslint.json?ref=797a6c3041f2d06d68267232e312302bb59932a3", "patch": "@@ -4,6 +4,8 @@\n     \"rules\": {\n         \"quotemark\": [true, \"single\"],\n         \"interface-name\": false,\n-        \"object-literal-sort-keys\": false\n+        \"object-literal-sort-keys\": false,\n+        // Allow `_bar` to sort with tsc's `noUnusedParameters` option\n+        \"variable-name\": [true, \"allow-leading-underscore\"]\n     }\n }"}]}