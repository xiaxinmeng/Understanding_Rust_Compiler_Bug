{"sha": "02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyY2Q3MmUzNGIzNmQ3YmYyZTI3YjllYWVkZjJhZjRlMTljYzJkODU=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-08-01T22:44:31Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-08-01T22:46:28Z"}, "message": "Inline make_if macro", "tree": {"sha": "4684f3dd1542211bfd22fd7407d6a8b73a5ee9f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4684f3dd1542211bfd22fd7407d6a8b73a5ee9f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85", "html_url": "https://github.com/rust-lang/rust/commit/02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8746b79a384cdb30ecc2dae3ca0f0ece4dc56eed", "url": "https://api.github.com/repos/rust-lang/rust/commits/8746b79a384cdb30ecc2dae3ca0f0ece4dc56eed", "html_url": "https://github.com/rust-lang/rust/commit/8746b79a384cdb30ecc2dae3ca0f0ece4dc56eed"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "bacf5662bc0058d4e98afbf064553bfc630aec94", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=02cd72e34b36d7bf2e27b9eaedf2af4e19cc2d85", "patch": "@@ -442,18 +442,10 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         then: &Block,\n         else_opt: Option<&Expr>,\n     ) -> hir::ExprKind<'hir> {\n-        macro_rules! make_if {\n-            ($opt:expr) => {{\n-                let cond = self.lower_expr(cond);\n-                let then_expr = self.lower_block_expr(then);\n-                hir::ExprKind::If(cond, self.arena.alloc(then_expr), $opt)\n-            }};\n-        }\n-        if let Some(rslt) = else_opt {\n-            make_if!(Some(self.lower_expr(rslt)))\n-        } else {\n-            make_if!(None)\n-        }\n+        let cond = self.lower_expr(cond);\n+        let then = self.arena.alloc(self.lower_block_expr(then));\n+        let els = else_opt.map(|els| self.lower_expr(els));\n+        hir::ExprKind::If(cond, then, els)\n     }\n \n     fn lower_expr_if_let("}]}