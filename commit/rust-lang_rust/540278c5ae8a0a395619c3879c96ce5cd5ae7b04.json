{"sha": "540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MDI3OGM1YWU4YTBhMzk1NjE5YzM4NzljOTZjZTVjZDVhZTdiMDQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-13T11:34:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-13T11:34:33Z"}, "message": "Rollup merge of #65250 - da-x:ctor-in-error-msgs, r=petrochenkov\n\nresolve: fix error title regarding private constructors\n\nOne reason is that constructors can be private while their types can be\npublic.\n\nIdea credit to @petrochenkov, discussed at #65153", "tree": {"sha": "ce40b4afee9d5feea160510656a78d337835caaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce40b4afee9d5feea160510656a78d337835caaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdowvJCRBK7hj4Ov3rIwAAdHIIAEseJkxNjsD9997XD/5obpsu\nxtgvTOvNNcXQsrnW6bWUR3bspyjLViYE0mOGh4oSEXOXSAvUkbAElyYCAzJ8Qvgy\nlltfkiQt7GsJD+ziKtE4vyZNQC4T9ljjra1KuYMdnZR8ovRIQC2oUapcR+7rheAu\nkoVM0qpDSWPBerLeapUVm/6ALdS9yjucxCSlpnuBUzCWg7ghUS5p3FnhB4jmhTaI\no5apEw06tYttOAgPALtgfW7rk8aVApjzKyhoAk099TNJYPFMcPb4wLs9U1rSXoKE\n92ejtgxkesftgV9EIMm1q5fd2u8gUJqlMjQbn+hwPbxapr4VTITj6oJMxMChkIs=\n=303o\n-----END PGP SIGNATURE-----\n", "payload": "tree ce40b4afee9d5feea160510656a78d337835caaa\nparent 963e4bc756c91fa9ffd4850576655bc3980230c7\nparent 9d11bda8ddffc5f575d04f8ba8037ef581b10ecd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570966473 +0200\ncommitter GitHub <noreply@github.com> 1570966473 +0200\n\nRollup merge of #65250 - da-x:ctor-in-error-msgs, r=petrochenkov\n\nresolve: fix error title regarding private constructors\n\nOne reason is that constructors can be private while their types can be\npublic.\n\nIdea credit to @petrochenkov, discussed at #65153\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "html_url": "https://github.com/rust-lang/rust/commit/540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "963e4bc756c91fa9ffd4850576655bc3980230c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/963e4bc756c91fa9ffd4850576655bc3980230c7", "html_url": "https://github.com/rust-lang/rust/commit/963e4bc756c91fa9ffd4850576655bc3980230c7"}, {"sha": "9d11bda8ddffc5f575d04f8ba8037ef581b10ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d11bda8ddffc5f575d04f8ba8037ef581b10ecd", "html_url": "https://github.com/rust-lang/rust/commit/9d11bda8ddffc5f575d04f8ba8037ef581b10ecd"}], "stats": {"total": 380, "additions": 196, "deletions": 184}, "files": [{"sha": "e0ff1539009176688c8c16354c870fee109f9954", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "patch": "@@ -2378,26 +2378,38 @@ impl<'a> Resolver<'a> {\n         let mut reported_spans = FxHashSet::default();\n         for &PrivacyError(dedup_span, ident, binding) in &self.privacy_errors {\n             if reported_spans.insert(dedup_span) {\n-                let mut err = struct_span_err!(\n-                    self.session,\n-                    ident.span,\n-                    E0603,\n-                    \"{} `{}` is private\",\n-                    binding.res().descr(),\n-                    ident.name,\n-                );\n-                if let NameBindingKind::Res(\n+                let session = &self.session;\n+                let mk_struct_span_error = |is_constructor| {\n+                    struct_span_err!(\n+                        session,\n+                        ident.span,\n+                        E0603,\n+                        \"{}{} `{}` is private\",\n+                        binding.res().descr(),\n+                        if is_constructor { \" constructor\"} else { \"\" },\n+                        ident.name,\n+                    )\n+                };\n+\n+                let mut err = if let NameBindingKind::Res(\n                     Res::Def(DefKind::Ctor(CtorOf::Struct, CtorKind::Fn), ctor_def_id), _\n                 ) = binding.kind {\n                     let def_id = (&*self).parent(ctor_def_id).expect(\"no parent for a constructor\");\n                     if let Some(fields) = self.field_names.get(&def_id) {\n+                        let mut err = mk_struct_span_error(true);\n                         let first_field = fields.first().expect(\"empty field list in the map\");\n                         err.span_label(\n                             fields.iter().fold(first_field.span, |acc, field| acc.to(field.span)),\n-                            \"a tuple struct constructor is private if any of its fields is private\",\n+                            \"a constructor is private if any of the fields is private\",\n                         );\n+                        err\n+                    } else {\n+                        mk_struct_span_error(false)\n                     }\n-                }\n+                } else {\n+                    mk_struct_span_error(false)\n+                };\n+\n                 err.emit();\n             }\n         }"}, {"sha": "3dc26b1955cd7fbea53ce1efe05319920bfea83f", "filename": "src/test/ui/privacy/privacy5.rs", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.rs?ref=540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "patch": "@@ -48,80 +48,80 @@ mod a {\n }\n \n fn this_crate() {\n-    let a = a::A(()); //~ ERROR tuple struct `A` is private\n-    let b = a::B(2); //~ ERROR tuple struct `B` is private\n-    let c = a::C(2, 3); //~ ERROR tuple struct `C` is private\n+    let a = a::A(()); //~ ERROR tuple struct constructor `A` is private\n+    let b = a::B(2); //~ ERROR tuple struct constructor `B` is private\n+    let c = a::C(2, 3); //~ ERROR tuple struct constructor `C` is private\n     let d = a::D(4);\n \n-    let a::A(()) = a; //~ ERROR tuple struct `A` is private\n-    let a::A(_) = a; //~ ERROR tuple struct `A` is private\n-    match a { a::A(()) => {} } //~ ERROR tuple struct `A` is private\n-    match a { a::A(_) => {} } //~ ERROR tuple struct `A` is private\n-\n-    let a::B(_) = b; //~ ERROR tuple struct `B` is private\n-    let a::B(_b) = b; //~ ERROR tuple struct `B` is private\n-    match b { a::B(_) => {} } //~ ERROR tuple struct `B` is private\n-    match b { a::B(_b) => {} } //~ ERROR tuple struct `B` is private\n-    match b { a::B(1) => {} a::B(_) => {} } //~ ERROR tuple struct `B` is private\n-                                            //~^ ERROR tuple struct `B` is private\n-\n-    let a::C(_, _) = c; //~ ERROR tuple struct `C` is private\n-    let a::C(_a, _) = c; //~ ERROR tuple struct `C` is private\n-    let a::C(_, _b) = c; //~ ERROR tuple struct `C` is private\n-    let a::C(_a, _b) = c; //~ ERROR tuple struct `C` is private\n-    match c { a::C(_, _) => {} } //~ ERROR tuple struct `C` is private\n-    match c { a::C(_a, _) => {} } //~ ERROR tuple struct `C` is private\n-    match c { a::C(_, _b) => {} } //~ ERROR tuple struct `C` is private\n-    match c { a::C(_a, _b) => {} } //~ ERROR tuple struct `C` is private\n+    let a::A(()) = a; //~ ERROR tuple struct constructor `A` is private\n+    let a::A(_) = a; //~ ERROR tuple struct constructor `A` is private\n+    match a { a::A(()) => {} } //~ ERROR tuple struct constructor `A` is private\n+    match a { a::A(_) => {} } //~ ERROR tuple struct constructor `A` is private\n+\n+    let a::B(_) = b; //~ ERROR tuple struct constructor `B` is private\n+    let a::B(_b) = b; //~ ERROR tuple struct constructor `B` is private\n+    match b { a::B(_) => {} } //~ ERROR tuple struct constructor `B` is private\n+    match b { a::B(_b) => {} } //~ ERROR tuple struct constructor `B` is private\n+    match b { a::B(1) => {} a::B(_) => {} } //~ ERROR tuple struct constructor `B` is private\n+                                            //~^ ERROR tuple struct constructor `B` is private\n+\n+    let a::C(_, _) = c; //~ ERROR tuple struct constructor `C` is private\n+    let a::C(_a, _) = c; //~ ERROR tuple struct constructor `C` is private\n+    let a::C(_, _b) = c; //~ ERROR tuple struct constructor `C` is private\n+    let a::C(_a, _b) = c; //~ ERROR tuple struct constructor `C` is private\n+    match c { a::C(_, _) => {} } //~ ERROR tuple struct constructor `C` is private\n+    match c { a::C(_a, _) => {} } //~ ERROR tuple struct constructor `C` is private\n+    match c { a::C(_, _b) => {} } //~ ERROR tuple struct constructor `C` is private\n+    match c { a::C(_a, _b) => {} } //~ ERROR tuple struct constructor `C` is private\n \n     let a::D(_) = d;\n     let a::D(_d) = d;\n     match d { a::D(_) => {} }\n     match d { a::D(_d) => {} }\n     match d { a::D(1) => {} a::D(_) => {} }\n \n-    let a2 = a::A; //~ ERROR tuple struct `A` is private\n-    let b2 = a::B; //~ ERROR tuple struct `B` is private\n-    let c2 = a::C; //~ ERROR tuple struct `C` is private\n+    let a2 = a::A; //~ ERROR tuple struct constructor `A` is private\n+    let b2 = a::B; //~ ERROR tuple struct constructor `B` is private\n+    let c2 = a::C; //~ ERROR tuple struct constructor `C` is private\n     let d2 = a::D;\n }\n \n fn xcrate() {\n-    let a = other::A(()); //~ ERROR tuple struct `A` is private\n-    let b = other::B(2); //~ ERROR tuple struct `B` is private\n-    let c = other::C(2, 3); //~ ERROR tuple struct `C` is private\n+    let a = other::A(()); //~ ERROR tuple struct constructor `A` is private\n+    let b = other::B(2); //~ ERROR tuple struct constructor `B` is private\n+    let c = other::C(2, 3); //~ ERROR tuple struct constructor `C` is private\n     let d = other::D(4);\n \n-    let other::A(()) = a; //~ ERROR tuple struct `A` is private\n-    let other::A(_) = a; //~ ERROR tuple struct `A` is private\n-    match a { other::A(()) => {} } //~ ERROR tuple struct `A` is private\n-    match a { other::A(_) => {} } //~ ERROR tuple struct `A` is private\n-\n-    let other::B(_) = b; //~ ERROR tuple struct `B` is private\n-    let other::B(_b) = b; //~ ERROR tuple struct `B` is private\n-    match b { other::B(_) => {} } //~ ERROR tuple struct `B` is private\n-    match b { other::B(_b) => {} } //~ ERROR tuple struct `B` is private\n-    match b { other::B(1) => {} other::B(_) => {} } //~ ERROR tuple struct `B` is private\n-                                                    //~^ ERROR tuple struct `B` is private\n-\n-    let other::C(_, _) = c; //~ ERROR tuple struct `C` is private\n-    let other::C(_a, _) = c; //~ ERROR tuple struct `C` is private\n-    let other::C(_, _b) = c; //~ ERROR tuple struct `C` is private\n-    let other::C(_a, _b) = c; //~ ERROR tuple struct `C` is private\n-    match c { other::C(_, _) => {} } //~ ERROR tuple struct `C` is private\n-    match c { other::C(_a, _) => {} } //~ ERROR tuple struct `C` is private\n-    match c { other::C(_, _b) => {} } //~ ERROR tuple struct `C` is private\n-    match c { other::C(_a, _b) => {} } //~ ERROR tuple struct `C` is private\n+    let other::A(()) = a; //~ ERROR tuple struct constructor `A` is private\n+    let other::A(_) = a; //~ ERROR tuple struct constructor `A` is private\n+    match a { other::A(()) => {} } //~ ERROR tuple struct constructor `A` is private\n+    match a { other::A(_) => {} } //~ ERROR tuple struct constructor `A` is private\n+\n+    let other::B(_) = b; //~ ERROR tuple struct constructor `B` is private\n+    let other::B(_b) = b; //~ ERROR tuple struct constructor `B` is private\n+    match b { other::B(_) => {} } //~ ERROR tuple struct constructor `B` is private\n+    match b { other::B(_b) => {} } //~ ERROR tuple struct constructor `B` is private\n+    match b { other::B(1) => {}//~ ERROR tuple struct constructor `B` is private\n+        other::B(_) => {} }    //~ ERROR tuple struct constructor `B` is private\n+\n+    let other::C(_, _) = c; //~ ERROR tuple struct constructor `C` is private\n+    let other::C(_a, _) = c; //~ ERROR tuple struct constructor `C` is private\n+    let other::C(_, _b) = c; //~ ERROR tuple struct constructor `C` is private\n+    let other::C(_a, _b) = c; //~ ERROR tuple struct constructor `C` is private\n+    match c { other::C(_, _) => {} } //~ ERROR tuple struct constructor `C` is private\n+    match c { other::C(_a, _) => {} } //~ ERROR tuple struct constructor `C` is private\n+    match c { other::C(_, _b) => {} } //~ ERROR tuple struct constructor `C` is private\n+    match c { other::C(_a, _b) => {} } //~ ERROR tuple struct constructor `C` is private\n \n     let other::D(_) = d;\n     let other::D(_d) = d;\n     match d { other::D(_) => {} }\n     match d { other::D(_d) => {} }\n     match d { other::D(1) => {} other::D(_) => {} }\n \n-    let a2 = other::A; //~ ERROR tuple struct `A` is private\n-    let b2 = other::B; //~ ERROR tuple struct `B` is private\n-    let c2 = other::C; //~ ERROR tuple struct `C` is private\n+    let a2 = other::A; //~ ERROR tuple struct constructor `A` is private\n+    let b2 = other::B; //~ ERROR tuple struct constructor `B` is private\n+    let c2 = other::C; //~ ERROR tuple struct constructor `C` is private\n     let d2 = other::D;\n }\n "}, {"sha": "2ee83149b695f12c8234d9c47b66fdf90fbff4be", "filename": "src/test/ui/privacy/privacy5.stderr", "status": "modified", "additions": 100, "deletions": 100, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr?ref=540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "patch": "@@ -1,220 +1,220 @@\n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:51:16\n    |\n LL |     pub struct A(());\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a = a::A(());\n    |                ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:52:16\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let b = a::B(2);\n    |                ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:53:16\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let c = a::C(2, 3);\n    |                ^\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:56:12\n    |\n LL |     pub struct A(());\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a::A(()) = a;\n    |            ^\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:57:12\n    |\n LL |     pub struct A(());\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a::A(_) = a;\n    |            ^\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:58:18\n    |\n LL |     pub struct A(());\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     match a { a::A(()) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:59:18\n    |\n LL |     pub struct A(());\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     match a { a::A(_) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:61:12\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let a::B(_) = b;\n    |            ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:62:12\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let a::B(_b) = b;\n    |            ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:63:18\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(_) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:64:18\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(_b) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:65:18\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:65:32\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n    |                                ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:68:12\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_, _) = c;\n    |            ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:69:12\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_a, _) = c;\n    |            ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:70:12\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_, _b) = c;\n    |            ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:71:12\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_a, _b) = c;\n    |            ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:72:18\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_, _) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:73:18\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_a, _) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:74:18\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_, _b) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:75:18\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_a, _b) => {} }\n    |                  ^\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:83:17\n    |\n LL |     pub struct A(());\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a2 = a::A;\n    |                 ^\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:84:17\n    |\n LL |     pub struct B(isize);\n-   |                  ----- a tuple struct constructor is private if any of its fields is private\n+   |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let b2 = a::B;\n    |                 ^\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:85:17\n    |\n LL |     pub struct C(pub isize, isize);\n-   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let c2 = a::C;\n    |                 ^\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:90:20\n    |\n LL |     let a = other::A(());\n@@ -223,9 +223,9 @@ LL |     let a = other::A(());\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n-   |              -- a tuple struct constructor is private if any of its fields is private\n+   |              -- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:91:20\n    |\n LL |     let b = other::B(2);\n@@ -234,9 +234,9 @@ LL |     let b = other::B(2);\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:92:20\n    |\n LL |     let c = other::C(2, 3);\n@@ -245,9 +245,9 @@ LL |     let c = other::C(2, 3);\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:95:16\n    |\n LL |     let other::A(()) = a;\n@@ -256,9 +256,9 @@ LL |     let other::A(()) = a;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n-   |              -- a tuple struct constructor is private if any of its fields is private\n+   |              -- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:96:16\n    |\n LL |     let other::A(_) = a;\n@@ -267,9 +267,9 @@ LL |     let other::A(_) = a;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n-   |              -- a tuple struct constructor is private if any of its fields is private\n+   |              -- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:97:22\n    |\n LL |     match a { other::A(()) => {} }\n@@ -278,9 +278,9 @@ LL |     match a { other::A(()) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n-   |              -- a tuple struct constructor is private if any of its fields is private\n+   |              -- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:98:22\n    |\n LL |     match a { other::A(_) => {} }\n@@ -289,9 +289,9 @@ LL |     match a { other::A(_) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n-   |              -- a tuple struct constructor is private if any of its fields is private\n+   |              -- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:100:16\n    |\n LL |     let other::B(_) = b;\n@@ -300,9 +300,9 @@ LL |     let other::B(_) = b;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:101:16\n    |\n LL |     let other::B(_b) = b;\n@@ -311,9 +311,9 @@ LL |     let other::B(_b) = b;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:102:22\n    |\n LL |     match b { other::B(_) => {} }\n@@ -322,9 +322,9 @@ LL |     match b { other::B(_) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:103:22\n    |\n LL |     match b { other::B(_b) => {} }\n@@ -333,31 +333,31 @@ LL |     match b { other::B(_b) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:104:22\n    |\n-LL |     match b { other::B(1) => {} other::B(_) => {} }\n+LL |     match b { other::B(1) => {}\n    |                      ^\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:104:40\n+error[E0603]: tuple struct constructor `B` is private\n+  --> $DIR/privacy5.rs:105:16\n    |\n-LL |     match b { other::B(1) => {} other::B(_) => {} }\n-   |                                        ^\n+LL |         other::B(_) => {} }\n+   |                ^\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:107:16\n    |\n LL |     let other::C(_, _) = c;\n@@ -366,9 +366,9 @@ LL |     let other::C(_, _) = c;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:108:16\n    |\n LL |     let other::C(_a, _) = c;\n@@ -377,9 +377,9 @@ LL |     let other::C(_a, _) = c;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:109:16\n    |\n LL |     let other::C(_, _b) = c;\n@@ -388,9 +388,9 @@ LL |     let other::C(_, _b) = c;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:110:16\n    |\n LL |     let other::C(_a, _b) = c;\n@@ -399,9 +399,9 @@ LL |     let other::C(_a, _b) = c;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:111:22\n    |\n LL |     match c { other::C(_, _) => {} }\n@@ -410,9 +410,9 @@ LL |     match c { other::C(_, _) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:112:22\n    |\n LL |     match c { other::C(_a, _) => {} }\n@@ -421,9 +421,9 @@ LL |     match c { other::C(_a, _) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:113:22\n    |\n LL |     match c { other::C(_, _b) => {} }\n@@ -432,9 +432,9 @@ LL |     match c { other::C(_, _b) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:114:22\n    |\n LL |     match c { other::C(_a, _b) => {} }\n@@ -443,9 +443,9 @@ LL |     match c { other::C(_a, _b) => {} }\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `A` is private\n+error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:122:21\n    |\n LL |     let a2 = other::A;\n@@ -454,9 +454,9 @@ LL |     let a2 = other::A;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n-   |              -- a tuple struct constructor is private if any of its fields is private\n+   |              -- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `B` is private\n+error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:123:21\n    |\n LL |     let b2 = other::B;\n@@ -465,9 +465,9 @@ LL |     let b2 = other::B;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n-   |              ----- a tuple struct constructor is private if any of its fields is private\n+   |              ----- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `C` is private\n+error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:124:21\n    |\n LL |     let c2 = other::C;\n@@ -476,7 +476,7 @@ LL |     let c2 = other::C;\n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n-   |              ---------------- a tuple struct constructor is private if any of its fields is private\n+   |              ---------------- a constructor is private if any of the fields is private\n \n error: aborting due to 48 previous errors\n "}, {"sha": "0eecc7f8cc5db8d669d179b26b28601f58fe914a", "filename": "src/test/ui/resolve/privacy-struct-ctor.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs?ref=540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "patch": "@@ -16,7 +16,7 @@ mod m {\n \n     fn f() {\n         n::Z;\n-        //~^ ERROR tuple struct `Z` is private\n+        //~^ ERROR tuple struct constructor `Z` is private\n         Z;\n         //~^ ERROR expected value, found struct `Z`\n     }\n@@ -27,21 +27,21 @@ use m::S2; // OK, only the type is imported\n \n fn main() {\n     m::S;\n-    //~^ ERROR tuple struct `S` is private\n+    //~^ ERROR tuple struct constructor `S` is private\n     let _: S = m::S(2);\n-    //~^ ERROR tuple struct `S` is private\n+    //~^ ERROR tuple struct constructor `S` is private\n     S;\n     //~^ ERROR expected value, found struct `S`\n     m::n::Z;\n-    //~^ ERROR tuple struct `Z` is private\n+    //~^ ERROR tuple struct constructor `Z` is private\n \n     S2;\n     //~^ ERROR expected value, found struct `S2`\n \n     xcrate::m::S;\n-    //~^ ERROR tuple struct `S` is private\n+    //~^ ERROR tuple struct constructor `S` is private\n     xcrate::S;\n     //~^ ERROR expected value, found struct `xcrate::S`\n     xcrate::m::n::Z;\n-    //~^ ERROR tuple struct `Z` is private\n+    //~^ ERROR tuple struct constructor `Z` is private\n }"}, {"sha": "7d884d3a66910ca38e7fae8ec2f661d812a65c6b", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "patch": "@@ -34,43 +34,43 @@ help: possible better candidate is found in another module, you can import it in\n LL | use m::S;\n    |\n \n-error[E0603]: tuple struct `Z` is private\n+error[E0603]: tuple struct constructor `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:18:12\n    |\n LL |         pub(in m) struct Z(pub(in m::n) u8);\n-   |                            --------------- a tuple struct constructor is private if any of its fields is private\n+   |                            --------------- a constructor is private if any of the fields is private\n ...\n LL |         n::Z;\n    |            ^\n \n-error[E0603]: tuple struct `S` is private\n+error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:29:8\n    |\n LL |     pub struct S(u8);\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     m::S;\n    |        ^\n \n-error[E0603]: tuple struct `S` is private\n+error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:31:19\n    |\n LL |     pub struct S(u8);\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let _: S = m::S(2);\n    |                   ^\n \n-error[E0603]: tuple struct `Z` is private\n+error[E0603]: tuple struct constructor `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:35:11\n    |\n LL |         pub(in m) struct Z(pub(in m::n) u8);\n-   |                            --------------- a tuple struct constructor is private if any of its fields is private\n+   |                            --------------- a constructor is private if any of the fields is private\n ...\n LL |     m::n::Z;\n    |           ^\n \n-error[E0603]: tuple struct `S` is private\n+error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:41:16\n    |\n LL |     xcrate::m::S;\n@@ -79,9 +79,9 @@ LL |     xcrate::m::S;\n   ::: $DIR/auxiliary/privacy-struct-ctor.rs:2:18\n    |\n LL |     pub struct S(u8);\n-   |                  -- a tuple struct constructor is private if any of its fields is private\n+   |                  -- a constructor is private if any of the fields is private\n \n-error[E0603]: tuple struct `Z` is private\n+error[E0603]: tuple struct constructor `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:45:19\n    |\n LL |     xcrate::m::n::Z;\n@@ -90,7 +90,7 @@ LL |     xcrate::m::n::Z;\n   ::: $DIR/auxiliary/privacy-struct-ctor.rs:5:28\n    |\n LL |         pub(in m) struct Z(pub(in m::n) u8);\n-   |                            --------------- a tuple struct constructor is private if any of its fields is private\n+   |                            --------------- a constructor is private if any of the fields is private\n \n error: aborting due to 10 previous errors\n "}, {"sha": "cf383a260e044be784f32d9ae48d9707eeb18d09", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.rs?ref=540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "patch": "@@ -21,7 +21,7 @@ fn main() {\n     //~^ ERROR expected function, found struct `TupleStruct` [E0423]\n \n     let ts_explicit = structs::TupleStruct(640, 480);\n-    //~^ ERROR tuple struct `TupleStruct` is private [E0603]\n+    //~^ ERROR tuple struct constructor `TupleStruct` is private [E0603]\n \n     let TupleStruct { 0: first_field, 1: second_field } = ts;\n     //~^ ERROR `..` required with struct marked as non-exhaustive"}, {"sha": "d3686a1b869619357613b5c101839b88cb8f0e13", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/540278c5ae8a0a395619c3879c96ce5cd5ae7b04/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=540278c5ae8a0a395619c3879c96ce5cd5ae7b04", "patch": "@@ -10,7 +10,7 @@ error[E0423]: expected value, found struct `UnitStruct`\n LL |     let us = UnitStruct;\n    |              ^^^^^^^^^^ constructor is not visible here due to private fields\n \n-error[E0603]: tuple struct `TupleStruct` is private\n+error[E0603]: tuple struct constructor `TupleStruct` is private\n   --> $DIR/struct.rs:23:32\n    |\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n@@ -19,7 +19,7 @@ LL |     let ts_explicit = structs::TupleStruct(640, 480);\n   ::: $DIR/auxiliary/structs.rs:13:24\n    |\n LL | pub struct TupleStruct(pub u16, pub u16);\n-   |                        ---------------- a tuple struct constructor is private if any of its fields is private\n+   |                        ---------------- a constructor is private if any of the fields is private\n \n error[E0603]: unit struct `UnitStruct` is private\n   --> $DIR/struct.rs:32:32"}]}