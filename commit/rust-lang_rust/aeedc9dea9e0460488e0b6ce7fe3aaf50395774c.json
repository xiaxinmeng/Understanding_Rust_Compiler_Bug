{"sha": "aeedc9dea9e0460488e0b6ce7fe3aaf50395774c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZWRjOWRlYTllMDQ2MDQ4OGUwYjZjZTdmZTNhYWY1MDM5NTc3NGM=", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-02-07T09:37:53Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2020-02-10T19:57:25Z"}, "message": "Corrected ac_mitigation patch. That patch used the untrusted stack to clear rflags during enclave (re-)entry", "tree": {"sha": "fedca560ea5b6f03e8d928f5c2e3476219f790db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fedca560ea5b6f03e8d928f5c2e3476219f790db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeedc9dea9e0460488e0b6ce7fe3aaf50395774c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeedc9dea9e0460488e0b6ce7fe3aaf50395774c", "html_url": "https://github.com/rust-lang/rust/commit/aeedc9dea9e0460488e0b6ce7fe3aaf50395774c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeedc9dea9e0460488e0b6ce7fe3aaf50395774c/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6ec0d125eba4074122b187032474b4174fb9d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ec0d125eba4074122b187032474b4174fb9d31", "html_url": "https://github.com/rust-lang/rust/commit/e6ec0d125eba4074122b187032474b4174fb9d31"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "7c273a8a83d302c3c29e60dcf97880cb340d061f", "filename": "src/libstd/sys/sgx/abi/entry.S", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/aeedc9dea9e0460488e0b6ce7fe3aaf50395774c/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "raw_url": "https://github.com/rust-lang/rust/raw/aeedc9dea9e0460488e0b6ce7fe3aaf50395774c/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S?ref=aeedc9dea9e0460488e0b6ce7fe3aaf50395774c", "patch": "@@ -134,6 +134,17 @@ elf_entry:\n     ud2                               /* should not be reached  */\n /*  end elf_entry */\n \n+/* This code needs to be called *after* the enclave stack has been setup. */\n+/* There are 3 places where this needs to happen, so this is put in a macro. */\n+.macro sanitize_rflags\n+/*  Sanitize rflags received from user */\n+/*    - DF flag: x86-64 ABI requires DF to be unset at function entry/exit */\n+/*    - AC flag: AEX on misaligned memory accesses leaks side channel info */\n+    pushfq\n+    andq $~0x40400, (%rsp)\n+    popfq\n+.endm\n+\n .text\n .global sgx_entry\n .type sgx_entry,function\n@@ -150,13 +161,6 @@ sgx_entry:\n     stmxcsr %gs:tcsls_user_mxcsr\n     fnstcw %gs:tcsls_user_fcw\n \n-/*  reset user state */\n-/*    - DF flag: x86-64 ABI requires DF to be unset at function entry/exit */\n-/*    - AC flag: AEX on misaligned memory accesses leaks side channel info */\n-    pushfq\n-    andq $~0x40400, (%rsp)\n-    popfq\n-\n /*  check for debug buffer pointer */\n     testb  $0xff,DEBUG(%rip)\n     jz .Lskip_debug_init\n@@ -179,6 +183,7 @@ sgx_entry:\n     lea IMAGE_BASE(%rip),%rax\n     add %rax,%rsp\n     mov %rsp,%gs:tcsls_tos\n+    sanitize_rflags\n /*  call tcs_init */\n /*  store caller-saved registers in callee-saved registers */\n     mov %rdi,%rbx\n@@ -194,7 +199,10 @@ sgx_entry:\n     mov %r13,%rdx\n     mov %r14,%r8\n     mov %r15,%r9\n+    jmp .Lafter_init\n .Lskip_init:\n+    sanitize_rflags\n+.Lafter_init:\n /*  call into main entry point */\n     load_tcsls_flag_secondary_bool cx /* RCX = entry() argument: secondary: bool */\n     call entry /* RDI, RSI, RDX, R8, R9 passed in from userspace */\n@@ -292,6 +300,7 @@ usercall:\n     movq $0,%gs:tcsls_last_rsp\n /*  restore callee-saved state, cf. \"save\" above */\n     mov %r11,%rsp\n+    sanitize_rflags\n     ldmxcsr (%rsp)\n     fldcw 4(%rsp)\n     add $8, %rsp"}]}