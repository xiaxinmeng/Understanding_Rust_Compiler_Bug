{"sha": "8c5de02289d515a367746d062b81e4d473e558ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNWRlMDIyODlkNTE1YTM2Nzc0NmQwNjJiODFlNGQ0NzNlNTU4ZWU=", "commit": {"author": {"name": "Steven Stewart-Gallus", "email": "sstewartgallus00@langara.bc.ca", "date": "2013-05-13T02:43:44Z"}, "committer": {"name": "Steven Stewart-Gallus", "email": "sstewartgallus00@langara.bc.ca", "date": "2013-05-13T17:51:14Z"}, "message": "Fixed type signature of uninhabited method.\n\nAdded unit test to prevent similar mistakes from happening again. The\nprevious method was wrong because it dereferenced a pointer to a void type to\nmatch on the result. No self pointer was needed, and the correct method\nsignature took the self value by value.", "tree": {"sha": "1613804ec2359910fe54cbd35bc0ac27fa7a1c82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1613804ec2359910fe54cbd35bc0ac27fa7a1c82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c5de02289d515a367746d062b81e4d473e558ee", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c5de02289d515a367746d062b81e4d473e558ee", "html_url": "https://github.com/rust-lang/rust/commit/8c5de02289d515a367746d062b81e4d473e558ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c5de02289d515a367746d062b81e4d473e558ee/comments", "author": null, "committer": null, "parents": [{"sha": "1bf2f68bb255cc6833d4253c4f6d071af9e05648", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bf2f68bb255cc6833d4253c4f6d071af9e05648", "html_url": "https://github.com/rust-lang/rust/commit/1bf2f68bb255cc6833d4253c4f6d071af9e05648"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "c6add76f94429c14d23aa15b3891ec0e14714e1b", "filename": "src/libcore/util.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8c5de02289d515a367746d062b81e4d473e558ee/src%2Flibcore%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5de02289d515a367746d062b81e4d473e558ee/src%2Flibcore%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Futil.rs?ref=8c5de02289d515a367746d062b81e4d473e558ee", "patch": "@@ -138,8 +138,8 @@ pub enum Void { }\n \n pub impl Void {\n     /// A utility function for ignoring this uninhabited type\n-    fn uninhabited(&self) -> ! {\n-        match *self {\n+    fn uninhabited(self) -> ! {\n+        match self {\n             // Nothing to match on\n         }\n     }\n@@ -177,7 +177,8 @@ pub fn unreachable() -> ! {\n #[cfg(test)]\n mod tests {\n     use option::{None, Some};\n-    use util::{NonCopyable, id, replace, swap};\n+    use util::{Void, NonCopyable, id, replace, swap};\n+    use either::{Either, Left, Right};\n \n     #[test]\n     pub fn identity_crisis() {\n@@ -202,4 +203,12 @@ mod tests {\n         assert!(x.is_none());\n         assert!(y.is_some());\n     }\n+    #[test]\n+    pub fn test_uninhabited() {\n+        let could_only_be_coin : Either <Void, ()> = Right (());\n+        match could_only_be_coin {\n+            Right (coin) => coin,\n+            Left (is_void) => is_void.uninhabited ()\n+        }\n+    }\n }"}]}