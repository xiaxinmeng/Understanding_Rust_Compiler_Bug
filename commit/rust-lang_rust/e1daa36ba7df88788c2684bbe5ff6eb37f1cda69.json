{"sha": "e1daa36ba7df88788c2684bbe5ff6eb37f1cda69", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZGFhMzZiYTdkZjg4Nzg4YzI2ODRiYmU1ZmY2ZWIzN2YxY2RhNjk=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-19T20:54:22Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-27T14:05:32Z"}, "message": "replace llvm-rebuild-trigger with commit hash", "tree": {"sha": "fc49f30be8aac936333e8c35a51924b955db916d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc49f30be8aac936333e8c35a51924b955db916d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1daa36ba7df88788c2684bbe5ff6eb37f1cda69", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlybgywWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdBuvB/4oSsSAYSuaePqhNXVzEyeC6a4R\nEFAn/E09GhmpOo9X4bRGLrzCpiLVWnnIvuaYD/OJ8D/jEeDgWSbJHvFP7+cpukwb\nM5PkhDOjsNPlOEY5dpRMqD11m9CYiord3Ygc4GJVNMHy8O1GQFvfVV0+R24OH5le\nGKopeNFObmagqfpPLhOLxxSn9irPaK9M9f028Xx5xm5NXa1zC+/9MZ+jSgtxMBkM\nm2/BcUzsEuw9STn/w4lOc3BALVSrkpK2vD8JfR/KK21N73eGtn4jYEOpmOp22pce\nVtPwf34CzUaJzZDburFe4ziI4lVQ7H3m4EMydm35SDFJCP9d3d6taXcGErwv\n=QePf\n-----END PGP SIGNATURE-----", "payload": "tree fc49f30be8aac936333e8c35a51924b955db916d\nparent c5fb4d0d2f464bc9ab61f7693ed4dde4d9326820\nauthor Andy Russell <arussell123@gmail.com> 1553028862 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1553695532 -0400\n\nreplace llvm-rebuild-trigger with commit hash\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1daa36ba7df88788c2684bbe5ff6eb37f1cda69", "html_url": "https://github.com/rust-lang/rust/commit/e1daa36ba7df88788c2684bbe5ff6eb37f1cda69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1daa36ba7df88788c2684bbe5ff6eb37f1cda69/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5fb4d0d2f464bc9ab61f7693ed4dde4d9326820", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5fb4d0d2f464bc9ab61f7693ed4dde4d9326820", "html_url": "https://github.com/rust-lang/rust/commit/c5fb4d0d2f464bc9ab61f7693ed4dde4d9326820"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "d93b0f2e0d4b094127c43ebf110c319af742ac58", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e1daa36ba7df88788c2684bbe5ff6eb37f1cda69/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1daa36ba7df88788c2684bbe5ff6eb37f1cda69/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=e1daa36ba7df88788c2684bbe5ff6eb37f1cda69", "patch": "@@ -67,30 +67,47 @@ impl Step for Llvm {\n             }\n         }\n \n-        let rebuild_trigger = builder.src.join(\"src/rustllvm/llvm-rebuild-trigger\");\n-        let rebuild_trigger_contents = t!(fs::read_to_string(&rebuild_trigger));\n-\n-        let (out_dir, llvm_config_ret_dir) = if emscripten {\n+        let (submodule, root, out_dir, llvm_config_ret_dir) = if emscripten {\n             let dir = builder.emscripten_llvm_out(target);\n             let config_dir = dir.join(\"bin\");\n-            (dir, config_dir)\n+            (\"src/llvm-emscripten\", \"src/llvm-emscripten\", dir, config_dir)\n         } else {\n             let mut dir = builder.llvm_out(builder.config.build);\n             if !builder.config.build.contains(\"msvc\") || builder.config.ninja {\n                 dir.push(\"build\");\n             }\n-            (builder.llvm_out(target), dir.join(\"bin\"))\n+            (\"src/llvm-project\", \"src/llvm-project/llvm\", builder.llvm_out(target), dir.join(\"bin\"))\n         };\n-        let done_stamp = out_dir.join(\"llvm-finished-building\");\n+\n+        let git_output = t!(Command::new(\"git\")\n+            .args(&[\"rev-parse\", \"--verify\", &format!(\"@:./{}\", submodule)])\n+            .current_dir(&builder.src)\n+            .output());\n+\n+        let llvm_commit = if git_output.status.success() {\n+            Some(git_output.stdout)\n+        } else {\n+            println!(\n+                \"git could not determine the LLVM submodule commit hash ({}). \\\n+                Assuming that an LLVM build is necessary.\",\n+                String::from_utf8_lossy(&git_output.stderr),\n+            );\n+            None\n+        };\n+\n         let build_llvm_config = llvm_config_ret_dir\n             .join(exe(\"llvm-config\", &*builder.config.build));\n-        if done_stamp.exists() {\n-            let done_contents = t!(fs::read_to_string(&done_stamp));\n+        let done_stamp = out_dir.join(\"llvm-finished-building\");\n \n-            // If LLVM was already built previously and contents of the rebuild-trigger file\n-            // didn't change from the previous build, then no action is required.\n-            if done_contents == rebuild_trigger_contents {\n-                return build_llvm_config\n+        if let Some(llvm_commit) = &llvm_commit {\n+            if done_stamp.exists() {\n+                let done_contents = t!(fs::read(&done_stamp));\n+\n+                // If LLVM was already built previously and the submodule's commit didn't change\n+                // from the previous build, then no action is required.\n+                if done_contents == llvm_commit.as_slice() {\n+                    return build_llvm_config\n+                }\n             }\n         }\n \n@@ -101,7 +118,6 @@ impl Step for Llvm {\n         t!(fs::create_dir_all(&out_dir));\n \n         // http://llvm.org/docs/CMake.html\n-        let root = if self.emscripten { \"src/llvm-emscripten\" } else { \"src/llvm-project/llvm\" };\n         let mut cfg = cmake::Config::new(builder.src.join(root));\n \n         let profile = match (builder.config.llvm_optimize, builder.config.llvm_release_debuginfo) {\n@@ -279,7 +295,9 @@ impl Step for Llvm {\n \n         cfg.build();\n \n-        t!(fs::write(&done_stamp, &rebuild_trigger_contents));\n+        if let Some(llvm_commit) = llvm_commit {\n+            t!(fs::write(&done_stamp, &llvm_commit));\n+        }\n \n         build_llvm_config\n     }"}, {"sha": "0f18c6a4ac0194436f551fc69452c11421adcd41", "filename": "src/rustllvm/llvm-rebuild-trigger", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5fb4d0d2f464bc9ab61f7693ed4dde4d9326820/src%2Frustllvm%2Fllvm-rebuild-trigger", "raw_url": "https://github.com/rust-lang/rust/raw/c5fb4d0d2f464bc9ab61f7693ed4dde4d9326820/src%2Frustllvm%2Fllvm-rebuild-trigger", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Fllvm-rebuild-trigger?ref=c5fb4d0d2f464bc9ab61f7693ed4dde4d9326820", "patch": "@@ -1,4 +0,0 @@\n-# If this file is modified, then llvm will be (optionally) cleaned and then rebuilt.\n-# The actual contents of this file do not matter, but to trigger a change on the\n-# build bots then the contents should be changed so git updates the mtime.\n-2019-03-18"}]}