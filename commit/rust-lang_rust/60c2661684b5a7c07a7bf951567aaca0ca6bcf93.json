{"sha": "60c2661684b5a7c07a7bf951567aaca0ca6bcf93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYzI2NjE2ODRiNWE3YzA3YTdiZjk1MTU2N2FhY2EwY2E2YmNmOTM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T03:20:05Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T14:33:21Z"}, "message": "std: Iterator.flat_map_ -> .flat_map", "tree": {"sha": "90638ac4dcbad3567c657202d534b44bd117a48d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90638ac4dcbad3567c657202d534b44bd117a48d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60c2661684b5a7c07a7bf951567aaca0ca6bcf93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60c2661684b5a7c07a7bf951567aaca0ca6bcf93", "html_url": "https://github.com/rust-lang/rust/commit/60c2661684b5a7c07a7bf951567aaca0ca6bcf93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60c2661684b5a7c07a7bf951567aaca0ca6bcf93/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24d2cd0ef4585743736aa86fb4b94d00ca40f3ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/24d2cd0ef4585743736aa86fb4b94d00ca40f3ab", "html_url": "https://github.com/rust-lang/rust/commit/24d2cd0ef4585743736aa86fb4b94d00ca40f3ab"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "86a0b6b8d8ca7ce961d3cacf149895767fb86fa8", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60c2661684b5a7c07a7bf951567aaca0ca6bcf93/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60c2661684b5a7c07a7bf951567aaca0ca6bcf93/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=60c2661684b5a7c07a7bf951567aaca0ca6bcf93", "patch": "@@ -262,17 +262,16 @@ pub trait Iterator<A> {\n     /// ~~~ {.rust}\n     /// let xs = [2u, 3];\n     /// let ys = [0u, 1, 0, 1, 2];\n-    /// let mut it = xs.iter().flat_map_(|&x| count(0u, 1).take(x));\n+    /// let mut it = xs.iter().flat_map(|&x| count(0u, 1).take(x));\n     /// // Check that `it` has the same elements as `ys`\n     /// let mut i = 0;\n     /// for x: uint in it {\n     ///     assert_eq!(x, ys[i]);\n     ///     i += 1;\n     /// }\n     /// ~~~\n-    // FIXME: #5898: should be called `flat_map`\n     #[inline]\n-    fn flat_map_<'r, B, U: Iterator<B>>(self, f: &'r fn(A) -> U)\n+    fn flat_map<'r, B, U: Iterator<B>>(self, f: &'r fn(A) -> U)\n         -> FlatMap<'r, A, Self, U> {\n         FlatMap{iter: self, f: f, frontiter: None, backiter: None }\n     }\n@@ -1644,7 +1643,7 @@ mod tests {\n     fn test_iterator_flat_map() {\n         let xs = [0u, 3, 6];\n         let ys = [0u, 1, 2, 3, 4, 5, 6, 7, 8];\n-        let mut it = xs.iter().flat_map_(|&x| count(x, 1).take(3));\n+        let mut it = xs.iter().flat_map(|&x| count(x, 1).take(3));\n         let mut i = 0;\n         for x in it {\n             assert_eq!(x, ys[i]);\n@@ -1937,7 +1936,7 @@ mod tests {\n     fn test_double_ended_flat_map() {\n         let u = [0u,1];\n         let v = [5,6,7,8];\n-        let mut it = u.iter().flat_map_(|x| v.slice(*x, v.len()).iter());\n+        let mut it = u.iter().flat_map(|x| v.slice(*x, v.len()).iter());\n         assert_eq!(it.next_back().unwrap(), &8);\n         assert_eq!(it.next().unwrap(),      &5);\n         assert_eq!(it.next_back().unwrap(), &7);"}]}