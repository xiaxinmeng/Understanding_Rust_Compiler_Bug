{"sha": "a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MzY4ZmI2ZDg0MWEyNDRkZGQ2ZmI3Zjk4M2I5MGFjMWNlMGM5ZWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-11T00:44:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-11T00:44:48Z"}, "message": "rustdoc: Put native mods on their own pages. Closes #1959", "tree": {"sha": "489e3dd5eee2add9b35ced231115bbedbb905f64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/489e3dd5eee2add9b35ced231115bbedbb905f64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef", "html_url": "https://github.com/rust-lang/rust/commit/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "474ad2e4dee9ae25501d04e513fcb473e6fb969e", "url": "https://api.github.com/repos/rust-lang/rust/commits/474ad2e4dee9ae25501d04e513fcb473e6fb969e", "html_url": "https://github.com/rust-lang/rust/commit/474ad2e4dee9ae25501d04e513fcb473e6fb969e"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "7b4336f7386c5ce48e5150bb4563fd1883096870", "filename": "src/rustdoc/markdown_index_pass.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef/src%2Frustdoc%2Fmarkdown_index_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef/src%2Frustdoc%2Fmarkdown_index_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_index_pass.rs?ref=a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef", "patch": "@@ -52,7 +52,8 @@ fn item_to_entry(\n     config: config::config\n ) -> doc::index_entry {\n     let link = alt doc {\n-      doc::modtag(_) if config.output_style == config::doc_per_mod {\n+      doc::modtag(_) | doc::nmodtag(_)\n+      if config.output_style == config::doc_per_mod {\n         markdown_writer::make_filename(config, doc::itempage(doc))\n       }\n       _ {\n@@ -148,6 +149,20 @@ fn should_index_mod_contents_multi_page() {\n     };\n }\n \n+#[test]\n+fn should_index_native_mod_pages() {\n+    let doc = test::mk_doc(\n+        config::doc_per_mod,\n+        \"native mod a { }\"\n+    );\n+    assert option::get(doc.cratemod().index).entries[0] == {\n+        kind: \"Native module\",\n+        name: \"a\",\n+        brief: none,\n+        link: \"a.html\"\n+    };\n+}\n+\n #[test]\n fn should_add_brief_desc_to_index() {\n     let doc = test::mk_doc("}, {"sha": "257f59699eaa730560f7e48dd80c175f83782a80", "filename": "src/rustdoc/page_pass.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef/src%2Frustdoc%2Fpage_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef/src%2Frustdoc%2Fpage_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpage_pass.rs?ref=a5368fb6d841a244ddd6fb7f983b90ac1ce0c9ef", "patch": "@@ -59,7 +59,8 @@ fn make_doc_from_pages(page_port: page_port) -> doc::doc {\n fn find_pages(doc: doc::doc, page_chan: page_chan) {\n     let fold = fold::fold({\n         fold_crate: fold_crate,\n-        fold_mod: fold_mod\n+        fold_mod: fold_mod,\n+        fold_nmod: fold_nmod\n         with *fold::default_any_fold(page_chan)\n     });\n     fold.fold_doc(fold, doc);\n@@ -106,13 +107,24 @@ fn strip_mod(doc: doc::moddoc) -> doc::moddoc {\n         items: vec::filter(doc.items) {|item|\n             alt item {\n               doc::modtag(_) { false }\n+              doc::nmodtag(_) { false }\n               _ { true }\n             }\n         }\n         with doc\n     }\n }\n \n+fn fold_nmod(\n+    fold: fold::fold<page_chan>,\n+    doc: doc::nmoddoc\n+) -> doc::nmoddoc {\n+    let doc = fold::default_seq_fold_nmod(fold, doc);\n+    let page = doc::itempage(doc::nmodtag(doc));\n+    comm::send(fold.ctxt, some(page));\n+    ret doc;\n+}\n+\n #[test]\n fn should_not_split_the_doc_into_pages_for_doc_per_crate() {\n     let doc = test::mk_doc_(\n@@ -134,6 +146,18 @@ fn should_remove_mods_from_containing_mods() {\n     assert vec::is_empty(doc.cratemod().mods());\n }\n \n+#[test]\n+fn should_make_a_page_for_every_native_mod() {\n+    let doc = test::mk_doc(\"native mod a { }\");\n+    assert doc.pages.nmods()[0].name() == \"a\";\n+}\n+\n+#[test]\n+fn should_remove_native_mods_from_containing_mods() {\n+    let doc = test::mk_doc(\"native mod a { }\");\n+    assert vec::is_empty(doc.cratemod().nmods());\n+}\n+\n #[cfg(test)]\n mod test {\n     fn mk_doc_("}]}