{"sha": "b4b1e5ece21fb497877350c3d6defa143c88076c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YjFlNWVjZTIxZmI0OTc4NzczNTBjM2Q2ZGVmYTE0M2M4ODA3NmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-12T13:19:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-12T13:19:33Z"}, "message": "Auto merge of #38049 - frewsxcv:libunicode, r=alexcrichton\n\nRename 'librustc_unicode' crate to 'libstd_unicode'.\n\nFixes https://github.com/rust-lang/rust/issues/26554.", "tree": {"sha": "ea9fb5fbf9239b9e3275f4a13fcfe11ea8bdd191", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea9fb5fbf9239b9e3275f4a13fcfe11ea8bdd191"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4b1e5ece21fb497877350c3d6defa143c88076c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4b1e5ece21fb497877350c3d6defa143c88076c", "html_url": "https://github.com/rust-lang/rust/commit/b4b1e5ece21fb497877350c3d6defa143c88076c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4b1e5ece21fb497877350c3d6defa143c88076c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0eae43e4d00ca6697da59b84c7cdf1c8ea83ea00", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eae43e4d00ca6697da59b84c7cdf1c8ea83ea00", "html_url": "https://github.com/rust-lang/rust/commit/0eae43e4d00ca6697da59b84c7cdf1c8ea83ea00"}, {"sha": "274777a1588660b11a278ef52366743d82eb63ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/274777a1588660b11a278ef52366743d82eb63ab", "html_url": "https://github.com/rust-lang/rust/commit/274777a1588660b11a278ef52366743d82eb63ab"}], "stats": {"total": 88, "additions": 44, "deletions": 44}, "files": [{"sha": "79df941aeb3eec482b1f166bec2e8d2379cb6c29", "filename": "mk/crates.mk", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -52,7 +52,7 @@\n TARGET_CRATES := libc std term \\\n                  getopts collections test rand \\\n                  compiler_builtins core alloc \\\n-                 rustc_unicode rustc_bitflags \\\n+                 std_unicode rustc_bitflags \\\n \t\t alloc_system alloc_jemalloc \\\n \t\t panic_abort panic_unwind unwind\n RUSTC_CRATES := rustc rustc_typeck rustc_mir rustc_borrowck rustc_resolve rustc_driver \\\n@@ -69,19 +69,19 @@ DEPS_compiler_builtins := core native:compiler-rt\n DEPS_alloc := core libc alloc_system\n DEPS_alloc_system := core libc\n DEPS_alloc_jemalloc := core libc native:jemalloc\n-DEPS_collections := core alloc rustc_unicode\n+DEPS_collections := core alloc std_unicode\n DEPS_libc := core\n DEPS_rand := core\n DEPS_rustc_bitflags := core\n-DEPS_rustc_unicode := core\n+DEPS_std_unicode := core\n DEPS_panic_abort := libc alloc\n DEPS_panic_unwind := libc alloc unwind\n DEPS_unwind := libc\n \n RUSTFLAGS_compiler_builtins := -lstatic=compiler-rt\n RUSTFLAGS_panic_abort := -C panic=abort\n \n-DEPS_std := core libc rand alloc collections compiler_builtins rustc_unicode \\\n+DEPS_std := core libc rand alloc collections compiler_builtins std_unicode \\\n \tnative:backtrace \\\n \talloc_system panic_abort panic_unwind unwind\n DEPS_arena := std\n@@ -96,7 +96,7 @@ DEPS_serialize := std log\n DEPS_term := std\n DEPS_test := std getopts term native:rust_test_helpers\n \n-DEPS_syntax := std term serialize log arena libc rustc_bitflags rustc_unicode rustc_errors syntax_pos rustc_data_structures\n+DEPS_syntax := std term serialize log arena libc rustc_bitflags std_unicode rustc_errors syntax_pos rustc_data_structures\n DEPS_syntax_ext := syntax syntax_pos rustc_errors fmt_macros proc_macro\n DEPS_syntax_pos := serialize\n DEPS_proc_macro_tokens := syntax syntax_pos log\n@@ -158,7 +158,7 @@ ONLY_RLIB_libc := 1\n ONLY_RLIB_alloc := 1\n ONLY_RLIB_rand := 1\n ONLY_RLIB_collections := 1\n-ONLY_RLIB_rustc_unicode := 1\n+ONLY_RLIB_std_unicode := 1\n ONLY_RLIB_rustc_bitflags := 1\n ONLY_RLIB_alloc_system := 1\n ONLY_RLIB_alloc_jemalloc := 1\n@@ -169,7 +169,7 @@ ONLY_RLIB_unwind := 1\n TARGET_SPECIFIC_alloc_jemalloc := 1\n \n # Documented-by-default crates\n-DOC_CRATES := std alloc collections core libc rustc_unicode\n+DOC_CRATES := std alloc collections core libc std_unicode\n \n ifeq ($(CFG_DISABLE_JEMALLOC),)\n RUSTFLAGS_rustc_back := --cfg 'feature=\"jemalloc\"'"}, {"sha": "345fc1679b00f9b85d6b1fdd5ca6a2e47962d2c8", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -15,7 +15,7 @@\n \n # The names of crates that must be tested\n \n-# libcore/librustc_unicode tests are in a separate crate\n+# libcore/libstd_unicode tests are in a separate crate\n DEPS_coretest :=\n $(eval $(call RUST_CRATE,coretest))\n "}, {"sha": "4c6aeeddd386c8d3f756059155da71445c819e24", "filename": "src/Cargo.lock", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -72,7 +72,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"alloc 0.0.0\",\n  \"core 0.0.0\",\n- \"rustc_unicode 0.0.0\",\n+ \"std_unicode 0.0.0\",\n ]\n \n [[package]]\n@@ -545,13 +545,6 @@ dependencies = [\n  \"syntax_pos 0.0.0\",\n ]\n \n-[[package]]\n-name = \"rustc_unicode\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"core 0.0.0\",\n-]\n-\n [[package]]\n name = \"rustdoc\"\n version = \"0.0.0\"\n@@ -599,7 +592,7 @@ dependencies = [\n  \"panic_abort 0.0.0\",\n  \"panic_unwind 0.0.0\",\n  \"rand 0.0.0\",\n- \"rustc_unicode 0.0.0\",\n+ \"std_unicode 0.0.0\",\n  \"unwind 0.0.0\",\n ]\n \n@@ -611,6 +604,13 @@ dependencies = [\n  \"std 0.0.0\",\n ]\n \n+[[package]]\n+name = \"std_unicode\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"core 0.0.0\",\n+]\n+\n [[package]]\n name = \"syntax\"\n version = \"0.0.0\""}, {"sha": "ab882fde9c2775683f0b63f48f3cc843232a319e", "filename": "src/libcollections/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2FCargo.toml?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n [dependencies]\n alloc = { path = \"../liballoc\" }\n core = { path = \"../libcore\" }\n-rustc_unicode = { path = \"../librustc_unicode\" }\n+std_unicode = { path = \"../libstd_unicode\" }\n \n [[test]]\n name = \"collectionstest\""}, {"sha": "68b067012d3fa72db822c122427a4fa21228484e", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -59,7 +59,7 @@\n \n #![no_std]\n \n-extern crate rustc_unicode;\n+extern crate std_unicode;\n extern crate alloc;\n \n #[cfg(test)]"}, {"sha": "d4be0914f15c83598b7d79f7e87c1e7e2d868339", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -24,12 +24,12 @@ use core::str::pattern::Pattern;\n use core::str::pattern::{Searcher, ReverseSearcher, DoubleEndedSearcher};\n use core::mem;\n use core::iter::FusedIterator;\n-use rustc_unicode::str::{UnicodeStr, Utf16Encoder};\n+use std_unicode::str::{UnicodeStr, Utf16Encoder};\n \n use vec_deque::VecDeque;\n use borrow::{Borrow, ToOwned};\n use string::String;\n-use rustc_unicode;\n+use std_unicode;\n use vec::Vec;\n use slice::SliceConcatExt;\n use boxed::Box;\n@@ -54,7 +54,7 @@ pub use core::str::{from_utf8, Chars, CharIndices, Bytes};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::str::{from_utf8_unchecked, ParseBoolError};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use rustc_unicode::str::SplitWhitespace;\n+pub use std_unicode::str::SplitWhitespace;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::str::pattern;\n \n@@ -1705,7 +1705,7 @@ impl str {\n         }\n \n         fn case_ignoreable_then_cased<I: Iterator<Item = char>>(iter: I) -> bool {\n-            use rustc_unicode::derived_property::{Cased, Case_Ignorable};\n+            use std_unicode::derived_property::{Cased, Case_Ignorable};\n             match iter.skip_while(|&c| Case_Ignorable(c)).next() {\n                 Some(c) => Cased(c),\n                 None => false,"}, {"sha": "b4c41a99a6b971715f679d2e62a560c23cb7b2f7", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -63,8 +63,8 @@ use core::mem;\n use core::ops::{self, Add, AddAssign, Index, IndexMut};\n use core::ptr;\n use core::str::pattern::Pattern;\n-use rustc_unicode::char::{decode_utf16, REPLACEMENT_CHARACTER};\n-use rustc_unicode::str as unicode_str;\n+use std_unicode::char::{decode_utf16, REPLACEMENT_CHARACTER};\n+use std_unicode::str as unicode_str;\n \n use borrow::{Cow, ToOwned};\n use range::RangeArgument;"}, {"sha": "0fe0a1bad64554805cf3d91e1b01239cf3d39d48", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -33,7 +33,7 @@\n \n extern crate collections;\n extern crate test;\n-extern crate rustc_unicode;\n+extern crate std_unicode;\n \n use std::hash::{Hash, Hasher};\n use std::collections::hash_map::DefaultHasher;"}, {"sha": "384579ce6b8b46af7ef6feb7bc2aba6f42ee8f47", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -530,7 +530,7 @@ fn from_utf8_mostly_ascii() {\n \n #[test]\n fn test_is_utf16() {\n-    use rustc_unicode::str::is_utf16;\n+    use std_unicode::str::is_utf16;\n \n     macro_rules! pos {\n         ($($e:expr),*) => { { $(assert!(is_utf16($e));)* } }\n@@ -1186,7 +1186,7 @@ fn test_rev_split_char_iterator_no_trailing() {\n \n #[test]\n fn test_utf16_code_units() {\n-    use rustc_unicode::str::Utf16Encoder;\n+    use std_unicode::str::Utf16Encoder;\n     assert_eq!(Utf16Encoder::new(vec!['\u00e9', '\\u{1F4A9}'].into_iter()).collect::<Vec<u16>>(),\n                [0xE9, 0xD83D, 0xDCA9])\n }"}, {"sha": "a7d85d0bea13a76a22ccc355b87ea821af637e22", "filename": "src/libcollectionstest/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollectionstest%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcollectionstest%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstring.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -132,7 +132,7 @@ fn test_from_utf16() {\n         let s_as_utf16 = s.encode_utf16().collect::<Vec<u16>>();\n         let u_as_string = String::from_utf16(&u).unwrap();\n \n-        assert!(::rustc_unicode::str::is_utf16(&u));\n+        assert!(::std_unicode::str::is_utf16(&u));\n         assert_eq!(s_as_utf16, u);\n \n         assert_eq!(u_as_string, s);"}, {"sha": "7f3ac13bac1f3a6049311f1e834b142e4a7beb1a", "filename": "src/libcore/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -10,7 +10,7 @@\n \n //! Character manipulation.\n //!\n-//! For more details, see ::rustc_unicode::char (a.k.a. std::char)\n+//! For more details, see ::std_unicode::char (a.k.a. std::char)\n \n #![allow(non_snake_case)]\n #![stable(feature = \"core_char\", since = \"1.2.0\")]"}, {"sha": "92fb01e535c9d993fd1fa6bec38b4d47e1c0a9ee", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -40,7 +40,7 @@\n extern crate core;\n extern crate test;\n extern crate libc;\n-extern crate rustc_unicode;\n+extern crate std_unicode;\n extern crate rand;\n \n mod any;"}, {"sha": "09a0c7f9be4ea389f76e4abc337925c547994967", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -31,7 +31,7 @@ extern crate term;\n extern crate log;\n #[macro_use]\n extern crate libc;\n-extern crate rustc_unicode;\n+extern crate std_unicode;\n extern crate serialize as rustc_serialize; // used by deriving\n extern crate syntax_pos;\n "}, {"sha": "74c7bc1019414fb3b4b311491e1b2cc15eea64f3", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -45,7 +45,7 @@ extern crate serialize;\n #[macro_use] extern crate syntax;\n extern crate syntax_pos;\n extern crate test as testing;\n-extern crate rustc_unicode;\n+extern crate std_unicode;\n #[macro_use] extern crate log;\n extern crate rustc_errors as errors;\n "}, {"sha": "b96a737ed000748706375018180400470455950f", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -345,7 +345,7 @@ pub fn maketest(s: &str, cratename: Option<&str>, dont_insert_main: bool,\n }\n \n fn partition_source(s: &str) -> (String, String) {\n-    use rustc_unicode::str::UnicodeStr;\n+    use std_unicode::str::UnicodeStr;\n \n     let mut after_header = false;\n     let mut before = String::new();"}, {"sha": "ad2304e1556a4ae85efee7800c6aa3dbd86b10a1", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -41,7 +41,7 @@ Core encoding and decoding interfaces.\n #[cfg(test)] extern crate test;\n #[macro_use] extern crate log;\n \n-extern crate rustc_unicode;\n+extern crate std_unicode;\n extern crate collections;\n \n pub use self::serialize::{Decoder, Encoder, Decodable, Encodable};"}, {"sha": "fcf84cb716917ea51b70e7efc1bee89b54a557b2", "filename": "src/libstd/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2FCargo.toml?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -20,7 +20,7 @@ core = { path = \"../libcore\" }\n libc = { path = \"../rustc/libc_shim\" }\n rand = { path = \"../librand\" }\n compiler_builtins = { path = \"../libcompiler_builtins\" }\n-rustc_unicode = { path = \"../librustc_unicode\" }\n+std_unicode = { path = \"../libstd_unicode\" }\n unwind = { path = \"../libunwind\" }\n \n [build-dependencies]"}, {"sha": "b3b89213df1feb69798a89eddf3a104caea73aa7", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -256,7 +256,7 @@\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use cmp;\n-use rustc_unicode::str as core_str;\n+use std_unicode::str as core_str;\n use error as std_error;\n use fmt;\n use result;"}, {"sha": "414f25fa5eb33af7bfb54edd797601d9fc1bef0c", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -323,7 +323,7 @@ extern crate collections as core_collections;\n \n #[allow(deprecated)] extern crate rand as core_rand;\n extern crate alloc;\n-extern crate rustc_unicode;\n+extern crate std_unicode;\n extern crate libc;\n \n // We always need an unwinder currently for backtraces\n@@ -420,7 +420,7 @@ pub use core_collections::string;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core_collections::vec;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use rustc_unicode::char;\n+pub use std_unicode::char;\n \n pub mod f32;\n pub mod f64;"}, {"sha": "28fbd3c1aa94cbefc8b5f0a5b33bdf861e035eed", "filename": "src/libstd_unicode/Cargo.toml", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2FCargo.toml?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -1,10 +1,10 @@\n [package]\n authors = [\"The Rust Project Developers\"]\n-name = \"rustc_unicode\"\n+name = \"std_unicode\"\n version = \"0.0.0\"\n \n [lib]\n-name = \"rustc_unicode\"\n+name = \"std_unicode\"\n path = \"lib.rs\"\n test = false\n bench = false", "previous_filename": "src/librustc_unicode/Cargo.toml"}, {"sha": "94599216db6a849d36e95f29b3d19fe047442f0f", "filename": "src/libstd_unicode/char.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fchar.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "previous_filename": "src/librustc_unicode/char.rs"}, {"sha": "b086658ee0d030822ccd4b6bf60c5fdc185ee579", "filename": "src/libstd_unicode/lib.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -20,7 +20,7 @@\n //! provide for basic string-related manipulations. This crate does not\n //! (yet) aim to provide a full set of Unicode tables.\n \n-#![crate_name = \"rustc_unicode\"]\n+#![crate_name = \"std_unicode\"]\n #![unstable(feature = \"unicode\", issue = \"27783\")]\n #![crate_type = \"rlib\"]\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",", "previous_filename": "src/librustc_unicode/lib.rs"}, {"sha": "21543e2ad073e4d9745f1bd168e5d1e99498987d", "filename": "src/libstd_unicode/tables.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Ftables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Ftables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Ftables.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "previous_filename": "src/librustc_unicode/tables.rs"}, {"sha": "1c7894794c9c8f6c55b3299f7f114110e5d9b8e1", "filename": "src/libstd_unicode/u_str.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Fu_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibstd_unicode%2Fu_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fu_str.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "previous_filename": "src/librustc_unicode/u_str.rs"}, {"sha": "b3b0ee6093ddf42b26c89d797ad9d2d32680dd9a", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -41,7 +41,7 @@ extern crate term;\n extern crate libc;\n #[macro_use] extern crate log;\n #[macro_use] #[no_link] extern crate rustc_bitflags;\n-extern crate rustc_unicode;\n+extern crate std_unicode;\n pub extern crate rustc_errors as errors;\n extern crate syntax_pos;\n extern crate rustc_data_structures;"}, {"sha": "818742e4492f267deeff746b1a3f2f2471a2f7ef", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b1e5ece21fb497877350c3d6defa143c88076c/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=b4b1e5ece21fb497877350c3d6defa143c88076c", "patch": "@@ -16,7 +16,7 @@ use ext::tt::transcribe::tt_next_token;\n use parse::token;\n use str::char_at;\n use symbol::{Symbol, keywords};\n-use rustc_unicode::property::Pattern_White_Space;\n+use std_unicode::property::Pattern_White_Space;\n \n use std::borrow::Cow;\n use std::char;"}]}