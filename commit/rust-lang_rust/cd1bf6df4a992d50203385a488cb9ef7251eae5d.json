{"sha": "cd1bf6df4a992d50203385a488cb9ef7251eae5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMWJmNmRmNGE5OTJkNTAyMDMzODVhNDg4Y2I5ZWY3MjUxZWFlNWQ=", "commit": {"author": {"name": "smt923", "email": "smtea923@gmail.com", "date": "2017-09-10T03:10:19Z"}, "committer": {"name": "smt923", "email": "smtea923@gmail.com", "date": "2017-09-10T03:10:19Z"}, "message": "Added short examples for 'str::from_utf8_mut'", "tree": {"sha": "8242099203172270cfa87bcc98b0e04abb022678", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8242099203172270cfa87bcc98b0e04abb022678"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd1bf6df4a992d50203385a488cb9ef7251eae5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd1bf6df4a992d50203385a488cb9ef7251eae5d", "html_url": "https://github.com/rust-lang/rust/commit/cd1bf6df4a992d50203385a488cb9ef7251eae5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd1bf6df4a992d50203385a488cb9ef7251eae5d/comments", "author": {"login": "smt923", "id": 3849041, "node_id": "MDQ6VXNlcjM4NDkwNDE=", "avatar_url": "https://avatars.githubusercontent.com/u/3849041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smt923", "html_url": "https://github.com/smt923", "followers_url": "https://api.github.com/users/smt923/followers", "following_url": "https://api.github.com/users/smt923/following{/other_user}", "gists_url": "https://api.github.com/users/smt923/gists{/gist_id}", "starred_url": "https://api.github.com/users/smt923/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smt923/subscriptions", "organizations_url": "https://api.github.com/users/smt923/orgs", "repos_url": "https://api.github.com/users/smt923/repos", "events_url": "https://api.github.com/users/smt923/events{/privacy}", "received_events_url": "https://api.github.com/users/smt923/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smt923", "id": 3849041, "node_id": "MDQ6VXNlcjM4NDkwNDE=", "avatar_url": "https://avatars.githubusercontent.com/u/3849041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smt923", "html_url": "https://github.com/smt923", "followers_url": "https://api.github.com/users/smt923/followers", "following_url": "https://api.github.com/users/smt923/following{/other_user}", "gists_url": "https://api.github.com/users/smt923/gists{/gist_id}", "starred_url": "https://api.github.com/users/smt923/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smt923/subscriptions", "organizations_url": "https://api.github.com/users/smt923/orgs", "repos_url": "https://api.github.com/users/smt923/repos", "events_url": "https://api.github.com/users/smt923/events{/privacy}", "received_events_url": "https://api.github.com/users/smt923/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd123ed9a35ec76103d42cecf322ee8d2896bf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd123ed9a35ec76103d42cecf322ee8d2896bf9", "html_url": "https://github.com/rust-lang/rust/commit/ddd123ed9a35ec76103d42cecf322ee8d2896bf9"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "bac3d509c1714935894c6114b058c855ad291ee9", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cd1bf6df4a992d50203385a488cb9ef7251eae5d/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd1bf6df4a992d50203385a488cb9ef7251eae5d/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=cd1bf6df4a992d50203385a488cb9ef7251eae5d", "patch": "@@ -302,6 +302,36 @@ pub fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error> {\n }\n \n /// Converts a mutable slice of bytes to a mutable string slice.\n+///\n+/// # Examples\n+///\n+/// Basic usage:\n+///\n+/// ```\n+/// use std::str;\n+///\n+/// // \"Hello, Rust!\" as a mutable vector\n+/// let mut hellorust = vec![72, 101, 108, 108, 111, 44, 32, 82, 117, 115, 116, 33];\n+///\n+/// // As we know these bytes are valid, we can use `unwrap()`\n+/// let outstr = str::from_utf8_mut(&mut hellorust).unwrap();\n+///\n+/// assert_eq!(\"Hello, Rust!\", outstr);\n+/// ```\n+/// \n+/// # Incorrect bytes:\n+///\n+/// ```\n+/// use std::str;\n+/// \n+/// // Some invalid bytes in a mutable vector\n+/// let mut invalid = vec![128, 223];\n+///\n+/// assert!(str::from_utf8_mut(&mut invalid).is_err());\n+/// ```\n+/// See the docs for [`Utf8Error`][error] for more details on the kinds of\n+/// errors that can be returned.\n+///\n #[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]\n pub fn from_utf8_mut(v: &mut [u8]) -> Result<&mut str, Utf8Error> {\n     run_utf8_validation(v)?;"}]}