{"sha": "2eb1677b12f15a377111e877f6a09e1a1550c8be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYjE2NzdiMTJmMTVhMzc3MTExZTg3N2Y2YTA5ZTFhMTU1MGM4YmU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-16T10:33:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-16T10:33:13Z"}, "message": "Merge #3603\n\n3603: Fix crate display name dashes r=matklad a=SomeoneToIgnore\n\nA follow-up of https://github.com/rust-analyzer/rust-analyzer/pull/3602#discussion_r392733525\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "65212bd2a271776683682c76c7f033abe83a907d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65212bd2a271776683682c76c7f033abe83a907d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eb1677b12f15a377111e877f6a09e1a1550c8be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeb1XpCRBK7hj4Ov3rIwAAdHIIADJdy0cmmFvGMrmGQplS4BxR\n12efO5TSrTtTEURjT3398ENApHBZyZlCNFxCTHoBJ6B/swPPrzZkNjvbyXhfqBNS\nAJ8ejNzcxt64g+7/IbaTXLOF0G7xKZwruQAvZIVLgWr50PIBF+J0yhXfElHEG8Lg\nV3kyISjq74jp0lkZLH7YgqPC6cELrMAjuJC9V7iVq5LqKZKog9IHEOcQ0BcBV1gQ\nQFZqc82sCdLsKhSt4hVs6+BvOmiiXfHWvK43SZ8IZYDUI6Fl06FlbC56bskfISCM\nwg3VQyoVl5s9Ixua1oPgdvugbXLv0OuQU3Z3TNsubG7E17J+HbS6FdTgifNVlsQ=\n=/fXA\n-----END PGP SIGNATURE-----\n", "payload": "tree 65212bd2a271776683682c76c7f033abe83a907d\nparent 200c275c2e9955371e61f6ad7684084655df46fc\nparent 92fd430dab8cd0c7a476ccc5db87607f3f0f00a2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1584354793 +0000\ncommitter GitHub <noreply@github.com> 1584354793 +0000\n\nMerge #3603\n\n3603: Fix crate display name dashes r=matklad a=SomeoneToIgnore\n\nA follow-up of https://github.com/rust-analyzer/rust-analyzer/pull/3602#discussion_r392733525\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb1677b12f15a377111e877f6a09e1a1550c8be", "html_url": "https://github.com/rust-lang/rust/commit/2eb1677b12f15a377111e877f6a09e1a1550c8be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eb1677b12f15a377111e877f6a09e1a1550c8be/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "200c275c2e9955371e61f6ad7684084655df46fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/200c275c2e9955371e61f6ad7684084655df46fc", "html_url": "https://github.com/rust-lang/rust/commit/200c275c2e9955371e61f6ad7684084655df46fc"}, {"sha": "92fd430dab8cd0c7a476ccc5db87607f3f0f00a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/92fd430dab8cd0c7a476ccc5db87607f3f0f00a2", "html_url": "https://github.com/rust-lang/rust/commit/92fd430dab8cd0c7a476ccc5db87607f3f0f00a2"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "3464f43dfb916602e259ce53b82410550184f8ea", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=2eb1677b12f15a377111e877f6a09e1a1550c8be", "patch": "@@ -64,7 +64,9 @@ fn with_single_file(db: &mut dyn SourceDatabaseExt, ra_fixture: &str) -> FileId\n         crate_graph.add_crate_root(\n             file_id,\n             meta.edition,\n-            meta.krate,\n+            meta.krate.map(|name| {\n+                CrateName::new(&name).expect(\"Fixture crate name should not contain dashes\")\n+            }),\n             meta.cfg,\n             meta.env,\n             Default::default(),\n@@ -124,7 +126,7 @@ fn with_files(db: &mut dyn SourceDatabaseExt, fixture: &str) -> Option<FilePosit\n             let crate_id = crate_graph.add_crate_root(\n                 file_id,\n                 meta.edition,\n-                Some(krate.clone()),\n+                Some(CrateName::new(&krate).unwrap()),\n                 meta.cfg,\n                 meta.env,\n                 Default::default(),"}, {"sha": "bde843001a64971296927b87924723660235ef56", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=2eb1677b12f15a377111e877f6a09e1a1550c8be", "patch": "@@ -14,6 +14,7 @@ use rustc_hash::FxHashMap;\n use rustc_hash::FxHashSet;\n \n use crate::{RelativePath, RelativePathBuf};\n+use fmt::Display;\n \n /// `FileId` is an integer which uniquely identifies a file. File paths are\n /// messy and system-dependent, so most of the code should work directly with\n@@ -83,6 +84,7 @@ pub struct CrateGraph {\n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct CrateId(pub u32);\n \n+#[derive(Debug, Clone, PartialEq, Eq)]\n pub struct CrateName(SmolStr);\n \n impl CrateName {\n@@ -103,14 +105,20 @@ impl CrateName {\n     }\n }\n \n+impl Display for CrateName {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"{}\", self.0)\n+    }\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct CrateData {\n     pub root_file_id: FileId,\n     pub edition: Edition,\n     /// The name to display to the end user.\n     /// This actual crate name can be different in a particular dependent crate\n     /// or may even be missing for some cases, such as a dummy crate for the code snippet.\n-    pub display_name: Option<String>,\n+    pub display_name: Option<CrateName>,\n     pub cfg_options: CfgOptions,\n     pub env: Env,\n     pub extern_source: ExternSource,\n@@ -150,7 +158,7 @@ impl CrateGraph {\n         &mut self,\n         file_id: FileId,\n         edition: Edition,\n-        display_name: Option<String>,\n+        display_name: Option<CrateName>,\n         cfg_options: CfgOptions,\n         env: Env,\n         extern_source: ExternSource,"}, {"sha": "03515309e081234d3ca8daaa23f1385a57625b81", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=2eb1677b12f15a377111e877f6a09e1a1550c8be", "patch": "@@ -177,8 +177,13 @@ pub struct ModuleData {\n \n impl CrateDefMap {\n     pub(crate) fn crate_def_map_query(db: &impl DefDatabase, krate: CrateId) -> Arc<CrateDefMap> {\n-        let _p = profile(\"crate_def_map_query\")\n-            .detail(|| db.crate_graph()[krate].display_name.clone().unwrap_or_default());\n+        let _p = profile(\"crate_def_map_query\").detail(|| {\n+            db.crate_graph()[krate]\n+                .display_name\n+                .as_ref()\n+                .map(ToString::to_string)\n+                .unwrap_or_default()\n+        });\n         let def_map = {\n             let edition = db.crate_graph()[krate].edition;\n             let mut modules: Arena<LocalModuleId, ModuleData> = Arena::default();"}, {"sha": "5b3760c1866929f8abacb39c29a9759e51a01707", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=2eb1677b12f15a377111e877f6a09e1a1550c8be", "patch": "@@ -94,7 +94,7 @@ fn definition_owner_name(db: &RootDatabase, def: &Definition) -> Option<String>\n \n fn determine_mod_path(db: &RootDatabase, def: &Definition) -> Option<String> {\n     let mod_path = def.module(db).map(|module| {\n-        once(db.crate_graph()[module.krate().into()].display_name.clone())\n+        once(db.crate_graph()[module.krate().into()].display_name.as_ref().map(ToString::to_string))\n             .chain(\n                 module\n                     .path_to_root(db)"}, {"sha": "2cf77a31f50da7474e3522c3126b401d03df3338", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=2eb1677b12f15a377111e877f6a09e1a1550c8be", "patch": "@@ -109,7 +109,7 @@ impl MockAnalysis {\n                 let other_crate = crate_graph.add_crate_root(\n                     file_id,\n                     Edition2018,\n-                    Some(crate_name.to_owned()),\n+                    Some(CrateName::new(crate_name).unwrap()),\n                     cfg_options,\n                     Env::default(),\n                     Default::default(),"}, {"sha": "89787481342bb0bb8229df3556bd36489f0d66ab", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1677b12f15a377111e877f6a09e1a1550c8be/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=2eb1677b12f15a377111e877f6a09e1a1550c8be", "patch": "@@ -245,7 +245,10 @@ impl ProjectWorkspace {\n                         let crate_id = crate_graph.add_crate_root(\n                             file_id,\n                             Edition::Edition2018,\n-                            Some(krate.name(&sysroot).to_string()),\n+                            Some(\n+                                CrateName::new(krate.name(&sysroot))\n+                                    .expect(\"Sysroot crate names should not contain dashes\"),\n+                            ),\n                             cfg_options,\n                             env,\n                             extern_source,\n@@ -296,7 +299,7 @@ impl ProjectWorkspace {\n                             let crate_id = crate_graph.add_crate_root(\n                                 file_id,\n                                 edition,\n-                                Some(pkg.name(&cargo).to_string()),\n+                                Some(CrateName::normalize_dashes(pkg.name(&cargo))),\n                                 cfg_options,\n                                 env,\n                                 extern_source,"}]}