{"sha": "47c311a7053069cf9640e2f88eced24b202bf218", "node_id": "C_kwDOAAsO6NoAKDQ3YzMxMWE3MDUzMDY5Y2Y5NjQwZTJmODhlY2VkMjRiMjAyYmYyMTg", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-10T14:32:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-17T17:06:27Z"}, "message": "Use Symbol for target features in asm handling\n\nThis saves a couple of Symbol::intern calls", "tree": {"sha": "4b6d4e9d19be700457880cf76411a17c832da9a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b6d4e9d19be700457880cf76411a17c832da9a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c311a7053069cf9640e2f88eced24b202bf218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c311a7053069cf9640e2f88eced24b202bf218", "html_url": "https://github.com/rust-lang/rust/commit/47c311a7053069cf9640e2f88eced24b202bf218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c311a7053069cf9640e2f88eced24b202bf218/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68cbb46913e42782a30e6127c0e9e3920d918b03", "url": "https://api.github.com/repos/rust-lang/rust/commits/68cbb46913e42782a30e6127c0e9e3920d918b03", "html_url": "https://github.com/rust-lang/rust/commit/68cbb46913e42782a30e6127c0e9e3920d918b03"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b4213da6e05042b42476746a69024bff9ad8e7ee", "filename": "src/asm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47c311a7053069cf9640e2f88eced24b202bf218/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c311a7053069cf9640e2f88eced24b202bf218/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=47c311a7053069cf9640e2f88eced24b202bf218", "patch": "@@ -5,7 +5,7 @@ use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::traits::{AsmBuilderMethods, AsmMethods, BaseTypeMethods, BuilderMethods, GlobalAsmOperandRef, InlineAsmOperandRef};\n \n use rustc_middle::{bug, ty::Instance};\n-use rustc_span::{Span, Symbol};\n+use rustc_span::Span;\n use rustc_target::asm::*;\n \n use std::borrow::Cow;\n@@ -172,7 +172,7 @@ impl<'a, 'gcc, 'tcx> AsmBuilderMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n                             let is_target_supported = reg.reg_class().supported_types(asm_arch).iter()\n                                 .any(|&(_, feature)| {\n                                     if let Some(feature) = feature {\n-                                        self.tcx.sess.target_features.contains(&Symbol::intern(feature))\n+                                        self.tcx.sess.target_features.contains(&feature)\n                                     } else {\n                                         true // Register class is unconditionally supported\n                                     }"}]}