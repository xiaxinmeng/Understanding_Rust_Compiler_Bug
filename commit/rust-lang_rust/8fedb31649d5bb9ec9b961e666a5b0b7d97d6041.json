{"sha": "8fedb31649d5bb9ec9b961e666a5b0b7d97d6041", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZWRiMzE2NDlkNWJiOWVjOWI5NjFlNjY2YTViMGI3ZDk3ZDYwNDE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T17:21:46Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-13T10:21:31Z"}, "message": "Use is_diagnostic_item instead of get_diagnostic_item.", "tree": {"sha": "1dbe97b2c6ca02ac1774bdcd95059e59a54fda2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dbe97b2c6ca02ac1774bdcd95059e59a54fda2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fedb31649d5bb9ec9b961e666a5b0b7d97d6041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fedb31649d5bb9ec9b961e666a5b0b7d97d6041", "html_url": "https://github.com/rust-lang/rust/commit/8fedb31649d5bb9ec9b961e666a5b0b7d97d6041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fedb31649d5bb9ec9b961e666a5b0b7d97d6041/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ad41069e65a10e8e5b6738ec53d874e2467d482", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ad41069e65a10e8e5b6738ec53d874e2467d482", "html_url": "https://github.com/rust-lang/rust/commit/5ad41069e65a10e8e5b6738ec53d874e2467d482"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3349063e5dcd96b42ccd4e644ca9ca8aea777211", "filename": "compiler/rustc_lint/src/non_fmt_panic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8fedb31649d5bb9ec9b961e666a5b0b7d97d6041/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fedb31649d5bb9ec9b961e666a5b0b7d97d6041/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs?ref=8fedb31649d5bb9ec9b961e666a5b0b7d97d6041", "patch": "@@ -124,10 +124,10 @@ fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tc\n             // If this is a &str or String, we can confidently give the `\"{}\", ` suggestion.\n             let is_str = matches!(\n                 ty.kind(),\n-                ty::Ref(_, r, _) if *r.kind() == ty::Str\n+                ty::Ref(_, r, _) if *r.kind() == ty::Str,\n             ) || matches!(\n-                (ty.ty_adt_def(), cx.tcx.get_diagnostic_item(sym::string_type)),\n-                (Some(ty_def), Some(string_type)) if ty_def.did == string_type\n+                ty.ty_adt_def(),\n+                Some(ty_def) if cx.tcx.is_diagnostic_item(sym::string_type, ty_def.did),\n             );\n             l.span_suggestion_verbose(\n                 arg_span.shrink_to_lo(),"}]}