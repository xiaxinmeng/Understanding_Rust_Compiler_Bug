{"sha": "9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmN2VkMmYwNTRjNzJkZDA5ODliNDJlZDNlNmE4MzllNjRkOWZhMWE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-31T00:17:42Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-31T00:17:42Z"}, "message": "Add a total version of vec::last that has a precondition", "tree": {"sha": "f8228d65358f4fd24965d5406c6f72b58a01b1f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8228d65358f4fd24965d5406c6f72b58a01b1f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a", "html_url": "https://github.com/rust-lang/rust/commit/9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fc72c21302d907a17affeaa4b72e114474410b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc72c21302d907a17affeaa4b72e114474410b0", "html_url": "https://github.com/rust-lang/rust/commit/4fc72c21302d907a17affeaa4b72e114474410b0"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "8a20345b864bd75c8cdf4e6e4065e6a176ceff23", "filename": "src/lib/vec.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a/src%2Flib%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a/src%2Flib%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fvec.rs?ref=9f7ed2f054c72dd0989b42ed3e6a839e64d9fa1a", "patch": "@@ -97,6 +97,11 @@ fn last<@T>(v: &[mutable? T]) -> option::t<T> {\n     ret some(v[len(v) - 1u]);\n }\n \n+/// Returns the last element of a non-empty vector `v`.\n+fn last_total<@T>(v: &[mutable? T]) : is_not_empty(v) -> T {\n+    ret v[len(v) - 1u];\n+}\n+\n /// Returns a copy of the elements from [`start`..`end`) from `v`.\n fn slice<@T>(v: &[mutable? T], start: uint, end: uint) -> [T] {\n     assert (start <= end);"}]}