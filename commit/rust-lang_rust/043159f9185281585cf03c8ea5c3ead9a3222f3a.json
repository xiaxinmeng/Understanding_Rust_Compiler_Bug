{"sha": "043159f9185281585cf03c8ea5c3ead9a3222f3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MzE1OWY5MTg1MjgxNTg1Y2YwM2M4ZWE1YzNlYWQ5YTMyMjJmM2E=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T10:11:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-05T10:11:13Z"}, "message": "Rollup merge of #64051 - alex:linux-kernel-module-target, r=joshtriplett\n\nAdd x86_64-linux-kernel target\n\nThis adds a target specification for Linux kernel modules on x86_64, as well as base code that can be shared with other architectures.\n\nI wasn't totally sure about what the best name for this was.\n\nThere's one open question on whether we should use the LLVM generic x86_64-elf target, or the same one used for the Linux userspace.\n\nr? @joshtriplett", "tree": {"sha": "ef4c4b96223a6df77769625a7df0da42b93522a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef4c4b96223a6df77769625a7df0da42b93522a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/043159f9185281585cf03c8ea5c3ead9a3222f3a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdcN9BCRBK7hj4Ov3rIwAAdHIIAAwjBNX5z4BaECE0mTUkDxVL\n7Xq9DnsFy4MVhztuSriJTfMoNEtzEN/HL1mcmN4CIrGqY3PqQgGARqOU+1PiuStg\n3xgf3mbW+5NNMiX2PDNGayM92pMrFzZU9LtyQeIqpc0HdqleLr9K0ygj5GN17bub\nLjAHHUtkV4cowQh9pQvTMo1K3tUkRXo+Lqeymr55e99b5uHI6Jo/QICbw4CNFsLR\nQkvb/qT0ke0ulYelpq8GeqhVPF7t/ubr1AtlGZJkD6HrbT1jKm40hgIuyzHsv0eR\ngMc6SsM6w+B4hvzuvcyMUcC+hm0RDjlBtNN+r96Xj7rTuf98TozK1opiLuvZ5hs=\n=IuGD\n-----END PGP SIGNATURE-----\n", "payload": "tree ef4c4b96223a6df77769625a7df0da42b93522a6\nparent fd46f6ed4158fe50e8eda731be749d99e1f47ff6\nparent 5e933b490b17de43b5c9b45b77088732f17b7ffd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567678273 +0200\ncommitter GitHub <noreply@github.com> 1567678273 +0200\n\nRollup merge of #64051 - alex:linux-kernel-module-target, r=joshtriplett\n\nAdd x86_64-linux-kernel target\n\nThis adds a target specification for Linux kernel modules on x86_64, as well as base code that can be shared with other architectures.\n\nI wasn't totally sure about what the best name for this was.\n\nThere's one open question on whether we should use the LLVM generic x86_64-elf target, or the same one used for the Linux userspace.\n\nr? @joshtriplett\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/043159f9185281585cf03c8ea5c3ead9a3222f3a", "html_url": "https://github.com/rust-lang/rust/commit/043159f9185281585cf03c8ea5c3ead9a3222f3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/043159f9185281585cf03c8ea5c3ead9a3222f3a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd46f6ed4158fe50e8eda731be749d99e1f47ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd46f6ed4158fe50e8eda731be749d99e1f47ff6", "html_url": "https://github.com/rust-lang/rust/commit/fd46f6ed4158fe50e8eda731be749d99e1f47ff6"}, {"sha": "5e933b490b17de43b5c9b45b77088732f17b7ffd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e933b490b17de43b5c9b45b77088732f17b7ffd", "html_url": "https://github.com/rust-lang/rust/commit/5e933b490b17de43b5c9b45b77088732f17b7ffd"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "fae44836fa821721b1e743cb8452c2dd085195d2", "filename": "src/librustc_target/spec/linux_kernel_base.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/043159f9185281585cf03c8ea5c3ead9a3222f3a/src%2Flibrustc_target%2Fspec%2Flinux_kernel_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/043159f9185281585cf03c8ea5c3ead9a3222f3a/src%2Flibrustc_target%2Fspec%2Flinux_kernel_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Flinux_kernel_base.rs?ref=043159f9185281585cf03c8ea5c3ead9a3222f3a", "patch": "@@ -0,0 +1,26 @@\n+use crate::spec::{LinkArgs, LinkerFlavor, PanicStrategy, RelroLevel, TargetOptions};\n+use std::default::Default;\n+\n+pub fn opts() -> TargetOptions {\n+    let mut pre_link_args = LinkArgs::new();\n+    pre_link_args.insert(\n+        LinkerFlavor::Gcc,\n+        vec![\"-Wl,--as-needed\".to_string(), \"-Wl,-z,noexecstack\".to_string()],\n+    );\n+\n+    TargetOptions {\n+        disable_redzone: true,\n+        panic_strategy: PanicStrategy::Abort,\n+        stack_probes: true,\n+        eliminate_frame_pointer: false,\n+        linker_is_gnu: true,\n+        position_independent_executables: true,\n+        needs_plt: true,\n+        relro_level: RelroLevel::Full,\n+        relocation_model: \"static\".to_string(),\n+        target_family: Some(\"unix\".to_string()),\n+        pre_link_args,\n+\n+        ..Default::default()\n+    }\n+}"}, {"sha": "503d8a08b6f4ff507687f800af0cd2812aaea5e9", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/043159f9185281585cf03c8ea5c3ead9a3222f3a/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/043159f9185281585cf03c8ea5c3ead9a3222f3a/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=043159f9185281585cf03c8ea5c3ead9a3222f3a", "patch": "@@ -53,6 +53,7 @@ mod freebsd_base;\n mod haiku_base;\n mod hermit_base;\n mod linux_base;\n+mod linux_kernel_base;\n mod linux_musl_base;\n mod openbsd_base;\n mod netbsd_base;\n@@ -386,6 +387,8 @@ supported_targets! {\n     (\"thumbv7neon-linux-androideabi\", thumbv7neon_linux_androideabi),\n     (\"aarch64-linux-android\", aarch64_linux_android),\n \n+    (\"x86_64-linux-kernel\", x86_64_linux_kernel),\n+\n     (\"aarch64-unknown-freebsd\", aarch64_unknown_freebsd),\n     (\"armv6-unknown-freebsd\", armv6_unknown_freebsd),\n     (\"armv7-unknown-freebsd\", armv7_unknown_freebsd),"}, {"sha": "a80b021208ed736185c4c1b3b35b1af015df038f", "filename": "src/librustc_target/spec/x86_64_linux_kernel.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/043159f9185281585cf03c8ea5c3ead9a3222f3a/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_kernel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/043159f9185281585cf03c8ea5c3ead9a3222f3a/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_kernel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_kernel.rs?ref=043159f9185281585cf03c8ea5c3ead9a3222f3a", "patch": "@@ -0,0 +1,31 @@\n+// This defines the amd64 target for the Linux Kernel. See the linux-kernel-base module for\n+// generic Linux kernel options.\n+\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::linux_kernel_base::opts();\n+    base.cpu = \"x86-64\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.features =\n+        \"-mmx,-sse,-sse2,-sse3,-ssse3,-sse4.1,-sse4.2,-3dnow,-3dnowa,-avx,-avx2,+soft-float\"\n+            .to_string();\n+    base.code_model = Some(\"kernel\".to_string());\n+    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n+\n+    Ok(Target {\n+        // FIXME: Some dispute, the linux-on-clang folks think this should use \"Linux\"\n+        llvm_target: \"x86_64-elf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        arch: \"x86_64\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+\n+        options: base,\n+    })\n+}"}]}