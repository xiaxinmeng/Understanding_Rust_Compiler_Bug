{"sha": "cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYzdlNWZhZWRjMGY3YWRiNDFjOGNjODFlZTdiZTU2ZDgyMTdmZDE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-13T19:22:00Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-23T11:48:24Z"}, "message": "Remove unused arguments", "tree": {"sha": "d88e360e6ba7e88bd273292a28c63b53242345d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d88e360e6ba7e88bd273292a28c63b53242345d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1", "html_url": "https://github.com/rust-lang/rust/commit/cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53acfc3f8a52f9d26ce3ea3cdaea00345b1e9973", "url": "https://api.github.com/repos/rust-lang/rust/commits/53acfc3f8a52f9d26ce3ea3cdaea00345b1e9973", "html_url": "https://github.com/rust-lang/rust/commit/53acfc3f8a52f9d26ce3ea3cdaea00345b1e9973"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "301dddbbfb9b2e748a51b02554270d83c44fa986", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=cac7e5faedc0f7adb41c8cc81ee7be56d8217fd1", "patch": "@@ -1702,12 +1702,12 @@ fn print_item(cx: &Context, item: &clean::Item, buf: &mut Buffer) {\n         clean::TypedefItem(ref t, _) => item_typedef(buf, cx, item, t),\n         clean::MacroItem(ref m) => item_macro(buf, cx, item, m),\n         clean::ProcMacroItem(ref m) => item_proc_macro(buf, cx, item, m),\n-        clean::PrimitiveItem(ref p) => item_primitive(buf, cx, item, p),\n+        clean::PrimitiveItem(_) => item_primitive(buf, cx, item),\n         clean::StaticItem(ref i) | clean::ForeignStaticItem(ref i) =>\n             item_static(buf, cx, item, i),\n         clean::ConstantItem(ref c) => item_constant(buf, cx, item, c),\n         clean::ForeignTypeItem => item_foreign_type(buf, cx, item),\n-        clean::KeywordItem(ref k) => item_keyword(buf, cx, item, k),\n+        clean::KeywordItem(_) => item_keyword(buf, cx, item),\n         clean::OpaqueTyItem(ref e, _) => item_opaque_ty(buf, cx, item, e),\n         clean::TraitAliasItem(ref ta) => item_trait_alias(buf, cx, item, ta),\n         _ => {\n@@ -3665,11 +3665,11 @@ fn print_sidebar(cx: &Context, it: &clean::Item, buffer: &mut Buffer) {\n     match it.inner {\n         clean::StructItem(ref s) => sidebar_struct(buffer, it, s),\n         clean::TraitItem(ref t) => sidebar_trait(buffer, it, t),\n-        clean::PrimitiveItem(ref p) => sidebar_primitive(buffer, it, p),\n+        clean::PrimitiveItem(_) => sidebar_primitive(buffer, it),\n         clean::UnionItem(ref u) => sidebar_union(buffer, it, u),\n         clean::EnumItem(ref e) => sidebar_enum(buffer, it, e),\n-        clean::TypedefItem(ref t, _) => sidebar_typedef(buffer, it, t),\n-        clean::ModuleItem(ref m) => sidebar_module(buffer, it, &m.items),\n+        clean::TypedefItem(_, _) => sidebar_typedef(buffer, it),\n+        clean::ModuleItem(ref m) => sidebar_module(buffer, &m.items),\n         clean::ForeignTypeItem => sidebar_foreign_type(buffer, it),\n         _ => (),\n     }\n@@ -4038,15 +4038,15 @@ fn sidebar_trait(buf: &mut Buffer, it: &clean::Item, t: &clean::Trait) {\n     write!(buf, \"<div class=\\\"block items\\\">{}</div>\", sidebar)\n }\n \n-fn sidebar_primitive(buf: &mut Buffer, it: &clean::Item, _p: &clean::PrimitiveType) {\n+fn sidebar_primitive(buf: &mut Buffer, it: &clean::Item) {\n     let sidebar = sidebar_assoc_items(it);\n \n     if !sidebar.is_empty() {\n         write!(buf, \"<div class=\\\"block items\\\">{}</div>\", sidebar);\n     }\n }\n \n-fn sidebar_typedef(buf: &mut Buffer, it: &clean::Item, _t: &clean::Typedef) {\n+fn sidebar_typedef(buf: &mut Buffer, it: &clean::Item) {\n     let sidebar = sidebar_assoc_items(it);\n \n     if !sidebar.is_empty() {\n@@ -4138,7 +4138,7 @@ fn item_ty_to_strs(ty: &ItemType) -> (&'static str, &'static str) {\n     }\n }\n \n-fn sidebar_module(buf: &mut Buffer, _it: &clean::Item, items: &[clean::Item]) {\n+fn sidebar_module(buf: &mut Buffer, items: &[clean::Item]) {\n     let mut sidebar = String::new();\n \n     if items.iter().any(|it| it.type_() == ItemType::ExternCrate ||\n@@ -4216,16 +4216,12 @@ fn item_proc_macro(w: &mut Buffer, cx: &Context, it: &clean::Item, m: &clean::Pr\n     document(w, cx, it)\n }\n \n-fn item_primitive(w: &mut Buffer, cx: &Context,\n-                  it: &clean::Item,\n-                  _p: &clean::PrimitiveType) {\n+fn item_primitive(w: &mut Buffer, cx: &Context, it: &clean::Item) {\n     document(w, cx, it);\n     render_assoc_items(w, cx, it, it.def_id, AssocItemRender::All)\n }\n \n-fn item_keyword(w: &mut Buffer, cx: &Context,\n-                it: &clean::Item,\n-                _p: &str) {\n+fn item_keyword(w: &mut Buffer, cx: &Context, it: &clean::Item) {\n     document(w, cx, it)\n }\n "}]}