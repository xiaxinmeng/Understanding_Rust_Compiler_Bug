{"sha": "8f7e441a547ee2d70d9401502171e944d6e5e797", "node_id": "C_kwDOAAsO6NoAKDhmN2U0NDFhNTQ3ZWUyZDcwZDk0MDE1MDIxNzFlOTQ0ZDZlNWU3OTc", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-12-04T18:21:37Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-27T18:22:44Z"}, "message": "Add mir-opt test.", "tree": {"sha": "06f1f0e9853861d187e6f071d44ac09698364619", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06f1f0e9853861d187e6f071d44ac09698364619"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f7e441a547ee2d70d9401502171e944d6e5e797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f7e441a547ee2d70d9401502171e944d6e5e797", "html_url": "https://github.com/rust-lang/rust/commit/8f7e441a547ee2d70d9401502171e944d6e5e797", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f7e441a547ee2d70d9401502171e944d6e5e797/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "html_url": "https://github.com/rust-lang/rust/commit/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256"}], "stats": {"total": 519, "additions": 519, "deletions": 0}, "files": [{"sha": "83e6926d5328eada1120e6bec0359fb969d9109d", "filename": "tests/mir-opt/slice_filter.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8f7e441a547ee2d70d9401502171e944d6e5e797/tests%2Fmir-opt%2Fslice_filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7e441a547ee2d70d9401502171e944d6e5e797/tests%2Fmir-opt%2Fslice_filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.rs?ref=8f7e441a547ee2d70d9401502171e944d6e5e797", "patch": "@@ -0,0 +1,21 @@\n+fn main() {\n+    let input = vec![];\n+\n+    // 1761ms on my machine\n+    let _variant_a_result = variant_a(&input);\n+\n+    //  656ms on my machine\n+    let _variant_b_result = variant_b(&input);\n+}\n+\n+\n+// EMIT_MIR slice_filter.variant_a-{closure#0}.DestinationPropagation.diff\n+pub fn variant_a(input: &[(usize, usize, usize, usize)]) -> usize {\n+    input.iter().filter(|(a, b, c, d)| a <= c && d <= b || c <= a && b <= d).count()\n+}\n+\n+\n+// EMIT_MIR slice_filter.variant_b-{closure#0}.DestinationPropagation.diff\n+pub fn variant_b(input: &[(usize, usize, usize, usize)]) -> usize {\n+    input.iter().filter(|&&(a, b, c, d)| a <= c && d <= b || c <= a && b <= d).count()\n+}"}, {"sha": "0f848ec07909b0d59679bf5b8534c8431ed8149e", "filename": "tests/mir-opt/slice_filter.variant_a-{closure#0}.DestinationPropagation.diff", "status": "added", "additions": 317, "deletions": 0, "changes": 317, "blob_url": "https://github.com/rust-lang/rust/blob/8f7e441a547ee2d70d9401502171e944d6e5e797/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8f7e441a547ee2d70d9401502171e944d6e5e797/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.DestinationPropagation.diff?ref=8f7e441a547ee2d70d9401502171e944d6e5e797", "patch": "@@ -0,0 +1,317 @@\n+- // MIR for `variant_a::{closure#0}` before DestinationPropagation\n++ // MIR for `variant_a::{closure#0}` after DestinationPropagation\n+  \n+  fn variant_a::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:14:25: 14:39], _2: &&(usize, usize, usize, usize)) -> bool {\n+      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:40: +0:40\n+      let _3: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+      let _4: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+      let _5: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+      let _6: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:56\n+      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:46\n+      let mut _9: &&usize;                 // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:41\n+      let mut _10: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n+      let _11: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n+      let mut _12: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:56\n+      let mut _13: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:51\n+      let mut _14: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n+      let _15: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n+      let mut _16: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:76\n+      let mut _17: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:66\n+      let mut _18: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:61\n+      let mut _19: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n+      let _20: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n+      let mut _21: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:76\n+      let mut _22: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:71\n+      let mut _23: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+      let _24: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+      let mut _25: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+      let mut _26: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+      let mut _27: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+      let mut _28: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+      scope 1 {\n+          debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28\n+          debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31\n+          debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34\n+          debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37\n+          scope 2 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:14:40: 14:46\n+              debug self => _9;            // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              debug other => _10;          // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _29: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _30: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _31: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _32: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              scope 3 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug self => _29;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug other => _30;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug self => _31;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug other => _32;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _33: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _34: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              }\n+          }\n+          scope 4 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:14:60: 14:66\n+              debug self => _18;           // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              debug other => _19;          // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _35: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _36: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _37: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _38: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              scope 5 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug self => _35;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug other => _36;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug self => _37;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug other => _38;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _39: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _40: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              }\n+          }\n+          scope 6 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:14:50: 14:56\n+              debug self => _13;           // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              debug other => _14;          // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _41: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _42: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _43: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _44: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              scope 7 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug self => _41;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug other => _42;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug self => _43;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug other => _44;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _45: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _46: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              }\n+          }\n+          scope 8 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:14:70: 14:76\n+              debug self => _22;           // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              debug other => _23;          // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _47: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _48: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _49: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              let mut _50: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              scope 9 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug self => _47;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-                 debug other => _48;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug self => _49;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++                 debug other => _50;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _51: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                  let mut _52: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+              }\n+          }\n+      }\n+  \n+      bb0: {\n+          StorageLive(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+          _25 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+          _3 = &((*_25).0: usize);         // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+          StorageLive(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+          _26 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+          _4 = &((*_26).1: usize);         // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+          StorageLive(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+          _27 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+          _5 = &((*_27).2: usize);         // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+          StorageLive(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+          _28 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+          _6 = &((*_28).3: usize);         // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+-         StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:46\n+          StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n+          _9 = &_3;                        // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n+          StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+          StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+          _11 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+          _10 = &_11;                      // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+-         StorageLive(_29);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _31 = deref_copy (*_9);          // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _29 = _31;                       // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageLive(_30);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _32 = deref_copy (*_10);         // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _30 = _32;                       // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_33);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _33 = (*_29);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _33 = (*_31);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_34);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _34 = (*_30);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _34 = (*_32);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _8 = Le(move _33, move _34);     // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_34);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_33);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_30);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_29);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+          StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+          StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+      }\n+  \n+      bb1: {\n+          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+      }\n+  \n+      bb2: {\n+-         StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+          StorageLive(_17);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:66\n+          StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n+          _18 = &_5;                       // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n+          StorageLive(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+          StorageLive(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+          _20 = _3;                        // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+          _19 = &_20;                      // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+-         StorageLive(_35);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _37 = deref_copy (*_18);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _35 = _37;                       // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageLive(_36);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _38 = deref_copy (*_19);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _36 = _38;                       // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_39);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _39 = (*_35);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _39 = (*_37);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_40);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _40 = (*_36);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _40 = (*_38);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _17 = Le(move _39, move _40);    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_40);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_39);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_36);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_35);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+          StorageDead(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+          StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+          switchInt(move _17) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+      }\n+  \n+      bb3: {\n+-         StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+-         StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageDead(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageDead(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageDead(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageDead(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+          return;                          // scope 0 at $DIR/slice_filter.rs:+0:76: +0:76\n+      }\n+  \n+      bb4: {\n+-         StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+      }\n+  \n+      bb5: {\n+-         StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56\n+          StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n+          _13 = &_6;                       // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n+          StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          _15 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          _14 = &_15;                      // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+-         StorageLive(_41);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _43 = deref_copy (*_13);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _41 = _43;                       // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageLive(_42);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _44 = deref_copy (*_14);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _42 = _44;                       // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_45);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _45 = (*_41);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _45 = (*_43);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_46);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _46 = (*_42);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _46 = (*_44);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _12 = Le(move _45, move _46);    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_46);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_45);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_42);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_41);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+-         _7 = move _12;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+-         StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+-         switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n++         switchInt(move _12) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+      }\n+  \n+      bb6: {\n+-         _16 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n++         _0 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+      }\n+  \n+      bb7: {\n+-         StorageLive(_21);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76\n+          StorageLive(_22);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n+          _22 = &_4;                       // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n+          StorageLive(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageLive(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+          _24 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+          _23 = &_24;                      // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+-         StorageLive(_47);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _49 = deref_copy (*_22);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _47 = _49;                       // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageLive(_48);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          _50 = deref_copy (*_23);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _48 = _50;                       // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_51);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _51 = (*_47);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _51 = (*_49);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageLive(_52);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _52 = (*_48);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         _21 = Le(move _51, move _52);    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _52 = (*_50);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         _0 = Le(move _51, move _52);     // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_52);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_51);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_48);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+-         StorageDead(_47);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n++         nop;                             // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+          StorageDead(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageDead(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageDead(_22);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+-         _16 = move _21;                  // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+      }\n+  \n+      bb8: {\n+-         StorageDead(_21);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+          StorageDead(_17);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+-         _0 = move _16;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+      }\n+  }\n+  "}, {"sha": "a0c4b4f652c47e19382a8d6c72f5d842d6870442", "filename": "tests/mir-opt/slice_filter.variant_b-{closure#0}.DestinationPropagation.diff", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/rust-lang/rust/blob/8f7e441a547ee2d70d9401502171e944d6e5e797/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8f7e441a547ee2d70d9401502171e944d6e5e797/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.DestinationPropagation.diff?ref=8f7e441a547ee2d70d9401502171e944d6e5e797", "patch": "@@ -0,0 +1,181 @@\n+- // MIR for `variant_b::{closure#0}` before DestinationPropagation\n++ // MIR for `variant_b::{closure#0}` after DestinationPropagation\n+  \n+  fn variant_b::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:20:25: 20:41], _2: &&(usize, usize, usize, usize)) -> bool {\n+      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:42: +0:42\n+      let _3: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n+      let _4: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n+      let _5: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n+      let _6: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n+      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:58\n+      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:48\n+      let mut _9: usize;                   // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:43\n+      let mut _10: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:47: +0:48\n+      let mut _11: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:58\n+      let mut _12: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:53\n+      let mut _13: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:57: +0:58\n+      let mut _14: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:78\n+      let mut _15: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:68\n+      let mut _16: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:63\n+      let mut _17: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:67: +0:68\n+      let mut _18: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:78\n+      let mut _19: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:73\n+      let mut _20: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n+      let mut _21: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+      let mut _22: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+      let mut _23: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+      let mut _24: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+      scope 1 {\n+-         debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:29: +0:30\n+-         debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:32: +0:33\n+-         debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:35: +0:36\n+-         debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:38: +0:39\n++         debug a => _17;                  // in scope 1 at $DIR/slice_filter.rs:+0:29: +0:30\n++         debug b => _19;                  // in scope 1 at $DIR/slice_filter.rs:+0:32: +0:33\n++         debug c => _16;                  // in scope 1 at $DIR/slice_filter.rs:+0:35: +0:36\n++         debug d => _20;                  // in scope 1 at $DIR/slice_filter.rs:+0:38: +0:39\n+      }\n+  \n+      bb0: {\n+-         StorageLive(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n+          _21 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n+-         _3 = ((*_21).0: usize);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n+-         StorageLive(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n++         _17 = ((*_21).0: usize);         // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n+          _22 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n+-         _4 = ((*_22).1: usize);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n+-         StorageLive(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n++         _19 = ((*_22).1: usize);         // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n+          _23 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n+-         _5 = ((*_23).2: usize);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n+-         StorageLive(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n++         _16 = ((*_23).2: usize);         // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n+          _24 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n+-         _6 = ((*_24).3: usize);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n+-         StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n++         _20 = ((*_24).3: usize);         // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n+          StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:43\n+-         _9 = _3;                         // scope 1 at $DIR/slice_filter.rs:+0:42: +0:43\n++         _9 = _17;                        // scope 1 at $DIR/slice_filter.rs:+0:42: +0:43\n+          StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n+-         _10 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n++         _10 = _16;                       // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n+          _8 = Le(move _9, move _10);      // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n+          StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n+          StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n+          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+      }\n+  \n+      bb1: {\n+          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+      }\n+  \n+      bb2: {\n+-         StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+          StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n+-         StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:63\n+-         _16 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:62: +0:63\n+-         StorageLive(_17);                // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n+-         _17 = _3;                        // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:62: +0:63\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:62: +0:63\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n+          _15 = Le(move _16, move _17);    // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n+-         StorageDead(_17);                // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n+-         StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n+          switchInt(move _15) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+      }\n+  \n+      bb3: {\n+-         StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         StorageDead(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         StorageDead(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         StorageDead(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         StorageDead(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n+          return;                          // scope 0 at $DIR/slice_filter.rs:+0:78: +0:78\n+      }\n+  \n+      bb4: {\n+-         StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+      }\n+  \n+      bb5: {\n+-         StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n+          StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:53\n+-         _12 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:52: +0:53\n++         _12 = _20;                       // scope 1 at $DIR/slice_filter.rs:+0:52: +0:53\n+          StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+-         _13 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n++         _13 = _19;                       // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+          _11 = Le(move _12, move _13);    // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n+          StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+          StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+-         _7 = move _11;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+-         StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+-         switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n++         switchInt(move _11) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+      }\n+  \n+      bb6: {\n+-         _14 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n++         _0 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+      }\n+  \n+      bb7: {\n+-         StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n+-         StorageLive(_19);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:73\n+-         _19 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:72: +0:73\n+-         StorageLive(_20);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         _20 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         _18 = Le(move _19, move _20);    // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n+-         StorageDead(_20);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         StorageDead(_19);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         _14 = move _18;                  // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:72: +0:73\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:72: +0:73\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n++         _0 = Le(move _19, move _20);     // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+      }\n+  \n+      bb8: {\n+-         StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+          StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+-         _0 = move _14;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n++         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+      }\n+  }\n+  "}]}