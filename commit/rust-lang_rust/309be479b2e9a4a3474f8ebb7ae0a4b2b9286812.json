{"sha": "309be479b2e9a4a3474f8ebb7ae0a4b2b9286812", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOWJlNDc5YjJlOWE0YTM0NzRmOGViYjdhZTBhNGIyYjkyODY4MTI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-08-31T01:37:46Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-08-31T01:37:46Z"}, "message": "Handle raw string literals in CharClasses", "tree": {"sha": "d697d15c21c14069f31a7b49caa3a5fed155406b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d697d15c21c14069f31a7b49caa3a5fed155406b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/309be479b2e9a4a3474f8ebb7ae0a4b2b9286812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/309be479b2e9a4a3474f8ebb7ae0a4b2b9286812", "html_url": "https://github.com/rust-lang/rust/commit/309be479b2e9a4a3474f8ebb7ae0a4b2b9286812", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/309be479b2e9a4a3474f8ebb7ae0a4b2b9286812/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c903119d8d30c861ecd18f0f96289e9a9e1f992e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c903119d8d30c861ecd18f0f96289e9a9e1f992e", "html_url": "https://github.com/rust-lang/rust/commit/c903119d8d30c861ecd18f0f96289e9a9e1f992e"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "d6fcc28837903c560f45f1439184f92f79e47284", "filename": "src/comment.rs", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/309be479b2e9a4a3474f8ebb7ae0a4b2b9286812/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/309be479b2e9a4a3474f8ebb7ae0a4b2b9286812/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=309be479b2e9a4a3474f8ebb7ae0a4b2b9286812", "patch": "@@ -785,6 +785,9 @@ enum CharClassesStatus {\n     Normal,\n     LitString,\n     LitStringEscape,\n+    LitRawString(u32),\n+    RawStringPrefix(u32),\n+    RawStringSuffix(u32),\n     LitChar,\n     LitCharEscape,\n     // The u32 is the nesting deepness of the comment\n@@ -858,6 +861,20 @@ where\n     }\n }\n \n+fn is_raw_string_suffix<T>(iter: &mut MultiPeek<T>, count: u32) -> bool\n+where\n+    T: Iterator,\n+    T::Item: RichChar,\n+{\n+    for _ in 0..count {\n+        match iter.peek() {\n+            Some(c) if c.get_char() == '#' => continue,\n+            _ => return false,\n+        }\n+    }\n+    true\n+}\n+\n impl<T> Iterator for CharClasses<T>\n where\n     T: Iterator,\n@@ -870,6 +887,40 @@ where\n         let chr = item.get_char();\n         let mut char_kind = FullCodeCharKind::Normal;\n         self.status = match self.status {\n+            CharClassesStatus::LitRawString(sharps) => {\n+                char_kind = FullCodeCharKind::InString;\n+                match chr {\n+                    '\"' => {\n+                        if is_raw_string_suffix(&mut self.base, sharps) {\n+                            CharClassesStatus::RawStringSuffix(sharps)\n+                        } else {\n+                            CharClassesStatus::LitRawString(sharps)\n+                        }\n+                    }\n+                    _ => CharClassesStatus::LitRawString(sharps),\n+                }\n+            }\n+            CharClassesStatus::RawStringPrefix(sharps) => {\n+                char_kind = FullCodeCharKind::InString;\n+                match chr {\n+                    '#' => CharClassesStatus::RawStringPrefix(sharps + 1),\n+                    '\"' => CharClassesStatus::LitRawString(sharps),\n+                    _ => CharClassesStatus::Normal, // Unreachable.\n+                }\n+            }\n+            CharClassesStatus::RawStringSuffix(sharps) => {\n+                match chr {\n+                    '#' => {\n+                        if sharps == 1 {\n+                            CharClassesStatus::Normal\n+                        } else {\n+                            char_kind = FullCodeCharKind::InString;\n+                            CharClassesStatus::RawStringSuffix(sharps - 1)\n+                        }\n+                    }\n+                    _ => CharClassesStatus::Normal, // Unreachable\n+                }\n+            }\n             CharClassesStatus::LitString => match chr {\n                 '\"' => CharClassesStatus::Normal,\n                 '\\\\' => {\n@@ -892,6 +943,17 @@ where\n             },\n             CharClassesStatus::LitCharEscape => CharClassesStatus::LitChar,\n             CharClassesStatus::Normal => match chr {\n+                'r' => match self.base.peek().map(|c| c.get_char()) {\n+                    Some('#') => {\n+                        char_kind = FullCodeCharKind::InString;\n+                        CharClassesStatus::RawStringPrefix(0)\n+                    }\n+                    Some('\"') => {\n+                        char_kind = FullCodeCharKind::InString;\n+                        CharClassesStatus::LitString\n+                    }\n+                    _ => CharClassesStatus::Normal,\n+                },\n                 '\"' => {\n                     char_kind = FullCodeCharKind::InString;\n                     CharClassesStatus::LitString"}]}