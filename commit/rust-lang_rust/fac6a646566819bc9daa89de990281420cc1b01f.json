{"sha": "fac6a646566819bc9daa89de990281420cc1b01f", "node_id": "C_kwDOAAsO6NoAKGZhYzZhNjQ2NTY2ODE5YmM5ZGFhODlkZTk5MDI4MTQyMGNjMWIwMWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-18T16:41:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-18T16:41:26Z"}, "message": "Auto merge of #12804 - jonas-schievink:config-watcher, r=Veykril\n\nfix: make file watcher config a drop-down (and clarify the options)\n\nFixes https://github.com/rust-lang/rust-analyzer/issues/12794\n\nAlso renames \"notify\" to \"server\", since that's clearer (\"notify\" is still accepted for compatibility).", "tree": {"sha": "30b261271bf12388e611fa7a0ebd2d8add74dca1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30b261271bf12388e611fa7a0ebd2d8add74dca1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fac6a646566819bc9daa89de990281420cc1b01f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fac6a646566819bc9daa89de990281420cc1b01f", "html_url": "https://github.com/rust-lang/rust/commit/fac6a646566819bc9daa89de990281420cc1b01f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fac6a646566819bc9daa89de990281420cc1b01f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22e53f1d33ec7be6ed0fce499166a90694fd068e", "url": "https://api.github.com/repos/rust-lang/rust/commits/22e53f1d33ec7be6ed0fce499166a90694fd068e", "html_url": "https://github.com/rust-lang/rust/commit/22e53f1d33ec7be6ed0fce499166a90694fd068e"}, {"sha": "ec1142c0d0de39c6e936f9bc6c57f9118a994d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec1142c0d0de39c6e936f9bc6c57f9118a994d10", "html_url": "https://github.com/rust-lang/rust/commit/ec1142c0d0de39c6e936f9bc6c57f9118a994d10"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "d498d8fe320a5ddad0edbd68d4124d0d7b66f100", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fac6a646566819bc9daa89de990281420cc1b01f/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac6a646566819bc9daa89de990281420cc1b01f/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=fac6a646566819bc9daa89de990281420cc1b01f", "patch": "@@ -213,7 +213,7 @@ config_data! {\n         /// also need to add the folders to Code's `files.watcherExclude`.\n         files_excludeDirs: Vec<PathBuf> = \"[]\",\n         /// Controls file watching implementation.\n-        files_watcher: String = \"\\\"client\\\"\",\n+        files_watcher: FilesWatcherDef = \"\\\"client\\\"\",\n \n         /// Enables highlighting of related references while the cursor is on `break`, `loop`, `while`, or `for` keywords.\n         highlightRelated_breakPoints_enable: bool = \"true\",\n@@ -524,7 +524,7 @@ pub struct FilesConfig {\n #[derive(Debug, Clone)]\n pub enum FilesWatcher {\n     Client,\n-    Notify,\n+    Server,\n }\n \n #[derive(Debug, Clone)]\n@@ -903,12 +903,11 @@ impl Config {\n \n     pub fn files(&self) -> FilesConfig {\n         FilesConfig {\n-            watcher: match self.data.files_watcher.as_str() {\n-                \"notify\" => FilesWatcher::Notify,\n-                \"client\" if self.did_change_watched_files_dynamic_registration() => {\n+            watcher: match self.data.files_watcher {\n+                FilesWatcherDef::Client if self.did_change_watched_files_dynamic_registration() => {\n                     FilesWatcher::Client\n                 }\n-                _ => FilesWatcher::Notify,\n+                _ => FilesWatcher::Server,\n             },\n             exclude: self.data.files_excludeDirs.iter().map(|it| self.root_path.join(it)).collect(),\n         }\n@@ -1423,7 +1422,7 @@ enum ManifestOrProjectJson {\n \n #[derive(Deserialize, Debug, Clone)]\n #[serde(rename_all = \"snake_case\")]\n-pub enum ExprFillDefaultDef {\n+enum ExprFillDefaultDef {\n     Todo,\n     Default,\n }\n@@ -1486,6 +1485,14 @@ enum ReborrowHintsDef {\n     Mutable,\n }\n \n+#[derive(Deserialize, Debug, Clone)]\n+#[serde(rename_all = \"snake_case\")]\n+enum FilesWatcherDef {\n+    Client,\n+    Notify,\n+    Server,\n+}\n+\n #[derive(Deserialize, Debug, Clone)]\n #[serde(rename_all = \"snake_case\")]\n enum ImportPrefixDef {\n@@ -1843,6 +1850,14 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n                 \"Show only the parameters.\"\n             ],\n         },\n+        \"FilesWatcherDef\" => set! {\n+            \"type\": \"string\",\n+            \"enum\": [\"client\", \"server\"],\n+            \"enumDescriptions\": [\n+                \"Use the client (editor) to watch files for changes\",\n+                \"Use server-side file watching\",\n+            ],\n+        },\n         _ => panic!(\"missing entry for {}: {}\", ty, default),\n     }\n "}, {"sha": "77125f88f473d1907e50d78966d574250f8f7461", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fac6a646566819bc9daa89de990281420cc1b01f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac6a646566819bc9daa89de990281420cc1b01f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=fac6a646566819bc9daa89de990281420cc1b01f", "patch": "@@ -320,7 +320,7 @@ impl GlobalState {\n \n         let watch = match files_config.watcher {\n             FilesWatcher::Client => vec![],\n-            FilesWatcher::Notify => project_folders.watch,\n+            FilesWatcher::Server => project_folders.watch,\n         };\n         self.vfs_config_version += 1;\n         self.loader.handle.set_config(vfs::loader::Config {"}, {"sha": "020e3b033181fce2cdd8125faf54a801f4f94a5d", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fac6a646566819bc9daa89de990281420cc1b01f/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/fac6a646566819bc9daa89de990281420cc1b01f/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=fac6a646566819bc9daa89de990281420cc1b01f", "patch": "@@ -686,7 +686,15 @@\n                 \"rust-analyzer.files.watcher\": {\n                     \"markdownDescription\": \"Controls file watching implementation.\",\n                     \"default\": \"client\",\n-                    \"type\": \"string\"\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"client\",\n+                        \"server\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Use the client (editor) to watch files for changes\",\n+                        \"Use server-side file watching\"\n+                    ]\n                 },\n                 \"rust-analyzer.highlightRelated.breakPoints.enable\": {\n                     \"markdownDescription\": \"Enables highlighting of related references while the cursor is on `break`, `loop`, `while`, or `for` keywords.\","}]}