{"sha": "9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNDNlMDlkNzc2MGE2YjFiN2Y1YTk5OThmMmNiYTZhNGE1NTk5Zjc=", "commit": {"author": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-04-23T23:53:09Z"}, "committer": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-04-23T23:53:09Z"}, "message": "Change \"if types change\" to \"if you later change the type\"\n\nFixes #3964.", "tree": {"sha": "da522defb951e89d689c686d86588f9fbc057082", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da522defb951e89d689c686d86588f9fbc057082"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "html_url": "https://github.com/rust-lang/rust/commit/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/comments", "author": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9897442f27f15840b459c3e8a480c9082775fbd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9897442f27f15840b459c3e8a480c9082775fbd1", "html_url": "https://github.com/rust-lang/rust/commit/9897442f27f15840b459c3e8a480c9082775fbd1"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "21b6fc2fee634dea094a91e99c4084179a16a7f3", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "patch": "@@ -949,7 +949,7 @@ fn span_lossless_lint(cx: &LateContext<'_, '_>, expr: &Expr, op: &Expr, cast_fro\n         CAST_LOSSLESS,\n         expr.span,\n         &format!(\n-            \"casting {} to {} may become silently lossy if types change\",\n+            \"casting {} to {} may become silently lossy if you later change the type\",\n             cast_from, cast_to\n         ),\n         \"try\","}, {"sha": "778a17344e532818ec76aca494839933db3972af", "filename": "tests/ui/cast_lossless_float.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/tests%2Fui%2Fcast_lossless_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/tests%2Fui%2Fcast_lossless_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.stderr?ref=9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "patch": "@@ -1,66 +1,66 @@\n-error: casting i8 to f32 may become silently lossy if types change\n+error: casting i8 to f32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:9:5\n    |\n LL |     x0 as f32;\n    |     ^^^^^^^^^ help: try: `f32::from(x0)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n-error: casting i8 to f64 may become silently lossy if types change\n+error: casting i8 to f64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:10:5\n    |\n LL |     x0 as f64;\n    |     ^^^^^^^^^ help: try: `f64::from(x0)`\n \n-error: casting u8 to f32 may become silently lossy if types change\n+error: casting u8 to f32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:12:5\n    |\n LL |     x1 as f32;\n    |     ^^^^^^^^^ help: try: `f32::from(x1)`\n \n-error: casting u8 to f64 may become silently lossy if types change\n+error: casting u8 to f64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:13:5\n    |\n LL |     x1 as f64;\n    |     ^^^^^^^^^ help: try: `f64::from(x1)`\n \n-error: casting i16 to f32 may become silently lossy if types change\n+error: casting i16 to f32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:15:5\n    |\n LL |     x2 as f32;\n    |     ^^^^^^^^^ help: try: `f32::from(x2)`\n \n-error: casting i16 to f64 may become silently lossy if types change\n+error: casting i16 to f64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:16:5\n    |\n LL |     x2 as f64;\n    |     ^^^^^^^^^ help: try: `f64::from(x2)`\n \n-error: casting u16 to f32 may become silently lossy if types change\n+error: casting u16 to f32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:18:5\n    |\n LL |     x3 as f32;\n    |     ^^^^^^^^^ help: try: `f32::from(x3)`\n \n-error: casting u16 to f64 may become silently lossy if types change\n+error: casting u16 to f64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:19:5\n    |\n LL |     x3 as f64;\n    |     ^^^^^^^^^ help: try: `f64::from(x3)`\n \n-error: casting i32 to f64 may become silently lossy if types change\n+error: casting i32 to f64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:21:5\n    |\n LL |     x4 as f64;\n    |     ^^^^^^^^^ help: try: `f64::from(x4)`\n \n-error: casting u32 to f64 may become silently lossy if types change\n+error: casting u32 to f64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:23:5\n    |\n LL |     x5 as f64;\n    |     ^^^^^^^^^ help: try: `f64::from(x5)`\n \n-error: casting f32 to f64 may become silently lossy if types change\n+error: casting f32 to f64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_float.rs:26:5\n    |\n LL |     1.0f32 as f64;"}, {"sha": "c2f937942a3dea64e4dd2ed98cbf0f39a99dbe91", "filename": "tests/ui/cast_lossless_integer.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/tests%2Fui%2Fcast_lossless_integer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/tests%2Fui%2Fcast_lossless_integer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.stderr?ref=9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "patch": "@@ -1,114 +1,114 @@\n-error: casting i8 to i16 may become silently lossy if types change\n+error: casting i8 to i16 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:8:5\n    |\n LL |     1i8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1i8)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n-error: casting i8 to i32 may become silently lossy if types change\n+error: casting i8 to i32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:9:5\n    |\n LL |     1i8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1i8)`\n \n-error: casting i8 to i64 may become silently lossy if types change\n+error: casting i8 to i64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:10:5\n    |\n LL |     1i8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1i8)`\n \n-error: casting u8 to i16 may become silently lossy if types change\n+error: casting u8 to i16 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:11:5\n    |\n LL |     1u8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1u8)`\n \n-error: casting u8 to i32 may become silently lossy if types change\n+error: casting u8 to i32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:12:5\n    |\n LL |     1u8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1u8)`\n \n-error: casting u8 to i64 may become silently lossy if types change\n+error: casting u8 to i64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:13:5\n    |\n LL |     1u8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1u8)`\n \n-error: casting u8 to u16 may become silently lossy if types change\n+error: casting u8 to u16 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:14:5\n    |\n LL |     1u8 as u16;\n    |     ^^^^^^^^^^ help: try: `u16::from(1u8)`\n \n-error: casting u8 to u32 may become silently lossy if types change\n+error: casting u8 to u32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:15:5\n    |\n LL |     1u8 as u32;\n    |     ^^^^^^^^^^ help: try: `u32::from(1u8)`\n \n-error: casting u8 to u64 may become silently lossy if types change\n+error: casting u8 to u64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:16:5\n    |\n LL |     1u8 as u64;\n    |     ^^^^^^^^^^ help: try: `u64::from(1u8)`\n \n-error: casting i16 to i32 may become silently lossy if types change\n+error: casting i16 to i32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:17:5\n    |\n LL |     1i16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1i16)`\n \n-error: casting i16 to i64 may become silently lossy if types change\n+error: casting i16 to i64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:18:5\n    |\n LL |     1i16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i16)`\n \n-error: casting u16 to i32 may become silently lossy if types change\n+error: casting u16 to i32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:19:5\n    |\n LL |     1u16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1u16)`\n \n-error: casting u16 to i64 may become silently lossy if types change\n+error: casting u16 to i64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:20:5\n    |\n LL |     1u16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u16)`\n \n-error: casting u16 to u32 may become silently lossy if types change\n+error: casting u16 to u32 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:21:5\n    |\n LL |     1u16 as u32;\n    |     ^^^^^^^^^^^ help: try: `u32::from(1u16)`\n \n-error: casting u16 to u64 may become silently lossy if types change\n+error: casting u16 to u64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:22:5\n    |\n LL |     1u16 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u16)`\n \n-error: casting i32 to i64 may become silently lossy if types change\n+error: casting i32 to i64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:23:5\n    |\n LL |     1i32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i32)`\n \n-error: casting u32 to i64 may become silently lossy if types change\n+error: casting u32 to i64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:24:5\n    |\n LL |     1u32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u32)`\n \n-error: casting u32 to u64 may become silently lossy if types change\n+error: casting u32 to u64 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:25:5\n    |\n LL |     1u32 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u32)`\n \n-error: casting u8 to u16 may become silently lossy if types change\n+error: casting u8 to u16 may become silently lossy if you later change the type\n   --> $DIR/cast_lossless_integer.rs:28:5\n    |\n LL |     (1u8 + 1u8) as u16;"}, {"sha": "3b4f57a7a431b32a2ccca8f47d88cc6b2e2d058d", "filename": "tests/ui/types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/tests%2Fui%2Ftypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7/tests%2Fui%2Ftypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes.stderr?ref=9a43e09d7760a6b1b7f5a9998f2cba6a4a5599f7", "patch": "@@ -1,4 +1,4 @@\n-error: casting i32 to i64 may become silently lossy if types change\n+error: casting i32 to i64 may become silently lossy if you later change the type\n   --> $DIR/types.rs:13:22\n    |\n LL |     let c_i64: i64 = c as i64;"}]}