{"sha": "2115468f3363362e3c23b0aeb088cd8d39f6f2a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMTU0NjhmMzM2MzM2MmUzYzIzYjBhZWIwODhjZDhkMzlmNmYyYTY=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-12T00:44:18Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-17T21:41:40Z"}, "message": "Add most ARM intrinsics.", "tree": {"sha": "7cc879daf71be56af9c5ed93a2e32e00400e3229", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cc879daf71be56af9c5ed93a2e32e00400e3229"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2115468f3363362e3c23b0aeb088cd8d39f6f2a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2115468f3363362e3c23b0aeb088cd8d39f6f2a6", "html_url": "https://github.com/rust-lang/rust/commit/2115468f3363362e3c23b0aeb088cd8d39f6f2a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2115468f3363362e3c23b0aeb088cd8d39f6f2a6/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d598bddc98f431ce92d9a3f33d7544ed637eda47", "url": "https://api.github.com/repos/rust-lang/rust/commits/d598bddc98f431ce92d9a3f33d7544ed637eda47", "html_url": "https://github.com/rust-lang/rust/commit/d598bddc98f431ce92d9a3f33d7544ed637eda47"}], "stats": {"total": 315, "additions": 310, "deletions": 5}, "files": [{"sha": "f29f7e384b4fb22dfd7939298a06525254be5dae", "filename": "src/librustc_platform_intrinsics/arm.rs", "status": "modified", "additions": 309, "deletions": 5, "changes": 314, "blob_url": "https://github.com/rust-lang/rust/blob/2115468f3363362e3c23b0aeb088cd8d39f6f2a6/src%2Flibrustc_platform_intrinsics%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2115468f3363362e3c23b0aeb088cd8d39f6f2a6/src%2Flibrustc_platform_intrinsics%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Farm.rs?ref=2115468f3363362e3c23b0aeb088cd8d39f6f2a6", "patch": "@@ -19,8 +19,300 @@ macro_rules! p {\n pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {\n     if !name.starts_with(\"v\") { return None }\n     Some(match &name[\"v\".len()..] {\n+        \"sqrtq_f32\" => plain!(\"llvm.sqrt.v4f32\", (f32x4) -> f32x4),\n+        \"sqrtq_f64\" => plain!(\"llvm.sqrt.v2f64\", (f64x2) -> f64x2),\n+\n+        \"hadd_s8\" => p!(\"vhadds.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"haddq_s8\" => p!(\"vhadds.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"hadd_s16\" => p!(\"vhadds.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"haddq_s16\" => p!(\"vhadds.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"hadd_s32\" => p!(\"vhadds.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"haddq_s32\" => p!(\"vhadds.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"hadd_u8\" => p!(\"vhaddu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"haddq_u8\" => p!(\"vhaddu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"hadd_u16\" => p!(\"vhaddu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"haddq_u16\" => p!(\"vhaddu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"hadd_u32\" => p!(\"vhaddu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"haddq_u32\" => p!(\"vhaddu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"rhadd_s8\" => p!(\"vrhadds.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"rhaddq_s8\" => p!(\"vrhadds.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"rhadd_s16\" => p!(\"vrhadds.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"rhaddq_s16\" => p!(\"vrhadds.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"rhadd_s32\" => p!(\"vrhadds.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"rhaddq_s32\" => p!(\"vrhadds.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"rhadd_u8\" => p!(\"vrhaddu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"rhaddq_u8\" => p!(\"vrhaddu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"rhadd_u16\" => p!(\"vrhaddu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"rhaddq_u16\" => p!(\"vrhaddu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"rhadd_u32\" => p!(\"vrhaddu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"rhaddq_u32\" => p!(\"vrhaddu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qadd_s8\" => p!(\"vqadds.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qaddq_s8\" => p!(\"vqadds.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qadd_s16\" => p!(\"vqadds.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qaddq_s16\" => p!(\"vqadds.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qadd_s32\" => p!(\"vqadds.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qaddq_s32\" => p!(\"vqadds.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qadd_s64\" => p!(\"vqaddu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qaddq_s64\" => p!(\"vqaddu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"qadd_u8\" => p!(\"vqaddu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qaddq_u8\" => p!(\"vqaddu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qadd_u16\" => p!(\"vqaddu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qaddq_u16\" => p!(\"vqaddu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qadd_u32\" => p!(\"vqaddu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qaddq_u32\" => p!(\"vqaddu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qadd_u64\" => p!(\"vqaddu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qaddq_u64\" => p!(\"vqaddu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"raddhn_s16\" => p!(\"vraddhn.v8i8\", (i16x8, i16x8) -> i8x8),\n+        \"raddhn_s32\" => p!(\"vraddhn.v4i16\", (i32x4, i32x4) -> i16x4),\n+        \"raddhn_s64\" => p!(\"vraddhn.v2i32\", (i64x2, i64x2) -> i32x2),\n+        \"fma_f32\" => plain!(\"llvm.fma.v2f32\", (f32x2, f32x2, f32x2) -> f32x2),\n+        \"fmaq_f32\" => plain!(\"llvm.fma.v4f32\", (f32x4, f32x4, f32x4) -> f32x4),\n+        \"qdmulh_s16\" => p!(\"vqdmulh.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qdmulhq_s16\" => p!(\"vqdmulh.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qdmulh_s32\" => p!(\"vqdmulh.v2i32\", (i32x2, i32x2) -> i32x4),\n+        \"qdmulhq_s32\" => p!(\"vqdmulh.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qrdmulh_s16\" => p!(\"vqrdmulh.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qrdmulhqr_s16\" => p!(\"vqrdmulh.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qrdmulh_s32\" => p!(\"vqrdmulh.v2i32\", (i32x2, i32x2) -> i32x4),\n+        \"qrdmulhqr_s32\" => p!(\"vqrdmulh.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"mull_s8\" => p!(\"vmulls.v8i16\", (i8x8, i8x8) -> i16x8),\n+        \"mull_s16\" => p!(\"vmulls.v4i32\", (i16x4, i16x4) -> i32x4),\n+        \"mull_s32\" => p!(\"vmulls.v2i64\", (i32x2, i32x2) -> i64x2),\n+        \"mull_u8\" => p!(\"vmullu.v8i16\", (i8x8, i8x8) -> i16x8),\n+        \"mull_u16\" => p!(\"vmullu.v4i32\", (i16x4, i16x4) -> i32x4),\n+        \"mull_u32\" => p!(\"vmullu.v2i64\", (i32x2, i32x2) -> i64x2),\n+        \"qdmull_s16\" => p!(\"vqdmull.v4i32\", (i16x4, i16x4) -> i32x4),\n+        \"qdmull_s32\" => p!(\"vqdmull.v2i64\", (i32x2, i32x2) -> i64x2),\n+        \"hsub_s8\" => p!(\"vhsubs.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"hsubq_s8\" => p!(\"vhsubs.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"hsub_s16\" => p!(\"vhsubs.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"hsubq_s16\" => p!(\"vhsubs.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"hsub_s32\" => p!(\"vhsubs.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"hsubq_s32\" => p!(\"vhsubs.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"hsub_u8\" => p!(\"vhsubu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"hsubq_u8\" => p!(\"vhsubu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"hsub_u16\" => p!(\"vhsubu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"hsubq_u16\" => p!(\"vhsubu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"hsub_u32\" => p!(\"vhsubu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"hsubq_u32\" => p!(\"vhsubu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qsub_s8\" => p!(\"vqsubs.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qsubq_s8\" => p!(\"vqsubs.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qsub_s16\" => p!(\"vqsubs.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qsubq_s16\" => p!(\"vqsubs.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qsub_s32\" => p!(\"vqsubs.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qsubq_s32\" => p!(\"vqsubs.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qsub_s64\" => p!(\"vqsubu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qsubq_s64\" => p!(\"vqsubu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"qsub_u8\" => p!(\"vqsubu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qsubq_u8\" => p!(\"vqsubu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qsub_u16\" => p!(\"vqsubu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qsubq_u16\" => p!(\"vqsubu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qsub_u32\" => p!(\"vqsubu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qsubq_u32\" => p!(\"vqsubu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qsub_u64\" => p!(\"vqsubu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qsubq_u64\" => p!(\"vqsubu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"abd_s8\" => p!(\"vabds.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"abdq_s8\" => p!(\"vabds.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"abd_s16\" => p!(\"vabds.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"abdq_s16\" => p!(\"vabds.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"abd_s32\" => p!(\"vabds.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"abdq_s32\" => p!(\"vabds.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"abd_u8\" => p!(\"vabdu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"abdq_u8\" => p!(\"vabdu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"abd_u16\" => p!(\"vabdu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"abdq_u16\" => p!(\"vabdu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"abd_u32\" => p!(\"vabdu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"abdq_u32\" => p!(\"vabdu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"abd_f32\" => p!(\"vabds.v2f32\", (f32x2, f32x2) -> f32x2),\n+        \"abdq_f32\" => p!(\"vabds.v4f32\", (f32x4, f32x4) -> f32x4),\n+        \"max_s8\" => p!(\"vmaxs.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"maxq_s8\" => p!(\"vmaxs.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"max_s16\" => p!(\"vmaxs.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"maxq_s16\" => p!(\"vmaxs.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"max_s32\" => p!(\"vmaxs.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"maxq_s32\" => p!(\"vmaxs.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"max_u8\" => p!(\"vmaxu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"maxq_u8\" => p!(\"vmaxu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"max_u16\" => p!(\"vmaxu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"maxq_u16\" => p!(\"vmaxu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"max_u32\" => p!(\"vmaxu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"maxq_u32\" => p!(\"vmaxu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"max_f32\" => p!(\"vmaxs.v2f32\", (f32x2, f32x2) -> f32x2),\n         \"maxq_f32\" => p!(\"vmaxs.v4f32\", (f32x4, f32x4) -> f32x4),\n+        \"min_s8\" => p!(\"vmins.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"minq_s8\" => p!(\"vmins.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"min_s16\" => p!(\"vmins.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"minq_s16\" => p!(\"vmins.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"min_s32\" => p!(\"vmins.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"minq_s32\" => p!(\"vmins.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"min_u8\" => p!(\"vminu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"minq_u8\" => p!(\"vminu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"min_u16\" => p!(\"vminu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"minq_u16\" => p!(\"vminu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"min_u32\" => p!(\"vminu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"minq_u32\" => p!(\"vminu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"min_f32\" => p!(\"vmins.v2f32\", (f32x2, f32x2) -> f32x2),\n         \"minq_f32\" => p!(\"vmins.v4f32\", (f32x4, f32x4) -> f32x4),\n+        \"shl_s8\" => p!(\"vshifts.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"shlq_s8\" => p!(\"vshifts.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"shl_s16\" => p!(\"vshifts.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"shlq_s16\" => p!(\"vshifts.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"shl_s32\" => p!(\"vshifts.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"shlq_s32\" => p!(\"vshifts.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"shl_s64\" => p!(\"vshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"shlq_s64\" => p!(\"vshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"shl_u8\" => p!(\"vshiftu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"shlq_u8\" => p!(\"vshiftu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"shl_u16\" => p!(\"vshiftu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"shlq_u16\" => p!(\"vshiftu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"shl_u32\" => p!(\"vshiftu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"shlq_u32\" => p!(\"vshiftu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"shl_u64\" => p!(\"vshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"shlq_u64\" => p!(\"vshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"qshl_s8\" => p!(\"vqshifts.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qshlq_s8\" => p!(\"vqshifts.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qshl_s16\" => p!(\"vqshifts.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qshlq_s16\" => p!(\"vqshifts.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qshl_s32\" => p!(\"vqshifts.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qshlq_s32\" => p!(\"vqshifts.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qshl_s64\" => p!(\"vqshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qshlq_s64\" => p!(\"vqshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"qshl_u8\" => p!(\"vqshiftu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qshlq_u8\" => p!(\"vqshiftu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qshl_u16\" => p!(\"vqshiftu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qshlq_u16\" => p!(\"vqshiftu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qshl_u32\" => p!(\"vqshiftu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qshlq_u32\" => p!(\"vqshiftu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qshl_u64\" => p!(\"vqshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qshlq_u64\" => p!(\"vqshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"rshl_s8\" => p!(\"vrshifts.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"rshlr_s8\" => p!(\"vrshifts.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"rshl_s16\" => p!(\"vrshifts.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"rshlr_s16\" => p!(\"vrshifts.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"rshl_s32\" => p!(\"vrshifts.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"rshlr_s32\" => p!(\"vrshifts.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"rshl_s64\" => p!(\"vrshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"rshlr_s64\" => p!(\"vrshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"rshl_u8\" => p!(\"vrshiftu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"rshlr_u8\" => p!(\"vrshiftu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"rshl_u16\" => p!(\"vrshiftu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"rshlr_u16\" => p!(\"vrshiftu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"rshl_u32\" => p!(\"vrshiftu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"rshlr_u32\" => p!(\"vrshiftu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"rshl_u64\" => p!(\"vrshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"rshlr_u64\" => p!(\"vrshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"qrshl_s8\" => p!(\"vqrshifts.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qrshlqr_s8\" => p!(\"vqrshifts.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qrshl_s16\" => p!(\"vqrshifts.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qrshlqr_s16\" => p!(\"vqrshifts.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qrshl_s32\" => p!(\"vqrshifts.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qrshlqr_s32\" => p!(\"vqrshifts.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qrshl_s64\" => p!(\"vqrshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qrshlqr_s64\" => p!(\"vqrshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"qrshl_u8\" => p!(\"vqrshiftu.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qrshlqr_u8\" => p!(\"vqrshiftu.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qrshl_u16\" => p!(\"vqrshiftu.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qrshlqr_u16\" => p!(\"vqrshiftu.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qrshl_u32\" => p!(\"vqrshiftu.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qrshlqr_u32\" => p!(\"vqrshiftu.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"qrshl_u64\" => p!(\"vqrshiftu.v1i64\", (i64x1, i64x1) -> i64x1),\n+        \"qrshlqr_u64\" => p!(\"vqrshiftu.v2i64\", (i64x2, i64x2) -> i64x2),\n+        \"qmovn_s16\" => p!(\"vqmovns.v8i8\", (i16x8) -> i8x8),\n+        \"qmovn_s32\" => p!(\"vqmovns.v4i16\", (i32x4) -> i16x4),\n+        \"qmovn_s64\" => p!(\"vqmovns.v2i32\", (i64x2) -> i32x2),\n+        \"qmovn_u16\" => p!(\"vqmovnu.v8i8\", (i16x8) -> i8x8),\n+        \"qmovn_u32\" => p!(\"vqmovnu.v4i16\", (i32x4) -> i16x4),\n+        \"qmovn_u64\" => p!(\"vqmovnu.v2i32\", (i64x2) -> i32x2),\n+        \"qmovun_s16\" => p!(\"vqmovnsu.v8i8\", (i16x8) -> i8x8),\n+        \"qmovun_s32\" => p!(\"vqmovnsu.v4i16\", (i32x4) -> i16x4),\n+        \"qmovun_s64\" => p!(\"vqmovnsu.v2i32\", (i64x2) -> i32x2),\n+        \"abs_s8\" => p!(\"vabs.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"absq_s8\" => p!(\"vabs.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"abs_s16\" => p!(\"vabs.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"absq_s16\" => p!(\"vabs.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"abs_s32\" => p!(\"vabs.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"absq_s32\" => p!(\"vabs.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"abs_f32\" => p!(\"vabs.v2f32\", (f32x2, f32x2) -> f32x2),\n+        \"absq_f32\" => p!(\"vabs.v4f32\", (f32x4, f32x4) -> f32x4),\n+        \"qabs_s8\" => p!(\"vqabs.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"qabsq_s8\" => p!(\"vqabs.v16i8\", (i8x16, i8x16) -> i8x16),\n+        \"qabs_s16\" => p!(\"vqabs.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"qabsq_s16\" => p!(\"vqabs.v8i16\", (i16x8, i16x8) -> i16x8),\n+        \"qabs_s32\" => p!(\"vqabs.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"qabsq_s32\" => p!(\"vqabs.v4i32\", (i32x4, i32x4) -> i32x4),\n+        \"neg_s8\" => p!(\"vneg.v8i8\", (i8x8) -> i8x8),\n+        \"negq_s8\" => p!(\"vneg.v16i8\", (i8x16) -> i8x16),\n+        \"neg_s16\" => p!(\"vneg.v4i16\", (i16x4) -> i16x4),\n+        \"negq_s16\" => p!(\"vneg.v8i16\", (i16x8) -> i16x8),\n+        \"neg_s32\" => p!(\"vneg.v2i32\", (i32x2) -> i32x2),\n+        \"negq_s32\" => p!(\"vneg.v4i32\", (i32x4) -> i32x4),\n+        \"neg_f32\" => p!(\"vneg.v2f32\", (f32x2) -> f32x2),\n+        \"negq_f32\" => p!(\"vneg.v4f32\", (f32x4) -> f32x4),\n+        \"qneg_s8\" => p!(\"vqneg.v8i8\", (i8x8) -> i8x8),\n+        \"qnegq_s8\" => p!(\"vqneg.v16i8\", (i8x16) -> i8x16),\n+        \"qneg_s16\" => p!(\"vqneg.v4i16\", (i16x4) -> i16x4),\n+        \"qnegq_s16\" => p!(\"vqneg.v8i16\", (i16x8) -> i16x8),\n+        \"qneg_s32\" => p!(\"vqneg.v2i32\", (i32x2) -> i32x2),\n+        \"qnegq_s32\" => p!(\"vqneg.v4i32\", (i32x4) -> i32x4),\n+        \"cls_s8\" => p!(\"vcls.v8i8\", (i8x8) -> i8x8),\n+        \"clsq_s8\" => p!(\"vcls.v16i8\", (i8x16) -> i8x16),\n+        \"cls_s16\" => p!(\"vcls.v4i16\", (i16x4) -> i16x4),\n+        \"clsq_s16\" => p!(\"vcls.v8i16\", (i16x8) -> i16x8),\n+        \"cls_s32\" => p!(\"vcls.v2i32\", (i32x2) -> i32x2),\n+        \"clsq_s32\" => p!(\"vcls.v4i32\", (i32x4) -> i32x4),\n+        \"clz_s8\" => p!(\"vclz.v8i8\", (i8x8) -> i8x8),\n+        \"clzq_s8\" => p!(\"vclz.v16i8\", (i8x16) -> i8x16),\n+        \"clz_s16\" => p!(\"vclz.v4i16\", (i16x4) -> i16x4),\n+        \"clzq_s16\" => p!(\"vclz.v8i16\", (i16x8) -> i16x8),\n+        \"clz_s32\" => p!(\"vclz.v2i32\", (i32x2) -> i32x2),\n+        \"clzq_s32\" => p!(\"vclz.v4i32\", (i32x4) -> i32x4),\n+        \"cnt_s8\" => p!(\"vcnt.v8i8\", (i8x8) -> i8x8),\n+        \"cntq_s8\" => p!(\"vcnt.v16i8\", (i8x16) -> i8x16),\n+        \"recpe_u32\" => p!(\"vrecpe.v2i32\", (i32x2) -> i32x2),\n+        \"recpeq_u32\" => p!(\"vrecpe.v4i32\", (i32x4) -> i32x4),\n+        \"recpe_f32\" => p!(\"vrecpe.v2f32\", (f32x2) -> f32x2),\n+        \"recpeq_f32\" => p!(\"vrecpe.v4f32\", (f32x4) -> f32x4),\n+        \"recps_f32\" => p!(\"vrecps.v2f32\", (f32x2, f32x2) -> f32x2),\n+        \"recpsq_f32\" => p!(\"vrecps.v4f32\", (f32x4, f32x4) -> f32x4),\n+        \"rsqrte_u32\" => p!(\"vrsqrte.v2i32\", (i32x2) -> i32x2),\n+        \"rsqrteq_u32\" => p!(\"vrsqrte.v4i32\", (i32x4) -> i32x4),\n+        \"rsqrte_f32\" => p!(\"vrsqrte.v2f32\", (f32x2) -> f32x2),\n+        \"rsqrteq_f32\" => p!(\"vrsqrte.v4f32\", (f32x4) -> f32x4),\n+        \"rsqrts_f32\" => p!(\"vrsqrts.v2f32\", (f32x2, f32x2) -> f32x2),\n+        \"rsqrtsq_f32\" => p!(\"vrsqrts.v4f32\", (f32x4, f32x4) -> f32x4),\n+        \"bsl_s8\" => p!(\"vsl.v8i8\", (i8x8, i8x8, i8x8) -> i8x8),\n+        \"bslq_s8\" => p!(\"vsl.v16i8\", (i8x16, i8x16, i8x16) -> i8x16),\n+        \"padd_s8\" => p!(\"vpadd.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"padd_s16\" => p!(\"vpadd.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"padd_s32\" => p!(\"vpadd.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"padd_u8\" => p!(\"vpadd.v8i8\", (i8x8, i8x8) -> i8x8),\n+        \"padd_u16\" => p!(\"vpadd.v4i16\", (i16x4, i16x4) -> i16x4),\n+        \"padd_u32\" => p!(\"vpadd.v2i32\", (i32x2, i32x2) -> i32x2),\n+        \"padd_f32\" => p!(\"vpadd.v2f32\", (f32x2, f32x2) -> f32x2),\n+        \"paddl_s8\" => p!(\"vpaddls.v4i16.v8i8\", (i8x8) -> i16x4),\n+        \"paddlq_s8\" => p!(\"vpaddls.v8i16.v16i8\", (i8x16) -> i16x8),\n+        \"paddl_s16\" => p!(\"vpaddls.v2i32.v4i16\", (i16x4) -> i32x2),\n+        \"paddlq_s16\" => p!(\"vpaddls.v4i32.v8i16\", (i16x8) -> i32x4),\n+        \"paddl_s32\" => p!(\"vpaddls.v1i64.v2i32\", (i32x2) -> i64x1),\n+        \"paddlq_s32\" => p!(\"vpaddls.v2i64.v4i32\", (i32x4) -> i64x2),\n+        \"paddl_u8\" => p!(\"vpaddlu.v4i16.v8i8\", (i8x8) -> i16x4),\n+        \"paddlq_u8\" => p!(\"vpaddlu.v8i16.v16i8\", (i8x16) -> i16x8),\n+        \"paddl_u16\" => p!(\"vpaddlu.v2i32.v4i16\", (i16x4) -> i32x2),\n+        \"paddlq_u16\" => p!(\"vpaddlu.v4i32.v8i16\", (i16x8) -> i32x4),\n+        \"paddl_u32\" => p!(\"vpaddlu.v1i64.v2i32\", (i32x2) -> i64x1),\n+        \"paddlq_u32\" => p!(\"vpaddlu.v2i64.v4i32\", (i32x4) -> i64x2),\n+        \"padal_s8\" => p!(\"vpadals.v4i16.v8i8\", (i16x4, i8x8) -> i16x4),\n+        \"padalq_s8\" => p!(\"vpadals.v8i16.v16i8\", (i16x8, i8x16) -> i16x8),\n+        \"padal_s16\" => p!(\"vpadals.v2i32.v4i16\", (i32x2, i16x4) -> i32x2),\n+        \"padalq_s16\" => p!(\"vpadals.v4i32.v8i16\", (i32x4, i16x8) -> i32x4),\n+        \"padal_s32\" => p!(\"vpadals.v1i64.v2i32\", (i64x1, i32x2) -> i64x1),\n+        \"padalq_s32\" => p!(\"vpadals.v2i64.v4i32\", (i64x2, i32x4) -> i64x2),\n+        \"padal_u8\" => p!(\"vpadalu.v4i16.v8i8\", (i16x4, i8x8) -> i16x4),\n+        \"padalq_u8\" => p!(\"vpadalu.v8i16.v16i8\", (i16x8, i8x16) -> i16x8),\n+        \"padal_u16\" => p!(\"vpadalu.v2i32.v4i16\", (i32x2, i16x4) -> i32x2),\n+        \"padalq_u16\" => p!(\"vpadalu.v4i32.v8i16\", (i32x4, i16x8) -> i32x4),\n+        \"padal_u32\" => p!(\"vpadalu.v1i64.v2i32\", (i64x1, i32x2) -> i64x1),\n+        \"padalq_u32\" => p!(\"vpadalu.v2i64.v4i32\", (i64x2, i32x4) -> i64x2),\n         \"pmax_s16\" => p!(\"vpmaxs.v4i16\", (i16x4, i16x4) -> i16x4),\n         \"pmax_s32\" => p!(\"vpmaxs.v2i32\", (i32x2, i32x2) -> i32x2),\n         \"pmax_s8\" => p!(\"vpmaxs.v8i8\", (i8x8, i8x8) -> i8x8),\n@@ -33,11 +325,23 @@ pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {\n         \"pmin_u16\" => p!(\"vpminu.v4i16\", (i16x4, i16x4) -> i16x4),\n         \"pmin_u32\" => p!(\"vpminu.v2i32\", (i32x2, i32x2) -> i32x2),\n         \"pmin_u8\" => p!(\"vpminu.v8i8\", (i8x8, i8x8) -> i8x8),\n-        \"recpeq_f32\" => p!(\"vrecpe.v4f32\", (f32x4) -> f32x4),\n-        \"rsqrteq_f32\" => p!(\"vrsqrte.v4f32\", (f32x4) -> f32x4),\n-        \"rsqrteq_f64\" => p!(\"vrsqrte.v2f64\", (f64x2) -> f64x2),\n-        \"sqrtq_f32\" => plain!(\"llvm.sqrt.v4f32\", (f32x4) -> f32x4),\n-        \"sqrtq_f64\" => plain!(\"llvm.sqrt.v2f64\", (f64x2) -> f64x2),\n+        \"tbl1_s8\" => p!(\"vtbl1\", (i8x8, i8x8) -> i8x8),\n+        \"tbl1_u8\" => p!(\"vtbl1\", (i8x8, i8x8) -> i8x8),\n+        // these aren't exactly the C intrinsics (they take one argument)\n+        \"tbl2_s8\" => p!(\"vtbl2\", (i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbl2_u8\" => p!(\"vtbl2\", (i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbl3_s8\" => p!(\"vtbl3\", (i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbl3_u8\" => p!(\"vtbl3\", (i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbl4_s8\" => p!(\"vtbl4\", (i8x8, i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbl4_u8\" => p!(\"vtbl4\", (i8x8, i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx1_s8\" => p!(\"vtbx1\", (i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx1_u8\" => p!(\"vtbx1\", (i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx2_s8\" => p!(\"vtbx2\", (i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx2_u8\" => p!(\"vtbx2\", (i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx3_s8\" => p!(\"vtbx3\", (i8x8, i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx3_u8\" => p!(\"vtbx3\", (i8x8, i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx4_s8\" => p!(\"vtbx4\", (i8x8, i8x8, i8x8, i8x8, i8x8, i8x8) -> i8x8),\n+        \"tbx4_u8\" => p!(\"vtbx4\", (i8x8, i8x8, i8x8, i8x8, i8x8, i8x8) -> i8x8),\n         _ => return None,\n     })\n }"}, {"sha": "134b4c66419b6c4408d9aa9006b269b68364bb40", "filename": "src/librustc_platform_intrinsics/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2115468f3363362e3c23b0aeb088cd8d39f6f2a6/src%2Flibrustc_platform_intrinsics%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2115468f3363362e3c23b0aeb088cd8d39f6f2a6/src%2Flibrustc_platform_intrinsics%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Flib.rs?ref=2115468f3363362e3c23b0aeb088cd8d39f6f2a6", "patch": "@@ -65,6 +65,7 @@ macro_rules! ty {\n     (i8x8) => (v(i(8), 8));\n     (i16x4) => (v(i(16), 4));\n     (i32x2) => (v(i(32), 2));\n+    (i64x1)=> (v(i(64), 1));\n \n     (i64) => (i(64));\n     (i32) => (i(32));"}]}