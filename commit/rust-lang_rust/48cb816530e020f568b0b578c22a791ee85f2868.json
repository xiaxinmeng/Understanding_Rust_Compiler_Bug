{"sha": "48cb816530e020f568b0b578c22a791ee85f2868", "node_id": "C_kwDOAAsO6NoAKDQ4Y2I4MTY1MzBlMDIwZjU2OGIwYjU3OGMyMmE3OTFlZTg1ZjI4Njg", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-08-17T01:22:29Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-08-17T01:22:29Z"}, "message": "Handle `CARGO_TARGET_DIR` not being set in compile-test", "tree": {"sha": "feb190037fc7110596354279f15d373cdadaf63c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feb190037fc7110596354279f15d373cdadaf63c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48cb816530e020f568b0b578c22a791ee85f2868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48cb816530e020f568b0b578c22a791ee85f2868", "html_url": "https://github.com/rust-lang/rust/commit/48cb816530e020f568b0b578c22a791ee85f2868", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48cb816530e020f568b0b578c22a791ee85f2868/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18c681893ea11663f5ac2c1fca4af23b82ef344c", "url": "https://api.github.com/repos/rust-lang/rust/commits/18c681893ea11663f5ac2c1fca4af23b82ef344c", "html_url": "https://github.com/rust-lang/rust/commit/18c681893ea11663f5ac2c1fca4af23b82ef344c"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "9d0320bf065e96a9af9bb5880646853c980a8004", "filename": "tests/compile-test.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48cb816530e020f568b0b578c22a791ee85f2868/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cb816530e020f568b0b578c22a791ee85f2868/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=48cb816530e020f568b0b578c22a791ee85f2868", "patch": "@@ -403,8 +403,12 @@ const RUSTFIX_COVERAGE_KNOWN_EXCEPTIONS: &[&str] = &[\n ];\n \n fn check_rustfix_coverage() {\n-    let target_dir = PathBuf::from(std::env::var(\"CARGO_TARGET_DIR\").unwrap());\n-    let missing_coverage_path = target_dir.join(\"debug/test/ui/rustfix_missing_coverage.txt\");\n+    let missing_coverage_path = Path::new(\"debug/test/ui/rustfix_missing_coverage.txt\");\n+    let missing_coverage_path = if let Ok(target_dir) = std::env::var(\"CARGO_TARGET_DIR\") {\n+        PathBuf::from(target_dir).join(missing_coverage_path)\n+    } else {\n+        missing_coverage_path.to_path_buf()\n+    };\n \n     if let Ok(missing_coverage_contents) = std::fs::read_to_string(missing_coverage_path) {\n         assert!(RUSTFIX_COVERAGE_KNOWN_EXCEPTIONS.iter().is_sorted_by_key(Path::new));"}]}