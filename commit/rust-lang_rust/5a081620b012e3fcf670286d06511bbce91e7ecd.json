{"sha": "5a081620b012e3fcf670286d06511bbce91e7ecd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMDgxNjIwYjAxMmUzZmNmNjcwMjg2ZDA2NTExYmJjZTkxZTdlY2Q=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-28T19:09:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-28T19:09:34Z"}, "message": "Rollup merge of #80431 - xfix:add-chr-as-doc-alias, r=steveklabnik\n\nAdd \"chr\" as doc alias to char::from_u32\n\nMany programming languages provide a function called `chr` - Perl, Python, PHP, Visual Basic, SQL. This change makes `char::from_u32` easier to discover in the documentation.\n\n`ord` is not added as its name conflicts with `Ord` trait, and it's not exactly clear what it could point to (`<u32 as From<char>>::from`?). I don't think it's exactly necessary, as `char::from_u32` documentation page says you can do reverse conversion with `as` operator anyway.", "tree": {"sha": "6a636cc3c28cdcd2b97123d7b345a835a57474d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a636cc3c28cdcd2b97123d7b345a835a57474d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a081620b012e3fcf670286d06511bbce91e7ecd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf6i1uCRBK7hj4Ov3rIwAAdHIIACbQayI+OACPNzCyXSeXYJ8/\n5DDU1e9RC7FHpQ09JOQio+cwFmU++jKNiQVHnOPPMMDmD3MdbZHE5ocZkmT2oyr+\nC8OuT0xKYCu9j/D5hew1NcmkmbhUl7i2hQtVtvIFLMWSjrvjxX5Ti+55MinRssXS\nPENR+LyUoDfVCuVJsIFxk6ZYMHAli/oahnZS8pbzzlw+YXizhWjisGXqIEGGS2+F\ntW1rQZ0uagGADjdUonaprhHmKv8rXWKf5oI75duG+EoNDM/T97UkvMu1EzfjRuKY\nYyEcJSaKw/CroWnKWkiVN4bmHMN5Dot2OBoLQd8/FjCRlzn9LSVG6PTkjC5E5uo=\n=pcP4\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a636cc3c28cdcd2b97123d7b345a835a57474d9\nparent e351a3b2ec918b43f9ad2713b40861e4ccb97fa0\nparent b3be9e10926f75740f0a5d126e8c8532d2c76ed2\nauthor Mara Bos <m-ou.se@m-ou.se> 1609182574 +0000\ncommitter GitHub <noreply@github.com> 1609182574 +0000\n\nRollup merge of #80431 - xfix:add-chr-as-doc-alias, r=steveklabnik\n\nAdd \"chr\" as doc alias to char::from_u32\n\nMany programming languages provide a function called `chr` - Perl, Python, PHP, Visual Basic, SQL. This change makes `char::from_u32` easier to discover in the documentation.\n\n`ord` is not added as its name conflicts with `Ord` trait, and it's not exactly clear what it could point to (`<u32 as From<char>>::from`?). I don't think it's exactly necessary, as `char::from_u32` documentation page says you can do reverse conversion with `as` operator anyway.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a081620b012e3fcf670286d06511bbce91e7ecd", "html_url": "https://github.com/rust-lang/rust/commit/5a081620b012e3fcf670286d06511bbce91e7ecd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a081620b012e3fcf670286d06511bbce91e7ecd/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e351a3b2ec918b43f9ad2713b40861e4ccb97fa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e351a3b2ec918b43f9ad2713b40861e4ccb97fa0", "html_url": "https://github.com/rust-lang/rust/commit/e351a3b2ec918b43f9ad2713b40861e4ccb97fa0"}, {"sha": "b3be9e10926f75740f0a5d126e8c8532d2c76ed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3be9e10926f75740f0a5d126e8c8532d2c76ed2", "html_url": "https://github.com/rust-lang/rust/commit/b3be9e10926f75740f0a5d126e8c8532d2c76ed2"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "de05a8c82e8f6a6d373f151d0c037391df1221ac", "filename": "library/core/src/char/convert.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a081620b012e3fcf670286d06511bbce91e7ecd/library%2Fcore%2Fsrc%2Fchar%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a081620b012e3fcf670286d06511bbce91e7ecd/library%2Fcore%2Fsrc%2Fchar%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fconvert.rs?ref=5a081620b012e3fcf670286d06511bbce91e7ecd", "patch": "@@ -47,6 +47,7 @@ use super::MAX;\n ///\n /// assert_eq!(None, c);\n /// ```\n+#[doc(alias = \"chr\")]\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn from_u32(i: u32) -> Option<char> {"}]}