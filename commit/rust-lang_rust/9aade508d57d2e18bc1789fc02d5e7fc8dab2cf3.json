{"sha": "9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3", "node_id": "C_kwDOAAsO6NoAKDlhYWRlNTA4ZDU3ZDJlMThiYzE3ODlmYzAyZDVlN2ZjOGRhYjJjZjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-11T22:31:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-11T22:31:54Z"}, "message": "Rollup merge of #91797 - the8472:fix-invalid-deref, r=Mark-Simulacrum\n\nFix zero-sized reference to deallocated memory\n\nfixes #91772\n\nr? `@camelid`", "tree": {"sha": "1f406bb55e9134cf419507457edc0cc6fae7749f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f406bb55e9134cf419507457edc0cc6fae7749f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhtSbaCRBK7hj4Ov3rIwAAK2AIAD/2cDGMF8OBeV1cYAMOXb1Q\n9eUOyGrc290pA2wISBaIlcsiOcIw2lJ+MqioD1mXYZqsv6m78BixjqK17G4y6eWL\nZcYDm5njnnJBWtIu2AmRZXWzqQOwg5MenMfHTCOt0xDhIrzSijVcLtmzZGOEBsff\naueTlqN7Ag6c/kB0k+vVP4EReqHxDeJULVUa1zLApCUiAw9G2thkwPZhqMrayyfa\nSzjFnPrBcPqJtsGFsUFNiIKfUbiP0uDT/lgwk9OlfIlDxC6RL33M6E93cnbb5HlU\n2a2Uup1d7KAzy/ECOvhg12ffD1sZy6rLY+1MyVx6HrG4NY4OJT2CJVvnEJi7H4I=\n=ngX4\n-----END PGP SIGNATURE-----\n", "payload": "tree 1f406bb55e9134cf419507457edc0cc6fae7749f\nparent bd46953f0b52063859ec5c276e93b7fd4f06aa2a\nparent 9063b64cff102c63f542452fa23d414c75a25ba7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639261914 +0100\ncommitter GitHub <noreply@github.com> 1639261914 +0100\n\nRollup merge of #91797 - the8472:fix-invalid-deref, r=Mark-Simulacrum\n\nFix zero-sized reference to deallocated memory\n\nfixes #91772\n\nr? `@camelid`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3", "html_url": "https://github.com/rust-lang/rust/commit/9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd46953f0b52063859ec5c276e93b7fd4f06aa2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd46953f0b52063859ec5c276e93b7fd4f06aa2a", "html_url": "https://github.com/rust-lang/rust/commit/bd46953f0b52063859ec5c276e93b7fd4f06aa2a"}, {"sha": "9063b64cff102c63f542452fa23d414c75a25ba7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9063b64cff102c63f542452fa23d414c75a25ba7", "html_url": "https://github.com/rust-lang/rust/commit/9063b64cff102c63f542452fa23d414c75a25ba7"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "1bff19d05c10d33de7a81f7d4a21c2565d46d09f", "filename": "library/alloc/src/vec/drain.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs?ref=9aade508d57d2e18bc1789fc02d5e7fc8dab2cf3", "patch": "@@ -128,10 +128,6 @@ impl<T, A: Allocator> Drop for Drain<'_, T, A> {\n \n         let iter = mem::replace(&mut self.iter, (&mut []).iter());\n         let drop_len = iter.len();\n-        let drop_ptr = iter.as_slice().as_ptr();\n-\n-        // forget iter so there's no aliasing reference\n-        drop(iter);\n \n         let mut vec = self.vec;\n \n@@ -155,6 +151,12 @@ impl<T, A: Allocator> Drop for Drain<'_, T, A> {\n             return;\n         }\n \n+        // as_slice() must only be called when iter.len() is > 0 because\n+        // vec::Splice modifies vec::Drain fields and may grow the vec which would invalidate\n+        // the iterator's internal pointers. Creating a reference to deallocated memory\n+        // is invalid even when it is zero-length\n+        let drop_ptr = iter.as_slice().as_ptr();\n+\n         unsafe {\n             // drop_ptr comes from a slice::Iter which only gives us a &[T] but for drop_in_place\n             // a pointer with mutable provenance is necessary. Therefore we must reconstruct"}]}