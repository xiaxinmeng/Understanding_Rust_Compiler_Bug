{"sha": "850d2f1af0224cf1d442a66c33470791a2597888", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MGQyZjFhZjAyMjRjZjFkNDQyYTY2YzMzNDcwNzkxYTI1OTc4ODg=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-12-02T13:41:39Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-12-02T13:41:39Z"}, "message": "Run name-anon-globals after all other passes\n\nname-anon-globals should always be run at the very end of the pass\npipeline, as optimization passes (in particular mergefunc) may\nintroduce new anonymous globals.\n\nI believe we did not run into this earlier because it requires the\nrather specific combination of a) mergefunc merging two weak functions\nb) compilation not using thinlto.", "tree": {"sha": "b33cce739d51ca316176c9a54914fbc7f6fc6e96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b33cce739d51ca316176c9a54914fbc7f6fc6e96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/850d2f1af0224cf1d442a66c33470791a2597888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/850d2f1af0224cf1d442a66c33470791a2597888", "html_url": "https://github.com/rust-lang/rust/commit/850d2f1af0224cf1d442a66c33470791a2597888", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/850d2f1af0224cf1d442a66c33470791a2597888/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbf748993f59682f60dfe620eafea24124f737fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbf748993f59682f60dfe620eafea24124f737fb", "html_url": "https://github.com/rust-lang/rust/commit/cbf748993f59682f60dfe620eafea24124f737fb"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "a7e53faab21e8b443f130dccbff19c77775d942b", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/850d2f1af0224cf1d442a66c33470791a2597888/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/850d2f1af0224cf1d442a66c33470791a2597888/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=850d2f1af0224cf1d442a66c33470791a2597888", "patch": "@@ -371,15 +371,16 @@ pub(crate) unsafe fn optimize(cgcx: &CodegenContext<LlvmCodegenBackend>,\n                     .unwrap_or(llvm::CodeGenOptLevel::None);\n                 let prepare_for_thin_lto = cgcx.lto == Lto::Thin || cgcx.lto == Lto::ThinLocal ||\n                     (cgcx.lto != Lto::Fat && cgcx.opts.debugging_opts.cross_lang_lto.enabled());\n+                with_llvm_pmb(llmod, &config, opt_level, prepare_for_thin_lto, &mut |b| {\n+                    llvm::LLVMPassManagerBuilderPopulateFunctionPassManager(b, fpm);\n+                    llvm::LLVMPassManagerBuilderPopulateModulePassManager(b, mpm);\n+                });\n+\n                 have_name_anon_globals_pass = have_name_anon_globals_pass || prepare_for_thin_lto;\n                 if using_thin_buffers && !prepare_for_thin_lto {\n                     assert!(addpass(\"name-anon-globals\"));\n                     have_name_anon_globals_pass = true;\n                 }\n-                with_llvm_pmb(llmod, &config, opt_level, prepare_for_thin_lto, &mut |b| {\n-                    llvm::LLVMPassManagerBuilderPopulateFunctionPassManager(b, fpm);\n-                    llvm::LLVMPassManagerBuilderPopulateModulePassManager(b, mpm);\n-                })\n             }\n \n             for pass in &config.passes {"}]}