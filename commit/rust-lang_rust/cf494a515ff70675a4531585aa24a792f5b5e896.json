{"sha": "cf494a515ff70675a4531585aa24a792f5b5e896", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNDk0YTUxNWZmNzA2NzVhNDUzMTU4NWFhMjRhNzkyZjViNWU4OTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-19T17:24:04Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-19T17:24:04Z"}, "message": "Fix handling of `#![cfg]` in outline module file", "tree": {"sha": "2d69a62693790a12c98bfd414ecfcd6bbac1b1eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d69a62693790a12c98bfd414ecfcd6bbac1b1eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf494a515ff70675a4531585aa24a792f5b5e896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf494a515ff70675a4531585aa24a792f5b5e896", "html_url": "https://github.com/rust-lang/rust/commit/cf494a515ff70675a4531585aa24a792f5b5e896", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf494a515ff70675a4531585aa24a792f5b5e896/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc8e2fea98aecbba0c587e5999b9e09533e0091c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc8e2fea98aecbba0c587e5999b9e09533e0091c", "html_url": "https://github.com/rust-lang/rust/commit/dc8e2fea98aecbba0c587e5999b9e09533e0091c"}], "stats": {"total": 69, "additions": 48, "deletions": 21}, "files": [{"sha": "46a3c60cdd80b0992e0efce25da7b5e560457ac2", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/cf494a515ff70675a4531585aa24a792f5b5e896/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf494a515ff70675a4531585aa24a792f5b5e896/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=cf494a515ff70675a4531585aa24a792f5b5e896", "patch": "@@ -1294,29 +1294,37 @@ impl ModCollector<'_, '_> {\n                 let db = self.def_collector.db;\n                 match self.mod_dir.resolve_declaration(db, self.file_id, &module.name, path_attr) {\n                     Ok((file_id, is_mod_rs, mod_dir)) => {\n-                        let module_id = self.push_child_module(\n-                            module.name.clone(),\n-                            ast_id,\n-                            Some((file_id, is_mod_rs)),\n-                            &self.item_tree[module.visibility],\n-                        );\n                         let item_tree = db.file_item_tree(file_id.into());\n-                        ModCollector {\n-                            def_collector: &mut *self.def_collector,\n-                            macro_depth: self.macro_depth,\n-                            module_id,\n-                            file_id: file_id.into(),\n-                            item_tree: &item_tree,\n-                            mod_dir,\n-                        }\n-                        .collect(item_tree.top_level_items());\n-                        if is_macro_use\n-                            || item_tree\n-                                .top_level_attrs(db, self.def_collector.def_map.krate)\n-                                .by_key(\"macro_use\")\n-                                .exists()\n+                        if item_tree\n+                            .top_level_attrs(db, self.def_collector.def_map.krate)\n+                            .cfg()\n+                            .map_or(true, |cfg| {\n+                                self.def_collector.cfg_options.check(&cfg) != Some(false)\n+                            })\n                         {\n-                            self.import_all_legacy_macros(module_id);\n+                            let module_id = self.push_child_module(\n+                                module.name.clone(),\n+                                ast_id,\n+                                Some((file_id, is_mod_rs)),\n+                                &self.item_tree[module.visibility],\n+                            );\n+                            ModCollector {\n+                                def_collector: &mut *self.def_collector,\n+                                macro_depth: self.macro_depth,\n+                                module_id,\n+                                file_id: file_id.into(),\n+                                item_tree: &item_tree,\n+                                mod_dir,\n+                            }\n+                            .collect(item_tree.top_level_items());\n+                            if is_macro_use\n+                                || item_tree\n+                                    .top_level_attrs(db, self.def_collector.def_map.krate)\n+                                    .by_key(\"macro_use\")\n+                                    .exists()\n+                            {\n+                                self.import_all_legacy_macros(module_id);\n+                            }\n                         }\n                     }\n                     Err(candidate) => {"}, {"sha": "16a2cd27af3afe860ba25f9da9e0a8966b092eee", "filename": "crates/hir_def/src/nameres/tests/mod_resolution.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cf494a515ff70675a4531585aa24a792f5b5e896/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf494a515ff70675a4531585aa24a792f5b5e896/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs?ref=cf494a515ff70675a4531585aa24a792f5b5e896", "patch": "@@ -819,3 +819,22 @@ pub mod hash { pub trait Hash {} }\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn cfg_in_module_file() {\n+    // Inner `#![cfg]` in a module file makes the whole module disappear.\n+    check(\n+        r#\"\n+//- /main.rs\n+mod module;\n+\n+//- /module.rs\n+#![cfg(NEVER)]\n+\n+struct AlsoShoulntAppear;\n+        \"#,\n+        expect![[r#\"\n+            crate\n+        \"#]],\n+    )\n+}"}]}