{"sha": "bbeb7216e0985b21c6288acd4f09de1bb0c250cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZWI3MjE2ZTA5ODViMjFjNjI4OGFjZDRmMDlkZTFiYjBjMjUwY2M=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-23T17:32:57Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-23T17:32:57Z"}, "message": "Thinify the fat pointer on virtual function calls", "tree": {"sha": "ea407e0930ae7b753703d05e8c10bd760d37a052", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea407e0930ae7b753703d05e8c10bd760d37a052"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbeb7216e0985b21c6288acd4f09de1bb0c250cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbeb7216e0985b21c6288acd4f09de1bb0c250cc", "html_url": "https://github.com/rust-lang/rust/commit/bbeb7216e0985b21c6288acd4f09de1bb0c250cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbeb7216e0985b21c6288acd4f09de1bb0c250cc/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb867d250ac4f1a1306d3835d461275ea037c065", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb867d250ac4f1a1306d3835d461275ea037c065", "html_url": "https://github.com/rust-lang/rust/commit/cb867d250ac4f1a1306d3835d461275ea037c065"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "b78824ea5c9e74892f4a285c7e99e26808f2d49d", "filename": "src/lvalue.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bbeb7216e0985b21c6288acd4f09de1bb0c250cc/src%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbeb7216e0985b21c6288acd4f09de1bb0c250cc/src%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flvalue.rs?ref=bbeb7216e0985b21c6288acd4f09de1bb0c250cc", "patch": "@@ -200,6 +200,12 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 (Size::from_bytes(field * elem_size), false)\n             }\n \n+            FatPointer { .. } => {\n+                let bytes = field_index as u64 * self.memory.pointer_size();\n+                let offset = Size::from_bytes(bytes);\n+                (offset, false)\n+            }\n+\n             _ => bug!(\"field access on non-product type: {:?}\", base_layout),\n         };\n "}, {"sha": "03804ccd0bd5137e920cd66dcc6f1a1f3f9a9f88", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bbeb7216e0985b21c6288acd4f09de1bb0c250cc/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbeb7216e0985b21c6288acd4f09de1bb0c250cc/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=bbeb7216e0985b21c6288acd4f09de1bb0c250cc", "patch": "@@ -337,11 +337,18 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let (_, vtable) = self.eval_operand(&arg_operands[0])?.expect_ptr_vtable_pair(&self.memory)?;\n                 let fn_ptr = self.memory.read_ptr(vtable.offset(ptr_size * (idx as u64 + 3)))?;\n                 let instance = self.memory.get_fn(fn_ptr.alloc_id)?;\n+                let mut arg_operands = arg_operands.to_vec();\n+                let ty = self.operand_ty(&arg_operands[0]);\n+                let ty = self.get_field_ty(ty, 0)?;\n+                match arg_operands[0] {\n+                    mir::Operand::Consume(ref mut lval) => *lval = lval.clone().field(mir::Field::new(0), ty),\n+                    _ => bug!(\"virtual call first arg cannot be a constant\"),\n+                }\n                 // recurse with concrete function\n                 self.eval_fn_call(\n                     instance,\n                     destination,\n-                    arg_operands,\n+                    &arg_operands,\n                     span,\n                     sig,\n                 )"}, {"sha": "badb833ee800bca94c2420c3dbf2b66e97d3fe29", "filename": "tests/run-pass/issue-3794.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/bbeb7216e0985b21c6288acd4f09de1bb0c250cc/tests%2Frun-pass%2Fissue-3794.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbeb7216e0985b21c6288acd4f09de1bb0c250cc/tests%2Frun-pass%2Fissue-3794.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-3794.rs?ref=bbeb7216e0985b21c6288acd4f09de1bb0c250cc", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(box_syntax)]\n+\n+trait T {\n+    fn print(&self);\n+}\n+\n+#[derive(Debug)]\n+struct S {\n+    s: isize,\n+}\n+\n+impl T for S {\n+    fn print(&self) {\n+        println!(\"{:?}\", self);\n+    }\n+}\n+\n+fn print_t(t: &T) {\n+    t.print();\n+}\n+\n+fn print_s(s: &S) {\n+    s.print();\n+}\n+\n+pub fn main() {\n+    let s: Box<S> = box S { s: 5 };\n+    print_s(&*s);\n+    let t: Box<T> = s as Box<T>;\n+    print_t(&*t);\n+}"}]}