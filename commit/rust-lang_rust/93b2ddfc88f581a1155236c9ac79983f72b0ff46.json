{"sha": "93b2ddfc88f581a1155236c9ac79983f72b0ff46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYjJkZGZjODhmNTgxYTExNTUyMzZjOWFjNzk5ODNmNzJiMGZmNDY=", "commit": {"author": {"name": "Alexei Sholik", "email": "alcosholik@gmail.com", "date": "2013-06-08T01:02:41Z"}, "committer": {"name": "Alexei Sholik", "email": "alcosholik@gmail.com", "date": "2013-06-08T01:10:50Z"}, "message": "A reminder that a block is a single expr in closures\n\nThis is something that's only been briefly mentioned in the beginning of\nthe tutorial and all of the closure examples within this subsection\ninclude only one expression between { and }.", "tree": {"sha": "3b225a99e7b3e801aadd52d5b2dea3dd2b888d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b225a99e7b3e801aadd52d5b2dea3dd2b888d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93b2ddfc88f581a1155236c9ac79983f72b0ff46", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93b2ddfc88f581a1155236c9ac79983f72b0ff46", "html_url": "https://github.com/rust-lang/rust/commit/93b2ddfc88f581a1155236c9ac79983f72b0ff46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93b2ddfc88f581a1155236c9ac79983f72b0ff46/comments", "author": {"login": "alco", "id": 207748, "node_id": "MDQ6VXNlcjIwNzc0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/207748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alco", "html_url": "https://github.com/alco", "followers_url": "https://api.github.com/users/alco/followers", "following_url": "https://api.github.com/users/alco/following{/other_user}", "gists_url": "https://api.github.com/users/alco/gists{/gist_id}", "starred_url": "https://api.github.com/users/alco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alco/subscriptions", "organizations_url": "https://api.github.com/users/alco/orgs", "repos_url": "https://api.github.com/users/alco/repos", "events_url": "https://api.github.com/users/alco/events{/privacy}", "received_events_url": "https://api.github.com/users/alco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alco", "id": 207748, "node_id": "MDQ6VXNlcjIwNzc0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/207748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alco", "html_url": "https://github.com/alco", "followers_url": "https://api.github.com/users/alco/followers", "following_url": "https://api.github.com/users/alco/following{/other_user}", "gists_url": "https://api.github.com/users/alco/gists{/gist_id}", "starred_url": "https://api.github.com/users/alco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alco/subscriptions", "organizations_url": "https://api.github.com/users/alco/orgs", "repos_url": "https://api.github.com/users/alco/repos", "events_url": "https://api.github.com/users/alco/events{/privacy}", "received_events_url": "https://api.github.com/users/alco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8cf2f8056d29423430b723acd70e525d1249a32", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8cf2f8056d29423430b723acd70e525d1249a32", "html_url": "https://github.com/rust-lang/rust/commit/b8cf2f8056d29423430b723acd70e525d1249a32"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "0066434c40cc013df6d7fe56b8e6e0da6a472a0c", "filename": "doc/tutorial.md", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/93b2ddfc88f581a1155236c9ac79983f72b0ff46/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/93b2ddfc88f581a1155236c9ac79983f72b0ff46/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=93b2ddfc88f581a1155236c9ac79983f72b0ff46", "patch": "@@ -1439,10 +1439,15 @@ call_closure_with_ten(closure);\n ~~~~\n \n Closures begin with the argument list between vertical bars and are followed by\n-a single expression. The types of the arguments are generally omitted,\n-as is the return type, because the compiler can almost always infer\n-them. In the rare case where the compiler needs assistance, though, the\n-arguments and return types may be annotated.\n+a single expression. Remember that a block, `{ <expr1>; <expr2>; ... }`, is\n+considered a single expression: it evaluates to the result of the last\n+expression it contains if that expression is not followed by a semicolon,\n+otherwise the block evaluates to `()`.\n+\n+The types of the arguments are generally omitted, as is the return type,\n+because the compiler can almost always infer them. In the rare case where the\n+compiler needs assistance, though, the arguments and return types may be\n+annotated.\n \n ~~~~\n let square = |x: int| -> uint { x * x as uint };"}]}