{"sha": "a8b0a3ca8e275799d66c3f8c36607553b9e86541", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YjBhM2NhOGUyNzU3OTlkNjZjM2Y4YzM2NjA3NTUzYjllODY1NDE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-12T03:07:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-12T03:07:19Z"}, "message": "Rollup merge of #75422 - poliorcetics:tidy-accept-more-safety-comments, r=Mark-Simulacrum\n\nAccept more safety comments\n\nThis accepts more `// SAFETY:` comments from `tidy`.\n\nThis is done after the current behaviour of requiring text one the same line (because spaces are stripped so the last space never pass if there is no text on the same line) bit me once more in #75066\n\nThis could potentially accept empty `// SAFETY:` comments but `tidy` is an internal tool used only here so my reasoning is reviews will catch those.", "tree": {"sha": "9f79cab32ad8295e65dd289096eac651549126ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f79cab32ad8295e65dd289096eac651549126ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8b0a3ca8e275799d66c3f8c36607553b9e86541", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfM1znCRBK7hj4Ov3rIwAAdHIIALK/NZ7Mz0e+DCmaq0l4GK0O\nxW6gwbQbHwd9cPtoeXV0UzCP5wvV/NGwWR7tYqd/yz3QzLE2y9X3YufUReFVlkL3\nRgJzhT4rFNRrTQ60v2Oyl1mYeMt7W6wy8cwdYCHHIL36Wz77nJ9+ZY4nnu+dki6e\ndU/xzbN5BfYRhLRpB+MANr93O4TQwppuVFD35svC984GkMxIlmv8p1cy+cHbRLKy\nmlCwFRspggdh4xvEhqlVUNJFSuK1ivg+ZmUfl//kn5cV7Vt9olXPAbobZ0a2xWIw\nPfKgWieRN73iyR/SXmlkACv9PBfWL/zWrzwcjWWz8bzPgtbobpge+V/wEHyQkZ4=\n=HmfM\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f79cab32ad8295e65dd289096eac651549126ab\nparent 7a900835c1c63965fb13a2d89335c87de436a596\nparent 883dffa4c9d7961520c8e152f4c2cd901e425bb7\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597201639 +0900\ncommitter GitHub <noreply@github.com> 1597201639 +0900\n\nRollup merge of #75422 - poliorcetics:tidy-accept-more-safety-comments, r=Mark-Simulacrum\n\nAccept more safety comments\n\nThis accepts more `// SAFETY:` comments from `tidy`.\n\nThis is done after the current behaviour of requiring text one the same line (because spaces are stripped so the last space never pass if there is no text on the same line) bit me once more in #75066\n\nThis could potentially accept empty `// SAFETY:` comments but `tidy` is an internal tool used only here so my reasoning is reviews will catch those.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8b0a3ca8e275799d66c3f8c36607553b9e86541", "html_url": "https://github.com/rust-lang/rust/commit/a8b0a3ca8e275799d66c3f8c36607553b9e86541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8b0a3ca8e275799d66c3f8c36607553b9e86541/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a900835c1c63965fb13a2d89335c87de436a596", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a900835c1c63965fb13a2d89335c87de436a596", "html_url": "https://github.com/rust-lang/rust/commit/7a900835c1c63965fb13a2d89335c87de436a596"}, {"sha": "883dffa4c9d7961520c8e152f4c2cd901e425bb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/883dffa4c9d7961520c8e152f4c2cd901e425bb7", "html_url": "https://github.com/rust-lang/rust/commit/883dffa4c9d7961520c8e152f4c2cd901e425bb7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bce3cf06b0751ce72a5ca0abe3ca01d882655f98", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8b0a3ca8e275799d66c3f8c36607553b9e86541/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8b0a3ca8e275799d66c3f8c36607553b9e86541/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=a8b0a3ca8e275799d66c3f8c36607553b9e86541", "patch": "@@ -263,7 +263,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n                     suppressible_tidy_err!(err, skip_undocumented_unsafe, \"undocumented unsafe\");\n                 }\n             }\n-            if line.contains(\"// SAFETY: \") || line.contains(\"// Safety: \") {\n+            if line.contains(\"// SAFETY:\") || line.contains(\"// Safety:\") {\n                 last_safety_comment = true;\n             } else if line.trim().starts_with(\"//\") || line.trim().is_empty() {\n                 // keep previous value"}]}