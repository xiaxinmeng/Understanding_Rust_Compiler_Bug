{"sha": "345eb14f6c841cd38e76a5b0bbf99e1b94a90d40", "node_id": "C_kwDOAAsO6NoAKDM0NWViMTRmNmM4NDFjZDM4ZTc2YTViMGJiZjk5ZTFiOTRhOTBkNDA", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-06-22T01:40:23Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-06-22T04:42:56Z"}, "message": "Remove vendoring support when building from git sources\n\nThis is difficult to support without submodule handling in bootstrap.py, because cargo will refuse\nto vendor sources unless it knows the Cargo.toml files of all tools in tree. Moving vendor support\nto rustbuild means that rustbuild will be built without vendoring.\n\nRather than trying to solve this, just remove support altogether and require\npeople to use `rustc-src` if they want vendoring (or run `cargo vendor` manually).", "tree": {"sha": "160658dd71ba5c84b88fdde34eb1a5ad149795af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/160658dd71ba5c84b88fdde34eb1a5ad149795af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40", "html_url": "https://github.com/rust-lang/rust/commit/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85c87f6c67f966e7b4fd292217c6db41fce88e0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/85c87f6c67f966e7b4fd292217c6db41fce88e0d", "html_url": "https://github.com/rust-lang/rust/commit/85c87f6c67f966e7b4fd292217c6db41fce88e0d"}], "stats": {"total": 74, "additions": 31, "deletions": 43}, "files": [{"sha": "206bc38efb320c45e18c61874ea9a5f26a3fa4f3", "filename": "src/bootstrap/CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=345eb14f6c841cd38e76a5b0bbf99e1b94a90d40", "patch": "@@ -7,9 +7,9 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n \n ## [Changes since the last major version]\n \n+- Vendoring is no longer done automatically when building from git sources. To use vendoring, run `cargo vendor` manually, or use the pre-vendored `rustc-src` tarball.\n - `llvm-libunwind` now accepts `in-tree` (formerly true), `system` or `no` (formerly false) [#77703](https://github.com/rust-lang/rust/pull/77703)\n - The options `infodir`, `localstatedir`, and `gpg-password-file` are no longer allowed in config.toml. Previously, they were ignored without warning. Note that `infodir` and `localstatedir` are still accepted by `./configure`, with a warning. [#82451](https://github.com/rust-lang/rust/pull/82451)\n-- Add options for enabling overflow checks, one for std (`overflow-checks-std`) and one for everything else (`overflow-checks`). Both default to false.\n - Change the names for `dist` commands to match the component they generate. [#90684](https://github.com/rust-lang/rust/pull/90684)\n - The `build.fast-submodules` option has been removed. Fast submodule checkouts are enabled unconditionally. Automatic submodule handling can still be disabled with `build.submodules = false`.\n \n@@ -19,6 +19,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n - The default bootstrap profiles are now located at `bootstrap/defaults/config.$PROFILE.toml` (previously they were located at `bootstrap/defaults/config.toml.$PROFILE`) [#77558](https://github.com/rust-lang/rust/pull/77558)\n - If you have Rust already installed, `x.py` will now infer the host target\n   from the default rust toolchain. [#78513](https://github.com/rust-lang/rust/pull/78513)\n+- Add options for enabling overflow checks, one for std (`overflow-checks-std`) and one for everything else (`overflow-checks`). Both default to false.\n \n \n ## [Version 2] - 2020-09-25"}, {"sha": "457fedd2d8a7ece6515f6c1c702c4182b520e306", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 17, "deletions": 41, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=345eb14f6c841cd38e76a5b0bbf99e1b94a90d40", "patch": "@@ -822,55 +822,32 @@ def set_dist_environment(self, url):\n \n     def check_vendored_status(self):\n         \"\"\"Check that vendoring is configured properly\"\"\"\n-        vendor_dir = os.path.join(self.rust_root, 'vendor')\n         if 'SUDO_USER' in os.environ and not self.use_vendored_sources:\n             if os.getuid() == 0:\n                 self.use_vendored_sources = True\n                 print('info: looks like you\\'re trying to run this command as root')\n                 print('      and so in order to preserve your $HOME this will now')\n                 print('      use vendored sources by default.')\n-                if not os.path.exists(vendor_dir):\n-                    print('error: vendoring required, but vendor directory does not exist.')\n-                    print('       Run `cargo vendor` without sudo to initialize the '\n-                          'vendor directory.')\n-                    raise Exception(\"{} not found\".format(vendor_dir))\n \n+        cargo_dir = os.path.join(self.rust_root, '.cargo')\n         if self.use_vendored_sources:\n-            config = (\"[source.crates-io]\\n\"\n-                      \"replace-with = 'vendored-sources'\\n\"\n-                      \"registry = 'https://example.com'\\n\"\n-                      \"\\n\"\n-                      \"[source.vendored-sources]\\n\"\n-                      \"directory = '{}/vendor'\\n\"\n-                      .format(self.rust_root))\n-            if not os.path.exists('.cargo'):\n-                os.makedirs('.cargo')\n-                with output('.cargo/config') as cargo_config:\n-                    cargo_config.write(config)\n-            else:\n-                print('info: using vendored source, but .cargo/config is already present.')\n-                print('      Reusing the current configuration file. But you may want to '\n-                      'configure vendoring like this:')\n-                print(config)\n+            vendor_dir = os.path.join(self.rust_root, 'vendor')\n+            if not os.path.exists(vendor_dir):\n+                sync_dirs = \"--sync ./src/tools/rust-analyzer/Cargo.toml \" \\\n+                            \"--sync ./compiler/rustc_codegen_cranelift/Cargo.toml \" \\\n+                            \"--sync ./src/bootstrap/Cargo.toml \"\n+                print('error: vendoring required, but vendor directory does not exist.')\n+                print('       Run `cargo vendor {}` to initialize the '\n+                      'vendor directory.'.format(sync_dirs))\n+                print('Alternatively, use the pre-vendored `rustc-src` dist component.')\n+                raise Exception(\"{} not found\".format(vendor_dir))\n+\n+            if not os.path.exists(cargo_dir):\n+                print('error: vendoring required, but .cargo/config does not exist.')\n+                raise Exception(\"{} not found\".format(cargo_dir))\n         else:\n-            if os.path.exists('.cargo'):\n-                shutil.rmtree('.cargo')\n-\n-    def ensure_vendored(self):\n-        \"\"\"Ensure that the vendored sources are available if needed\"\"\"\n-        vendor_dir = os.path.join(self.rust_root, 'vendor')\n-        # Note that this does not handle updating the vendored dependencies if\n-        # the rust git repository is updated. Normal development usually does\n-        # not use vendoring, so hopefully this isn't too much of a problem.\n-        if self.use_vendored_sources and not os.path.exists(vendor_dir):\n-            run([\n-                self.cargo(),\n-                \"vendor\",\n-                \"--sync=./src/bootstrap/Cargo.toml\",\n-                \"--sync=./src/tools/rust-analyzer/Cargo.toml\",\n-                \"--sync=./compiler/rustc_codegen_cranelift/Cargo.toml\",\n-            ], verbose=self.verbose, cwd=self.rust_root)\n-\n+            if os.path.exists(cargo_dir):\n+                shutil.rmtree(cargo_dir)\n \n def bootstrap(help_triggered):\n     \"\"\"Configure, fetch, build and run the initial bootstrap\"\"\"\n@@ -953,7 +930,6 @@ def bootstrap(help_triggered):\n     # Fetch/build the bootstrap\n     build.download_toolchain()\n     sys.stdout.flush()\n-    build.ensure_vendored()\n     build.build_bootstrap()\n     sys.stdout.flush()\n "}, {"sha": "8182d2bf8fb3bf1d96051ee4b7d0dab5ae94cf6c", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/345eb14f6c841cd38e76a5b0bbf99e1b94a90d40/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=345eb14f6c841cd38e76a5b0bbf99e1b94a90d40", "patch": "@@ -894,8 +894,19 @@ impl Step for PlainSourceTarball {\n                 .arg(builder.src.join(\"./src/tools/rust-analyzer/Cargo.toml\"))\n                 .arg(\"--sync\")\n                 .arg(builder.src.join(\"./compiler/rustc_codegen_cranelift/Cargo.toml\"))\n+                .arg(\"--sync\")\n+                .arg(builder.src.join(\"./src/bootstrap/Cargo.toml\"))\n                 .current_dir(&plain_dst_src);\n-            builder.run(&mut cmd);\n+\n+            let config = if !builder.config.dry_run {\n+                t!(String::from_utf8(t!(cmd.output()).stdout))\n+            } else {\n+                String::new()\n+            };\n+\n+            let cargo_config_dir = plain_dst_src.join(\".cargo\");\n+            builder.create_dir(&cargo_config_dir);\n+            builder.create(&cargo_config_dir.join(\"config.toml\"), &config);\n         }\n \n         tarball.bare()"}]}