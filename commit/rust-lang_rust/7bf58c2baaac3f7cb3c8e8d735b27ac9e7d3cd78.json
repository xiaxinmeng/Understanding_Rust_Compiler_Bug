{"sha": "7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZjU4YzJiYWFhYzNmN2NiM2M4ZThkNzM1YjI3YWM5ZTdkM2NkNzg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-25T23:50:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-03T23:15:41Z"}, "message": "Modify IoFactory's fs_mkdir, and add fs_rename\n\nThe invocation for making a directory should be able to specify a mode to make\nthe directory with (instead of defaulting to one particular mode). Additionally,\nlibuv and various OSes implement efficient versions of renaming files, so this\noperation is exposed as an IoFactory call.", "tree": {"sha": "398fa2a360e660fa4e6fc05a5994a2dce67318dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/398fa2a360e660fa4e6fc05a5994a2dce67318dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "html_url": "https://github.com/rust-lang/rust/commit/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7b6502784cad759cee9961426313017f052d5ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b6502784cad759cee9961426313017f052d5ba", "html_url": "https://github.com/rust-lang/rust/commit/d7b6502784cad759cee9961426313017f052d5ba"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "2303721986c42edc0ee4a9df318b0cde8fccb226", "filename": "src/librustuv/file.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibrustuv%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibrustuv%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Ffile.rs?ref=7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "patch": "@@ -206,6 +206,21 @@ impl FsRequest {\n         assert_eq!(ret, 0);\n     }\n \n+    pub fn rename(self, loop_: &Loop, path: &CString, to: &CString, cb: FsCallback) {\n+        let complete_cb_ptr = {\n+            let mut me = self;\n+            me.req_boilerplate(Some(cb))\n+        };\n+        let ret = unsafe {\n+            uvll::fs_rename(loop_.native_handle(),\n+                            self.native_handle(),\n+                            path.with_ref(|p| p),\n+                            to.with_ref(|p| p),\n+                            complete_cb_ptr)\n+        };\n+        assert_eq!(ret, 0);\n+    }\n+\n     pub fn readdir(self, loop_: &Loop, path: &CString,\n                    flags: c_int, cb: FsCallback) {\n         let complete_cb_ptr = {"}, {"sha": "7ecb51bb0d6ef0f04aa80ac709dd338ceebffd96", "filename": "src/librustuv/uvio.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibrustuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibrustuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvio.rs?ref=7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "patch": "@@ -699,10 +699,9 @@ impl IoFactory for UvIoFactory {\n         assert!(!result_cell.is_empty());\n         return result_cell.take();\n     }\n-    fn fs_mkdir(&mut self, path: &CString) -> Result<(), IoError> {\n-        let mode = S_IRWXU as int;\n+    fn fs_mkdir(&mut self, path: &CString, mode: int) -> Result<(), IoError> {\n         do uv_fs_helper(self.uv_loop(), path) |mkdir_req, l, p, cb| {\n-            do mkdir_req.mkdir(l, p, mode as int) |req, err| {\n+            do mkdir_req.mkdir(l, p, mode) |req, err| {\n                 cb(req, err)\n             };\n         }\n@@ -714,6 +713,15 @@ impl IoFactory for UvIoFactory {\n             };\n         }\n     }\n+    fn fs_rename(&mut self, path: &CString, to: &CString) -> Result<(), IoError> {\n+        let to = to.with_ref(|p| p);\n+        do uv_fs_helper(self.uv_loop(), path) |rename_req, l, p, cb| {\n+            let to = unsafe { CString::new(to, false) };\n+            do rename_req.rename(l, p, &to) |req, err| {\n+                cb(req, err)\n+            };\n+        }\n+    }\n     fn fs_readdir(&mut self, path: &CString, flags: c_int) ->\n         Result<~[Path], IoError> {\n         use str::StrSlice;"}, {"sha": "9f26f9506a08401e6a98b4465f43cfc948187f00", "filename": "src/librustuv/uvll.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibrustuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibrustuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvll.rs?ref=7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "patch": "@@ -807,6 +807,12 @@ pub unsafe fn fs_rmdir(loop_ptr: *uv_loop_t, req: *uv_fs_t, path: *c_char,\n \n     rust_uv_fs_rmdir(loop_ptr, req, path, cb)\n }\n+pub unsafe fn fs_rename(loop_ptr: *uv_loop_t, req: *uv_fs_t, path: *c_char,\n+                        to: *c_char, cb: *u8) -> c_int {\n+    #[fixed_stack_segment]; #[inline(never)];\n+\n+    rust_uv_fs_rename(loop_ptr, req, path, to, cb)\n+}\n pub unsafe fn fs_readdir(loop_ptr: *uv_loop_t, req: *uv_fs_t, path: *c_char,\n                 flags: c_int, cb: *u8) -> c_int {\n     #[fixed_stack_segment]; #[inline(never)];\n@@ -1107,6 +1113,8 @@ extern {\n                         mode: c_int, cb: *u8) -> c_int;\n     fn rust_uv_fs_rmdir(loop_ptr: *c_void, req: *uv_fs_t, path: *c_char,\n                         cb: *u8) -> c_int;\n+    fn rust_uv_fs_rename(loop_ptr: *c_void, req: *uv_fs_t, path: *c_char,\n+                         to: *c_char, cb: *u8) -> c_int;\n     fn rust_uv_fs_readdir(loop_ptr: *c_void, req: *uv_fs_t, path: *c_char,\n                         flags: c_int, cb: *u8) -> c_int;\n     fn rust_uv_fs_req_cleanup(req: *uv_fs_t);"}, {"sha": "44d9f59c4106206fba166231e830bc4b4fe960d9", "filename": "src/libstd/rt/rtio.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibstd%2Frt%2Frtio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Flibstd%2Frt%2Frtio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frtio.rs?ref=7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "patch": "@@ -102,8 +102,9 @@ pub trait IoFactory {\n         -> Result<~RtioFileStream, IoError>;\n     fn fs_unlink(&mut self, path: &CString) -> Result<(), IoError>;\n     fn fs_stat(&mut self, path: &CString) -> Result<FileStat, IoError>;\n-    fn fs_mkdir(&mut self, path: &CString) -> Result<(), IoError>;\n+    fn fs_mkdir(&mut self, path: &CString, mode: int) -> Result<(), IoError>;\n     fn fs_rmdir(&mut self, path: &CString) -> Result<(), IoError>;\n+    fn fs_rename(&mut self, path: &CString, to: &CString) -> Result<(), IoError>;\n     fn fs_readdir(&mut self, path: &CString, flags: c_int) ->\n         Result<~[Path], IoError>;\n     fn spawn(&mut self, config: ProcessConfig)"}, {"sha": "70602100f2e0d4d584c3a3d24c92406a80ea6760", "filename": "src/rt/rust_uv.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Frt%2Frust_uv.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78/src%2Frt%2Frust_uv.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_uv.cpp?ref=7bf58c2baaac3f7cb3c8e8d735b27ac9e7d3cd78", "patch": "@@ -592,6 +592,11 @@ extern \"C\" int\n rust_uv_fs_readdir(uv_loop_t* loop, uv_fs_t* req, const char* path, int flags, uv_fs_cb cb) {\n   return uv_fs_readdir(loop, req, path, flags, cb);\n }\n+extern \"C\" int\n+rust_uv_fs_rename(uv_loop_t *loop, uv_fs_t* req, const char *path,\n+                  const char *to, uv_fs_cb cb) {\n+    return uv_fs_rename(loop, req, path, to, cb);\n+}\n \n extern \"C\" int\n rust_uv_spawn(uv_loop_t *loop, uv_process_t *p, uv_process_options_t options) {"}]}