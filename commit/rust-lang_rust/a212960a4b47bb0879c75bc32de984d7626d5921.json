{"sha": "a212960a4b47bb0879c75bc32de984d7626d5921", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMTI5NjBhNGI0N2JiMDg3OWM3NWJjMzJkZTk4NGQ3NjI2ZDU5MjE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-08-01T21:18:37Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-10-29T12:42:55Z"}, "message": "stabilize cfg(doctest)", "tree": {"sha": "9acb9672e0749e820a8f5f6431110ac797a84139", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9acb9672e0749e820a8f5f6431110ac797a84139"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a212960a4b47bb0879c75bc32de984d7626d5921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a212960a4b47bb0879c75bc32de984d7626d5921", "html_url": "https://github.com/rust-lang/rust/commit/a212960a4b47bb0879c75bc32de984d7626d5921", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a212960a4b47bb0879c75bc32de984d7626d5921/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48", "html_url": "https://github.com/rust-lang/rust/commit/eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48"}], "stats": {"total": 91, "additions": 35, "deletions": 56}, "files": [{"sha": "68b9c0d241422664212524d0f035adc51bcf3a5c", "filename": "src/doc/rustdoc/src/documentation-tests.md", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -379,3 +379,34 @@ However, it's preferable to use fenced code blocks over indented code blocks.\n Not only are fenced code blocks considered more idiomatic for Rust code,\n but there is no way to use directives such as `ignore` or `should_panic` with\n indented code blocks.\n+\n+### Include items only when collecting doctests\n+\n+Rustdoc's [documentation tests] can do some things that regular unit tests can't, so it can\n+sometimes be useful to extend your doctests with samples that wouldn't otherwise need to be in\n+documentation. To this end, Rustdoc allows you to have certain items only appear when it's\n+collecting doctests, so you can utilize doctest functionality without forcing the test to appear in\n+docs, or to find an arbitrary private item to include it on.\n+\n+When compiling a crate for use in doctests (with `--test` option), rustdoc will set `cfg(doctest)`.\n+Note that they will still link against only the public items of your crate; if you need to\n+test private items, either make items conditionally public via `cfg(doctest)` or write a unit test.\n+\n+In this example, we're adding doctests that we know won't compile, to verify that our struct can\n+only take in valid data:\n+\n+```rust\n+/// We have a struct here. Remember it doesn't accept negative numbers!\n+pub struct MyStruct(usize);\n+\n+/// ```compile_fail\n+/// let x = my_crate::MyStruct(-5);\n+/// ```\n+#[cfg(doctest)]\n+pub struct MyStructOnlyTakesUsize;\n+```\n+\n+Please note that the struct `MyStructOnlyTakesUsize` will not appear in documentation or in the\n+public API considering it only exists when running rustdoc with the `--test` option.\n+\n+[documentation tests]: documentation-tests.html"}, {"sha": "3c3e72aa3795912e5cedfa08930e439ef3dd24c8", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -211,36 +211,6 @@ pub struct BigX;\n Then, when looking for it through the `rustdoc` search, if you enter \"x\" or\n \"big\", search will show the `BigX` struct first.\n \n-### Include items only when collecting doctests\n-\n-Rustdoc's [documentation tests] can do some things that regular unit tests can't, so it can\n-sometimes be useful to extend your doctests with samples that wouldn't otherwise need to be in\n-documentation. To this end, Rustdoc allows you to have certain items only appear when it's\n-collecting doctests, so you can utilize doctest functionality without forcing the test to appear in\n-docs, or to find an arbitrary private item to include it on.\n-\n-If you add `#![feature(cfg_doctest)]` to your crate, Rustdoc will set `cfg(doctest)` when collecting\n-doctests. Note that they will still link against only the public items of your crate; if you need to\n-test private items, unit tests are still the way to go.\n-\n-In this example, we're adding doctests that we know won't compile, to verify that our struct can\n-only take in valid data:\n-\n-```rust\n-#![feature(cfg_doctest)]\n-\n-/// We have a struct here. Remember it doesn't accept negative numbers!\n-pub struct MyStruct(usize);\n-\n-/// ```compile_fail\n-/// let x = my_crate::MyStruct(-5);\n-/// ```\n-#[cfg(doctest)]\n-pub struct MyStructOnlyTakesUsize;\n-```\n-\n-[documentation tests]: documentation-tests.html\n-\n ## Unstable command-line arguments\n \n These features are enabled by passing a command-line flag to Rustdoc, but the flags in question are"}, {"sha": "a1cf2d421084ef60867468e68ce798f013aa31ab", "filename": "src/libsyntax/feature_gate/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Flibsyntax%2Ffeature_gate%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Flibsyntax%2Ffeature_gate%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Faccepted.rs?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -251,6 +251,8 @@ declare_features! (\n     (accepted, non_exhaustive, \"1.40.0\", Some(44109), None),\n     /// Allows calling constructor functions in `const fn`.\n     (accepted, const_constructor, \"1.40.0\", Some(61456), None),\n+    /// Allows the use of `#[cfg(doctest)]`, set when rustdoc is collecting doctests.\n+    (accepted, cfg_doctest, \"1.40.0\", Some(62210), None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: accepted features"}, {"sha": "736a363bbfc0a020d94eae30a02377f82dc2f9d0", "filename": "src/libsyntax/feature_gate/active.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Factive.rs?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -506,9 +506,6 @@ declare_features! (\n     /// Allows `async || body` closures.\n     (active, async_closure, \"1.37.0\", Some(62290), None),\n \n-    /// Allows the use of `#[cfg(doctest)]`; set when rustdoc is collecting doctests.\n-    (active, cfg_doctest, \"1.37.0\", Some(62210), None),\n-\n     /// Allows `[x; N]` where `x` is a constant (RFC 2203).\n     (active, const_in_array_repeat_expressions, \"1.37.0\", Some(49147), None),\n "}, {"sha": "eb811c3e0ff9b590ba03e9dabf0d1f8729ee437f", "filename": "src/libsyntax/feature_gate/builtin_attrs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -31,7 +31,6 @@ const GATED_CFGS: &[(Symbol, Symbol, GateFn)] = &[\n     (sym::target_has_atomic, sym::cfg_target_has_atomic, cfg_fn!(cfg_target_has_atomic)),\n     (sym::target_has_atomic_load_store, sym::cfg_target_has_atomic, cfg_fn!(cfg_target_has_atomic)),\n     (sym::rustdoc, sym::doc_cfg, cfg_fn!(doc_cfg)),\n-    (sym::doctest, sym::cfg_doctest, cfg_fn!(cfg_doctest)),\n ];\n \n #[derive(Debug)]"}, {"sha": "587fe21f8fa738b629ab49927188e4b2b9599575", "filename": "src/test/rustdoc-ui/cfg-test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Ftest%2Frustdoc-ui%2Fcfg-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Ftest%2Frustdoc-ui%2Fcfg-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcfg-test.rs?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -5,8 +5,6 @@\n // Crates like core have doctests gated on `cfg(not(test))` so we need to make\n // sure `cfg(test)` is not active when running `rustdoc --test`.\n \n-#![feature(cfg_doctest)]\n-\n /// this doctest will be ignored:\n ///\n /// ```"}, {"sha": "474f13cfa9843d874421d079443393d25713e688", "filename": "src/test/rustdoc-ui/cfg-test.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Ftest%2Frustdoc-ui%2Fcfg-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Ftest%2Frustdoc-ui%2Fcfg-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcfg-test.stdout?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -1,7 +1,7 @@\n \n running 2 tests\n-test $DIR/cfg-test.rs - Bar (line 28) ... ok\n-test $DIR/cfg-test.rs - Foo (line 20) ... ok\n+test $DIR/cfg-test.rs - Bar (line 26) ... ok\n+test $DIR/cfg-test.rs - Foo (line 18) ... ok\n \n test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n "}, {"sha": "6a9d26a4bb78cbaabc2a6458a6ed71edca3eba1a", "filename": "src/test/rustdoc/cfg-doctest.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Ftest%2Frustdoc%2Fcfg-doctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a212960a4b47bb0879c75bc32de984d7626d5921/src%2Ftest%2Frustdoc%2Fcfg-doctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcfg-doctest.rs?ref=a212960a4b47bb0879c75bc32de984d7626d5921", "patch": "@@ -1,5 +1,3 @@\n-#![feature(cfg_doctest)]\n-\n // @!has cfg_doctest/struct.SomeStruct.html\n // @!has cfg_doctest/index.html '//a/@href' 'struct.SomeStruct.html'\n "}, {"sha": "308f68bd52a79de82bf4011938a1c8547fc33626", "filename": "src/test/ui/feature-gate/feature-gate-cfg_doctest.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.rs?ref=eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48", "patch": "@@ -1,4 +0,0 @@\n-#[cfg(doctest)] //~ ERROR\n-pub struct SomeStruct;\n-\n-fn main() {}"}, {"sha": "5ab45e01e50c5cc8aa3373a29679f5f9e083be0b", "filename": "src/test/ui/feature-gate/feature-gate-cfg_doctest.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.stderr?ref=eb5ef813f0d6e3fe8edd3abb046a18f5b1a8cc48", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: `cfg(doctest)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg_doctest.rs:1:7\n-   |\n-LL | #[cfg(doctest)]\n-   |       ^^^^^^^\n-   |\n-   = note: for more information, see https://github.com/rust-lang/rust/issues/62210\n-   = help: add `#![feature(cfg_doctest)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}]}