{"sha": "1c8cfa4310a12ed107635aa37457f759a805f0ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOGNmYTQzMTBhMTJlZDEwNzYzNWFhMzc0NTdmNzU5YTgwNWYwYWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-20T16:58:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-20T16:58:30Z"}, "message": "Merge #9652\n\n9652: Don't concat path in replace_qualified assist when they start with a keyword r=Veykril a=Veykril\n\nAlso keep the path if we can't find a path to the item instead of becoming non applicable.\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "2476769c7f44b68fca56fcfddfe5244b31ab9321", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2476769c7f44b68fca56fcfddfe5244b31ab9321"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c8cfa4310a12ed107635aa37457f759a805f0ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg9wC2CRBK7hj4Ov3rIwAAVpQIAJR8siiiSDVM8H9jw33AF3lK\njrlygA+276dcnTrAdG/3RTn2Pnh7PSrhY6rKA68GDWHUfbqNYFWfzI1xuZWUO/XC\nsaqZ4x459W1EsD4uKaIYFvggiUmym1aXh6/H5VzXjKM5CPFlJuvdG31MuLA21Giw\nxxL3F2BqAYDnARU1YlZd4kiGdP+FTVhxLJUpeaLNjhvPnwioAZ1ybNB3b65l2TAb\nVIZ2ghftgscPLIPbuesXGuNb79Jmax2Y69AM3njBRtTSXs80ILJkvM7U3/BEdz8G\nOHxQ337azBXqhnBPZkjhzrBKZJFgy/FwoonsbW/xYKYqFQmFfQugOVbdw57c4Hc=\n=oQf/\n-----END PGP SIGNATURE-----\n", "payload": "tree 2476769c7f44b68fca56fcfddfe5244b31ab9321\nparent 33972da625c06403b4845d28d226d8cef123e736\nparent 4f99c6467ba63543960fba954248b3535bbc6f85\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626800310 +0000\ncommitter GitHub <noreply@github.com> 1626800310 +0000\n\nMerge #9652\n\n9652: Don't concat path in replace_qualified assist when they start with a keyword r=Veykril a=Veykril\n\nAlso keep the path if we can't find a path to the item instead of becoming non applicable.\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c8cfa4310a12ed107635aa37457f759a805f0ad", "html_url": "https://github.com/rust-lang/rust/commit/1c8cfa4310a12ed107635aa37457f759a805f0ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c8cfa4310a12ed107635aa37457f759a805f0ad/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33972da625c06403b4845d28d226d8cef123e736", "url": "https://api.github.com/repos/rust-lang/rust/commits/33972da625c06403b4845d28d226d8cef123e736", "html_url": "https://github.com/rust-lang/rust/commit/33972da625c06403b4845d28d226d8cef123e736"}, {"sha": "4f99c6467ba63543960fba954248b3535bbc6f85", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f99c6467ba63543960fba954248b3535bbc6f85", "html_url": "https://github.com/rust-lang/rust/commit/4f99c6467ba63543960fba954248b3535bbc6f85"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "13367df807f33e6f732aec1640f4c81b1f3b1f32", "filename": "crates/ide_assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1c8cfa4310a12ed107635aa37457f759a805f0ad/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c8cfa4310a12ed107635aa37457f759a805f0ad/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=1c8cfa4310a12ed107635aa37457f759a805f0ad", "patch": "@@ -54,12 +54,23 @@ pub(crate) fn replace_qualified_name_with_use(\n         _ => return None,\n     };\n \n+    let starts_with_name_ref = !matches!(\n+        path.first_segment().and_then(|it| it.kind()),\n+        Some(\n+            ast::PathSegmentKind::CrateKw\n+                | ast::PathSegmentKind::SuperKw\n+                | ast::PathSegmentKind::SelfKw\n+        )\n+    );\n+    let path_to_qualifier = starts_with_name_ref\n+        .then(|| {\n+            ctx.sema.scope(path.syntax()).module().and_then(|m| {\n+                m.find_use_path_prefixed(ctx.sema.db, module, ctx.config.insert_use.prefix_kind)\n+            })\n+        })\n+        .flatten();\n+\n     let scope = ImportScope::find_insert_use_container_with_macros(path.syntax(), &ctx.sema)?;\n-    let path_to_qualifier = ctx.sema.scope(path.syntax()).module()?.find_use_path_prefixed(\n-        ctx.sema.db,\n-        module,\n-        ctx.config.insert_use.prefix_kind,\n-    )?;\n     let target = path.syntax().text_range();\n     acc.add(\n         AssistId(\"replace_qualified_name_with_use\", AssistKind::RefactorRewrite),\n@@ -74,7 +85,7 @@ pub(crate) fn replace_qualified_name_with_use(\n                 ImportScope::Block(it) => ImportScope::Block(builder.make_mut(it)),\n             };\n             // stick the found import in front of the to be replaced path\n-            let path = match mod_path_to_ast(&path_to_qualifier).qualifier() {\n+            let path = match path_to_qualifier.and_then(|it| mod_path_to_ast(&it).qualifier()) {\n                 Some(qualifier) => make::path_concat(qualifier, path),\n                 None => path,\n             };\n@@ -323,7 +334,7 @@ fn main() {\n             replace_qualified_name_with_use,\n             r\"\n pub mod foo {\n-    struct Foo;\n+    pub struct Foo;\n }\n \n mod bar {\n@@ -338,7 +349,7 @@ fn main() {\n use foo::Foo;\n \n pub mod foo {\n-    struct Foo;\n+    pub struct Foo;\n }\n \n mod bar {"}]}