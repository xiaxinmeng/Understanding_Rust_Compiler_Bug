{"sha": "2894df34092ce5fb9bfcf74a22a397b17dfaf983", "node_id": "C_kwDOAAsO6NoAKDI4OTRkZjM0MDkyY2U1ZmI5YmZjZjc0YTIyYTM5N2IxN2RmYWY5ODM", "commit": {"author": {"name": "alex-semenyuk", "email": "alexsemenyuk88@gmail.com", "date": "2022-07-15T06:15:31Z"}, "committer": {"name": "alex-semenyuk", "email": "alexsemenyuk88@gmail.com", "date": "2022-07-15T06:15:31Z"}, "message": "match_like_matches_macro does not trigger when one arm contains contains a block with only a bool literal", "tree": {"sha": "4c086bc4ee93a66ca7c13c299da39a4de94b24e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c086bc4ee93a66ca7c13c299da39a4de94b24e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2894df34092ce5fb9bfcf74a22a397b17dfaf983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2894df34092ce5fb9bfcf74a22a397b17dfaf983", "html_url": "https://github.com/rust-lang/rust/commit/2894df34092ce5fb9bfcf74a22a397b17dfaf983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2894df34092ce5fb9bfcf74a22a397b17dfaf983/comments", "author": {"login": "alex-semenyuk", "id": 5480441, "node_id": "MDQ6VXNlcjU0ODA0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5480441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-semenyuk", "html_url": "https://github.com/alex-semenyuk", "followers_url": "https://api.github.com/users/alex-semenyuk/followers", "following_url": "https://api.github.com/users/alex-semenyuk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-semenyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-semenyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-semenyuk/subscriptions", "organizations_url": "https://api.github.com/users/alex-semenyuk/orgs", "repos_url": "https://api.github.com/users/alex-semenyuk/repos", "events_url": "https://api.github.com/users/alex-semenyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-semenyuk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex-semenyuk", "id": 5480441, "node_id": "MDQ6VXNlcjU0ODA0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5480441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-semenyuk", "html_url": "https://github.com/alex-semenyuk", "followers_url": "https://api.github.com/users/alex-semenyuk/followers", "following_url": "https://api.github.com/users/alex-semenyuk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-semenyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-semenyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-semenyuk/subscriptions", "organizations_url": "https://api.github.com/users/alex-semenyuk/orgs", "repos_url": "https://api.github.com/users/alex-semenyuk/repos", "events_url": "https://api.github.com/users/alex-semenyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-semenyuk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f5a38f2d6fa3f241ab4ce79f9c927659da7f208", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5a38f2d6fa3f241ab4ce79f9c927659da7f208", "html_url": "https://github.com/rust-lang/rust/commit/0f5a38f2d6fa3f241ab4ce79f9c927659da7f208"}], "stats": {"total": 55, "additions": 43, "deletions": 12}, "files": [{"sha": "0da4833f1dfe0c9dfc5694874ab0cad257c30487", "filename": "clippy_lints/src/matches/match_like_matches.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2894df34092ce5fb9bfcf74a22a397b17dfaf983/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2894df34092ce5fb9bfcf74a22a397b17dfaf983/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs?ref=2894df34092ce5fb9bfcf74a22a397b17dfaf983", "patch": "@@ -81,14 +81,14 @@ where\n         if let Some((_, last_pat_opt, last_expr, _)) = iter.next_back();\n         let iter_without_last = iter.clone();\n         if let Some((first_attrs, _, first_expr, first_guard)) = iter.next();\n-        if let Some(b0) = find_bool_lit(&first_expr.kind, is_if_let);\n-        if let Some(b1) = find_bool_lit(&last_expr.kind, is_if_let);\n+        if let Some(b0) = find_bool_lit(&first_expr.kind);\n+        if let Some(b1) = find_bool_lit(&last_expr.kind);\n         if b0 != b1;\n         if first_guard.is_none() || iter.len() == 0;\n         if first_attrs.is_empty();\n         if iter\n             .all(|arm| {\n-                find_bool_lit(&arm.2.kind, is_if_let).map_or(false, |b| b == b0) && arm.3.is_none() && arm.0.is_empty()\n+                find_bool_lit(&arm.2.kind).map_or(false, |b| b == b0) && arm.3.is_none() && arm.0.is_empty()\n             });\n         then {\n             if let Some(last_pat) = last_pat_opt {\n@@ -144,7 +144,7 @@ where\n }\n \n /// Extract a `bool` or `{ bool }`\n-fn find_bool_lit(ex: &ExprKind<'_>, is_if_let: bool) -> Option<bool> {\n+fn find_bool_lit(ex: &ExprKind<'_>) -> Option<bool> {\n     match ex {\n         ExprKind::Lit(Spanned {\n             node: LitKind::Bool(b), ..\n@@ -156,7 +156,7 @@ fn find_bool_lit(ex: &ExprKind<'_>, is_if_let: bool) -> Option<bool> {\n                 ..\n             },\n             _,\n-        ) if is_if_let => {\n+        ) => {\n             if let ExprKind::Lit(Spanned {\n                 node: LitKind::Bool(b), ..\n             }) = exp.kind"}, {"sha": "1ccbfda64b73a5240ae68929f83c37d07cd66c05", "filename": "tests/ui/match_expr_like_matches_macro.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2894df34092ce5fb9bfcf74a22a397b17dfaf983/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2894df34092ce5fb9bfcf74a22a397b17dfaf983/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed?ref=2894df34092ce5fb9bfcf74a22a397b17dfaf983", "patch": "@@ -45,6 +45,12 @@ fn main() {\n         // lint\n         let _ans = matches!(x, E::A(_) | E::B(_));\n     }\n+    {\n+        // lint\n+        // skip rustfmt to prevent removing block for first pattern\n+        #[rustfmt::skip]\n+        let _ans = matches!(x, E::A(_) | E::B(_));\n+    }\n     {\n         // lint\n         let _ans = !matches!(x, E::B(_) | E::C);"}, {"sha": "a49991f594174473c51cc41609d3f808b1d80768", "filename": "tests/ui/match_expr_like_matches_macro.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2894df34092ce5fb9bfcf74a22a397b17dfaf983/tests%2Fui%2Fmatch_expr_like_matches_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2894df34092ce5fb9bfcf74a22a397b17dfaf983/tests%2Fui%2Fmatch_expr_like_matches_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.rs?ref=2894df34092ce5fb9bfcf74a22a397b17dfaf983", "patch": "@@ -61,6 +61,18 @@ fn main() {\n             _ => false,\n         };\n     }\n+    {\n+        // lint\n+        // skip rustfmt to prevent removing block for first pattern\n+        #[rustfmt::skip]\n+        let _ans = match x {\n+            E::A(_) => {\n+                true\n+            }\n+            E::B(_) => true,\n+            _ => false,\n+        };\n+    }\n     {\n         // lint\n         let _ans = match x {"}, {"sha": "e94555e27448b0d131c6e34d6d0cb5bdac330b4e", "filename": "tests/ui/match_expr_like_matches_macro.stderr", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2894df34092ce5fb9bfcf74a22a397b17dfaf983/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2894df34092ce5fb9bfcf74a22a397b17dfaf983/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr?ref=2894df34092ce5fb9bfcf74a22a397b17dfaf983", "patch": "@@ -60,7 +60,20 @@ LL | |         };\n    | |_________^ help: try this: `matches!(x, E::A(_) | E::B(_))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:66:20\n+  --> $DIR/match_expr_like_matches_macro.rs:68:20\n+   |\n+LL |           let _ans = match x {\n+   |  ____________________^\n+LL | |             E::A(_) => {\n+LL | |                 true\n+LL | |             }\n+LL | |             E::B(_) => true,\n+LL | |             _ => false,\n+LL | |         };\n+   | |_________^ help: try this: `matches!(x, E::A(_) | E::B(_))`\n+\n+error: match expression looks like `matches!` macro\n+  --> $DIR/match_expr_like_matches_macro.rs:78:20\n    |\n LL |           let _ans = match x {\n    |  ____________________^\n@@ -71,7 +84,7 @@ LL | |         };\n    | |_________^ help: try this: `!matches!(x, E::B(_) | E::C)`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:126:18\n+  --> $DIR/match_expr_like_matches_macro.rs:138:18\n    |\n LL |           let _z = match &z {\n    |  __________________^\n@@ -81,7 +94,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(z, Some(3))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:135:18\n+  --> $DIR/match_expr_like_matches_macro.rs:147:18\n    |\n LL |           let _z = match &z {\n    |  __________________^\n@@ -91,7 +104,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(&z, Some(3))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:152:21\n+  --> $DIR/match_expr_like_matches_macro.rs:164:21\n    |\n LL |               let _ = match &z {\n    |  _____________________^\n@@ -101,7 +114,7 @@ LL | |             };\n    | |_____________^ help: try this: `matches!(&z, AnEnum::X)`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:166:20\n+  --> $DIR/match_expr_like_matches_macro.rs:178:20\n    |\n LL |           let _res = match &val {\n    |  ____________________^\n@@ -111,7 +124,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(&val, &Some(ref _a))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:178:20\n+  --> $DIR/match_expr_like_matches_macro.rs:190:20\n    |\n LL |           let _res = match &val {\n    |  ____________________^\n@@ -120,5 +133,5 @@ LL | |             _ => false,\n LL | |         };\n    | |_________^ help: try this: `matches!(&val, &Some(ref _a))`\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 13 previous errors\n "}]}