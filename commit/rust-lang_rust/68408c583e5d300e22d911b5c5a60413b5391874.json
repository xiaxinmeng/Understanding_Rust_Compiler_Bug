{"sha": "68408c583e5d300e22d911b5c5a60413b5391874", "node_id": "C_kwDOAAsO6NoAKDY4NDA4YzU4M2U1ZDMwMGUyMmQ5MTFiNWM1YTYwNDEzYjUzOTE4NzQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-30T07:47:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-30T07:47:55Z"}, "message": "Auto merge of #9486 - kraktus:lazy_eval, r=dswij\n\n[`unnecessary_lazy_eval`] Do not lint in external macros\n\nfix https://github.com/rust-lang/rust-clippy/issues/9485, fix https://github.com/rust-lang/rust-clippy/issues/9439\n\nI didn't find a way to add a test since fps occur due to an external crate.\n\nchangelog: [`unnecessary_lazy_eval`] Do not lint in external macros", "tree": {"sha": "aad667c118ca1ca436ae76cbc1a6720f7d335743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aad667c118ca1ca436ae76cbc1a6720f7d335743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68408c583e5d300e22d911b5c5a60413b5391874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68408c583e5d300e22d911b5c5a60413b5391874", "html_url": "https://github.com/rust-lang/rust/commit/68408c583e5d300e22d911b5c5a60413b5391874", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68408c583e5d300e22d911b5c5a60413b5391874/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e43f5a17d4d9263616ae6fc28a7c5353e80d8a12", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43f5a17d4d9263616ae6fc28a7c5353e80d8a12", "html_url": "https://github.com/rust-lang/rust/commit/e43f5a17d4d9263616ae6fc28a7c5353e80d8a12"}, {"sha": "6ec7759c3bff136c1d39bbe0bc8a68ac8b438a55", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ec7759c3bff136c1d39bbe0bc8a68ac8b438a55", "html_url": "https://github.com/rust-lang/rust/commit/6ec7759c3bff136c1d39bbe0bc8a68ac8b438a55"}], "stats": {"total": 94, "additions": 59, "deletions": 35}, "files": [{"sha": "0e73459ad65f7a258e91b6ee8ccd5ff50d7d4ded", "filename": "clippy_lints/src/methods/unnecessary_lazy_eval.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/68408c583e5d300e22d911b5c5a60413b5391874/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68408c583e5d300e22d911b5c5a60413b5391874/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs?ref=68408c583e5d300e22d911b5c5a60413b5391874", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n-use clippy_utils::{eager_or_lazy, usage};\n+use clippy_utils::{eager_or_lazy, is_from_proc_macro, usage};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n@@ -18,6 +18,10 @@ pub(super) fn check<'tcx>(\n     arg: &'tcx hir::Expr<'_>,\n     simplify_using: &str,\n ) {\n+    if is_from_proc_macro(cx, expr) {\n+        return;\n+    }\n+\n     let is_option = is_type_diagnostic_item(cx, cx.typeck_results().expr_ty(recv), sym::Option);\n     let is_result = is_type_diagnostic_item(cx, cx.typeck_results().expr_ty(recv), sym::Result);\n     let is_bool = cx.typeck_results().expr_ty(recv).is_bool();"}, {"sha": "ce4a82e021745d45e532710d2c93cd82be091988", "filename": "tests/ui/unnecessary_lazy_eval.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68408c583e5d300e22d911b5c5a60413b5391874/tests%2Fui%2Funnecessary_lazy_eval.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/68408c583e5d300e22d911b5c5a60413b5391874/tests%2Fui%2Funnecessary_lazy_eval.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval.fixed?ref=68408c583e5d300e22d911b5c5a60413b5391874", "patch": "@@ -1,9 +1,13 @@\n // run-rustfix\n+// aux-build: proc_macro_with_span.rs\n #![warn(clippy::unnecessary_lazy_evaluations)]\n #![allow(clippy::redundant_closure)]\n #![allow(clippy::bind_instead_of_map)]\n #![allow(clippy::map_identity)]\n \n+extern crate proc_macro_with_span;\n+use proc_macro_with_span::with_span;\n+\n struct Deep(Option<usize>);\n \n #[derive(Copy, Clone)]\n@@ -141,3 +145,9 @@ fn main() {\n     let _: Result<usize, usize> = res.and_then(|x| Err(x));\n     let _: Result<usize, usize> = res.or_else(|err| Ok(err));\n }\n+\n+#[allow(unused)]\n+fn issue9485() {\n+    // should not lint, is in proc macro\n+    with_span!(span Some(42).unwrap_or_else(|| 2););\n+}"}, {"sha": "59cdf66285463e3e69dcb750cdcb194ce0ca7066", "filename": "tests/ui/unnecessary_lazy_eval.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68408c583e5d300e22d911b5c5a60413b5391874/tests%2Fui%2Funnecessary_lazy_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68408c583e5d300e22d911b5c5a60413b5391874/tests%2Fui%2Funnecessary_lazy_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval.rs?ref=68408c583e5d300e22d911b5c5a60413b5391874", "patch": "@@ -1,9 +1,13 @@\n // run-rustfix\n+// aux-build: proc_macro_with_span.rs\n #![warn(clippy::unnecessary_lazy_evaluations)]\n #![allow(clippy::redundant_closure)]\n #![allow(clippy::bind_instead_of_map)]\n #![allow(clippy::map_identity)]\n \n+extern crate proc_macro_with_span;\n+use proc_macro_with_span::with_span;\n+\n struct Deep(Option<usize>);\n \n #[derive(Copy, Clone)]\n@@ -141,3 +145,9 @@ fn main() {\n     let _: Result<usize, usize> = res.and_then(|x| Err(x));\n     let _: Result<usize, usize> = res.or_else(|err| Ok(err));\n }\n+\n+#[allow(unused)]\n+fn issue9485() {\n+    // should not lint, is in proc macro\n+    with_span!(span Some(42).unwrap_or_else(|| 2););\n+}"}, {"sha": "8a9ece4aa7e54548a4e841688cff2b2864713de6", "filename": "tests/ui/unnecessary_lazy_eval.stderr", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/68408c583e5d300e22d911b5c5a60413b5391874/tests%2Fui%2Funnecessary_lazy_eval.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68408c583e5d300e22d911b5c5a60413b5391874/tests%2Fui%2Funnecessary_lazy_eval.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval.stderr?ref=68408c583e5d300e22d911b5c5a60413b5391874", "patch": "@@ -1,5 +1,5 @@\n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:44:13\n+  --> $DIR/unnecessary_lazy_eval.rs:48:13\n    |\n LL |     let _ = opt.unwrap_or_else(|| 2);\n    |             ^^^^--------------------\n@@ -9,263 +9,263 @@ LL |     let _ = opt.unwrap_or_else(|| 2);\n    = note: `-D clippy::unnecessary-lazy-evaluations` implied by `-D warnings`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:45:13\n+  --> $DIR/unnecessary_lazy_eval.rs:49:13\n    |\n LL |     let _ = opt.unwrap_or_else(|| astronomers_pi);\n    |             ^^^^---------------------------------\n    |                 |\n    |                 help: use `unwrap_or(..)` instead: `unwrap_or(astronomers_pi)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:46:13\n+  --> $DIR/unnecessary_lazy_eval.rs:50:13\n    |\n LL |     let _ = opt.unwrap_or_else(|| ext_str.some_field);\n    |             ^^^^-------------------------------------\n    |                 |\n    |                 help: use `unwrap_or(..)` instead: `unwrap_or(ext_str.some_field)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:48:13\n+  --> $DIR/unnecessary_lazy_eval.rs:52:13\n    |\n LL |     let _ = opt.and_then(|_| ext_opt);\n    |             ^^^^---------------------\n    |                 |\n    |                 help: use `and(..)` instead: `and(ext_opt)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:49:13\n+  --> $DIR/unnecessary_lazy_eval.rs:53:13\n    |\n LL |     let _ = opt.or_else(|| ext_opt);\n    |             ^^^^-------------------\n    |                 |\n    |                 help: use `or(..)` instead: `or(ext_opt)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:50:13\n+  --> $DIR/unnecessary_lazy_eval.rs:54:13\n    |\n LL |     let _ = opt.or_else(|| None);\n    |             ^^^^----------------\n    |                 |\n    |                 help: use `or(..)` instead: `or(None)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:51:13\n+  --> $DIR/unnecessary_lazy_eval.rs:55:13\n    |\n LL |     let _ = opt.get_or_insert_with(|| 2);\n    |             ^^^^------------------------\n    |                 |\n    |                 help: use `get_or_insert(..)` instead: `get_or_insert(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:52:13\n+  --> $DIR/unnecessary_lazy_eval.rs:56:13\n    |\n LL |     let _ = opt.ok_or_else(|| 2);\n    |             ^^^^----------------\n    |                 |\n    |                 help: use `ok_or(..)` instead: `ok_or(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:53:13\n+  --> $DIR/unnecessary_lazy_eval.rs:57:13\n    |\n LL |     let _ = nested_tuple_opt.unwrap_or_else(|| Some((1, 2)));\n    |             ^^^^^^^^^^^^^^^^^-------------------------------\n    |                              |\n    |                              help: use `unwrap_or(..)` instead: `unwrap_or(Some((1, 2)))`\n \n error: unnecessary closure used with `bool::then`\n-  --> $DIR/unnecessary_lazy_eval.rs:54:13\n+  --> $DIR/unnecessary_lazy_eval.rs:58:13\n    |\n LL |     let _ = cond.then(|| astronomers_pi);\n    |             ^^^^^-----------------------\n    |                  |\n    |                  help: use `then_some(..)` instead: `then_some(astronomers_pi)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:57:13\n+  --> $DIR/unnecessary_lazy_eval.rs:61:13\n    |\n LL |     let _ = Some(10).unwrap_or_else(|| 2);\n    |             ^^^^^^^^^--------------------\n    |                      |\n    |                      help: use `unwrap_or(..)` instead: `unwrap_or(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:58:13\n+  --> $DIR/unnecessary_lazy_eval.rs:62:13\n    |\n LL |     let _ = Some(10).and_then(|_| ext_opt);\n    |             ^^^^^^^^^---------------------\n    |                      |\n    |                      help: use `and(..)` instead: `and(ext_opt)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:59:28\n+  --> $DIR/unnecessary_lazy_eval.rs:63:28\n    |\n LL |     let _: Option<usize> = None.or_else(|| ext_opt);\n    |                            ^^^^^-------------------\n    |                                 |\n    |                                 help: use `or(..)` instead: `or(ext_opt)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:60:13\n+  --> $DIR/unnecessary_lazy_eval.rs:64:13\n    |\n LL |     let _ = None.get_or_insert_with(|| 2);\n    |             ^^^^^------------------------\n    |                  |\n    |                  help: use `get_or_insert(..)` instead: `get_or_insert(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:61:35\n+  --> $DIR/unnecessary_lazy_eval.rs:65:35\n    |\n LL |     let _: Result<usize, usize> = None.ok_or_else(|| 2);\n    |                                   ^^^^^----------------\n    |                                        |\n    |                                        help: use `ok_or(..)` instead: `ok_or(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:62:28\n+  --> $DIR/unnecessary_lazy_eval.rs:66:28\n    |\n LL |     let _: Option<usize> = None.or_else(|| None);\n    |                            ^^^^^----------------\n    |                                 |\n    |                                 help: use `or(..)` instead: `or(None)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:65:13\n+  --> $DIR/unnecessary_lazy_eval.rs:69:13\n    |\n LL |     let _ = deep.0.unwrap_or_else(|| 2);\n    |             ^^^^^^^--------------------\n    |                    |\n    |                    help: use `unwrap_or(..)` instead: `unwrap_or(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:66:13\n+  --> $DIR/unnecessary_lazy_eval.rs:70:13\n    |\n LL |     let _ = deep.0.and_then(|_| ext_opt);\n    |             ^^^^^^^---------------------\n    |                    |\n    |                    help: use `and(..)` instead: `and(ext_opt)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:67:13\n+  --> $DIR/unnecessary_lazy_eval.rs:71:13\n    |\n LL |     let _ = deep.0.or_else(|| None);\n    |             ^^^^^^^----------------\n    |                    |\n    |                    help: use `or(..)` instead: `or(None)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:68:13\n+  --> $DIR/unnecessary_lazy_eval.rs:72:13\n    |\n LL |     let _ = deep.0.get_or_insert_with(|| 2);\n    |             ^^^^^^^------------------------\n    |                    |\n    |                    help: use `get_or_insert(..)` instead: `get_or_insert(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:69:13\n+  --> $DIR/unnecessary_lazy_eval.rs:73:13\n    |\n LL |     let _ = deep.0.ok_or_else(|| 2);\n    |             ^^^^^^^----------------\n    |                    |\n    |                    help: use `ok_or(..)` instead: `ok_or(2)`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:92:28\n+  --> $DIR/unnecessary_lazy_eval.rs:96:28\n    |\n LL |     let _: Option<usize> = None.or_else(|| Some(3));\n    |                            ^^^^^-------------------\n    |                                 |\n    |                                 help: use `or(..)` instead: `or(Some(3))`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:93:13\n+  --> $DIR/unnecessary_lazy_eval.rs:97:13\n    |\n LL |     let _ = deep.0.or_else(|| Some(3));\n    |             ^^^^^^^-------------------\n    |                    |\n    |                    help: use `or(..)` instead: `or(Some(3))`\n \n error: unnecessary closure used to substitute value for `Option::None`\n-  --> $DIR/unnecessary_lazy_eval.rs:94:13\n+  --> $DIR/unnecessary_lazy_eval.rs:98:13\n    |\n LL |     let _ = opt.or_else(|| Some(3));\n    |             ^^^^-------------------\n    |                 |\n    |                 help: use `or(..)` instead: `or(Some(3))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:100:13\n+  --> $DIR/unnecessary_lazy_eval.rs:104:13\n    |\n LL |     let _ = res2.unwrap_or_else(|_| 2);\n    |             ^^^^^---------------------\n    |                  |\n    |                  help: use `unwrap_or(..)` instead: `unwrap_or(2)`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:101:13\n+  --> $DIR/unnecessary_lazy_eval.rs:105:13\n    |\n LL |     let _ = res2.unwrap_or_else(|_| astronomers_pi);\n    |             ^^^^^----------------------------------\n    |                  |\n    |                  help: use `unwrap_or(..)` instead: `unwrap_or(astronomers_pi)`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:102:13\n+  --> $DIR/unnecessary_lazy_eval.rs:106:13\n    |\n LL |     let _ = res2.unwrap_or_else(|_| ext_str.some_field);\n    |             ^^^^^--------------------------------------\n    |                  |\n    |                  help: use `unwrap_or(..)` instead: `unwrap_or(ext_str.some_field)`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:124:35\n+  --> $DIR/unnecessary_lazy_eval.rs:128:35\n    |\n LL |     let _: Result<usize, usize> = res.and_then(|_| Err(2));\n    |                                   ^^^^--------------------\n    |                                       |\n    |                                       help: use `and(..)` instead: `and(Err(2))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:125:35\n+  --> $DIR/unnecessary_lazy_eval.rs:129:35\n    |\n LL |     let _: Result<usize, usize> = res.and_then(|_| Err(astronomers_pi));\n    |                                   ^^^^---------------------------------\n    |                                       |\n    |                                       help: use `and(..)` instead: `and(Err(astronomers_pi))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:126:35\n+  --> $DIR/unnecessary_lazy_eval.rs:130:35\n    |\n LL |     let _: Result<usize, usize> = res.and_then(|_| Err(ext_str.some_field));\n    |                                   ^^^^-------------------------------------\n    |                                       |\n    |                                       help: use `and(..)` instead: `and(Err(ext_str.some_field))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:128:35\n+  --> $DIR/unnecessary_lazy_eval.rs:132:35\n    |\n LL |     let _: Result<usize, usize> = res.or_else(|_| Ok(2));\n    |                                   ^^^^------------------\n    |                                       |\n    |                                       help: use `or(..)` instead: `or(Ok(2))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:129:35\n+  --> $DIR/unnecessary_lazy_eval.rs:133:35\n    |\n LL |     let _: Result<usize, usize> = res.or_else(|_| Ok(astronomers_pi));\n    |                                   ^^^^-------------------------------\n    |                                       |\n    |                                       help: use `or(..)` instead: `or(Ok(astronomers_pi))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:130:35\n+  --> $DIR/unnecessary_lazy_eval.rs:134:35\n    |\n LL |     let _: Result<usize, usize> = res.or_else(|_| Ok(ext_str.some_field));\n    |                                   ^^^^-----------------------------------\n    |                                       |\n    |                                       help: use `or(..)` instead: `or(Ok(ext_str.some_field))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:131:35\n+  --> $DIR/unnecessary_lazy_eval.rs:135:35\n    |\n LL |       let _: Result<usize, usize> = res.\n    |  ___________________________________^"}]}