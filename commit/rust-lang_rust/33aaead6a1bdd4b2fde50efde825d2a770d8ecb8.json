{"sha": "33aaead6a1bdd4b2fde50efde825d2a770d8ecb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYWFlYWQ2YTFiZGQ0YjJmZGU1MGVmZGU4MjVkMmE3NzBkOGVjYjg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-23T21:13:48Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-23T21:13:48Z"}, "message": "Improve code readability", "tree": {"sha": "2a560717aa9bdcd007ec4ef1a4fb3f87577d293f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a560717aa9bdcd007ec4ef1a4fb3f87577d293f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8", "html_url": "https://github.com/rust-lang/rust/commit/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c59e64abf99f57baca9493e1ffe66844074e677", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c59e64abf99f57baca9493e1ffe66844074e677", "html_url": "https://github.com/rust-lang/rust/commit/3c59e64abf99f57baca9493e1ffe66844074e677"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "f9c63186544a4d3f1275ee3de0d5dcc680c13be4", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=33aaead6a1bdd4b2fde50efde825d2a770d8ecb8", "patch": "@@ -624,12 +624,10 @@ crate fn record_extern_trait(cx: &mut DocContext<'_>, did: DefId) {\n     debug!(\"record_extern_trait: {:?}\", did);\n     let trait_ = build_external_trait(cx, did);\n \n-    cx.external_traits.borrow_mut().insert(\n-        did,\n-        clean::TraitWithExtraInfo {\n-            trait_,\n-            is_spotlight: clean::utils::has_doc_flag(cx.tcx.get_attrs(did), sym::spotlight),\n-        },\n-    );\n+    let trait_ = clean::TraitWithExtraInfo {\n+        trait_,\n+        is_spotlight: clean::utils::has_doc_flag(cx.tcx.get_attrs(did), sym::spotlight),\n+    };\n+    cx.external_traits.borrow_mut().insert(did, trait_);\n     cx.active_extern_traits.remove(&did);\n }"}, {"sha": "a0a2b785353686a71190ee471e64241163ecf6cf", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=33aaead6a1bdd4b2fde50efde825d2a770d8ecb8", "patch": "@@ -13,7 +13,7 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_middle::mir::interpret::ConstValue;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, Attributes, DefIdTree, Ty, TyCtxt};\n+use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n use rustc_span::symbol::{kw, sym, Symbol};\n use std::mem;\n \n@@ -530,7 +530,7 @@ crate fn find_nearest_parent_module(tcx: TyCtxt<'_>, def_id: DefId) -> Option<De\n ///\n /// This function exists because it runs on `hir::Attributes` whereas the other is a\n /// `clean::Attributes` method.\n-crate fn has_doc_flag(attrs: Attributes<'_>, flag: Symbol) -> bool {\n+crate fn has_doc_flag(attrs: ty::Attributes<'_>, flag: Symbol) -> bool {\n     attrs.iter().any(|attr| {\n         attr.has_name(sym::doc)\n             && attr.meta_item_list().map_or(false, |l| rustc_attr::list_contains_name(&l, flag))"}, {"sha": "f0b3159f737a6ec2aa4f2914a1c7d955c4a6ec93", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33aaead6a1bdd4b2fde50efde825d2a770d8ecb8/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=33aaead6a1bdd4b2fde50efde825d2a770d8ecb8", "patch": "@@ -30,7 +30,7 @@ use std::{cell::RefCell, collections::hash_map::Entry};\n \n use crate::clean;\n use crate::clean::inline::build_external_trait;\n-use crate::clean::{AttributesExt, MAX_DEF_IDX};\n+use crate::clean::{AttributesExt, TraitWithExtraInfo, MAX_DEF_IDX};\n use crate::config::{Options as RustdocOptions, RenderOptions};\n use crate::config::{OutputFormat, RenderInfo};\n use crate::formats::cache::Cache;\n@@ -538,7 +538,10 @@ crate fn run_global_ctxt(\n     if let Some(sized_trait_did) = ctxt.tcx.lang_items().sized_trait() {\n         let mut sized_trait = build_external_trait(&mut ctxt, sized_trait_did);\n         sized_trait.is_auto = true;\n-        ctxt.external_traits.borrow_mut().insert(sized_trait_did, sized_trait);\n+        ctxt.external_traits.borrow_mut().insert(\n+            sized_trait_did,\n+            TraitWithExtraInfo { trait_: sized_trait, is_spotlight: false },\n+        );\n     }\n \n     debug!(\"crate: {:?}\", tcx.hir().krate());"}]}