{"sha": "e0395341f7e38e804646bce23809b407564e84db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMzk1MzQxZjdlMzhlODA0NjQ2YmNlMjM4MDliNDA3NTY0ZTg0ZGI=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-12T04:45:28Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-12T07:50:26Z"}, "message": "replace the hand-written binary search with the library one", "tree": {"sha": "be63fb2c68b37c2e17f0b5d3a082e7cb63adb39a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be63fb2c68b37c2e17f0b5d3a082e7cb63adb39a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0395341f7e38e804646bce23809b407564e84db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0395341f7e38e804646bce23809b407564e84db", "html_url": "https://github.com/rust-lang/rust/commit/e0395341f7e38e804646bce23809b407564e84db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0395341f7e38e804646bce23809b407564e84db/comments", "author": null, "committer": null, "parents": [{"sha": "4b42e919d640f7c714a7e87c91b4f3a9089552d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b42e919d640f7c714a7e87c91b4f3a9089552d0", "html_url": "https://github.com/rust-lang/rust/commit/4b42e919d640f7c714a7e87c91b4f3a9089552d0"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "07c301f524eaf13fd5f6e1887b6929ee1758c6c6", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e0395341f7e38e804646bce23809b407564e84db/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0395341f7e38e804646bce23809b407564e84db/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=e0395341f7e38e804646bce23809b407564e84db", "patch": "@@ -882,21 +882,13 @@ impl SourceMap {\n         let files = &files.source_files;\n         let count = files.len();\n \n-        // Binary search for the `SourceFile`.\n-        let mut a = 0;\n-        let mut b = count;\n-        while b - a > 1 {\n-            let m = (a + b) / 2;\n-            if files[m].start_pos > pos {\n-                b = m;\n-            } else {\n-                a = m;\n-            }\n-        }\n+        // (p - 1) below will not underflow, this follows previous implementation's assumption.\n+        assert!(count >= 1);\n+        let ret = files.binary_search_by_key(&pos, |key| key.start_pos).unwrap_or_else(|p| p - 1);\n \n-        assert!(a < count, \"position {} does not resolve to a source location\", pos.to_usize());\n+        assert!(ret < count, \"position {} does not resolve to a source location\", pos.to_usize());\n \n-        return a;\n+        return ret;\n     }\n \n     pub fn count_lines(&self) -> usize {"}]}