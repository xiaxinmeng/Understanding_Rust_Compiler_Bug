{"sha": "ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNTcwMmZjNTgxYTlkNGQ3MmU1M2U4ZDdhMmNlNDQ3NWZhOGEwNjQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-03-20T21:49:22Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2017-03-21T20:18:36Z"}, "message": "Fix invalid linking in iter docs", "tree": {"sha": "e0b0e56d797a2e7d3baff95a76b980fc951f46af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0b0e56d797a2e7d3baff95a76b980fc951f46af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064", "html_url": "https://github.com/rust-lang/rust/commit/ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58c701f5c7dc26d9b55c631006ece52abe1ddce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/58c701f5c7dc26d9b55c631006ece52abe1ddce2", "html_url": "https://github.com/rust-lang/rust/commit/58c701f5c7dc26d9b55c631006ece52abe1ddce2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "618edf48abd04370a43073368ac33bedb3129754", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=ed5702fc581a9d4d72e53e8d7a2ce4475fa8a064", "patch": "@@ -518,13 +518,13 @@ pub trait Iterator {\n \n     /// Creates an iterator that both filters and maps.\n     ///\n-    /// The closure must return an [`Option<T>`]. `filter_map()` creates an\n+    /// The closure must return an [`Option<T>`]. `filter_map` creates an\n     /// iterator which calls this closure on each element. If the closure\n     /// returns [`Some(element)`][`Some`], then that element is returned. If the\n     /// closure returns [`None`], it will try again, and call the closure on the\n     /// next element, seeing if it will return [`Some`].\n     ///\n-    /// Why `filter_map()` and not just [`filter()`].[`map`]? The key is in this\n+    /// Why `filter_map` and not just [`filter`].[`map`]? The key is in this\n     /// part:\n     ///\n     /// [`filter`]: #method.filter\n@@ -534,7 +534,7 @@ pub trait Iterator {\n     ///\n     /// In other words, it removes the [`Option<T>`] layer automatically. If your\n     /// mapping is already returning an [`Option<T>`] and you want to skip over\n-    /// [`None`]s, then `filter_map()` is much, much nicer to use.\n+    /// [`None`]s, then `filter_map` is much, much nicer to use.\n     ///\n     /// # Examples\n     ///"}]}