{"sha": "15ab586b495376bd8e1a591e8a80e6f976251eb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YWI1ODZiNDk1Mzc2YmQ4ZTFhNTkxZThhODBlNmY5NzYyNTFlYjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-14T21:29:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-14T21:29:50Z"}, "message": "Rollup merge of #70657 - lcnr:unused_delims_try, r=Centril\n\nAllow `try`-blocks in places where an open delim is expected\n\nCloses #70490\nCloses #56828\n\nr? @Centril", "tree": {"sha": "a61186209e34231edb73c770602c87f0d8da124b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a61186209e34231edb73c770602c87f0d8da124b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15ab586b495376bd8e1a591e8a80e6f976251eb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJelitOCRBK7hj4Ov3rIwAAdHIIAHpM8oYvV1P97w1oJqm6hYrM\nAC+uTVGpdT3WStPBYJaNdXolJppmLlP89wNulwvcXAduqj8MQkqrN0unffclkIwS\nnXLCsOuG2va4F4uM9wHkJh1a8rmHCBiKqmhjYEQ+7a5zVNR1ozlbrKmm5Gwmu2fw\nECQIDvDRH/6o46FTnmuMuGvq+hDaoNVNN1MO1RGfMUP2fK1BKTS5I/3EziQJJzmV\n6c+8ZZRbOriFfb7BorAOg01DQOELl/jsnjMZFh0x5JXJrsWsu32qO9ElvU84a2Iu\n67Duf6fQm3VxxDbD8E4DwRuL/Af8LhlvJsx2ktRtucnY5/5A1x2x9C3mG9Nmh8Y=\n=xKZN\n-----END PGP SIGNATURE-----\n", "payload": "tree a61186209e34231edb73c770602c87f0d8da124b\nparent edc02580e4e80476ac1ded2cc1008eaf8b8400e6\nparent 81a3cd7278f6117401b6b441485154e6ecf2f8c9\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586899790 +0200\ncommitter GitHub <noreply@github.com> 1586899790 +0200\n\nRollup merge of #70657 - lcnr:unused_delims_try, r=Centril\n\nAllow `try`-blocks in places where an open delim is expected\n\nCloses #70490\nCloses #56828\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15ab586b495376bd8e1a591e8a80e6f976251eb5", "html_url": "https://github.com/rust-lang/rust/commit/15ab586b495376bd8e1a591e8a80e6f976251eb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15ab586b495376bd8e1a591e8a80e6f976251eb5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edc02580e4e80476ac1ded2cc1008eaf8b8400e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/edc02580e4e80476ac1ded2cc1008eaf8b8400e6", "html_url": "https://github.com/rust-lang/rust/commit/edc02580e4e80476ac1ded2cc1008eaf8b8400e6"}, {"sha": "81a3cd7278f6117401b6b441485154e6ecf2f8c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/81a3cd7278f6117401b6b441485154e6ecf2f8c9", "html_url": "https://github.com/rust-lang/rust/commit/81a3cd7278f6117401b6b441485154e6ecf2f8c9"}], "stats": {"total": 110, "additions": 89, "deletions": 21}, "files": [{"sha": "3e1e9cc70aa11216e1013868885363e24a112c6b", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=15ab586b495376bd8e1a591e8a80e6f976251eb5", "patch": "@@ -384,7 +384,7 @@ trait UnusedDelimLint {\n     fn is_expr_delims_necessary(inner: &ast::Expr, followed_by_block: bool) -> bool {\n         followed_by_block\n             && match inner.kind {\n-                ast::ExprKind::Ret(_) | ast::ExprKind::Break(..) => true,\n+                ExprKind::Ret(_) | ExprKind::Break(..) => true,\n                 _ => parser::contains_exterior_struct_lit(&inner),\n             }\n     }"}, {"sha": "4e3c5fa63de2cbb2f715585290c59576714e877c", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=15ab586b495376bd8e1a591e8a80e6f976251eb5", "patch": "@@ -1846,11 +1846,9 @@ impl<'a> Parser<'a> {\n     }\n \n     fn is_try_block(&self) -> bool {\n-        self.token.is_keyword(kw::Try) &&\n-        self.look_ahead(1, |t| *t == token::OpenDelim(token::Brace)) &&\n-        self.token.uninterpolated_span().rust_2018() &&\n-        // Prevent `while try {} {}`, `if try {} {} else {}`, etc.\n-        !self.restrictions.contains(Restrictions::NO_STRUCT_LITERAL)\n+        self.token.is_keyword(kw::Try)\n+            && self.look_ahead(1, |t| *t == token::OpenDelim(token::Brace))\n+            && self.token.uninterpolated_span().rust_2018()\n     }\n \n     /// Parses an `async move? {...}` expression."}, {"sha": "cd0b967e79d07bcca6c1a8aca9fed4506aba433d", "filename": "src/test/ui/try-block/try-block-in-match.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs?ref=15ab586b495376bd8e1a591e8a80e6f976251eb5", "patch": "@@ -1,7 +1,11 @@\n+// run-pass\n // compile-flags: --edition 2018\n \n #![feature(try_blocks)]\n \n fn main() {\n-    match try { false } { _ => {} } //~ ERROR expected expression, found reserved keyword `try`\n+    match try { } {\n+        Err(()) => (),\n+        Ok(()) => (),\n+    }\n }"}, {"sha": "936e0fe19bafeec19f05569240f644cbd9bc4fd9", "filename": "src/test/ui/try-block/try-block-in-match.stderr", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/edc02580e4e80476ac1ded2cc1008eaf8b8400e6/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/edc02580e4e80476ac1ded2cc1008eaf8b8400e6/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr?ref=edc02580e4e80476ac1ded2cc1008eaf8b8400e6", "patch": "@@ -1,10 +0,0 @@\n-error: expected expression, found reserved keyword `try`\n-  --> $DIR/try-block-in-match.rs:6:11\n-   |\n-LL |     match try { false } { _ => {} }\n-   |     ----- ^^^ expected expression\n-   |     |\n-   |     while parsing this match expression\n-\n-error: aborting due to previous error\n-"}, {"sha": "33d27236519290134c5fdf4fb8dd9d0e6cacda6e", "filename": "src/test/ui/try-block/try-block-in-while.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs?ref=15ab586b495376bd8e1a591e8a80e6f976251eb5", "patch": "@@ -3,5 +3,6 @@\n #![feature(try_blocks)]\n \n fn main() {\n-    while try { false } {} //~ ERROR expected expression, found reserved keyword `try`\n+    while try { false } {}\n+    //~^ ERROR the trait bound `bool: std::ops::Try` is not satisfied\n }"}, {"sha": "ac41ddfd8c042c13b3663b22525126839c133b82", "filename": "src/test/ui/try-block/try-block-in-while.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr?ref=15ab586b495376bd8e1a591e8a80e6f976251eb5", "patch": "@@ -1,8 +1,11 @@\n-error: expected expression, found reserved keyword `try`\n-  --> $DIR/try-block-in-while.rs:6:11\n+error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n+  --> $DIR/try-block-in-while.rs:6:15\n    |\n LL |     while try { false } {}\n-   |           ^^^ expected expression\n+   |               ^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n+   |\n+   = note: required by `std::ops::Try::from_ok`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "0b767eb2dad77de9c4dfbe5469dd63c104352a06", "filename": "src/test/ui/try-block/try-block-unused-delims.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.rs?ref=15ab586b495376bd8e1a591e8a80e6f976251eb5", "patch": "@@ -0,0 +1,28 @@\n+// check-pass\n+// compile-flags: --edition 2018\n+\n+#![feature(try_blocks)]\n+#![warn(unused_parens, unused_braces)]\n+\n+fn consume<T>(_: Result<T, T>) -> T { todo!() }\n+\n+fn main() {\n+    consume((try {}));\n+    //~^ WARN unnecessary parentheses\n+\n+    consume({ try {} });\n+    //~^ WARN unnecessary braces\n+\n+    match (try {}) {\n+        //~^ WARN unnecessary parentheses\n+        Ok(()) | Err(()) => (),\n+    }\n+\n+    if let Err(()) = (try {}) {}\n+    //~^ WARN unnecessary parentheses\n+\n+    match (try {}) {\n+        //~^ WARN unnecessary parentheses\n+        Ok(()) | Err(()) => (),\n+    }\n+}"}, {"sha": "5c7602ee0ab1246c4322f5b1ffc16dfd2ee1f8c0", "filename": "src/test/ui/try-block/try-block-unused-delims.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15ab586b495376bd8e1a591e8a80e6f976251eb5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr?ref=15ab586b495376bd8e1a591e8a80e6f976251eb5", "patch": "@@ -0,0 +1,44 @@\n+warning: unnecessary parentheses around function argument\n+  --> $DIR/try-block-unused-delims.rs:10:13\n+   |\n+LL |     consume((try {}));\n+   |             ^^^^^^^^ help: remove these parentheses\n+   |\n+note: the lint level is defined here\n+  --> $DIR/try-block-unused-delims.rs:5:9\n+   |\n+LL | #![warn(unused_parens, unused_braces)]\n+   |         ^^^^^^^^^^^^^\n+\n+warning: unnecessary braces around function argument\n+  --> $DIR/try-block-unused-delims.rs:13:13\n+   |\n+LL |     consume({ try {} });\n+   |             ^^^^^^^^^^ help: remove these braces\n+   |\n+note: the lint level is defined here\n+  --> $DIR/try-block-unused-delims.rs:5:24\n+   |\n+LL | #![warn(unused_parens, unused_braces)]\n+   |                        ^^^^^^^^^^^^^\n+\n+warning: unnecessary parentheses around `match` scrutinee expression\n+  --> $DIR/try-block-unused-delims.rs:16:11\n+   |\n+LL |     match (try {}) {\n+   |           ^^^^^^^^ help: remove these parentheses\n+\n+warning: unnecessary parentheses around `let` scrutinee expression\n+  --> $DIR/try-block-unused-delims.rs:21:22\n+   |\n+LL |     if let Err(()) = (try {}) {}\n+   |                      ^^^^^^^^ help: remove these parentheses\n+\n+warning: unnecessary parentheses around `match` scrutinee expression\n+  --> $DIR/try-block-unused-delims.rs:24:11\n+   |\n+LL |     match (try {}) {\n+   |           ^^^^^^^^ help: remove these parentheses\n+\n+warning: 5 warnings emitted\n+"}]}