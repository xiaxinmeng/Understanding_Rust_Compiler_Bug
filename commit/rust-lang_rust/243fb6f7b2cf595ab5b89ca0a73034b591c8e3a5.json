{"sha": "243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0M2ZiNmY3YjJjZjU5NWFiNWI4OWNhMGE3MzAzNGI1OTFjOGUzYTU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-26T13:11:21Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-27T16:58:54Z"}, "message": "Put back tidy check on error codes", "tree": {"sha": "c659ed0014665cfde81889a53354d3fa9a422186", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c659ed0014665cfde81889a53354d3fa9a422186"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "html_url": "https://github.com/rust-lang/rust/commit/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eee955502558a049df75b4313a60cf57c885aa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eee955502558a049df75b4313a60cf57c885aa6", "html_url": "https://github.com/rust-lang/rust/commit/4eee955502558a049df75b4313a60cf57c885aa6"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "41c4b618e60951bfa0cd8e03ec38953fffaf6fdf", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "patch": "@@ -4,7 +4,6 @@\n use std::collections::HashMap;\n use std::ffi::OsStr;\n use std::fs::read_to_string;\n-use std::io::Read;\n use std::path::Path;\n \n // A few of those error codes can't be tested but all the others can and *should* be tested!"}, {"sha": "20636c86e1e96fd70006c5622624f98bef68a34f", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "patch": "@@ -141,17 +141,28 @@ pub fn check(path: &Path, bad: &mut bool) {\n     super::walk(path, &mut super::filter_dirs, &mut |entry, contents| {\n         let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n-        let extensions = [\".rs\", \".py\", \".js\", \".sh\", \".c\", \".cpp\", \".h\"];\n+        let extensions = [\".rs\", \".py\", \".js\", \".sh\", \".c\", \".cpp\", \".h\", \".md\"];\n         if extensions.iter().all(|e| !filename.ends_with(e)) ||\n            filename.starts_with(\".#\") {\n             return\n         }\n \n+        if filename.ends_with(\".md\") &&\n+           file.parent()\n+               .unwrap()\n+               .file_name()\n+               .unwrap()\n+               .to_string_lossy() != \"error_codes\" {\n+            // We don't want to check all \".md\" files (almost of of them aren't compliant\n+            // currently), just the long error code explanation ones.\n+            return;\n+        }\n+\n         if contents.is_empty() {\n             tidy_error!(bad, \"{}: empty file\", file.display());\n         }\n \n-        let max_columns = if filename == \"error_codes.rs\" {\n+        let max_columns = if filename == \"error_codes.rs\" || filename.ends_with(\".md\") {\n             ERROR_CODE_COLS\n         } else {\n             COLS"}]}