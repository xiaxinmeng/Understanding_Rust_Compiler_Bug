{"sha": "abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZDdmZDkyNGI2ZmNmNjczNGQ2M2ZkMjI3N2Y5ZGI0NzJiNmEzMGY=", "commit": {"author": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-02-02T08:42:23Z"}, "committer": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-02-10T12:53:31Z"}, "message": "Add one more depth on android test directory for multiple targets", "tree": {"sha": "af47cd3e32ce739d03ac5205e8cf1f992f1630f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af47cd3e32ce739d03ac5205e8cf1f992f1630f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "html_url": "https://github.com/rust-lang/rust/commit/abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/comments", "author": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbe78e46eb4a4d7118f96f93b35a3e846f064036", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbe78e46eb4a4d7118f96f93b35a3e846f064036", "html_url": "https://github.com/rust-lang/rust/commit/fbe78e46eb4a4d7118f96f93b35a3e846f064036"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "6a011d32730c16de75166d67a2815adfe1bb52c3", "filename": "mk/install.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "patch": "@@ -120,7 +120,7 @@ endef\n $(foreach target,$(CFG_TARGET), \\\n  $(if $(findstring $(CFG_ADB_DEVICE_STATUS),\"true\"), \\\n   $(eval $(call INSTALL_RUNTIME_TARGET_N,$(taget),$(CFG_BUILD))) \\\n-  $(eval $(call INSTALL_RUNTIME_TARGET_CLEANUP_N,arm-linux-$(target))) \\\n+  $(eval $(call INSTALL_RUNTIME_TARGET_CLEANUP_N,$(target))) \\\n   ))\n \n install-runtime-target: \\"}, {"sha": "0d5e266c39d7c6ce4f52fd78f36c9f900490ffc5", "filename": "mk/tests.mk", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "patch": "@@ -111,15 +111,14 @@ $(foreach target,$(CFG_TARGET), \\\n # for arm-linux-androidabi\n define DEF_ADB_DEVICE_STATUS\n CFG_ADB_DEVICE_STATUS=$(1)\n-CFG_ANDROID_TARGET_TRIPLE=$(2)\n endef\n \n $(foreach target,$(CFG_TARGET), \\\n   $(if $(or $(findstring $(target),\"arm-linux-androideabi\"),$(findstring $(target),\"aarch64-linux-android\")), \\\n     $(if $(findstring adb,$(CFG_ADB)), \\\n       $(if $(findstring device,$(shell $(CFG_ADB) devices 2>/dev/null | grep -E '^[:_A-Za-z0-9-]+[[:blank:]]+device')), \\\n         $(info check: android device attached) \\\n-        $(eval $(call DEF_ADB_DEVICE_STATUS, true, $(target))), \\\n+        $(eval $(call DEF_ADB_DEVICE_STATUS, true)), \\\n         $(info check: android device not attached) \\\n         $(eval $(call DEF_ADB_DEVICE_STATUS, false)) \\\n       ), \\\n@@ -136,12 +135,14 @@ $(info check: android device test dir $(CFG_ADB_TEST_DIR) ready \\\n  $(shell $(CFG_ADB) remount 1>/dev/null) \\\n  $(shell $(CFG_ADB) shell rm -r $(CFG_ADB_TEST_DIR) >/dev/null) \\\n  $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)) \\\n- $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)/tmp) \\\n  $(shell $(CFG_ADB) push $(S)src/etc/adb_run_wrapper.sh $(CFG_ADB_TEST_DIR) 1>/dev/null) \\\n- $(foreach crate,$(TARGET_CRATES), \\\n-    $(shell $(CFG_ADB) push $(TLIB2_T_$(CFG_ANDROID_TARGET_TRIPLE)_H_$(CFG_BUILD))/$(call CFG_LIB_GLOB_$(CFG_ANDROID_TARGET_TRIPLE),$(crate)) \\\n-                    $(CFG_ADB_TEST_DIR))) \\\n- )\n+ $(foreach target,$(CFG_TARGET), \\\n+  $(if $(or $(findstring $(target),\"arm-linux-androideabi\"),$(findstring $(target),\"aarch64-linux-android\")), \\\n+   $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)/$(target)) \\\n+   $(foreach crate,$(TARGET_CRATES), \\\n+    $(shell $(CFG_ADB) push $(TLIB2_T_$(target)_H_$(CFG_BUILD))/$(call CFG_LIB_GLOB_$(target),$(crate)) \\\n+                    $(CFG_ADB_TEST_DIR)/$(target))), \\\n+ )))\n else\n CFG_ADB_TEST_DIR=\n endif\n@@ -401,7 +402,7 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t\t$(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2))\n \t@$$(call E, run: $$< via adb)\n \t$$(Q)$(CFG_ADB) push $$< $(CFG_ADB_TEST_DIR)\n-\t$$(Q)$(CFG_ADB) shell '(cd $(CFG_ADB_TEST_DIR); LD_LIBRARY_PATH=. \\\n+\t$$(Q)$(CFG_ADB) shell '(cd $(CFG_ADB_TEST_DIR); LD_LIBRARY_PATH=./$(2) \\\n \t\t./$$(notdir $$<) \\\n \t\t--logfile $(CFG_ADB_TEST_DIR)/check-stage$(1)-T-$(2)-H-$(3)-$(4).log \\\n \t\t$$(call CRATE_TEST_EXTRA_ARGS,$(1),$(2),$(3),$(4)) $(TESTARGS))' \\"}, {"sha": "4e1a3fa1c19f34c0a8861aeb1694cd2d1ff2d328", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "patch": "@@ -156,7 +156,9 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         lldb_version: extract_lldb_version(matches.opt_str(\"lldb-version\")),\n         android_cross_path: opt_path(matches, \"android-cross-path\"),\n         adb_path: opt_str2(matches.opt_str(\"adb-path\")),\n-        adb_test_dir: opt_str2(matches.opt_str(\"adb-test-dir\")),\n+        adb_test_dir: format!(\"{}/{}\",\n+            opt_str2(matches.opt_str(\"adb-test-dir\")),\n+            opt_str2(matches.opt_str(\"target\"))),\n         adb_device_status:\n             opt_str2(matches.opt_str(\"target\")).contains(\"android\") &&\n             \"(none)\" != opt_str2(matches.opt_str(\"adb-test-dir\")) &&"}, {"sha": "43d0fa48900f0002bfed501e4bcd6ce7bb03ad67", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "patch": "@@ -1509,7 +1509,7 @@ fn _arm_exec_compiled_test(config: &Config,\n     for (key, val) in env {\n         runargs.push(format!(\"{}={}\", key, val));\n     }\n-    runargs.push(format!(\"{}/adb_run_wrapper.sh\", config.adb_test_dir));\n+    runargs.push(format!(\"{}/../adb_run_wrapper.sh\", config.adb_test_dir));\n     runargs.push(format!(\"{}\", config.adb_test_dir));\n     runargs.push(format!(\"{}\", prog_short));\n \n@@ -1605,7 +1605,7 @@ fn _arm_push_aux_shared_library(config: &Config, testfile: &Path) {\n                                             file.as_str()\n                                                 .unwrap()\n                                                 .to_string(),\n-                                            config.adb_test_dir.to_string()\n+                                            config.adb_test_dir.to_string(),\n                                            ],\n                                            vec!((\"\".to_string(),\n                                                  \"\".to_string())),"}, {"sha": "bd6c483156f8125df69f0f2753b0dbf5eed15487", "filename": "src/etc/adb_run_wrapper.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/src%2Fetc%2Fadb_run_wrapper.sh", "raw_url": "https://github.com/rust-lang/rust/raw/abd7fd924b6fcf6734d63fd2277f9db472b6a30f/src%2Fetc%2Fadb_run_wrapper.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fadb_run_wrapper.sh?ref=abd7fd924b6fcf6734d63fd2277f9db472b6a30f", "patch": "@@ -24,8 +24,9 @@ then\n     then\n         shift\n \n+        # The length of binary path (i.e. ./$RUN) should be shorter than 128 characters.\n         cd $TEST_PATH\n-        TEST_EXEC_ENV=22 LD_LIBRARY_PATH=$TEST_PATH PATH=$BIN_PATH:$TEST_PATH $TEST_PATH/$RUN $@ 1>$TEST_PATH/$RUN.stdout 2>$TEST_PATH/$RUN.stderr\n+        TEST_EXEC_ENV=22 LD_LIBRARY_PATH=$TEST_PATH PATH=$BIN_PATH:$TEST_PATH ./$RUN $@ 1>$TEST_PATH/$RUN.stdout 2>$TEST_PATH/$RUN.stderr\n         L_RET=$?\n \n         echo $L_RET > $TEST_PATH/$RUN.exitcode"}]}