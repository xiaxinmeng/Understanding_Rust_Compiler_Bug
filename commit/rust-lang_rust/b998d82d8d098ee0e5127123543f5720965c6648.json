{"sha": "b998d82d8d098ee0e5127123543f5720965c6648", "node_id": "C_kwDOAAsO6NoAKGI5OThkODJkOGQwOThlZTBlNTEyNzEyMzU0M2Y1NzIwOTY1YzY2NDg", "commit": {"author": {"name": "Stovent", "email": "elian.hamon@viacesi.fr", "date": "2022-02-11T20:47:37Z"}, "committer": {"name": "Stovent", "email": "elian.hamon@viacesi.fr", "date": "2022-05-30T22:32:37Z"}, "message": "Remove too long example", "tree": {"sha": "96fae2b609164d80a2f26772b1baef15c476365d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96fae2b609164d80a2f26772b1baef15c476365d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b998d82d8d098ee0e5127123543f5720965c6648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b998d82d8d098ee0e5127123543f5720965c6648", "html_url": "https://github.com/rust-lang/rust/commit/b998d82d8d098ee0e5127123543f5720965c6648", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b998d82d8d098ee0e5127123543f5720965c6648/comments", "author": {"login": "Stovent", "id": 23307724, "node_id": "MDQ6VXNlcjIzMzA3NzI0", "avatar_url": "https://avatars.githubusercontent.com/u/23307724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stovent", "html_url": "https://github.com/Stovent", "followers_url": "https://api.github.com/users/Stovent/followers", "following_url": "https://api.github.com/users/Stovent/following{/other_user}", "gists_url": "https://api.github.com/users/Stovent/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stovent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stovent/subscriptions", "organizations_url": "https://api.github.com/users/Stovent/orgs", "repos_url": "https://api.github.com/users/Stovent/repos", "events_url": "https://api.github.com/users/Stovent/events{/privacy}", "received_events_url": "https://api.github.com/users/Stovent/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stovent", "id": 23307724, "node_id": "MDQ6VXNlcjIzMzA3NzI0", "avatar_url": "https://avatars.githubusercontent.com/u/23307724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stovent", "html_url": "https://github.com/Stovent", "followers_url": "https://api.github.com/users/Stovent/followers", "following_url": "https://api.github.com/users/Stovent/following{/other_user}", "gists_url": "https://api.github.com/users/Stovent/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stovent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stovent/subscriptions", "organizations_url": "https://api.github.com/users/Stovent/orgs", "repos_url": "https://api.github.com/users/Stovent/repos", "events_url": "https://api.github.com/users/Stovent/events{/privacy}", "received_events_url": "https://api.github.com/users/Stovent/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c690555f226909786a43b4bf0dc58f8bffa7a6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c690555f226909786a43b4bf0dc58f8bffa7a6b", "html_url": "https://github.com/rust-lang/rust/commit/5c690555f226909786a43b4bf0dc58f8bffa7a6b"}], "stats": {"total": 60, "additions": 2, "deletions": 58}, "files": [{"sha": "2d97fa62accd6e225ec8f9c9a96e40244a77d909", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 2, "deletions": 58, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/b998d82d8d098ee0e5127123543f5720965c6648/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b998d82d8d098ee0e5127123543f5720965c6648/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=b998d82d8d098ee0e5127123543f5720965c6648", "patch": "@@ -1520,35 +1520,7 @@ macro_rules! int_impl {\n         ///\n         /// # Examples\n         ///\n-        /// Standard signed bit integer implementation\n-        ///\n-        /// ```rs\n-        /// #![feature(bigint_helper_methods)]\n-        /// struct I16 {\n-        ///     pub low: u8, // Low-order bytes has to be unsigned.\n-        ///     /// Most Significant Data has to be of the same signedness as the desired type.\n-        ///     /// So u8 to implement U16, i8 to implement I16.\n-        ///     pub high: i8,\n-        /// }\n-        ///\n-        /// impl I16 {\n-        ///     /// Adds `rhs` to `self` and returns true if signed overflow occurs, false otherwise.\n-        ///     pub fn overflowing_add(&mut self, rhs: Self) -> bool {\n-        ///         let (low_res, low_carry) = self.low.carrying_add(rhs.low, false);\n-        ///\n-        ///         // The signed `carrying_add` method is used to detect signed overflow.\n-        ///         let (high_res, high_carry) = self.high.carrying_add(rhs.high, low_carry);\n-        ///\n-        ///         self.low = low_res;\n-        ///         self.high = high_res;\n-        ///         high_carry\n-        ///     }\n-        /// }\n-        ///\n-        /// fn main() {}\n-        /// ```\n-        ///\n-        /// General behavior\n+        /// Basic usage:\n         ///\n         /// ```\n         /// #![feature(bigint_helper_methods)]\n@@ -1644,35 +1616,7 @@ macro_rules! int_impl {\n         ///\n         /// # Examples\n         ///\n-        /// Standard signed bit integer implementation\n-        ///\n-        /// ```rs\n-        /// #![feature(bigint_helper_methods)]\n-        /// struct I16 {\n-        ///     pub low: u8, // Low-order bytes has to be unsigned.\n-        ///     /// Most Significant Data has to be of the same signedness as the desired type.\n-        ///     /// So u8 to implement U16, i8 to implement I16.\n-        ///     pub high: i8,\n-        /// }\n-        ///\n-        /// impl I16 {\n-        ///     /// Subtracts `rhs` from `self` and returns true if signed overflow occurs, false otherwise.\n-        ///     pub fn overflowing_sub(&mut self, rhs: Self) -> bool {\n-        ///         let (low_res, low_carry) = self.low.borrowing_sub(rhs.low, false);\n-        ///\n-        ///         // The signed `borrowing_sub` method is used to detect signed overflow.\n-        ///         let (high_res, high_carry) = self.high.borrowing_sub(rhs.high, low_carry);\n-        ///\n-        ///         self.low = low_res;\n-        ///         self.high = high_res;\n-        ///         high_carry\n-        ///     }\n-        /// }\n-        ///\n-        /// fn main() {}\n-        /// ```\n-        ///\n-        /// General behavior\n+        /// Basic usage:\n         ///\n         /// ```\n         /// #![feature(bigint_helper_methods)]"}]}