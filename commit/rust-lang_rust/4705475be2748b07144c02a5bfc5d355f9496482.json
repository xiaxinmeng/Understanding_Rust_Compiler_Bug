{"sha": "4705475be2748b07144c02a5bfc5d355f9496482", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MDU0NzViZTI3NDhiMDcxNDRjMDJhNWJmYzVkMzU1Zjk0OTY0ODI=", "commit": {"author": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2014-11-22T23:30:26Z"}, "committer": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2014-11-22T23:31:51Z"}, "message": "Mark Any::get_type_id as experimental\n\nIt is likely going to be removed and replaced\nwith an associated static.\n\nFixes #19222", "tree": {"sha": "ddfeb7aa639e8f7ef6023395ff35de41d5095b56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddfeb7aa639e8f7ef6023395ff35de41d5095b56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4705475be2748b07144c02a5bfc5d355f9496482", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4705475be2748b07144c02a5bfc5d355f9496482", "html_url": "https://github.com/rust-lang/rust/commit/4705475be2748b07144c02a5bfc5d355f9496482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4705475be2748b07144c02a5bfc5d355f9496482/comments", "author": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d0a29061443852cae070b27d51de7cc69bbf293", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0a29061443852cae070b27d51de7cc69bbf293", "html_url": "https://github.com/rust-lang/rust/commit/0d0a29061443852cae070b27d51de7cc69bbf293"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9f8e3846de9c1091cd8cb9ec4ae6db97fcc9e39e", "filename": "src/libcore/any.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4705475be2748b07144c02a5bfc5d355f9496482/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4705475be2748b07144c02a5bfc5d355f9496482/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=4705475be2748b07144c02a5bfc5d355f9496482", "patch": "@@ -88,7 +88,7 @@ use intrinsics::TypeId;\n #[stable]\n pub trait Any: 'static {\n     /// Get the `TypeId` of `self`\n-    #[stable]\n+    #[experimental = \"this method will likely be replaced by an associated static\"]\n     fn get_type_id(&self) -> TypeId;\n }\n "}]}