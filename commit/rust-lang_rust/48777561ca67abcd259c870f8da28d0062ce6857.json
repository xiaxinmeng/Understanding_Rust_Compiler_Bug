{"sha": "48777561ca67abcd259c870f8da28d0062ce6857", "node_id": "C_kwDOAAsO6NoAKDQ4Nzc3NTYxY2E2N2FiY2QyNTljODcwZjhkYTI4ZDAwNjJjZTY4NTc", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-11-04T16:57:30Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-11-16T18:52:59Z"}, "message": "Update tests.", "tree": {"sha": "8f34b3e35b3b2d7fa0b99c6ce5b50694b37b6025", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f34b3e35b3b2d7fa0b99c6ce5b50694b37b6025"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48777561ca67abcd259c870f8da28d0062ce6857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48777561ca67abcd259c870f8da28d0062ce6857", "html_url": "https://github.com/rust-lang/rust/commit/48777561ca67abcd259c870f8da28d0062ce6857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48777561ca67abcd259c870f8da28d0062ce6857/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b331b6608265f98eea8c3fa85dd67d3156c88ead", "url": "https://api.github.com/repos/rust-lang/rust/commits/b331b6608265f98eea8c3fa85dd67d3156c88ead", "html_url": "https://github.com/rust-lang/rust/commit/b331b6608265f98eea8c3fa85dd67d3156c88ead"}], "stats": {"total": 79, "additions": 44, "deletions": 35}, "files": [{"sha": "6da640b2b7c765b26054fc0248512e8fb23be270", "filename": "src/test/ui/did_you_mean/issue-42764.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.rs?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -10,7 +10,7 @@ fn main() {\n     let n: usize = 42;\n     this_function_expects_a_double_option(n);\n     //~^ ERROR mismatched types\n-    //~| HELP try using a variant of the expected enum\n+    //~| HELP try wrapping the expression in a variant of `DoubleOption`\n }\n \n "}, {"sha": "dbe46704b9320224edc810d5b2488f9a5ca0deef", "filename": "src/test/ui/did_you_mean/issue-42764.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -6,12 +6,12 @@ LL |     this_function_expects_a_double_option(n);\n    |\n    = note: expected enum `DoubleOption<_>`\n               found type `usize`\n-help: try using a variant of the expected enum\n+help: try wrapping the expression in a variant of `DoubleOption`\n    |\n-LL |     this_function_expects_a_double_option(DoubleOption::AlternativeSome(n));\n-   |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n LL |     this_function_expects_a_double_option(DoubleOption::FirstSome(n));\n-   |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                           ++++++++++++++++++++++++ +\n+LL |     this_function_expects_a_double_option(DoubleOption::AlternativeSome(n));\n+   |                                           ++++++++++++++++++++++++++++++ +\n \n error[E0308]: mismatched types\n   --> $DIR/issue-42764.rs:27:33"}, {"sha": "03fb299b39cd2e11721ef522431735637305485c", "filename": "src/test/ui/fully-qualified-type/fully-qualified-type-name1.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name1.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -2,13 +2,14 @@ error[E0308]: mismatched types\n   --> $DIR/fully-qualified-type-name1.rs:5:9\n    |\n LL |     x = 5;\n-   |         ^\n-   |         |\n-   |         expected enum `Option`, found integer\n-   |         help: try using a variant of the expected enum: `Some(5)`\n+   |         ^ expected enum `Option`, found integer\n    |\n    = note: expected enum `Option<usize>`\n               found type `{integer}`\n+help: try wrapping the expression in `Some`\n+   |\n+LL |     x = Some(5);\n+   |         +++++ +\n \n error: aborting due to previous error\n "}, {"sha": "778b13f24cf5667b82e8e1d0bcbd0aa22c362002", "filename": "src/test/ui/fully-qualified-type/fully-qualified-type-name4.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name4.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -4,13 +4,14 @@ error[E0308]: mismatched types\n LL | fn bar(x: usize) -> Option<usize> {\n    |                     ------------- expected `Option<usize>` because of return type\n LL |     return x;\n-   |            ^\n-   |            |\n-   |            expected enum `Option`, found `usize`\n-   |            help: try using a variant of the expected enum: `Some(x)`\n+   |            ^ expected enum `Option`, found `usize`\n    |\n    = note: expected enum `Option<usize>`\n               found type `usize`\n+help: try wrapping the expression in `Some`\n+   |\n+LL |     return Some(x);\n+   |            +++++ +\n \n error: aborting due to previous error\n "}, {"sha": "15d2ef3fce8da150c21091a7338ac19c841f1c13", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -12,10 +12,10 @@ help: try removing this `?`\n LL -     missing_discourses()?\n LL +     missing_discourses()\n    | \n-help: try using a variant of the expected enum\n+help: try wrapping the expression in `Ok`\n    |\n LL |     Ok(missing_discourses()?)\n-   |\n+   |     +++                     +\n \n error: aborting due to previous error\n "}, {"sha": "ff1a836c9aec034b7e2cbd5e929b5a190a05b89a", "filename": "src/test/ui/mismatched_types/abridged.stderr", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -26,27 +26,29 @@ error[E0308]: mismatched types\n LL | fn b() -> Option<Foo> {\n    |           ----------- expected `Option<Foo>` because of return type\n LL |     Foo { bar: 1 }\n-   |     ^^^^^^^^^^^^^^\n-   |     |\n-   |     expected enum `Option`, found struct `Foo`\n-   |     help: try using a variant of the expected enum: `Some(Foo { bar: 1 })`\n+   |     ^^^^^^^^^^^^^^ expected enum `Option`, found struct `Foo`\n    |\n    = note: expected enum `Option<Foo>`\n             found struct `Foo`\n+help: try wrapping the expression in `Some`\n+   |\n+LL |     Some(Foo { bar: 1 })\n+   |     +++++              +\n \n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:28:5\n    |\n LL | fn c() -> Result<Foo, Bar> {\n    |           ---------------- expected `Result<Foo, Bar>` because of return type\n LL |     Foo { bar: 1 }\n-   |     ^^^^^^^^^^^^^^\n-   |     |\n-   |     expected enum `Result`, found struct `Foo`\n-   |     help: try using a variant of the expected enum: `Ok(Foo { bar: 1 })`\n+   |     ^^^^^^^^^^^^^^ expected enum `Result`, found struct `Foo`\n    |\n    = note: expected enum `Result<Foo, Bar>`\n             found struct `Foo`\n+help: try wrapping the expression in `Ok`\n+   |\n+LL |     Ok(Foo { bar: 1 })\n+   |     +++              +\n \n error[E0308]: mismatched types\n   --> $DIR/abridged.rs:39:5"}, {"sha": "090bd67117eab8cdad015950777c29ad481944e0", "filename": "src/test/ui/pattern/pat-type-err-let-stmt.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fpattern%2Fpat-type-err-let-stmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fpattern%2Fpat-type-err-let-stmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-type-err-let-stmt.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -2,14 +2,16 @@ error[E0308]: mismatched types\n   --> $DIR/pat-type-err-let-stmt.rs:6:29\n    |\n LL |     let Ok(0): Option<u8> = 42u8;\n-   |                ----------   ^^^^\n-   |                |            |\n-   |                |            expected enum `Option`, found `u8`\n-   |                |            help: try using a variant of the expected enum: `Some(42u8)`\n+   |                ----------   ^^^^ expected enum `Option`, found `u8`\n+   |                |\n    |                expected due to this\n    |\n    = note: expected enum `Option<u8>`\n               found type `u8`\n+help: try wrapping the expression in `Some`\n+   |\n+LL |     let Ok(0): Option<u8> = Some(42u8);\n+   |                             +++++    +\n \n error[E0308]: mismatched types\n   --> $DIR/pat-type-err-let-stmt.rs:6:9"}, {"sha": "9b6dba7e9e75b9d7ac273c434f16af7a88da2c04", "filename": "src/test/ui/suggestions/suggest-full-enum-variant-for-local-module.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -2,14 +2,16 @@ error[E0308]: mismatched types\n   --> $DIR/suggest-full-enum-variant-for-local-module.rs:9:28\n    |\n LL |     let _: option::O<()> = ();\n-   |            -------------   ^^\n-   |            |               |\n-   |            |               expected enum `O`, found `()`\n-   |            |               help: try using a variant of the expected enum: `option::O::Some(())`\n+   |            -------------   ^^ expected enum `O`, found `()`\n+   |            |\n    |            expected due to this\n    |\n    = note:   expected enum `O<()>`\n            found unit type `()`\n+help: try wrapping the expression in `option::O::Some`\n+   |\n+LL |     let _: option::O<()> = option::O::Some(());\n+   |                            ++++++++++++++++  +\n \n error: aborting due to previous error\n "}, {"sha": "39bff88e7f81a3624cbbf3ec0aa5bc3bc2e26122", "filename": "src/test/ui/typeck/issue-46112.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Ftypeck%2Fissue-46112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48777561ca67abcd259c870f8da28d0062ce6857/src%2Ftest%2Fui%2Ftypeck%2Fissue-46112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-46112.stderr?ref=48777561ca67abcd259c870f8da28d0062ce6857", "patch": "@@ -2,13 +2,14 @@ error[E0308]: mismatched types\n   --> $DIR/issue-46112.rs:9:21\n    |\n LL | fn main() { test(Ok(())); }\n-   |                     ^^\n-   |                     |\n-   |                     expected enum `Option`, found `()`\n-   |                     help: try using a variant of the expected enum: `Some(())`\n+   |                     ^^ expected enum `Option`, found `()`\n    |\n    = note:   expected enum `Option<()>`\n            found unit type `()`\n+help: try wrapping the expression in `Some`\n+   |\n+LL | fn main() { test(Ok(Some(()))); }\n+   |                     +++++  +\n \n error: aborting due to previous error\n "}]}