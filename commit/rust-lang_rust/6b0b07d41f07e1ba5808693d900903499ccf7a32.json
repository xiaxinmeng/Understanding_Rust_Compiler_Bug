{"sha": "6b0b07d41f07e1ba5808693d900903499ccf7a32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMGIwN2Q0MWYwN2UxYmE1ODA4NjkzZDkwMDkwMzQ5OWNjZjdhMzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-31T05:22:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-31T05:22:13Z"}, "message": "Auto merge of #87387 - the8472:slice-iter-advance_by, r=scottmcm\n\nImplement advance_by, advance_back_by for slice::{Iter, IterMut}\n\nPart of #77404.\n\nPicking up where #77633 was closed.\n\nI have addressed https://github.com/rust-lang/rust/pull/77633#issuecomment-771842599 by restoring `nth` and `nth_back`. So according to that comment this should already be r=m-ou-se, but it has been sitting for a while.", "tree": {"sha": "2e1cd3b01b10ccefa8476763435cbaee399b04a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e1cd3b01b10ccefa8476763435cbaee399b04a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b0b07d41f07e1ba5808693d900903499ccf7a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b0b07d41f07e1ba5808693d900903499ccf7a32", "html_url": "https://github.com/rust-lang/rust/commit/6b0b07d41f07e1ba5808693d900903499ccf7a32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b0b07d41f07e1ba5808693d900903499ccf7a32/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b289bb7fdfcb6f54d825927ab9b5722cabc2a140", "url": "https://api.github.com/repos/rust-lang/rust/commits/b289bb7fdfcb6f54d825927ab9b5722cabc2a140", "html_url": "https://github.com/rust-lang/rust/commit/b289bb7fdfcb6f54d825927ab9b5722cabc2a140"}, {"sha": "5485f8a8ba7c4e2f9a01c3865b037c698887f317", "url": "https://api.github.com/repos/rust-lang/rust/commits/5485f8a8ba7c4e2f9a01c3865b037c698887f317", "html_url": "https://github.com/rust-lang/rust/commit/5485f8a8ba7c4e2f9a01c3865b037c698887f317"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "791a88dd97f288b7f74304a9244792f04466bc46", "filename": "library/core/src/slice/iter/macros.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b07d41f07e1ba5808693d900903499ccf7a32/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b07d41f07e1ba5808693d900903499ccf7a32/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs?ref=6b0b07d41f07e1ba5808693d900903499ccf7a32", "patch": "@@ -185,6 +185,13 @@ macro_rules! iterator {\n                 }\n             }\n \n+            fn advance_by(&mut self, n: usize) -> Result<(), usize> {\n+                let advance = cmp::min(n, len!(self));\n+                // SAFETY: By construction, `advance` does not exceed `self.len()`.\n+                unsafe { self.post_inc_start(advance as isize) };\n+                if advance == n { Ok(()) } else { Err(advance) }\n+            }\n+\n             #[inline]\n             fn last(mut self) -> Option<$elem> {\n                 self.next_back()\n@@ -371,6 +378,14 @@ macro_rules! iterator {\n                     Some(next_back_unchecked!(self))\n                 }\n             }\n+\n+            #[inline]\n+            fn advance_back_by(&mut self, n: usize) -> Result<(), usize> {\n+                let advance = cmp::min(n, len!(self));\n+                // SAFETY: By construction, `advance` does not exceed `self.len()`.\n+                unsafe { self.pre_dec_end(advance as isize) };\n+                if advance == n { Ok(()) } else { Err(advance) }\n+            }\n         }\n \n         #[stable(feature = \"fused\", since = \"1.26.0\")]"}, {"sha": "240b894057c3e80016dc5f052b9afebe285e8c90", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b07d41f07e1ba5808693d900903499ccf7a32/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b07d41f07e1ba5808693d900903499ccf7a32/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=6b0b07d41f07e1ba5808693d900903499ccf7a32", "patch": "@@ -134,6 +134,48 @@ fn test_partition_point() {\n     assert_eq!(b.partition_point(|&x| x < 8), 5);\n }\n \n+#[test]\n+fn test_iterator_advance_by() {\n+    let v = &[0, 1, 2, 3, 4];\n+\n+    for i in 0..=v.len() {\n+        let mut iter = v.iter();\n+        iter.advance_by(i).unwrap();\n+        assert_eq!(iter.as_slice(), &v[i..]);\n+    }\n+\n+    let mut iter = v.iter();\n+    assert_eq!(iter.advance_by(v.len() + 1), Err(v.len()));\n+    assert_eq!(iter.as_slice(), &[]);\n+\n+    let mut iter = v.iter();\n+    iter.advance_by(3).unwrap();\n+    assert_eq!(iter.as_slice(), &v[3..]);\n+    iter.advance_by(2).unwrap();\n+    assert_eq!(iter.as_slice(), &[]);\n+}\n+\n+#[test]\n+fn test_iterator_advance_back_by() {\n+    let v = &[0, 1, 2, 3, 4];\n+\n+    for i in 0..=v.len() {\n+        let mut iter = v.iter();\n+        iter.advance_back_by(i).unwrap();\n+        assert_eq!(iter.as_slice(), &v[..v.len() - i]);\n+    }\n+\n+    let mut iter = v.iter();\n+    assert_eq!(iter.advance_back_by(v.len() + 1), Err(v.len()));\n+    assert_eq!(iter.as_slice(), &[]);\n+\n+    let mut iter = v.iter();\n+    iter.advance_back_by(3).unwrap();\n+    assert_eq!(iter.as_slice(), &v[..v.len() - 3]);\n+    iter.advance_back_by(2).unwrap();\n+    assert_eq!(iter.as_slice(), &[]);\n+}\n+\n #[test]\n fn test_iterator_nth() {\n     let v: &[_] = &[0, 1, 2, 3, 4];"}]}