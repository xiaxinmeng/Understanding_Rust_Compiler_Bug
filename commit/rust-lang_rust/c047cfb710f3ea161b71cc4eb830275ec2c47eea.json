{"sha": "c047cfb710f3ea161b71cc4eb830275ec2c47eea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNDdjZmI3MTBmM2VhMTYxYjcxY2M0ZWI4MzAyNzVlYzJjNDdlZWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-07T01:31:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-07T17:32:58Z"}, "message": "Unwind the stack on task failure\n\nWhen a task fails, we will throw an exception, then catch it at the bottom of\nthe stack.\n\nOn Windows we don't do this yet because the exception doesn't propagate\ncorrectly.\n\nNo cleanups yet.\n\nIssue #236", "tree": {"sha": "5c1c47cae1a629a8578dcab2e180e4d85629b45a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c1c47cae1a629a8578dcab2e180e4d85629b45a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c047cfb710f3ea161b71cc4eb830275ec2c47eea", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c047cfb710f3ea161b71cc4eb830275ec2c47eea", "html_url": "https://github.com/rust-lang/rust/commit/c047cfb710f3ea161b71cc4eb830275ec2c47eea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c047cfb710f3ea161b71cc4eb830275ec2c47eea/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c337fd5467f52b5f79f653b7e71f945cc8cf09d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c337fd5467f52b5f79f653b7e71f945cc8cf09d1", "html_url": "https://github.com/rust-lang/rust/commit/c337fd5467f52b5f79f653b7e71f945cc8cf09d1"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "57b5d16e4270882084596cf6698328176f5bd0ec", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 40, "deletions": 8, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/c047cfb710f3ea161b71cc4eb830275ec2c47eea/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c047cfb710f3ea161b71cc4eb830275ec2c47eea/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=c047cfb710f3ea161b71cc4eb830275ec2c47eea", "patch": "@@ -147,12 +147,6 @@ void task_exit(rust_closure_env *env, int rval, rust_task *task) {\n         //env->td->free_glue(NULL, task, NULL, env->td->first_param, env);\n         task->free(env);\n     }\n-    task->die();\n-    task->lock.lock();\n-    task->notify_tasks_waiting_to_join();\n-    task->lock.unlock();\n-\n-    task->yield(1);\n }\n \n extern \"C\" CDECL\n@@ -161,8 +155,37 @@ void task_start_wrapper(spawn_args *a)\n     rust_task *task = a->task;\n     int rval = 42;\n \n-    a->f(&rval, task, a->a3, a->a4);\n-    task_exit((rust_closure_env*)a->a3, rval, task);\n+    bool failed = false;\n+    try {\n+        a->f(&rval, task, a->a3, a->a4);\n+    } catch (rust_task *ex) {\n+        A(task->sched, ex == task,\n+          \"Expected this task to be thrown for unwinding\");\n+        failed = true;\n+    }\n+\n+    rust_closure_env* env = (rust_closure_env*)a->a3;\n+    if(env) {\n+        // free the environment.\n+        I(task->sched, 1 == env->ref_count); // the ref count better be 1\n+        //env->td->drop_glue(NULL, task, NULL, env->td->first_param, env);\n+        //env->td->free_glue(NULL, task, NULL, env->td->first_param, env);\n+        task->free(env);\n+    }\n+\n+    if (failed) {\n+#ifndef __WIN32__\n+        task->conclude_failure();\n+#else\n+        A(task->sched, false, \"Shouldn't happen\");\n+#endif\n+    } else {\n+        task->die();\n+        task->lock.lock();\n+        task->notify_tasks_waiting_to_join();\n+        task->lock.unlock();\n+        task->yield(1);\n+    }\n }\n \n /* We spawn a rust (fastcc) function through a CDECL function\n@@ -276,6 +299,15 @@ rust_task::fail() {\n     // See note in ::kill() regarding who should call this.\n     DLOG(sched, task, \"task %s @0x%\" PRIxPTR \" failing\", name, this);\n     backtrace();\n+#ifndef __WIN32__\n+    throw this;\n+#else\n+    conclude_failure();\n+#endif\n+}\n+\n+void\n+rust_task::conclude_failure() {\n     die();\n     // Unblock the task so it can unwind.\n     unblock();"}, {"sha": "fd7013ea0f832f0d282b887c6f402bf843c813cc", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c047cfb710f3ea161b71cc4eb830275ec2c47eea/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/c047cfb710f3ea161b71cc4eb830275ec2c47eea/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=c047cfb710f3ea161b71cc4eb830275ec2c47eea", "patch": "@@ -155,6 +155,7 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     // Fail self, assuming caller-on-stack is this task.\n     void fail();\n+    void conclude_failure();\n \n     // Disconnect from our supervisor.\n     void unsupervise();"}]}