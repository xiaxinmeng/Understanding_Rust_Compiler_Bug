{"sha": "b5d1aac8837d053df75996a7f5b5e6d0760d8006", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZDFhYWM4ODM3ZDA1M2RmNzU5OTZhN2Y1YjVlNmQwNzYwZDgwMDY=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-10-13T14:23:42Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-10-17T12:09:39Z"}, "message": "Add tests for `program_clauses_for_env`", "tree": {"sha": "5da0b42d86423a0cf9858368d8f87b0d19a80e42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5da0b42d86423a0cf9858368d8f87b0d19a80e42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5d1aac8837d053df75996a7f5b5e6d0760d8006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5d1aac8837d053df75996a7f5b5e6d0760d8006", "html_url": "https://github.com/rust-lang/rust/commit/b5d1aac8837d053df75996a7f5b5e6d0760d8006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5d1aac8837d053df75996a7f5b5e6d0760d8006/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1931d31f7895bb3b15d24d2784e47ba6598ef2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1931d31f7895bb3b15d24d2784e47ba6598ef2f", "html_url": "https://github.com/rust-lang/rust/commit/a1931d31f7895bb3b15d24d2784e47ba6598ef2f"}], "stats": {"total": 111, "additions": 103, "deletions": 8}, "files": [{"sha": "f0ce2037723a4137a5efb60232981b164d66e40f", "filename": "src/librustc_traits/lowering/environment.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs?ref=b5d1aac8837d053df75996a7f5b5e6d0760d8006", "patch": "@@ -231,14 +231,15 @@ crate fn environment<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> En\n         input_tys.extend(trait_ref.self_ty().walk());\n     }\n \n-    // In an fn, we assume that the arguments and all their constitutents are\n+    // In an fn, we assume that the arguments and all their constituents are\n     // well-formed.\n     if is_fn {\n-        let fn_sig = tcx.fn_sig(def_id)\n-            .no_late_bound_regions()\n-            .expect(\"only early bound regions\");\n+        let fn_sig = tcx.fn_sig(def_id);\n         input_tys.extend(\n-            fn_sig.inputs().iter().flat_map(|ty| ty.walk())\n+            // FIXME: `skip_binder` seems ok for now? In a real setting,\n+            // the late bound regions would next be instantiated with things\n+            // in the inference table.\n+            fn_sig.skip_binder().inputs().iter().flat_map(|ty| ty.walk())\n         );\n     }\n "}, {"sha": "3aa04cfeb67d40c4e02e9c24b3a9f32770536674", "filename": "src/test/ui/chalkify/lower_env1.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_env1.stderr?ref=b5d1aac8837d053df75996a7f5b5e6d0760d8006", "patch": "@@ -18,9 +18,6 @@ LL | #[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n    = note: Implemented(Self: Bar) :- FromEnv(Self: Bar).\n    = note: Implemented(Self: Foo) :- FromEnv(Self: Foo).\n    = note: Implemented(Self: std::marker::Sized) :- FromEnv(Self: std::marker::Sized).\n-   = note: WellFormed(Self: Bar) :- Implemented(Self: Bar), WellFormed(Self: Foo).\n-   = note: WellFormed(Self: Foo) :- Implemented(Self: Foo).\n-   = note: WellFormed(Self: std::marker::Sized) :- Implemented(Self: std::marker::Sized).\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0b50dbfdf95c6714b8c9c9c87940b86c25543c31", "filename": "src/test/ui/chalkify/lower_env2.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_env2.rs?ref=b5d1aac8837d053df75996a7f5b5e6d0760d8006", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+\n+trait Foo { }\n+\n+#[rustc_dump_program_clauses] //~ ERROR program clause dump\n+struct S<'a, T> where T: Foo {\n+    data: &'a T,\n+}\n+\n+#[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n+fn bar<'a, T: Foo>(x: S<T>) {\n+}\n+\n+fn main() {\n+}"}, {"sha": "3b88ac1f22bea6d24d18c4ab02d7bd26441450dc", "filename": "src/test/ui/chalkify/lower_env2.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_env2.stderr?ref=b5d1aac8837d053df75996a7f5b5e6d0760d8006", "patch": "@@ -0,0 +1,25 @@\n+error: program clause dump\n+  --> $DIR/lower_env2.rs:16:1\n+   |\n+LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: FromEnv(T: Foo) :- FromEnv(S<'a, T>).\n+   = note: FromEnv(T: std::marker::Sized) :- FromEnv(S<'a, T>).\n+   = note: TypeOutlives(T : 'a) :- FromEnv(S<'a, T>).\n+   = note: WellFormed(S<'a, T>) :- Implemented(T: std::marker::Sized), Implemented(T: Foo), TypeOutlives(T : 'a).\n+\n+error: program clause dump\n+  --> $DIR/lower_env2.rs:21:1\n+   |\n+LL | #[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: FromEnv(T: Foo) :- FromEnv(S<'a, T>).\n+   = note: FromEnv(T: std::marker::Sized) :- FromEnv(S<'a, T>).\n+   = note: Implemented(Self: Foo) :- FromEnv(Self: Foo).\n+   = note: Implemented(Self: std::marker::Sized) :- FromEnv(Self: std::marker::Sized).\n+   = note: TypeOutlives(T : 'a) :- FromEnv(S<'a, T>).\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "1f8bc49e30996ffa500223af0d52d18115957e9f", "filename": "src/test/ui/chalkify/lower_env3.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_env3.rs?ref=b5d1aac8837d053df75996a7f5b5e6d0760d8006", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+\n+trait Foo {\n+    #[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n+    fn foo(&self);\n+}\n+\n+impl<T> Foo for T where T: Clone {\n+    #[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n+    fn foo(&self) {\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "ac0f8e34cd437db975fefe0d7e43dd627da38f52", "filename": "src/test/ui/chalkify/lower_env3.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5d1aac8837d053df75996a7f5b5e6d0760d8006/src%2Ftest%2Fui%2Fchalkify%2Flower_env3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_env3.stderr?ref=b5d1aac8837d053df75996a7f5b5e6d0760d8006", "patch": "@@ -0,0 +1,20 @@\n+error: program clause dump\n+  --> $DIR/lower_env3.rs:15:5\n+   |\n+LL |     #[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: Implemented(Self: Foo) :- FromEnv(Self: Foo).\n+\n+error: program clause dump\n+  --> $DIR/lower_env3.rs:20:5\n+   |\n+LL |     #[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: FromEnv(Self: std::marker::Sized) :- FromEnv(Self: std::clone::Clone).\n+   = note: Implemented(Self: std::clone::Clone) :- FromEnv(Self: std::clone::Clone).\n+   = note: Implemented(Self: std::marker::Sized) :- FromEnv(Self: std::marker::Sized).\n+\n+error: aborting due to 2 previous errors\n+"}]}