{"sha": "4a69f55758bb71fc7fb163050bbdc563bdf0558b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhNjlmNTU3NThiYjcxZmM3ZmIxNjMwNTBiYmRjNTYzYmRmMDU1OGI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-15T09:55:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-15T09:55:40Z"}, "message": "Update for cranelift change", "tree": {"sha": "d33e9ef6ea0e0205533d915210cdb38bc672bd8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d33e9ef6ea0e0205533d915210cdb38bc672bd8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a69f55758bb71fc7fb163050bbdc563bdf0558b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a69f55758bb71fc7fb163050bbdc563bdf0558b", "html_url": "https://github.com/rust-lang/rust/commit/4a69f55758bb71fc7fb163050bbdc563bdf0558b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a69f55758bb71fc7fb163050bbdc563bdf0558b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ee6781f943fa72ac8fb90e7656150b6d78ecd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ee6781f943fa72ac8fb90e7656150b6d78ecd3", "html_url": "https://github.com/rust-lang/rust/commit/41ee6781f943fa72ac8fb90e7656150b6d78ecd3"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "efaf200fa1a45ac7a55584a2e92a02b1c3dd2971", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4a69f55758bb71fc7fb163050bbdc563bdf0558b/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a69f55758bb71fc7fb163050bbdc563bdf0558b/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=4a69f55758bb71fc7fb163050bbdc563bdf0558b", "patch": "@@ -10,6 +10,26 @@ use crate::prelude::*;\n pub struct CommentWriter(pub HashMap<Inst, String>);\n \n impl FuncWriter for CommentWriter {\n+    fn write_preamble(\n+        &mut self,\n+        w: &mut dyn fmt::Write,\n+        func: &Function,\n+        reg_info: Option<&isa::RegInfo>,\n+    ) -> Result<bool, fmt::Error> {\n+        PlainWriter.write_preamble(w, func, reg_info)\n+    }\n+\n+    fn write_ebb_header(\n+        &mut self,\n+        w: &mut dyn fmt::Write,\n+        func: &Function,\n+        isa: Option<&dyn isa::TargetIsa>,\n+        ebb: Ebb,\n+        indent: usize,\n+    ) -> fmt::Result {\n+        PlainWriter.write_ebb_header(w, func, isa, ebb, indent)\n+    }\n+\n     fn write_instruction(\n         &mut self,\n         w: &mut dyn fmt::Write,\n@@ -25,15 +45,6 @@ impl FuncWriter for CommentWriter {\n         }\n         Ok(())\n     }\n-\n-    fn write_preamble(\n-        &mut self,\n-        w: &mut dyn fmt::Write,\n-        func: &Function,\n-        reg_info: Option<&isa::RegInfo>,\n-    ) -> Result<bool, fmt::Error> {\n-        PlainWriter.write_preamble(w, func, reg_info)\n-    }\n }\n \n impl<'a, 'tcx: 'a, B: Backend + 'a> FunctionCx<'a, 'tcx, B> {"}]}