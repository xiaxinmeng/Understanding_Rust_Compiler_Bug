{"sha": "988b813649c147383bcce125c9afbb0adc681110", "node_id": "C_kwDOAAsO6NoAKDk4OGI4MTM2NDljMTQ3MzgzYmNjZTEyNWM5YWZiYjBhZGM2ODExMTA", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-07-02T19:32:29Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-07-02T19:48:46Z"}, "message": "Use correct substitutions when checking if `needless_borrow` can apply to a method receiver", "tree": {"sha": "edbbe07ece2d8c24afbd02a52fae4648197cad2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edbbe07ece2d8c24afbd02a52fae4648197cad2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/988b813649c147383bcce125c9afbb0adc681110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/988b813649c147383bcce125c9afbb0adc681110", "html_url": "https://github.com/rust-lang/rust/commit/988b813649c147383bcce125c9afbb0adc681110", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/988b813649c147383bcce125c9afbb0adc681110/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c341d66a1203d58e53fad206a131357550b2d7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c341d66a1203d58e53fad206a131357550b2d7b", "html_url": "https://github.com/rust-lang/rust/commit/8c341d66a1203d58e53fad206a131357550b2d7b"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "d6bd43a7494fec05565713da6fd2e5658f173992", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/988b813649c147383bcce125c9afbb0adc681110/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/988b813649c147383bcce125c9afbb0adc681110/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=988b813649c147383bcce125c9afbb0adc681110", "patch": "@@ -756,9 +756,14 @@ fn walk_parents<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) -> (Position, &\n                             } else if let Some(trait_id) = cx.tcx.trait_of_item(id)\n                                 && let arg_ty = cx.tcx.erase_regions(cx.typeck_results().expr_ty_adjusted(e))\n                                 && let ty::Ref(_, sub_ty, _) = *arg_ty.kind()\n-                                && let subs = cx.typeck_results().node_substs_opt(child_id).unwrap_or_else(\n-                                    || cx.tcx.mk_substs([].iter())\n-                                ) && let impl_ty = if cx.tcx.fn_sig(id).skip_binder().inputs()[0].is_ref() {\n+                                && let subs = match cx\n+                                    .typeck_results()\n+                                    .node_substs_opt(parent.hir_id)\n+                                    .and_then(|subs| subs.get(1..))\n+                                {\n+                                    Some(subs) => cx.tcx.mk_substs(subs.iter().copied()),\n+                                    None => cx.tcx.mk_substs([].iter()),\n+                                } && let impl_ty = if cx.tcx.fn_sig(id).skip_binder().inputs()[0].is_ref() {\n                                     // Trait methods taking `&self`\n                                     sub_ty\n                                 } else {"}, {"sha": "09afe2ddbbf6289e21d64cb36e1dea36053b51a0", "filename": "tests/ui/needless_borrow.fixed", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/988b813649c147383bcce125c9afbb0adc681110/tests%2Fui%2Fneedless_borrow.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/988b813649c147383bcce125c9afbb0adc681110/tests%2Fui%2Fneedless_borrow.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.fixed?ref=988b813649c147383bcce125c9afbb0adc681110", "patch": "@@ -115,6 +115,18 @@ fn main() {\n         fn foo_ref(&self) {}\n     }\n     (&&()).foo_ref(); // Don't lint. `&()` will call `<() as FooRef>::foo_ref`\n+\n+    struct S;\n+    impl From<S> for u32 {\n+        fn from(s: S) -> Self {\n+            (&s).into()\n+        }\n+    }\n+    impl From<&S> for u32 {\n+        fn from(s: &S) -> Self {\n+            0\n+        }\n+    }\n }\n \n #[allow(clippy::needless_borrowed_reference)]"}, {"sha": "3ae4722a1f8985e414ea3a9d49f85ccb397bf770", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/988b813649c147383bcce125c9afbb0adc681110/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/988b813649c147383bcce125c9afbb0adc681110/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=988b813649c147383bcce125c9afbb0adc681110", "patch": "@@ -115,6 +115,18 @@ fn main() {\n         fn foo_ref(&self) {}\n     }\n     (&&()).foo_ref(); // Don't lint. `&()` will call `<() as FooRef>::foo_ref`\n+\n+    struct S;\n+    impl From<S> for u32 {\n+        fn from(s: S) -> Self {\n+            (&s).into()\n+        }\n+    }\n+    impl From<&S> for u32 {\n+        fn from(s: &S) -> Self {\n+            0\n+        }\n+    }\n }\n \n #[allow(clippy::needless_borrowed_reference)]"}]}