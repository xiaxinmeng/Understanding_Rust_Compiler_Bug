{"sha": "7167f8b83f8dc441541a5bfeb087c5b25f787a84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNjdmOGI4M2Y4ZGM0NDE1NDFhNWJmZWIwODdjNWIyNWY3ODdhODQ=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-07-19T11:42:54Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-07-19T14:15:59Z"}, "message": "change output of dist cargo and clippy to be consistent with other tools", "tree": {"sha": "64974ec88e9a083b93881547e31f7e9539e9e23b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64974ec88e9a083b93881547e31f7e9539e9e23b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7167f8b83f8dc441541a5bfeb087c5b25f787a84", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmD1iR8ACgkQzXazX3c0\ndp4a1g//V7zCe1/usAYoigyPiq86467qAO+VE6PoYNrnWEp6W7som+BUe9M71Yai\nBk+0nzEyzBaPb72Ly+zt0GpgT/GqNt4LpIQYxIwD1HEINYtOKxapQp6n9zB7WKCc\ntQydLZc8M/u/bjldBmzE+RLQbx6OzYWczT4gL+kTePaB9UCpXqrD2QiRj5oJFMLC\ndk3xUBPisfCsraFiFVC5cN9hk7m3BU7IU3JnsG3jY3xOGaQ/y1xEWp+fhzKOqbJL\n7HW9A5Fgq4AMN6gHnK6yOFSH9CztJrYzMXUJ/jkHo79SUcgQpB9VazC5Cmq1FQeE\nInOPh/7L/brlDywou8avHEM3HTD4EKyZOiYBj4JjRePWFVNlOnSt8+K3lAdJxZpr\n1butUbGSfYC5OZ4X3KFhSfIubeeKancsgW/rTpAJV1CI7GowYlVAgcRsX5jzgp5F\nup+G25q1SRr4g0Ay0KFfJnR2ellmNI1Lcy5sfuXQQVvL1Guuw6MPA4QbXAt8YNeC\nxD0zh3/nG6vhr/WBIYDFAZyC2IepkdEXexIRvtr0Ax3zrkfhodiUwzAj84we+1OC\nMJOyL6Zt8kq+YHOW0BBiE+5TdTZGd//eCcUMdhGHjqsgLNLk4xCOfICX9p9K+Mcl\nNU1O1cP/b8i1tUwBuWQQUbTMzfBlTJvYagWI68VCvRMbYHxo96w=\n=BVsz\n-----END PGP SIGNATURE-----", "payload": "tree 64974ec88e9a083b93881547e31f7e9539e9e23b\nparent 0c8baa729dc3bb61713fdc198062e721c1ffa7c1\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1626694974 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1626704159 +0200\n\nchange output of dist cargo and clippy to be consistent with other tools\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7167f8b83f8dc441541a5bfeb087c5b25f787a84", "html_url": "https://github.com/rust-lang/rust/commit/7167f8b83f8dc441541a5bfeb087c5b25f787a84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7167f8b83f8dc441541a5bfeb087c5b25f787a84/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "html_url": "https://github.com/rust-lang/rust/commit/0c8baa729dc3bb61713fdc198062e721c1ffa7c1"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "62ca8bff405afde044972f6578965e91338521f2", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7167f8b83f8dc441541a5bfeb087c5b25f787a84/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7167f8b83f8dc441541a5bfeb087c5b25f787a84/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=7167f8b83f8dc441541a5bfeb087c5b25f787a84", "patch": "@@ -951,7 +951,7 @@ pub struct Cargo {\n }\n \n impl Step for Cargo {\n-    type Output = GeneratedTarball;\n+    type Output = Option<GeneratedTarball>;\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n@@ -969,7 +969,7 @@ impl Step for Cargo {\n         });\n     }\n \n-    fn run(self, builder: &Builder<'_>) -> GeneratedTarball {\n+    fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {\n         let compiler = self.compiler;\n         let target = self.target;\n \n@@ -994,7 +994,7 @@ impl Step for Cargo {\n             }\n         }\n \n-        tarball.generate()\n+        Some(tarball.generate())\n     }\n }\n \n@@ -1106,7 +1106,7 @@ pub struct Clippy {\n }\n \n impl Step for Clippy {\n-    type Output = GeneratedTarball;\n+    type Output = Option<GeneratedTarball>;\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n@@ -1124,7 +1124,7 @@ impl Step for Clippy {\n         });\n     }\n \n-    fn run(self, builder: &Builder<'_>) -> GeneratedTarball {\n+    fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {\n         let compiler = self.compiler;\n         let target = self.target;\n         assert!(builder.config.extended);\n@@ -1145,7 +1145,7 @@ impl Step for Clippy {\n         tarball.add_file(clippy, \"bin\", 0o755);\n         tarball.add_file(cargoclippy, \"bin\", 0o755);\n         tarball.add_legal_and_readme_to(\"share/doc/clippy\");\n-        tarball.generate()\n+        Some(tarball.generate())\n     }\n }\n \n@@ -1374,8 +1374,8 @@ impl Step for Extended {\n             return;\n         }\n \n-        tarballs.push(cargo_installer);\n-        tarballs.push(clippy_installer);\n+        tarballs.extend(cargo_installer);\n+        tarballs.extend(clippy_installer);\n         tarballs.extend(rust_demangler_installer.clone());\n         tarballs.extend(rls_installer.clone());\n         tarballs.extend(rust_analyzer_installer.clone());"}, {"sha": "72a9ff2d5a7945bfdb06658a7ec78ed48fe2e5b2", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7167f8b83f8dc441541a5bfeb087c5b25f787a84/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7167f8b83f8dc441541a5bfeb087c5b25f787a84/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=7167f8b83f8dc441541a5bfeb087c5b25f787a84", "patch": "@@ -154,7 +154,9 @@ install!((self, builder, _config),\n         }\n     };\n     Cargo, \"cargo\", Self::should_build(_config), only_hosts: true, {\n-        let tarball = builder.ensure(dist::Cargo { compiler: self.compiler, target: self.target });\n+        let tarball = builder\n+            .ensure(dist::Cargo { compiler: self.compiler, target: self.target })\n+            .expect(\"missing cargo\");\n         install_sh(builder, \"cargo\", self.compiler.stage, Some(self.target), &tarball);\n     };\n     Rls, \"rls\", Self::should_build(_config), only_hosts: true, {\n@@ -178,7 +180,9 @@ install!((self, builder, _config),\n         }\n     };\n     Clippy, \"clippy\", Self::should_build(_config), only_hosts: true, {\n-        let tarball = builder.ensure(dist::Clippy { compiler: self.compiler, target: self.target });\n+        let tarball = builder\n+            .ensure(dist::Clippy { compiler: self.compiler, target: self.target })\n+            .expect(\"missing clippy\");\n         install_sh(builder, \"clippy\", self.compiler.stage, Some(self.target), &tarball);\n     };\n     Miri, \"miri\", Self::should_build(_config), only_hosts: true, {"}]}