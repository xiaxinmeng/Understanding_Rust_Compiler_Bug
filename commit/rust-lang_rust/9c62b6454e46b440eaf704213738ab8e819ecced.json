{"sha": "9c62b6454e46b440eaf704213738ab8e819ecced", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNjJiNjQ1NGU0NmI0NDBlYWY3MDQyMTM3MzhhYjhlODE5ZWNjZWQ=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-09-09T09:36:39Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-09-09T09:36:39Z"}, "message": "`rustc_mir` -> `rustc_const_eval`", "tree": {"sha": "5de20e2ddff36233802e15b5638f78c149406be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5de20e2ddff36233802e15b5638f78c149406be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c62b6454e46b440eaf704213738ab8e819ecced", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYTnVpxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLhhIQD/UJrurccbm0dRTP+Mq3+JWcfVrjnI\nD5NYNNLv1SqillEA+gISm0nEOMEH3YgwTApEscX3rL2yMhCaU9pJS41nLzUN\n=nv2q\n-----END PGP SIGNATURE-----", "payload": "tree 5de20e2ddff36233802e15b5638f78c149406be2\nparent 1cc822e6afaa3a84f0d68a590e9bacdf80017ea6\nauthor hyd-dev <yd-huang@outlook.com> 1631180199 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1631180199 +0800\n\n`rustc_mir` -> `rustc_const_eval`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c62b6454e46b440eaf704213738ab8e819ecced", "html_url": "https://github.com/rust-lang/rust/commit/9c62b6454e46b440eaf704213738ab8e819ecced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c62b6454e46b440eaf704213738ab8e819ecced/comments", "author": null, "committer": null, "parents": [{"sha": "1cc822e6afaa3a84f0d68a590e9bacdf80017ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cc822e6afaa3a84f0d68a590e9bacdf80017ea6", "html_url": "https://github.com/rust-lang/rust/commit/1cc822e6afaa3a84f0d68a590e9bacdf80017ea6"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "c3b3aed9a426462ab7d6513eb480766c95fcb42b", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c62b6454e46b440eaf704213738ab8e819ecced/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/9c62b6454e46b440eaf704213738ab8e819ecced/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=9c62b6454e46b440eaf704213738ab8e819ecced", "patch": "@@ -1 +1 @@\n-1c858ba5bf7bd06c1a970efbf77053c8380b3151\n+c5cbf7852a7692c7c51df64c09a59e7838b55202"}, {"sha": "36e7f1bfddaad97de9e4bddb5f3b09f3b42602a6", "filename": "src/bin/miri.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=9c62b6454e46b440eaf704213738ab8e819ecced", "patch": "@@ -164,11 +164,14 @@ fn init_late_loggers(tcx: TyCtxt<'_>) {\n             // used for everything, we only apply it to the parts of rustc that are\n             // CTFE-related. Otherwise, we use it verbatim for `RUSTC_LOG`.\n             // This way, if you set `MIRI_LOG=trace`, you get only the right parts of\n-            // rustc traced, but you can also do `MIRI_LOG=miri=trace,rustc_mir::interpret=debug`.\n+            // rustc traced, but you can also do `MIRI_LOG=miri=trace,rustc_const_eval::interpret=debug`.\n             if log::Level::from_str(&var).is_ok() {\n                 env::set_var(\n                     \"RUSTC_LOG\",\n-                    &format!(\"rustc_middle::mir::interpret={0},rustc_mir::interpret={0}\", var),\n+                    &format!(\n+                        \"rustc_middle::mir::interpret={0},rustc_const_eval::interpret={0}\",\n+                        var\n+                    ),\n                 );\n             } else {\n                 env::set_var(\"RUSTC_LOG\", &var);"}, {"sha": "c786487d4a146f34b06d203d76246ef1c06961ac", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=9c62b6454e46b440eaf704213738ab8e819ecced", "patch": "@@ -11,10 +11,10 @@ extern crate rustc_apfloat;\n extern crate rustc_ast;\n #[macro_use]\n extern crate rustc_middle;\n+extern crate rustc_const_eval;\n extern crate rustc_data_structures;\n extern crate rustc_hir;\n extern crate rustc_index;\n-extern crate rustc_mir;\n extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;\n@@ -37,9 +37,9 @@ mod vector_clock;\n // Establish a \"crate-wide prelude\": we often import `crate::*`.\n \n // Make all those symbols available in the same place as our own.\n-pub use rustc_mir::interpret::*;\n+pub use rustc_const_eval::interpret::*;\n // Resolve ambiguity.\n-pub use rustc_mir::interpret::{self, AllocMap, PlaceTy};\n+pub use rustc_const_eval::interpret::{self, AllocMap, PlaceTy};\n \n pub use crate::shims::dlsym::{Dlsym, EvalContextExt as _};\n pub use crate::shims::env::{EnvVars, EvalContextExt as _};"}, {"sha": "23278a4891fb7cf623c31605d2f517e3f8df47a8", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=9c62b6454e46b440eaf704213738ab8e819ecced", "patch": "@@ -457,7 +457,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n \n     #[inline(always)]\n     fn call_intrinsic(\n-        ecx: &mut rustc_mir::interpret::InterpCx<'mir, 'tcx, Self>,\n+        ecx: &mut rustc_const_eval::interpret::InterpCx<'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx, Tag>],\n         ret: Option<(&PlaceTy<'tcx, Tag>, mir::BasicBlock)>,\n@@ -482,7 +482,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n \n     #[inline(always)]\n     fn binary_ptr_op(\n-        ecx: &rustc_mir::interpret::InterpCx<'mir, 'tcx, Self>,\n+        ecx: &rustc_const_eval::interpret::InterpCx<'mir, 'tcx, Self>,\n         bin_op: mir::BinOp,\n         left: &ImmTy<'tcx, Tag>,\n         right: &ImmTy<'tcx, Tag>,"}, {"sha": "4d297fd935d53f275cf67f8a97104918495a63ac", "filename": "src/shims/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c62b6454e46b440eaf704213738ab8e819ecced/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=9c62b6454e46b440eaf704213738ab8e819ecced", "patch": "@@ -3,9 +3,9 @@ use std::env;\n use std::ffi::{OsStr, OsString};\n use std::io::ErrorKind;\n \n+use rustc_const_eval::interpret::Pointer;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::ty::layout::LayoutOf;\n-use rustc_mir::interpret::Pointer;\n use rustc_target::abi::Size;\n \n use crate::*;"}]}