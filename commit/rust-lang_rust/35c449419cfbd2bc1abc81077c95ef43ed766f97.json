{"sha": "35c449419cfbd2bc1abc81077c95ef43ed766f97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YzQ0OTQxOWNmYmQyYmMxYWJjODEwNzdjOTVlZjQzZWQ3NjZmOTc=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-08-23T00:27:00Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-08-23T03:39:56Z"}, "message": "fn_must_use soft feature-gate warning on methods too, not only functions\n\nThis continues to be in the matter of #43302.", "tree": {"sha": "f8f5facf0819d103607dd504896e9a5ea9d91cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8f5facf0819d103607dd504896e9a5ea9d91cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35c449419cfbd2bc1abc81077c95ef43ed766f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35c449419cfbd2bc1abc81077c95ef43ed766f97", "html_url": "https://github.com/rust-lang/rust/commit/35c449419cfbd2bc1abc81077c95ef43ed766f97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35c449419cfbd2bc1abc81077c95ef43ed766f97/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8492ad2479379d2e07ccf2d3439ec29b19d164b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8492ad2479379d2e07ccf2d3439ec29b19d164b8", "html_url": "https://github.com/rust-lang/rust/commit/8492ad2479379d2e07ccf2d3439ec29b19d164b8"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "09574d5ba129e80282dea9f6ff850371507d1166", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/35c449419cfbd2bc1abc81077c95ef43ed766f97/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c449419cfbd2bc1abc81077c95ef43ed766f97/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=35c449419cfbd2bc1abc81077c95ef43ed766f97", "patch": "@@ -1318,7 +1318,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                                     and possibly buggy\");\n             }\n \n-            ast::ItemKind::Impl(_, polarity, defaultness, _, _, _, _) => {\n+            ast::ItemKind::Impl(_, polarity, defaultness, _, _, _, ref impl_items) => {\n                 if polarity == ast::ImplPolarity::Negative {\n                     gate_feature_post!(&self, optin_builtin_traits,\n                                        i.span,\n@@ -1331,6 +1331,16 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                                        i.span,\n                                        \"specialization is unstable\");\n                 }\n+\n+                for impl_item in impl_items {\n+                    if let ast::ImplItemKind::Method(..) = impl_item.node {\n+                        if attr::contains_name(&impl_item.attrs[..], \"must_use\") {\n+                            gate_feature_post!(&self, fn_must_use, impl_item.span,\n+                                               \"`#[must_use]` on methods is experimental\",\n+                                               GateStrength::Soft);\n+                        }\n+                    }\n+                }\n             }\n \n             ast::ItemKind::MacroDef(ast::MacroDef { legacy: false, .. }) => {"}, {"sha": "2dd6b904072676243b72b9ef882460c0b00b6633", "filename": "src/test/compile-fail/feature-gate-fn_must_use.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35c449419cfbd2bc1abc81077c95ef43ed766f97/src%2Ftest%2Fcompile-fail%2Ffeature-gate-fn_must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c449419cfbd2bc1abc81077c95ef43ed766f97/src%2Ftest%2Fcompile-fail%2Ffeature-gate-fn_must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-fn_must_use.rs?ref=35c449419cfbd2bc1abc81077c95ef43ed766f97", "patch": "@@ -10,6 +10,13 @@\n \n #![feature(rustc_attrs)]\n \n+struct MyStruct;\n+\n+impl MyStruct {\n+    #[must_use]\n+    fn need_to_use_method() -> bool { true } //~ WARN `#[must_use]` on methods is experimental\n+}\n+\n #[must_use]\n fn need_to_use_it() -> bool { true } //~ WARN `#[must_use]` on functions is experimental\n "}]}