{"sha": "84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YmMzNGU3MGUyYmU5YTBkNDA4N2JhMDMwZjcxNTNmY2YwMDNlZTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-23T22:09:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-23T22:09:02Z"}, "message": "Rollup merge of #56916 - oli-obk:static_mut_beta_regression, r=davidtwco\n\nFix mutable references in `static mut`\n\nfixes #56903", "tree": {"sha": "4f9268edfe45ce5d4c3a78a042da10f2ddb89ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f9268edfe45ce5d4c3a78a042da10f2ddb89ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcIAd+CRBK7hj4Ov3rIwAAdHIIAH4UVnkVApSrkILg013HYV91\ng6tPtwG+BenhBoJ+tHlZh3Oik9wlDa3fg6j+tmcuEU0cBRkZNaMdpBEMwX9zd7Re\npvuXvM/5O9n36p/zi15VMUY9doKfn3K6Li+/eUIPpUScKbbdWEElCR0wBCf4Zyc8\nIyDm1dPbpvNy+M2Iq78/fxZIket/rAxOsVwEHrAKsn58GBNioToPQ53oKU5fUHMn\njUeHbhcU+6RiyIiyZk3//pmuD55X0sjyfbR5XuORiVQQm51rWjsH/hpybP3l3iTT\nQ0cVkIDTaI7/wKMGqfnWgsIAavcxMHPkSVbHDkXz1pyw5xFgjQyA9seiPGQBDYs=\n=izjd\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f9268edfe45ce5d4c3a78a042da10f2ddb89ed0\nparent 90a35861dd3f5bdf2b023c24c6dc45bb88485996\nparent 6ed596ebe245df1a8de8a609222c8e217508f6dd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1545602942 +0100\ncommitter GitHub <noreply@github.com> 1545602942 +0100\n\nRollup merge of #56916 - oli-obk:static_mut_beta_regression, r=davidtwco\n\nFix mutable references in `static mut`\n\nfixes #56903\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "html_url": "https://github.com/rust-lang/rust/commit/84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90a35861dd3f5bdf2b023c24c6dc45bb88485996", "url": "https://api.github.com/repos/rust-lang/rust/commits/90a35861dd3f5bdf2b023c24c6dc45bb88485996", "html_url": "https://github.com/rust-lang/rust/commit/90a35861dd3f5bdf2b023c24c6dc45bb88485996"}, {"sha": "6ed596ebe245df1a8de8a609222c8e217508f6dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed596ebe245df1a8de8a609222c8e217508f6dd", "html_url": "https://github.com/rust-lang/rust/commit/6ed596ebe245df1a8de8a609222c8e217508f6dd"}], "stats": {"total": 75, "additions": 69, "deletions": 6}, "files": [{"sha": "646a671d4a2ce50494cc15dc61324fbab8a50356", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -518,7 +518,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n \n                 // Only allow statics (not consts) to refer to other statics.\n                 if self.mode == Mode::Static || self.mode == Mode::StaticMut {\n-                    if context.is_mutating_use() {\n+                    if self.mode == Mode::Static && context.is_mutating_use() {\n                         // this is not strictly necessary as miri will also bail out\n                         // For interior mutability we can't really catch this statically as that\n                         // goes through raw pointers and intermediate temporaries, so miri has"}, {"sha": "27e1a111163b15999cc7c9f34718bc6f40d4cf2b", "filename": "src/test/ui/consts/static_mut_containing_mut_ref.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref.rs?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -0,0 +1,7 @@\n+// compile-pass\n+\n+static mut STDERR_BUFFER_SPACE: [u8; 42] = [0u8; 42];\n+\n+pub static mut STDERR_BUFFER: *mut [u8] = unsafe { &mut STDERR_BUFFER_SPACE };\n+\n+fn main() {}"}, {"sha": "4180b1e295ab049d4eaceb20aca335d07d5e479c", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_let)]\n+\n+static mut STDERR_BUFFER_SPACE: u8 = 0;\n+\n+pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n+//~^ ERROR references in statics may only refer to immutable values\n+//~| ERROR static contains unimplemented expression type\n+\n+fn main() {}"}, {"sha": "f0ae1545056b7ad3ac98d209eb0d3fa7d5e81db5", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stderr?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -0,0 +1,16 @@\n+error[E0017]: references in statics may only refer to immutable values\n+  --> $DIR/static_mut_containing_mut_ref2.rs:5:46\n+   |\n+LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ statics require immutable values\n+\n+error[E0019]: static contains unimplemented expression type\n+  --> $DIR/static_mut_containing_mut_ref2.rs:5:45\n+   |\n+LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n+   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0017, E0019.\n+For more information about an error, try `rustc --explain E0017`."}, {"sha": "0bc7faa9afdec7b2d170a33883be90041fcfe459", "filename": "src/test/ui/consts/static_mut_containing_mut_ref3.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref3.rs?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -0,0 +1,8 @@\n+#![feature(const_let)]\n+\n+static mut FOO: (u8, u8) = (42, 43);\n+\n+static mut BAR: () = unsafe { FOO.0 = 99; };\n+//~^ ERROR could not evaluate static initializer\n+\n+fn main() {}"}, {"sha": "cae53c6fee9dd9d6297adb4c4a1276e550777a57", "filename": "src/test/ui/consts/static_mut_containing_mut_ref3.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref3.stderr?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -0,0 +1,9 @@\n+error[E0080]: could not evaluate static initializer\n+  --> $DIR/static_mut_containing_mut_ref3.rs:5:31\n+   |\n+LL | static mut BAR: () = unsafe { FOO.0 = 99; };\n+   |                               ^^^^^^^^^^ tried to modify a static's initial value from another static's initializer\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "983b5d48e60fc0a9a988dfb9b0d59f294857de38", "filename": "src/test/ui/write-to-static-mut-in-static.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.rs?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -12,10 +12,10 @@\n \n pub static mut A: u32 = 0;\n pub static mut B: () = unsafe { A = 1; };\n-//~^ ERROR cannot mutate statics in the initializer of another static\n+//~^ ERROR could not evaluate static initializer\n \n pub static mut C: u32 = unsafe { C = 1; 0 };\n-//~^ ERROR cannot mutate statics in the initializer of another static\n+//~^ ERROR cycle detected\n \n pub static D: u32 = D;\n "}, {"sha": "335f849fb2472604ee970ed46e4fa490af1d6024", "filename": "src/test/ui/write-to-static-mut-in-static.stderr", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84bc34e70e2be9a0d4087ba030f7153fcf003ee9/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.stderr?ref=84bc34e70e2be9a0d4087ba030f7153fcf003ee9", "patch": "@@ -1,14 +1,28 @@\n-error: cannot mutate statics in the initializer of another static\n+error[E0080]: could not evaluate static initializer\n   --> $DIR/write-to-static-mut-in-static.rs:14:33\n    |\n LL | pub static mut B: () = unsafe { A = 1; };\n-   |                                 ^^^^^\n+   |                                 ^^^^^ tried to modify a static's initial value from another static's initializer\n \n-error: cannot mutate statics in the initializer of another static\n+error[E0391]: cycle detected when const-evaluating `C`\n   --> $DIR/write-to-static-mut-in-static.rs:17:34\n    |\n LL | pub static mut C: u32 = unsafe { C = 1; 0 };\n    |                                  ^^^^^\n+   |\n+note: ...which requires const-evaluating `C`...\n+  --> $DIR/write-to-static-mut-in-static.rs:17:1\n+   |\n+LL | pub static mut C: u32 = unsafe { C = 1; 0 };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: ...which again requires const-evaluating `C`, completing the cycle\n+note: cycle used when const-evaluating + checking `C`\n+  --> $DIR/write-to-static-mut-in-static.rs:17:1\n+   |\n+LL | pub static mut C: u32 = unsafe { C = 1; 0 };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n \n+Some errors occurred: E0080, E0391.\n+For more information about an error, try `rustc --explain E0080`."}]}