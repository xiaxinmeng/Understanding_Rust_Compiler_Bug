{"sha": "fd8c06e7b56baab37ce6154cca6c518a76d54a78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkOGMwNmU3YjU2YmFhYjM3Y2U2MTU0Y2NhNmM1MThhNzZkNTRhNzg=", "commit": {"author": {"name": "Mark Rowe", "email": "mrowe@bdash.net.nz", "date": "2013-10-22T09:50:52Z"}, "committer": {"name": "Mark Rowe", "email": "mrowe@bdash.net.nz", "date": "2013-10-22T10:02:25Z"}, "message": "Fix unwinding on OS X 10.9.\n\nOS X 10.9's linker has a bug that results in it failing to preserve\nDWARF unwind information when passed the -no_compact_unwind flag.\nThis flag is passed on OS X because the unwind information for\n__morestack cannot be represented by the compact unwind format.\n\nWe can work around this problem by using a more targeted approach\nto disabling compact unwind information. The OS X linker looks for\na particular pattern in the DWARF unwind information and will not\nattempt to convert the unwind information to the compact format.\nThe pattern in question is the return address register being saved\ntwice to the same location.\n\nFixes #6849.", "tree": {"sha": "bad666332975507e4782bbf90b5aa053f0b7f37c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bad666332975507e4782bbf90b5aa053f0b7f37c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd8c06e7b56baab37ce6154cca6c518a76d54a78", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8c06e7b56baab37ce6154cca6c518a76d54a78", "html_url": "https://github.com/rust-lang/rust/commit/fd8c06e7b56baab37ce6154cca6c518a76d54a78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd8c06e7b56baab37ce6154cca6c518a76d54a78/comments", "author": {"login": "bdash", "id": 54825, "node_id": "MDQ6VXNlcjU0ODI1", "avatar_url": "https://avatars.githubusercontent.com/u/54825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdash", "html_url": "https://github.com/bdash", "followers_url": "https://api.github.com/users/bdash/followers", "following_url": "https://api.github.com/users/bdash/following{/other_user}", "gists_url": "https://api.github.com/users/bdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdash/subscriptions", "organizations_url": "https://api.github.com/users/bdash/orgs", "repos_url": "https://api.github.com/users/bdash/repos", "events_url": "https://api.github.com/users/bdash/events{/privacy}", "received_events_url": "https://api.github.com/users/bdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdash", "id": 54825, "node_id": "MDQ6VXNlcjU0ODI1", "avatar_url": "https://avatars.githubusercontent.com/u/54825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdash", "html_url": "https://github.com/bdash", "followers_url": "https://api.github.com/users/bdash/followers", "following_url": "https://api.github.com/users/bdash/following{/other_user}", "gists_url": "https://api.github.com/users/bdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdash/subscriptions", "organizations_url": "https://api.github.com/users/bdash/orgs", "repos_url": "https://api.github.com/users/bdash/repos", "events_url": "https://api.github.com/users/bdash/events{/privacy}", "received_events_url": "https://api.github.com/users/bdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e4404b6fbbf28bbe115ab8837f929e51c831a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e4404b6fbbf28bbe115ab8837f929e51c831a31", "html_url": "https://github.com/rust-lang/rust/commit/7e4404b6fbbf28bbe115ab8837f929e51c831a31"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "27fe373b761eafa8cfc42631c03686b3b8aba4a3", "filename": "mk/platform.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd8c06e7b56baab37ce6154cca6c518a76d54a78/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/fd8c06e7b56baab37ce6154cca6c518a76d54a78/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=fd8c06e7b56baab37ce6154cca6c518a76d54a78", "patch": "@@ -204,7 +204,7 @@ CFG_LIB_GLOB_x86_64-apple-darwin=lib$(1)-*.dylib\n CFG_LIB_DSYM_GLOB_x86_64-apple-darwin=lib$(1)-*.dylib.dSYM\n CFG_GCCISH_CFLAGS_x86_64-apple-darwin := -Wall -Werror -g -fPIC -m64 -arch x86_64\n CFG_GCCISH_CXXFLAGS_x86_64-apple-darwin := -fno-rtti\n-CFG_GCCISH_LINK_FLAGS_x86_64-apple-darwin := -dynamiclib -pthread  -framework CoreServices -Wl,-no_compact_unwind -m64\n+CFG_GCCISH_LINK_FLAGS_x86_64-apple-darwin := -dynamiclib -pthread  -framework CoreServices -m64\n CFG_GCCISH_DEF_FLAG_x86_64-apple-darwin := -Wl,-exported_symbols_list,\n CFG_GCCISH_PRE_LIB_FLAGS_x86_64-apple-darwin :=\n CFG_GCCISH_POST_LIB_FLAGS_x86_64-apple-darwin :=\n@@ -230,7 +230,7 @@ CFG_LIB_GLOB_i686-apple-darwin=lib$(1)-*.dylib\n CFG_LIB_DSYM_GLOB_i686-apple-darwin=lib$(1)-*.dylib.dSYM\n CFG_GCCISH_CFLAGS_i686-apple-darwin := -Wall -Werror -g -fPIC -m32 -arch i386\n CFG_GCCISH_CXXFLAGS_i686-apple-darwin := -fno-rtti\n-CFG_GCCISH_LINK_FLAGS_i686-apple-darwin := -dynamiclib -pthread  -framework CoreServices -Wl,-no_compact_unwind -m32\n+CFG_GCCISH_LINK_FLAGS_i686-apple-darwin := -dynamiclib -pthread  -framework CoreServices -m32\n CFG_GCCISH_DEF_FLAG_i686-apple-darwin := -Wl,-exported_symbols_list,\n CFG_GCCISH_PRE_LIB_FLAGS_i686-apple-darwin :=\n CFG_GCCISH_POST_LIB_FLAGS_i686-apple-darwin :="}, {"sha": "ad74aa68dd3e40f77ac9641b76856d4e53d289bc", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fd8c06e7b56baab37ce6154cca6c518a76d54a78/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd8c06e7b56baab37ce6154cca6c518a76d54a78/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=fd8c06e7b56baab37ce6154cca6c518a76d54a78", "patch": "@@ -1112,14 +1112,6 @@ pub fn link_args(sess: Session,\n                        ~\"-Wl,-rpath,/usr/local/lib/gcc44\"]);\n     }\n \n-    // OS X 10.6 introduced 'compact unwind info', which is produced by the\n-    // linker from the dwarf unwind info. Unfortunately, it does not seem to\n-    // understand how to unwind our __morestack frame, so we have to turn it\n-    // off. This has impacted some other projects like GHC.\n-    if sess.targ_cfg.os == session::OsMacos {\n-        args.push(~\"-Wl,-no_compact_unwind\");\n-    }\n-\n     // Stack growth requires statically linking a __morestack function\n     args.push(~\"-lmorestack\");\n "}, {"sha": "2f03251e54ae5e8a26f878c42beb31d0803ac85b", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fd8c06e7b56baab37ce6154cca6c518a76d54a78/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/fd8c06e7b56baab37ce6154cca6c518a76d54a78/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=fd8c06e7b56baab37ce6154cca6c518a76d54a78", "patch": "@@ -62,9 +62,9 @@\n \tis that OS X 10.6+ uses its own 'compact unwind info',\n \tan undocumented format generated by the linker from\n \tthe DWARF CFI. This compact unwind info doesn't correctly\n-\tcapture the nuance of the __morestack frame, and as a\n-\tresult all of our linking on OS X uses the -no_compact_unwind\n-\tflag.\n+\tcapture the nuance of the __morestack frame, so we need to\n+\tprevent the linker from attempting to convert its DWARF unwind\n+\tinformation.\n */\n \n .text\n@@ -118,6 +118,15 @@ MORESTACK:\n         // FIXME(#9854) these cfi directives don't work on windows.\n \n \tpushl %ebp\n+\n+#if defined(__APPLE__)\n+\t// The pattern of the return address being saved twice to the same location\n+\t// tells the OS X linker that it should not attempt to convert the DWARF\n+\t// unwind information to the compact format.\n+\t.cfi_offset %eip, -4\n+\t.cfi_offset %eip, -4\n+#endif\n+\n \t// The CFA is 20 bytes above the register that it is\n \t// associated with for this frame (which will be %ebp)\n \t.cfi_def_cfa_offset 20"}, {"sha": "6ccabbf5994d5f4549f870540ec3cb4b5a0968bd", "filename": "src/rt/arch/x86_64/morestack.S", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fd8c06e7b56baab37ce6154cca6c518a76d54a78/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/fd8c06e7b56baab37ce6154cca6c518a76d54a78/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=fd8c06e7b56baab37ce6154cca6c518a76d54a78", "patch": "@@ -43,6 +43,15 @@ MORESTACK:\n \t// bytes greater than a normal frame, to allow the unwinder\n \t// to skip the partial frame of the original function.\n \t.cfi_def_cfa_offset 24\n+\n+#if defined(__APPLE__)\n+\t// The pattern of the return address being saved twice to the same location\n+\t// tells the OS X linker that it should not attempt to convert the DWARF\n+\t// unwind information to the compact format.\n+\t.cfi_offset %rip, -8\n+\t.cfi_offset %rip, -8\n+#endif\n+\n \t// %rbp is -24 bytes from the CFA\n \t.cfi_offset %rbp, -24\n \tmovq %rsp, %rbp"}]}