{"sha": "25fab7ecf5192406de74bbfa9978e3ef53681386", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZmFiN2VjZjUxOTI0MDZkZTc0YmJmYTk5NzhlM2VmNTM2ODEzODY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-08T22:12:26Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-12T19:50:46Z"}, "message": "Rename in librustc_codegen_ssa.", "tree": {"sha": "fb975b7ebee419ccc169fdc04cb64cea11343a1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb975b7ebee419ccc169fdc04cb64cea11343a1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25fab7ecf5192406de74bbfa9978e3ef53681386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25fab7ecf5192406de74bbfa9978e3ef53681386", "html_url": "https://github.com/rust-lang/rust/commit/25fab7ecf5192406de74bbfa9978e3ef53681386", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25fab7ecf5192406de74bbfa9978e3ef53681386/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67125260ba28c5f1a113794b7198033ab408c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/c67125260ba28c5f1a113794b7198033ab408c28", "html_url": "https://github.com/rust-lang/rust/commit/c67125260ba28c5f1a113794b7198033ab408c28"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "181787e398546c7ecca299fe414183f8989819bf", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25fab7ecf5192406de74bbfa9978e3ef53681386/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fab7ecf5192406de74bbfa9978e3ef53681386/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=25fab7ecf5192406de74bbfa9978e3ef53681386", "patch": "@@ -14,7 +14,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         constant: &mir::Constant<'tcx>,\n     ) -> Result<&'tcx ty::Const<'tcx>, ErrorHandled> {\n         match constant.literal.val {\n-            mir::interpret::ConstValue::Unevaluated(def_id, ref substs) => {\n+            ty::ConstKind::Unevaluated(def_id, ref substs) => {\n                 let substs = self.monomorphize(substs);\n                 let instance = ty::Instance::resolve(\n                     self.cx.tcx(), ty::ParamEnv::reveal_all(), def_id, substs,"}, {"sha": "78d09f834c68c9a147d4e987347af4da47a1b3e7", "filename": "src/librustc_codegen_ssa/mir/operand.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/25fab7ecf5192406de74bbfa9978e3ef53681386/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fab7ecf5192406de74bbfa9978e3ef53681386/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs?ref=25fab7ecf5192406de74bbfa9978e3ef53681386", "patch": "@@ -75,12 +75,12 @@ impl<'a, 'tcx, V: CodegenObject> OperandRef<'tcx, V> {\n             return OperandRef::new_zst(bx, layout);\n         }\n \n-        let val = match val.val {\n-            ConstValue::Unevaluated(..) => bug!(\"unevaluated constant in `OperandRef::from_const`\"),\n-            ConstValue::Param(_) => bug!(\"encountered a ConstValue::Param in codegen\"),\n-            ConstValue::Infer(_) => bug!(\"encountered a ConstValue::Infer in codegen\"),\n-            ConstValue::Bound(..) => bug!(\"encountered a ConstValue::Bound in codegen\"),\n-            ConstValue::Placeholder(_) => bug!(\"encountered a ConstValue::Placeholder in codegen\"),\n+        let val_val = match val.val {\n+            ty::ConstKind::Value(val_val) => val_val,\n+            _ => bug!(\"encountered bad ConstKind in codegen\"),\n+        };\n+\n+        let val = match val_val {\n             ConstValue::Scalar(x) => {\n                 let scalar = match layout.abi {\n                     layout::Abi::Scalar(ref x) => x,"}, {"sha": "d515f114c77f09cbd2e27881711ebfca0eec0f4d", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25fab7ecf5192406de74bbfa9978e3ef53681386/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fab7ecf5192406de74bbfa9978e3ef53681386/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=25fab7ecf5192406de74bbfa9978e3ef53681386", "patch": "@@ -480,7 +480,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 let layout = cx.layout_of(self.monomorphize(&ty));\n                 match bx.tcx().const_eval(param_env.and(cid)) {\n                     Ok(val) => match val.val {\n-                        mir::interpret::ConstValue::ByRef { alloc, offset } => {\n+                        ty::ConstKind::Value(mir::interpret::ConstValue::ByRef { alloc, offset }) => {\n                             bx.cx().from_const_alloc(layout, alloc, offset)\n                         }\n                         _ => bug!(\"promoteds should have an allocation: {:?}\", val),"}]}