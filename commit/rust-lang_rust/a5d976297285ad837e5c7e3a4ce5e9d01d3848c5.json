{"sha": "a5d976297285ad837e5c7e3a4ce5e9d01d3848c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZDk3NjI5NzI4NWFkODM3ZTVjN2UzYTRjZTVlOWQwMWQzODQ4YzU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:11:31Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:32Z"}, "message": "librustc: De-`@mut` `impl_dups` in method checking", "tree": {"sha": "390f3ffdfe5220a3eea275ac0d416e2bc7da2c9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/390f3ffdfe5220a3eea275ac0d416e2bc7da2c9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5", "html_url": "https://github.com/rust-lang/rust/commit/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c87c7a2374dbdc5d5662af8548e95bbb616584", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c87c7a2374dbdc5d5662af8548e95bbb616584", "html_url": "https://github.com/rust-lang/rust/commit/d9c87c7a2374dbdc5d5662af8548e95bbb616584"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "57c83adac88763dce67dcbd1e5dce2e7c84a654e", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=a5d976297285ad837e5c7e3a4ce5e9d01d3848c5", "patch": "@@ -95,6 +95,7 @@ use middle::typeck::check::regionmanip::replace_bound_regions_in_fn_sig;\n use util::common::indenter;\n use util::ppaux::Repr;\n \n+use std::cell::RefCell;\n use std::hashmap::HashSet;\n use std::result;\n use std::vec;\n@@ -132,7 +133,7 @@ pub fn lookup(\n         check_traits: CheckTraitsFlag,      // Whether we check traits only.\n         autoderef_receiver: AutoderefReceiverFlag)\n      -> Option<method_map_entry> {\n-    let impl_dups = @mut HashSet::new();\n+    let impl_dups = @RefCell::new(HashSet::new());\n     let lcx = LookupContext {\n         fcx: fcx,\n         expr: expr,\n@@ -174,7 +175,7 @@ pub struct LookupContext<'a> {\n     callee_id: NodeId,\n     m_name: ast::Name,\n     supplied_tps: &'a [ty::t],\n-    impl_dups: @mut HashSet<DefId>,\n+    impl_dups: @RefCell<HashSet<DefId>>,\n     inherent_candidates: @mut ~[Candidate],\n     extension_candidates: @mut ~[Candidate],\n     deref_args: check::DerefArgs,\n@@ -540,8 +541,11 @@ impl<'a> LookupContext<'a> {\n     fn push_candidates_from_impl(&self,\n                                      candidates: &mut ~[Candidate],\n                                      impl_info: &ty::Impl) {\n-        if !self.impl_dups.insert(impl_info.did) {\n-            return; // already visited\n+        {\n+            let mut impl_dups = self.impl_dups.borrow_mut();\n+            if !impl_dups.get().insert(impl_info.did) {\n+                return; // already visited\n+            }\n         }\n         debug!(\"push_candidates_from_impl: {} {} {}\",\n                token::interner_get(self.m_name),"}]}