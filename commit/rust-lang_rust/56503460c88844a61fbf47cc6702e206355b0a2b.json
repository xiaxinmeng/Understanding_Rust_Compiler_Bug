{"sha": "56503460c88844a61fbf47cc6702e206355b0a2b", "node_id": "C_kwDOAAsO6NoAKDU2NTAzNDYwYzg4ODQ0YTYxZmJmNDdjYzY3MDJlMjA2MzU1YjBhMmI", "commit": {"author": {"name": "Florian Bartels", "email": "Florian.Bartels@elektrobit.com", "date": "2022-10-06T06:43:27Z"}, "committer": {"name": "Florian Bartels", "email": "Florian.Bartels@elektrobit.com", "date": "2022-10-06T07:55:32Z"}, "message": "Fix test for Android", "tree": {"sha": "a725e02c3ae67678e7351f43e2718844575a44f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a725e02c3ae67678e7351f43e2718844575a44f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56503460c88844a61fbf47cc6702e206355b0a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56503460c88844a61fbf47cc6702e206355b0a2b", "html_url": "https://github.com/rust-lang/rust/commit/56503460c88844a61fbf47cc6702e206355b0a2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56503460c88844a61fbf47cc6702e206355b0a2b/comments", "author": {"login": "flba-eb", "id": 108917393, "node_id": "U_kgDOBn3ykQ", "avatar_url": "https://avatars.githubusercontent.com/u/108917393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flba-eb", "html_url": "https://github.com/flba-eb", "followers_url": "https://api.github.com/users/flba-eb/followers", "following_url": "https://api.github.com/users/flba-eb/following{/other_user}", "gists_url": "https://api.github.com/users/flba-eb/gists{/gist_id}", "starred_url": "https://api.github.com/users/flba-eb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flba-eb/subscriptions", "organizations_url": "https://api.github.com/users/flba-eb/orgs", "repos_url": "https://api.github.com/users/flba-eb/repos", "events_url": "https://api.github.com/users/flba-eb/events{/privacy}", "received_events_url": "https://api.github.com/users/flba-eb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flba-eb", "id": 108917393, "node_id": "U_kgDOBn3ykQ", "avatar_url": "https://avatars.githubusercontent.com/u/108917393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flba-eb", "html_url": "https://github.com/flba-eb", "followers_url": "https://api.github.com/users/flba-eb/followers", "following_url": "https://api.github.com/users/flba-eb/following{/other_user}", "gists_url": "https://api.github.com/users/flba-eb/gists{/gist_id}", "starred_url": "https://api.github.com/users/flba-eb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flba-eb/subscriptions", "organizations_url": "https://api.github.com/users/flba-eb/orgs", "repos_url": "https://api.github.com/users/flba-eb/repos", "events_url": "https://api.github.com/users/flba-eb/events{/privacy}", "received_events_url": "https://api.github.com/users/flba-eb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b821ccc51fef460a97b5dd299421c91730537f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b821ccc51fef460a97b5dd299421c91730537f5", "html_url": "https://github.com/rust-lang/rust/commit/8b821ccc51fef460a97b5dd299421c91730537f5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "43c23b49737d00b2654d0f62be30881095540e04", "filename": "src/test/ui/process/process-panic-after-fork.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/56503460c88844a61fbf47cc6702e206355b0a2b/src%2Ftest%2Fui%2Fprocess%2Fprocess-panic-after-fork.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56503460c88844a61fbf47cc6702e206355b0a2b/src%2Ftest%2Fui%2Fprocess%2Fprocess-panic-after-fork.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprocess%2Fprocess-panic-after-fork.rs?ref=56503460c88844a61fbf47cc6702e206355b0a2b", "patch": "@@ -78,7 +78,29 @@ unsafe impl<A:GlobalAlloc> GlobalAlloc for PidChecking<A> {\n fn expect_aborted(status: ExitStatus) {\n     dbg!(status);\n     let signal = status.signal().expect(\"expected child process to die of signal\");\n+\n+    #[cfg(not(target_os = \"android\"))]\n     assert!(signal == libc::SIGABRT || signal == libc::SIGILL || signal == libc::SIGTRAP);\n+\n+    #[cfg(target_os = \"android\")]\n+    {\n+        // Android signals an abort() call with SIGSEGV at address 0xdeadbaad\n+        // See e.g. https://groups.google.com/g/android-ndk/c/laW1CJc7Icc\n+        assert!(signal == libc::SIGSEGV);\n+        // Check if the crash occured at addres deadbaad to ensure it is not some undefined\n+        // behavior but actually an abort\n+        let tombstone = (0..100)\n+            .map(|n| format!(\"/data/tombstones/tombstone_{n:02}\"))\n+            .filter(|f| std::path::Path::new(&f).exists())\n+            .last()\n+            .expect(\"no tombstone found\");\n+        let tombstone =\n+            std::fs::read_to_string(&tombstone).expect(\"Cannot read tombstone file\");\n+        // If the next assert fails sporadically we might have an issue with parallel crashing apps\n+        assert!(tombstone\n+            .contains(&std::env::current_exe().unwrap().into_os_string().into_string().unwrap()));\n+        assert!(tombstone.contains(\"signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\"));\n+    }\n }\n \n fn main() {"}]}