{"sha": "b628260df0587ae559253d8640ecb8738d3de613", "node_id": "C_kwDOAAsO6NoAKGI2MjgyNjBkZjA1ODdhZTU1OTI1M2Q4NjQwZWNiODczOGQzZGU2MTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-22T20:03:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-22T20:03:44Z"}, "message": "Auto merge of #110523 - ecnelises:llvm_isa_fix, r=cuviper\n\nReplace LLVM any_isa with any_cast\n\nPer https://github.com/rust-lang/llvm-project/blob/585a6eb3ebf7c40fd7c1b23e3ece557b3cc2aa36/llvm/include/llvm/ADT/Any.h#L130 , `any_isa` has been deprecated in LLVM. Use `any_cast` instead to avoid warnings.", "tree": {"sha": "270e14f5ab8f5716972bdbb4e1b43ffe8e667199", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/270e14f5ab8f5716972bdbb4e1b43ffe8e667199"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b628260df0587ae559253d8640ecb8738d3de613", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b628260df0587ae559253d8640ecb8738d3de613", "html_url": "https://github.com/rust-lang/rust/commit/b628260df0587ae559253d8640ecb8738d3de613", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b628260df0587ae559253d8640ecb8738d3de613/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb758cfc6d773b15af5bf65330ea7c36d7c3673d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb758cfc6d773b15af5bf65330ea7c36d7c3673d", "html_url": "https://github.com/rust-lang/rust/commit/bb758cfc6d773b15af5bf65330ea7c36d7c3673d"}, {"sha": "1a446947133c6dc39db8c9dd65a6aebd217e067d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a446947133c6dc39db8c9dd65a6aebd217e067d", "html_url": "https://github.com/rust-lang/rust/commit/1a446947133c6dc39db8c9dd65a6aebd217e067d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "abbe8e597709a9c7be6404989fb6d4bd69e8dc18", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b628260df0587ae559253d8640ecb8738d3de613/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b628260df0587ae559253d8640ecb8738d3de613/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=b628260df0587ae559253d8640ecb8738d3de613", "patch": "@@ -523,14 +523,14 @@ extern \"C\" typedef void (*LLVMRustSelfProfileBeforePassCallback)(void*, // LlvmS\n extern \"C\" typedef void (*LLVMRustSelfProfileAfterPassCallback)(void*); // LlvmSelfProfiler\n \n std::string LLVMRustwrappedIrGetName(const llvm::Any &WrappedIr) {\n-  if (any_isa<const Module *>(WrappedIr))\n-    return any_cast<const Module *>(WrappedIr)->getName().str();\n-  if (any_isa<const Function *>(WrappedIr))\n-    return any_cast<const Function *>(WrappedIr)->getName().str();\n-  if (any_isa<const Loop *>(WrappedIr))\n-    return any_cast<const Loop *>(WrappedIr)->getName().str();\n-  if (any_isa<const LazyCallGraph::SCC *>(WrappedIr))\n-    return any_cast<const LazyCallGraph::SCC *>(WrappedIr)->getName();\n+  if (const auto *Cast = any_cast<const Module *>(&WrappedIr))\n+    return (*Cast)->getName().str();\n+  if (const auto *Cast = any_cast<const Function *>(&WrappedIr))\n+    return (*Cast)->getName().str();\n+  if (const auto *Cast = any_cast<const Loop *>(&WrappedIr))\n+    return (*Cast)->getName().str();\n+  if (const auto *Cast = any_cast<const LazyCallGraph::SCC *>(&WrappedIr))\n+    return (*Cast)->getName();\n   return \"<UNKNOWN>\";\n }\n "}]}