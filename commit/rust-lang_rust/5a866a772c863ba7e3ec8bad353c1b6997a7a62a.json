{"sha": "5a866a772c863ba7e3ec8bad353c1b6997a7a62a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhODY2YTc3MmM4NjNiYTdlM2VjOGJhZDM1M2MxYjY5OTdhN2E2MmE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-01T11:11:20Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-01T11:11:20Z"}, "message": "Merge #396\n\n396: Fix the `panic` found whilst fuzzing r=matklad,me a=DJMcNab\n\nThis occurred when a non-ascii character was used in an ascii escape, for example in the motivating example: `if'\\x\u027f`, which can be further simplified to `'\\x\u027f`.\n\nCo-authored-by: DJMcNab <36049421+djmcnab@users.noreply.github.com>", "tree": {"sha": "bd7d22f923791d07224720de155aa05efa663f22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd7d22f923791d07224720de155aa05efa663f22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a866a772c863ba7e3ec8bad353c1b6997a7a62a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a866a772c863ba7e3ec8bad353c1b6997a7a62a", "html_url": "https://github.com/rust-lang/rust/commit/5a866a772c863ba7e3ec8bad353c1b6997a7a62a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a866a772c863ba7e3ec8bad353c1b6997a7a62a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "6044ec50572747a1a096133d7f71c2d3d689bbf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6044ec50572747a1a096133d7f71c2d3d689bbf3", "html_url": "https://github.com/rust-lang/rust/commit/6044ec50572747a1a096133d7f71c2d3d689bbf3"}, {"sha": "0fd87cbc478427296f2ca81c177e32bdb41aa133", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fd87cbc478427296f2ca81c177e32bdb41aa133", "html_url": "https://github.com/rust-lang/rust/commit/0fd87cbc478427296f2ca81c177e32bdb41aa133"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "1d6fe883752ffdbf9221e036bba7c817d999a693", "filename": "crates/ra_syntax/src/validation/char.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5a866a772c863ba7e3ec8bad353c1b6997a7a62a/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a866a772c863ba7e3ec8bad353c1b6997a7a62a/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs?ref=5a866a772c863ba7e3ec8bad353c1b6997a7a62a", "patch": "@@ -89,12 +89,17 @@ pub(super) fn is_ascii_escape(code: char) -> bool {\n \n fn validate_ascii_code_escape(text: &str, range: TextRange, errors: &mut Vec<SyntaxError>) {\n     // An AsciiCodeEscape has 4 chars, example: `\\xDD`\n-    if text.len() < 4 {\n+    if !text.is_ascii() {\n+        // TODO: Give a more precise error message (say what the invalid character was)\n+        errors.push(SyntaxError::new(AsciiCodeEscapeOutOfRange, range));\n+    } else if text.chars().count() < 4 {\n         errors.push(SyntaxError::new(TooShortAsciiCodeEscape, range));\n     } else {\n-        assert!(\n-            text.chars().count() == 4,\n-            \"AsciiCodeEscape cannot be longer than 4 chars\"\n+        assert_eq!(\n+            text.chars().count(),\n+            4,\n+            \"AsciiCodeEscape cannot be longer than 4 chars, but text '{}' is\",\n+            text,\n         );\n \n         match u8::from_str_radix(&text[2..], 16) {"}, {"sha": "0f59c472269a5ebcd24939df6bf70fd7d5379251", "filename": "crates/ra_syntax/tests/data/parser/fuzz-failures/0003.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a866a772c863ba7e3ec8bad353c1b6997a7a62a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ffuzz-failures%2F0003.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a866a772c863ba7e3ec8bad353c1b6997a7a62a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ffuzz-failures%2F0003.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ffuzz-failures%2F0003.rs?ref=5a866a772c863ba7e3ec8bad353c1b6997a7a62a", "patch": "@@ -0,0 +1 @@\n+if'\\x\u027f\n\\ No newline at end of file"}]}