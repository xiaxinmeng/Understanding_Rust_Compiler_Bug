{"sha": "d354d41fd5ddaeb6e1e902856d98cb52cc22d711", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNTRkNDFmZDVkZGFlYjZlMWU5MDI4NTZkOThjYjUyY2MyMmQ3MTE=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-16T21:55:07Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-16T21:55:07Z"}, "message": "Merge branch 'more-ref-fixes' of https://github.com/tshepang/rust into rollup_central", "tree": {"sha": "0c6c948fc60e82cbb640cea1a0c43f90b2cfba09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c6c948fc60e82cbb640cea1a0c43f90b2cfba09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d354d41fd5ddaeb6e1e902856d98cb52cc22d711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d354d41fd5ddaeb6e1e902856d98cb52cc22d711", "html_url": "https://github.com/rust-lang/rust/commit/d354d41fd5ddaeb6e1e902856d98cb52cc22d711", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d354d41fd5ddaeb6e1e902856d98cb52cc22d711/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72722e3c2be46c1878ecec5295dd0513be91b2a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/72722e3c2be46c1878ecec5295dd0513be91b2a8", "html_url": "https://github.com/rust-lang/rust/commit/72722e3c2be46c1878ecec5295dd0513be91b2a8"}, {"sha": "4ee704703444a23133e0c196e3a3fa75b8b7c5e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee704703444a23133e0c196e3a3fa75b8b7c5e3", "html_url": "https://github.com/rust-lang/rust/commit/4ee704703444a23133e0c196e3a3fa75b8b7c5e3"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "a37e1c146681e4f600c3ecff63f64fd6f9bee599", "filename": "src/doc/reference.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d354d41fd5ddaeb6e1e902856d98cb52cc22d711/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/d354d41fd5ddaeb6e1e902856d98cb52cc22d711/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=d354d41fd5ddaeb6e1e902856d98cb52cc22d711", "patch": "@@ -343,10 +343,10 @@ The type of an _unsuffixed_ integer literal is determined by type inference:\n * If an integer type can be _uniquely_ determined from the surrounding\n   program context, the unsuffixed integer literal has that type.\n \n-* If the program context underconstrains the type, it defaults to the\n+* If the program context under-constrains the type, it defaults to the\n   signed 32-bit integer `i32`.\n \n-* If the program context overconstrains the type, it is considered a\n+* If the program context over-constrains the type, it is considered a\n   static type error.\n \n Examples of integer literals of various forms:\n@@ -382,9 +382,9 @@ type inference:\n   surrounding program context, the unsuffixed floating-point literal\n   has that type.\n \n-* If the program context underconstrains the type, it defaults to `f64`.\n+* If the program context under-constrains the type, it defaults to `f64`.\n \n-* If the program context overconstrains the type, it is considered a\n+* If the program context over-constrains the type, it is considered a\n   static type error.\n \n Examples of floating-point literals of various forms:\n@@ -1292,7 +1292,7 @@ All access to a static is safe, but there are a number of restrictions on\n statics:\n \n * Statics may not contain any destructors.\n-* The types of static values must ascribe to `Sync` to allow threadsafe access.\n+* The types of static values must ascribe to `Sync` to allow thread-safe access.\n * Statics may not refer to other statics by value, only by reference.\n * Constants cannot refer to statics.\n \n@@ -1694,7 +1694,7 @@ explain, here's a few use cases and what they would entail:\n * A crate needs a global available \"helper module\" to itself, but it doesn't\n   want to expose the helper module as a public API. To accomplish this, the\n   root of the crate's hierarchy would have a private module which then\n-  internally has a \"public api\". Because the entire crate is a descendant of\n+  internally has a \"public API\". Because the entire crate is a descendant of\n   the root, then the entire local crate can access this private module through\n   the second case.\n \n@@ -3987,7 +3987,7 @@ In general, `--crate-type=bin` or `--crate-type=lib` should be sufficient for\n all compilation needs, and the other options are just available if more\n fine-grained control is desired over the output format of a Rust crate.\n \n-# Appendix: Rationales and design tradeoffs\n+# Appendix: Rationales and design trade-offs\n \n *TODO*.\n \n@@ -3997,7 +3997,7 @@ Rust is not a particularly original language, with design elements coming from\n a wide range of sources. Some of these are listed below (including elements\n that have since been removed):\n \n-* SML, OCaml: algebraic datatypes, pattern matching, type inference,\n+* SML, OCaml: algebraic data types, pattern matching, type inference,\n   semicolon statement separation\n * C++: references, RAII, smart pointers, move semantics, monomorphisation,\n   memory model"}]}