{"sha": "390f717a0af5851271792da9ff235c95f3db2556", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MGY3MTdhMGFmNTg1MTI3MTc5MmRhOWZmMjM1Yzk1ZjNkYjI1NTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-25T20:59:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-25T20:59:00Z"}, "message": "tweak wording", "tree": {"sha": "6fbeb678794fba5d42e4fbb6d65285d39911c2c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fbeb678794fba5d42e4fbb6d65285d39911c2c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/390f717a0af5851271792da9ff235c95f3db2556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/390f717a0af5851271792da9ff235c95f3db2556", "html_url": "https://github.com/rust-lang/rust/commit/390f717a0af5851271792da9ff235c95f3db2556", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/390f717a0af5851271792da9ff235c95f3db2556/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c12b1be330dd9c3de0b4fe599686d7c0c45e720", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c12b1be330dd9c3de0b4fe599686d7c0c45e720", "html_url": "https://github.com/rust-lang/rust/commit/1c12b1be330dd9c3de0b4fe599686d7c0c45e720"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3d0568c16cdf67ebe2de4b196bf12ebbdb6e1075", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/390f717a0af5851271792da9ff235c95f3db2556/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/390f717a0af5851271792da9ff235c95f3db2556/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=390f717a0af5851271792da9ff235c95f3db2556", "patch": "@@ -509,10 +509,10 @@ pub trait Read {\n     /// contents of `buf` being true. It is recommended that *implementations*\n     /// only write data to `buf` instead of reading its contents.\n     ///\n-    /// Correspondingly, however, *users* of this trait may not assume any guarantees\n+    /// Correspondingly, however, *callers* of this method may not assume any guarantees\n     /// about how the implementation uses `buf`. The trait is safe to implement,\n-    /// so it is perfectly possible that the implementation might inspect that data.\n-    /// As a caller, it is your responsibility to make sure that `buf` is initialized\n+    //  so it is possible that the code that's supposed to write to the buffer might also read\n+    //  from it. It is your responsibility to make sure that `buf` is initialized\n     /// before calling `read`. Calling `read` with an uninitialized `buf` (of the kind one\n     /// obtains via [`MaybeUninit<T>`]) is not safe, and can lead to undefined behavior.\n     ///"}]}