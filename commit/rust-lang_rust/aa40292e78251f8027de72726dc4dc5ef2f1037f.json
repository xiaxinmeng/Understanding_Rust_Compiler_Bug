{"sha": "aa40292e78251f8027de72726dc4dc5ef2f1037f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNDAyOTJlNzgyNTFmODAyN2RlNzI3MjZkYzRkYzVlZjJmMTAzN2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-24T23:30:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-24T23:30:15Z"}, "message": "Auto merge of #44603 - SimonSapin:stylo, r=alexcrichton\n\nAdd Stylo and WebRender to src/tools/cargotest\n\nThis is a subset of Servo that takes relatively less time to compile and does not use unstable Rust features.", "tree": {"sha": "668872cf438d8acf0afd6e41cac75ff0befae1de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/668872cf438d8acf0afd6e41cac75ff0befae1de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa40292e78251f8027de72726dc4dc5ef2f1037f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa40292e78251f8027de72726dc4dc5ef2f1037f", "html_url": "https://github.com/rust-lang/rust/commit/aa40292e78251f8027de72726dc4dc5ef2f1037f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa40292e78251f8027de72726dc4dc5ef2f1037f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2799fc9a5c631a790744ceb9cd08259af338c0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2799fc9a5c631a790744ceb9cd08259af338c0c", "html_url": "https://github.com/rust-lang/rust/commit/c2799fc9a5c631a790744ceb9cd08259af338c0c"}, {"sha": "daf84db4d26346d1555ce1252321e23d2aceb223", "url": "https://api.github.com/repos/rust-lang/rust/commits/daf84db4d26346d1555ce1252321e23d2aceb223", "html_url": "https://github.com/rust-lang/rust/commit/daf84db4d26346d1555ce1252321e23d2aceb223"}], "stats": {"total": 67, "additions": 62, "deletions": 5}, "files": [{"sha": "db34f1404481bd758a898174f135f2ca188bdb76", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa40292e78251f8027de72726dc4dc5ef2f1037f/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/aa40292e78251f8027de72726dc4dc5ef2f1037f/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=aa40292e78251f8027de72726dc4dc5ef2f1037f", "patch": "@@ -169,6 +169,8 @@ matrix:\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu-aux\n       if: branch = auto\n+    - env: IMAGE=x86_64-gnu-cargotest\n+      if: branch = auto\n     - env: IMAGE=x86_64-gnu-debug\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu-nopt"}, {"sha": "b86fa25337b009e850820843c7cdeeffcbec2a56", "filename": "appveyor.yml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa40292e78251f8027de72726dc4dc5ef2f1037f/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/aa40292e78251f8027de72726dc4dc5ef2f1037f/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=aa40292e78251f8027de72726dc4dc5ef2f1037f", "patch": "@@ -25,6 +25,11 @@ environment:\n     RUST_CHECK_TARGET: check-aux\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n \n+  # MSVC cargotest\n+  - MSYS_BITS: 64\n+    SCRIPT: python x.py test src/tools/cargotest\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n+\n   # 32/64-bit MinGW builds.\n   #\n   # We are using MinGW with posix threads since LLVM does not compile with"}, {"sha": "eb92c8f143befb9e897ef45d72d2b7860f710284", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa40292e78251f8027de72726dc4dc5ef2f1037f/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/aa40292e78251f8027de72726dc4dc5ef2f1037f/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=aa40292e78251f8027de72726dc4dc5ef2f1037f", "patch": "@@ -52,7 +52,6 @@ check:\n \t$(Q)$(BOOTSTRAP) test $(BOOTSTRAP_ARGS)\n check-aux:\n \t$(Q)$(BOOTSTRAP) test \\\n-\t\tsrc/tools/cargotest \\\n \t\tsrc/tools/cargo \\\n \t\tsrc/tools/rls \\\n \t\tsrc/tools/rustfmt \\"}, {"sha": "a5326625bf49c2bd7384530b3cc2b15db063a9ef", "filename": "src/ci/docker/x86_64-gnu-cargotest/Dockerfile", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/aa40292e78251f8027de72726dc4dc5ef2f1037f/src%2Fci%2Fdocker%2Fx86_64-gnu-cargotest%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/aa40292e78251f8027de72726dc4dc5ef2f1037f/src%2Fci%2Fdocker%2Fx86_64-gnu-cargotest%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-cargotest%2FDockerfile?ref=aa40292e78251f8027de72726dc4dc5ef2f1037f", "patch": "@@ -0,0 +1,25 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  libssl-dev \\\n+  sudo \\\n+  xz-utils \\\n+  pkg-config \\\n+  libgl1-mesa-dev \\\n+  llvm-dev \\\n+  libfreetype6-dev \\\n+  libexpat1-dev\n+\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n+ENV SCRIPT python2.7 ../x.py test src/tools/cargotest"}, {"sha": "00276ee34d4d89374d0a095bdc9a878f875df763", "filename": "src/tools/cargotest/main.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/aa40292e78251f8027de72726dc4dc5ef2f1037f/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa40292e78251f8027de72726dc4dc5ef2f1037f/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=aa40292e78251f8027de72726dc4dc5ef2f1037f", "patch": "@@ -19,6 +19,7 @@ struct Test {\n     name: &'static str,\n     sha: &'static str,\n     lock: Option<&'static str>,\n+    packages: &'static [&'static str],\n }\n \n const TEST_REPOS: &'static [Test] = &[\n@@ -27,30 +28,51 @@ const TEST_REPOS: &'static [Test] = &[\n         repo: \"https://github.com/iron/iron\",\n         sha: \"21c7dae29c3c214c08533c2a55ac649b418f2fe3\",\n         lock: Some(include_str!(\"lockfiles/iron-Cargo.lock\")),\n+        packages: &[],\n     },\n     Test {\n         name: \"ripgrep\",\n         repo: \"https://github.com/BurntSushi/ripgrep\",\n         sha: \"b65bb37b14655e1a89c7cd19c8b011ef3e312791\",\n         lock: None,\n+        packages: &[],\n     },\n     Test {\n         name: \"tokei\",\n         repo: \"https://github.com/Aaronepower/tokei\",\n         sha: \"5e11c4852fe4aa086b0e4fe5885822fbe57ba928\",\n         lock: None,\n+        packages: &[],\n     },\n     Test {\n         name: \"treeify\",\n         repo: \"https://github.com/dzamlo/treeify\",\n         sha: \"999001b223152441198f117a68fb81f57bc086dd\",\n         lock: None,\n+        packages: &[],\n     },\n     Test {\n         name: \"xsv\",\n         repo: \"https://github.com/BurntSushi/xsv\",\n         sha: \"4b308adbe48ac81657fd124b90b44f7c3263f771\",\n         lock: None,\n+        packages: &[],\n+    },\n+    Test {\n+        name: \"servo\",\n+        repo: \"https://github.com/servo/servo\",\n+        sha: \"38fe9533b93e985657f99a29772bf3d3c8694822\",\n+        lock: None,\n+        // Only test Stylo a.k.a. Quantum CSS, the parts of Servo going into Firefox.\n+        // This takes much less time to build than all of Servo and supports stable Rust.\n+        packages: &[\"stylo_tests\", \"selectors\"],\n+    },\n+    Test {\n+        name: \"webrender\",\n+        repo: \"https://github.com/servo/webrender\",\n+        sha: \"57250b2b8fa63934f80e5376a29f7dcb3f759ad6\",\n+        lock: None,\n+        packages: &[],\n     },\n ];\n \n@@ -74,7 +96,7 @@ fn test_repo(cargo: &Path, out_dir: &Path, test: &Test) {\n             .write_all(lockfile.as_bytes())\n             .expect(\"\");\n     }\n-    if !run_cargo_test(cargo, &dir) {\n+    if !run_cargo_test(cargo, &dir, test.packages) {\n         panic!(\"tests failed for {}\", test.repo);\n     }\n }\n@@ -134,9 +156,13 @@ fn clone_repo(test: &Test, out_dir: &Path) -> PathBuf {\n     out_dir\n }\n \n-fn run_cargo_test(cargo_path: &Path, crate_path: &Path) -> bool {\n-    let status = Command::new(cargo_path)\n-        .arg(\"test\")\n+fn run_cargo_test(cargo_path: &Path, crate_path: &Path, packages: &[&str]) -> bool {\n+    let mut command = Command::new(cargo_path);\n+    command.arg(\"test\");\n+    for name in packages {\n+        command.arg(\"-p\").arg(name);\n+    }\n+    let status = command\n         // Disable rust-lang/cargo's cross-compile tests\n         .env(\"CFG_DISABLE_CROSS_TESTS\", \"1\")\n         .current_dir(crate_path)"}]}