{"sha": "33faf0169009edc978af31098710a44070da4657", "node_id": "C_kwDOAAsO6NoAKDMzZmFmMDE2OTAwOWVkYzk3OGFmMzEwOTg3MTBhNDQwNzBkYTQ2NTc", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-25T02:42:01Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-02T02:59:28Z"}, "message": "Eliminate four unnecessary lint macros.\n\nThe lint definitions use macros heavily. This commit merges some of them\nthat are split unnecessarily. I find the reduced indirection makes it\neasier to imagine what the generated code will look like.", "tree": {"sha": "3ead59d98544c6718ccb007ef679711d51ff9115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ead59d98544c6718ccb007ef679711d51ff9115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33faf0169009edc978af31098710a44070da4657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33faf0169009edc978af31098710a44070da4657", "html_url": "https://github.com/rust-lang/rust/commit/33faf0169009edc978af31098710a44070da4657", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33faf0169009edc978af31098710a44070da4657/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c090c6880c0183ba248bde4a16e29ba29ac4fbba", "url": "https://api.github.com/repos/rust-lang/rust/commits/c090c6880c0183ba248bde4a16e29ba29ac4fbba", "html_url": "https://github.com/rust-lang/rust/commit/c090c6880c0183ba248bde4a16e29ba29ac4fbba"}], "stats": {"total": 56, "additions": 16, "deletions": 40}, "files": [{"sha": "dc39dacd974cf600791eec6c04dfbbaad3407336", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/33faf0169009edc978af31098710a44070da4657/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33faf0169009edc978af31098710a44070da4657/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=33faf0169009edc978af31098710a44070da4657", "patch": "@@ -300,20 +300,14 @@ impl LintPass for EarlyLintPassObjects<'_> {\n     }\n }\n \n-macro_rules! expand_early_lint_pass_impl_methods {\n-    ([$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => (\n-        $(fn $name(&mut self, context: &EarlyContext<'_>, $($param: $arg),*) {\n-            for obj in self.lints.iter_mut() {\n-                obj.$name(context, $($param),*);\n-            }\n-        })*\n-    )\n-}\n-\n macro_rules! early_lint_pass_impl {\n-    ([], [$($methods:tt)*]) => (\n+    ([], [$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => (\n         impl EarlyLintPass for EarlyLintPassObjects<'_> {\n-            expand_early_lint_pass_impl_methods!([$($methods)*]);\n+            $(fn $name(&mut self, context: &EarlyContext<'_>, $($param: $arg),*) {\n+                for obj in self.lints.iter_mut() {\n+                    obj.$name(context, $($param),*);\n+                }\n+            })*\n         }\n     )\n }"}, {"sha": "e29a1c8742846b7967d67edf28f3b44b10ff3380", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/33faf0169009edc978af31098710a44070da4657/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33faf0169009edc978af31098710a44070da4657/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=33faf0169009edc978af31098710a44070da4657", "patch": "@@ -313,20 +313,14 @@ impl LintPass for LateLintPassObjects<'_, '_> {\n     }\n }\n \n-macro_rules! expand_late_lint_pass_impl_methods {\n-    ([$hir:tt], [$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => (\n-        $(fn $name(&mut self, context: &LateContext<$hir>, $($param: $arg),*) {\n-            for obj in self.lints.iter_mut() {\n-                obj.$name(context, $($param),*);\n-            }\n-        })*\n-    )\n-}\n-\n macro_rules! late_lint_pass_impl {\n-    ([], [$hir:tt], $methods:tt) => {\n+    ([], [$hir:tt], [$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => {\n         impl<$hir> LateLintPass<$hir> for LateLintPassObjects<'_, $hir> {\n-            expand_late_lint_pass_impl_methods!([$hir], $methods);\n+            $(fn $name(&mut self, context: &LateContext<$hir>, $($param: $arg),*) {\n+                for obj in self.lints.iter_mut() {\n+                    obj.$name(context, $($param),*);\n+                }\n+            })*\n         }\n     };\n }"}, {"sha": "c8ea202559c714119a694c5b263c04af54834415", "filename": "compiler/rustc_lint/src/passes.rs", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/33faf0169009edc978af31098710a44070da4657/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33faf0169009edc978af31098710a44070da4657/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs?ref=33faf0169009edc978af31098710a44070da4657", "patch": "@@ -66,16 +66,10 @@ macro_rules! late_lint_methods {\n // FIXME: eliminate the duplication with `Visitor`. But this also\n // contains a few lint-specific methods with no equivalent in `Visitor`.\n \n-macro_rules! expand_lint_pass_methods {\n-    ($context:ty, [$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => (\n-        $(#[inline(always)] fn $name(&mut self, _: $context, $(_: $arg),*) {})*\n-    )\n-}\n-\n macro_rules! declare_late_lint_pass {\n-    ([], [$hir:tt], [$($methods:tt)*]) => (\n+    ([], [$hir:tt], [$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => (\n         pub trait LateLintPass<$hir>: LintPass {\n-            expand_lint_pass_methods!(&LateContext<$hir>, [$($methods)*]);\n+            $(#[inline(always)] fn $name(&mut self, _: &LateContext<$hir>, $(_: $arg),*) {})*\n         }\n     )\n }\n@@ -175,16 +169,10 @@ macro_rules! early_lint_methods {\n     )\n }\n \n-macro_rules! expand_early_lint_pass_methods {\n-    ($context:ty, [$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => (\n-        $(#[inline(always)] fn $name(&mut self, _: $context, $(_: $arg),*) {})*\n-    )\n-}\n-\n macro_rules! declare_early_lint_pass {\n-    ([], [$($methods:tt)*]) => (\n+    ([], [$($(#[$attr:meta])* fn $name:ident($($param:ident: $arg:ty),*);)*]) => (\n         pub trait EarlyLintPass: LintPass {\n-            expand_early_lint_pass_methods!(&EarlyContext<'_>, [$($methods)*]);\n+            $(#[inline(always)] fn $name(&mut self, _: &EarlyContext<'_>, $(_: $arg),*) {})*\n         }\n     )\n }"}]}