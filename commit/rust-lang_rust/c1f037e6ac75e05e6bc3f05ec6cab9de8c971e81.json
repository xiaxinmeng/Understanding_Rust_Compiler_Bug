{"sha": "c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZjAzN2U2YWM3NWUwNWU2YmMzZjA1ZWM2Y2FiOWRlOGM5NzFlODE=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-17T23:25:06Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-19T18:25:51Z"}, "message": "Add tests for once functions (#2549).", "tree": {"sha": "cdd24b2fb8fad0e7e614638da766a4bb71d75f61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdd24b2fb8fad0e7e614638da766a4bb71d75f61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "html_url": "https://github.com/rust-lang/rust/commit/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1496216db6e0ab266df6dcbda31d9fab495afcf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1496216db6e0ab266df6dcbda31d9fab495afcf9", "html_url": "https://github.com/rust-lang/rust/commit/1496216db6e0ab266df6dcbda31d9fab495afcf9"}], "stats": {"total": 190, "additions": 190, "deletions": 0}, "files": [{"sha": "4436675d69a5fbb624d6a6b8169f0adaca60e598", "filename": "src/test/compile-fail/once-cant-call-twice-on-heap.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-heap.rs?ref=c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Testing guarantees provided by once functions.\n+// This program would segfault if it were legal.\n+\n+extern mod extra;\n+use extra::arc;\n+use std::util;\n+\n+fn foo(blk: ~once fn()) {\n+    blk();\n+    blk(); //~ ERROR use of moved value\n+}\n+\n+fn main() {\n+    let x = arc::ARC(true);\n+    do foo {\n+        assert!(*x.get());\n+        util::ignore(x);\n+    }\n+}"}, {"sha": "7048f1a7a76f49be476f60e7db21b4f6eb162a3b", "filename": "src/test/compile-fail/once-cant-call-twice-on-stack.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-stack.rs?ref=c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Testing guarantees provided by once functions.\n+// This program would segfault if it were legal.\n+\n+extern mod extra;\n+use extra::arc;\n+use std::util;\n+\n+fn foo(blk: &once fn()) {\n+    blk();\n+    blk(); //~ ERROR use of moved value\n+}\n+\n+fn main() {\n+    let x = arc::ARC(true);\n+    do foo {\n+        assert!(*x.get());\n+        util::ignore(x);\n+    }\n+}"}, {"sha": "6f524c0068b9dd150f139dc9069351563ccaf08a", "filename": "src/test/compile-fail/once-cant-copy-stack-once-fn-copy.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-copy-stack-once-fn-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-copy-stack-once-fn-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fonce-cant-copy-stack-once-fn-copy.rs?ref=c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Though it should be legal to copy a heap-allocated \"once fn:Copy\",\n+// stack closures are not deep-copied, so (counterintuitively) it should be\n+// illegal to copy them.\n+\n+fn foo<'r>(blk: &'r once fn:Copy()) -> (&'r once fn:Copy(), &'r once fn:Copy()) {\n+    (copy blk, blk) //~ ERROR copying a value of non-copyable type\n+}\n+\n+fn main() {\n+}"}, {"sha": "61f158cec27e3068338ea91b51631f4a69c6223b", "filename": "src/test/compile-fail/once-cant-move-out-of-non-once-on-heap.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-move-out-of-non-once-on-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-move-out-of-non-once-on-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fonce-cant-move-out-of-non-once-on-heap.rs?ref=c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Testing guarantees provided by once functions.\n+// This program would segfault if it were legal.\n+\n+extern mod extra;\n+use extra::arc;\n+use std::util;\n+\n+fn foo(blk: ~fn()) {\n+    blk();\n+    blk();\n+}\n+\n+fn main() {\n+    let x = arc::ARC(true);\n+    do foo {\n+        assert!(*x.get());\n+        util::ignore(x); //~ ERROR cannot move out of captured outer variable\n+    }\n+}"}, {"sha": "42c8b9a9998215cba4421cf01e6e6ed1ff013d57", "filename": "src/test/compile-fail/once-cant-move-out-of-non-once-on-stack.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-move-out-of-non-once-on-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Fcompile-fail%2Fonce-cant-move-out-of-non-once-on-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fonce-cant-move-out-of-non-once-on-stack.rs?ref=c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Testing guarantees provided by once functions.\n+// This program would segfault if it were legal.\n+\n+extern mod extra;\n+use extra::arc;\n+use std::util;\n+\n+fn foo(blk: &fn()) {\n+    blk();\n+    blk();\n+}\n+\n+fn main() {\n+    let x = arc::ARC(true);\n+    do foo {\n+        assert!(*x.get());\n+        util::ignore(x); //~ ERROR cannot move out of captured outer variable\n+    }\n+}"}, {"sha": "8846abb47fc73307c55ab5159210860db8218ac0", "filename": "src/test/run-pass/once-move-out-on-heap.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs?ref=c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Testing guarantees provided by once functions.\n+\n+extern mod extra;\n+use extra::arc;\n+use std::util;\n+\n+fn foo(blk: ~once fn()) {\n+    blk();\n+}\n+\n+fn main() {\n+    let x = arc::ARC(true);\n+    do foo {\n+        assert!(*x.get());\n+        util::ignore(x);\n+    }\n+}"}, {"sha": "21e4a3fa4268b19ff8fabef2cd60b3a73e1999c9", "filename": "src/test/run-pass/once-move-out-on-stack.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs?ref=c1f037e6ac75e05e6bc3f05ec6cab9de8c971e81", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Testing guarantees provided by once functions.\n+\n+extern mod extra;\n+use extra::arc;\n+use std::util;\n+\n+fn foo(blk: &once fn()) {\n+    blk();\n+}\n+\n+fn main() {\n+    let x = arc::ARC(true);\n+    do foo {\n+        assert!(*x.get());\n+        util::ignore(x);\n+    }\n+}"}]}