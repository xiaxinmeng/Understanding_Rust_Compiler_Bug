{"sha": "d436beeb044661984879533170c4a35893176578", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MzZiZWViMDQ0NjYxOTg0ODc5NTMzMTcwYzRhMzU4OTMxNzY1Nzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-22T15:22:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-22T15:22:18Z"}, "message": "Match implementation of diagnostics flag to the docs", "tree": {"sha": "805489750dfc57bea7ad4eb49b8d07bd1d754f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/805489750dfc57bea7ad4eb49b8d07bd1d754f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d436beeb044661984879533170c4a35893176578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d436beeb044661984879533170c4a35893176578", "html_url": "https://github.com/rust-lang/rust/commit/d436beeb044661984879533170c4a35893176578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d436beeb044661984879533170c4a35893176578/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "546f9ee7a7eb1d208fe279ec469b5981d47934fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/546f9ee7a7eb1d208fe279ec469b5981d47934fc", "html_url": "https://github.com/rust-lang/rust/commit/546f9ee7a7eb1d208fe279ec469b5981d47934fc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6e34ad374ab0a8ba480a83c162622cccd590d503", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d436beeb044661984879533170c4a35893176578/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d436beeb044661984879533170c4a35893176578/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=d436beeb044661984879533170c4a35893176578", "patch": "@@ -118,7 +118,7 @@ impl Config {\n         self.client_caps = client_caps;\n \n         set(value, \"/withSysroot\", &mut self.with_sysroot);\n-        set(value, \"/featureFlags/lsp.diagnostics\", &mut self.publish_diagnostics);\n+        set(value, \"/diagnostics/enable\", &mut self.publish_diagnostics);\n         set(value, \"/lruCapacity\", &mut self.lru_capacity);\n         self.files.watcher = match get(value, \"/files/watcher\") {\n             Some(\"client\") => FilesWatcher::Client,"}]}