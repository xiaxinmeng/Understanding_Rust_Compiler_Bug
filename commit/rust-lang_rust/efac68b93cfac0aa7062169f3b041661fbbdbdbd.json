{"sha": "efac68b93cfac0aa7062169f3b041661fbbdbdbd", "node_id": "C_kwDOAAsO6NoAKGVmYWM2OGI5M2NmYWMwYWE3MDYyMTY5ZjNiMDQxNjYxZmJiZGJkYmQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-13T20:51:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-13T20:51:00Z"}, "message": "Rollup merge of #89347 - TaKO8Ki:crate-or-module-typo, r=estebank\n\nsuggestion for typoed crate or module\n\nPreviously, the compiler didn't suggest similarly named crates or modules. This pull request adds a suggestion for typoed crates or modules.\n\n#76208\n\nbefore:\n\n```\nerror[E0433]: failed to resolve: use of undeclared type or module `chono`\n --> src/main.rs:2:5\n  |\n2 | use chono::prelude::*;\n  |     ^^^^^ use of undeclared type or module `chono`\n```\n\nafter:\n\n```\nerror[E0433]: failed to resolve: use of undeclared type or module `chono`\n --> src/main.rs:2:5\n  |\n2 | use chono::prelude::*;\n  |     ^^^^^\n  |     |\n  |     use of undeclared crate or module `chono`\n  |     help: a similar crate or module exists: `chrono`\n```", "tree": {"sha": "d91e65af7b37766a328edae3f7b009b4038d57a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d91e65af7b37766a328edae3f7b009b4038d57a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efac68b93cfac0aa7062169f3b041661fbbdbdbd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhZ0a0CRBK7hj4Ov3rIwAAqXMIAAHbl+aOmNf53IAC93R14VNK\nQ0VESRBkojIpId3T4JtmOp8tV1neYubGQOg+iLneMfFQ5GEMxDS4TlCLsXAhCJdr\nK2+ErgLPGAc1lsgwKUhj1tOxSnY9lFMx8hyM4L1sDBaHBtqmDE7nZ7fteGqWgTDF\nvZYpPYtiOJ69PNNNwpadVuIXyPLvxuaUj8XSDh/wuxDQGeYcGWioiagqPQlN6j/1\n6k0zp/o9Rw6HRZ3ANg4z8AnEGs2IiNDBxpqFejgZLAzz/VyuvenIIvqT71EiEpia\nfgLs3Dzro9GJKdgmsr38mqgaZ8zlhsAK+XLl8qhUJVAjbIn/WNTOrAYvyVMGbuo=\n=1wqe\n-----END PGP SIGNATURE-----\n", "payload": "tree d91e65af7b37766a328edae3f7b009b4038d57a8\nparent eeb16a2a892c2a29b1da3085e29f39efa3486e1c\nparent f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634158260 +0200\ncommitter GitHub <noreply@github.com> 1634158260 +0200\n\nRollup merge of #89347 - TaKO8Ki:crate-or-module-typo, r=estebank\n\nsuggestion for typoed crate or module\n\nPreviously, the compiler didn't suggest similarly named crates or modules. This pull request adds a suggestion for typoed crates or modules.\n\n#76208\n\nbefore:\n\n```\nerror[E0433]: failed to resolve: use of undeclared type or module `chono`\n --> src/main.rs:2:5\n  |\n2 | use chono::prelude::*;\n  |     ^^^^^ use of undeclared type or module `chono`\n```\n\nafter:\n\n```\nerror[E0433]: failed to resolve: use of undeclared type or module `chono`\n --> src/main.rs:2:5\n  |\n2 | use chono::prelude::*;\n  |     ^^^^^\n  |     |\n  |     use of undeclared crate or module `chono`\n  |     help: a similar crate or module exists: `chrono`\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efac68b93cfac0aa7062169f3b041661fbbdbdbd", "html_url": "https://github.com/rust-lang/rust/commit/efac68b93cfac0aa7062169f3b041661fbbdbdbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efac68b93cfac0aa7062169f3b041661fbbdbdbd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeb16a2a892c2a29b1da3085e29f39efa3486e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/eeb16a2a892c2a29b1da3085e29f39efa3486e1c", "html_url": "https://github.com/rust-lang/rust/commit/eeb16a2a892c2a29b1da3085e29f39efa3486e1c"}, {"sha": "f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d", "html_url": "https://github.com/rust-lang/rust/commit/f819e6d59c41b6bb3db2810c5c8e340b2fb2a88d"}], "stats": {"total": 110, "additions": 109, "deletions": 1}, "files": [{"sha": "e3970038a33b03dad9fbe195ecae9fd23a49add1", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/efac68b93cfac0aa7062169f3b041661fbbdbdbd/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efac68b93cfac0aa7062169f3b041661fbbdbdbd/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=efac68b93cfac0aa7062169f3b041661fbbdbdbd", "patch": "@@ -1277,6 +1277,34 @@ impl<'a> Resolver<'a> {\n \n         err.emit();\n     }\n+\n+    crate fn find_similarly_named_module_or_crate(\n+        &mut self,\n+        ident: Symbol,\n+        current_module: &Module<'a>,\n+    ) -> Option<Symbol> {\n+        let mut candidates = self\n+            .extern_prelude\n+            .iter()\n+            .map(|(ident, _)| ident.name)\n+            .chain(\n+                self.module_map\n+                    .iter()\n+                    .filter(|(_, module)| {\n+                        current_module.is_ancestor_of(module) && !ptr::eq(current_module, *module)\n+                    })\n+                    .map(|(_, module)| module.kind.name())\n+                    .flatten(),\n+            )\n+            .filter(|c| !c.to_string().is_empty())\n+            .collect::<Vec<_>>();\n+        candidates.sort();\n+        candidates.dedup();\n+        match find_best_match_for_name(&candidates, ident, None) {\n+            Some(sugg) if sugg == ident => None,\n+            sugg => sugg,\n+        }\n+    }\n }\n \n impl<'a, 'b> ImportResolver<'a, 'b> {"}, {"sha": "9652c483686f06558438b529328e8abe289e4393", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/efac68b93cfac0aa7062169f3b041661fbbdbdbd/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efac68b93cfac0aa7062169f3b041661fbbdbdbd/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=efac68b93cfac0aa7062169f3b041661fbbdbdbd", "patch": "@@ -2555,7 +2555,22 @@ impl<'a> Resolver<'a> {\n \n                             (format!(\"use of undeclared type `{}`\", ident), suggestion)\n                         } else {\n-                            (format!(\"use of undeclared crate or module `{}`\", ident), None)\n+                            (\n+                                format!(\"use of undeclared crate or module `{}`\", ident),\n+                                self.find_similarly_named_module_or_crate(\n+                                    ident.name,\n+                                    &parent_scope.module,\n+                                )\n+                                .map(|sugg| {\n+                                    (\n+                                        vec![(ident.span, sugg.to_string())],\n+                                        String::from(\n+                                            \"there is a crate or module with a similar name\",\n+                                        ),\n+                                        Applicability::MaybeIncorrect,\n+                                    )\n+                                }),\n+                            )\n                         }\n                     } else {\n                         let parent = path[i - 1].ident.name;"}, {"sha": "77b6486155cd2eb44f139a32ae1aecc10f871c2f", "filename": "src/test/ui/macros/macro-inner-attributes.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/efac68b93cfac0aa7062169f3b041661fbbdbdbd/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/efac68b93cfac0aa7062169f3b041661fbbdbdbd/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr?ref=efac68b93cfac0aa7062169f3b041661fbbdbdbd", "patch": "@@ -3,6 +3,11 @@ error[E0433]: failed to resolve: use of undeclared crate or module `a`\n    |\n LL |     a::bar();\n    |     ^ use of undeclared crate or module `a`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL |     b::bar();\n+   |     ~\n \n error: aborting due to previous error\n "}, {"sha": "2471b11c61efd1106cb2baa901448131ca235ac6", "filename": "src/test/ui/suggestions/crate-or-module-typo.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/efac68b93cfac0aa7062169f3b041661fbbdbdbd/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efac68b93cfac0aa7062169f3b041661fbbdbdbd/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.rs?ref=efac68b93cfac0aa7062169f3b041661fbbdbdbd", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+\n+use st::cell::Cell; //~ ERROR failed to resolve: use of undeclared crate or module `st`\n+\n+mod bar {\n+    pub fn bar() { bar::baz(); } //~ ERROR failed to resolve: use of undeclared crate or module `bar`\n+\n+    fn baz() {}\n+}\n+\n+use bas::bar; //~ ERROR unresolved import `bas`\n+\n+struct Foo {\n+    bar: st::cell::Cell<bool> //~ ERROR failed to resolve: use of undeclared crate or module `st`\n+}\n+\n+fn main() {}"}, {"sha": "e8250c9fa5ff49971a87e91409bdb89320602937", "filename": "src/test/ui/suggestions/crate-or-module-typo.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/efac68b93cfac0aa7062169f3b041661fbbdbdbd/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/efac68b93cfac0aa7062169f3b041661fbbdbdbd/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcrate-or-module-typo.stderr?ref=efac68b93cfac0aa7062169f3b041661fbbdbdbd", "patch": "@@ -0,0 +1,43 @@\n+error[E0433]: failed to resolve: use of undeclared crate or module `st`\n+  --> $DIR/crate-or-module-typo.rs:3:5\n+   |\n+LL | use st::cell::Cell;\n+   |     ^^ use of undeclared crate or module `st`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL | use std::cell::Cell;\n+   |     ~~~\n+\n+error[E0432]: unresolved import `bas`\n+  --> $DIR/crate-or-module-typo.rs:11:5\n+   |\n+LL | use bas::bar;\n+   |     ^^^ use of undeclared crate or module `bas`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL | use bar::bar;\n+   |     ~~~\n+\n+error[E0433]: failed to resolve: use of undeclared crate or module `bar`\n+  --> $DIR/crate-or-module-typo.rs:6:20\n+   |\n+LL |     pub fn bar() { bar::baz(); }\n+   |                    ^^^ use of undeclared crate or module `bar`\n+\n+error[E0433]: failed to resolve: use of undeclared crate or module `st`\n+  --> $DIR/crate-or-module-typo.rs:14:10\n+   |\n+LL |     bar: st::cell::Cell<bool>\n+   |          ^^ use of undeclared crate or module `st`\n+   |\n+help: there is a crate or module with a similar name\n+   |\n+LL |     bar: std::cell::Cell<bool>\n+   |          ~~~\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0432, E0433.\n+For more information about an error, try `rustc --explain E0432`."}]}