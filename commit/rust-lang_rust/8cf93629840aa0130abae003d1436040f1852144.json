{"sha": "8cf93629840aa0130abae003d1436040f1852144", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZjkzNjI5ODQwYWEwMTMwYWJhZTAwM2QxNDM2MDQwZjE4NTIxNDQ=", "commit": {"author": {"name": "Tim", "email": "tim@glacyr.com", "date": "2020-10-06T20:10:55Z"}, "committer": {"name": "Tim", "email": "tim@glacyr.com", "date": "2020-10-06T20:28:13Z"}, "message": "Fixed parsing of negative number literals in macros.", "tree": {"sha": "b043fe1ec74e9c13b278add905515ca5a1044d25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b043fe1ec74e9c13b278add905515ca5a1044d25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cf93629840aa0130abae003d1436040f1852144", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEw4lU9EedwW3wHp5Oa2yysYYPHLoFAl98010ACgkQa2yysYYP\nHLoMDhAAlH28RRJtgKViA4rpS2B6VUiw56V0UkrsTjoeVkK+uEQp0ntiWxTOAtAj\nHw46ybztG5KjFlHmSA3OJ/ExYcJfUM/2VoKb05HFJKmUVj0Si/0kDcyXdYCJ4YrU\nq4QGJtjZ7sq+7tEoiSOalbFdVHs5bUiVPDeQ5pKahBzCsYkjYHJsDZIFY845pAiT\njrog21ZxkNPT7wyMXckVRdHsN+mC4/n+ngRQET3MmIEB4d/XEiE0MCmG50bd6oqF\nd+R7o6/iYu9jgeA3rRvucJwVi5e/pKeP497dX3X7d3WuRfL1H7gUM/6ysH6wxoMW\nlTCcRcsA0A+jzFxgSIh2u8ph3MlVARHxUYT21WgHg7WB38ICScDdxyg3Yctwu4kD\nltIEmDrGEzFJQNdGjxQHb+lcI45rLvfItTq3Pjy5SYR/qhMFpP1y6zKsx06FdbH9\nu2eK3rpa88X2pFTMxpLyOMc/8C8+ietCoXXTpxy5DyA/1mWNb9zR/8b5OVBTnAeo\nKMhiEJtglGk7kHc4iu6jDr8YT90WKtH1nipvQoHwiEmg7o4j6CQ06d7jl6PyqTex\nE+oVqCpKNnK2LlXye4HBbAiPfMnCG5gdNno7uu8aybd8MJT2gMR6+tt1gLG1qzmY\n+iuvGLzE820h4nxruWY0XAjIW9EhnjH2fSMgiuEH+Vetjh4Efmc=\n=zARR\n-----END PGP SIGNATURE-----", "payload": "tree b043fe1ec74e9c13b278add905515ca5a1044d25\nparent bf1043cac2f3cc2264d9fcda242f63616f4efa1b\nauthor Tim <tim@glacyr.com> 1602015055 +0200\ncommitter Tim <tim@glacyr.com> 1602016093 +0200\n\nFixed parsing of negative number literals in macros.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf93629840aa0130abae003d1436040f1852144", "html_url": "https://github.com/rust-lang/rust/commit/8cf93629840aa0130abae003d1436040f1852144", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cf93629840aa0130abae003d1436040f1852144/comments", "author": {"login": "cutsoy", "id": 70574780, "node_id": "MDQ6VXNlcjcwNTc0Nzgw", "avatar_url": "https://avatars.githubusercontent.com/u/70574780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cutsoy", "html_url": "https://github.com/cutsoy", "followers_url": "https://api.github.com/users/cutsoy/followers", "following_url": "https://api.github.com/users/cutsoy/following{/other_user}", "gists_url": "https://api.github.com/users/cutsoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/cutsoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cutsoy/subscriptions", "organizations_url": "https://api.github.com/users/cutsoy/orgs", "repos_url": "https://api.github.com/users/cutsoy/repos", "events_url": "https://api.github.com/users/cutsoy/events{/privacy}", "received_events_url": "https://api.github.com/users/cutsoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cutsoy", "id": 70574780, "node_id": "MDQ6VXNlcjcwNTc0Nzgw", "avatar_url": "https://avatars.githubusercontent.com/u/70574780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cutsoy", "html_url": "https://github.com/cutsoy", "followers_url": "https://api.github.com/users/cutsoy/followers", "following_url": "https://api.github.com/users/cutsoy/following{/other_user}", "gists_url": "https://api.github.com/users/cutsoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/cutsoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cutsoy/subscriptions", "organizations_url": "https://api.github.com/users/cutsoy/orgs", "repos_url": "https://api.github.com/users/cutsoy/repos", "events_url": "https://api.github.com/users/cutsoy/events{/privacy}", "received_events_url": "https://api.github.com/users/cutsoy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf1043cac2f3cc2264d9fcda242f63616f4efa1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1043cac2f3cc2264d9fcda242f63616f4efa1b", "html_url": "https://github.com/rust-lang/rust/commit/bf1043cac2f3cc2264d9fcda242f63616f4efa1b"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "8941da0f1c7d6a834683e0b43f8b6943d2a08afe", "filename": "crates/mbe/src/subtree_source.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8cf93629840aa0130abae003d1436040f1852144/crates%2Fmbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cf93629840aa0130abae003d1436040f1852144/crates%2Fmbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsubtree_source.rs?ref=8cf93629840aa0130abae003d1436040f1852144", "patch": "@@ -2,7 +2,7 @@\n \n use parser::{Token, TokenSource};\n use std::cell::{Cell, Ref, RefCell};\n-use syntax::{lex_single_syntax_kind, SmolStr, SyntaxKind, SyntaxKind::*, T};\n+use syntax::{tokenize, SmolStr, SyntaxKind, SyntaxKind::*, T};\n use tt::buffer::{Cursor, TokenBuffer};\n \n #[derive(Debug, Clone, Eq, PartialEq)]\n@@ -155,10 +155,17 @@ fn convert_delim(d: Option<tt::DelimiterKind>, closing: bool) -> TtToken {\n }\n \n fn convert_literal(l: &tt::Literal) -> TtToken {\n-    let kind = lex_single_syntax_kind(&l.text)\n-        .map(|(kind, _error)| kind)\n-        .filter(|kind| kind.is_literal())\n-        .unwrap_or_else(|| panic!(\"Fail to convert given literal {:#?}\", &l));\n+    let mut kinds = tokenize(&l.text).0.into_iter().map(|token| token.kind);\n+\n+    let kind = match kinds.next() {\n+        Some(kind) if kind.is_literal() => Some(kind),\n+        Some(SyntaxKind::MINUS) => match kinds.next() {\n+            Some(kind) if kind.is_literal() => Some(kind),\n+            _ => None,\n+        },\n+        _ => None,\n+    }\n+    .unwrap_or_else(|| panic!(\"Fail to convert given literal {:#?}\", &l));\n \n     TtToken { kind, is_joint_to_next: false, text: l.text.clone() }\n }"}]}