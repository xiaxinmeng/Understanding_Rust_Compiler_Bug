{"sha": "9d18c24b56b6079fc0b66d93b8679c760cd364fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMThjMjRiNTZiNjA3OWZjMGI2NmQ5M2I4Njc5Yzc2MGNkMzY0ZmI=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-08-26T07:03:35Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-08-26T07:03:35Z"}, "message": "Fix typo", "tree": {"sha": "e7407eaba8bf389ccb54710bcbd0da9d70271a4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7407eaba8bf389ccb54710bcbd0da9d70271a4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d18c24b56b6079fc0b66d93b8679c760cd364fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d18c24b56b6079fc0b66d93b8679c760cd364fb", "html_url": "https://github.com/rust-lang/rust/commit/9d18c24b56b6079fc0b66d93b8679c760cd364fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d18c24b56b6079fc0b66d93b8679c760cd364fb/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad7a03cbaa01103fbc26ba19a7f505ddccf5316f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7a03cbaa01103fbc26ba19a7f505ddccf5316f", "html_url": "https://github.com/rust-lang/rust/commit/ad7a03cbaa01103fbc26ba19a7f505ddccf5316f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e6be5c4588f0f24d65abb1194eae4ec960e72e87", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d18c24b56b6079fc0b66d93b8679c760cd364fb/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d18c24b56b6079fc0b66d93b8679c760cd364fb/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=9d18c24b56b6079fc0b66d93b8679c760cd364fb", "patch": "@@ -574,7 +574,7 @@ pub fn snippet_block<'a, T: LintContext>(\n }\n \n /// Same as `snippet_block`, but adapts the applicability level by the rules of\n-/// `snippet_with_applicabiliy`.\n+/// `snippet_with_applicability`.\n pub fn snippet_block_with_applicability<'a, T: LintContext>(\n     cx: &T,\n     span: Span,\n@@ -1304,7 +1304,7 @@ pub fn is_must_use_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n     }\n }\n \n-// check if expr is calling method or function with #[must_use] attribyte\n+// check if expr is calling method or function with #[must_use] attribute\n pub fn is_must_use_func_call(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n     let did = match expr.kind {\n         ExprKind::Call(ref path, _) => if_chain! {"}]}