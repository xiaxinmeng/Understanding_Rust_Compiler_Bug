{"sha": "0c1cb981820c55127c3c09d93868814a1df98246", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMWNiOTgxODIwYzU1MTI3YzNjMDlkOTM4Njg4MTRhMWRmOTgyNDY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-23T13:07:29Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-23T13:07:29Z"}, "message": "rename", "tree": {"sha": "edb870567bf099c5fa5edc5b89bcab410a34e5e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edb870567bf099c5fa5edc5b89bcab410a34e5e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c1cb981820c55127c3c09d93868814a1df98246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c1cb981820c55127c3c09d93868814a1df98246", "html_url": "https://github.com/rust-lang/rust/commit/0c1cb981820c55127c3c09d93868814a1df98246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c1cb981820c55127c3c09d93868814a1df98246/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5fb33a94618d45051192d99e859bdd44c3daa36", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5fb33a94618d45051192d99e859bdd44c3daa36", "html_url": "https://github.com/rust-lang/rust/commit/e5fb33a94618d45051192d99e859bdd44c3daa36"}], "stats": {"total": 42, "additions": 19, "deletions": 23}, "files": [{"sha": "ad5668a65c23fde277204391bd84e1c47d82123d", "filename": "crates/ra_syntax/src/parsing.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing.rs?ref=0c1cb981820c55127c3c09d93868814a1df98246", "patch": "@@ -2,17 +2,13 @@\n //! incremental reparsing.\n \n mod lexer;\n-mod input;\n-mod builder;\n+mod text_token_source;\n+mod text_tree_sink;\n mod reparsing;\n \n use crate::{\n     SyntaxError,\n     syntax_node::GreenNode,\n-    parsing::{\n-        builder::TreeBuilder,\n-        input::ParserInput,\n-    },\n };\n \n pub use self::lexer::{tokenize, Token};\n@@ -21,8 +17,8 @@ pub(crate) use self::reparsing::incremental_reparse;\n \n pub(crate) fn parse_text(text: &str) -> (GreenNode, Vec<SyntaxError>) {\n     let tokens = tokenize(&text);\n-    let token_source = ParserInput::new(text, &tokens);\n-    let mut tree_sink = TreeBuilder::new(text, &tokens);\n+    let token_source = text_token_source::TextTokenSource::new(text, &tokens);\n+    let mut tree_sink = text_tree_sink::TextTreeSink::new(text, &tokens);\n     ra_parser::parse(&token_source, &mut tree_sink);\n     tree_sink.finish()\n }"}, {"sha": "ba77a3b6c8fe4926b33faf35fb608837b4633ee7", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=0c1cb981820c55127c3c09d93868814a1df98246", "patch": "@@ -14,8 +14,8 @@ use crate::{\n     algo,\n     syntax_node::{GreenNode, SyntaxNode},\n     parsing::{\n-        input::ParserInput,\n-        builder::TreeBuilder,\n+        text_token_source::TextTokenSource,\n+        text_tree_sink::TextTreeSink,\n         lexer::{tokenize, Token},\n     }\n };\n@@ -68,8 +68,8 @@ fn reparse_block<'node>(\n     if !is_balanced(&tokens) {\n         return None;\n     }\n-    let token_source = ParserInput::new(&text, &tokens);\n-    let mut tree_sink = TreeBuilder::new(&text, &tokens);\n+    let token_source = TextTokenSource::new(&text, &tokens);\n+    let mut tree_sink = TextTreeSink::new(&text, &tokens);\n     reparser.parse(&token_source, &mut tree_sink);\n     let (green, new_errors) = tree_sink.finish();\n     Some((node, green, new_errors))"}, {"sha": "a6277f66fc88ba2936c8463d6d4920b2c985e226", "filename": "crates/ra_syntax/src/parsing/text_token_source.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs?ref=0c1cb981820c55127c3c09d93868814a1df98246", "patch": "@@ -5,7 +5,7 @@ use crate::{\n     parsing::lexer::Token,\n };\n \n-pub(crate) struct ParserInput<'t> {\n+pub(crate) struct TextTokenSource<'t> {\n     text: &'t str,\n     /// start position of each token(expect whitespace and comment)\n     /// ```non-rust\n@@ -25,7 +25,7 @@ pub(crate) struct ParserInput<'t> {\n     tokens: Vec<Token>,\n }\n \n-impl<'t> TokenSource for ParserInput<'t> {\n+impl<'t> TokenSource for TextTokenSource<'t> {\n     fn token_kind(&self, pos: usize) -> SyntaxKind {\n         if !(pos < self.tokens.len()) {\n             return EOF;\n@@ -48,9 +48,9 @@ impl<'t> TokenSource for ParserInput<'t> {\n     }\n }\n \n-impl<'t> ParserInput<'t> {\n+impl<'t> TextTokenSource<'t> {\n     /// Generate input from tokens(expect comment and whitespace).\n-    pub fn new(text: &'t str, raw_tokens: &'t [Token]) -> ParserInput<'t> {\n+    pub fn new(text: &'t str, raw_tokens: &'t [Token]) -> TextTokenSource<'t> {\n         let mut tokens = Vec::new();\n         let mut start_offsets = Vec::new();\n         let mut len = 0.into();\n@@ -62,6 +62,6 @@ impl<'t> ParserInput<'t> {\n             len += token.len;\n         }\n \n-        ParserInput { text, start_offsets, tokens }\n+        TextTokenSource { text, start_offsets, tokens }\n     }\n }", "previous_filename": "crates/ra_syntax/src/parsing/input.rs"}, {"sha": "8c1d78deb36527bddb189f9286cbd04de52df089", "filename": "crates/ra_syntax/src/parsing/text_tree_sink.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c1cb981820c55127c3c09d93868814a1df98246/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=0c1cb981820c55127c3c09d93868814a1df98246", "patch": "@@ -12,8 +12,8 @@ use crate::{\n \n /// Bridges the parser with our specific syntax tree representation.\n ///\n-/// `TreeBuilder` also handles attachment of trivia (whitespace) to nodes.\n-pub(crate) struct TreeBuilder<'a> {\n+/// `TextTreeSink` also handles attachment of trivia (whitespace) to nodes.\n+pub(crate) struct TextTreeSink<'a> {\n     text: &'a str,\n     tokens: &'a [Token],\n     text_pos: TextUnit,\n@@ -29,7 +29,7 @@ enum State {\n     PendingFinish,\n }\n \n-impl<'a> TreeSink for TreeBuilder<'a> {\n+impl<'a> TreeSink for TextTreeSink<'a> {\n     fn leaf(&mut self, kind: SyntaxKind, n_tokens: u8) {\n         match mem::replace(&mut self.state, State::Normal) {\n             State::PendingStart => unreachable!(),\n@@ -91,9 +91,9 @@ impl<'a> TreeSink for TreeBuilder<'a> {\n     }\n }\n \n-impl<'a> TreeBuilder<'a> {\n-    pub(super) fn new(text: &'a str, tokens: &'a [Token]) -> TreeBuilder<'a> {\n-        TreeBuilder {\n+impl<'a> TextTreeSink<'a> {\n+    pub(super) fn new(text: &'a str, tokens: &'a [Token]) -> TextTreeSink<'a> {\n+        TextTreeSink {\n             text,\n             tokens,\n             text_pos: 0.into(),", "previous_filename": "crates/ra_syntax/src/parsing/builder.rs"}]}