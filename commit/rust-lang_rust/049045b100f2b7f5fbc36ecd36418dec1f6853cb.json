{"sha": "049045b100f2b7f5fbc36ecd36418dec1f6853cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OTA0NWIxMDBmMmI3ZjVmYmMzNmVjZDM2NDE4ZGVjMWY2ODUzY2I=", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2021-01-23T00:23:13Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2021-03-09T16:54:14Z"}, "message": "Replace todos with impls\n\nChanged to various implementations, copying the style of prior function calls in places I was\nunsure of.\n\nAlso one minor style nit.", "tree": {"sha": "f1a1fd79c0909d3cc5ae061cc88e98c25476c3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1a1fd79c0909d3cc5ae061cc88e98c25476c3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/049045b100f2b7f5fbc36ecd36418dec1f6853cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/049045b100f2b7f5fbc36ecd36418dec1f6853cb", "html_url": "https://github.com/rust-lang/rust/commit/049045b100f2b7f5fbc36ecd36418dec1f6853cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/049045b100f2b7f5fbc36ecd36418dec1f6853cb/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "982382dc0361aa19e2f7e1e2b02003320d34b502", "url": "https://api.github.com/repos/rust-lang/rust/commits/982382dc0361aa19e2f7e1e2b02003320d34b502", "html_url": "https://github.com/rust-lang/rust/commit/982382dc0361aa19e2f7e1e2b02003320d34b502"}], "stats": {"total": 55, "additions": 45, "deletions": 10}, "files": [{"sha": "054273262f79c2ea0b27002d23e8d4ebb3e8ab8e", "filename": "compiler/rustc_codegen_ssa/src/mir/statement.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fstatement.rs?ref=049045b100f2b7f5fbc36ecd36418dec1f6853cb", "patch": "@@ -126,8 +126,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 let count = count_val.immediate_or_packed_pair(&mut bx);\n                 let dst = dst_val.immediate_or_packed_pair(&mut bx);\n                 let src = src_val.immediate_or_packed_pair(&mut bx);\n-                use crate::MemFlags;\n-                let flags = MemFlags::empty();\n+                let flags = crate::MemFlags::empty();\n                 bx.memcpy(\n                     dst,\n                     dst_val.layout.layout.align.pref,"}, {"sha": "17c4f3c649460226e7739494576d458c1f5832a0", "filename": "compiler/rustc_mir/src/borrow_check/invalidation.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Finvalidation.rs?ref=049045b100f2b7f5fbc36ecd36418dec1f6853cb", "patch": "@@ -100,12 +100,6 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n                 self.consume_operand(location, src);\n                 self.consume_operand(location, dst);\n                 self.consume_operand(location, count);\n-                match dst {\n-                    Operand::Move(ref place) | Operand::Copy(ref place) => {\n-                        self.mutate_place(location, *place, Deep, JustWrite);\n-                    }\n-                    _ => {}\n-                }\n             }\n             StatementKind::Nop\n             | StatementKind::Coverage(..)"}, {"sha": "037abb04f56d277fecbe21c91034dc369a4f526a", "filename": "compiler/rustc_mir/src/borrow_check/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs?ref=049045b100f2b7f5fbc36ecd36418dec1f6853cb", "patch": "@@ -627,7 +627,15 @@ impl<'cx, 'tcx> dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tc\n                 }\n             }\n \n-            StatementKind::CopyNonOverlapping(..) => todo!(),\n+            StatementKind::CopyNonOverlapping(box rustc_middle::mir::CopyNonOverlapping {\n+                src,\n+                dst,\n+                count,\n+            }) => {\n+                self.consume_operand(location, (src, span), flow_state);\n+                self.consume_operand(location, (dst, span), flow_state);\n+                self.consume_operand(location, (count, span), flow_state);\n+            }\n             StatementKind::Nop\n             | StatementKind::Coverage(..)\n             | StatementKind::AscribeUserType(..)"}, {"sha": "58db2752c98452ed189bc4b770af22876e5ca751", "filename": "compiler/rustc_mir/src/borrow_check/type_check/mod.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/049045b100f2b7f5fbc36ecd36418dec1f6853cb/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=049045b100f2b7f5fbc36ecd36418dec1f6853cb", "patch": "@@ -1520,7 +1520,41 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                     );\n                 }\n             }\n-            StatementKind::CopyNonOverlapping(..) => todo!(),\n+            StatementKind::CopyNonOverlapping(box rustc_middle::mir::CopyNonOverlapping {\n+                ref src,\n+                ref dst,\n+                ref count,\n+            }) => {\n+                let op_src_ty = self.normalize(src.ty(body, self.tcx()), location);\n+                let op_dst_ty = self.normalize(dst.ty(body, self.tcx()), location);\n+                // since CopyNonOverlapping is parametrized by 1 type,\n+                // we only need to check that they are equal and not keep an extra parameter.\n+                if let Err(terr) = self.eq_types(\n+                    op_src_ty,\n+                    op_dst_ty,\n+                    location.to_locations(),\n+                    ConstraintCategory::Internal,\n+                ) {\n+                    span_mirbug!(\n+                        self,\n+                        stmt,\n+                        \"bad arg ({:?} != {:?}): {:?}\",\n+                        op_src_ty,\n+                        op_dst_ty,\n+                        terr\n+                    );\n+                }\n+\n+                let op_cnt_ty = self.normalize(count.ty(body, self.tcx()), location);\n+                if let Err(terr) = self.eq_types(\n+                    op_cnt_ty,\n+                    tcx.types.usize,\n+                    location.to_locations(),\n+                    ConstraintCategory::Internal,\n+                ) {\n+                    span_mirbug!(self, stmt, \"bad arg ({:?} != usize): {:?}\", op_cnt_ty, terr);\n+                }\n+            }\n             StatementKind::FakeRead(..)\n             | StatementKind::StorageLive(..)\n             | StatementKind::StorageDead(..)"}]}