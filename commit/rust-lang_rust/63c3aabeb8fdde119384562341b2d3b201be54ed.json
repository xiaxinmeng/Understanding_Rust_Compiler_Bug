{"sha": "63c3aabeb8fdde119384562341b2d3b201be54ed", "node_id": "C_kwDOAAsO6NoAKDYzYzNhYWJlYjhmZGRlMTE5Mzg0NTYyMzQxYjJkM2IyMDFiZTU0ZWQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-24T06:31:11Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-03T16:42:04Z"}, "message": "Create lifetime parameter like any other parameter.", "tree": {"sha": "98b73b4c61f18eaf417472cb903e58e66acc2132", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98b73b4c61f18eaf417472cb903e58e66acc2132"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63c3aabeb8fdde119384562341b2d3b201be54ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63c3aabeb8fdde119384562341b2d3b201be54ed", "html_url": "https://github.com/rust-lang/rust/commit/63c3aabeb8fdde119384562341b2d3b201be54ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63c3aabeb8fdde119384562341b2d3b201be54ed/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99e2d33315afa0168e971d929667dde0158200e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/99e2d33315afa0168e971d929667dde0158200e7", "html_url": "https://github.com/rust-lang/rust/commit/99e2d33315afa0168e971d929667dde0158200e7"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "dd6831e44fdc1a6f655b29203ee8c388e54c7c49", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/63c3aabeb8fdde119384562341b2d3b201be54ed/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63c3aabeb8fdde119384562341b2d3b201be54ed/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=63c3aabeb8fdde119384562341b2d3b201be54ed", "patch": "@@ -221,9 +221,12 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 tcx.mk_region(ty::ReLateBound(debruijn, br))\n             }\n \n-            Some(rl::Region::EarlyBound(index, id)) => {\n-                let name = lifetime_name(id.expect_local());\n-                tcx.mk_region(ty::ReEarlyBound(ty::EarlyBoundRegion { def_id: id, index, name }))\n+            Some(rl::Region::EarlyBound(_, def_id)) => {\n+                let name = tcx.hir().ty_param_name(def_id.expect_local());\n+                let item_def_id = tcx.hir().ty_param_owner(def_id.expect_local());\n+                let generics = tcx.generics_of(item_def_id);\n+                let index = generics.param_def_id_to_index[&def_id];\n+                tcx.mk_region(ty::ReEarlyBound(ty::EarlyBoundRegion { def_id, index, name }))\n             }\n \n             Some(rl::Region::Free(scope, id)) => {"}]}