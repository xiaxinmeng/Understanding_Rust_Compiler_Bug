{"sha": "23085b6360088758a55c12503864e6c1297e8dd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMDg1YjYzNjAwODg3NThhNTVjMTI1MDM4NjRlNmMxMjk3ZThkZDU=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-09-01T18:34:46Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-09-25T21:46:15Z"}, "message": "Fix profiling query key creation", "tree": {"sha": "f4baee3438ae5af9c417ca4bc3543836545b8dd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4baee3438ae5af9c417ca4bc3543836545b8dd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23085b6360088758a55c12503864e6c1297e8dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23085b6360088758a55c12503864e6c1297e8dd5", "html_url": "https://github.com/rust-lang/rust/commit/23085b6360088758a55c12503864e6c1297e8dd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23085b6360088758a55c12503864e6c1297e8dd5/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb8e1764bb31bc63a6b61f446e28bb567015de01", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb8e1764bb31bc63a6b61f446e28bb567015de01", "html_url": "https://github.com/rust-lang/rust/commit/bb8e1764bb31bc63a6b61f446e28bb567015de01"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "d1257a1c3943495204d73a88e874e43e84bdb2b0", "filename": "compiler/rustc_middle/src/ty/query/profiling_support.rs", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/23085b6360088758a55c12503864e6c1297e8dd5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fprofiling_support.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23085b6360088758a55c12503864e6c1297e8dd5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fprofiling_support.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fprofiling_support.rs?ref=23085b6360088758a55c12503864e6c1297e8dd5", "patch": "@@ -4,9 +4,10 @@ use measureme::{StringComponent, StringId};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::SelfProfiler;\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n-use rustc_hir::definitions::{DefPathData, DefPathDataName};\n+use rustc_hir::definitions::DefPathData;\n use rustc_query_system::query::QueryCache;\n use rustc_query_system::query::QueryState;\n+use rustc_span::symbol::Symbol;\n use std::fmt::Debug;\n use std::io::Write;\n \n@@ -66,25 +67,17 @@ impl<'p, 'c, 'tcx> QueryKeyStringBuilder<'p, 'c, 'tcx> {\n                 end_index = 3;\n             }\n             other => {\n-                name = match other.name() {\n-                    DefPathDataName::Named(name) => {\n-                        dis = \"\";\n-                        end_index = 3;\n-                        name\n-                    }\n-                    DefPathDataName::Anon { namespace } => {\n-                        write!(\n-                            &mut dis_buffer[..],\n-                            \"[{}]\",\n-                            def_key.disambiguated_data.disambiguator\n-                        )\n+                name = Symbol::intern(&other.to_string());\n+                if def_key.disambiguated_data.disambiguator == 0 {\n+                    dis = \"\";\n+                    end_index = 3;\n+                } else {\n+                    write!(&mut dis_buffer[..], \"[{}]\", def_key.disambiguated_data.disambiguator)\n                         .unwrap();\n-                        let end_of_dis = dis_buffer.iter().position(|&c| c == b']').unwrap();\n-                        dis = std::str::from_utf8(&dis_buffer[..end_of_dis + 1]).unwrap();\n-                        end_index = 4;\n-                        namespace\n-                    }\n-                };\n+                    let end_of_dis = dis_buffer.iter().position(|&c| c == b']').unwrap();\n+                    dis = std::str::from_utf8(&dis_buffer[..end_of_dis + 1]).unwrap();\n+                    end_index = 4;\n+                }\n             }\n         }\n "}]}