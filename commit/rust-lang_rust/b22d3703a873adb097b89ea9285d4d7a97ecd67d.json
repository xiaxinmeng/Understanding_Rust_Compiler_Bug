{"sha": "b22d3703a873adb097b89ea9285d4d7a97ecd67d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMmQzNzAzYTg3M2FkYjA5N2I4OWVhOTI4NWQ0ZDdhOTdlY2Q2N2Q=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-01-31T21:03:59Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-02-11T21:53:52Z"}, "message": "Document stabilized versions of atomic singlethreaded fences", "tree": {"sha": "c2a6322003fa5c24a069919db0a9e1a2e149fb1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2a6322003fa5c24a069919db0a9e1a2e149fb1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b22d3703a873adb097b89ea9285d4d7a97ecd67d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b22d3703a873adb097b89ea9285d4d7a97ecd67d", "html_url": "https://github.com/rust-lang/rust/commit/b22d3703a873adb097b89ea9285d4d7a97ecd67d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b22d3703a873adb097b89ea9285d4d7a97ecd67d/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d53ee472eb96da448ffd6392678ff3eeb1e87a37", "url": "https://api.github.com/repos/rust-lang/rust/commits/d53ee472eb96da448ffd6392678ff3eeb1e87a37", "html_url": "https://github.com/rust-lang/rust/commit/d53ee472eb96da448ffd6392678ff3eeb1e87a37"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "3d92284f9470e5e1c59cc9719c9e49b279034a0f", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b22d3703a873adb097b89ea9285d4d7a97ecd67d/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22d3703a873adb097b89ea9285d4d7a97ecd67d/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=b22d3703a873adb097b89ea9285d4d7a97ecd67d", "patch": "@@ -851,27 +851,51 @@ extern \"rust-intrinsic\" {\n     /// compiler, but no instructions will be emitted for it. This is\n     /// appropriate for operations on the same thread that may be preempted,\n     /// such as when interacting with signal handlers.\n+    ///\n+    /// The stabilized version of this intrinsic is available in\n+    /// [`std::sync::atomic::compiler_fence`](../../std/sync/atomic/fn.compiler_fence.html)\n+    /// by passing\n+    /// [`Ordering::SeqCst`](../../std/sync/atomic/enum.Ordering.html#variant.SeqCst)\n+    /// as the `order`.\n     pub fn atomic_singlethreadfence();\n     /// A compiler-only memory barrier.\n     ///\n     /// Memory accesses will never be reordered across this barrier by the\n     /// compiler, but no instructions will be emitted for it. This is\n     /// appropriate for operations on the same thread that may be preempted,\n     /// such as when interacting with signal handlers.\n+    ///\n+    /// The stabilized version of this intrinsic is available in\n+    /// [`std::sync::atomic::compiler_fence`](../../std/sync/atomic/fn.compiler_fence.html)\n+    /// by passing\n+    /// [`Ordering::Acquire`](../../std/sync/atomic/enum.Ordering.html#variant.Acquire)\n+    /// as the `order`.\n     pub fn atomic_singlethreadfence_acq();\n     /// A compiler-only memory barrier.\n     ///\n     /// Memory accesses will never be reordered across this barrier by the\n     /// compiler, but no instructions will be emitted for it. This is\n     /// appropriate for operations on the same thread that may be preempted,\n     /// such as when interacting with signal handlers.\n+    ///\n+    /// The stabilized version of this intrinsic is available in\n+    /// [`std::sync::atomic::compiler_fence`](../../std/sync/atomic/fn.compiler_fence.html)\n+    /// by passing\n+    /// [`Ordering::Release`](../../std/sync/atomic/enum.Ordering.html#variant.Release)\n+    /// as the `order`.\n     pub fn atomic_singlethreadfence_rel();\n     /// A compiler-only memory barrier.\n     ///\n     /// Memory accesses will never be reordered across this barrier by the\n     /// compiler, but no instructions will be emitted for it. This is\n     /// appropriate for operations on the same thread that may be preempted,\n     /// such as when interacting with signal handlers.\n+    ///\n+    /// The stabilized version of this intrinsic is available in\n+    /// [`std::sync::atomic::compiler_fence`](../../std/sync/atomic/fn.compiler_fence.html)\n+    /// by passing\n+    /// [`Ordering::AcqRel`](../../std/sync/atomic/enum.Ordering.html#variant.AcqRel)\n+    /// as the `order`.\n     pub fn atomic_singlethreadfence_acqrel();\n \n     /// Magic intrinsic that derives its meaning from attributes"}]}