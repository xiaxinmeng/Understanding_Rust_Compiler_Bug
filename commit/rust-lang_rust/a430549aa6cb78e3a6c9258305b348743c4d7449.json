{"sha": "a430549aa6cb78e3a6c9258305b348743c4d7449", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MzA1NDlhYTZjYjc4ZTNhNmM5MjU4MzA1YjM0ODc0M2M0ZDc0NDk=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-03-09T17:27:16Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-03-09T17:27:23Z"}, "message": "Stop using `ContainerId` in `AssocContainerId`", "tree": {"sha": "0948c2f984b3f5ccca17f2307e730090d0a6b477", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0948c2f984b3f5ccca17f2307e730090d0a6b477"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a430549aa6cb78e3a6c9258305b348743c4d7449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a430549aa6cb78e3a6c9258305b348743c4d7449", "html_url": "https://github.com/rust-lang/rust/commit/a430549aa6cb78e3a6c9258305b348743c4d7449", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a430549aa6cb78e3a6c9258305b348743c4d7449/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12f6bdcfd9fe1393887b3be0d0329fcf11492e75", "url": "https://api.github.com/repos/rust-lang/rust/commits/12f6bdcfd9fe1393887b3be0d0329fcf11492e75", "html_url": "https://github.com/rust-lang/rust/commit/12f6bdcfd9fe1393887b3be0d0329fcf11492e75"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "c6d424c4870b6318e48ffe5843863da4ee3b6980", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=a430549aa6cb78e3a6c9258305b348743c4d7449", "patch": "@@ -1157,7 +1157,7 @@ where\n {\n     match id.lookup(db.upcast()).container {\n         AssocContainerId::TraitId(_) | AssocContainerId::ImplId(_) => Some(ctor(DEF::from(id))),\n-        AssocContainerId::ContainerId(_) => None,\n+        AssocContainerId::ModuleId(_) => None,\n     }\n }\n \n@@ -1185,7 +1185,7 @@ impl AssocItem {\n         match container {\n             AssocContainerId::TraitId(id) => AssocItemContainer::Trait(id.into()),\n             AssocContainerId::ImplId(id) => AssocItemContainer::Impl(id.into()),\n-            AssocContainerId::ContainerId(_) => panic!(\"invalid AssocItem\"),\n+            AssocContainerId::ModuleId(_) => panic!(\"invalid AssocItem\"),\n         }\n     }\n "}, {"sha": "ab3b17f6cd99df2726481a6b461b62c66ceccc74", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=a430549aa6cb78e3a6c9258305b348743c4d7449", "patch": "@@ -286,11 +286,11 @@ pub enum ContainerId {\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub enum AssocContainerId {\n-    ContainerId(ContainerId),\n+    ModuleId(ModuleId),\n     ImplId(ImplId),\n     TraitId(TraitId),\n }\n-impl_from!(ContainerId for AssocContainerId);\n+impl_from!(ModuleId for AssocContainerId);\n \n /// A Data Type\n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]\n@@ -459,7 +459,7 @@ impl HasModule for ContainerId {\n impl HasModule for AssocContainerId {\n     fn module(&self, db: &dyn db::DefDatabase) -> ModuleId {\n         match *self {\n-            AssocContainerId::ContainerId(it) => it.module(db),\n+            AssocContainerId::ModuleId(it) => it,\n             AssocContainerId::ImplId(it) => it.lookup(db).container.module(db),\n             AssocContainerId::TraitId(it) => it.lookup(db).container.module(db),\n         }"}, {"sha": "5bf2ba721b2ed7f2e705dbbd00eb1ec92c53152d", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=a430549aa6cb78e3a6c9258305b348743c4d7449", "patch": "@@ -1121,7 +1121,7 @@ impl ModCollector<'_, '_> {\n \n                     def = Some(DefData {\n                         id: FunctionLoc {\n-                            container: container.into(),\n+                            container: module.into(),\n                             id: ItemTreeId::new(self.file_id, id),\n                         }\n                         .intern(self.def_collector.db)\n@@ -1188,7 +1188,7 @@ impl ModCollector<'_, '_> {\n                     if let Some(name) = &it.name {\n                         def = Some(DefData {\n                             id: ConstLoc {\n-                                container: container.into(),\n+                                container: module.into(),\n                                 id: ItemTreeId::new(self.file_id, id),\n                             }\n                             .intern(self.def_collector.db)\n@@ -1228,7 +1228,7 @@ impl ModCollector<'_, '_> {\n \n                     def = Some(DefData {\n                         id: TypeAliasLoc {\n-                            container: container.into(),\n+                            container: module.into(),\n                             id: ItemTreeId::new(self.file_id, id),\n                         }\n                         .intern(self.def_collector.db)"}, {"sha": "6f036c8c42d1ecd5e311ab9731b065df05ec5519", "filename": "crates/hir_def/src/resolver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fresolver.rs?ref=a430549aa6cb78e3a6c9258305b348743c4d7449", "patch": "@@ -700,7 +700,7 @@ impl HasResolver for ContainerId {\n impl HasResolver for AssocContainerId {\n     fn resolver(self, db: &dyn DefDatabase) -> Resolver {\n         match self {\n-            AssocContainerId::ContainerId(it) => it.resolver(db),\n+            AssocContainerId::ModuleId(it) => it.resolver(db),\n             AssocContainerId::TraitId(it) => it.resolver(db),\n             AssocContainerId::ImplId(it) => it.resolver(db),\n         }"}, {"sha": "ae3554bac89a9dda3bb489facb00eb86fffc9f58", "filename": "crates/hir_ty/src/infer/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs?ref=a430549aa6cb78e3a6c9258305b348743c4d7449", "patch": "@@ -260,7 +260,7 @@ impl<'a> InferenceContext<'a> {\n                         }));\n                         Some(trait_substs)\n                     }\n-                    AssocContainerId::ContainerId(_) => None,\n+                    AssocContainerId::ModuleId(_) => None,\n                 };\n \n                 self.write_assoc_resolution(id, item);"}, {"sha": "2483672674ae0119e11d20e2dddeaa80168f6628", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=a430549aa6cb78e3a6c9258305b348743c4d7449", "patch": "@@ -715,7 +715,7 @@ fn transform_receiver_ty(\n                 .fill_with_unknown()\n                 .build()\n         }\n-        AssocContainerId::ContainerId(_) => unreachable!(),\n+        AssocContainerId::ModuleId(_) => unreachable!(),\n     };\n     let sig = db.callable_item_signature(function_id.into());\n     Some(sig.value.params()[0].clone().subst_bound_vars(&substs))"}, {"sha": "7351e4e54af75cffc4bd47d21c061e80a5a25105", "filename": "crates/hir_ty/src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a430549aa6cb78e3a6c9258305b348743c4d7449/crates%2Fhir_ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Futils.rs?ref=a430549aa6cb78e3a6c9258305b348743c4d7449", "patch": "@@ -259,6 +259,6 @@ fn parent_generic_def(db: &dyn DefDatabase, def: GenericDefId) -> Option<Generic\n     match container {\n         AssocContainerId::ImplId(it) => Some(it.into()),\n         AssocContainerId::TraitId(it) => Some(it.into()),\n-        AssocContainerId::ContainerId(_) => None,\n+        AssocContainerId::ModuleId(_) => None,\n     }\n }"}]}