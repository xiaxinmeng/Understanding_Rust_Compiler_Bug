{"sha": "98e4cd50f9908dcf2330196baa756a775343e47d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZTRjZDUwZjk5MDhkY2YyMzMwMTk2YmFhNzU2YTc3NTM0M2U0N2Q=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-19T10:35:58Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-19T10:35:58Z"}, "message": "fix: use detected MSVC's link.exe", "tree": {"sha": "34050e178c7ea9cc78c5a0124a2887988106315b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34050e178c7ea9cc78c5a0124a2887988106315b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98e4cd50f9908dcf2330196baa756a775343e47d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98e4cd50f9908dcf2330196baa756a775343e47d", "html_url": "https://github.com/rust-lang/rust/commit/98e4cd50f9908dcf2330196baa756a775343e47d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98e4cd50f9908dcf2330196baa756a775343e47d/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ef8b6602732e5448cfd0d9d05c955aa1815aed", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ef8b6602732e5448cfd0d9d05c955aa1815aed", "html_url": "https://github.com/rust-lang/rust/commit/c8ef8b6602732e5448cfd0d9d05c955aa1815aed"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "afbcaf4c659d771ca25eb5a7f757d5a89e4a7724", "filename": "src/librustc_codegen_llvm/back/link.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/98e4cd50f9908dcf2330196baa756a775343e47d/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e4cd50f9908dcf2330196baa756a775343e47d/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs?ref=98e4cd50f9908dcf2330196baa756a775343e47d", "patch": "@@ -61,6 +61,8 @@ pub use rustc_codegen_utils::link::{find_crate_name, filename_for_input, default\n // path for MSVC to find its DLLs, and gcc to find its bundled\n // toolchain\n pub fn get_linker(sess: &Session, linker: &Path, flavor: LinkerFlavor) -> (PathBuf, Command) {\n+    let msvc_tool = windows_registry::find_tool(&sess.opts.target_triple.triple(), \"link.exe\");\n+\n     // If our linker looks like a batch script on Windows then to execute this\n     // we'll need to spawn `cmd` explicitly. This is primarily done to handle\n     // emscripten where the linker is `emcc.bat` and needs to be spawned as\n@@ -73,12 +75,13 @@ pub fn get_linker(sess: &Session, linker: &Path, flavor: LinkerFlavor) -> (PathB\n         Some(linker) if cfg!(windows) && linker.ends_with(\".bat\") => Command::bat_script(linker),\n         _ => match flavor {\n             LinkerFlavor::Lld(f) => Command::lld(linker, f),\n+            LinkerFlavor::Msvc => {\n+                Command::new(msvc_tool.as_ref().map(|t| t.path()).unwrap_or(linker))\n+            },\n             _ => Command::new(linker),\n         }\n     };\n \n-    let msvc_tool = windows_registry::find_tool(&sess.opts.target_triple.triple(), \"link.exe\");\n-\n     // The compiler's sysroot often has some bundled tools, so add it to the\n     // PATH for the child.\n     let mut new_path = sess.host_filesearch(PathKind::All)"}]}