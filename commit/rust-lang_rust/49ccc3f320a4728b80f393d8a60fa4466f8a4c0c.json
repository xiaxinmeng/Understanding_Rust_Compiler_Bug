{"sha": "49ccc3f320a4728b80f393d8a60fa4466f8a4c0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5Y2NjM2YzMjBhNDcyOGI4MGYzOTNkOGE2MGZhNDQ2NmY4YTRjMGM=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-20T21:09:38Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-20T21:09:38Z"}, "message": "Remove redundant second example", "tree": {"sha": "62c23fdcb04e85b30fe75e8eda45d7548ea51137", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62c23fdcb04e85b30fe75e8eda45d7548ea51137"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c", "html_url": "https://github.com/rust-lang/rust/commit/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1df9f1b6b59733ff94f2b74e943ab669c06c67d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1df9f1b6b59733ff94f2b74e943ab669c06c67d", "html_url": "https://github.com/rust-lang/rust/commit/c1df9f1b6b59733ff94f2b74e943ab669c06c67d"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "6d211d7795210c299e4c879d166e3f01b959a7ba", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=49ccc3f320a4728b80f393d8a60fa4466f8a4c0c", "patch": "@@ -1549,34 +1549,6 @@ pub trait Iterator {\n     /// let of_rust: Vec<_> = words.collect();\n     /// assert_eq!(of_rust, vec![\"of\", \"Rust\"]);\n     /// ```\n-    ///\n-    /// This demonstrates a use case that needs `by_ref`:\n-    ///\n-    /// ```compile_fail,E0382\n-    /// let a = [1, 2, 3, 4, 5];\n-    /// let mut iter = a.iter();\n-    ///\n-    /// let sum: i32 = iter.take(3).fold(0, |acc, i| acc + i);\n-    /// assert_eq!(sum, 6);\n-    ///\n-    /// // Error! We can't use `iter` again because it was moved\n-    /// // by `take`.\n-    /// assert_eq!(iter.next(), Some(&4));\n-    /// ```\n-    ///\n-    /// Now, let's use `by_ref` to make this work:\n-    ///\n-    /// ```\n-    /// let a = [1, 2, 3, 4, 5];\n-    /// let mut iter = a.iter();\n-    ///\n-    /// // We add in a call to `by_ref` here so `iter` isn't moved.\n-    /// let sum: i32 = iter.by_ref().take(3).fold(0, |acc, i| acc + i);\n-    /// assert_eq!(sum, 6);\n-    ///\n-    /// // And now we can use `iter` again because we still own it.\n-    /// assert_eq!(iter.next(), Some(&4));\n-    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn by_ref(&mut self) -> &mut Self\n     where"}]}