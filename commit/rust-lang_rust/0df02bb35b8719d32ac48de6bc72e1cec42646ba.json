{"sha": "0df02bb35b8719d32ac48de6bc72e1cec42646ba", "node_id": "C_kwDOAAsO6NoAKDBkZjAyYmIzNWI4NzE5ZDMyYWM0OGRlNmJjNzJlMWNlYzQyNjQ2YmE", "commit": {"author": {"name": "Noa", "email": "coolreader18@gmail.com", "date": "2022-03-31T02:39:24Z"}, "committer": {"name": "Noa", "email": "coolreader18@gmail.com", "date": "2022-03-31T02:39:24Z"}, "message": "Remove antipattern from process::exit docs", "tree": {"sha": "94b93ef8fa0884750d7479feb44663cdfeb4cee2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94b93ef8fa0884750d7479feb44663cdfeb4cee2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0df02bb35b8719d32ac48de6bc72e1cec42646ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEtojRJkPnkSUwmWPDf599sXaMWc8FAmJFFFwACgkQf599sXaM\nWc/WEBAAlqbDj4AsmjZW6AA13lVF6x6yf9d961HDFv3zPSGqr8zb0qjUJvn/zIg4\njwRuWq9APh3X3ZOpg6gZrJn1SiapD9O13YlDx8Y4VZAE1HNEkKIy6yx22vBkaMuT\nqml9YYQrLw+OcLka2BG2e6pE6Z6FboSnZ8l8JWBBs0QHlWbVw3+CyHyDrnlnXEnh\ngq6TdHqhm1E/VyCGyEbVSWKPkC1bpKNVwRLLNKO2bZHVGo1fosNOt22AacYE6G6F\n0CiGO6NYASvRVVtv28FglAK5bXYsH17qXxcWDxCORtc3wkOJigaJODb/oxWel164\nx7sOgorZxIdUTsMdur4cDGlFN4PaTgCVKoLtGj9IrEW7RTz7EDjgHahWGUCUTJok\n2DbeI3witzbanwdpTFJAkSXmgZ1GJxJ7uIPqOg39TEkpUL+EqiAyb2yqeZdmH1BS\nHBILl27NBHqsbcR8sWgMdIzxXlyHCqH/zlqF+SxprWjPBbmVDq4a2tPzjZZR/3za\n0ikISHNApkjsgVquGu2rAXqFZIdJTV+0rd9SNMNg8wOhbZhxnanBPYCvrr/Nb+X6\ncRb4lcfL0XOFcmm7GQ5vwQ6LwyzDXkzZDf2BzemAItlKE0jfxMgWuXaL3M/Z8ndL\nCkmeYMxY8bEKDdarM9S2heWu9Xsqz/YsNmsMs45wFWKAu9AF79E=\n=hlo9\n-----END PGP SIGNATURE-----", "payload": "tree 94b93ef8fa0884750d7479feb44663cdfeb4cee2\nparent 8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1\nauthor Noa <coolreader18@gmail.com> 1648694364 -0500\ncommitter Noa <coolreader18@gmail.com> 1648694364 -0500\n\nRemove antipattern from process::exit docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0df02bb35b8719d32ac48de6bc72e1cec42646ba", "html_url": "https://github.com/rust-lang/rust/commit/0df02bb35b8719d32ac48de6bc72e1cec42646ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0df02bb35b8719d32ac48de6bc72e1cec42646ba/comments", "author": {"login": "coolreader18", "id": 33094578, "node_id": "MDQ6VXNlcjMzMDk0NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/33094578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolreader18", "html_url": "https://github.com/coolreader18", "followers_url": "https://api.github.com/users/coolreader18/followers", "following_url": "https://api.github.com/users/coolreader18/following{/other_user}", "gists_url": "https://api.github.com/users/coolreader18/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolreader18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolreader18/subscriptions", "organizations_url": "https://api.github.com/users/coolreader18/orgs", "repos_url": "https://api.github.com/users/coolreader18/repos", "events_url": "https://api.github.com/users/coolreader18/events{/privacy}", "received_events_url": "https://api.github.com/users/coolreader18/received_events", "type": "User", "site_admin": false}, "committer": {"login": "coolreader18", "id": 33094578, "node_id": "MDQ6VXNlcjMzMDk0NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/33094578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolreader18", "html_url": "https://github.com/coolreader18", "followers_url": "https://api.github.com/users/coolreader18/followers", "following_url": "https://api.github.com/users/coolreader18/following{/other_user}", "gists_url": "https://api.github.com/users/coolreader18/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolreader18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolreader18/subscriptions", "organizations_url": "https://api.github.com/users/coolreader18/orgs", "repos_url": "https://api.github.com/users/coolreader18/repos", "events_url": "https://api.github.com/users/coolreader18/events{/privacy}", "received_events_url": "https://api.github.com/users/coolreader18/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1", "html_url": "https://github.com/rust-lang/rust/commit/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1"}], "stats": {"total": 41, "additions": 13, "deletions": 28}, "files": [{"sha": "bf2a5088a1c191dcd383b9c3354d6ebe66ae584d", "filename": "library/std/src/process.rs", "status": "modified", "additions": 13, "deletions": 28, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/0df02bb35b8719d32ac48de6bc72e1cec42646ba/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0df02bb35b8719d32ac48de6bc72e1cec42646ba/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=0df02bb35b8719d32ac48de6bc72e1cec42646ba", "patch": "@@ -1964,47 +1964,32 @@ impl Child {\n /// process, no destructors on the current stack or any other thread's stack\n /// will be run. If a clean shutdown is needed it is recommended to only call\n /// this function at a known point where there are no more destructors left\n-/// to run.\n+/// to run; or, preferably, simply return a type implementing [`Termination`]\n+/// (such as [`ExitCode`] or `Result`) from the `main` function and avoid this\n+/// function altogether:\n+///\n+/// ```\n+/// # use std::io::Error as MyError;\n+/// fn main() -> Result<(), MyError> {\n+///     // ...\n+///     Ok(())\n+/// }\n+/// ```\n ///\n /// ## Platform-specific behavior\n ///\n /// **Unix**: On Unix-like platforms, it is unlikely that all 32 bits of `exit`\n /// will be visible to a parent process inspecting the exit code. On most\n /// Unix-like platforms, only the eight least-significant bits are considered.\n ///\n-/// # Examples\n-///\n-/// Due to this function\u2019s behavior regarding destructors, a conventional way\n-/// to use the function is to extract the actual computation to another\n-/// function and compute the exit code from its return value:\n-///\n-/// ```\n-/// fn run_app() -> Result<(), ()> {\n-///     // Application logic here\n-///     Ok(())\n-/// }\n-///\n-/// fn main() {\n-///     std::process::exit(match run_app() {\n-///         Ok(_) => 0,\n-///         Err(err) => {\n-///             eprintln!(\"error: {err:?}\");\n-///             1\n-///         }\n-///     });\n-/// }\n-/// ```\n-///\n-/// Due to [platform-specific behavior], the exit code for this example will be\n-/// `0` on Linux, but `256` on Windows:\n+/// For example, the exit code for this example will be `0` on Linux, but `256`\n+/// on Windows:\n ///\n /// ```no_run\n /// use std::process;\n ///\n /// process::exit(0x0100);\n /// ```\n-///\n-/// [platform-specific behavior]: #platform-specific-behavior\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn exit(code: i32) -> ! {\n     crate::rt::cleanup();"}]}