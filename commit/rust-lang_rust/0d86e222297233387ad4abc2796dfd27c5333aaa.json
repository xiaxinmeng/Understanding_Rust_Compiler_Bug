{"sha": "0d86e222297233387ad4abc2796dfd27c5333aaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkODZlMjIyMjk3MjMzMzg3YWQ0YWJjMjc5NmRmZDI3YzUzMzNhYWE=", "commit": {"author": {"name": "ShuiRuTian", "email": "158983297@qq.com", "date": "2021-01-09T17:29:08Z"}, "committer": {"name": "ShuiRuTian", "email": "158983297@qq.com", "date": "2021-01-09T17:29:08Z"}, "message": "beta version for folder rename", "tree": {"sha": "740e53bdc4ab3b309dbf23471a01511d3ccd281a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/740e53bdc4ab3b309dbf23471a01511d3ccd281a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d86e222297233387ad4abc2796dfd27c5333aaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d86e222297233387ad4abc2796dfd27c5333aaa", "html_url": "https://github.com/rust-lang/rust/commit/0d86e222297233387ad4abc2796dfd27c5333aaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d86e222297233387ad4abc2796dfd27c5333aaa/comments", "author": {"login": "ShuiRuTian", "id": 28779355, "node_id": "MDQ6VXNlcjI4Nzc5MzU1", "avatar_url": "https://avatars.githubusercontent.com/u/28779355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShuiRuTian", "html_url": "https://github.com/ShuiRuTian", "followers_url": "https://api.github.com/users/ShuiRuTian/followers", "following_url": "https://api.github.com/users/ShuiRuTian/following{/other_user}", "gists_url": "https://api.github.com/users/ShuiRuTian/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShuiRuTian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShuiRuTian/subscriptions", "organizations_url": "https://api.github.com/users/ShuiRuTian/orgs", "repos_url": "https://api.github.com/users/ShuiRuTian/repos", "events_url": "https://api.github.com/users/ShuiRuTian/events{/privacy}", "received_events_url": "https://api.github.com/users/ShuiRuTian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ShuiRuTian", "id": 28779355, "node_id": "MDQ6VXNlcjI4Nzc5MzU1", "avatar_url": "https://avatars.githubusercontent.com/u/28779355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShuiRuTian", "html_url": "https://github.com/ShuiRuTian", "followers_url": "https://api.github.com/users/ShuiRuTian/followers", "following_url": "https://api.github.com/users/ShuiRuTian/following{/other_user}", "gists_url": "https://api.github.com/users/ShuiRuTian/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShuiRuTian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShuiRuTian/subscriptions", "organizations_url": "https://api.github.com/users/ShuiRuTian/orgs", "repos_url": "https://api.github.com/users/ShuiRuTian/repos", "events_url": "https://api.github.com/users/ShuiRuTian/events{/privacy}", "received_events_url": "https://api.github.com/users/ShuiRuTian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c08391ce32c471d09fcc6fe48bd295bbb5a7de10", "url": "https://api.github.com/repos/rust-lang/rust/commits/c08391ce32c471d09fcc6fe48bd295bbb5a7de10", "html_url": "https://github.com/rust-lang/rust/commit/c08391ce32c471d09fcc6fe48bd295bbb5a7de10"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "406a93b101aef9432f6e241b74052619a8f65765", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d86e222297233387ad4abc2796dfd27c5333aaa/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d86e222297233387ad4abc2796dfd27c5333aaa/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=0d86e222297233387ad4abc2796dfd27c5333aaa", "patch": "@@ -85,8 +85,9 @@ pub fn server_capabilities(client_caps: &ClientCapabilities) -> ServerCapabiliti\n                                 matches: Some(FileOperationPatternKind::File),\n                                 options: None,\n                             },\n+                        },\n                         FileOperationFilter {\n-                            scheme: Some(String::from(\"untitled\")),\n+                            scheme: Some(String::from(\"file\")),\n                             pattern: FileOperationPattern {\n                                 glob: String::from(\"**\"),\n                                 matches: Some(FileOperationPatternKind::Folder),"}, {"sha": "176774a7728f1c7d4eab40d770bf47bda9f700de", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0d86e222297233387ad4abc2796dfd27c5333aaa/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d86e222297233387ad4abc2796dfd27c5333aaa/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=0d86e222297233387ad4abc2796dfd27c5333aaa", "patch": "@@ -432,9 +432,26 @@ pub(crate) fn handle_will_rename_files(\n             // Limit to single-level moves for now.\n             match (from_path.parent(), to_path.parent()) {\n                 (Some(p1), Some(p2)) if p1 == p2 => {\n-                    let new_name = to_path.file_stem()?;\n-                    let new_name = new_name.to_str()?;\n-                    Some((snap.url_to_file_id(&from).ok()?, new_name.to_string()))\n+                    if from_path.is_dir() {\n+                        // This is a quick implement, try to use will_rename_file code.\n+                        // imitate change the older_folder/mod.rs to older_folder/new_folder.rs\n+                        let imitate_from_path = from_path.join(\"mod.rs\");\n+                        let new_from_url = imitate_from_path.to_str()?;\n+                        let new_from_url = Url::parse(new_from_url).ok()?;\n+\n+                        let new_folder_name = to_path.file_name()?.to_str()?;\n+                        let mut imite_new_file_name  = new_folder_name.to_string();\n+                        imite_new_file_name.push_str(\".rs\");\n+                        let new_to = from_path.join(imite_new_file_name);\n+                        let new_to = new_to.to_str()?;\n+\n+                        Some((snap.url_to_file_id(&new_from_url).ok()?, new_to.to_string()))\n+                    }\n+                    else{\n+                        let new_name = to_path.file_stem()?;\n+                        let new_name = new_name.to_str()?;\n+                        Some((snap.url_to_file_id(&from).ok()?, new_name.to_string()))\n+                    }\n                 }\n                 _ => None,\n             }"}, {"sha": "2a8f2deb4df3df7c1ef7befb88e04a08eb137506", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d86e222297233387ad4abc2796dfd27c5333aaa/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0d86e222297233387ad4abc2796dfd27c5333aaa/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=0d86e222297233387ad4abc2796dfd27c5333aaa", "patch": "@@ -51,12 +51,24 @@ export function createClient(serverPath: string, cwd: string, extraEnv: Env): lc\n         'Rust Analyzer Language Server Trace',\n     );\n \n+    const workspace:lc.WorkspaceMiddleware = {\n+        willRenameFiles:function<P extends vscode.FileRenameEvent,R extends Thenable<vscode.WorkspaceEdit | null | undefined>>(this: void, data: P, next:(data: P) => R ){\n+            // why add this function rather than default:\n+            // 1. change `url` parameter to happy format for url crate. (folder should end with '/')\n+            // 2. filter some change in here.\n+            //     2.1 rename from or to `mod.rs` should be special. \n+            //     2.2 not all folder change should be cared, only those have files with \".rs\" postfix.\n+            return next(data);\n+        }\n+    }\n+\n     const clientOptions: lc.LanguageClientOptions = {\n         documentSelector: [{ scheme: 'file', language: 'rust' }],\n         initializationOptions: vscode.workspace.getConfiguration(\"rust-analyzer\"),\n         diagnosticCollectionName: \"rustc\",\n         traceOutputChannel,\n         middleware: {\n+            workspace,\n             provideDocumentSemanticTokens(document: vscode.TextDocument, token: vscode.CancellationToken, next: DocumentSemanticsTokensSignature): vscode.ProviderResult<vscode.SemanticTokens> {\n                 return semanticHighlightingWorkaround(next, document, token);\n             },"}]}