{"sha": "1d9472b4700ed64a42cf8000d182152255bce1ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkOTQ3MmI0NzAwZWQ2NGE0MmNmODAwMGQxODIxNTIyNTViY2UxZWY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-27T00:22:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-30T17:22:26Z"}, "message": "Update nll tests", "tree": {"sha": "d017ce6d58588beaf7c5516014ea414092b6eb3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d017ce6d58588beaf7c5516014ea414092b6eb3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d9472b4700ed64a42cf8000d182152255bce1ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d9472b4700ed64a42cf8000d182152255bce1ef", "html_url": "https://github.com/rust-lang/rust/commit/1d9472b4700ed64a42cf8000d182152255bce1ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d9472b4700ed64a42cf8000d182152255bce1ef/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "731ea85f215f03fc33a92147d6cc51a01dee589f", "url": "https://api.github.com/repos/rust-lang/rust/commits/731ea85f215f03fc33a92147d6cc51a01dee589f", "html_url": "https://github.com/rust-lang/rust/commit/731ea85f215f03fc33a92147d6cc51a01dee589f"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "7f4f5b22eb302cb77a3d187fd9241ea6b3441edb", "filename": "src/test/ui/issues/issue-16922.nll.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr?ref=1d9472b4700ed64a42cf8000d182152255bce1ef", "patch": "@@ -0,0 +1,10 @@\n+error: lifetime may not live long enough\n+  --> $DIR/issue-16922.rs:4:5\n+   |\n+LL | fn foo<T: Any>(value: &T) -> Box<dyn Any> {\n+   |                       - let's call the lifetime of this reference `'1`\n+LL |     Box::new(value) as Box<dyn Any>\n+   |     ^^^^^^^^^^^^^^^ cast requires that `'1` must outlive `'static`\n+\n+error: aborting due to previous error\n+"}, {"sha": "9563c0dff3644468961cfb59f8fc15e96cee8db6", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-box-error.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr?ref=1d9472b4700ed64a42cf8000d182152255bce1ef", "patch": "@@ -1,11 +1,11 @@\n-error[E0621]: explicit lifetime required in the type of `ss`\n+error: lifetime may not live long enough\n   --> $DIR/object-lifetime-default-from-box-error.rs:18:5\n    |\n LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait> {\n-   |             --------------- help: add explicit lifetime `'static` to the type of `ss`: `&mut SomeStruct<'static>`\n+   |         -- has type `&mut SomeStruct<'1>`\n ...\n LL |     ss.r\n-   |     ^^^^ lifetime `'static` required\n+   |     ^^^^ returning this value requires that `'1` must outlive `'static`\n \n error[E0507]: cannot move out of `ss.r` which is behind a mutable reference\n   --> $DIR/object-lifetime-default-from-box-error.rs:18:5"}, {"sha": "bf02ba8eb9199d2a4c090f200239d3f11436e8ca", "filename": "src/test/ui/regions/region-object-lifetime-in-coercion.nll.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr?ref=1d9472b4700ed64a42cf8000d182152255bce1ef", "patch": "@@ -14,17 +14,17 @@ LL | fn b(v: &[u8]) -> Box<dyn Foo + 'static> {\n LL |     Box::new(v)\n    |     ^^^^^^^^^^^ lifetime `'static` required\n \n-error[E0621]: explicit lifetime required in the type of `v`\n-  --> $DIR/region-object-lifetime-in-coercion.rs:21:5\n+error: lifetime may not live long enough\n+  --> $DIR/region-object-lifetime-in-coercion.rs:20:5\n    |\n LL | fn c(v: &[u8]) -> Box<dyn Foo> {\n-   |         ----- help: add explicit lifetime `'static` to the type of `v`: `&'static [u8]`\n+   |         - let's call the lifetime of this reference `'1`\n ...\n LL |     Box::new(v)\n-   |     ^^^^^^^^^^^ lifetime `'static` required\n+   |     ^^^^^^^^^^^ returning this value requires that `'1` must outlive `'static`\n \n error: lifetime may not live long enough\n-  --> $DIR/region-object-lifetime-in-coercion.rs:26:5\n+  --> $DIR/region-object-lifetime-in-coercion.rs:24:5\n    |\n LL | fn d<'a,'b>(v: &'a [u8]) -> Box<dyn Foo+'b> {\n    |      -- -- lifetime `'b` defined here"}, {"sha": "8ed48bda26e852e8717108f013894aaa0dac67d7", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.nll.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d9472b4700ed64a42cf8000d182152255bce1ef/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr?ref=1d9472b4700ed64a42cf8000d182152255bce1ef", "patch": "@@ -0,0 +1,11 @@\n+error: lifetime may not live long enough\n+  --> $DIR/dyn-trait-underscore.rs:8:5\n+   |\n+LL | fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T>> {\n+   |                - let's call the lifetime of this reference `'1`\n+LL |     //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to `'static`\n+LL |     Box::new(items.iter())\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'1` must outlive `'static`\n+\n+error: aborting due to previous error\n+"}]}