{"sha": "061773fd2b7fd40ba7c368de50878539d30f7bb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MTc3M2ZkMmI3ZmQ0MGJhN2MzNjhkZTUwODc4NTM5ZDMwZjdiYjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-25T09:15:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-25T09:15:38Z"}, "message": "more test ref-to-packed tests", "tree": {"sha": "b485b3558af1609c388e7c55d0b96e50f9ffbeb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b485b3558af1609c388e7c55d0b96e50f9ffbeb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/061773fd2b7fd40ba7c368de50878539d30f7bb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/061773fd2b7fd40ba7c368de50878539d30f7bb1", "html_url": "https://github.com/rust-lang/rust/commit/061773fd2b7fd40ba7c368de50878539d30f7bb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/061773fd2b7fd40ba7c368de50878539d30f7bb1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c79535eab9500b87ab62f9e077db3953aa06b486", "url": "https://api.github.com/repos/rust-lang/rust/commits/c79535eab9500b87ab62f9e077db3953aa06b486", "html_url": "https://github.com/rust-lang/rust/commit/c79535eab9500b87ab62f9e077db3953aa06b486"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "349421084682bd7d038c3c9faea18bf136c682e4", "filename": "src/test/ui/lint/packed_reference.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/061773fd2b7fd40ba7c368de50878539d30f7bb1/src%2Ftest%2Fui%2Flint%2Fpacked_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061773fd2b7fd40ba7c368de50878539d30f7bb1/src%2Ftest%2Fui%2Flint%2Fpacked_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fpacked_reference.rs?ref=061773fd2b7fd40ba7c368de50878539d30f7bb1", "patch": "@@ -12,6 +12,8 @@ fn main() {\n         let good = Good { data: &0, data2: [&0, &0], aligned: [0; 32] };\n \n         let _ = &good.data; //~ ERROR reference to packed field\n+        let _ = &good.data as *const _; //~ ERROR reference to packed field\n+        let _: *const _ = &good.data; //~ ERROR reference to packed field\n         let _ = &good.data2[0]; //~ ERROR reference to packed field\n         let _ = &*good.data; // ok, behind a pointer\n         let _ = &good.aligned; // ok, has align 1"}, {"sha": "51158a84175dc133c063c3b711e642eee3c5ecb4", "filename": "src/test/ui/lint/packed_reference.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/061773fd2b7fd40ba7c368de50878539d30f7bb1/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/061773fd2b7fd40ba7c368de50878539d30f7bb1/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr?ref=061773fd2b7fd40ba7c368de50878539d30f7bb1", "patch": "@@ -14,10 +14,26 @@ LL | #![deny(packed_references)]\n error: reference to packed field is not allowed\n   --> $DIR/packed_reference.rs:15:17\n    |\n+LL |         let _ = &good.data as *const _;\n+   |                 ^^^^^^^^^^\n+   |\n+   = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+\n+error: reference to packed field is not allowed\n+  --> $DIR/packed_reference.rs:16:27\n+   |\n+LL |         let _: *const _ = &good.data;\n+   |                           ^^^^^^^^^^\n+   |\n+   = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+\n+error: reference to packed field is not allowed\n+  --> $DIR/packed_reference.rs:17:17\n+   |\n LL |         let _ = &good.data2[0];\n    |                 ^^^^^^^^^^^^^^\n    |\n    = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n "}]}