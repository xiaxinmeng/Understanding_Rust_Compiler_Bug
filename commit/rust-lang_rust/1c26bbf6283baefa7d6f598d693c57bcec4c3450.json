{"sha": "1c26bbf6283baefa7d6f598d693c57bcec4c3450", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMjZiYmY2MjgzYmFlZmE3ZDZmNTk4ZDY5M2M1N2JjZWM0YzM0NTA=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-05-30T18:51:47Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-05-31T04:43:53Z"}, "message": "Stabilize reverse_bits feature", "tree": {"sha": "6c72f15fd2c8a378a1700ecd8954afa1abc2db12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c72f15fd2c8a378a1700ecd8954afa1abc2db12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c26bbf6283baefa7d6f598d693c57bcec4c3450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c26bbf6283baefa7d6f598d693c57bcec4c3450", "html_url": "https://github.com/rust-lang/rust/commit/1c26bbf6283baefa7d6f598d693c57bcec4c3450", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c26bbf6283baefa7d6f598d693c57bcec4c3450/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "html_url": "https://github.com/rust-lang/rust/commit/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47"}], "stats": {"total": 33, "additions": 11, "deletions": 22}, "files": [{"sha": "ad35204804755cb6cbcb0c29e07470a00662422f", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -120,7 +120,6 @@\n #![feature(const_str_len)]\n #![feature(const_int_conversion)]\n #![feature(const_transmute)]\n-#![feature(reverse_bits)]\n #![feature(non_exhaustive)]\n #![feature(structural_match)]\n #![feature(abi_unadjusted)]"}, {"sha": "7145bf1fbc0ee07a8e4e4bb76bf06bea6e71d257", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -463,15 +463,12 @@ assert_eq!(m, \", $swapped, \");\n Basic usage:\n \n ```\n-#![feature(reverse_bits)]\n-\n let n = \", $swap_op, stringify!($SelfT), \";\n let m = n.reverse_bits();\n \n assert_eq!(m, \", $reversed, \");\n ```\"),\n-            #[unstable(feature = \"reverse_bits\", issue = \"48763\")]\n-            #[rustc_const_unstable(feature = \"const_int_conversion\")]\n+            #[stable(feature = \"reverse_bits\", since = \"1.37.0\")]\n             #[inline]\n             #[must_use]\n             pub const fn reverse_bits(self) -> Self {\n@@ -2514,14 +2511,12 @@ assert_eq!(m, \", $swapped, \");\n Basic usage:\n \n ```\n-#![feature(reverse_bits)]\n-\n let n = \", $swap_op, stringify!($SelfT), \";\n let m = n.reverse_bits();\n \n assert_eq!(m, \", $reversed, \");\n ```\"),\n-            #[unstable(feature = \"reverse_bits\", issue = \"48763\")]\n+            #[stable(feature = \"reverse_bits\", since = \"1.37.0\")]\n             #[inline]\n             #[must_use]\n             pub const fn reverse_bits(self) -> Self {"}, {"sha": "fd129a306d1c57024d788dc72dfdeea9069616d1", "filename": "src/libcore/num/wrapping.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fwrapping.rs?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -511,7 +511,6 @@ assert_eq!(n.trailing_zeros(), 3);\n             /// Basic usage:\n             ///\n             /// ```\n-            /// #![feature(reverse_bits)]\n             /// use std::num::Wrapping;\n             ///\n             /// let n = Wrapping(0b0000000_01010101i16);\n@@ -522,7 +521,7 @@ assert_eq!(n.trailing_zeros(), 3);\n             /// assert_eq!(m.0 as u16, 0b10101010_00000000);\n             /// assert_eq!(m, Wrapping(-22016));\n             /// ```\n-            #[unstable(feature = \"reverse_bits\", issue = \"48763\")]\n+            #[stable(feature = \"reverse_bits\", since = \"1.37.0\")]\n             #[inline]\n             #[must_use]\n             pub const fn reverse_bits(self) -> Self {"}, {"sha": "277ea29050d6a373c24e309d167d20e61dfa4526", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -25,7 +25,6 @@\n #![feature(test)]\n #![feature(trusted_len)]\n #![feature(try_trait)]\n-#![feature(reverse_bits)]\n #![feature(inner_deref)]\n #![feature(slice_internals)]\n #![feature(slice_partition_dedup)]"}, {"sha": "6dc2b007407062d70ca6aa7b029198a7a3342bf5", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -22,7 +22,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(unicode_internals)]\n #![feature(step_trait)]\n #![feature(slice_concat_ext)]\n-#![feature(reverse_bits)]\n #![feature(try_blocks)]\n \n #![recursion_limit=\"256\"]"}, {"sha": "3d3240d434292933365912ac5d50a6fe6857e27e", "filename": "src/test/run-pass/const-int-conversion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Ftest%2Frun-pass%2Fconst-int-conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Ftest%2Frun-pass%2Fconst-int-conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-int-conversion.rs?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -1,4 +1,4 @@\n-#![feature(const_int_conversion, reverse_bits)]\n+#![feature(const_int_conversion)]\n \n const REVERSE: u32 = 0x12345678_u32.reverse_bits();\n const FROM_BE_BYTES: i32 = i32::from_be_bytes([0x12, 0x34, 0x56, 0x78]);"}, {"sha": "b80e616eae77e453a07d35ec79e512cbd7885593", "filename": "src/test/ui/consts/const-int-conversion.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.rs?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -1,5 +1,3 @@\n-#![feature(reverse_bits)]\n-\n fn main() {\n     let x: &'static i32 = &(5_i32.reverse_bits());\n         //~^ ERROR temporary value dropped while borrowed"}, {"sha": "237f9627219bd52ac517df131822ab5a17562f3a", "filename": "src/test/ui/consts/const-int-conversion.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1c26bbf6283baefa7d6f598d693c57bcec4c3450/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.stderr?ref=1c26bbf6283baefa7d6f598d693c57bcec4c3450", "patch": "@@ -1,5 +1,5 @@\n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/const-int-conversion.rs:4:28\n+  --> $DIR/const-int-conversion.rs:2:28\n    |\n LL |     let x: &'static i32 = &(5_i32.reverse_bits());\n    |            ------------    ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -10,7 +10,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/const-int-conversion.rs:6:28\n+  --> $DIR/const-int-conversion.rs:4:28\n    |\n LL |     let y: &'static i32 = &(i32::from_be_bytes([0x12, 0x34, 0x56, 0x78]));\n    |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -21,7 +21,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/const-int-conversion.rs:8:28\n+  --> $DIR/const-int-conversion.rs:6:28\n    |\n LL |     let z: &'static i32 = &(i32::from_le_bytes([0x12, 0x34, 0x56, 0x78]));\n    |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -32,7 +32,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/const-int-conversion.rs:10:28\n+  --> $DIR/const-int-conversion.rs:8:28\n    |\n LL |     let a: &'static i32 = &(i32::from_be(i32::from_ne_bytes([0x80, 0, 0, 0])));\n    |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -43,7 +43,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/const-int-conversion.rs:12:29\n+  --> $DIR/const-int-conversion.rs:10:29\n    |\n LL |     let b: &'static [u8] = &(0x12_34_56_78_i32.to_be_bytes());\n    |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -54,7 +54,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/const-int-conversion.rs:14:29\n+  --> $DIR/const-int-conversion.rs:12:29\n    |\n LL |     let c: &'static [u8] = &(0x12_34_56_78_i32.to_le_bytes());\n    |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -65,7 +65,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/const-int-conversion.rs:16:29\n+  --> $DIR/const-int-conversion.rs:14:29\n    |\n LL |     let d: &'static [u8] = &(i32::min_value().to_be().to_ne_bytes());\n    |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use"}]}