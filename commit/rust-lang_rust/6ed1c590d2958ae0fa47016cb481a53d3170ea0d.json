{"sha": "6ed1c590d2958ae0fa47016cb481a53d3170ea0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZDFjNTkwZDI5NThhZTBmYTQ3MDE2Y2I0ODFhNTNkMzE3MGVhMGQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-05T10:46:01Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-05T10:46:01Z"}, "message": "Rollup merge of #28231 - GuillaumeGomez:help_note, r=Manishearth\n\nr? @Manishearth", "tree": {"sha": "f748ed529ce932984f34431fcc4f5170b23719d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f748ed529ce932984f34431fcc4f5170b23719d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ed1c590d2958ae0fa47016cb481a53d3170ea0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed1c590d2958ae0fa47016cb481a53d3170ea0d", "html_url": "https://github.com/rust-lang/rust/commit/6ed1c590d2958ae0fa47016cb481a53d3170ea0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ed1c590d2958ae0fa47016cb481a53d3170ea0d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3610c731f3b0182f79bf002cb30eb994b9ddfed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3610c731f3b0182f79bf002cb30eb994b9ddfed9", "html_url": "https://github.com/rust-lang/rust/commit/3610c731f3b0182f79bf002cb30eb994b9ddfed9"}, {"sha": "771ab35c3d3ee684a0d938fe50b1dc21edbca621", "url": "https://api.github.com/repos/rust-lang/rust/commits/771ab35c3d3ee684a0d938fe50b1dc21edbca621", "html_url": "https://github.com/rust-lang/rust/commit/771ab35c3d3ee684a0d938fe50b1dc21edbca621"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "91845e916d4d4b531c89e17f054a5ef5f478654a", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6ed1c590d2958ae0fa47016cb481a53d3170ea0d/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed1c590d2958ae0fa47016cb481a53d3170ea0d/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=6ed1c590d2958ae0fa47016cb481a53d3170ea0d", "patch": "@@ -44,7 +44,7 @@ E0002: r##\"\n This error indicates that an empty match expression is invalid because the type\n it is matching on is non-empty (there exist values of this type). In safe code\n it is impossible to create an instance of an empty type, so empty match\n-expressions are almost never desired.  This error is typically fixed by adding\n+expressions are almost never desired. This error is typically fixed by adding\n one or more cases to the match expression.\n \n An example of an empty type is `enum Empty { }`. So, the following will work:\n@@ -218,7 +218,14 @@ match x {\n E0010: r##\"\n The value of statics and constants must be known at compile time, and they live\n for the entire lifetime of a program. Creating a boxed value allocates memory on\n-the heap at runtime, and therefore cannot be done at compile time.\n+the heap at runtime, and therefore cannot be done at compile time. Erroneous\n+code example:\n+\n+```\n+#![feature(box_syntax)]\n+\n+const CON : Box<i32> = box 0;\n+```\n \"##,\n \n E0011: r##\"\n@@ -335,7 +342,6 @@ is not allowed.\n \n If you really want global mutable state, try using `static mut` or a global\n `UnsafeCell`.\n-\n \"##,\n \n E0018: r##\"\n@@ -399,7 +405,13 @@ fn main() {\n \n E0020: r##\"\n This error indicates that an attempt was made to divide by zero (or take the\n-remainder of a zero divisor) in a static or constant expression.\n+remainder of a zero divisor) in a static or constant expression. Erroneous\n+code example:\n+\n+```\n+const X: i32 = 42 / 0;\n+// error: attempted to divide by zero in a constant expression\n+```\n \"##,\n \n E0022: r##\""}, {"sha": "8d592c9262958e26d4058c44416cdce7732b2906", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ed1c590d2958ae0fa47016cb481a53d3170ea0d/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed1c590d2958ae0fa47016cb481a53d3170ea0d/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=6ed1c590d2958ae0fa47016cb481a53d3170ea0d", "patch": "@@ -218,6 +218,9 @@ fn check_expr(cx: &mut MatchCheckCtxt, ex: &hir::Expr) {\n                     span_err!(cx.tcx.sess, ex.span, E0002,\n                               \"non-exhaustive patterns: type {} is non-empty\",\n                               pat_ty);\n+                    span_help!(cx.tcx.sess, ex.span,\n+                        \"Please ensure that all possible cases are being handled; \\\n+                         possibly adding wildcards or more match arms.\");\n                 }\n                 // If the type *is* empty, it's vacuously exhaustive\n                 return;"}]}