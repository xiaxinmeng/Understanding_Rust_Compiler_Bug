{"sha": "34cf0b32674da79403746716e5a7ed2072dfabe2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0Y2YwYjMyNjc0ZGE3OTQwMzc0NjcxNmU1YTdlZDIwNzJkZmFiZTI=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-02-11T04:35:49Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-02-11T04:41:16Z"}, "message": "Only use the parent if it's an opaque type", "tree": {"sha": "561bcb3b1d4e22850a6927fa5bd69a4c2f19acee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/561bcb3b1d4e22850a6927fa5bd69a4c2f19acee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34cf0b32674da79403746716e5a7ed2072dfabe2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl5CMG0ACgkQtAh+UQ6Y\nsWRdcw//Y7SjCBn/pKeOac8dMlcn5Ujqh4UPWzJyKBc2OCYjPqWm6ZNOCZnmEmyl\nEDmXhX9YgpdZK/6levkwxjnOozUcMKlB2ooC/8+2+lPkB3KW7MT+twqebCgvNhKt\ndVe7pAG3HtZj5JJ24c6Yj1xo96FPtUOqcFrQ3mYPvF1V7vzG3goXdpeZ0rjEAKmJ\nhNEUpEV76UWLjT3KVIjLT+NXs8SSnp1S+RGdndHDTkvh6tgTWh6qQmIes3QZsgFL\nIpEDsTrcML0mjbJLzDILGaaU62z0tG0APIcXAlfbPor4sHpZXl+Ho+at8aNCS24J\nB1urlzILxw/Px43ukfxnQSzx+n9ZTDoqklg1ilcKk4hbQKxcHgQCiJAoRCr6NFsc\neahIXApgEaQch/7SUKzZOvpprO/xBVqWw32I/rJrGL0NYl3nrrZLTcN8Km5u3Tji\nNCFEBjmx+NxFScABs68UN02pO+Bqu0FJZZIK9CWPZnSpnXWkUe+JBEaobTe557sE\nzQTQyLGluHPr9bV9NWIrIZuR6tadiGSA5sXkg5I1YPIdgbEM3gB+YY9sRgL9J0+D\nWWud468brjYVsiwOVVvyEGaJrKVbEPy/PVT3O4mdDc9FdPYpC+g7JJWychzZ0t+e\nNlVdaAWdbn5l/PZxbCEmLF7lWqzmIX1ESJ0CEZ1y1jpuAgxXAuU=\n=yIoe\n-----END PGP SIGNATURE-----", "payload": "tree 561bcb3b1d4e22850a6927fa5bd69a4c2f19acee\nparent a60669d95cdad0e28cf28790b717bbcf235153f8\nauthor Aaron Hill <aa1ronham@gmail.com> 1581395749 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1581396076 -0500\n\nOnly use the parent if it's an opaque type\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34cf0b32674da79403746716e5a7ed2072dfabe2", "html_url": "https://github.com/rust-lang/rust/commit/34cf0b32674da79403746716e5a7ed2072dfabe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34cf0b32674da79403746716e5a7ed2072dfabe2/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a60669d95cdad0e28cf28790b717bbcf235153f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a60669d95cdad0e28cf28790b717bbcf235153f8", "html_url": "https://github.com/rust-lang/rust/commit/a60669d95cdad0e28cf28790b717bbcf235153f8"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "242faebe53ec82262ceac4467c1537359abb822b", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/34cf0b32674da79403746716e5a7ed2072dfabe2/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34cf0b32674da79403746716e5a7ed2072dfabe2/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=34cf0b32674da79403746716e5a7ed2072dfabe2", "patch": "@@ -1057,11 +1057,19 @@ fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> &ty::Generics {\n             ItemKind::OpaqueTy(hir::OpaqueTy { impl_trait_fn, .. }) => {\n                 impl_trait_fn.or_else(|| {\n                     let parent_id = tcx.hir().get_parent_item(hir_id);\n-                    // This opaque type might occur inside another opaque type\n-                    // (e.g. `impl Foo<MyType = impl Bar<A>>`)\n                     if parent_id != hir_id && parent_id != CRATE_HIR_ID {\n                         debug!(\"generics_of: parent of opaque ty {:?} is {:?}\", def_id, parent_id);\n-                        Some(tcx.hir().local_def_id(parent_id))\n+                        // If this 'impl Trait' is nested inside another 'impl Trait'\n+                        // (e.g. `impl Foo<MyType = impl Bar<A>>`), we need to use the 'parent'\n+                        // 'impl Trait' for its generic parameters, since we can reference them\n+                        // from the 'child' 'impl Trait'\n+                        if let Node::Item(hir::Item { kind: ItemKind::OpaqueTy(..), .. }) =\n+                            tcx.hir().get(parent_id)\n+                        {\n+                            Some(tcx.hir().local_def_id(parent_id))\n+                        } else {\n+                            None\n+                        }\n                     } else {\n                         None\n                     }"}]}