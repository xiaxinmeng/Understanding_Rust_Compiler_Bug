{"sha": "9f17ede4acd28df8c0468984d53b965bfbaea8dc", "node_id": "C_kwDOAAsO6NoAKDlmMTdlZGU0YWNkMjhkZjhjMDQ2ODk4NGQ1M2I5NjViZmJhZWE4ZGM", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-03-29T01:37:15Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-03-29T01:37:15Z"}, "message": "Raise an aborting signal without UB", "tree": {"sha": "1555185e06b42c0eee3804b6a5fcdbf22d1da867", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1555185e06b42c0eee3804b6a5fcdbf22d1da867"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f17ede4acd28df8c0468984d53b965bfbaea8dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f17ede4acd28df8c0468984d53b965bfbaea8dc", "html_url": "https://github.com/rust-lang/rust/commit/9f17ede4acd28df8c0468984d53b965bfbaea8dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f17ede4acd28df8c0468984d53b965bfbaea8dc/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67540ec950b9bb5919c3c51dcf9fd6b3d380b7dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/67540ec950b9bb5919c3c51dcf9fd6b3d380b7dc", "html_url": "https://github.com/rust-lang/rust/commit/67540ec950b9bb5919c3c51dcf9fd6b3d380b7dc"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "0f05f916cb93968282da94ccc7257c271f9e6ca6", "filename": "tests/ui/process/signal-exit-status.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f17ede4acd28df8c0468984d53b965bfbaea8dc/tests%2Fui%2Fprocess%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f17ede4acd28df8c0468984d53b965bfbaea8dc/tests%2Fui%2Fprocess%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprocess%2Fsignal-exit-status.rs?ref=9f17ede4acd28df8c0468984d53b965bfbaea8dc", "patch": "@@ -4,14 +4,16 @@\n // ignore-windows\n // ignore-fuchsia code returned as ZX_TASK_RETCODE_EXCEPTION_KILL, FIXME (#58590)\n \n+#![feature(core_intrinsics)]\n+\n use std::env;\n use std::process::Command;\n \n pub fn main() {\n     let args: Vec<String> = env::args().collect();\n     if args.len() >= 2 && args[1] == \"signal\" {\n-        // Raise a segfault.\n-        unsafe { *(1 as *mut isize) = 0; }\n+        // Raise an aborting signal without UB\n+        core::intrinsics::abort();\n     } else {\n         let status = Command::new(&args[0]).arg(\"signal\").status().unwrap();\n         assert!(status.code().is_none());"}]}