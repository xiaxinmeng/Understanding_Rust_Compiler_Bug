{"sha": "4623d51573b22c95ec25c2041aa43221a9e61597", "node_id": "C_kwDOAAsO6NoAKDQ2MjNkNTE1NzNiMjJjOTVlYzI1YzIwNDFhYTQzMjIxYTllNjE1OTc", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-04-07T14:50:51Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-04-07T18:40:17Z"}, "message": "Hide cross-crate doc-hidden assoc items in trait impls", "tree": {"sha": "42af6daa29f8100cf480a2d658adc17631713f06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42af6daa29f8100cf480a2d658adc17631713f06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4623d51573b22c95ec25c2041aa43221a9e61597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4623d51573b22c95ec25c2041aa43221a9e61597", "html_url": "https://github.com/rust-lang/rust/commit/4623d51573b22c95ec25c2041aa43221a9e61597", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4623d51573b22c95ec25c2041aa43221a9e61597/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed6c958ee4bf081deec951996ace9c508360c1d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed6c958ee4bf081deec951996ace9c508360c1d9", "html_url": "https://github.com/rust-lang/rust/commit/ed6c958ee4bf081deec951996ace9c508360c1d9"}], "stats": {"total": 63, "additions": 59, "deletions": 4}, "files": [{"sha": "d06e4fa1cc2f57cefef059ac9f2a1675fe3cc2c3", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4623d51573b22c95ec25c2041aa43221a9e61597/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4623d51573b22c95ec25c2041aa43221a9e61597/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=4623d51573b22c95ec25c2041aa43221a9e61597", "patch": "@@ -425,13 +425,26 @@ crate fn build_impl(\n         None => (\n             tcx.associated_items(did)\n                 .in_definition_order()\n-                .filter_map(|item| {\n-                    if associated_trait.is_some() || item.vis.is_public() {\n-                        Some(item.clean(cx))\n+                .filter(|item| {\n+                    // If this is a trait impl, filter out associated items whose corresponding item\n+                    // in the associated trait is marked `doc(hidden)`.\n+                    // If this is an inherent impl, filter out private associated items.\n+                    if let Some(associated_trait) = associated_trait {\n+                        let trait_item = tcx\n+                            .associated_items(associated_trait.def_id)\n+                            .find_by_name_and_kind(\n+                                tcx,\n+                                item.ident(tcx),\n+                                item.kind,\n+                                associated_trait.def_id,\n+                            )\n+                            .unwrap(); // corresponding associated item has to exist\n+                        !tcx.is_doc_hidden(trait_item.def_id)\n                     } else {\n-                        None\n+                        item.vis.is_public()\n                     }\n                 })\n+                .map(|item| item.clean(cx))\n                 .collect::<Vec<_>>(),\n             clean::enter_impl_trait(cx, |cx| {\n                 clean_ty_generics(cx, tcx.generics_of(did), predicates)"}, {"sha": "3baf8a6c07ee8e203311cc6abda56cf90e32dd94", "filename": "src/test/rustdoc/auxiliary/cross-crate-hidden-assoc-trait-items.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4623d51573b22c95ec25c2041aa43221a9e61597/src%2Ftest%2Frustdoc%2Fauxiliary%2Fcross-crate-hidden-assoc-trait-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4623d51573b22c95ec25c2041aa43221a9e61597/src%2Ftest%2Frustdoc%2Fauxiliary%2Fcross-crate-hidden-assoc-trait-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fcross-crate-hidden-assoc-trait-items.rs?ref=4623d51573b22c95ec25c2041aa43221a9e61597", "patch": "@@ -0,0 +1,19 @@\n+pub trait Tr {\n+    type VisibleAssoc;\n+    #[doc(hidden)]\n+    type HiddenAssoc;\n+\n+    const VISIBLE_ASSOC: ();\n+    #[doc(hidden)]\n+    const HIDDEN_ASSOC: ();\n+}\n+\n+pub struct Ty;\n+\n+impl Tr for Ty {\n+    type VisibleAssoc = ();\n+    type HiddenAssoc = ();\n+\n+    const VISIBLE_ASSOC: () = ();\n+    const HIDDEN_ASSOC: () = ();\n+}"}, {"sha": "d02bc4fe712505ea412efa34bb90fdf102c76cc4", "filename": "src/test/rustdoc/cross-crate-hidden-assoc-trait-items.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4623d51573b22c95ec25c2041aa43221a9e61597/src%2Ftest%2Frustdoc%2Fcross-crate-hidden-assoc-trait-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4623d51573b22c95ec25c2041aa43221a9e61597/src%2Ftest%2Frustdoc%2Fcross-crate-hidden-assoc-trait-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcross-crate-hidden-assoc-trait-items.rs?ref=4623d51573b22c95ec25c2041aa43221a9e61597", "patch": "@@ -0,0 +1,23 @@\n+// Regression test for issue #95717\n+// Hide cross-crate `#[doc(hidden)]` associated items in trait impls.\n+\n+#![crate_name = \"dependent\"]\n+// edition:2021\n+// aux-crate:dependency=cross-crate-hidden-assoc-trait-items.rs\n+\n+// The trait `Tr` contains 2 hidden and 2 visisible associated items.\n+// Instead of checking for the absence of the hidden items, check for the presence of the\n+// visible items instead and assert that there are *exactly two* associated items\n+// (by counting the number of `section`s). This is more robust and future-proof.\n+\n+// @has dependent/struct.Ty.html\n+// @has - '//*[@id=\"associatedtype.VisibleAssoc\"]' 'type VisibleAssoc = ()'\n+// @has - '//*[@id=\"associatedconstant.VISIBLE_ASSOC\"]' 'const VISIBLE_ASSOC: ()'\n+// @count - '//*[@class=\"impl-items\"]/section' 2\n+\n+// @has dependent/trait.Tr.html\n+// @has - '//*[@id=\"associatedtype.VisibleAssoc-1\"]' 'type VisibleAssoc = ()'\n+// @has - '//*[@id=\"associatedconstant.VISIBLE_ASSOC-1\"]' 'const VISIBLE_ASSOC: ()'\n+// @count - '//*[@class=\"impl-items\"]/section' 2\n+\n+pub use dependency::{Tr, Ty};"}]}