{"sha": "031dd9c38153558025b3de97d486541b56275002", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMWRkOWMzODE1MzU1ODAyNWIzZGU5N2Q0ODY1NDFiNTYyNzUwMDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-01T02:38:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-01T02:38:25Z"}, "message": "Auto merge of #28577 - jethrogb:topic/ast-stmt-debug, r=pcwalton\n\nThis enables the Debug trait to work on syntax::ast::Stmt.", "tree": {"sha": "a7a2adcfb81c3e2093c998b063fc7700a890122b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7a2adcfb81c3e2093c998b063fc7700a890122b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/031dd9c38153558025b3de97d486541b56275002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/031dd9c38153558025b3de97d486541b56275002", "html_url": "https://github.com/rust-lang/rust/commit/031dd9c38153558025b3de97d486541b56275002", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/031dd9c38153558025b3de97d486541b56275002/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5a01589271e1d0f3ea4def28340a40be7a4f9d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a01589271e1d0f3ea4def28340a40be7a4f9d0", "html_url": "https://github.com/rust-lang/rust/commit/f5a01589271e1d0f3ea4def28340a40be7a4f9d0"}, {"sha": "0a2ffa083589e113ad45e64712259c17c391779a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2ffa083589e113ad45e64712259c17c391779a", "html_url": "https://github.com/rust-lang/rust/commit/0a2ffa083589e113ad45e64712259c17c391779a"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "45e1d00586327233d60b56716020fcd04e3e1dc6", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/031dd9c38153558025b3de97d486541b56275002/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/031dd9c38153558025b3de97d486541b56275002/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=031dd9c38153558025b3de97d486541b56275002", "patch": "@@ -65,6 +65,7 @@ use ptr::P;\n \n use std::fmt;\n use std::rc::Rc;\n+use std::borrow::Cow;\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n \n /// A name is a part of an identifier, representing a string or gensym. It's\n@@ -668,7 +669,8 @@ pub type Stmt = Spanned<Stmt_>;\n impl fmt::Debug for Stmt {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         write!(f, \"stmt({}: {})\",\n-               ast_util::stmt_id(self),\n+               ast_util::stmt_id(self)\n+                   .map_or(Cow::Borrowed(\"<macro>\"),|id|Cow::Owned(id.to_string())),\n                pprust::stmt_to_string(self))\n     }\n }"}, {"sha": "905a83b050ed73fa8dde0892efee4f791532a2ea", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/031dd9c38153558025b3de97d486541b56275002/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/031dd9c38153558025b3de97d486541b56275002/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=031dd9c38153558025b3de97d486541b56275002", "patch": "@@ -28,12 +28,12 @@ pub fn path_name_i(idents: &[Ident]) -> String {\n     idents.iter().map(|i| i.to_string()).collect::<Vec<String>>().join(\"::\")\n }\n \n-pub fn stmt_id(s: &Stmt) -> NodeId {\n+pub fn stmt_id(s: &Stmt) -> Option<NodeId> {\n     match s.node {\n-      StmtDecl(_, id) => id,\n-      StmtExpr(_, id) => id,\n-      StmtSemi(_, id) => id,\n-      StmtMac(..) => panic!(\"attempted to analyze unexpanded stmt\")\n+      StmtDecl(_, id) => Some(id),\n+      StmtExpr(_, id) => Some(id),\n+      StmtSemi(_, id) => Some(id),\n+      StmtMac(..) => None,\n     }\n }\n \n@@ -384,7 +384,8 @@ impl<'a, 'v, O: IdVisitingOperation> Visitor<'v> for IdVisitor<'a, O> {\n     }\n \n     fn visit_stmt(&mut self, statement: &Stmt) {\n-        self.operation.visit_id(ast_util::stmt_id(statement));\n+        self.operation\n+            .visit_id(ast_util::stmt_id(statement).expect(\"attempted to visit unexpanded stmt\"));\n         visit::walk_stmt(self, statement)\n     }\n "}]}