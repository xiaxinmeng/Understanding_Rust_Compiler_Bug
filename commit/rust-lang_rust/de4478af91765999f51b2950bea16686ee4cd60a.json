{"sha": "de4478af91765999f51b2950bea16686ee4cd60a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNDQ3OGFmOTE3NjU5OTlmNTFiMjk1MGJlYTE2Njg2ZWU0Y2Q2MGE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-06T09:58:27Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-06T09:58:27Z"}, "message": "Refactor const_to_op", "tree": {"sha": "140a26d5dd27f9cec68ddef6a41e3fade7d46bd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/140a26d5dd27f9cec68ddef6a41e3fade7d46bd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de4478af91765999f51b2950bea16686ee4cd60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de4478af91765999f51b2950bea16686ee4cd60a", "html_url": "https://github.com/rust-lang/rust/commit/de4478af91765999f51b2950bea16686ee4cd60a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de4478af91765999f51b2950bea16686ee4cd60a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9227abbdb14728777691c0d595a93c57a796bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed9227abbdb14728777691c0d595a93c57a796bf", "html_url": "https://github.com/rust-lang/rust/commit/ed9227abbdb14728777691c0d595a93c57a796bf"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "206eaaf1787c5ad0fbfee138837a4970d72f3500", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/de4478af91765999f51b2950bea16686ee4cd60a/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de4478af91765999f51b2950bea16686ee4cd60a/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=de4478af91765999f51b2950bea16686ee4cd60a", "patch": "@@ -589,17 +589,12 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         val: ty::Const<'tcx>,\n         layout: Option<TyLayout<'tcx>>,\n     ) -> EvalResult<'tcx, OpTy<'tcx, M::PointerTag>> {\n+        let val = self.monomorphize(val)?;\n         let layout = from_known_layout(layout, || {\n-            let ty = self.monomorphize(val.ty)?;\n-            self.layout_of(ty)\n+            self.layout_of(val.ty)\n         })?;\n-        let val = match val.val {\n-            ConstValue::Param(_) => self.monomorphize(val)?.val,\n-            ConstValue::Infer(_) => bug!(),\n-            val => val,\n-        };\n-        let op = match val {\n-            ConstValue::Param(_) | ConstValue::Infer(_) => unreachable!(),\n+        let op = match val.val {\n+            ConstValue::Param(_) | ConstValue::Infer(_) => bug!(),\n             ConstValue::ByRef(ptr, alloc) => {\n                 // We rely on mutability being set correctly in that allocation to prevent writes\n                 // where none should happen -- and for `static mut`, we copy on demand anyway."}]}