{"sha": "eea299beaaf5d4a735101a1209d774a2faf01343", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYTI5OWJlYWFmNWQ0YTczNTEwMWExMjA5ZDc3NGEyZmFmMDEzNDM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-10-06T11:48:55Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-10-06T12:16:49Z"}, "message": "run-pass tests for RFC 1238.\n\nIllustrates cases that worked before and must continue to work, and a\ncase that shows how to use the `unsafe_destructor_blind_to_params`\nattribute (aka \"the UGEH attribute\") to work around\ncannot-assume-parametricity.", "tree": {"sha": "ccb7395e07136528a334c5b5a0ffc8a3bcc986bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccb7395e07136528a334c5b5a0ffc8a3bcc986bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eea299beaaf5d4a735101a1209d774a2faf01343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eea299beaaf5d4a735101a1209d774a2faf01343", "html_url": "https://github.com/rust-lang/rust/commit/eea299beaaf5d4a735101a1209d774a2faf01343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eea299beaaf5d4a735101a1209d774a2faf01343/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d778e57bf61b2284f33d28486f2ac63faa0422cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d778e57bf61b2284f33d28486f2ac63faa0422cf", "html_url": "https://github.com/rust-lang/rust/commit/d778e57bf61b2284f33d28486f2ac63faa0422cf"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "0c2aafec431c7cd76e752e57371a7541d368a0d4", "filename": "src/test/run-pass/issue28498-must-work-ex1.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/eea299beaaf5d4a735101a1209d774a2faf01343/src%2Ftest%2Frun-pass%2Fissue28498-must-work-ex1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eea299beaaf5d4a735101a1209d774a2faf01343/src%2Ftest%2Frun-pass%2Fissue28498-must-work-ex1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue28498-must-work-ex1.rs?ref=eea299beaaf5d4a735101a1209d774a2faf01343", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Example taken from RFC 1238 text\n+\n+// https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#examples-of-code-that-must-continue-to-work\n+\n+use std::cell::Cell;\n+\n+struct Concrete<'a>(u32, Cell<Option<&'a Concrete<'a>>>);\n+\n+fn main() {\n+    let mut data = Vec::new();\n+    data.push(Concrete(0, Cell::new(None)));\n+    data.push(Concrete(0, Cell::new(None)));\n+\n+    data[0].1.set(Some(&data[1]));\n+    data[1].1.set(Some(&data[0]));\n+}"}, {"sha": "5ab2631213f60b8c3aae4d9d37d9f46583a5eb3e", "filename": "src/test/run-pass/issue28498-must-work-ex2.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/eea299beaaf5d4a735101a1209d774a2faf01343/src%2Ftest%2Frun-pass%2Fissue28498-must-work-ex2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eea299beaaf5d4a735101a1209d774a2faf01343/src%2Ftest%2Frun-pass%2Fissue28498-must-work-ex2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue28498-must-work-ex2.rs?ref=eea299beaaf5d4a735101a1209d774a2faf01343", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Example taken from RFC 1238 text\n+\n+// https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#examples-of-code-that-must-continue-to-work\n+\n+use std::cell::Cell;\n+\n+struct Concrete<'a>(u32, Cell<Option<&'a Concrete<'a>>>);\n+\n+struct Foo<T> { data: Vec<T> }\n+\n+fn main() {\n+    let mut foo = Foo {  data: Vec::new() };\n+    foo.data.push(Concrete(0, Cell::new(None)));\n+    foo.data.push(Concrete(0, Cell::new(None)));\n+\n+    foo.data[0].1.set(Some(&foo.data[1]));\n+    foo.data[1].1.set(Some(&foo.data[0]));\n+}\n+"}, {"sha": "2df86e49b0f1a1dcaa207404f6bd36296de87fd4", "filename": "src/test/run-pass/issue28498-ugeh-ex1.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/eea299beaaf5d4a735101a1209d774a2faf01343/src%2Ftest%2Frun-pass%2Fissue28498-ugeh-ex1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eea299beaaf5d4a735101a1209d774a2faf01343/src%2Ftest%2Frun-pass%2Fissue28498-ugeh-ex1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue28498-ugeh-ex1.rs?ref=eea299beaaf5d4a735101a1209d774a2faf01343", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Example taken from RFC 1238 text\n+\n+// https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#example-of-the-unguarded-escape-hatch\n+\n+#![feature(dropck_parametricity)]\n+use std::cell::Cell;\n+\n+struct Concrete<'a>(u32, Cell<Option<&'a Concrete<'a>>>);\n+\n+struct Foo<T> { data: Vec<T> }\n+\n+impl<T> Drop for Foo<T> {\n+    #[unsafe_destructor_blind_to_params] // This is the UGEH attribute\n+    fn drop(&mut self) { }\n+}\n+\n+fn main() {\n+    let mut foo = Foo {  data: Vec::new() };\n+    foo.data.push(Concrete(0, Cell::new(None)));\n+    foo.data.push(Concrete(0, Cell::new(None)));\n+\n+    foo.data[0].1.set(Some(&foo.data[1]));\n+    foo.data[1].1.set(Some(&foo.data[0]));\n+}\n+"}]}