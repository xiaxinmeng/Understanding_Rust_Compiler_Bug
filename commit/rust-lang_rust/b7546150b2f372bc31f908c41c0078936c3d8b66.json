{"sha": "b7546150b2f372bc31f908c41c0078936c3d8b66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NTQ2MTUwYjJmMzcyYmMzMWY5MDhjNDFjMDA3ODkzNmMzZDhiNjY=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-10-27T21:55:07Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-10-27T21:55:07Z"}, "message": "back out bogus `Ok`-wrapping suggestion on `?` arm type mismatch\n\nThis suggestion was introduced in #51938 / 6cc78bf8d7 (while\nintroducing different language for type errors coming from `?` rather\nthan a `match`), but it has a lot of false-positives (as repeatedly\nreported in Issues #52537, #52598, #54578, #55336), and incorrect\nsuggestions carry more badness than marginal good suggestions do\ngoodness. Just get rid of it (unless and until someone figures out how\nto do it correctly).\n\nResolves #52537, resolves #54578.", "tree": {"sha": "33978144e1288fc471445ca7884f13d980873a2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33978144e1288fc471445ca7884f13d980873a2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7546150b2f372bc31f908c41c0078936c3d8b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7546150b2f372bc31f908c41c0078936c3d8b66", "html_url": "https://github.com/rust-lang/rust/commit/b7546150b2f372bc31f908c41c0078936c3d8b66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7546150b2f372bc31f908c41c0078936c3d8b66/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f32f1113c93fe84f252293ae4af86be1ceae4a84", "url": "https://api.github.com/repos/rust-lang/rust/commits/f32f1113c93fe84f252293ae4af86be1ceae4a84", "html_url": "https://github.com/rust-lang/rust/commit/f32f1113c93fe84f252293ae4af86be1ceae4a84"}], "stats": {"total": 47, "additions": 3, "deletions": 44}, "files": [{"sha": "d19c495af3b9685c11240ace5d55bfc4dcc9b4ad", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7546150b2f372bc31f908c41c0078936c3d8b66/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7546150b2f372bc31f908c41c0078936c3d8b66/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=b7546150b2f372bc31f908c41c0078936c3d8b66", "patch": "@@ -479,17 +479,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                         err.span_label(arm_span, msg);\n                     }\n                 }\n-                hir::MatchSource::TryDesugar => {\n-                    // Issue #51632\n-                    if let Ok(try_snippet) = self.tcx.sess.source_map().span_to_snippet(arm_span) {\n-                        err.span_suggestion_with_applicability(\n-                            arm_span,\n-                            \"try wrapping with a success variant\",\n-                            format!(\"Ok({})\", try_snippet),\n-                            Applicability::MachineApplicable,\n-                        );\n-                    }\n-                }\n+                hir::MatchSource::TryDesugar => {}\n                 _ => {\n                     let msg = \"match arm with an incompatible type\";\n                     if self.tcx.sess.source_map().is_multiline(arm_span) {"}, {"sha": "016cff914bd2d7ad3713cfb5908b35b1c68876f7", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.fixed", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f32f1113c93fe84f252293ae4af86be1ceae4a84/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f32f1113c93fe84f252293ae4af86be1ceae4a84/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.fixed?ref=f32f1113c93fe84f252293ae4af86be1ceae4a84", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-rustfix\n-\n-#![allow(dead_code)]\n-\n-fn missing_discourses() -> Result<isize, ()> {\n-    Ok(1)\n-}\n-\n-fn forbidden_narratives() -> Result<isize, ()> {\n-    Ok(missing_discourses()?)\n-    //~^ ERROR try expression alternatives have incompatible types\n-    //~| HELP try wrapping with a success variant\n-}\n-\n-fn main() {}"}, {"sha": "32ea715b64fa7f66986a23b61329e6dd90a23314", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7546150b2f372bc31f908c41c0078936c3d8b66/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7546150b2f372bc31f908c41c0078936c3d8b66/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs?ref=b7546150b2f372bc31f908c41c0078936c3d8b66", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// run-rustfix\n-\n #![allow(dead_code)]\n \n fn missing_discourses() -> Result<isize, ()> {\n@@ -19,7 +17,6 @@ fn missing_discourses() -> Result<isize, ()> {\n fn forbidden_narratives() -> Result<isize, ()> {\n     missing_discourses()?\n     //~^ ERROR try expression alternatives have incompatible types\n-    //~| HELP try wrapping with a success variant\n }\n \n fn main() {}"}, {"sha": "590cbff67a4bc80da6aa0faead15ebcb41ca47f4", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b7546150b2f372bc31f908c41c0078936c3d8b66/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7546150b2f372bc31f908c41c0078936c3d8b66/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr?ref=b7546150b2f372bc31f908c41c0078936c3d8b66", "patch": "@@ -1,11 +1,8 @@\n error[E0308]: try expression alternatives have incompatible types\n-  --> $DIR/issue-51632-try-desugar-incompatible-types.rs:20:5\n+  --> $DIR/issue-51632-try-desugar-incompatible-types.rs:18:5\n    |\n LL |     missing_discourses()?\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-   |     |\n-   |     expected enum `std::result::Result`, found isize\n-   |     help: try wrapping with a success variant: `Ok(missing_discourses()?)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found isize\n    |\n    = note: expected type `std::result::Result<isize, ()>`\n               found type `isize`"}]}