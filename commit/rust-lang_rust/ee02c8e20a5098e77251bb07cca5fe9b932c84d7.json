{"sha": "ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMDJjOGUyMGE1MDk4ZTc3MjUxYmIwN2NjYTVmZTliOTMyYzg0ZDc=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-28T15:53:26Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-28T15:53:26Z"}, "message": "Add test cases", "tree": {"sha": "802fdb52737b9f785db8340b72edb6a62e49cdc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/802fdb52737b9f785db8340b72edb6a62e49cdc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmEqW/YACgkQAn35M4hi\nrd1BpA/+NvNV6r6Q7opN06Hs62IYkNANhDygCz+Pjev99M8IaGtJYV84Rgc073bL\nECpa65f/XKlyug/fo5p7eAsL0H1NVHSZlhzNhw04/RjkFZbUGjz4fntVs1LB+ugG\nOnBSkevXekjsayNkIw4labLaDrLQ1U44Ggo4YlecNSgKaOp/2uk7Xkwr2VUnsQXx\nWzREdm897dOfWabPAmqrerzLW4gYNnEo/SbTSlTMpAfbuv1FMpCIXhonCztBx/iX\nZujh2rDnVkkIXfTPdPkL63XYFJ7/ERYcbX4WyLCq2kc9Z+y7BYZTkp3Xic7ePfy8\nw30B5Mty8hetaxmTfVpp3WEAW5EZ1Erwjwl9GX1epOsx4P6Uq4FuzHy1zmh8Jt0W\ntFrWJfpqbl6N0ZhNKh75k29HnkcFByM3pBfO0yPjxmBqsKVgwxCLZ/wMTe0o6FLQ\n0eJlLcPdGJetiisfHQuNzqlhx7TELZQm1C4mCnMF3CbfOzMeH4Nc4fdnzaqbuKhc\noJ7OalNe0Q4yuOLTzP05TGBwc1lwPt/qiGZQDe/anQiqqfHZyVppT7+m0ExYUH/E\ngDEXs7eks/GMNGWoJK7GHj1qD/nGxMPIvvMlrMC2kSKE4WmCdcQeuPTdCO9K0bHg\nBE1a1OADrtNZjhNWvI1S14TUPhFYWYUzvBdjI0GJ+N+sEev70ME=\n=tzCX\n-----END PGP SIGNATURE-----", "payload": "tree 802fdb52737b9f785db8340b72edb6a62e49cdc1\nparent 523490e94ad6aabcc53a30919889ce60b4f327ee\nauthor Deadbeef <ent3rm4n@gmail.com> 1630166006 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1630166006 +0000\n\nAdd test cases\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "html_url": "https://github.com/rust-lang/rust/commit/ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "523490e94ad6aabcc53a30919889ce60b4f327ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/523490e94ad6aabcc53a30919889ce60b4f327ee", "html_url": "https://github.com/rust-lang/rust/commit/523490e94ad6aabcc53a30919889ce60b4f327ee"}], "stats": {"total": 110, "additions": 107, "deletions": 3}, "files": [{"sha": "0cde5b6f84218951370ff4b47730b7659be77ef8", "filename": "src/test/ui/rfc-2632-const-trait-impl/trait-where-clause-run.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-run.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-run.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-run.rs?ref=ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "patch": "@@ -0,0 +1,41 @@\n+// run-pass\n+\n+#![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n+\n+trait Bar {\n+    fn bar() -> u8;\n+}\n+\n+trait Foo {\n+    #[default_method_body_is_const]\n+    fn foo() -> u8 where Self: ~const Bar {\n+        <Self as Bar>::bar() * 6\n+    }\n+}\n+\n+struct NonConst;\n+struct Const;\n+\n+impl Bar for NonConst {\n+    fn bar() -> u8 {\n+        3\n+    }\n+}\n+\n+impl Foo for NonConst {}\n+\n+impl const Bar for Const {\n+    fn bar() -> u8 {\n+        4\n+    }\n+}\n+\n+impl const Foo for Const {}\n+\n+fn main() {\n+    const ANS1: u8 = Const::foo();\n+    let ans2 = NonConst::foo();\n+\n+    assert_eq!(ANS1 + ans2, 42);\n+}"}, {"sha": "ae9ab26cdc04ad708706007e9bc19e9dc742f512", "filename": "src/test/ui/rfc-2632-const-trait-impl/trait-where-clause-self-referential.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-self-referential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-self-referential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-self-referential.rs?ref=ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+\n+#![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n+\n+trait Foo {\n+    fn bar() where Self: ~const Foo;\n+}\n+\n+struct S;\n+\n+impl Foo for S {\n+    fn bar() {}\n+}\n+\n+fn baz<T: Foo>() {\n+    T::bar();\n+}\n+\n+const fn qux<T: ~const Foo>() {\n+    T::bar();\n+}\n+\n+fn main() {}"}, {"sha": "d64822d7ce8af77a4d5296a668dfffe0c8551f5d", "filename": "src/test/ui/rfc-2632-const-trait-impl/trait-where-clause.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause.rs?ref=ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "patch": "@@ -6,28 +6,35 @@ trait Bar {}\n trait Foo {\n     fn a();\n     fn b() where Self: ~const Bar;\n+    fn c<T: ~const Bar>();\n }\n \n const fn test1<T: ~const Foo + Bar>() {\n     T::a();\n     T::b();\n     //~^ ERROR the trait bound\n+    T::c::<T>();\n+    //~^ ERROR the trait bound\n }\n \n const fn test2<T: ~const Foo + ~const Bar>() {\n     T::a();\n     T::b();\n+    T::c::<T>();\n }\n \n fn test3<T: Foo>() {\n     T::a();\n     T::b();\n     //~^ ERROR the trait bound\n+    T::c::<T>();\n+    //~^ ERROR the trait bound\n }\n \n fn test4<T: Foo + Bar>() {\n     T::a();\n     T::b();\n+    T::c::<T>();\n }\n \n fn main() {}"}, {"sha": "fffb91f98700bdf8f9c9210468645a851944d9ca", "filename": "src/test/ui/rfc-2632-const-trait-impl/trait-where-clause.stderr", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee02c8e20a5098e77251bb07cca5fe9b932c84d7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause.stderr?ref=ee02c8e20a5098e77251bb07cca5fe9b932c84d7", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `T: Bar` is not satisfied\n-  --> $DIR/trait-where-clause.rs:13:5\n+  --> $DIR/trait-where-clause.rs:14:5\n    |\n LL |     T::b();\n    |     ^^^^ the trait `Bar` is not implemented for `T`\n@@ -15,7 +15,23 @@ LL | const fn test1<T: ~const Foo + Bar + Bar>() {\n    |                                    +++++\n \n error[E0277]: the trait bound `T: Bar` is not satisfied\n-  --> $DIR/trait-where-clause.rs:24:5\n+  --> $DIR/trait-where-clause.rs:16:5\n+   |\n+LL |     T::c::<T>();\n+   |     ^^^^^^^^^ the trait `Bar` is not implemented for `T`\n+   |\n+note: required by `Foo::c`\n+  --> $DIR/trait-where-clause.rs:9:5\n+   |\n+LL |     fn c<T: ~const Bar>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n+help: consider further restricting this bound\n+   |\n+LL | const fn test1<T: ~const Foo + Bar + Bar>() {\n+   |                                    +++++\n+\n+error[E0277]: the trait bound `T: Bar` is not satisfied\n+  --> $DIR/trait-where-clause.rs:28:5\n    |\n LL |     T::b();\n    |     ^^^^ the trait `Bar` is not implemented for `T`\n@@ -30,6 +46,22 @@ help: consider further restricting this bound\n LL | fn test3<T: Foo + Bar>() {\n    |                 +++++\n \n-error: aborting due to 2 previous errors\n+error[E0277]: the trait bound `T: Bar` is not satisfied\n+  --> $DIR/trait-where-clause.rs:30:5\n+   |\n+LL |     T::c::<T>();\n+   |     ^^^^^^^^^ the trait `Bar` is not implemented for `T`\n+   |\n+note: required by `Foo::c`\n+  --> $DIR/trait-where-clause.rs:9:5\n+   |\n+LL |     fn c<T: ~const Bar>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n+help: consider further restricting this bound\n+   |\n+LL | fn test3<T: Foo + Bar>() {\n+   |                 +++++\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}