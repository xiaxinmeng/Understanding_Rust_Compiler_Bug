{"sha": "aa6b7508546d011ad61a814cc0c086d15fb15617", "node_id": "C_kwDOAAsO6NoAKGFhNmI3NTA4NTQ2ZDAxMWFkNjFhODE0Y2MwYzA4NmQxNWZiMTU2MTc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-08-27T04:14:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-27T04:14:24Z"}, "message": "Rollup merge of #101057 - cjgillot:one-fn-sig, r=compiler-errors\n\nMerge implementations of HIR fn_decl and fn_sig.", "tree": {"sha": "ea5f1a4ff21a6f8712a0a7eb2ae7e90e1a786f36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea5f1a4ff21a6f8712a0a7eb2ae7e90e1a786f36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa6b7508546d011ad61a814cc0c086d15fb15617", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCZogCRBK7hj4Ov3rIwAACWMIAKyo81A9yVU0i3HUAF+shXro\nm4ltGeuF8xTCTpfgwV6XkTY90dRGIrHK6q82gmqU6y+oiv0UjvLsGtUvYP8zU0Ka\nJ2MT2edRGnNHj6pAxIqa8AysF9SUktDx3ka71uU5504syxvDEZ7ur+hcbOH/4U2+\n8XVUEdIgLJ4dQ0xoP4IJUbg0uVgMO2EUdAkiolWZbJmwsTaSmzRiGpOhxL9PBtIh\njp9hQDYyL7qXFT1DeyBIHyPuju/DsvcGplyHscb8spkQ8C/erghpHUOTGinGFRnx\n/kbdLtxQOLWhb5pd6HWAP4n3iKrRlGmuDrd4KtqurdhENA3kWAtPlQcn/4R3Khc=\n=g2W0\n-----END PGP SIGNATURE-----\n", "payload": "tree ea5f1a4ff21a6f8712a0a7eb2ae7e90e1a786f36\nparent 0cad2746be76ac9ff1d9d51c94659feb29bcf2e6\nparent 20012ea4eb486356b53ef398d6f76f99588a81a3\nauthor Yuki Okushi <jtitor@2k36.org> 1661573664 +0900\ncommitter GitHub <noreply@github.com> 1661573664 +0900\n\nRollup merge of #101057 - cjgillot:one-fn-sig, r=compiler-errors\n\nMerge implementations of HIR fn_decl and fn_sig.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa6b7508546d011ad61a814cc0c086d15fb15617", "html_url": "https://github.com/rust-lang/rust/commit/aa6b7508546d011ad61a814cc0c086d15fb15617", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa6b7508546d011ad61a814cc0c086d15fb15617/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cad2746be76ac9ff1d9d51c94659feb29bcf2e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cad2746be76ac9ff1d9d51c94659feb29bcf2e6", "html_url": "https://github.com/rust-lang/rust/commit/0cad2746be76ac9ff1d9d51c94659feb29bcf2e6"}, {"sha": "20012ea4eb486356b53ef398d6f76f99588a81a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/20012ea4eb486356b53ef398d6f76f99588a81a3", "html_url": "https://github.com/rust-lang/rust/commit/20012ea4eb486356b53ef398d6f76f99588a81a3"}], "stats": {"total": 40, "additions": 9, "deletions": 31}, "files": [{"sha": "a069c49b0cc1eff6b8d8618a789bbcba1e0eba2b", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=aa6b7508546d011ad61a814cc0c086d15fb15617", "patch": "@@ -3216,7 +3216,7 @@ impl<'hir> OwnerNode<'hir> {\n         }\n     }\n \n-    pub fn fn_decl(&self) -> Option<&FnDecl<'hir>> {\n+    pub fn fn_decl(self) -> Option<&'hir FnDecl<'hir>> {\n         match self {\n             OwnerNode::TraitItem(TraitItem { kind: TraitItemKind::Fn(fn_sig, _), .. })\n             | OwnerNode::ImplItem(ImplItem { kind: ImplItemKind::Fn(fn_sig, _), .. })\n@@ -3400,19 +3400,20 @@ impl<'hir> Node<'hir> {\n         }\n     }\n \n-    pub fn fn_decl(&self) -> Option<&'hir FnDecl<'hir>> {\n+    pub fn fn_decl(self) -> Option<&'hir FnDecl<'hir>> {\n         match self {\n             Node::TraitItem(TraitItem { kind: TraitItemKind::Fn(fn_sig, _), .. })\n             | Node::ImplItem(ImplItem { kind: ImplItemKind::Fn(fn_sig, _), .. })\n             | Node::Item(Item { kind: ItemKind::Fn(fn_sig, _, _), .. }) => Some(fn_sig.decl),\n-            Node::ForeignItem(ForeignItem { kind: ForeignItemKind::Fn(fn_decl, _, _), .. }) => {\n+            Node::Expr(Expr { kind: ExprKind::Closure(Closure { fn_decl, .. }), .. })\n+            | Node::ForeignItem(ForeignItem { kind: ForeignItemKind::Fn(fn_decl, _, _), .. }) => {\n                 Some(fn_decl)\n             }\n             _ => None,\n         }\n     }\n \n-    pub fn fn_sig(&self) -> Option<&'hir FnSig<'hir>> {\n+    pub fn fn_sig(self) -> Option<&'hir FnSig<'hir>> {\n         match self {\n             Node::TraitItem(TraitItem { kind: TraitItemKind::Fn(fn_sig, _), .. })\n             | Node::ImplItem(ImplItem { kind: ImplItemKind::Fn(fn_sig, _), .. })"}, {"sha": "25c18cf50c11f3663aa19d3ce98fbede33efa959", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=aa6b7508546d011ad61a814cc0c086d15fb15617", "patch": "@@ -17,28 +17,6 @@ use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n \n-fn fn_decl<'hir>(node: Node<'hir>) -> Option<&'hir FnDecl<'hir>> {\n-    match node {\n-        Node::Item(Item { kind: ItemKind::Fn(sig, _, _), .. })\n-        | Node::TraitItem(TraitItem { kind: TraitItemKind::Fn(sig, _), .. })\n-        | Node::ImplItem(ImplItem { kind: ImplItemKind::Fn(sig, _), .. }) => Some(&sig.decl),\n-        Node::Expr(Expr { kind: ExprKind::Closure(Closure { fn_decl, .. }), .. })\n-        | Node::ForeignItem(ForeignItem { kind: ForeignItemKind::Fn(fn_decl, ..), .. }) => {\n-            Some(fn_decl)\n-        }\n-        _ => None,\n-    }\n-}\n-\n-pub fn fn_sig<'hir>(node: Node<'hir>) -> Option<&'hir FnSig<'hir>> {\n-    match &node {\n-        Node::Item(Item { kind: ItemKind::Fn(sig, _, _), .. })\n-        | Node::TraitItem(TraitItem { kind: TraitItemKind::Fn(sig, _), .. })\n-        | Node::ImplItem(ImplItem { kind: ImplItemKind::Fn(sig, _), .. }) => Some(sig),\n-        _ => None,\n-    }\n-}\n-\n #[inline]\n pub fn associated_body<'hir>(node: Node<'hir>) -> Option<BodyId> {\n     match node {\n@@ -389,15 +367,15 @@ impl<'hir> Map<'hir> {\n \n     pub fn fn_decl_by_hir_id(self, hir_id: HirId) -> Option<&'hir FnDecl<'hir>> {\n         if let Some(node) = self.find(hir_id) {\n-            fn_decl(node)\n+            node.fn_decl()\n         } else {\n             bug!(\"no node for hir_id `{}`\", hir_id)\n         }\n     }\n \n     pub fn fn_sig_by_hir_id(self, hir_id: HirId) -> Option<&'hir FnSig<'hir>> {\n         if let Some(node) = self.find(hir_id) {\n-            fn_sig(node)\n+            node.fn_sig()\n         } else {\n             bug!(\"no node for hir_id `{}`\", hir_id)\n         }"}, {"sha": "e72d016d7ac91ded55717bb4007ab24ae0021fda", "filename": "compiler/rustc_mir_transform/src/coverage/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fmod.rs?ref=aa6b7508546d011ad61a814cc0c086d15fb15617", "patch": "@@ -541,7 +541,7 @@ fn fn_sig_and_body<'tcx>(\n     // to HIR for it.\n     let hir_node = tcx.hir().get_if_local(def_id).expect(\"expected DefId is local\");\n     let fn_body_id = hir::map::associated_body(hir_node).expect(\"HIR node is a function with body\");\n-    (hir::map::fn_sig(hir_node), tcx.hir().body(fn_body_id))\n+    (hir_node.fn_sig(), tcx.hir().body(fn_body_id))\n }\n \n fn get_body_span<'tcx>("}, {"sha": "f654d6e560c806d1fcb3fe9ccbe572664f0e1cb2", "filename": "compiler/rustc_typeck/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa6b7508546d011ad61a814cc0c086d15fb15617/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=aa6b7508546d011ad61a814cc0c086d15fb15617", "patch": "@@ -4,7 +4,6 @@ use rustc_errors::{\n     MultiSpan,\n };\n use rustc_hir as hir;\n-use rustc_middle::hir::map::fn_sig;\n use rustc_middle::ty::{self as ty, AssocItems, AssocKind, TyCtxt};\n use rustc_session::Session;\n use rustc_span::def_id::DefId;\n@@ -368,7 +367,7 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n         &self,\n         num_params_to_take: usize,\n     ) -> String {\n-        let fn_sig = self.tcx.hir().get_if_local(self.def_id).and_then(fn_sig);\n+        let fn_sig = self.tcx.hir().get_if_local(self.def_id).and_then(hir::Node::fn_sig);\n         let is_used_in_input = |def_id| {\n             fn_sig.map_or(false, |fn_sig| {\n                 fn_sig.decl.inputs.iter().any(|ty| match ty.kind {"}]}