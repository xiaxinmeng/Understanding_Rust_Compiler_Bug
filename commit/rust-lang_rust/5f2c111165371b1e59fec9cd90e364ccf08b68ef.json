{"sha": "5f2c111165371b1e59fec9cd90e364ccf08b68ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMmMxMTExNjUzNzFiMWU1OWZlYzljZDkwZTM2NGNjZjA4YjY4ZWY=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-04-27T05:20:46Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-04-27T10:34:01Z"}, "message": "Allow #[inline] on closures\n\nFixes #49632", "tree": {"sha": "cb2778e11461f77953bac15924e43630af62682b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb2778e11461f77953bac15924e43630af62682b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f2c111165371b1e59fec9cd90e364ccf08b68ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f2c111165371b1e59fec9cd90e364ccf08b68ef", "html_url": "https://github.com/rust-lang/rust/commit/5f2c111165371b1e59fec9cd90e364ccf08b68ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f2c111165371b1e59fec9cd90e364ccf08b68ef/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9822b5709ca78d6398e9ae609de0181116e8b0db", "url": "https://api.github.com/repos/rust-lang/rust/commits/9822b5709ca78d6398e9ae609de0181116e8b0db", "html_url": "https://github.com/rust-lang/rust/commit/9822b5709ca78d6398e9ae609de0181116e8b0db"}], "stats": {"total": 86, "additions": 54, "deletions": 32}, "files": [{"sha": "19f8d15662d84f7a0c93862e7d7becb2e3b76eb2", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -30,6 +30,7 @@ enum Target {\n     ForeignMod,\n     Expression,\n     Statement,\n+    Closure,\n     Other,\n }\n \n@@ -103,14 +104,14 @@ impl<'a, 'tcx> CheckAttrVisitor<'a, 'tcx> {\n         self.check_repr(item, target);\n     }\n \n-    /// Check if an `#[inline]` is applied to a function.\n+    /// Check if an `#[inline]` is applied to a function or a closure.\n     fn check_inline(&self, attr: &hir::Attribute, span: &Span, target: Target) {\n-        if target != Target::Fn {\n+        if target != Target::Fn && target != Target::Closure {\n             struct_span_err!(self.tcx.sess,\n                              attr.span,\n                              E0518,\n-                             \"attribute should be applied to function\")\n-                .span_label(*span, \"not a function\")\n+                             \"attribute should be applied to function or closure\")\n+                .span_label(*span, \"not a function or closure\")\n                 .emit();\n         }\n     }\n@@ -286,9 +287,13 @@ impl<'a, 'tcx> CheckAttrVisitor<'a, 'tcx> {\n     }\n \n     fn check_expr_attributes(&self, expr: &hir::Expr) {\n+        let target = match expr.node {\n+            hir::ExprClosure(..) => Target::Closure,\n+            _ => Target::Expression,\n+        };\n         for attr in expr.attrs.iter() {\n             if attr.check_name(\"inline\") {\n-                self.check_inline(attr, &expr.span, Target::Expression);\n+                self.check_inline(attr, &expr.span, target);\n             }\n             if attr.check_name(\"repr\") {\n                 self.emit_repr_error("}, {"sha": "250905dbdcd8ca91b9aaacfcb81588f60f43f27c", "filename": "src/test/compile-fail/attr-usage-inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fcompile-fail%2Fattr-usage-inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fcompile-fail%2Fattr-usage-inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-usage-inline.rs?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -13,7 +13,7 @@\n #[inline]\n fn f() {}\n \n-#[inline] //~ ERROR: attribute should be applied to function\n+#[inline] //~ ERROR: attribute should be applied to function or closure\n struct S;\n \n fn main() {}"}, {"sha": "2bd45deeab4df7e2d091c5941dafa0f977026143", "filename": "src/test/compile-fail/issue-31769.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fcompile-fail%2Fissue-31769.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fcompile-fail%2Fissue-31769.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31769.rs?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n fn main() {\n-    #[inline] struct Foo;  //~ ERROR attribute should be applied to function\n+    #[inline] struct Foo;  //~ ERROR attribute should be applied to function or closure\n     #[repr(C)] fn foo() {} //~ ERROR attribute should be applied to struct, enum or union\n }"}, {"sha": "0dfa9f6f0d3417f7c196d6590ed705ee9992a1ef", "filename": "src/test/compile-fail/issue-43988.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fcompile-fail%2Fissue-43988.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fcompile-fail%2Fissue-43988.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-43988.rs?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -14,12 +14,12 @@ fn main() {\n \n     #[inline]\n     let _a = 4;\n-    //~^^ ERROR attribute should be applied to function\n+    //~^^ ERROR attribute should be applied to function or closure\n \n \n     #[inline(XYZ)]\n     let _b = 4;\n-    //~^^ ERROR attribute should be applied to function\n+    //~^^ ERROR attribute should be applied to function or closure\n \n     #[repr(nothing)]\n     let _x = 0;\n@@ -40,7 +40,7 @@ fn main() {\n \n     #[inline(ABC)]\n     foo();\n-    //~^^ ERROR attribute should be applied to function\n+    //~^^ ERROR attribute should be applied to function or closure\n \n     let _z = #[repr] 1;\n     //~^ ERROR attribute should not be applied to an expression"}, {"sha": "8cbb7d21af7086748f4c7dc2fc13a1ddbaa8a43a", "filename": "src/test/run-pass/issue-49632.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Frun-pass%2Fissue-49632.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Frun-pass%2Fissue-49632.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-49632.rs?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(stmt_expr_attributes)]\n+\n+pub fn main() {\n+    let _x = #[inline(always)] || {};\n+    let _y = #[inline(never)] || {};\n+    let _z = #[inline] || {};\n+}"}, {"sha": "27d5d3645fdfc358dd20c034940cb1853aa28ec3", "filename": "src/test/ui/error-codes/E0518.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fui%2Ferror-codes%2FE0518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fui%2Ferror-codes%2FE0518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0518.stderr?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -1,19 +1,19 @@\n-error[E0518]: attribute should be applied to function\n+error[E0518]: attribute should be applied to function or closure\n   --> $DIR/E0518.rs:11:1\n    |\n LL | #[inline(always)] //~ ERROR: E0518\n    | ^^^^^^^^^^^^^^^^^\n LL | struct Foo;\n-   | ----------- not a function\n+   | ----------- not a function or closure\n \n-error[E0518]: attribute should be applied to function\n+error[E0518]: attribute should be applied to function or closure\n   --> $DIR/E0518.rs:14:1\n    |\n LL |   #[inline(never)] //~ ERROR: E0518\n    |   ^^^^^^^^^^^^^^^^\n LL | / impl Foo {\n LL | | }\n-   | |_- not a function\n+   | |_- not a function or closure\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b03faad988ebc1c79093695feced71f553b8643b", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-inline.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.rs?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -19,21 +19,21 @@\n #![inline                     = \"2100\"]\n \n #[inline = \"2100\"]\n-//~^ ERROR attribute should be applied to function\n+//~^ ERROR attribute should be applied to function or closure\n mod inline {\n     mod inner { #![inline=\"2100\"] }\n-    //~^ ERROR attribute should be applied to function\n+    //~^ ERROR attribute should be applied to function or closure\n \n     #[inline = \"2100\"] fn f() { }\n \n     #[inline = \"2100\"] struct S;\n-    //~^ ERROR attribute should be applied to function\n+    //~^ ERROR attribute should be applied to function or closure\n \n     #[inline = \"2100\"] type T = S;\n-    //~^ ERROR attribute should be applied to function\n+    //~^ ERROR attribute should be applied to function or closure\n \n     #[inline = \"2100\"] impl S { }\n-    //~^ ERROR attribute should be applied to function\n+    //~^ ERROR attribute should be applied to function or closure\n }\n \n fn main() {}"}, {"sha": "4d63c3f50125d4348489c8fd583aea6111e7ce4f", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-inline.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f2c111165371b1e59fec9cd90e364ccf08b68ef/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-inline.stderr?ref=5f2c111165371b1e59fec9cd90e364ccf08b68ef", "patch": "@@ -1,41 +1,41 @@\n-error[E0518]: attribute should be applied to function\n+error[E0518]: attribute should be applied to function or closure\n   --> $DIR/issue-43106-gating-of-inline.rs:21:1\n    |\n LL |   #[inline = \"2100\"]\n    |   ^^^^^^^^^^^^^^^^^^\n-LL |   //~^ ERROR attribute should be applied to function\n+LL |   //~^ ERROR attribute should be applied to function or closure\n LL | / mod inline {\n LL | |     mod inner { #![inline=\"2100\"] }\n-LL | |     //~^ ERROR attribute should be applied to function\n+LL | |     //~^ ERROR attribute should be applied to function or closure\n LL | |\n ...  |\n-LL | |     //~^ ERROR attribute should be applied to function\n+LL | |     //~^ ERROR attribute should be applied to function or closure\n LL | | }\n-   | |_- not a function\n+   | |_- not a function or closure\n \n-error[E0518]: attribute should be applied to function\n+error[E0518]: attribute should be applied to function or closure\n   --> $DIR/issue-43106-gating-of-inline.rs:24:17\n    |\n LL |     mod inner { #![inline=\"2100\"] }\n-   |     ------------^^^^^^^^^^^^^^^^^-- not a function\n+   |     ------------^^^^^^^^^^^^^^^^^-- not a function or closure\n \n-error[E0518]: attribute should be applied to function\n+error[E0518]: attribute should be applied to function or closure\n   --> $DIR/issue-43106-gating-of-inline.rs:29:5\n    |\n LL |     #[inline = \"2100\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^ --------- not a function\n+   |     ^^^^^^^^^^^^^^^^^^ --------- not a function or closure\n \n-error[E0518]: attribute should be applied to function\n+error[E0518]: attribute should be applied to function or closure\n   --> $DIR/issue-43106-gating-of-inline.rs:32:5\n    |\n LL |     #[inline = \"2100\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^ ----------- not a function\n+   |     ^^^^^^^^^^^^^^^^^^ ----------- not a function or closure\n \n-error[E0518]: attribute should be applied to function\n+error[E0518]: attribute should be applied to function or closure\n   --> $DIR/issue-43106-gating-of-inline.rs:35:5\n    |\n LL |     #[inline = \"2100\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^ ---------- not a function\n+   |     ^^^^^^^^^^^^^^^^^^ ---------- not a function or closure\n \n error: aborting due to 5 previous errors\n "}]}