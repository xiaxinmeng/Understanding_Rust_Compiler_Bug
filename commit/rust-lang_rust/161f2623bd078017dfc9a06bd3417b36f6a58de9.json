{"sha": "161f2623bd078017dfc9a06bd3417b36f6a58de9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MWYyNjIzYmQwNzgwMTdkZmM5YTA2YmQzNDE3YjM2ZjZhNThkZTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-06T10:28:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-06T10:28:58Z"}, "message": "Auto merge of #37386 - johnthagen:Self-reference-example, r=GuillaumeGomez\n\nAdd example using Self to reference\n\nWhen I first came across `Self` I had a hard time finding references to it in the docs (and it's also been asked about on [StackOverflow](http://stackoverflow.com/questions/32304595/whats-the-difference-between-self-and-self).\n\nI hope this example provides someone who comes across it for the first time a little more help.  If there is a better way to show an example actually using `Self`, I'm happy to modify this.  It was just the simplest place to start I could see.", "tree": {"sha": "59c03b437d099ef5ee025cea3117bd9e3a73348d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59c03b437d099ef5ee025cea3117bd9e3a73348d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/161f2623bd078017dfc9a06bd3417b36f6a58de9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/161f2623bd078017dfc9a06bd3417b36f6a58de9", "html_url": "https://github.com/rust-lang/rust/commit/161f2623bd078017dfc9a06bd3417b36f6a58de9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/161f2623bd078017dfc9a06bd3417b36f6a58de9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fc8304fd92720c688f3d6ac30b3a728d15f7a33", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fc8304fd92720c688f3d6ac30b3a728d15f7a33", "html_url": "https://github.com/rust-lang/rust/commit/3fc8304fd92720c688f3d6ac30b3a728d15f7a33"}, {"sha": "434c3144050859359d00ab6b9e21151093b99db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/434c3144050859359d00ab6b9e21151093b99db8", "html_url": "https://github.com/rust-lang/rust/commit/434c3144050859359d00ab6b9e21151093b99db8"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "5c372fb7816ff6ddc554de94ed5ebde121944394", "filename": "src/doc/reference.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/161f2623bd078017dfc9a06bd3417b36f6a58de9/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/161f2623bd078017dfc9a06bd3417b36f6a58de9/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=161f2623bd078017dfc9a06bd3417b36f6a58de9", "patch": "@@ -3755,6 +3755,21 @@ The special type `Self` has a meaning within traits and impls. In a trait defini\n to an implicit type parameter representing the \"implementing\" type. In an impl,\n it is an alias for the implementing type. For example, in:\n \n+```\n+pub trait From<T> {\n+    fn from(T) -> Self;\n+}\n+\n+impl From<i32> for String {\n+    fn from(x: i32) -> Self {\n+        x.to_string()\n+    }\n+}\n+```\n+\n+The notation `Self` in the impl refers to the implementing type: `String`. In another \n+example:\n+\n ```\n trait Printable {\n     fn make_string(&self) -> String;"}]}