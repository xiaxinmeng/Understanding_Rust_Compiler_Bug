{"sha": "e7af60f2585a2ebfc791037284d45d8dd768ccbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YWY2MGYyNTg1YTJlYmZjNzkxMDM3Mjg0ZDQ1ZDhkZDc2OGNjYmU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T02:10:47Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T06:40:42Z"}, "message": "Add util function for desugaring if block", "tree": {"sha": "c69554f7cab163e46624185e1e070438eadf7211", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c69554f7cab163e46624185e1e070438eadf7211"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7af60f2585a2ebfc791037284d45d8dd768ccbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7af60f2585a2ebfc791037284d45d8dd768ccbe", "html_url": "https://github.com/rust-lang/rust/commit/e7af60f2585a2ebfc791037284d45d8dd768ccbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7af60f2585a2ebfc791037284d45d8dd768ccbe/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c74aac9d0c8e35b17659198844ae71a58d685daf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c74aac9d0c8e35b17659198844ae71a58d685daf", "html_url": "https://github.com/rust-lang/rust/commit/c74aac9d0c8e35b17659198844ae71a58d685daf"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "5c9f5e25f4d844afc3488d4a1627b80f68ea2a6f", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e7af60f2585a2ebfc791037284d45d8dd768ccbe/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7af60f2585a2ebfc791037284d45d8dd768ccbe/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=e7af60f2585a2ebfc791037284d45d8dd768ccbe", "patch": "@@ -199,6 +199,27 @@ pub fn for_loop(expr: &hir::Expr) -> Option<(&hir::Pat, &hir::Expr, &hir::Expr)>\n     None\n }\n \n+/// Recover the essential nodes of a desugared if block\n+/// `if cond { then } else { els }` becomes `(cond, then, Some(els))`\n+pub fn if_block(expr: &hir::Expr) -> Option<(&hir::Expr, &hir::Expr, Option<&hir::Expr>)> {\n+    if let hir::ExprKind::Match(ref cond, ref arms, hir::MatchSource::IfDesugar { contains_else_clause }) = expr.node {\n+        let cond = if let hir::ExprKind::DropTemps(ref cond) = cond.node {\n+            cond\n+        } else {\n+            panic!(\"If block desugar must contain DropTemps\");\n+        };\n+        let then = &arms[0].body;\n+        let els = if contains_else_clause {\n+            Some(&*arms[1].body)\n+        } else {\n+            None\n+        };\n+        Some((cond, then, els))\n+    } else {\n+        None\n+    }\n+}\n+\n /// Represent the pre-expansion arguments of a `vec!` invocation.\n pub enum VecArgs<'a> {\n     /// `vec![elem; len]`"}]}