{"sha": "9eb0399a9d506f5f421180fa00ee3eec61a3a41e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYjAzOTlhOWQ1MDZmNWY0MjExODBmYTAwZWUzZWVjNjFhM2E0MWU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-05-19T23:47:21Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-05-19T23:57:14Z"}, "message": "Adjust the zero check in `RawVec::grow`.\n\nThis was supposed to land as part of #72227. (I wish `git push` would\nabort when you have uncommited changes.)", "tree": {"sha": "6f2ef71b2d5026b50c1f409518280becf9097f22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f2ef71b2d5026b50c1f409518280becf9097f22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eb0399a9d506f5f421180fa00ee3eec61a3a41e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb0399a9d506f5f421180fa00ee3eec61a3a41e", "html_url": "https://github.com/rust-lang/rust/commit/9eb0399a9d506f5f421180fa00ee3eec61a3a41e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eb0399a9d506f5f421180fa00ee3eec61a3a41e/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a7dfda40a3e798bf086bd58cc7e5e09deb808b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a7dfda40a3e798bf086bd58cc7e5e09deb808b5", "html_url": "https://github.com/rust-lang/rust/commit/3a7dfda40a3e798bf086bd58cc7e5e09deb808b5"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "2bd4733db420bf0c713b0a2d788f5341508838ff", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9eb0399a9d506f5f421180fa00ee3eec61a3a41e/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eb0399a9d506f5f421180fa00ee3eec61a3a41e/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=9eb0399a9d506f5f421180fa00ee3eec61a3a41e", "patch": "@@ -401,16 +401,15 @@ impl<T, A: AllocRef> RawVec<T, A> {\n         needed_extra_capacity: usize,\n         placement: ReallocPlacement,\n     ) -> Result<(), TryReserveError> {\n+        // This is ensured by the calling contexts.\n+        debug_assert!(needed_extra_capacity > 0);\n+\n         if mem::size_of::<T>() == 0 {\n             // Since we return a capacity of `usize::MAX` when `elem_size` is\n             // 0, getting to here necessarily means the `RawVec` is overfull.\n             return Err(CapacityOverflow);\n         }\n \n-        if needed_extra_capacity == 0 {\n-            return Ok(());\n-        }\n-\n         // Nothing we can really do about these checks, sadly.\n         let required_cap =\n             used_capacity.checked_add(needed_extra_capacity).ok_or(CapacityOverflow)?;"}]}