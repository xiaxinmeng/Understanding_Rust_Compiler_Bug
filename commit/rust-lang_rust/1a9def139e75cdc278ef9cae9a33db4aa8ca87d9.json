{"sha": "1a9def139e75cdc278ef9cae9a33db4aa8ca87d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOWRlZjEzOWU3NWNkYzI3OGVmOWNhZTlhMzNkYjRhYThjYTg3ZDk=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-08-23T13:55:18Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-08-23T13:55:18Z"}, "message": "Profiler: reenable atomics after #65214", "tree": {"sha": "5226919ceb929904eb5e79a7ae2e2e6f09c705b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5226919ceb929904eb5e79a7ae2e2e6f09c705b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a9def139e75cdc278ef9cae9a33db4aa8ca87d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a9def139e75cdc278ef9cae9a33db4aa8ca87d9", "html_url": "https://github.com/rust-lang/rust/commit/1a9def139e75cdc278ef9cae9a33db4aa8ca87d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a9def139e75cdc278ef9cae9a33db4aa8ca87d9/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a22a0ff93d63f738151f096434e732466b4a42e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a22a0ff93d63f738151f096434e732466b4a42e", "html_url": "https://github.com/rust-lang/rust/commit/1a22a0ff93d63f738151f096434e732466b4a42e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b674f73ebf3906440277c5217e78907a9593a485", "filename": "library/profiler_builtins/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a9def139e75cdc278ef9cae9a33db4aa8ca87d9/library%2Fprofiler_builtins%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a9def139e75cdc278ef9cae9a33db4aa8ca87d9/library%2Fprofiler_builtins%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fprofiler_builtins%2Fbuild.rs?ref=1a9def139e75cdc278ef9cae9a33db4aa8ca87d9", "patch": "@@ -65,7 +65,7 @@ fn main() {\n     // This should be a pretty good heuristic for when to set\n     // COMPILER_RT_HAS_ATOMICS\n     if env::var_os(\"CARGO_CFG_TARGET_HAS_ATOMIC\")\n-        .map(|features| features.to_string_lossy().to_lowercase().contains(\"cas\"))\n+        .map(|features| features.to_string_lossy().to_lowercase().contains(\"ptr\"))\n         .unwrap_or(false)\n     {\n         cfg.define(\"COMPILER_RT_HAS_ATOMICS\", Some(\"1\"));"}]}