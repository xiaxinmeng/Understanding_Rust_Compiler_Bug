{"sha": "751d6ede9db85f724b1e62306ea3de5221d8d92a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MWQ2ZWRlOWRiODVmNzI0YjFlNjIzMDZlYTNkZTUyMjFkOGQ5MmE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-07T17:56:18Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-07T17:56:18Z"}, "message": "Rollup merge of #32737 - timonvo:arm-ehabi-backtraces, r=alexcrichton\n\nFix backtraces on ARM EHABI.\n\nBefore this patch, our `rust_eh_personality_catch` routine would cut\nbacktracing short at the `__rust_try` function, due to it not handling\nthe `_US_FORCE_UNWIND` bit properly, which is passed by libunwind\nimplementations on ARM EHABI.\n\nExamples of where the `_US_FORCE_UNWIND` bit is passed to the PR:\n- GCC's libunwind: https://github.com/gcc-mirror/gcc/blob/f1717362de1e56fe1ffab540289d7d0c6ed48b20/libgcc/unwind-arm-common.inc#L590\n- LLVM's libunwind: https://github.com/llvm-mirror/libunwind/blob/61278584b5c84c422ff5da10f46c3235c54636c9/src/UnwindLevel1-gcc-ext.c#L153", "tree": {"sha": "9ec6938458a588c7d66d0911f340baa037e077bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ec6938458a588c7d66d0911f340baa037e077bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/751d6ede9db85f724b1e62306ea3de5221d8d92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/751d6ede9db85f724b1e62306ea3de5221d8d92a", "html_url": "https://github.com/rust-lang/rust/commit/751d6ede9db85f724b1e62306ea3de5221d8d92a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/751d6ede9db85f724b1e62306ea3de5221d8d92a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58a9da8ba72224203f04c7cb1e80c7293699b28", "url": "https://api.github.com/repos/rust-lang/rust/commits/c58a9da8ba72224203f04c7cb1e80c7293699b28", "html_url": "https://github.com/rust-lang/rust/commit/c58a9da8ba72224203f04c7cb1e80c7293699b28"}, {"sha": "6e41885bd813a1628b6ca54058ab9595e9957c67", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e41885bd813a1628b6ca54058ab9595e9957c67", "html_url": "https://github.com/rust-lang/rust/commit/6e41885bd813a1628b6ca54058ab9595e9957c67"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "da7a340af351525ac6a766722b9d921b7295d66d", "filename": "src/libstd/sys/common/unwind/gcc.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/751d6ede9db85f724b1e62306ea3de5221d8d92a/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fgcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/751d6ede9db85f724b1e62306ea3de5221d8d92a/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fgcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fgcc.rs?ref=751d6ede9db85f724b1e62306ea3de5221d8d92a", "patch": "@@ -224,8 +224,13 @@ pub mod eabi {\n         context: *mut uw::_Unwind_Context\n     ) -> uw::_Unwind_Reason_Code\n     {\n+        // Backtraces on ARM will call the personality routine with\n+        // state == _US_VIRTUAL_UNWIND_FRAME | _US_FORCE_UNWIND. In those cases\n+        // we want to continue unwinding the stack, otherwise all our backtraces\n+        // would end at __rust_try.\n         if (state as c_int & uw::_US_ACTION_MASK as c_int)\n-                           == uw::_US_VIRTUAL_UNWIND_FRAME as c_int { // search phase\n+                           == uw::_US_VIRTUAL_UNWIND_FRAME as c_int\n+               && (state as c_int & uw::_US_FORCE_UNWIND as c_int) == 0 { // search phase\n             uw::_URC_HANDLER_FOUND // catch!\n         }\n         else { // cleanup phase"}]}