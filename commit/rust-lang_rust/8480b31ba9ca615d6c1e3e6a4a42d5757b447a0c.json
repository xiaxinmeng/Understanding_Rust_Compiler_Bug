{"sha": "8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ODBiMzFiYTljYTYxNWQ2YzFlM2U2YTRhNDJkNTc1N2I0NDdhMGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-04T02:31:32Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:27:44Z"}, "message": "extract recover_struct_comma_after_dotdot", "tree": {"sha": "8c2fae36133b7d8ea957b6d53b70cc515720bff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c2fae36133b7d8ea957b6d53b70cc515720bff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c", "html_url": "https://github.com/rust-lang/rust/commit/8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e77b9d36ca5b33c7c76ca420b4021dadb8b2a05e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e77b9d36ca5b33c7c76ca420b4021dadb8b2a05e", "html_url": "https://github.com/rust-lang/rust/commit/e77b9d36ca5b33c7c76ca420b4021dadb8b2a05e"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "28b49d01b7ebd95e15ff10516453a3430fe3fd59", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=8480b31ba9ca615d6c1e3e6a4a42d5757b447a0c", "patch": "@@ -1788,21 +1788,7 @@ impl<'a> Parser<'a> {\n                         self.recover_stmt();\n                     }\n                 }\n-                if self.token == token::Comma {\n-                    self.struct_span_err(\n-                        exp_span.to(self.prev_span),\n-                        \"cannot use a comma after the base struct\",\n-                    )\n-                    .span_suggestion_short(\n-                        self.token.span,\n-                        \"remove this comma\",\n-                        String::new(),\n-                        Applicability::MachineApplicable,\n-                    )\n-                    .note(\"the base struct must always be the last field\")\n-                    .emit();\n-                    self.recover_stmt();\n-                }\n+                self.recover_struct_comma_after_dotdot(exp_span);\n                 break;\n             }\n \n@@ -1864,6 +1850,22 @@ impl<'a> Parser<'a> {\n         return Ok(self.mk_expr(span, ExprKind::Struct(pth, fields, base), attrs));\n     }\n \n+    fn recover_struct_comma_after_dotdot(&mut self, span: Span) {\n+        if self.token != token::Comma {\n+            return;\n+        }\n+        self.struct_span_err(span.to(self.prev_span), \"cannot use a comma after the base struct\")\n+            .span_suggestion_short(\n+                self.token.span,\n+                \"remove this comma\",\n+                String::new(),\n+                Applicability::MachineApplicable,\n+            )\n+            .note(\"the base struct must always be the last field\")\n+            .emit();\n+        self.recover_stmt();\n+    }\n+\n     /// Parses `ident (COLON expr)?`.\n     fn parse_field(&mut self) -> PResult<'a, Field> {\n         let attrs = self.parse_outer_attributes()?.into();"}]}