{"sha": "5a81bf7ad2495de1d13813db7fb8bead5ce6685e", "node_id": "C_kwDOAAsO6NoAKDVhODFiZjdhZDI0OTVkZTFkMTM4MTNkYjdmYjhiZWFkNWNlNjY4NWU", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-07-14T21:42:47Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-07-14T21:55:17Z"}, "message": "Use constant eval to do strict validity checks", "tree": {"sha": "87787b4b06fd7d20f9621302590dd0c2f611313f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87787b4b06fd7d20f9621302590dd0c2f611313f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a81bf7ad2495de1d13813db7fb8bead5ce6685e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a81bf7ad2495de1d13813db7fb8bead5ce6685e", "html_url": "https://github.com/rust-lang/rust/commit/5a81bf7ad2495de1d13813db7fb8bead5ce6685e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a81bf7ad2495de1d13813db7fb8bead5ce6685e/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2ae24e6a1bce9197246e86281ba7d1b04084d9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ae24e6a1bce9197246e86281ba7d1b04084d9d", "html_url": "https://github.com/rust-lang/rust/commit/b2ae24e6a1bce9197246e86281ba7d1b04084d9d"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "4b2207f375879add06b4fbaff0ba8b7fe9cf14a9", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5a81bf7ad2495de1d13813db7fb8bead5ce6685e/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a81bf7ad2495de1d13813db7fb8bead5ce6685e/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=5a81bf7ad2495de1d13813db7fb8bead5ce6685e", "patch": "@@ -58,7 +58,6 @@ pub(crate) use llvm::codegen_llvm_intrinsic_call;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_span::symbol::{kw, sym, Symbol};\n-use rustc_target::abi::InitKind;\n \n use crate::prelude::*;\n use cranelift_codegen::ir::AtomicRmwOp;\n@@ -672,12 +671,7 @@ fn codegen_regular_intrinsic_call<'tcx>(\n                 return;\n             }\n \n-            if intrinsic == sym::assert_zero_valid\n-                && !layout.might_permit_raw_init(\n-                    fx,\n-                    InitKind::Zero,\n-                    fx.tcx.sess.opts.unstable_opts.strict_init_checks) {\n-\n+            if intrinsic == sym::assert_zero_valid && !fx.tcx.permits_zero_init(layout) {\n                 with_no_trimmed_paths!({\n                     crate::base::codegen_panic(\n                         fx,\n@@ -688,12 +682,7 @@ fn codegen_regular_intrinsic_call<'tcx>(\n                 return;\n             }\n \n-            if intrinsic == sym::assert_uninit_valid\n-                && !layout.might_permit_raw_init(\n-                    fx,\n-                    InitKind::Uninit,\n-                    fx.tcx.sess.opts.unstable_opts.strict_init_checks) {\n-\n+            if intrinsic == sym::assert_uninit_valid && !fx.tcx.permits_uninit_init(layout) {\n                 with_no_trimmed_paths!({\n                     crate::base::codegen_panic(\n                         fx,"}]}