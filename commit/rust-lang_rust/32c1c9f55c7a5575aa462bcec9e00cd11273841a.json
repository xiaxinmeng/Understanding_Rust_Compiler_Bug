{"sha": "32c1c9f55c7a5575aa462bcec9e00cd11273841a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYzFjOWY1NWM3YTU1NzVhYTQ2MmJjZWM5ZTAwY2QxMTI3Mzg0MWE=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-01-08T02:25:51Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-10T19:31:32Z"}, "message": "Simplify the test for circular_buffer initialization", "tree": {"sha": "20cd785a9109d155fd2e8fbb89ba3ffb23c85bd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20cd785a9109d155fd2e8fbb89ba3ffb23c85bd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32c1c9f55c7a5575aa462bcec9e00cd11273841a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32c1c9f55c7a5575aa462bcec9e00cd11273841a", "html_url": "https://github.com/rust-lang/rust/commit/32c1c9f55c7a5575aa462bcec9e00cd11273841a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32c1c9f55c7a5575aa462bcec9e00cd11273841a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e62b04a060dea5e51f9bb65677ea8bd23dc971", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5e62b04a060dea5e51f9bb65677ea8bd23dc971", "html_url": "https://github.com/rust-lang/rust/commit/b5e62b04a060dea5e51f9bb65677ea8bd23dc971"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "fc05d7cc0476a5cbdc09657b15e1b8cbfd179280", "filename": "src/test/run-pass/chan-poweroftwo.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/32c1c9f55c7a5575aa462bcec9e00cd11273841a/src%2Ftest%2Frun-pass%2Fchan-poweroftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c1c9f55c7a5575aa462bcec9e00cd11273841a/src%2Ftest%2Frun-pass%2Fchan-poweroftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchan-poweroftwo.rs?ref=32c1c9f55c7a5575aa462bcec9e00cd11273841a", "patch": "@@ -1,29 +1,32 @@\n // -*- rust -*-\n \n-// Regression test for circular_buffer initialization\n+// Regression tests for circular_buffer when using a unit\n+// that has a size that is not a power of two\n \n use std;\n \n import std.option;\n import std._uint;\n import std._vec;\n \n-// 12-byte unit for the channel buffer. Assuming that the default\n-// buffer size needs to hold 8 units, then the minimum buffer size\n-// needs to be 96. That's not a power of two so needs to be rounded up.\n+// A 12-byte unit to send over the channel\n type record = rec(i32 val1, i32 val2, i32 val3);\n \n-impure fn worker(chan[record] channel) {\n+// Assuming that the default buffer size needs to hold 8 units,\n+// then the minimum buffer size needs to be 96. That's not a\n+// power of two so needs to be rounded up. Don't trigger any\n+// assertions.\n+impure fn test_init() {\n+    let port[record] myport = port();\n+    auto mychan = chan(myport);\n+\n     let record val = rec(val1=0i32, val2=0i32, val3=0i32);\n-    channel <| val;\n+\n+    mychan <| val;\n }\n \n impure fn main() {\n-    let port[record] myport = port();\n-    auto mychan = chan(myport);\n-\n-    auto temp = spawn worker(mychan);\n-    auto val <- myport;\n+    test_init();\n }\n \n // Local Variables:"}]}