{"sha": "bcc55e5e79585baba752b5016a905dbb3d1b1ef8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYzU1ZTVlNzk1ODViYWJhNzUyYjUwMTZhOTA1ZGJiM2QxYjFlZjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T14:31:09Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T14:31:09Z"}, "message": "we only list some examples of basic types", "tree": {"sha": "d6bfcdf94020d72cc9481ef20a22565f61484a28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6bfcdf94020d72cc9481ef20a22565f61484a28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcc55e5e79585baba752b5016a905dbb3d1b1ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcc55e5e79585baba752b5016a905dbb3d1b1ef8", "html_url": "https://github.com/rust-lang/rust/commit/bcc55e5e79585baba752b5016a905dbb3d1b1ef8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcc55e5e79585baba752b5016a905dbb3d1b1ef8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1", "html_url": "https://github.com/rust-lang/rust/commit/2db0e0d65c0215b1a5d232860c0c2ad3ec8c37d1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d4446faed7b33d371d8db7215881f9b259948d1f", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bcc55e5e79585baba752b5016a905dbb3d1b1ef8/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcc55e5e79585baba752b5016a905dbb3d1b1ef8/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=bcc55e5e79585baba752b5016a905dbb3d1b1ef8", "patch": "@@ -47,7 +47,7 @@\n //!\n //! However, these restrictions are usually not necessary. Many types are always freely\n //! movable, even when pinned, because they do not rely on having a stable address.\n-//! This includes all the basic types (`bool`, `i32` and friends, references)\n+//! This includes all the basic types (like `bool`, `i32`, references)\n //! as well as types consisting solely of these types.\n //! Types that do not care about pinning implement the [`Unpin`] auto-trait, which\n //! cancels the effect of [`Pin<P>`]. For `T: Unpin`, `Pin<Box<T>>` and `Box<T>` function"}]}