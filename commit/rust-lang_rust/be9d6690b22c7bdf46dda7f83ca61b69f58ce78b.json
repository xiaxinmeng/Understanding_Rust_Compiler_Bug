{"sha": "be9d6690b22c7bdf46dda7f83ca61b69f58ce78b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOWQ2NjkwYjIyYzdiZGY0NmRkYTdmODNjYTYxYjY5ZjU4Y2U3OGI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T18:33:01Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T18:34:07Z"}, "message": "Added test case.", "tree": {"sha": "5f2454c782e20268829bd172eac5c2e3ded8690d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f2454c782e20268829bd172eac5c2e3ded8690d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlrt+R8ACgkQ/vbIBR0O\nATxNBg/9GH11bti8hQxAEqPugV/I6jE24Gon3IkcJTyqESKLQyqA6j1UrQnUC7/L\nPl0MJj++sQ9avt0AP4OjPExEfhpkVTest3nfXo2JhJP7XMVlp4iU1Br7z8sk9R01\nSgFN94e+Jv7FMYFnIW1v1NveTAQ6+PZrK1rU+WPpNyIRbUK89pDCSADv9E0y+B2b\nrI69LdVbW4EbHn1fGGgdDaebAfXvS1ae+mvMSXnSXoDUA6e2qgg3OkeJOGgkYav0\nl+6yIkZwEVBo0y2rlazp/wvb4GpsU+sYXg5n0imEjJ8CE0Rp+gNkAMjxUrJgQ8hx\ntpXvGzVQ9wmih1iUNvhsktoYzpt7A4orc8tHuacV/Ur2xk7wibf9TPcUEUholqrR\nBZ3wCZfW8weNCqxen1UEJp6lLqiqfCgVhTOFT3pD/dTcscgSjSB6Oe/Ab7mQpfoo\nreEPCygwQ3LqkXaovcQlY7Wrln8UcOI6FV38HwKutck0toi6vyGiAfDCCm/dNvli\nDBpm4wtev1MHxMaB4suC2gRXg3C8BiHhuEWTWhtUepX6v2uFmIoId6Q7Zstu2iOe\ncIPjUXzg22249vf1BWLTI1SHlgD3cS/i29zIhV3gb9R77q0pDoSP/bIbxOj4kGUD\n0YffM6oLWUxtKPZ0HcQC4RoYv3xaWsPFA0qmRuzPgtzlPI3gdZY=\n=G1b9\n-----END PGP SIGNATURE-----", "payload": "tree 5f2454c782e20268829bd172eac5c2e3ded8690d\nparent 1733f5e1c0a69c853adebf718fc7b4f81a1d257b\nauthor kennytm <kennytm@gmail.com> 1525545181 +0800\ncommitter kennytm <kennytm@gmail.com> 1525545247 +0800\n\nAdded test case.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b", "html_url": "https://github.com/rust-lang/rust/commit/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "html_url": "https://github.com/rust-lang/rust/commit/1733f5e1c0a69c853adebf718fc7b4f81a1d257b"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "da12fbdb942e46d6cd287a98bbd8c9634ef525ee", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=be9d6690b22c7bdf46dda7f83ca61b69f58ce78b", "patch": "@@ -1405,4 +1405,39 @@ mod __test {\n             },\n         ]);\n     }\n+\n+    #[test]\n+    fn test_with_no_doc_stage0() {\n+        let mut config = configure(&[], &[]);\n+        config.stage = Some(0);\n+        config.cmd = Subcommand::Test {\n+            paths: vec![\"src/libstd\".into()],\n+            test_args: vec![],\n+            rustc_args: vec![],\n+            fail_fast: true,\n+            doc_tests: DocTestsOption::No,\n+        };\n+\n+        let build = Build::new(config);\n+        let mut builder = Builder::new(&build);\n+\n+        let host = INTERNER.intern_str(\"A\");\n+\n+        builder.run_step_descriptions(\n+            &[StepDescription::from::<test::Crate>()],\n+            &[\"src/libstd\".into()],\n+        );\n+\n+        // Ensure we don't build any compiler artifacts.\n+        assert!(builder.cache.all::<compile::Rustc>().is_empty());\n+        assert_eq!(first(builder.cache.all::<test::Crate>()), &[\n+            test::Crate {\n+                compiler: Compiler { host, stage: 0 },\n+                target: host,\n+                mode: Mode::Libstd,\n+                test_kind: test::TestKind::Test,\n+                krate: INTERNER.intern_str(\"std\"),\n+            },\n+        ]);\n+    }\n }"}, {"sha": "ff9a262e2cc76df588046eea7415fe730547ee82", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=be9d6690b22c7bdf46dda7f83ca61b69f58ce78b", "patch": "@@ -304,7 +304,7 @@ impl Crate {\n ///\n /// These entries currently correspond to the various output directories of the\n /// build system, with each mod generating output in a different directory.\n-#[derive(Debug, Hash, Clone, Copy, PartialEq, Eq)]\n+#[derive(Debug, Hash, Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]\n pub enum Mode {\n     /// Build the standard library, placing output in the \"stageN-std\" directory.\n     Libstd,"}, {"sha": "2f0e3868f89aef8af987b4cf12eb9006a8fcfacb", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9d6690b22c7bdf46dda7f83ca61b69f58ce78b/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=be9d6690b22c7bdf46dda7f83ca61b69f58ce78b", "patch": "@@ -38,7 +38,7 @@ use toolstate::ToolState;\n const ADB_TEST_DIR: &str = \"/data/tmp/work\";\n \n /// The two modes of the test runner; tests or benchmarks.\n-#[derive(Debug, PartialEq, Eq, Hash, Copy, Clone)]\n+#[derive(Debug, PartialEq, Eq, Hash, Copy, Clone, PartialOrd, Ord)]\n pub enum TestKind {\n     /// Run `cargo test`\n     Test,\n@@ -1407,13 +1407,13 @@ impl Step for CrateNotDefault {\n }\n \n \n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+#[derive(Debug, Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct Crate {\n-    compiler: Compiler,\n-    target: Interned<String>,\n-    mode: Mode,\n-    test_kind: TestKind,\n-    krate: Interned<String>,\n+    pub compiler: Compiler,\n+    pub target: Interned<String>,\n+    pub mode: Mode,\n+    pub test_kind: TestKind,\n+    pub krate: Interned<String>,\n }\n \n impl Step for Crate {"}]}