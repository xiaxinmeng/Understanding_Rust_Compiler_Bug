{"sha": "38b31691a7c6124ae4e48809ee9e083c1ca1f635", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YjMxNjkxYTdjNjEyNGFlNGU0ODgwOWVlOWUwODNjMWNhMWY2MzU=", "commit": {"author": {"name": "Hameer Abbasi", "email": "einstein.edison@gmail.com", "date": "2021-03-31T15:30:07Z"}, "committer": {"name": "Hameer Abbasi", "email": "einstein.edison@gmail.com", "date": "2021-03-31T15:30:07Z"}, "message": "Fix compiletest to use correct bitwidth stderr files.", "tree": {"sha": "f7d0fae257ace5fd2debde6b088ace5720ebe033", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7d0fae257ace5fd2debde6b088ace5720ebe033"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38b31691a7c6124ae4e48809ee9e083c1ca1f635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38b31691a7c6124ae4e48809ee9e083c1ca1f635", "html_url": "https://github.com/rust-lang/rust/commit/38b31691a7c6124ae4e48809ee9e083c1ca1f635", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38b31691a7c6124ae4e48809ee9e083c1ca1f635/comments", "author": {"login": "hameerabbasi", "id": 2190658, "node_id": "MDQ6VXNlcjIxOTA2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2190658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hameerabbasi", "html_url": "https://github.com/hameerabbasi", "followers_url": "https://api.github.com/users/hameerabbasi/followers", "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}", "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions", "organizations_url": "https://api.github.com/users/hameerabbasi/orgs", "repos_url": "https://api.github.com/users/hameerabbasi/repos", "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/hameerabbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hameerabbasi", "id": 2190658, "node_id": "MDQ6VXNlcjIxOTA2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2190658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hameerabbasi", "html_url": "https://github.com/hameerabbasi", "followers_url": "https://api.github.com/users/hameerabbasi/followers", "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}", "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions", "organizations_url": "https://api.github.com/users/hameerabbasi/orgs", "repos_url": "https://api.github.com/users/hameerabbasi/repos", "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/hameerabbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f80b9acf204888585b254e760d13ac4c37af2254", "url": "https://api.github.com/repos/rust-lang/rust/commits/f80b9acf204888585b254e760d13ac4c37af2254", "html_url": "https://github.com/rust-lang/rust/commit/f80b9acf204888585b254e760d13ac4c37af2254"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "7e6c21b824d7ccd869e5b52e4578c1ed4c24bfca", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/38b31691a7c6124ae4e48809ee9e083c1ca1f635/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38b31691a7c6124ae4e48809ee9e083c1ca1f635/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=38b31691a7c6124ae4e48809ee9e083c1ca1f635", "patch": "@@ -3140,8 +3140,14 @@ impl<'test> TestCx<'test> {\n         output_kind: TestOutput,\n         explicit_format: bool,\n     ) -> usize {\n+        let stderr_bits = format!(\"{}.stderr\", get_pointer_width(&self.config.target));\n         let (stderr_kind, stdout_kind) = match output_kind {\n-            TestOutput::Compile => (UI_STDERR, UI_STDOUT),\n+            TestOutput::Compile => (\n+                {\n+                    if self.props.stderr_per_bitwidth { &stderr_bits } else { UI_STDERR }\n+                },\n+                UI_STDOUT,\n+            ),\n             TestOutput::Run => (UI_RUN_STDERR, UI_RUN_STDOUT),\n         };\n \n@@ -3181,15 +3187,12 @@ impl<'test> TestCx<'test> {\n         match output_kind {\n             TestOutput::Compile => {\n                 if !self.props.dont_check_compiler_stdout {\n-                    errors += self.compare_output(\"stdout\", &normalized_stdout, &expected_stdout);\n+                    errors +=\n+                        self.compare_output(stdout_kind, &normalized_stdout, &expected_stdout);\n                 }\n                 if !self.props.dont_check_compiler_stderr {\n-                    let kind = if self.props.stderr_per_bitwidth {\n-                        format!(\"{}.stderr\", get_pointer_width(&self.config.target))\n-                    } else {\n-                        String::from(\"stderr\")\n-                    };\n-                    errors += self.compare_output(&kind, &normalized_stderr, &expected_stderr);\n+                    errors +=\n+                        self.compare_output(stderr_kind, &normalized_stderr, &expected_stderr);\n                 }\n             }\n             TestOutput::Run => {"}]}