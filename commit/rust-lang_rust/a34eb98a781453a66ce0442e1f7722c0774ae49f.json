{"sha": "a34eb98a781453a66ce0442e1f7722c0774ae49f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNGViOThhNzgxNDUzYTY2Y2UwNDQyZTFmNzcyMmMwNzc0YWU0OWY=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-21T22:11:21Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-21T22:11:21Z"}, "message": "Make nameres::ResolvePathResult private and refactor", "tree": {"sha": "4aee9db8248a6d669f3cd832d1e2a6bd448e3208", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aee9db8248a6d669f3cd832d1e2a6bd448e3208"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a34eb98a781453a66ce0442e1f7722c0774ae49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a34eb98a781453a66ce0442e1f7722c0774ae49f", "html_url": "https://github.com/rust-lang/rust/commit/a34eb98a781453a66ce0442e1f7722c0774ae49f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a34eb98a781453a66ce0442e1f7722c0774ae49f/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e7bc905be156a007a4ee8f1a1bd1d73a1d19ade", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7bc905be156a007a4ee8f1a1bd1d73a1d19ade", "html_url": "https://github.com/rust-lang/rust/commit/2e7bc905be156a007a4ee8f1a1bd1d73a1d19ade"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8067b8415f5e63ed32b12a8ac315868cf3094ae9", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a34eb98a781453a66ce0442e1f7722c0774ae49f/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a34eb98a781453a66ce0442e1f7722c0774ae49f/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=a34eb98a781453a66ce0442e1f7722c0774ae49f", "patch": "@@ -304,7 +304,7 @@ where\n                 &import.path,\n             );\n \n-            (res.module, res.reached_fixedpoint)\n+            (res.resolved_def, res.reached_fixedpoint)\n         };\n \n         if reached_fixedpoint != ReachedFixedPoint::Yes {\n@@ -443,9 +443,9 @@ where\n }\n \n #[derive(Debug, Clone)]\n-pub struct ResolvePathResult {\n-    pub(crate) module: PerNs<ModuleDef>,\n-    pub(crate) segment_index: Option<usize>,\n+struct ResolvePathResult {\n+    resolved_def: PerNs<ModuleDef>,\n+    segment_index: Option<usize>,\n     reached_fixedpoint: ReachedFixedPoint,\n }\n \n@@ -455,11 +455,11 @@ impl ResolvePathResult {\n     }\n \n     fn with(\n-        module: PerNs<ModuleDef>,\n+        resolved_def: PerNs<ModuleDef>,\n         reached_fixedpoint: ReachedFixedPoint,\n         segment_index: Option<usize>,\n     ) -> ResolvePathResult {\n-        ResolvePathResult { module, reached_fixedpoint, segment_index }\n+        ResolvePathResult { resolved_def, reached_fixedpoint, segment_index }\n     }\n }\n \n@@ -498,7 +498,7 @@ impl ItemMap {\n         path: &Path,\n     ) -> (PerNs<ModuleDef>, Option<usize>) {\n         let res = self.resolve_path_fp(db, ResolveMode::Other, original_module, path);\n-        (res.module, res.segment_index)\n+        (res.resolved_def, res.segment_index)\n     }\n \n     fn resolve_in_prelude("}]}