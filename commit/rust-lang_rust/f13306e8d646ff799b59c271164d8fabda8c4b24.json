{"sha": "f13306e8d646ff799b59c271164d8fabda8c4b24", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMzMwNmU4ZDY0NmZmNzk5YjU5YzI3MTE2NGQ4ZmFiZGE4YzRiMjQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-28T23:17:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-28T23:17:28Z"}, "message": "Switch boolean operands to 1-bit, as llvm prefers. Will promote to 8-bit when storing to memory.", "tree": {"sha": "16f6a4aa9632bb20d211bbc3e69c25823b23c2ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16f6a4aa9632bb20d211bbc3e69c25823b23c2ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f13306e8d646ff799b59c271164d8fabda8c4b24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f13306e8d646ff799b59c271164d8fabda8c4b24", "html_url": "https://github.com/rust-lang/rust/commit/f13306e8d646ff799b59c271164d8fabda8c4b24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f13306e8d646ff799b59c271164d8fabda8c4b24/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a4cb3ef36bc0610284c5e67c239363d3757df71", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4cb3ef36bc0610284c5e67c239363d3757df71", "html_url": "https://github.com/rust-lang/rust/commit/5a4cb3ef36bc0610284c5e67c239363d3757df71"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "eb39697693bf24268af5b9fb54abba359d588bdc", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f13306e8d646ff799b59c271164d8fabda8c4b24/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f13306e8d646ff799b59c271164d8fabda8c4b24/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f13306e8d646ff799b59c271164d8fabda8c4b24", "patch": "@@ -62,6 +62,10 @@ fn T_nil() -> TypeRef {\n     ret llvm.LLVMVoidType();\n }\n \n+fn T_i1() -> TypeRef {\n+    ret llvm.LLVMInt1Type();\n+}\n+\n fn T_i8() -> TypeRef {\n     ret llvm.LLVMInt8Type();\n }\n@@ -161,9 +165,9 @@ fn C_integral(int i, TypeRef t) -> ValueRef {\n \n fn C_bool(bool b) -> ValueRef {\n     if (b) {\n-        ret C_integral(1, T_i8());\n+        ret C_integral(1, T_i1());\n     } else {\n-        ret C_integral(0, T_i8());\n+        ret C_integral(0, T_i1());\n     }\n }\n \n@@ -274,8 +278,7 @@ fn trans_unary(@block_ctxt cx, ast.unop op, &ast.expr e) -> ValueRef {\n             ret cx.build.Not(trans_expr(cx, e));\n         }\n         case (ast.not) {\n-            ret cx.build.And(C_bool(true),\n-                             cx.build.Not(trans_expr(cx, e)));\n+            ret cx.build.Not(trans_expr(cx, e));\n         }\n         case (ast.neg) {\n             // FIXME: switch by signedness."}]}