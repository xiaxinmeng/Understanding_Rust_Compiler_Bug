{"sha": "ebe8df41d70d8763e0a15aefe078b035d3519214", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZThkZjQxZDcwZDg3NjNlMGExNWFlZmUwNzhiMDM1ZDM1MTkyMTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-08T10:42:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-08T10:42:04Z"}, "message": "Auto merge of #52872 - faern:use-modern-alignment-libc, r=TimNN\n\nMake IpvXAddr::new const fns and the well known addresses associated constants\n\nImplements/fixes https://github.com/rust-lang/rust/issues/44582\n\nI just got a PR towards libc (https://github.com/rust-lang/libc/pull/1044) merged. With the new feature added in that PR it is now possible to create `in6_addr` instances as consts. This enables us to finally make the constructors of the IP structs const fns and to make the localhost/unspecified addresses associated constants, as agreed in the above mentioned tracking issue.\n\nI also added a BROADCAST constant. Personally this is the well known address I tend to need the most often.", "tree": {"sha": "d5bd5bac86ca88d7299ec6c6bfb125a10828d43f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5bd5bac86ca88d7299ec6c6bfb125a10828d43f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebe8df41d70d8763e0a15aefe078b035d3519214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe8df41d70d8763e0a15aefe078b035d3519214", "html_url": "https://github.com/rust-lang/rust/commit/ebe8df41d70d8763e0a15aefe078b035d3519214", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebe8df41d70d8763e0a15aefe078b035d3519214/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffb09dfb3a9b252e26cd4f6570e9ff1b8a742edc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb09dfb3a9b252e26cd4f6570e9ff1b8a742edc", "html_url": "https://github.com/rust-lang/rust/commit/ffb09dfb3a9b252e26cd4f6570e9ff1b8a742edc"}, {"sha": "c0041f4a17b587cf47f0ecc481afb29a4ae28716", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0041f4a17b587cf47f0ecc481afb29a4ae28716", "html_url": "https://github.com/rust-lang/rust/commit/c0041f4a17b587cf47f0ecc481afb29a4ae28716"}], "stats": {"total": 217, "additions": 118, "deletions": 99}, "files": [{"sha": "2a7dbce2ddc913949ae8e72a0ef0edba98177fcc", "filename": "src/Cargo.lock", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=ebe8df41d70d8763e0a15aefe078b035d3519214", "patch": "@@ -90,7 +90,7 @@ name = \"atty\"\n version = \"0.2.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -102,7 +102,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"backtrace-sys 0.1.23 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-demangle 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -113,7 +113,7 @@ version = \"0.1.23\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -136,7 +136,7 @@ dependencies = [\n  \"filetime 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"petgraph 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pretty_assertions 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -196,7 +196,7 @@ dependencies = [\n  \"jobserver 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazycell 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libgit2-sys 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -243,7 +243,7 @@ dependencies = [\n  \"jobserver 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazycell 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libgit2-sys 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -426,7 +426,7 @@ name = \"commoncrypto-sys\"\n version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -446,7 +446,7 @@ dependencies = [\n  \"filetime 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -465,7 +465,7 @@ dependencies = [\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -488,7 +488,7 @@ version = \"0.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"core-foundation-sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -497,15 +497,15 @@ version = \"0.6.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"core-foundation-sys 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"core-foundation-sys\"\n version = \"0.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -627,7 +627,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"curl-sys 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"schannel 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -641,7 +641,7 @@ version = \"0.4.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -790,7 +790,7 @@ version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -804,7 +804,7 @@ name = \"flate2\"\n version = \"1.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miniz-sys 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -835,7 +835,7 @@ name = \"fs2\"\n version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -887,7 +887,7 @@ version = \"0.7.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libgit2-sys 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1035,7 +1035,7 @@ name = \"isatty\"\n version = \"0.1.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1058,7 +1058,7 @@ name = \"jobserver\"\n version = \"0.1.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1129,7 +1129,7 @@ dependencies = [\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.42\"\n+version = \"0.2.43\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -1140,7 +1140,7 @@ dependencies = [\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cmake 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"curl-sys 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libssh2-sys 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1153,7 +1153,7 @@ version = \"0.2.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cmake 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1166,7 +1166,7 @@ version = \"1.0.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1206,7 +1206,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1273,15 +1273,15 @@ name = \"memchr\"\n version = \"2.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"memmap\"\n version = \"0.6.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1304,7 +1304,7 @@ version = \"0.1.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1372,7 +1372,7 @@ name = \"num_cpus\"\n version = \"1.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1389,7 +1389,7 @@ dependencies = [\n  \"cfg-if 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1404,7 +1404,7 @@ version = \"0.9.33\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1461,7 +1461,7 @@ name = \"parking_lot_core\"\n version = \"0.2.14\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1657,7 +1657,7 @@ version = \"0.4.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1668,7 +1668,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1694,7 +1694,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2024,7 +2024,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2586,7 +2586,7 @@ version = \"0.3.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2764,7 +2764,7 @@ version = \"0.4.16\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"filetime 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"xattr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2774,7 +2774,7 @@ name = \"tempfile\"\n version = \"3.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2825,7 +2825,7 @@ name = \"termion\"\n version = \"1.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2869,7 +2869,7 @@ name = \"time\"\n version = \"0.1.40\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -3069,7 +3069,7 @@ name = \"xattr\"\n version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -3181,7 +3181,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fb497c35d362b6a331cfd94956a07fc2c78a4604cdbee844a81170386b996dd3\"\n \"checksum lazycell 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a6f08839bc70ef4a3fe1d566d5350f519c5912ea86be0df1740a7d247c7fc0ef\"\n \"checksum lazycell 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d33a48d0365c96081958cc663eef834975cb1e8d8bea3378513fc72bdbf11e50\"\n-\"checksum libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b685088df2b950fccadf07a7187c8ef846a959c142338a48f9dc0b94517eb5f1\"\n+\"checksum libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76e3a3ef172f1a0b9a9ff0dd1491ae5e6c948b94479a3021819ba7d860c8645d\"\n \"checksum libgit2-sys 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c9051a4b288ba6f8728e9e52bb2510816946b8bcb2e20259e4d4cdc93b9ecafd\"\n \"checksum libssh2-sys 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c628b499e8d1a4f4bd09a95d6cb1f8aeb231b46a9d40959bbd0408f14dd63adf\"\n \"checksum libz-sys 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"87f737ad6cc6fd6eefe3d9dc5412f1573865bded441300904d2f42269e140f16\""}, {"sha": "6bdbf5dc937459bd10e6bc4dc52b0adbd8cf4358", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=ebe8df41d70d8763e0a15aefe078b035d3519214", "patch": "@@ -1 +1 @@\n-Subproject commit b6d23ed45d72918239c0bfac11dc547895e59b81\n+Subproject commit 6bdbf5dc937459bd10e6bc4dc52b0adbd8cf4358"}, {"sha": "0bc968b6c5cda20b8937fba1ab76f2b1811865b0", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=ebe8df41d70d8763e0a15aefe078b035d3519214", "patch": "@@ -252,6 +252,8 @@\n #![feature(char_error_internals)]\n #![feature(compiler_builtins_lib)]\n #![feature(const_fn)]\n+#![feature(const_int_ops)]\n+#![feature(const_ip)]\n #![feature(core_intrinsics)]\n #![feature(dropck_eyepatch)]\n #![feature(exact_size_is_empty)]\n@@ -281,6 +283,7 @@\n #![feature(ptr_internals)]\n #![feature(raw)]\n #![feature(rustc_attrs)]\n+#![feature(rustc_const_unstable)]\n #![feature(std_internals)]\n #![feature(stdsimd)]\n #![feature(shrink_to)]"}, {"sha": "d601a0c42e980480d7fd02fea4d7e2daf8aa39ac", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 68, "deletions": 53, "changes": 121, "blob_url": "https://github.com/rust-lang/rust/blob/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=ebe8df41d70d8763e0a15aefe078b035d3519214", "patch": "@@ -16,8 +16,6 @@\n use cmp::Ordering;\n use fmt;\n use hash;\n-use mem;\n-use net::{hton, ntoh};\n use sys::net::netc as c;\n use sys_common::{AsInner, FromInner};\n \n@@ -340,52 +338,67 @@ impl Ipv4Addr {\n     /// let addr = Ipv4Addr::new(127, 0, 0, 1);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn new(a: u8, b: u8, c: u8, d: u8) -> Ipv4Addr {\n+    #[rustc_const_unstable(feature = \"const_ip\")]\n+    pub const fn new(a: u8, b: u8, c: u8, d: u8) -> Ipv4Addr {\n         Ipv4Addr {\n             inner: c::in_addr {\n-                s_addr: hton(((a as u32) << 24) |\n-                             ((b as u32) << 16) |\n-                             ((c as u32) <<  8) |\n-                              (d as u32)),\n+                s_addr: u32::to_be(\n+                    ((a as u32) << 24) |\n+                    ((b as u32) << 16) |\n+                    ((c as u32) <<  8) |\n+                    (d as u32)\n+                ),\n             }\n         }\n     }\n \n-    /// Creates a new IPv4 address with the address pointing to localhost: 127.0.0.1.\n+    /// An IPv4 address with the address pointing to localhost: 127.0.0.1.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// #![feature(ip_constructors)]\n     /// use std::net::Ipv4Addr;\n     ///\n-    /// let addr = Ipv4Addr::localhost();\n+    /// let addr = Ipv4Addr::LOCALHOST;\n     /// assert_eq!(addr, Ipv4Addr::new(127, 0, 0, 1));\n     /// ```\n     #[unstable(feature = \"ip_constructors\",\n                reason = \"requires greater scrutiny before stabilization\",\n                issue = \"44582\")]\n-    pub fn localhost() -> Ipv4Addr {\n-        Ipv4Addr::new(127, 0, 0, 1)\n-    }\n+    pub const LOCALHOST: Self = Ipv4Addr::new(127, 0, 0, 1);\n \n-    /// Creates a new IPv4 address representing an unspecified address: 0.0.0.0\n+    /// An IPv4 address representing an unspecified address: 0.0.0.0\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// #![feature(ip_constructors)]\n     /// use std::net::Ipv4Addr;\n     ///\n-    /// let addr = Ipv4Addr::unspecified();\n+    /// let addr = Ipv4Addr::UNSPECIFIED;\n     /// assert_eq!(addr, Ipv4Addr::new(0, 0, 0, 0));\n     /// ```\n     #[unstable(feature = \"ip_constructors\",\n                reason = \"requires greater scrutiny before stabilization\",\n                issue = \"44582\")]\n-    pub fn unspecified() -> Ipv4Addr {\n-        Ipv4Addr::new(0, 0, 0, 0)\n-    }\n+    pub const UNSPECIFIED: Self = Ipv4Addr::new(0, 0, 0, 0);\n+\n+    /// An IPv4 address representing the broadcast address: 255.255.255.255\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(ip_constructors)]\n+    /// use std::net::Ipv4Addr;\n+    ///\n+    /// let addr = Ipv4Addr::BROADCAST;\n+    /// assert_eq!(addr, Ipv4Addr::new(255, 255, 255, 255));\n+    /// ```\n+    #[unstable(feature = \"ip_constructors\",\n+               reason = \"requires greater scrutiny before stabilization\",\n+               issue = \"44582\")]\n+    pub const BROADCAST: Self = Ipv4Addr::new(255, 255, 255, 255);\n \n     /// Returns the four eight-bit integers that make up this address.\n     ///\n@@ -399,7 +412,7 @@ impl Ipv4Addr {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn octets(&self) -> [u8; 4] {\n-        let bits = ntoh(self.inner.s_addr);\n+        let bits = u32::from_be(self.inner.s_addr);\n         [(bits >> 24) as u8, (bits >> 16) as u8, (bits >> 8) as u8, bits as u8]\n     }\n \n@@ -573,8 +586,7 @@ impl Ipv4Addr {\n     /// ```\n     #[stable(since = \"1.7.0\", feature = \"ip_17\")]\n     pub fn is_broadcast(&self) -> bool {\n-        self.octets()[0] == 255 && self.octets()[1] == 255 &&\n-        self.octets()[2] == 255 && self.octets()[3] == 255\n+        self == &Self::BROADCAST\n     }\n \n     /// Returns [`true`] if this address is in a range designated for documentation.\n@@ -763,7 +775,7 @@ impl PartialOrd<IpAddr> for Ipv4Addr {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Ord for Ipv4Addr {\n     fn cmp(&self, other: &Ipv4Addr) -> Ordering {\n-        ntoh(self.inner.s_addr).cmp(&ntoh(other.inner.s_addr))\n+        u32::from_be(self.inner.s_addr).cmp(&u32::from_be(other.inner.s_addr))\n     }\n }\n \n@@ -856,55 +868,57 @@ impl Ipv6Addr {\n     /// let addr = Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn new(a: u16, b: u16, c: u16, d: u16, e: u16, f: u16, g: u16,\n-               h: u16) -> Ipv6Addr {\n-        let mut addr: c::in6_addr = unsafe { mem::zeroed() };\n-        addr.s6_addr = [(a >> 8) as u8, a as u8,\n-                        (b >> 8) as u8, b as u8,\n-                        (c >> 8) as u8, c as u8,\n-                        (d >> 8) as u8, d as u8,\n-                        (e >> 8) as u8, e as u8,\n-                        (f >> 8) as u8, f as u8,\n-                        (g >> 8) as u8, g as u8,\n-                        (h >> 8) as u8, h as u8];\n-        Ipv6Addr { inner: addr }\n+    #[rustc_const_unstable(feature = \"const_ip\")]\n+    pub const fn new(a: u16, b: u16, c: u16, d: u16, e: u16, f: u16,\n+                     g: u16, h: u16) -> Ipv6Addr {\n+        Ipv6Addr {\n+            inner: c::in6_addr {\n+                s6_addr: [\n+                    (a >> 8) as u8, a as u8,\n+                    (b >> 8) as u8, b as u8,\n+                    (c >> 8) as u8, c as u8,\n+                    (d >> 8) as u8, d as u8,\n+                    (e >> 8) as u8, e as u8,\n+                    (f >> 8) as u8, f as u8,\n+                    (g >> 8) as u8, g as u8,\n+                    (h >> 8) as u8, h as u8\n+                ],\n+            }\n+        }\n+\n     }\n \n-    /// Creates a new IPv6 address representing localhost: `::1`.\n+    /// An IPv6 address representing localhost: `::1`.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// #![feature(ip_constructors)]\n     /// use std::net::Ipv6Addr;\n     ///\n-    /// let addr = Ipv6Addr::localhost();\n+    /// let addr = Ipv6Addr::LOCALHOST;\n     /// assert_eq!(addr, Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1));\n     /// ```\n     #[unstable(feature = \"ip_constructors\",\n                reason = \"requires greater scrutiny before stabilization\",\n                issue = \"44582\")]\n-    pub fn localhost() -> Ipv6Addr {\n-        Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1)\n-    }\n+    pub const LOCALHOST: Self = Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1);\n \n-    /// Creates a new IPv6 address representing the unspecified address: `::`\n+    /// An IPv6 address representing the unspecified address: `::`\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// #![feature(ip_constructors)]\n     /// use std::net::Ipv6Addr;\n     ///\n-    /// let addr = Ipv6Addr::unspecified();\n+    /// let addr = Ipv6Addr::UNSPECIFIED;\n     /// assert_eq!(addr, Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0));\n     /// ```\n     #[unstable(feature = \"ip_constructors\",\n                reason = \"requires greater scrutiny before stabilization\",\n                issue = \"44582\")]\n-    pub fn unspecified() -> Ipv6Addr {\n-        Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0)\n-    }\n+    pub const UNSPECIFIED: Self = Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0);\n \n     /// Returns the eight 16-bit segments that make up this address.\n     ///\n@@ -1414,8 +1428,7 @@ impl From<u128> for Ipv6Addr {\n #[stable(feature = \"ipv6_from_octets\", since = \"1.9.0\")]\n impl From<[u8; 16]> for Ipv6Addr {\n     fn from(octets: [u8; 16]) -> Ipv6Addr {\n-        let mut inner: c::in6_addr = unsafe { mem::zeroed() };\n-        inner.s6_addr = octets;\n+        let inner = c::in6_addr { s6_addr: octets };\n         Ipv6Addr::from_inner(inner)\n     }\n }\n@@ -1846,18 +1859,20 @@ mod tests {\n \n     #[test]\n     fn ipv4_from_constructors() {\n-        assert_eq!(Ipv4Addr::localhost(), Ipv4Addr::new(127, 0, 0, 1));\n-        assert!(Ipv4Addr::localhost().is_loopback());\n-        assert_eq!(Ipv4Addr::unspecified(), Ipv4Addr::new(0, 0, 0, 0));\n-        assert!(Ipv4Addr::unspecified().is_unspecified());\n+        assert_eq!(Ipv4Addr::LOCALHOST, Ipv4Addr::new(127, 0, 0, 1));\n+        assert!(Ipv4Addr::LOCALHOST.is_loopback());\n+        assert_eq!(Ipv4Addr::UNSPECIFIED, Ipv4Addr::new(0, 0, 0, 0));\n+        assert!(Ipv4Addr::UNSPECIFIED.is_unspecified());\n+        assert_eq!(Ipv4Addr::BROADCAST, Ipv4Addr::new(255, 255, 255, 255));\n+        assert!(Ipv4Addr::BROADCAST.is_broadcast());\n     }\n \n     #[test]\n     fn ipv6_from_contructors() {\n-        assert_eq!(Ipv6Addr::localhost(), Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1));\n-        assert!(Ipv6Addr::localhost().is_loopback());\n-        assert_eq!(Ipv6Addr::unspecified(), Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0));\n-        assert!(Ipv6Addr::unspecified().is_unspecified());\n+        assert_eq!(Ipv6Addr::LOCALHOST, Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1));\n+        assert!(Ipv6Addr::LOCALHOST.is_loopback());\n+        assert_eq!(Ipv6Addr::UNSPECIFIED, Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0));\n+        assert!(Ipv6Addr::UNSPECIFIED.is_unspecified());\n     }\n \n     #[test]"}, {"sha": "b6d9f4562953ad3192fd3a52ee16fb544751343c", "filename": "src/libstd/sys/redox/net/netc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fnetc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fnetc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fnetc.rs?ref=ebe8df41d70d8763e0a15aefe078b035d3519214", "patch": "@@ -24,10 +24,10 @@ pub struct in_addr {\n }\n \n #[derive(Copy, Clone)]\n+#[repr(align(4))]\n #[repr(C)]\n pub struct in6_addr {\n     pub s6_addr: [u8; 16],\n-    __align: [u32; 0],\n }\n \n #[derive(Copy, Clone)]"}, {"sha": "ee037ac68c59bd6083ff78a0d848d3f8f2774779", "filename": "src/rustc/libc_shim/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Frustc%2Flibc_shim%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ebe8df41d70d8763e0a15aefe078b035d3519214/src%2Frustc%2Flibc_shim%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Flibc_shim%2FCargo.toml?ref=ebe8df41d70d8763e0a15aefe078b035d3519214", "patch": "@@ -36,4 +36,5 @@ compiler_builtins = { path = \"../compiler_builtins_shim\" }\n # Certain parts of libc are conditionally compiled differently than when used\n # outside rustc. See https://github.com/rust-lang/libc/search?l=Rust&q=stdbuild&type=&utf8=%E2%9C%93.\n stdbuild = []\n-default = [\"stdbuild\"]\n+default = [\"stdbuild\", \"align\"]\n+align = []"}]}