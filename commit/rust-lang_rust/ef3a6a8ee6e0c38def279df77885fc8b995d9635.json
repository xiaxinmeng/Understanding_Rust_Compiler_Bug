{"sha": "ef3a6a8ee6e0c38def279df77885fc8b995d9635", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmM2E2YThlZTZlMGMzOGRlZjI3OWRmNzc4ODVmYzhiOTk1ZDk2MzU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-10-12T17:54:41Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-10-12T21:45:05Z"}, "message": "Add an unstable constructor for creating `Rc<str>` from `str`", "tree": {"sha": "0a1c7e270acd78a0cf98aa47169317784f07cecd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a1c7e270acd78a0cf98aa47169317784f07cecd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef3a6a8ee6e0c38def279df77885fc8b995d9635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef3a6a8ee6e0c38def279df77885fc8b995d9635", "html_url": "https://github.com/rust-lang/rust/commit/ef3a6a8ee6e0c38def279df77885fc8b995d9635", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef3a6a8ee6e0c38def279df77885fc8b995d9635/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "html_url": "https://github.com/rust-lang/rust/commit/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "18a345630d1329fe36c940fd6fb6010c4dc700cc", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ef3a6a8ee6e0c38def279df77885fc8b995d9635/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3a6a8ee6e0c38def279df77885fc8b995d9635/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=ef3a6a8ee6e0c38def279df77885fc8b995d9635", "patch": "@@ -230,13 +230,14 @@ use core::hash::{Hash, Hasher};\n use core::intrinsics::{abort, assume};\n use core::marker;\n use core::marker::Unsize;\n-use core::mem::{self, align_of_val, forget, size_of_val, uninitialized};\n+use core::mem::{self, align_of_val, forget, size_of, size_of_val, uninitialized};\n use core::ops::Deref;\n use core::ops::CoerceUnsized;\n use core::ptr::{self, Shared};\n use core::convert::From;\n \n use heap::deallocate;\n+use raw_vec::RawVec;\n \n struct RcBox<T: ?Sized> {\n     strong: Cell<usize>,\n@@ -365,6 +366,30 @@ impl<T> Rc<T> {\n     }\n }\n \n+impl Rc<str> {\n+    /// Constructs a new `Rc<str>` from a string slice.\n+    #[doc(hidden)]\n+    #[unstable(feature = \"rustc_private\",\n+               reason = \"for internal use in rustc\",\n+               issue = \"0\")]\n+    pub fn __from_str(value: &str) -> Rc<str> {\n+        unsafe {\n+            // Allocate enough space for `RcBox<str>`.\n+            let aligned_len = (value.len() + size_of::<usize>() - 1) / size_of::<usize>();\n+            let vec = RawVec::<usize>::with_capacity(2 + aligned_len);\n+            let ptr = vec.ptr();\n+            forget(vec);\n+            // Initialize fields of `RcBox<str>`.\n+            *ptr.offset(0) = 1; // strong: Cell::new(1)\n+            *ptr.offset(1) = 1; // weak: Cell::new(1)\n+            ptr::copy_nonoverlapping(value.as_ptr(), ptr.offset(2) as *mut u8, value.len());\n+            // Combine the allocation address and the string length into a fat pointer to `RcBox`.\n+            let rcbox_ptr = mem::transmute([ptr as usize, value.len()]);\n+            Rc { ptr: Shared::new(rcbox_ptr) }\n+        }\n+    }\n+}\n+\n impl<T: ?Sized> Rc<T> {\n     /// Creates a new [`Weak`][weak] pointer to this value.\n     ///"}]}