{"sha": "4e282795d7d1d28a4c6c1c6521045ae2b59f3519", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMjgyNzk1ZDdkMWQyOGE0YzZjMWM2NTIxMDQ1YWUyYjU5ZjM1MTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-31T20:20:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-31T20:20:18Z"}, "message": "Auto merge of #87662 - FabianWolff:rb-string, r=estebank\n\nSuggest `br` if the unknown string prefix `rb` is found\n\nCurrently, for the following code:\n```rust\nfn main() {\n    rb\"abc\";\n}\n```\nwe issue the following suggestion:\n```\nhelp: consider inserting whitespace here\n  |\n2 |     rb \"abc\";\n  |       --\n```\nWith my changes (only in edition 2021, where unknown prefixes became an error), I get:\n```\nhelp: use `br` for a raw byte string\n  |\n2 |     br\"abc\";\n  |     ^^\n```", "tree": {"sha": "625f5df40df90d05555981d53fc0f6345700f56e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/625f5df40df90d05555981d53fc0f6345700f56e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e282795d7d1d28a4c6c1c6521045ae2b59f3519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e282795d7d1d28a4c6c1c6521045ae2b59f3519", "html_url": "https://github.com/rust-lang/rust/commit/4e282795d7d1d28a4c6c1c6521045ae2b59f3519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e282795d7d1d28a4c6c1c6521045ae2b59f3519/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29f8de06d18cf197fbd229accdce82da62ba22e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/29f8de06d18cf197fbd229accdce82da62ba22e9", "html_url": "https://github.com/rust-lang/rust/commit/29f8de06d18cf197fbd229accdce82da62ba22e9"}, {"sha": "f2c9654dcd53184eb5b585f117e856b87f9404c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c9654dcd53184eb5b585f117e856b87f9404c1", "html_url": "https://github.com/rust-lang/rust/commit/f2c9654dcd53184eb5b585f117e856b87f9404c1"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "1e65cc27154a818bd19889f40810dbef788acecc", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4e282795d7d1d28a4c6c1c6521045ae2b59f3519/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e282795d7d1d28a4c6c1c6521045ae2b59f3519/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=4e282795d7d1d28a4c6c1c6521045ae2b59f3519", "patch": "@@ -505,20 +505,28 @@ impl<'a> StringReader<'a> {\n     // identifier tokens.\n     fn report_unknown_prefix(&self, start: BytePos) {\n         let prefix_span = self.mk_sp(start, self.pos);\n-        let msg = format!(\"prefix `{}` is unknown\", self.str_from_to(start, self.pos));\n+        let prefix_str = self.str_from_to(start, self.pos);\n+        let msg = format!(\"prefix `{}` is unknown\", prefix_str);\n \n         let expn_data = prefix_span.ctxt().outer_expn_data();\n \n         if expn_data.edition >= Edition::Edition2021 {\n             // In Rust 2021, this is a hard error.\n             let mut err = self.sess.span_diagnostic.struct_span_err(prefix_span, &msg);\n             err.span_label(prefix_span, \"unknown prefix\");\n-            if expn_data.is_root() {\n+            if prefix_str == \"rb\" {\n+                err.span_suggestion_verbose(\n+                    prefix_span,\n+                    \"use `br` for a raw byte string\",\n+                    \"br\".to_string(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+            } else if expn_data.is_root() {\n                 err.span_suggestion_verbose(\n                     prefix_span.shrink_to_hi(),\n                     \"consider inserting whitespace here\",\n                     \" \".into(),\n-                    Applicability::MachineApplicable,\n+                    Applicability::MaybeIncorrect,\n                 );\n             }\n             err.note(\"prefixed identifiers and literals are reserved since Rust 2021\");"}, {"sha": "576561c315ce91c97203b7a1587f6d1dd6949bc5", "filename": "src/test/ui/suggestions/raw-byte-string-prefix.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4e282795d7d1d28a4c6c1c6521045ae2b59f3519/src%2Ftest%2Fui%2Fsuggestions%2Fraw-byte-string-prefix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e282795d7d1d28a4c6c1c6521045ae2b59f3519/src%2Ftest%2Fui%2Fsuggestions%2Fraw-byte-string-prefix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fraw-byte-string-prefix.rs?ref=4e282795d7d1d28a4c6c1c6521045ae2b59f3519", "patch": "@@ -0,0 +1,10 @@\n+// `br` and `rb` are easy to confuse; check that we issue a suggestion to help.\n+\n+// edition:2021\n+\n+fn main() {\n+    rb\"abc\";\n+    //~^ ERROR: prefix `rb` is unknown\n+    //~| HELP: use `br` for a raw byte string\n+    //~| ERROR: expected one of\n+}"}, {"sha": "1498f5ac93513c243bdfc9cb7fa94273918363fd", "filename": "src/test/ui/suggestions/raw-byte-string-prefix.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4e282795d7d1d28a4c6c1c6521045ae2b59f3519/src%2Ftest%2Fui%2Fsuggestions%2Fraw-byte-string-prefix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e282795d7d1d28a4c6c1c6521045ae2b59f3519/src%2Ftest%2Fui%2Fsuggestions%2Fraw-byte-string-prefix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fraw-byte-string-prefix.stderr?ref=4e282795d7d1d28a4c6c1c6521045ae2b59f3519", "patch": "@@ -0,0 +1,20 @@\n+error: prefix `rb` is unknown\n+  --> $DIR/raw-byte-string-prefix.rs:6:5\n+   |\n+LL |     rb\"abc\";\n+   |     ^^ unknown prefix\n+   |\n+   = note: prefixed identifiers and literals are reserved since Rust 2021\n+help: use `br` for a raw byte string\n+   |\n+LL |     br\"abc\";\n+   |     ^^\n+\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `\"abc\"`\n+  --> $DIR/raw-byte-string-prefix.rs:6:7\n+   |\n+LL |     rb\"abc\";\n+   |       ^^^^^ expected one of 8 possible tokens\n+\n+error: aborting due to 2 previous errors\n+"}]}