{"sha": "3ea96b86ab8f2afec172bc7452876540388e4df9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYTk2Yjg2YWI4ZjJhZmVjMTcyYmM3NDUyODc2NTQwMzg4ZTRkZjk=", "commit": {"author": {"name": "Jake Vossen", "email": "jake@vossen.dev", "date": "2020-10-02T21:08:01Z"}, "committer": {"name": "Jake Vossen", "email": "jake@vossen.dev", "date": "2020-10-02T21:08:01Z"}, "message": "made multiline macro calls into single line", "tree": {"sha": "971e218a0d59b3bc953004e9509e6c6000fd1fbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/971e218a0d59b3bc953004e9509e6c6000fd1fbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ea96b86ab8f2afec172bc7452876540388e4df9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea96b86ab8f2afec172bc7452876540388e4df9", "html_url": "https://github.com/rust-lang/rust/commit/3ea96b86ab8f2afec172bc7452876540388e4df9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ea96b86ab8f2afec172bc7452876540388e4df9/comments", "author": {"login": "jakevossen5", "id": 16298666, "node_id": "MDQ6VXNlcjE2Mjk4NjY2", "avatar_url": "https://avatars.githubusercontent.com/u/16298666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakevossen5", "html_url": "https://github.com/jakevossen5", "followers_url": "https://api.github.com/users/jakevossen5/followers", "following_url": "https://api.github.com/users/jakevossen5/following{/other_user}", "gists_url": "https://api.github.com/users/jakevossen5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakevossen5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakevossen5/subscriptions", "organizations_url": "https://api.github.com/users/jakevossen5/orgs", "repos_url": "https://api.github.com/users/jakevossen5/repos", "events_url": "https://api.github.com/users/jakevossen5/events{/privacy}", "received_events_url": "https://api.github.com/users/jakevossen5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakevossen5", "id": 16298666, "node_id": "MDQ6VXNlcjE2Mjk4NjY2", "avatar_url": "https://avatars.githubusercontent.com/u/16298666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakevossen5", "html_url": "https://github.com/jakevossen5", "followers_url": "https://api.github.com/users/jakevossen5/followers", "following_url": "https://api.github.com/users/jakevossen5/following{/other_user}", "gists_url": "https://api.github.com/users/jakevossen5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakevossen5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakevossen5/subscriptions", "organizations_url": "https://api.github.com/users/jakevossen5/orgs", "repos_url": "https://api.github.com/users/jakevossen5/repos", "events_url": "https://api.github.com/users/jakevossen5/events{/privacy}", "received_events_url": "https://api.github.com/users/jakevossen5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dffb9d6a26a29ea4cbad7df2371e004e7ae20269", "url": "https://api.github.com/repos/rust-lang/rust/commits/dffb9d6a26a29ea4cbad7df2371e004e7ae20269", "html_url": "https://github.com/rust-lang/rust/commit/dffb9d6a26a29ea4cbad7df2371e004e7ae20269"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "c95316c96abc4ca60d5b9783e53901cacf825464", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3ea96b86ab8f2afec172bc7452876540388e4df9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea96b86ab8f2afec172bc7452876540388e4df9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=3ea96b86ab8f2afec172bc7452876540388e4df9", "patch": "@@ -530,7 +530,7 @@ pub trait PrettyPrinter<'tcx>:\n             ty::Ref(r, ty, mutbl) => {\n                 p!(\"&\");\n                 if self.region_should_not_be_omitted(r) {\n-                    p!(print(r), write(\" \"));\n+                    p!(print(r), \" \");\n                 }\n                 p!(print(ty::TypeAndMut { ty, mutbl }))\n             }\n@@ -2064,31 +2064,19 @@ define_print_and_forward_display! {\n             ty::PredicateAtom::Projection(predicate) => p!(print(predicate)),\n             ty::PredicateAtom::WellFormed(arg) => p!(print(arg), \" well-formed\"),\n             ty::PredicateAtom::ObjectSafe(trait_def_id) => {\n-                p!(\"the trait `\",\n-                print_def_path(trait_def_id, &[]),\n-                \"` is object-safe\")\n+                p!(\"the trait `\", print_def_path(trait_def_id, &[]), \"` is object-safe\")\n             }\n             ty::PredicateAtom::ClosureKind(closure_def_id, _closure_substs, kind) => {\n-                p!(\"the closure `\",\n-                print_value_path(closure_def_id, &[]),\n-                write(\"` implements the trait `{}`\", kind))\n+                p!(\"the closure `\", print_value_path(closure_def_id, &[]), write(\"` implements the trait `{}`\", kind))\n             }\n             ty::PredicateAtom::ConstEvaluatable(def, substs) => {\n-                p!(\"the constant `\",\n-                print_value_path(def.did, substs),\n-                \"` can be evaluated\")\n+                p!(\"the constant `\", print_value_path(def.did, substs), \"` can be evaluated\")\n             }\n             ty::PredicateAtom::ConstEquate(c1, c2) => {\n-                p!(\"the constant `\",\n-                print(c1),\n-                \"` equals `\",\n-                print(c2),\n-                \"`\")\n+                p!(\"the constant `\", print(c1), \"` equals `\", print(c2), \"`\")\n             }\n             ty::PredicateAtom::TypeWellFormedFromEnv(ty) => {\n-                p!(\"the type `\",\n-                print(ty),\n-                \"` is found in the environment\")\n+                p!(\"the type `\", print(ty), \"` is found in the environment\")\n             }\n         }\n     }"}]}