{"sha": "e8afb62c71f5c789c554e23c835efc019cb42685", "node_id": "C_kwDOAAsO6NoAKGU4YWZiNjJjNzFmNWM3ODljNTU0ZTIzYzgzNWVmYzAxOWNiNDI2ODU", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2021-12-27T23:42:48Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-12-28T00:16:04Z"}, "message": "chore: reduce some vis. for updated unreachable_pub lint", "tree": {"sha": "d6c5b9b682c7d0ebd1c57a7050868e14e60b32d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6c5b9b682c7d0ebd1c57a7050868e14e60b32d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8afb62c71f5c789c554e23c835efc019cb42685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8afb62c71f5c789c554e23c835efc019cb42685", "html_url": "https://github.com/rust-lang/rust/commit/e8afb62c71f5c789c554e23c835efc019cb42685", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8afb62c71f5c789c554e23c835efc019cb42685/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76eb077fb298a01137c878a9f10854b44c5edf37", "url": "https://api.github.com/repos/rust-lang/rust/commits/76eb077fb298a01137c878a9f10854b44c5edf37", "html_url": "https://github.com/rust-lang/rust/commit/76eb077fb298a01137c878a9f10854b44c5edf37"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "7b498dc46b320cd1444274cf17921fd5394326a9", "filename": "src/config/file_lines.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e8afb62c71f5c789c554e23c835efc019cb42685/src%2Fconfig%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8afb62c71f5c789c554e23c835efc019cb42685/src%2Fconfig%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Ffile_lines.rs?ref=e8afb62c71f5c789c554e23c835efc019cb42685", "patch": "@@ -13,9 +13,9 @@ use thiserror::Error;\n \n /// A range of lines in a file, inclusive of both ends.\n pub struct LineRange {\n-    pub file: Lrc<SourceFile>,\n-    pub lo: usize,\n-    pub hi: usize,\n+    pub(crate) file: Lrc<SourceFile>,\n+    pub(crate) lo: usize,\n+    pub(crate) hi: usize,\n }\n \n /// Defines the name of an input - either a file or stdin.\n@@ -75,7 +75,7 @@ impl Serialize for FileName {\n }\n \n impl LineRange {\n-    pub fn file_name(&self) -> FileName {\n+    pub(crate) fn file_name(&self) -> FileName {\n         self.file.name.clone().into()\n     }\n }"}, {"sha": "d857c29be29c631bb42d3fd0c4439f8ae6fedaf9", "filename": "src/config/options.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e8afb62c71f5c789c554e23c835efc019cb42685/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8afb62c71f5c789c554e23c835efc019cb42685/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=e8afb62c71f5c789c554e23c835efc019cb42685", "patch": "@@ -218,24 +218,24 @@ pub enum Verbosity {\n pub struct WidthHeuristics {\n     // Maximum width of the args of a function call before falling back\n     // to vertical formatting.\n-    pub fn_call_width: usize,\n+    pub(crate) fn_call_width: usize,\n     // Maximum width of the args of a function-like attributes before falling\n     // back to vertical formatting.\n-    pub attr_fn_like_width: usize,\n+    pub(crate) attr_fn_like_width: usize,\n     // Maximum width in the body of a struct lit before falling back to\n     // vertical formatting.\n-    pub struct_lit_width: usize,\n+    pub(crate) struct_lit_width: usize,\n     // Maximum width in the body of a struct variant before falling back\n     // to vertical formatting.\n-    pub struct_variant_width: usize,\n+    pub(crate) struct_variant_width: usize,\n     // Maximum width of an array literal before falling back to vertical\n     // formatting.\n-    pub array_width: usize,\n+    pub(crate) array_width: usize,\n     // Maximum length of a chain to fit on a single line.\n-    pub chain_width: usize,\n+    pub(crate) chain_width: usize,\n     // Maximum line length for single line if-else expressions. A value\n     // of zero means always break if-else expressions.\n-    pub single_line_if_else_max_width: usize,\n+    pub(crate) single_line_if_else_max_width: usize,\n }\n \n impl fmt::Display for WidthHeuristics {"}, {"sha": "1724a0f87bf7c48ffa114bcc77bf52b32e0dc20e", "filename": "src/rustfmt_diff.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e8afb62c71f5c789c554e23c835efc019cb42685/src%2Frustfmt_diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8afb62c71f5c789c554e23c835efc019cb42685/src%2Frustfmt_diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustfmt_diff.rs?ref=e8afb62c71f5c789c554e23c835efc019cb42685", "patch": "@@ -6,20 +6,20 @@ use std::io::Write;\n use crate::config::{Color, Config, Verbosity};\n \n #[derive(Debug, PartialEq)]\n-pub enum DiffLine {\n+pub(crate) enum DiffLine {\n     Context(String),\n     Expected(String),\n     Resulting(String),\n }\n \n #[derive(Debug, PartialEq)]\n-pub struct Mismatch {\n+pub(crate) struct Mismatch {\n     /// The line number in the formatted version.\n-    pub line_number: u32,\n+    pub(crate) line_number: u32,\n     /// The line number in the original version.\n-    pub line_number_orig: u32,\n+    pub(crate) line_number_orig: u32,\n     /// The set of lines (context and old/new) in the mismatch.\n-    pub lines: Vec<DiffLine>,\n+    pub(crate) lines: Vec<DiffLine>,\n }\n \n impl Mismatch {"}]}