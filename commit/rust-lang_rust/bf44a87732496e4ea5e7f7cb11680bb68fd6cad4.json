{"sha": "bf44a87732496e4ea5e7f7cb11680bb68fd6cad4", "node_id": "C_kwDOAAsO6NoAKGJmNDRhODc3MzI0OTZlNGVhNWU3ZjdjYjExNjgwYmI2OGZkNmNhZDQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-05T07:33:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-05T07:33:24Z"}, "message": "Rollup merge of #95645 - GuillaumeGomez:intra-doc-link-ice-traits-in-scope-primitive, r=jyn514\n\nFix intra doc link ICE when trying to get traits in scope for primitive\n\nFixes #95633.\n\nI think ``@notriddle`` was the one who worked on this part of the code last so:\n\nr? ``@notriddle``", "tree": {"sha": "a8e3276b6c7928babd414057b34015a8a310c6d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e3276b6c7928babd414057b34015a8a310c6d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiS/DECRBK7hj4Ov3rIwAAMxwIADPD4S9Emg5dyc1Xp/1+6h+U\nAmOq3RZXafVcRhRLNxfMjcIhBPaazXngb0qosbqa6/4u00bHFp1Wq0Ay4MDlsp0q\nCTLifiI7EPfsdMYmWohMuGafZv5A7k8iJ1ICMrP7I2THtkkp8GGd9Q7/rl7BbTwj\nuungx2A9HQLY84BxikpxyT3Vqla/zEybqhuqO/0Ajre/L1pXmINxogq2T/B7zI5v\n3mHWT9kgimKkLYTLB+9cGszpzlML1e1dDjPz3bLQV7hliSBJufX/BfPLq9j8MwMw\nlsPyGVZCtZYM4JadfFmF2H0CLd0ZGLtJxEzPWlVECrGYsyhsrWpRgmIwnPPNido=\n=GnOq\n-----END PGP SIGNATURE-----\n", "payload": "tree a8e3276b6c7928babd414057b34015a8a310c6d5\nparent 2a7e7bd0e0a2686429267d529d02f0df8129626c\nparent 50cc0fa8abd0279608ce3434a5a3fe34dee62a70\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649144004 +0200\ncommitter GitHub <noreply@github.com> 1649144004 +0200\n\nRollup merge of #95645 - GuillaumeGomez:intra-doc-link-ice-traits-in-scope-primitive, r=jyn514\n\nFix intra doc link ICE when trying to get traits in scope for primitive\n\nFixes #95633.\n\nI think ``@notriddle`` was the one who worked on this part of the code last so:\n\nr? ``@notriddle``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4", "html_url": "https://github.com/rust-lang/rust/commit/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a7e7bd0e0a2686429267d529d02f0df8129626c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7e7bd0e0a2686429267d529d02f0df8129626c", "html_url": "https://github.com/rust-lang/rust/commit/2a7e7bd0e0a2686429267d529d02f0df8129626c"}, {"sha": "50cc0fa8abd0279608ce3434a5a3fe34dee62a70", "url": "https://api.github.com/repos/rust-lang/rust/commits/50cc0fa8abd0279608ce3434a5a3fe34dee62a70", "html_url": "https://github.com/rust-lang/rust/commit/50cc0fa8abd0279608ce3434a5a3fe34dee62a70"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "1d7a790bdb786e5fc30017f4c4bdb21d4661d053", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=bf44a87732496e4ea5e7f7cb11680bb68fd6cad4", "patch": "@@ -771,6 +771,7 @@ fn main_options(options: config::Options) -> MainResult {\n     let externs = options.externs.clone();\n     let render_options = options.render_options.clone();\n     let scrape_examples_options = options.scrape_examples_options.clone();\n+    let document_private = options.render_options.document_private;\n     let config = core::create_config(options);\n \n     interface::create_compiler_and_run(config, |compiler| {\n@@ -791,7 +792,12 @@ fn main_options(options: config::Options) -> MainResult {\n             let (resolver, resolver_caches) = {\n                 let (krate, resolver, _) = &*abort_on_err(queries.expansion(), sess).peek();\n                 let resolver_caches = resolver.borrow_mut().access(|resolver| {\n-                    collect_intra_doc_links::early_resolve_intra_doc_links(resolver, krate, externs)\n+                    collect_intra_doc_links::early_resolve_intra_doc_links(\n+                        resolver,\n+                        krate,\n+                        externs,\n+                        document_private,\n+                    )\n                 });\n                 (resolver.clone(), resolver_caches)\n             };"}, {"sha": "44bf86b082ad1d4379e3464d762be03e5c3c7de6", "filename": "src/librustdoc/passes/collect_intra_doc_links/early.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs?ref=bf44a87732496e4ea5e7f7cb11680bb68fd6cad4", "patch": "@@ -22,6 +22,7 @@ crate fn early_resolve_intra_doc_links(\n     resolver: &mut Resolver<'_>,\n     krate: &ast::Crate,\n     externs: Externs,\n+    document_private_items: bool,\n ) -> ResolverCaches {\n     let mut loader = IntraLinkCrateLoader {\n         resolver,\n@@ -30,6 +31,7 @@ crate fn early_resolve_intra_doc_links(\n         traits_in_scope: Default::default(),\n         all_traits: Default::default(),\n         all_trait_impls: Default::default(),\n+        document_private_items,\n     };\n \n     // Overridden `visit_item` below doesn't apply to the crate root,\n@@ -61,6 +63,7 @@ struct IntraLinkCrateLoader<'r, 'ra> {\n     traits_in_scope: DefIdMap<Vec<TraitCandidate>>,\n     all_traits: Vec<DefId>,\n     all_trait_impls: Vec<DefId>,\n+    document_private_items: bool,\n }\n \n impl IntraLinkCrateLoader<'_, '_> {\n@@ -167,7 +170,7 @@ impl IntraLinkCrateLoader<'_, '_> {\n         }\n \n         for child in self.resolver.module_children_or_reexports(module_id) {\n-            if child.vis == Visibility::Public {\n+            if child.vis == Visibility::Public || self.document_private_items {\n                 if let Some(def_id) = child.res.opt_def_id() {\n                     self.add_traits_in_parent_scope(def_id);\n                 }"}, {"sha": "a71d0a03731872e4d31eaa427287bcdbbd26493a", "filename": "src/test/rustdoc/issue-95633.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4/src%2Ftest%2Frustdoc%2Fissue-95633.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf44a87732496e4ea5e7f7cb11680bb68fd6cad4/src%2Ftest%2Frustdoc%2Fissue-95633.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-95633.rs?ref=bf44a87732496e4ea5e7f7cb11680bb68fd6cad4", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags: --document-private-items\n+\n+// This ensures that no ICE is triggered when rustdoc is run on this code.\n+\n+mod stdlib {\n+    pub (crate) use std::i8;\n+}"}]}