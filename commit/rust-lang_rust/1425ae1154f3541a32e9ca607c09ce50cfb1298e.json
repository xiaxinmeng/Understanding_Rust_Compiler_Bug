{"sha": "1425ae1154f3541a32e9ca607c09ce50cfb1298e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MjVhZTExNTRmMzU0MWEzMmU5Y2E2MDdjMDljZTUwY2ZiMTI5OGU=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-18T15:47:51Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-18T15:49:29Z"}, "message": "Tweak diagnostics code", "tree": {"sha": "6f316b806e2889aaf7b4d050abae53badc9bdffd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f316b806e2889aaf7b4d050abae53badc9bdffd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1425ae1154f3541a32e9ca607c09ce50cfb1298e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1425ae1154f3541a32e9ca607c09ce50cfb1298e", "html_url": "https://github.com/rust-lang/rust/commit/1425ae1154f3541a32e9ca607c09ce50cfb1298e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1425ae1154f3541a32e9ca607c09ce50cfb1298e/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2079ae3a52db9c3f2022892b8473e6eb1e0f1656", "url": "https://api.github.com/repos/rust-lang/rust/commits/2079ae3a52db9c3f2022892b8473e6eb1e0f1656", "html_url": "https://github.com/rust-lang/rust/commit/2079ae3a52db9c3f2022892b8473e6eb1e0f1656"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "5e7a7f01e7a328087e7d47f87b42b75369e2324b", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1425ae1154f3541a32e9ca607c09ce50cfb1298e/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1425ae1154f3541a32e9ca607c09ce50cfb1298e/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=1425ae1154f3541a32e9ca607c09ce50cfb1298e", "patch": "@@ -969,19 +969,21 @@ impl<'tcx> Constructor<'tcx> {\n                 }\n                 VarLen(prefix, _) => {\n                     let mut prefix: Vec<_> = subpatterns.by_ref().take(prefix as usize).collect();\n-                    let mut suffix: Vec<_> = subpatterns.collect();\n                     if slice.array_len.is_some() {\n                         // Improves diagnostics a bit: if the type is a known-size array, instead\n                         // of reporting `[x, _, .., _, y]`, we prefer to report `[x, .., y]`.\n                         // This is incorrect if the size is not known, since `[_, ..]` captures\n                         // arrays of lengths `>= 1` whereas `[..]` captures any length.\n-                        while !suffix.is_empty() && suffix.first().unwrap().is_wildcard() {\n-                            suffix.remove(0);\n-                        }\n                         while !prefix.is_empty() && prefix.last().unwrap().is_wildcard() {\n                             prefix.pop();\n                         }\n                     }\n+                    let suffix: Vec<_> = if slice.array_len.is_some() {\n+                        // Same as above.\n+                        subpatterns.skip_while(Pat::is_wildcard).collect()\n+                    } else {\n+                        subpatterns.collect()\n+                    };\n                     let wild = Pat::wildcard_from_ty(ty);\n                     PatKind::Slice { prefix, slice: Some(wild), suffix }\n                 }"}]}