{"sha": "b7095f55721645cbc73027792c00844734f0f2a3", "node_id": "C_kwDOAAsO6NoAKGI3MDk1ZjU1NzIxNjQ1Y2JjNzMwMjc3OTJjMDA4NDQ3MzRmMGYyYTM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-23T17:57:08Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-06T20:15:49Z"}, "message": "Don't ICE on unsized rust-call abi call", "tree": {"sha": "3f45f877795d73c74765a78add4c72878e041ff7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f45f877795d73c74765a78add4c72878e041ff7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7095f55721645cbc73027792c00844734f0f2a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7095f55721645cbc73027792c00844734f0f2a3", "html_url": "https://github.com/rust-lang/rust/commit/b7095f55721645cbc73027792c00844734f0f2a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7095f55721645cbc73027792c00844734f0f2a3/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3572d7451d1062e8bccf310af6bbf6255091d296", "url": "https://api.github.com/repos/rust-lang/rust/commits/3572d7451d1062e8bccf310af6bbf6255091d296", "html_url": "https://github.com/rust-lang/rust/commit/3572d7451d1062e8bccf310af6bbf6255091d296"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "f489a1fb3e501903c30dde7d9890b0e6530448d5", "filename": "compiler/rustc_hir_analysis/src/check/wfcheck.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7095f55721645cbc73027792c00844734f0f2a3/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7095f55721645cbc73027792c00844734f0f2a3/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=b7095f55721645cbc73027792c00844734f0f2a3", "patch": "@@ -1449,14 +1449,20 @@ fn check_fn_or_method<'tcx>(\n         let span = tcx.def_span(def_id);\n         let has_implicit_self = hir_decl.implicit_self != hir::ImplicitSelfKind::None;\n         let mut inputs = sig.inputs().iter().skip(if has_implicit_self { 1 } else { 0 });\n-        // Check that the argument is a tuple\n+        // Check that the argument is a tuple and is sized\n         if let Some(ty) = inputs.next() {\n             wfcx.register_bound(\n                 ObligationCause::new(span, wfcx.body_def_id, ObligationCauseCode::RustCall),\n                 wfcx.param_env,\n                 *ty,\n                 tcx.require_lang_item(hir::LangItem::Tuple, Some(span)),\n             );\n+            wfcx.register_bound(\n+                ObligationCause::new(span, wfcx.body_def_id, ObligationCauseCode::RustCall),\n+                wfcx.param_env,\n+                *ty,\n+                tcx.require_lang_item(hir::LangItem::Sized, Some(span)),\n+            );\n         } else {\n             tcx.sess.span_err(\n                 hir_decl.inputs.last().map_or(span, |input| input.span),"}, {"sha": "9da72aae77660d10c6dde008c08efa62f8d69256", "filename": "compiler/rustc_hir_typeck/src/callee.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7095f55721645cbc73027792c00844734f0f2a3/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7095f55721645cbc73027792c00844734f0f2a3/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs?ref=b7095f55721645cbc73027792c00844734f0f2a3", "patch": "@@ -470,6 +470,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     self.tcx.require_lang_item(hir::LangItem::Tuple, Some(sp)),\n                     traits::ObligationCause::new(sp, self.body_id, traits::RustCall),\n                 );\n+                self.require_type_is_sized(ty, sp, traits::RustCall);\n             } else {\n                 self.tcx.sess.span_err(\n                         sp,"}, {"sha": "ff4075aa4c03cc329ffbebac93bed36d877d02c7", "filename": "tests/ui/unsized-locals/rust-call.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7095f55721645cbc73027792c00844734f0f2a3/tests%2Fui%2Funsized-locals%2Frust-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7095f55721645cbc73027792c00844734f0f2a3/tests%2Fui%2Funsized-locals%2Frust-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsized-locals%2Frust-call.rs?ref=b7095f55721645cbc73027792c00844734f0f2a3", "patch": "@@ -0,0 +1,12 @@\n+#![feature(unsized_tuple_coercion)]\n+#![feature(unboxed_closures)]\n+#![feature(unsized_fn_params)]\n+\n+fn bad() -> extern \"rust-call\" fn(([u8],)) { todo!() }\n+\n+fn main() {\n+    let f = bad();\n+    let slice: Box<([u8],)> = Box::new(([1; 8],));\n+    f(*slice);\n+    //~^ ERROR the size for values of type `[u8]` cannot be known at compilation time\n+}"}, {"sha": "7cc021f5741db891ddab9544803241d65508a815", "filename": "tests/ui/unsized-locals/rust-call.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7095f55721645cbc73027792c00844734f0f2a3/tests%2Fui%2Funsized-locals%2Frust-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7095f55721645cbc73027792c00844734f0f2a3/tests%2Fui%2Funsized-locals%2Frust-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsized-locals%2Frust-call.stderr?ref=b7095f55721645cbc73027792c00844734f0f2a3", "patch": "@@ -0,0 +1,12 @@\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/rust-call.rs:10:7\n+   |\n+LL |     f(*slice);\n+   |       ^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: within `([u8],)`, the trait `Sized` is not implemented for `[u8]`\n+   = note: required because it appears within the type `([u8],)`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}