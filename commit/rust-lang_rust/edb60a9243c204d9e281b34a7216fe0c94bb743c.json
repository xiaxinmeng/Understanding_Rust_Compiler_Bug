{"sha": "edb60a9243c204d9e281b34a7216fe0c94bb743c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYjYwYTkyNDNjMjA0ZDllMjgxYjM0YTcyMTZmZTBjOTRiYjc0M2M=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T23:53:38Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T23:53:38Z"}, "message": "Remove unnecessary item_name parameter to `mod_item_in`", "tree": {"sha": "eefd3e368d04a57192878b87ffdece245e6082c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eefd3e368d04a57192878b87ffdece245e6082c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edb60a9243c204d9e281b34a7216fe0c94bb743c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edb60a9243c204d9e281b34a7216fe0c94bb743c", "html_url": "https://github.com/rust-lang/rust/commit/edb60a9243c204d9e281b34a7216fe0c94bb743c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edb60a9243c204d9e281b34a7216fe0c94bb743c/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f6d540440fea578d760eb47158d1e0a9de5eb19", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f6d540440fea578d760eb47158d1e0a9de5eb19", "html_url": "https://github.com/rust-lang/rust/commit/7f6d540440fea578d760eb47158d1e0a9de5eb19"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "b8ef3384c59083aa54b58222555a39b1bbd71e27", "filename": "src/librustdoc/formats/renderer.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/edb60a9243c204d9e281b34a7216fe0c94bb743c/src%2Flibrustdoc%2Fformats%2Frenderer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb60a9243c204d9e281b34a7216fe0c94bb743c/src%2Flibrustdoc%2Fformats%2Frenderer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Frenderer.rs?ref=edb60a9243c204d9e281b34a7216fe0c94bb743c", "patch": "@@ -34,7 +34,7 @@ crate trait FormatRenderer<'tcx>: Sized {\n     fn item(&mut self, item: clean::Item) -> Result<(), Error>;\n \n     /// Renders a module (should not handle recursing into children).\n-    fn mod_item_in(&mut self, item: &clean::Item, item_name: &str) -> Result<(), Error>;\n+    fn mod_item_in(&mut self, item: &clean::Item) -> Result<(), Error>;\n \n     /// Runs after recursively rendering all sub-items of a module.\n     fn mod_item_out(&mut self) -> Result<(), Error> {\n@@ -73,13 +73,10 @@ crate fn run_format<'tcx, T: FormatRenderer<'tcx>>(\n         if item.is_mod() && T::RUN_ON_MODULE {\n             // modules are special because they add a namespace. We also need to\n             // recurse into the items of the module as well.\n-            let name = item.name.as_ref().unwrap().to_string();\n-            if name.is_empty() {\n-                panic!(\"Unexpected module with empty name\");\n-            }\n-            let _timer = prof.generic_activity_with_arg(\"render_mod_item\", name.as_str());\n+            let _timer =\n+                prof.generic_activity_with_arg(\"render_mod_item\", item.name.unwrap().to_string());\n \n-            cx.mod_item_in(&item, &name)?;\n+            cx.mod_item_in(&item)?;\n             let module = match *item.kind {\n                 clean::StrippedItem(box clean::ModuleItem(m)) | clean::ModuleItem(m) => m,\n                 _ => unreachable!(),"}, {"sha": "9cffcef9749f8a25a735189b9c6d2650e9a74038", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/edb60a9243c204d9e281b34a7216fe0c94bb743c/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb60a9243c204d9e281b34a7216fe0c94bb743c/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=edb60a9243c204d9e281b34a7216fe0c94bb743c", "patch": "@@ -578,7 +578,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         }\n     }\n \n-    fn mod_item_in(&mut self, item: &clean::Item, item_name: &str) -> Result<(), Error> {\n+    fn mod_item_in(&mut self, item: &clean::Item) -> Result<(), Error> {\n         // Stripped modules survive the rustdoc passes (i.e., `strip-private`)\n         // if they contain impls for public types. These modules can also\n         // contain items such as publicly re-exported structures.\n@@ -590,8 +590,9 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             self.render_redirect_pages = item.is_stripped();\n         }\n         let scx = &self.shared;\n-        self.dst.push(item_name);\n-        self.current.push(item_name.to_owned());\n+        let item_name = item.name.as_ref().unwrap().to_string();\n+        self.dst.push(&item_name);\n+        self.current.push(item_name);\n \n         info!(\"Recursing into {}\", self.dst.display());\n "}, {"sha": "b048e7f919fa4a0f07ad7a528aafe44c6ec407f9", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edb60a9243c204d9e281b34a7216fe0c94bb743c/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb60a9243c204d9e281b34a7216fe0c94bb743c/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=edb60a9243c204d9e281b34a7216fe0c94bb743c", "patch": "@@ -181,7 +181,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         Ok(())\n     }\n \n-    fn mod_item_in(&mut self, item: &clean::Item, _module_name: &str) -> Result<(), Error> {\n+    fn mod_item_in(&mut self, item: &clean::Item) -> Result<(), Error> {\n         use clean::types::ItemKind::*;\n         if let ModuleItem(m) = &*item.kind {\n             for item in &m.items {"}]}