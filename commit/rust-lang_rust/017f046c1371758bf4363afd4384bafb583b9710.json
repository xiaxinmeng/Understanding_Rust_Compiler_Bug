{"sha": "017f046c1371758bf4363afd4384bafb583b9710", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxN2YwNDZjMTM3MTc1OGJmNDM2M2FmZDQzODRiYWZiNTgzYjk3MTA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-12T09:54:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-12T09:54:54Z"}, "message": "Rollup merge of #57042 - pnkfelix:issue-57038-sidestep-ice-in-fieldplacement-count, r=michaelwoerister\n\nDon't call `FieldPlacement::count` when count is too large\n\nSidestep ICE in `FieldPlacement::count` by not calling it when count will not fit in host's usize.\n\n(I briefly played with trying to fix this by changing `FieldPlacement::count` to return a `u64`. However, based on how `FieldPlacement` is used, it seems like this would be a largely pointless pursuit... I'm open to counter-arguments, however.)\n\nFix #57038", "tree": {"sha": "99d397e6d2a1f139466af80e08c2940e43c70c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99d397e6d2a1f139466af80e08c2940e43c70c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/017f046c1371758bf4363afd4384bafb583b9710", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcObluCRBK7hj4Ov3rIwAAdHIIAFMOj+/4F1r+bjyZdkbKNq8T\nObLQZo/WpQl/HofHg6Rz69pztGd9+2SrKglJU8/QPP+d6mH5z9E5M51gcVdaonAJ\nskhDCkhAXmVslghxhlTd12xC7VeFEjRGR1OSABfXwdfeagOMuK8JQFBSGrbxL8LK\nJMsg+VNPp8o9wa9fwWv6oKq451CIpAGu2bHpCwMBGntxw9TObq+S47VOqkv6E27m\n2iLWsaivfvDjVV6bvw7f8pdLRHH3tjlmbs6ZiI0CoPeYJofrhs75lxiCF856qvEj\nz3cmQcXGVWYeI81GnRwXXDWeNYnrL3nEeRSQNvfI4yAKASanj9XiDq+W+C04fjo=\n=cBQ8\n-----END PGP SIGNATURE-----\n", "payload": "tree 99d397e6d2a1f139466af80e08c2940e43c70c61\nparent 53aa8a1ad0fe12594347d68ee7f7c12e7c1a1937\nparent 0eacf2cb240606343284a2d38b0f54b6028b134d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547286894 +0100\ncommitter GitHub <noreply@github.com> 1547286894 +0100\n\nRollup merge of #57042 - pnkfelix:issue-57038-sidestep-ice-in-fieldplacement-count, r=michaelwoerister\n\nDon't call `FieldPlacement::count` when count is too large\n\nSidestep ICE in `FieldPlacement::count` by not calling it when count will not fit in host's usize.\n\n(I briefly played with trying to fix this by changing `FieldPlacement::count` to return a `u64`. However, based on how `FieldPlacement` is used, it seems like this would be a largely pointless pursuit... I'm open to counter-arguments, however.)\n\nFix #57038\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/017f046c1371758bf4363afd4384bafb583b9710", "html_url": "https://github.com/rust-lang/rust/commit/017f046c1371758bf4363afd4384bafb583b9710", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/017f046c1371758bf4363afd4384bafb583b9710/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53aa8a1ad0fe12594347d68ee7f7c12e7c1a1937", "url": "https://api.github.com/repos/rust-lang/rust/commits/53aa8a1ad0fe12594347d68ee7f7c12e7c1a1937", "html_url": "https://github.com/rust-lang/rust/commit/53aa8a1ad0fe12594347d68ee7f7c12e7c1a1937"}, {"sha": "0eacf2cb240606343284a2d38b0f54b6028b134d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eacf2cb240606343284a2d38b0f54b6028b134d", "html_url": "https://github.com/rust-lang/rust/commit/0eacf2cb240606343284a2d38b0f54b6028b134d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "1162bff852cbba232b33eb90b188b5c45bfd3e17", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/017f046c1371758bf4363afd4384bafb583b9710/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/017f046c1371758bf4363afd4384bafb583b9710/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=017f046c1371758bf4363afd4384bafb583b9710", "patch": "@@ -1842,7 +1842,11 @@ impl<'a, 'tcx> LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n                 return Ok(None);\n             }\n         }\n-        if let FieldPlacement::Array { .. } = layout.fields {\n+        if let FieldPlacement::Array { count: original_64_bit_count, .. } = layout.fields {\n+            // rust-lang/rust#57038: avoid ICE within FieldPlacement::count when count too big\n+            if original_64_bit_count > usize::max_value() as u64 {\n+                return Err(LayoutError::SizeOverflow(layout.ty));\n+            }\n             if layout.fields.count() > 0 {\n                 return self.find_niche(layout.field(self, 0)?);\n             } else {"}]}