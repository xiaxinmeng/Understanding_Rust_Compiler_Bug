{"sha": "ae71a631fd657368e8593feb5e025d23147afe60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNzFhNjMxZmQ2NTczNjhlODU5M2ZlYjVlMDI1ZDIzMTQ3YWZlNjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T14:36:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T14:36:55Z"}, "message": "Rename ra_hir -> hir", "tree": {"sha": "f38493871f6598f37a9c342713ce3faff0057646", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f38493871f6598f37a9c342713ce3faff0057646"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae71a631fd657368e8593feb5e025d23147afe60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae71a631fd657368e8593feb5e025d23147afe60", "html_url": "https://github.com/rust-lang/rust/commit/ae71a631fd657368e8593feb5e025d23147afe60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae71a631fd657368e8593feb5e025d23147afe60/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a77ec7bbe6ddbf663dce9529d11d1bb56c5489a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a77ec7bbe6ddbf663dce9529d11d1bb56c5489a", "html_url": "https://github.com/rust-lang/rust/commit/6a77ec7bbe6ddbf663dce9529d11d1bb56c5489a"}], "stats": {"total": 123, "additions": 61, "deletions": 62}, "files": [{"sha": "ae71ea9fdbdee0b2a0f8d0d8ab4a8f9a2bc5e6b8", "filename": "Cargo.lock", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -463,6 +463,24 @@ dependencies = [\n  \"libc\",\n ]\n \n+[[package]]\n+name = \"hir\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"arrayvec\",\n+ \"base_db\",\n+ \"either\",\n+ \"hir_def\",\n+ \"hir_expand\",\n+ \"hir_ty\",\n+ \"itertools\",\n+ \"log\",\n+ \"profile\",\n+ \"rustc-hash\",\n+ \"stdx\",\n+ \"syntax\",\n+]\n+\n [[package]]\n name = \"hir_def\"\n version = \"0.0.0\"\n@@ -1071,9 +1089,9 @@ version = \"0.1.0\"\n dependencies = [\n  \"base_db\",\n  \"either\",\n+ \"hir\",\n  \"itertools\",\n  \"profile\",\n- \"ra_hir\",\n  \"ra_ide_db\",\n  \"rustc-hash\",\n  \"stdx\",\n@@ -1082,24 +1100,6 @@ dependencies = [\n  \"text_edit\",\n ]\n \n-[[package]]\n-name = \"ra_hir\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"arrayvec\",\n- \"base_db\",\n- \"either\",\n- \"hir_def\",\n- \"hir_expand\",\n- \"hir_ty\",\n- \"itertools\",\n- \"log\",\n- \"profile\",\n- \"rustc-hash\",\n- \"stdx\",\n- \"syntax\",\n-]\n-\n [[package]]\n name = \"ra_ide\"\n version = \"0.1.0\"\n@@ -1108,13 +1108,13 @@ dependencies = [\n  \"cfg\",\n  \"either\",\n  \"expect\",\n+ \"hir\",\n  \"indexmap\",\n  \"itertools\",\n  \"log\",\n  \"oorandom\",\n  \"profile\",\n  \"ra_assists\",\n- \"ra_hir\",\n  \"ra_ide_db\",\n  \"ra_ssr\",\n  \"rustc-hash\",\n@@ -1131,10 +1131,10 @@ dependencies = [\n  \"base_db\",\n  \"either\",\n  \"fst\",\n+ \"hir\",\n  \"log\",\n  \"once_cell\",\n  \"profile\",\n- \"ra_hir\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"stdx\",\n@@ -1149,7 +1149,7 @@ version = \"0.1.0\"\n dependencies = [\n  \"base_db\",\n  \"expect\",\n- \"ra_hir\",\n+ \"hir\",\n  \"ra_ide_db\",\n  \"rustc-hash\",\n  \"syntax\",\n@@ -1236,6 +1236,7 @@ dependencies = [\n  \"env_logger\",\n  \"expect\",\n  \"flycheck\",\n+ \"hir\",\n  \"hir_def\",\n  \"hir_ty\",\n  \"itertools\",\n@@ -1251,7 +1252,6 @@ dependencies = [\n  \"proc_macro_srv\",\n  \"profile\",\n  \"project_model\",\n- \"ra_hir\",\n  \"ra_ide\",\n  \"ra_ide_db\",\n  \"ra_ssr\","}, {"sha": "dbb2986b600708d4870c0c75a38ca9e01b4b3b49", "filename": "crates/hir/Cargo.toml", "status": "renamed", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2FCargo.toml?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_hir\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"hir\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -13,7 +13,6 @@ log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n either = \"1.5.3\"\n arrayvec = \"0.5.1\"\n-\n itertools = \"0.9.0\"\n \n stdx = { path = \"../stdx\" }", "previous_filename": "crates/ra_hir/Cargo.toml"}, {"sha": "8ffb9e99b0ee813d6b44281cf6281c115742778f", "filename": "crates/hir/src/code_model.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/code_model.rs"}, {"sha": "07333c453f0e0c9f902ae0d636d7e0b94fdd61e7", "filename": "crates/hir/src/db.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdb.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/db.rs"}, {"sha": "363164b9b4a68bc98c5afb5e1b465a6b1ac64785", "filename": "crates/hir/src/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdiagnostics.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/diagnostics.rs"}, {"sha": "a53ac1e080be98d15222b2996dcbd74fbaebc7c6", "filename": "crates/hir/src/from_id.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Ffrom_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Ffrom_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Ffrom_id.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/from_id.rs"}, {"sha": "a50d4ff02909b5a57851875a0d55f752dce358a5", "filename": "crates/hir/src/has_source.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fhas_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fhas_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fhas_source.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/has_source.rs"}, {"sha": "24a0f6b4b18490b6c138aa1fd9ca84f44a5bab2a", "filename": "crates/hir/src/lib.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -9,11 +9,11 @@\n //! It is written in \"OO\" style. Each type is self contained (as in, it knows it's\n //! parents and full context). It should be \"clean code\".\n //!\n-//! `ra_hir_*` crates are the implementation of the compiler logic.\n+//! `hir_*` crates are the implementation of the compiler logic.\n //! They are written in \"ECS\" style, with relatively little abstractions.\n //! Many types are not self-contained, and explicitly use local indexes, arenas, etc.\n //!\n-//! `ra_hir` is what insulates the \"we don't know how to actually write an incremental compiler\"\n+//! `hir` is what insulates the \"we don't know how to actually write an incremental compiler\"\n //! from the ide with completions, hovers, etc. It is a (soft, internal) boundary:\n //! https://www.tedinski.com/2018/02/06/system-boundaries.html.\n ", "previous_filename": "crates/ra_hir/src/lib.rs"}, {"sha": "1467d825d9338bae0f0d0d7b1f72ff031756c565", "filename": "crates/hir/src/semantics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/semantics.rs"}, {"sha": "5918b9541be2ecd0c79ace07e72a8cbb451167b2", "filename": "crates/hir/src/semantics/source_to_def.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/semantics/source_to_def.rs"}, {"sha": "8750584f946ac09db257c6022beb431e4a88ac42", "filename": "crates/hir/src/source_analyzer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "previous_filename": "crates/ra_hir/src/source_analyzer.rs"}, {"sha": "cacc063da2b3c456f47d3d8b50077bfdc26f9aa0", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -20,5 +20,5 @@ text_edit = { path = \"../text_edit\" }\n profile = { path = \"../profile\" }\n base_db = { path = \"../base_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+hir = { path = \"../hir\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "a701cdf1d502dc9fc4a9d15b55e3427fccdc59d8", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -33,7 +33,7 @@ ra_ssr = { path = \"../ra_ssr\" }\n \n # ra_ide should depend only on the top-level `hir` package. if you need\n # something from some `hir_xxx` subpackage, reexport the API via `hir`.\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+hir = { path = \"../hir\" }\n \n [dev-dependencies]\n expect = { path = \"../expect\" }"}, {"sha": "0d14c823aef23d5a86c029bb64fac4fdcd50b541", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -3,7 +3,7 @@\n //! Strings, suitable for displaying to the human.\n //!\n //! What powers this API are the `RootDatabase` struct, which defines a `salsa`\n-//! database, and the `ra_hir` crate, where majority of the analysis happens.\n+//! database, and the `hir` crate, where majority of the analysis happens.\n //! However, IDE specific bits of the analysis (most notably completion) happen\n //! in this crate.\n "}, {"sha": "eda257a3a8b3444d960580b74a33c7a283f273a7", "filename": "crates/ra_ide_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2FCargo.toml?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -29,4 +29,4 @@ test_utils = { path = \"../test_utils\" }\n \n # ra_ide should depend only on the top-level `hir` package. if you need\n # something from some `hir_xxx` subpackage, reexport the API via `hir`.\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+hir = { path = \"../hir\" }"}, {"sha": "bed4bbdf19cfcec10b74aca5016eaf6b37910a4c", "filename": "crates/ra_ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Fra_ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2FCargo.toml?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -15,7 +15,7 @@ text_edit = { path = \"../text_edit\" }\n syntax = { path = \"../syntax\" }\n base_db = { path = \"../base_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+hir = { path = \"../hir\" }\n rustc-hash = \"1.1.0\"\n test_utils = { path = \"../test_utils\" }\n "}, {"sha": "c0257e9c89700d83c740b964eda6c915b92aa77e", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -49,7 +49,7 @@ toolchain = { path = \"../toolchain\" }\n base_db = { path = \"../base_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n ra_ssr = { path = \"../ra_ssr\" }\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+hir = { path = \"../hir\" }\n hir_def = { path = \"../hir_def\" }\n hir_ty = { path = \"../hir_ty\" }\n proc_macro_srv = { path = \"../proc_macro_srv\" }"}, {"sha": "04bebbfca5c9a09b8bd854186e9dd33ae46c3279", "filename": "docs/dev/README.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -148,14 +148,14 @@ Internal representations are lowered to LSP in the `rust-analyzer` crate (the on\n \n ## IDE/Compiler split\n \n-There's a semi-hard split between \"compiler\" and \"IDE\", at the `ra_hir` crate.\n+There's a semi-hard split between \"compiler\" and \"IDE\", at the `hir` crate.\n Compiler derives new facts about source code.\n It explicitly acknowledges that not all info is available (i.e. you can't look at types during name resolution).\n \n IDE assumes that all information is available at all times.\n \n-IDE should use only types from `ra_hir`, and should not depend on the underling compiler types.\n-`ra_hir` is a facade.\n+IDE should use only types from `hir`, and should not depend on the underling compiler types.\n+`hir` is a facade.\n \n ## IDE API\n "}, {"sha": "0ffe61026ac0aa73d0baef68136745aa5ff550fd", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -102,7 +102,7 @@ defines most of the \"input\" queries: facts supplied by the client of the\n analyzer. Reading the docs of the `base_db::input` module should be useful:\n everything else is strictly derived from those inputs.\n \n-### `crates/ra_hir*` crates\n+### `crates/hir*` crates\n \n HIR provides high-level \"object oriented\" access to Rust code.\n \n@@ -113,10 +113,10 @@ is responsible for guessing a HIR for a particular source position.\n \n Underneath, HIR works on top of salsa, using a `HirDatabase` trait.\n \n-`ra_hir_xxx` crates have a strong ECS flavor, in that they work with raw ids and\n+`hir_xxx` crates have a strong ECS flavor, in that they work with raw ids and\n directly query the database.\n \n-The top-level `ra_hir` fa\u00e7ade crate wraps ids into a more OO-flavored API.\n+The top-level `hir` fa\u00e7ade crate wraps ids into a more OO-flavored API.\n \n ### `crates/ra_ide`\n "}, {"sha": "29d84bf3f6a4c93753a6e911a8a878bc3e969c49", "filename": "docs/dev/guide.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/docs%2Fdev%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/docs%2Fdev%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fguide.md?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -275,16 +275,16 @@ several times, with different sets of `cfg`s enabled. The IDE-specific task of\n mapping source code position into a semantic model is inherently imprecise for\n this reason, and is handled by the [`source_binder`].\n \n-[`source_binder`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/source_binder.rs\n+[`source_binder`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/source_binder.rs\n \n The semantic interface is declared in the [`code_model_api`] module. Each entity is\n identified by an integer ID and has a bunch of methods which take a salsa database\n as an argument and returns other entities (which are also IDs). Internally, these\n methods invoke various queries on the database to build the model on demand.\n Here's [the list of queries].\n \n-[`code_model_api`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/code_model_api.rs\n-[the list of queries]: https://github.com/rust-analyzer/rust-analyzer/blob/7e84440e25e19529e4ff8a66e521d1b06349c6ec/crates/ra_hir/src/db.rs#L20-L106\n+[`code_model_api`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/code_model_api.rs\n+[the list of queries]: https://github.com/rust-analyzer/rust-analyzer/blob/7e84440e25e19529e4ff8a66e521d1b06349c6ec/crates/hir/src/db.rs#L20-L106\n \n The first step of building the model is parsing the source code.\n \n@@ -341,7 +341,7 @@ The algorithm for building a tree of modules is to start with a crate root\n declarations and recursively process child modules. This is handled by the\n [`module_tree_query`], with two slight variations.\n \n-[`module_tree_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/module_tree.rs#L116-L123\n+[`module_tree_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/module_tree.rs#L116-L123\n \n First, rust-analyzer builds a module tree for all crates in a source root\n simultaneously. The main reason for this is historical (`module_tree` predates\n@@ -364,7 +364,7 @@ the same, we don't have to re-execute [`module_tree_query`]. In fact, we only\n need to re-execute it when we add/remove new files or when we change mod\n declarations.\n \n-[`submodules_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/module_tree.rs#L41\n+[`submodules_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/module_tree.rs#L41\n \n We store the resulting modules in a `Vec`-based indexed arena. The indices in\n the arena becomes module IDs. And this brings us to the next topic:\n@@ -393,7 +393,7 @@ database we use includes a couple of [interners]. How to \"garbage collect\"\n unused locations is an open question.\n \n [`LocationInterner`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/base_db/src/loc2id.rs#L65-L71\n-[interners]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/db.rs#L22-L23\n+[interners]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/db.rs#L22-L23\n \n For example, we use `LocationInterner` to assign IDs to definitions of functions,\n structs, enums, etc. The location, [`DefLoc`] contains two bits of information:\n@@ -407,7 +407,7 @@ using offsets, text ranges or syntax trees as keys and values for queries. What\n we do instead is we store \"index\" of the item among all of the items of a file\n (so, a positional based ID, but localized to a single file).\n \n-[`DefLoc`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/ids.rs#L127-L139\n+[`DefLoc`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/ids.rs#L127-L139\n \n One thing we've glossed over for the time being is support for macros. We have\n only proof of concept handling of macros at the moment, but they are extremely\n@@ -440,7 +440,7 @@ terms of `HirFileId`! This does not recur infinitely though: any chain of\n `HirFileId`s bottoms out in `HirFileId::FileId`, that is, some source file\n actually written by the user.\n \n-[`HirFileId`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/ids.rs#L18-L125\n+[`HirFileId`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/ids.rs#L18-L125\n \n Now that we understand how to identify a definition, in a source or in a\n macro-generated file, we can discuss name resolution a bit.\n@@ -454,14 +454,14 @@ each module into a position-independent representation which does not change if\n we modify bodies of the items. After that we [loop] resolving all imports until\n we've reached a fixed point.\n \n-[lower]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L113-L117\n-[loop]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres.rs#L186-L196\n+[lower]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L113-L117\n+[loop]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres.rs#L186-L196\n \n And, given all our preparation with IDs and a position-independent representation,\n it is satisfying to [test] that typing inside function body does not invalidate\n name resolution results.\n \n-[test]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/tests.rs#L376\n+[test]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/tests.rs#L376\n \n An interesting fact about name resolution is that it \"erases\" all of the\n intermediate paths from the imports: in the end, we know which items are defined\n@@ -496,10 +496,10 @@ there's an intermediate [projection query] which returns only the first\n position-independent part of the lowering. The result of this query is stable.\n Naturally, name resolution [uses] this stable projection query.\n \n-[imports]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L52-L59\n-[`SourceMap`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L52-L59\n-[projection query]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L97-L103\n-[uses]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/query_definitions.rs#L49\n+[imports]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L52-L59\n+[`SourceMap`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L52-L59\n+[projection query]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L97-L103\n+[uses]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/query_definitions.rs#L49\n \n ## Type inference\n \n@@ -521,10 +521,10 @@ construct a mapping from `ExprId`s to types.\n \n [@flodiebold]: https://github.com/flodiebold\n [#327]: https://github.com/rust-analyzer/rust-analyzer/pull/327\n-[lower the AST]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs\n-[positional ID]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs#L13-L15\n-[a source map]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs#L41-L44\n-[type inference]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/ty.rs#L1208-L1223\n+[lower the AST]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/expr.rs\n+[positional ID]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/expr.rs#L13-L15\n+[a source map]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/expr.rs#L41-L44\n+[type inference]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/ty.rs#L1208-L1223\n \n ## Tying it all together: completion\n "}, {"sha": "97a11a01eeb19baf98ef02517a14be13dc64cea4", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae71a631fd657368e8593feb5e025d23147afe60/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae71a631fd657368e8593feb5e025d23147afe60/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=ae71a631fd657368e8593feb5e025d23147afe60", "patch": "@@ -192,7 +192,7 @@ impl TidyDocs {\n         }\n \n         let poorly_documented = [\n-            \"ra_hir\",\n+            \"hir\",\n             \"hir_expand\",\n             \"ra_ide\",\n             \"mbe\","}]}