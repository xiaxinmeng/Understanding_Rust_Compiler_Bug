{"sha": "f9644c16f3156025d83d3dc1262ac35d9ae89588", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NjQ0YzE2ZjMxNTYwMjVkODNkM2RjMTI2MmFjMzVkOWFlODk1ODg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-28T08:21:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-28T08:27:30Z"}, "message": "add comment to check_data", "tree": {"sha": "cdf940c529bbf727b0248316a3df9e0f419d5ef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdf940c529bbf727b0248316a3df9e0f419d5ef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9644c16f3156025d83d3dc1262ac35d9ae89588", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9644c16f3156025d83d3dc1262ac35d9ae89588", "html_url": "https://github.com/rust-lang/rust/commit/f9644c16f3156025d83d3dc1262ac35d9ae89588", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9644c16f3156025d83d3dc1262ac35d9ae89588/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7497d93ef17d2b87fa8efb5c5de33f0bdc4155af", "url": "https://api.github.com/repos/rust-lang/rust/commits/7497d93ef17d2b87fa8efb5c5de33f0bdc4155af", "html_url": "https://github.com/rust-lang/rust/commit/7497d93ef17d2b87fa8efb5c5de33f0bdc4155af"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "0e14089eebc3ebf37c628f6abb32358c8e3c523e", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9644c16f3156025d83d3dc1262ac35d9ae89588/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9644c16f3156025d83d3dc1262ac35d9ae89588/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=f9644c16f3156025d83d3dc1262ac35d9ae89588", "patch": "@@ -170,6 +170,10 @@ impl<Tag> From<Double> for Scalar<Tag> {\n }\n \n impl Scalar<()> {\n+    /// Make sure the `data` fits in `size`.\n+    /// This is guaranteed by all constructors here, but since the enum variants are public,\n+    /// it could still be violated (even though no code outside this file should\n+    /// construct `Scalar`s).\n     #[inline(always)]\n     fn check_data(data: u128, size: u8) {\n         debug_assert_eq!("}]}