{"sha": "09b0780719d740f116af7aff6647d18051ff0b06", "node_id": "C_kwDOAAsO6NoAKDA5YjA3ODA3MTlkNzQwZjExNmFmN2FmZjY2NDdkMTgwNTFmZjBiMDY", "commit": {"author": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T14:12:15Z"}, "committer": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T14:12:15Z"}, "message": "Stabilise entry_insert\n\nSigned-off-by: Fe\u0301lix Saparelli <felix@passcod.name>", "tree": {"sha": "08d2bd5ea19b50c6cad49981f35a1cc024b16967", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08d2bd5ea19b50c6cad49981f35a1cc024b16967"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09b0780719d740f116af7aff6647d18051ff0b06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09b0780719d740f116af7aff6647d18051ff0b06", "html_url": "https://github.com/rust-lang/rust/commit/09b0780719d740f116af7aff6647d18051ff0b06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09b0780719d740f116af7aff6647d18051ff0b06/comments", "author": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "committer": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c8e88b97353d18a422ec9b67ac06da47bdc632e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8e88b97353d18a422ec9b67ac06da47bdc632e", "html_url": "https://github.com/rust-lang/rust/commit/9c8e88b97353d18a422ec9b67ac06da47bdc632e"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "e72f8ff32ee16ba79ffed63f471d36d49cf9ce70", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/09b0780719d740f116af7aff6647d18051ff0b06/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b0780719d740f116af7aff6647d18051ff0b06/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=09b0780719d740f116af7aff6647d18051ff0b06", "patch": "@@ -2450,7 +2450,6 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(entry_insert)]\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<&str, String> = HashMap::new();\n@@ -2459,7 +2458,7 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// assert_eq!(entry.key(), &\"poneyland\");\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"entry_insert\", issue = \"65225\")]\n+    #[stable(feature = \"entry_insert\", since = \"1.58.0\")]\n     pub fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {\n         match self {\n             Occupied(mut entry) => {\n@@ -2793,7 +2792,6 @@ impl<'a, K: 'a, V: 'a> VacantEntry<'a, K, V> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(entry_insert)]\n     /// use std::collections::HashMap;\n     /// use std::collections::hash_map::Entry;\n     ///\n@@ -2805,7 +2803,7 @@ impl<'a, K: 'a, V: 'a> VacantEntry<'a, K, V> {\n     /// assert_eq!(map[\"poneyland\"], 37);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"entry_insert\", issue = \"65225\")]\n+    #[stable(feature = \"entry_insert\", since = \"1.58.0\")]\n     pub fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {\n         let base = self.base.insert_entry(value);\n         OccupiedEntry { base }"}]}