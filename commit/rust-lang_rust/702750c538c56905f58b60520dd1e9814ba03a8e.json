{"sha": "702750c538c56905f58b60520dd1e9814ba03a8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMjc1MGM1MzhjNTY5MDVmNThiNjA1MjBkZDFlOTgxNGJhMDNhOGU=", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2017-08-01T14:25:36Z"}, "committer": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2017-08-08T20:58:09Z"}, "message": "Use explicit wrapping_add to prevent potential unexpected behavior on debug builds", "tree": {"sha": "86afe5a1d297e25ebb52adb09a59ed04a0f9f9ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86afe5a1d297e25ebb52adb09a59ed04a0f9f9ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/702750c538c56905f58b60520dd1e9814ba03a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/702750c538c56905f58b60520dd1e9814ba03a8e", "html_url": "https://github.com/rust-lang/rust/commit/702750c538c56905f58b60520dd1e9814ba03a8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/702750c538c56905f58b60520dd1e9814ba03a8e/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bf018c58815eed79a279ee6fa98992b8a3639ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bf018c58815eed79a279ee6fa98992b8a3639ef", "html_url": "https://github.com/rust-lang/rust/commit/0bf018c58815eed79a279ee6fa98992b8a3639ef"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "273c7c1c54a2a902dbde9d3c6318fbae59ea1715", "filename": "src/libstd/sync/barrier.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/702750c538c56905f58b60520dd1e9814ba03a8e/src%2Flibstd%2Fsync%2Fbarrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702750c538c56905f58b60520dd1e9814ba03a8e/src%2Flibstd%2Fsync%2Fbarrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fbarrier.rs?ref=702750c538c56905f58b60520dd1e9814ba03a8e", "patch": "@@ -152,7 +152,7 @@ impl Barrier {\n             BarrierWaitResult(false)\n         } else {\n             lock.count = 0;\n-            lock.generation_id += 1;\n+            lock.generation_id = lock.generation_id.wrapping_add(1);\n             self.cvar.notify_all();\n             BarrierWaitResult(true)\n         }"}]}