{"sha": "2a66685ebfdcd58a3c3fff0caeff6b13774543f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNjY2ODVlYmZkY2Q1OGEzYzNmZmYwY2FlZmY2YjEzNzc0NTQzZjU=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-02-17T14:07:36Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-02-17T14:56:48Z"}, "message": "Make sure pdbs are copied along with exe and dlls when bootstrapping", "tree": {"sha": "51d3dbb9c3f318dbc9b7730abd1aab17ff9c795b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51d3dbb9c3f318dbc9b7730abd1aab17ff9c795b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a66685ebfdcd58a3c3fff0caeff6b13774543f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a66685ebfdcd58a3c3fff0caeff6b13774543f5", "html_url": "https://github.com/rust-lang/rust/commit/2a66685ebfdcd58a3c3fff0caeff6b13774543f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a66685ebfdcd58a3c3fff0caeff6b13774543f5/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1", "html_url": "https://github.com/rust-lang/rust/commit/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "7d5e3d05b11facb56677a513a0eb94c55117bb86", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a66685ebfdcd58a3c3fff0caeff6b13774543f5/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a66685ebfdcd58a3c3fff0caeff6b13774543f5/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=2a66685ebfdcd58a3c3fff0caeff6b13774543f5", "patch": "@@ -27,7 +27,7 @@ use crate::config::TargetSelection;\n use crate::dist;\n use crate::native;\n use crate::tool::SourceType;\n-use crate::util::{exe, is_dylib, symlink_dir};\n+use crate::util::{exe, is_debug_info, is_dylib, symlink_dir};\n use crate::{Compiler, DependencyType, GitRepo, Mode};\n \n #[derive(Debug, PartialOrd, Ord, Copy, Clone, PartialEq, Eq, Hash)]\n@@ -1049,7 +1049,8 @@ impl Step for Assemble {\n         let src_libdir = builder.sysroot_libdir(build_compiler, host);\n         for f in builder.read_dir(&src_libdir) {\n             let filename = f.file_name().into_string().unwrap();\n-            if is_dylib(&filename) && !proc_macros.contains(&filename) {\n+            if (is_dylib(&filename) || is_debug_info(&filename)) && !proc_macros.contains(&filename)\n+            {\n                 builder.copy(&f.path(), &rustc_libdir.join(&filename));\n             }\n         }\n@@ -1166,6 +1167,7 @@ pub fn run_cargo(\n             if !(filename.ends_with(\".rlib\")\n                 || filename.ends_with(\".lib\")\n                 || filename.ends_with(\".a\")\n+                || is_debug_info(&filename)\n                 || is_dylib(&filename)\n                 || (is_check && filename.ends_with(\".rmeta\")))\n             {"}, {"sha": "b4421a82714fcebd01bd65a7ed8ac9c70aa2215b", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a66685ebfdcd58a3c3fff0caeff6b13774543f5/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a66685ebfdcd58a3c3fff0caeff6b13774543f5/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=2a66685ebfdcd58a3c3fff0caeff6b13774543f5", "patch": "@@ -32,6 +32,12 @@ pub fn is_dylib(name: &str) -> bool {\n     name.ends_with(\".dylib\") || name.ends_with(\".so\") || name.ends_with(\".dll\")\n }\n \n+/// Returns `true` if the file name given looks like a debug info file\n+pub fn is_debug_info(name: &str) -> bool {\n+    // FIXME: consider split debug info on other platforms (e.g., Linux, macOS)\n+    name.ends_with(\".pdb\")\n+}\n+\n /// Returns the corresponding relative library directory that the compiler's\n /// dylibs will be found in.\n pub fn libdir(target: TargetSelection) -> &'static str {"}]}