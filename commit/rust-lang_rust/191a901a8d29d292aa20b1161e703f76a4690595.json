{"sha": "191a901a8d29d292aa20b1161e703f76a4690595", "node_id": "C_kwDOAAsO6NoAKDE5MWE5MDFhOGQyOWQyOTJhYTIwYjExNjFlNzAzZjc2YTQ2OTA1OTU", "commit": {"author": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-05-21T13:02:51Z"}, "committer": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-05-21T13:02:51Z"}, "message": "consider array initializer for `large_stack_arrays`", "tree": {"sha": "a24871667563daae68ec30d0c66b5dc7d2f96e01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a24871667563daae68ec30d0c66b5dc7d2f96e01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/191a901a8d29d292aa20b1161e703f76a4690595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/191a901a8d29d292aa20b1161e703f76a4690595", "html_url": "https://github.com/rust-lang/rust/commit/191a901a8d29d292aa20b1161e703f76a4690595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/191a901a8d29d292aa20b1161e703f76a4690595/comments", "author": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "435a8ad86c7a33bd7ffb91c59039943408d3b6aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/435a8ad86c7a33bd7ffb91c59039943408d3b6aa", "html_url": "https://github.com/rust-lang/rust/commit/435a8ad86c7a33bd7ffb91c59039943408d3b6aa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0a5901bce046e2fd1376ce5587a79aa7603ad4f9", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/191a901a8d29d292aa20b1161e703f76a4690595/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191a901a8d29d292aa20b1161e703f76a4690595/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=191a901a8d29d292aa20b1161e703f76a4690595", "patch": "@@ -38,7 +38,7 @@ impl_lint_pass!(LargeStackArrays => [LARGE_STACK_ARRAYS]);\n \n impl<'tcx> LateLintPass<'tcx> for LargeStackArrays {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n-        if let ExprKind::Repeat(_, _) = expr.kind\n+        if let ExprKind::Repeat(_, _) | ExprKind::Array(_) = expr.kind\n           && let ty::Array(element_type, cst) = cx.typeck_results().expr_ty(expr).kind()\n           && let ConstKind::Value(ty::ValTree::Leaf(element_count)) = cst.kind()\n           && let Ok(element_count) = element_count.try_to_target_usize(cx.tcx)"}]}