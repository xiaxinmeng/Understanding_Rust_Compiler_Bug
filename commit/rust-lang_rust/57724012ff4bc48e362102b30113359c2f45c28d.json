{"sha": "57724012ff4bc48e362102b30113359c2f45c28d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NzI0MDEyZmY0YmM0OGUzNjIxMDJiMzAxMTMzNTljMmY0NWMyOGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-23T02:21:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-23T02:21:34Z"}, "message": "auto merge of #11111 : alexcrichton/rust/issue-11039, r=brson\n\nNone of these primitives should be Freeze because sharing them in an Arc is a\r\nvery bad idea.\r\n\r\nCloses #11039", "tree": {"sha": "bd2d901f389ad4d9cb0d30c1d5a92f45761386a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd2d901f389ad4d9cb0d30c1d5a92f45761386a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57724012ff4bc48e362102b30113359c2f45c28d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57724012ff4bc48e362102b30113359c2f45c28d", "html_url": "https://github.com/rust-lang/rust/commit/57724012ff4bc48e362102b30113359c2f45c28d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57724012ff4bc48e362102b30113359c2f45c28d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b4bbc89b3ce40dc95abec688c322fef798292f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b4bbc89b3ce40dc95abec688c322fef798292f1", "html_url": "https://github.com/rust-lang/rust/commit/1b4bbc89b3ce40dc95abec688c322fef798292f1"}, {"sha": "67c02222526d46875ddabfda1b7a936564f916ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/67c02222526d46875ddabfda1b7a936564f916ff", "html_url": "https://github.com/rust-lang/rust/commit/67c02222526d46875ddabfda1b7a936564f916ff"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "30324d9bc60b692ec39c7e46fccb3bdc8ec2ffea", "filename": "src/libstd/comm/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57724012ff4bc48e362102b30113359c2f45c28d/src%2Flibstd%2Fcomm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57724012ff4bc48e362102b30113359c2f45c28d/src%2Flibstd%2Fcomm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm%2Fmod.rs?ref=57724012ff4bc48e362102b30113359c2f45c28d", "patch": "@@ -292,6 +292,7 @@ impl<T: Send> Consumer<T>{\n \n /// The receiving-half of Rust's channel type. This half can only be owned by\n /// one task\n+#[no_freeze] // can't share ports in an arc\n pub struct Port<T> {\n     priv queue: Consumer<T>,\n }\n@@ -305,12 +306,15 @@ pub struct PortIterator<'a, T> {\n \n /// The sending-half of Rust's channel type. This half can only be owned by one\n /// task\n+#[no_freeze] // can't share chans in an arc\n pub struct Chan<T> {\n     priv queue: spsc::Producer<T, Packet>,\n }\n \n /// The sending-half of Rust's channel type. This half can be shared among many\n /// tasks by creating copies of itself through the `clone` method.\n+#[no_freeze] // technically this implementation is shareable, but it shouldn't\n+             // be required to be shareable in an arc\n pub struct SharedChan<T> {\n     priv queue: mpsc::Producer<T, Packet>,\n }"}, {"sha": "2b85068d4708b4590a72086ba938caf039fd3422", "filename": "src/test/compile-fail/comm-not-freeze.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57724012ff4bc48e362102b30113359c2f45c28d/src%2Ftest%2Fcompile-fail%2Fcomm-not-freeze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57724012ff4bc48e362102b30113359c2f45c28d/src%2Ftest%2Fcompile-fail%2Fcomm-not-freeze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcomm-not-freeze.rs?ref=57724012ff4bc48e362102b30113359c2f45c28d", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn test<T: Freeze>() {}\n+\n+fn main() {\n+    test::<Chan<int>>();        //~ ERROR: does not fulfill `Freeze`\n+    test::<Port<int>>();        //~ ERROR: does not fulfill `Freeze`\n+    test::<SharedChan<int>>();  //~ ERROR: does not fulfill `Freeze`\n+}"}]}