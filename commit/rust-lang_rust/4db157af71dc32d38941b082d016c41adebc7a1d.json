{"sha": "4db157af71dc32d38941b082d016c41adebc7a1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYjE1N2FmNzFkYzMyZDM4OTQxYjA4MmQwMTZjNDFhZGViYzdhMWQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-21T09:20:42Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-21T09:24:06Z"}, "message": "Allow attribute macro invocations at the crate root.", "tree": {"sha": "f5adc7b5f4812cdc3b8cabb894e2ec580531c8ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5adc7b5f4812cdc3b8cabb894e2ec580531c8ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4db157af71dc32d38941b082d016c41adebc7a1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4db157af71dc32d38941b082d016c41adebc7a1d", "html_url": "https://github.com/rust-lang/rust/commit/4db157af71dc32d38941b082d016c41adebc7a1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4db157af71dc32d38941b082d016c41adebc7a1d/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f6f8384484382aeec5e1f647e18d37992966425", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6f8384484382aeec5e1f647e18d37992966425", "html_url": "https://github.com/rust-lang/rust/commit/5f6f8384484382aeec5e1f647e18d37992966425"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "e704934dba9c17ee77332c8a5dd2fe37aedd05c7", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4db157af71dc32d38941b082d016c41adebc7a1d/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4db157af71dc32d38941b082d016c41adebc7a1d/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=4db157af71dc32d38941b082d016c41adebc7a1d", "patch": "@@ -184,13 +184,20 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     fn expand_crate(&mut self, mut krate: ast::Crate) -> ast::Crate {\n         let err_count = self.cx.parse_sess.span_diagnostic.err_count();\n \n-        let mut krate_item = placeholder(ExpansionKind::Items, ast::DUMMY_NODE_ID)\n-            .make_items().pop().unwrap().unwrap();\n-        krate_item.node = ast::ItemKind::Mod(krate.module);\n-        let krate_item = Expansion::Items(SmallVector::one(P(krate_item)));\n-\n-        krate.module = match self.expand(krate_item).make_items().pop().unwrap().unwrap().node {\n-            ast::ItemKind::Mod(module) => module,\n+        let krate_item = Expansion::Items(SmallVector::one(P(ast::Item {\n+            attrs: krate.attrs,\n+            span: krate.span,\n+            node: ast::ItemKind::Mod(krate.module),\n+            ident: keywords::Invalid.ident(),\n+            id: ast::DUMMY_NODE_ID,\n+            vis: ast::Visibility::Public,\n+        })));\n+\n+        match self.expand(krate_item).make_items().pop().unwrap().unwrap() {\n+            ast::Item { attrs, node: ast::ItemKind::Mod(module), .. } => {\n+                krate.attrs = attrs;\n+                krate.module = module;\n+            },\n             _ => unreachable!(),\n         };\n         krate.exported_macros = mem::replace(&mut self.cx.exported_macros, Vec::new());"}]}