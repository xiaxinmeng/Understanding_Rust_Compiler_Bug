{"sha": "82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "node_id": "C_kwDOAAsO6NoAKDgyYzczYWY0YTYwYzVjOWI0YWM5MjgxM2E5ZjVlOTAyYWRhNjdlNmI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-05T09:27:06Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-05T09:27:06Z"}, "message": "Prefer trace level instrumentation for the new noisy instrument attributes", "tree": {"sha": "396069758a393cbce9a60601f28a1aefcc5a037c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/396069758a393cbce9a60601f28a1aefcc5a037c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "html_url": "https://github.com/rust-lang/rust/commit/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "html_url": "https://github.com/rust-lang/rust/commit/c3aec3056e3c88bfc63db5cd4dc24624be7c576a"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4a4cccb490d1cf7df48145e6b5597ef843bc8c77", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "patch": "@@ -464,7 +464,7 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         }\n     }\n \n-    #[instrument(level = \"debug\", skip(self))]\n+    #[instrument(level = \"trace\", skip(self))]\n     fn load_operand(&mut self, place: PlaceRef<'tcx, &'ll Value>) -> OperandRef<'tcx, &'ll Value> {\n         assert_eq!(place.llextra.is_some(), place.layout.is_unsized());\n "}, {"sha": "58cee0c8bb0dbf166d9d7fbb827e44d319607e1a", "filename": "compiler/rustc_codegen_ssa/src/mir/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs?ref=82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "patch": "@@ -421,7 +421,7 @@ impl<'a, 'tcx, V: CodegenObject> PlaceRef<'tcx, V> {\n }\n \n impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n-    #[instrument(level = \"debug\", skip(self, bx))]\n+    #[instrument(level = \"trace\", skip(self, bx))]\n     pub fn codegen_place(\n         &mut self,\n         bx: &mut Bx,"}, {"sha": "bb14268b1834ea63d65426cc19a20680127a277a", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_span::source_map::{Span, DUMMY_SP};\n \n impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n-    #[instrument(level = \"debug\", skip(self, bx))]\n+    #[instrument(level = \"trace\", skip(self, bx))]\n     pub fn codegen_rvalue(\n         &mut self,\n         mut bx: Bx,"}, {"sha": "4bc3d216a40d625b833d0d246ded3ad1a86c25d0", "filename": "compiler/rustc_mir_build/src/thir/cx/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c73af4a60c5c9b4ac92813a9f5e902ada67e6b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs?ref=82c73af4a60c5c9b4ac92813a9f5e902ada67e6b", "patch": "@@ -32,14 +32,14 @@ impl<'tcx> Cx<'tcx> {\n         exprs.iter().map(|expr| self.mirror_expr_inner(expr)).collect()\n     }\n \n-    #[instrument(level = \"debug\", skip(self, hir_expr))]\n+    #[instrument(level = \"trace\", skip(self, hir_expr))]\n     pub(super) fn mirror_expr_inner(&mut self, hir_expr: &'tcx hir::Expr<'tcx>) -> ExprId {\n         let temp_lifetime =\n             self.rvalue_scopes.temporary_scope(self.region_scope_tree, hir_expr.hir_id.local_id);\n         let expr_scope =\n             region::Scope { id: hir_expr.hir_id.local_id, data: region::ScopeData::Node };\n \n-        debug!(?hir_expr.hir_id, ?hir_expr.span);\n+        trace!(?hir_expr.hir_id, ?hir_expr.span);\n \n         let mut expr = self.make_mirror_unadjusted(hir_expr);\n "}]}