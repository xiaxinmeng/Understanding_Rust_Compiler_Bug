{"sha": "fbc4168d809dae0408c2520ccfe585f564ad4a0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYzQxNjhkODA5ZGFlMDQwOGMyNTIwY2NmZTU4NWY1NjRhZDRhMGI=", "commit": {"author": {"name": "Duddino", "email": "rezziandrea106@gmail.com", "date": "2020-04-15T08:57:22Z"}, "committer": {"name": "Duddino", "email": "rezziandrea106@gmail.com", "date": "2020-04-15T08:58:12Z"}, "message": "Provide better compiler output when using `?` on `Option` in fn returning `Result` and vice-versa", "tree": {"sha": "15c21f7db77e3031fdf80091fcf48112bdfedfe3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15c21f7db77e3031fdf80091fcf48112bdfedfe3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbc4168d809dae0408c2520ccfe585f564ad4a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc4168d809dae0408c2520ccfe585f564ad4a0b", "html_url": "https://github.com/rust-lang/rust/commit/fbc4168d809dae0408c2520ccfe585f564ad4a0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbc4168d809dae0408c2520ccfe585f564ad4a0b/comments", "author": null, "committer": null, "parents": [{"sha": "ce994b633d9143dd00140c64fe53194a2927dff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce994b633d9143dd00140c64fe53194a2927dff1", "html_url": "https://github.com/rust-lang/rust/commit/ce994b633d9143dd00140c64fe53194a2927dff1"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "904720125d3d74b2ab4e934c24093ae4972cf4b1", "filename": "src/librustc_trait_selection/traits/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbc4168d809dae0408c2520ccfe585f564ad4a0b/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc4168d809dae0408c2520ccfe585f564ad4a0b/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=fbc4168d809dae0408c2520ccfe585f564ad4a0b", "patch": "@@ -321,15 +321,15 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             err.span_suggestion_verbose(\n                                 span.shrink_to_lo(),\n                                 \"consider converting the `Option<T>` into a `Result<T, _>` using `Option::ok_or` or `Option::ok_or_else`\",\n-                                \".ok_or_else(|_| /* error value */)\".to_string(),\n+                                \".ok_or_else(|| /* error value */)\".to_string(),\n                                 Applicability::HasPlaceholders,\n                             );\n                         } else if is_try && is_from && should_convert_result_to_option {\n                             err.span_suggestion_verbose(\n                                 span.shrink_to_lo(),\n                                 \"consider converting the `Result<T, _>` into an `Option<T>` using `Result::ok`\",\n                                 \".ok()\".to_string(),\n-                                Applicability::HasPlaceholders,\n+                                Applicability::MachineApplicable,\n                             );\n                         }\n "}, {"sha": "f673ef7fc1e690af24e09538f339193e5101eeeb", "filename": "src/test/ui/option-to-result.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbc4168d809dae0408c2520ccfe585f564ad4a0b/src%2Ftest%2Fui%2Foption-to-result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbc4168d809dae0408c2520ccfe585f564ad4a0b/src%2Ftest%2Fui%2Foption-to-result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foption-to-result.stderr?ref=fbc4168d809dae0408c2520ccfe585f564ad4a0b", "patch": "@@ -8,8 +8,8 @@ LL |     a?;\n    = note: required by `std::convert::From::from`\n help: consider converting the `Option<T>` into a `Result<T, _>` using `Option::ok_or` or `Option::ok_or_else`\n    |\n-LL |     a.ok_or_else(|_| /* error value */)?;\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     a.ok_or_else(|| /* error value */)?;\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `?` couldn't convert the error to `std::option::NoneError`\n   --> $DIR/option-to-result.rs:11:6"}, {"sha": "7a4bb75967b1f8764e08b978f2904506293774fa", "filename": "src/test/ui/try-on-option.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbc4168d809dae0408c2520ccfe585f564ad4a0b/src%2Ftest%2Fui%2Ftry-on-option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbc4168d809dae0408c2520ccfe585f564ad4a0b/src%2Ftest%2Fui%2Ftry-on-option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-on-option.stderr?ref=fbc4168d809dae0408c2520ccfe585f564ad4a0b", "patch": "@@ -8,8 +8,8 @@ LL |     x?;\n    = note: required by `std::convert::From::from`\n help: consider converting the `Option<T>` into a `Result<T, _>` using `Option::ok_or` or `Option::ok_or_else`\n    |\n-LL |     x.ok_or_else(|_| /* error value */)?;\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     x.ok_or_else(|| /* error value */)?;\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n   --> $DIR/try-on-option.rs:13:5"}]}