{"sha": "15518a9c0c1c5f1774503c72072c73e64411d130", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NTE4YTljMGMxYzVmMTc3NDUwM2M3MjA3MmM3M2U2NDQxMWQxMzA=", "commit": {"author": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2015-08-10T21:14:30Z"}, "committer": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2015-08-12T09:09:56Z"}, "message": "Mention that the fast path is broken without SSE.", "tree": {"sha": "5993138e855140eabf852efa2d1846db05a3055f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5993138e855140eabf852efa2d1846db05a3055f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15518a9c0c1c5f1774503c72072c73e64411d130", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15518a9c0c1c5f1774503c72072c73e64411d130", "html_url": "https://github.com/rust-lang/rust/commit/15518a9c0c1c5f1774503c72072c73e64411d130", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15518a9c0c1c5f1774503c72072c73e64411d130/comments", "author": null, "committer": null, "parents": [{"sha": "82dbc2ea619cbfc98ca9ad2f9e06a5acd294cbe3", "url": "https://api.github.com/repos/rust-lang/rust/commits/82dbc2ea619cbfc98ca9ad2f9e06a5acd294cbe3", "html_url": "https://github.com/rust-lang/rust/commit/82dbc2ea619cbfc98ca9ad2f9e06a5acd294cbe3"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "f166bb9b3eb8deee0862b0a56f0b6dfd61879eee", "filename": "src/libcore/num/dec2flt/algorithm.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/15518a9c0c1c5f1774503c72072c73e64411d130/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15518a9c0c1c5f1774503c72072c73e64411d130/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs?ref=15518a9c0c1c5f1774503c72072c73e64411d130", "patch": "@@ -21,9 +21,8 @@ use super::num::{self, Big};\n /// Number of significand bits in Fp\n const P: u32 = 64;\n \n-// We simply store the best approximation for *all* exponents, so\n-// the variable \"h\" and the associated conditions can be omitted.\n-// This trades performance for space (11 KiB versus... 5 KiB or so?)\n+// We simply store the best approximation for *all* exponents, so the variable \"h\" and the\n+// associated conditions can be omitted. This trades performance for a couple kilobytes of space.\n \n fn power_of_ten(e: i16) -> Fp {\n     assert!(e >= table::MIN_E);\n@@ -37,6 +36,15 @@ fn power_of_ten(e: i16) -> Fp {\n ///\n /// This is extracted into a separate function so that it can be attempted before constructing\n /// a bignum.\n+///\n+/// The fast path crucially depends on arithmetic being correctly rounded, so on x86\n+/// without SSE or SSE2 it will be **wrong** (as in, off by one ULP occasionally), because the x87\n+/// FPU stack will round to 80 bit first before rounding to 64/32 bit. However, as such hardware\n+/// is extremely rare nowadays and in fact all in-tree target triples assume an SSE2-capable\n+/// microarchitecture, there is little incentive to deal with that. There's a test that will fail\n+/// when SSE or SSE2 is disabled, so people building their own non-SSE copy will get a heads up.\n+///\n+/// FIXME: It would nevertheless be nice if we had a good way to detect and deal with x87.\n pub fn fast_path<T: RawFloat>(integral: &[u8], fractional: &[u8], e: i64) -> Option<T> {\n     let num_digits = integral.len() + fractional.len();\n     // log_10(f64::max_sig) ~ 15.95. We compare the exact value to max_sig near the end,"}, {"sha": "b7ef956055e29738db6b75aa5a4c23b26adcbceb", "filename": "src/libcoretest/num/dec2flt/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/15518a9c0c1c5f1774503c72072c73e64411d130/src%2Flibcoretest%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15518a9c0c1c5f1774503c72072c73e64411d130/src%2Flibcoretest%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fdec2flt%2Fmod.rs?ref=15518a9c0c1c5f1774503c72072c73e64411d130", "patch": "@@ -90,6 +90,13 @@ fn zero() {\n     test_literal!(1e-500);\n }\n \n+#[test]\n+fn fast_path_correct() {\n+    // This number triggers the fast path and is handled incorrectly when compiling on\n+    // x86 without SSE2 (i.e., using the x87 FPU stack).\n+    test_literal!(1.448997445238699);\n+}\n+\n #[test]\n fn lonely_dot() {\n     assert_eq!(to_f64(\".\"), Ok(0.0));"}]}