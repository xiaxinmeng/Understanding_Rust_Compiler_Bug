{"sha": "fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNmI5NzBiZjhkMTIxODJhNjliMWU3YWUyMjJmM2UyZWJiYjkwMDM=", "commit": {"author": {"name": "Mikhail Zabaluev", "email": "mikhail.zabaluev@gmail.com", "date": "2015-02-05T11:53:32Z"}, "committer": {"name": "Mikhail Zabaluev", "email": "mikhail.zabaluev@gmail.com", "date": "2015-02-05T11:54:26Z"}, "message": "Replace one more slice::from_raw_mut_buf added with new io", "tree": {"sha": "c4c0bfc92d74061bbe6b5737420ddab35a4057da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4c0bfc92d74061bbe6b5737420ddab35a4057da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003", "html_url": "https://github.com/rust-lang/rust/commit/fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003/comments", "author": {"login": "mzabaluev", "id": 1198919, "node_id": "MDQ6VXNlcjExOTg5MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1198919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzabaluev", "html_url": "https://github.com/mzabaluev", "followers_url": "https://api.github.com/users/mzabaluev/followers", "following_url": "https://api.github.com/users/mzabaluev/following{/other_user}", "gists_url": "https://api.github.com/users/mzabaluev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzabaluev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzabaluev/subscriptions", "organizations_url": "https://api.github.com/users/mzabaluev/orgs", "repos_url": "https://api.github.com/users/mzabaluev/repos", "events_url": "https://api.github.com/users/mzabaluev/events{/privacy}", "received_events_url": "https://api.github.com/users/mzabaluev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mzabaluev", "id": 1198919, "node_id": "MDQ6VXNlcjExOTg5MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1198919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzabaluev", "html_url": "https://github.com/mzabaluev", "followers_url": "https://api.github.com/users/mzabaluev/followers", "following_url": "https://api.github.com/users/mzabaluev/following{/other_user}", "gists_url": "https://api.github.com/users/mzabaluev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzabaluev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzabaluev/subscriptions", "organizations_url": "https://api.github.com/users/mzabaluev/orgs", "repos_url": "https://api.github.com/users/mzabaluev/repos", "events_url": "https://api.github.com/users/mzabaluev/events{/privacy}", "received_events_url": "https://api.github.com/users/mzabaluev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac862816fc57fb6047986624d98f986cbfd40b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac862816fc57fb6047986624d98f986cbfd40b9", "html_url": "https://github.com/rust-lang/rust/commit/3ac862816fc57fb6047986624d98f986cbfd40b9"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "419bee1a624d3446b5724b1836b1d21157f089ba", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=fb6b970bf8d12182a69b1e7ae222f3e2ebbb9003", "patch": "@@ -24,7 +24,6 @@ use error::Error as StdError;\n use fmt;\n use iter::Iterator;\n use marker::Sized;\n-use mem;\n use ops::{Drop, FnOnce};\n use option::Option::{self, Some, None};\n use ptr::PtrExt;\n@@ -69,8 +68,8 @@ fn with_end_to_cap<F>(v: &mut Vec<u8>, f: F) -> Result<usize>\n     unsafe {\n         let n = try!(f({\n             let base = v.as_mut_ptr().offset(v.len() as isize);\n-            black_box(slice::from_raw_mut_buf(mem::copy_lifetime(v, &base),\n-                                              v.capacity() - v.len()))\n+            black_box(slice::from_raw_parts_mut(base,\n+                                                v.capacity() - v.len()))\n         }));\n \n         // If the closure (typically a `read` implementation) reported that it"}]}