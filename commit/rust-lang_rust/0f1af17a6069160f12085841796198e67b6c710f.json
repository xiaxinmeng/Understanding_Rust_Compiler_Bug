{"sha": "0f1af17a6069160f12085841796198e67b6c710f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMWFmMTdhNjA2OTE2MGYxMjA4NTg0MTc5NjE5OGU2N2I2YzcxMGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-08T19:09:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-08T19:29:10Z"}, "message": "Remove all uses of native cdecl except for those that yield", "tree": {"sha": "6ae434d7928fb32e8dd8298bb7f882e443ce7fb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ae434d7928fb32e8dd8298bb7f882e443ce7fb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1af17a6069160f12085841796198e67b6c710f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1af17a6069160f12085841796198e67b6c710f", "html_url": "https://github.com/rust-lang/rust/commit/0f1af17a6069160f12085841796198e67b6c710f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1af17a6069160f12085841796198e67b6c710f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a727bbaf70792b0a4315a95ef00ea911d7852be6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a727bbaf70792b0a4315a95ef00ea911d7852be6", "html_url": "https://github.com/rust-lang/rust/commit/a727bbaf70792b0a4315a95ef00ea911d7852be6"}], "stats": {"total": 85, "additions": 58, "deletions": 27}, "files": [{"sha": "520e7190ce830305f1a78d28adea7da01921e4a1", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -77,7 +77,7 @@ fn writeclose(fd: int, s: option::t<str>) {\n         writer.write_str(option::get(s));\n     }\n \n-    os::libc::close(fd);\n+    os::close(fd);\n }\n \n fn readclose(fd: int) -> str {\n@@ -89,7 +89,7 @@ fn readclose(fd: int) -> str {\n         let bytes = reader.read_bytes(4096u);\n         buf += str::unsafe_from_bytes(bytes);\n     }\n-    os::libc::fclose(file);\n+    os::fclose(file);\n     ret buf;\n }\n \n@@ -134,13 +134,13 @@ fn worker(p: port<request>) {\n                                     pipe_in.in, pipe_out.out, pipe_err.out);\n         let pid = maybe_with_lib_path(execparms.lib_path, spawnproc);\n \n-        os::libc::close(pipe_in.in);\n-        os::libc::close(pipe_out.out);\n-        os::libc::close(pipe_err.out);\n+        os::close(pipe_in.in);\n+        os::close(pipe_out.out);\n+        os::close(pipe_err.out);\n         if pid == -1 {\n-            os::libc::close(pipe_in.out);\n-            os::libc::close(pipe_out.in);\n-            os::libc::close(pipe_err.in);\n+            os::close(pipe_in.out);\n+            os::close(pipe_out.in);\n+            os::close(pipe_err.in);\n             fail;\n         }\n "}, {"sha": "cceaf14cfd0d84dbc10a2aa7acd08eb9610f1afb", "filename": "src/lib/linux_os.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Flinux_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Flinux_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Flinux_os.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -6,7 +6,7 @@ TODO: Restructure and document\n \n // FIXME Somehow merge stuff duplicated here and macosx_os.rs. Made difficult\n // by https://github.com/graydon/rust/issues#issue/268\n-native \"cdecl\" mod libc = \"\" {\n+native \"c-stack-cdecl\" mod libc = \"\" {\n     fn read(fd: int, buf: *u8, count: uint) -> int;\n     fn write(fd: int, buf: *u8, count: uint) -> int;\n     fn fread(buf: *u8, size: uint, n: uint, f: libc::FILE) -> uint;\n@@ -72,6 +72,14 @@ fn fd_FILE(fd: int) -> libc::FILE {\n     ret str::as_buf(\"r\", {|modebuf| libc::fdopen(fd, modebuf) });\n }\n \n+fn close(fd: int) -> int {\n+    libc::close(fd)\n+}\n+\n+fn fclose(file: libc::FILE) {\n+    libc::fclose(file)\n+}\n+\n fn waitpid(pid: int) -> int {\n     let status = 0;\n     assert (os::libc::waitpid(pid, status, 0) != -1);"}, {"sha": "bc1c6bdc8dd57aac6ad18d5249e5426d0f5b9c23", "filename": "src/lib/macos_os.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Fmacos_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Fmacos_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmacos_os.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -1,5 +1,5 @@\n \n-native \"cdecl\" mod libc = \"\" {\n+native \"c-stack-cdecl\" mod libc = \"\" {\n     fn read(fd: int, buf: *u8, count: uint) -> int;\n     fn write(fd: int, buf: *u8, count: uint) -> int;\n     fn fread(buf: *u8, size: uint, n: uint, f: libc::FILE) -> uint;\n@@ -65,6 +65,14 @@ fn fd_FILE(fd: int) -> libc::FILE {\n     ret str::as_buf(\"r\", {|modebuf| libc::fdopen(fd, modebuf) });\n }\n \n+fn close(fd: int) -> int {\n+    libc::close(fd)\n+}\n+\n+fn fclose(file: libc::FILE) {\n+    libc::fclose(file)\n+}\n+\n fn waitpid(pid: int) -> int {\n     let status = 0;\n     assert (os::libc::waitpid(pid, status, 0) != -1);"}, {"sha": "13a8b39c759abdb6c70edf1860080c3784b5f12d", "filename": "src/lib/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Funicode.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -148,7 +148,7 @@ mod icu {\n     // FIXME: should be -1, change when compiler supports negative\n     // constants\n \n-    native \"cdecl\" mod libicu = \"icuuc\" {\n+    native \"c-stack-cdecl\" mod libicu = \"icuuc\" {\n         fn u_hasBinaryProperty(c: UChar32, which: UProperty) -> UBool;\n     }\n }"}, {"sha": "ccf4dbceefa7977d261ea6cc708ae7d871c3acdb", "filename": "src/lib/win32_os.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Fwin32_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Flib%2Fwin32_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_os.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -1,5 +1,5 @@\n \n-native \"cdecl\" mod libc = \"\" {\n+native \"c-stack-cdecl\" mod libc = \"\" {\n     fn read(fd: int, buf: *u8, count: uint) -> int;\n     fn write(fd: int, buf: *u8, count: uint) -> int;\n     fn fread(buf: *u8, size: uint, n: uint, f: libc::FILE) -> uint;\n@@ -79,6 +79,14 @@ fn fd_FILE(fd: int) -> libc::FILE {\n     ret str::as_buf(\"r\", {|modebuf| libc::_fdopen(fd, modebuf) });\n }\n \n+fn close(fd: int) -> int {\n+    libc::close(fd)\n+}\n+\n+fn fclose(file: libc::FILE) {\n+    libc::fclose(file)\n+}\n+\n native \"c-stack-cdecl\" mod rustrt {\n     fn rust_process_wait(handle: int) -> int;\n     fn rust_getcwd() -> str;"}, {"sha": "1f7aa9129bfcb3112a8ef2b87d15396f256ec053", "filename": "src/test/compile-fail/native-unsafe-fn-called.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn-called.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn-called.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn-called.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n // error-pattern: safe function calls function marked unsafe\n-native \"cdecl\" mod test {\n+native \"c-stack-cdecl\" mod test {\n     unsafe fn free();\n }\n "}, {"sha": "5f980db30cf19dc660cfa792f627a96643845abe", "filename": "src/test/compile-fail/native-unsafe-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -1,7 +1,7 @@\n // -*- rust -*-\n // error-pattern: unsafe functions can only be called\n \n-native \"cdecl\" mod test {\n+native \"c-stack-cdecl\" mod test {\n     unsafe fn free();\n }\n "}, {"sha": "4ddabe857bb39ae5567b157a9110af0cade09eb6", "filename": "src/test/run-pass/bind-native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fbind-native.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fbind-native.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-native.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -2,7 +2,7 @@\n Can we bind native things?\n */\n \n-native \"cdecl\" mod rustrt {\n+native \"c-stack-cdecl\" mod rustrt {\n     fn task_yield();\n }\n "}, {"sha": "d98e0a3b6a188896fa74e60a46f69bec4c5121bf", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -117,15 +117,17 @@ fn test_fn() {\n     assert (h1 >= h2);\n }\n \n-native \"cdecl\" mod native_mod = \"\" {\n+native \"c-stack-cdecl\" mod native_mod = \"\" {\n     fn do_gc();\n     fn unsupervise();\n }\n \n-// FIXME: comparison of native fns\n+// FIXME (#1058): comparison of native fns\n fn test_native_fn() {\n+    /*\n     assert (native_mod::do_gc == native_mod::do_gc);\n     assert (native_mod::do_gc != native_mod::unsupervise);\n+    */\n }\n \n fn test_obj() {"}, {"sha": "c2d73f4636ce1072b05a711433eceadc8b4245f1", "filename": "src/test/run-pass/import-glob-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -20,7 +20,7 @@ mod a1 {\n //   |   |   |\n mod a2 {\n     //   |   |   |\n-    native \"cdecl\" mod b1 = \"\" {\n+    native \"c-stack-cdecl\" mod b1 = \"\" {\n         //   |   |   |\n         import a1::b2::*;\n         //   | <-/  -/"}, {"sha": "e8b2d64d7f210cc4c2408e8d2c151ef9876d346f", "filename": "src/test/run-pass/issue-506.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fissue-506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fissue-506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-506.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -1,3 +1,8 @@\n+// xfail-test\n+// FIXME: This test is no longer testing what it was intended to. It should\n+// be testing spawning of a native function, but is actually testing\n+// spawning some other function, then executing a native function.\n+\n /*\n   A reduced test case for Issue #506, provided by Rob Arnold.\n */"}, {"sha": "12eec6bc0fc7fe13a4d53a3160258429e7cb64fe", "filename": "src/test/run-pass/native-opaque-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -1,6 +1,6 @@\n \n \n-native \"cdecl\" mod libc = \"\" {\n+native \"c-stack-cdecl\" mod libc = \"\" {\n     type file_handle;\n }\n "}, {"sha": "c3dcf902521ce1402a2cc6fbacea2596c5b9ac10", "filename": "src/test/run-pass/native2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fnative2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Frun-pass%2Fnative2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative2.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -6,12 +6,12 @@ native \"c-stack-cdecl\" mod rustrt {\n \n native \"c-stack-cdecl\" mod bar = \"\" { }\n \n-native \"cdecl\" mod zed = \"\" { }\n+native \"c-stack-cdecl\" mod zed = \"\" { }\n \n-native \"cdecl\" mod libc = \"\" {\n+native \"c-stack-cdecl\" mod libc = \"\" {\n     fn write(fd: int, buf: *u8, count: uint) -> int;\n }\n \n-native \"cdecl\" mod baz = \"\" { }\n+native \"c-stack-cdecl\" mod baz = \"\" { }\n \n fn main(args: [str]) { }"}, {"sha": "912ef50388301edaa4e661844c5fd7c196648679", "filename": "src/test/stdtest/run.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Fstdtest%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1af17a6069160f12085841796198e67b6c710f/src%2Ftest%2Fstdtest%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Frun.rs?ref=0f1af17a6069160f12085841796198e67b6c710f", "patch": "@@ -22,9 +22,9 @@ fn test_pipes() unsafe {\n \n     let pid =\n         run::spawn_process(\"cat\", [], pipe_in.in, pipe_out.out, pipe_err.out);\n-    os::libc::close(pipe_in.in);\n-    os::libc::close(pipe_out.out);\n-    os::libc::close(pipe_err.out);\n+    os::close(pipe_in.in);\n+    os::close(pipe_out.out);\n+    os::close(pipe_err.out);\n \n     if pid == -1 { fail; }\n     let expected = \"test\";\n@@ -41,7 +41,7 @@ fn test_pipes() unsafe {\n         let writer = io::new_writer(io::fd_buf_writer(fd, option::none));\n         writer.write_str(s);\n \n-        os::libc::close(fd);\n+        os::close(fd);\n     }\n \n     fn readclose(fd: int) -> str unsafe {\n@@ -53,7 +53,7 @@ fn test_pipes() unsafe {\n             let bytes = reader.read_bytes(4096u);\n             buf += str::unsafe_from_bytes(bytes);\n         }\n-        os::libc::fclose(file);\n+        os::fclose(file);\n         ret buf;\n     }\n }"}]}