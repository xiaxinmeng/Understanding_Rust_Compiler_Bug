{"sha": "14c0a708cc33245d86d48b99d7dc93a6f5b9d20d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YzBhNzA4Y2MzMzI0NWQ4NmQ0OGI5OWQ3ZGM5M2E2ZjViOWQyMGQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-01T16:34:28Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-14T01:11:13Z"}, "message": "syntax/ast_util: add `is_by_value_binop()`", "tree": {"sha": "3152f2717309fcee3fed6fe12da4874a65735767", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3152f2717309fcee3fed6fe12da4874a65735767"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14c0a708cc33245d86d48b99d7dc93a6f5b9d20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14c0a708cc33245d86d48b99d7dc93a6f5b9d20d", "html_url": "https://github.com/rust-lang/rust/commit/14c0a708cc33245d86d48b99d7dc93a6f5b9d20d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14c0a708cc33245d86d48b99d7dc93a6f5b9d20d/comments", "author": null, "committer": null, "parents": [{"sha": "444fa1b7cffcd99ca5b8abb51acf979f06a25899", "url": "https://api.github.com/repos/rust-lang/rust/commits/444fa1b7cffcd99ca5b8abb51acf979f06a25899", "html_url": "https://github.com/rust-lang/rust/commit/444fa1b7cffcd99ca5b8abb51acf979f06a25899"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "71ce4847922d356de331fe2843bd2f0ccec0c07d", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/14c0a708cc33245d86d48b99d7dc93a6f5b9d20d/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c0a708cc33245d86d48b99d7dc93a6f5b9d20d/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=14c0a708cc33245d86d48b99d7dc93a6f5b9d20d", "patch": "@@ -85,6 +85,16 @@ pub fn is_shift_binop(b: BinOp) -> bool {\n     }\n }\n \n+/// Returns `true` is the binary operator takes its arguments by value\n+pub fn is_by_value_binop(b: BinOp) -> bool {\n+    match b {\n+        BiAdd | BiSub | BiMul | BiDiv | BiRem | BiBitXor | BiBitAnd | BiBitOr | BiShl | BiShr => {\n+            true\n+        }\n+        _ => false\n+    }\n+}\n+\n pub fn unop_to_string(op: UnOp) -> &'static str {\n     match op {\n       UnUniq => \"box() \","}]}