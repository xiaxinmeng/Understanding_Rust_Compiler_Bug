{"sha": "ea562aeed553eaee9961a2adb259f48ffbe83666", "node_id": "C_kwDOAAsO6NoAKGVhNTYyYWVlZDU1M2VhZWU5OTYxYTJhZGIyNTlmNDhmZmJlODM2NjY", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-01-16T04:17:32Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-01-16T04:17:32Z"}, "message": "Add nll revision for issue-92096 test that passes", "tree": {"sha": "921a3fdba68adbfc654b5571d83d1af2d44216d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/921a3fdba68adbfc654b5571d83d1af2d44216d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea562aeed553eaee9961a2adb259f48ffbe83666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea562aeed553eaee9961a2adb259f48ffbe83666", "html_url": "https://github.com/rust-lang/rust/commit/ea562aeed553eaee9961a2adb259f48ffbe83666", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea562aeed553eaee9961a2adb259f48ffbe83666/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad57295fc9f5b0c747ae4f72d6208ccf03b94b0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad57295fc9f5b0c747ae4f72d6208ccf03b94b0b", "html_url": "https://github.com/rust-lang/rust/commit/ad57295fc9f5b0c747ae4f72d6208ccf03b94b0b"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "72ade5774d749898fba7524c13e2a95cbcf6c42f", "filename": "src/test/ui/generic-associated-types/issue-92096.migrate.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea562aeed553eaee9961a2adb259f48ffbe83666/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-92096.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea562aeed553eaee9961a2adb259f48ffbe83666/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-92096.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-92096.migrate.stderr?ref=ea562aeed553eaee9961a2adb259f48ffbe83666", "patch": "@@ -1,13 +1,13 @@\n error[E0311]: the parameter type `C` may not live long enough\n-  --> $DIR/issue-92096.rs:18:33\n+  --> $DIR/issue-92096.rs:20:33\n    |\n LL | fn call_connect<C>(c: &'_ C) -> impl '_ + Future + Send\n    |                 -               ^^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `C` will meet its required lifetime bounds\n    |                 |\n    |                 help: consider adding an explicit lifetime bound...: `C: 'a`\n \n error[E0311]: the parameter type `C` may not live long enough\n-  --> $DIR/issue-92096.rs:18:33\n+  --> $DIR/issue-92096.rs:20:33\n    |\n LL | fn call_connect<C>(c: &'_ C) -> impl '_ + Future + Send\n    |                 -               ^^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `C` will meet its required lifetime bounds", "previous_filename": "src/test/ui/generic-associated-types/issue-92096.stderr"}, {"sha": "066132a5d98bb8bea0323094eb2f72dcf672b3e2", "filename": "src/test/ui/generic-associated-types/issue-92096.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea562aeed553eaee9961a2adb259f48ffbe83666/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-92096.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea562aeed553eaee9961a2adb259f48ffbe83666/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-92096.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-92096.rs?ref=ea562aeed553eaee9961a2adb259f48ffbe83666", "patch": "@@ -1,8 +1,10 @@\n // edition:2018\n-// check-fail\n-// FIXME(generic_associated_types): this should pass, but we end up\n-// essentially requiring that `for<'s> C: 's`\n+// [nll] check-pass\n+// revisions: migrate nll\n+// Explicitly testing nll with revision, so ignore compare-mode=nll\n+// ignore-compare-mode-nll\n \n+#![cfg_attr(nll, feature(nll))]\n #![feature(generic_associated_types)]\n \n use std::future::Future;\n@@ -16,8 +18,8 @@ trait Client {\n }\n \n fn call_connect<C>(c: &'_ C) -> impl '_ + Future + Send\n-//~^ ERROR the parameter\n-//~| ERROR the parameter\n+//[migrate]~^ ERROR the parameter\n+//[migrate]~| ERROR the parameter\n where\n     C: Client + Send + Sync,\n {"}]}