{"sha": "cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1", "node_id": "C_kwDOAAsO6NoAKGNmZjNmMWU4ZDUyYTFiZDYzNDAzNjJjYmU3Njg5ZGQ2ZmE0ZjcyZTE", "commit": {"author": {"name": "Geoffry Song", "email": "goffrie@dropbox.com", "date": "2022-04-20T00:46:50Z"}, "committer": {"name": "Geoffry Song", "email": "goffrie@dropbox.com", "date": "2022-04-20T00:50:03Z"}, "message": "remove_dir_all_recursive: treat ELOOP the same as ENOTDIR", "tree": {"sha": "71dac520cc995bc6379365375b5a7700935ade29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71dac520cc995bc6379365375b5a7700935ade29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1", "html_url": "https://github.com/rust-lang/rust/commit/cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1/comments", "author": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8305398d7ae6128811ec2b3223939bcd067530c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8305398d7ae6128811ec2b3223939bcd067530c2", "html_url": "https://github.com/rust-lang/rust/commit/8305398d7ae6128811ec2b3223939bcd067530c2"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a60b19976ba4e0d4376ba9396db9229e4f45fdc2", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=cff3f1e8d52a1bd6340362cbe7689dd6fa4f72e1", "patch": "@@ -1647,8 +1647,9 @@ mod remove_dir_impl {\n     fn remove_dir_all_recursive(parent_fd: Option<RawFd>, path: &CStr) -> io::Result<()> {\n         // try opening as directory\n         let fd = match openat_nofollow_dironly(parent_fd, &path) {\n-            Err(err) if err.raw_os_error() == Some(libc::ENOTDIR) => {\n+            Err(err) if matches!(err.raw_os_error(), Some(libc::ENOTDIR | libc::ELOOP)) => {\n                 // not a directory - don't traverse further\n+                // (for symlinks, older Linux kernels may return ELOOP instead of ENOTDIR)\n                 return match parent_fd {\n                     // unlink...\n                     Some(parent_fd) => {"}]}