{"sha": "fdb899ba4bd5dffab4eec9ea575991ec5499a527", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYjg5OWJhNGJkNWRmZmFiNGVlYzllYTU3NTk5MWVjNTQ5OWE1Mjc=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-03-09T01:46:03Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-03-09T01:49:34Z"}, "message": "WASI: Switch to crt1-command.o to enable support for new-style commands\n\nThis switches Rust's WASI target to use crt1-command.o instead of\ncrt1.o, which enables support for new-style commands. By default,\nnew-style commands work the same way as old-style commands, so nothing\nimmediately changes here, but this will be needed by later changes to\nenable support for typed arguments.\n\nSee here for more information on new-style commands:\n - https://github.com/WebAssembly/wasi-libc/pull/203\n - https://reviews.llvm.org/D81689", "tree": {"sha": "afecf6570b564ea715d79e918ffe39aa2cd8d3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afecf6570b564ea715d79e918ffe39aa2cd8d3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdb899ba4bd5dffab4eec9ea575991ec5499a527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb899ba4bd5dffab4eec9ea575991ec5499a527", "html_url": "https://github.com/rust-lang/rust/commit/fdb899ba4bd5dffab4eec9ea575991ec5499a527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdb899ba4bd5dffab4eec9ea575991ec5499a527/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f349be27815d43d462a32faeb270a22a68486b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f349be27815d43d462a32faeb270a22a68486b6", "html_url": "https://github.com/rust-lang/rust/commit/8f349be27815d43d462a32faeb270a22a68486b6"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "2fc9ab29f92f46f3cee525d6c4346355f6a492fa", "filename": "compiler/rustc_target/src/spec/crt_objects.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fdb899ba4bd5dffab4eec9ea575991ec5499a527/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb899ba4bd5dffab4eec9ea575991ec5499a527/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs?ref=fdb899ba4bd5dffab4eec9ea575991ec5499a527", "patch": "@@ -108,11 +108,13 @@ pub(super) fn post_mingw() -> CrtObjects {\n }\n \n pub(super) fn pre_wasi_fallback() -> CrtObjects {\n+    // Use crt1-command.o instead of crt1.o to enable support for new-style\n+    // commands. See https://reviews.llvm.org/D81689 for more info.\n     new(&[\n-        (LinkOutputKind::DynamicNoPicExe, &[\"crt1.o\"]),\n-        (LinkOutputKind::DynamicPicExe, &[\"crt1.o\"]),\n-        (LinkOutputKind::StaticNoPicExe, &[\"crt1.o\"]),\n-        (LinkOutputKind::StaticPicExe, &[\"crt1.o\"]),\n+        (LinkOutputKind::DynamicNoPicExe, &[\"crt1-command.o\"]),\n+        (LinkOutputKind::DynamicPicExe, &[\"crt1-command.o\"]),\n+        (LinkOutputKind::StaticNoPicExe, &[\"crt1-command.o\"]),\n+        (LinkOutputKind::StaticPicExe, &[\"crt1-command.o\"]),\n         (LinkOutputKind::WasiReactorExe, &[\"crt1-reactor.o\"]),\n     ])\n }"}, {"sha": "9398f211721b82997152f89cb5d4fc3992c39181", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdb899ba4bd5dffab4eec9ea575991ec5499a527/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb899ba4bd5dffab4eec9ea575991ec5499a527/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=fdb899ba4bd5dffab4eec9ea575991ec5499a527", "patch": "@@ -210,7 +210,7 @@ fn copy_self_contained_objects(\n                 panic!(\"Target {:?} does not have a \\\"wasi-root\\\" key\", target.triple)\n             })\n             .join(\"lib/wasm32-wasi\");\n-        for &obj in &[\"crt1.o\", \"crt1-reactor.o\"] {\n+        for &obj in &[\"crt1-command.o\", \"crt1-reactor.o\"] {\n             copy_and_stamp(\n                 builder,\n                 &libdir_self_contained,"}]}