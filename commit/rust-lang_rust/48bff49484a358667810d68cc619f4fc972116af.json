{"sha": "48bff49484a358667810d68cc619f4fc972116af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YmZmNDk0ODRhMzU4NjY3ODEwZDY4Y2M2MTlmNGZjOTcyMTE2YWY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-07-15T19:27:44Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-07-16T19:23:43Z"}, "message": "UI Test Cleanup: Split up checked_unwrap tests\n\nThis splits up `tests/ui/checked_unwrap.rs` into:\n\n * `tests/ui/checked_unwrap/complex.rs`\n * `tests/ui/checked_unwrap/simple.rs`\n\nBased on the naming of the methods in the tests.\n\ncc #2038", "tree": {"sha": "59c9e0e3e7ccd598a15ee75c3923ecb5c7660ed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59c9e0e3e7ccd598a15ee75c3923ecb5c7660ed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48bff49484a358667810d68cc619f4fc972116af", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl0uJEAQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5vh6D/46BQb4XwoihDZqt4vkW3fbG8f/2djktIcG\n3G+wiUSUAvX/I+7BDhgwLcrAbkNfmYBQ4/5tD+dSZ+SNLarq5kOs0UTkBMXWhGGz\n922cLLgeebfza8Ftr3Y3LJkS8yAFtI3TrwEtuZTFyvwdlXvuz7xZ01tsVEGnJXlj\nSyfiNW7+x7l1jz9eSTzstsz6hrq+ncKcGpJqxnRgJ5zG/n5IFf8Jb8ELklthS4NA\nXAMaBKn7FUAPhBYLsOtyvlqdb0DQWScCC8SVgYKIvcnR2B+kqRjT4u6uoplcEzJS\nEyGRemm11xvJoYZ3YOmWeOBmg7nqQZcoxE0sEYhe9z6HJsYHEbpmBxhJkz7lqUhW\n/stKLI1aQJTjMREgmU470E+yvfWtetLf8O9pI0FWHNTJwgE08sF5eq+fMPy653xs\n9hY0R10atAEQzmpvfBCdtU54puMVWsSl3ELWsfaGp3iF7Lzf+1w1yW9EOQfy1O5J\nsd0BIrXgdZaZ1uap5228yeQ604hIOOPdt1wZh+QnFrxB7hYp/NBI6Rj7136fvJJ8\n97S8V25AJ28p7KtwHArfyq7w2nqCf8VcfCaCtDcskWb0EqbvhKeemuujzJzROxXO\ntyQZ1IRg6A+CfraiawQsn/CZmz9N/2QzN9Um0YQUeuHalBEkAdJp9fHG8U66vKqR\nPv18maL9HQ==\n=eXfP\n-----END PGP SIGNATURE-----", "payload": "tree 59c9e0e3e7ccd598a15ee75c3923ecb5c7660ed9\nparent a73bb33399fcf5684450a2088fc961cf9aa0285b\nauthor Philipp Hansch <dev@phansch.net> 1563218864 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1563305023 +0200\n\nUI Test Cleanup: Split up checked_unwrap tests\n\nThis splits up `tests/ui/checked_unwrap.rs` into:\n\n * `tests/ui/checked_unwrap/complex.rs`\n * `tests/ui/checked_unwrap/simple.rs`\n\nBased on the naming of the methods in the tests.\n\ncc #2038\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48bff49484a358667810d68cc619f4fc972116af", "html_url": "https://github.com/rust-lang/rust/commit/48bff49484a358667810d68cc619f4fc972116af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48bff49484a358667810d68cc619f4fc972116af/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a73bb33399fcf5684450a2088fc961cf9aa0285b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a73bb33399fcf5684450a2088fc961cf9aa0285b", "html_url": "https://github.com/rust-lang/rust/commit/a73bb33399fcf5684450a2088fc961cf9aa0285b"}], "stats": {"total": 364, "additions": 191, "deletions": 173}, "files": [{"sha": "fbeee1b572a6c818cbd35a450b1f110b75f920fe", "filename": "tests/ui/checked_unwrap/complex_conditionals.rs", "status": "renamed", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs?ref=48bff49484a358667810d68cc619f4fc972116af", "patch": "@@ -1,44 +1,6 @@\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n #![allow(clippy::if_same_then_else)]\n \n-fn main() {\n-    let x = Some(());\n-    if x.is_some() {\n-        x.unwrap(); // unnecessary\n-    } else {\n-        x.unwrap(); // will panic\n-    }\n-    if x.is_none() {\n-        x.unwrap(); // will panic\n-    } else {\n-        x.unwrap(); // unnecessary\n-    }\n-    let mut x: Result<(), ()> = Ok(());\n-    if x.is_ok() {\n-        x.unwrap(); // unnecessary\n-        x.unwrap_err(); // will panic\n-    } else {\n-        x.unwrap(); // will panic\n-        x.unwrap_err(); // unnecessary\n-    }\n-    if x.is_err() {\n-        x.unwrap(); // will panic\n-        x.unwrap_err(); // unnecessary\n-    } else {\n-        x.unwrap(); // unnecessary\n-        x.unwrap_err(); // will panic\n-    }\n-    if x.is_ok() {\n-        x = Err(());\n-        x.unwrap(); // not unnecessary because of mutation of x\n-                    // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n-    } else {\n-        x = Ok(());\n-        x.unwrap_err(); // not unnecessary because of mutation of x\n-                        // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n-    }\n-}\n-\n fn test_complex_conditions() {\n     let x: Result<(), ()> = Ok(());\n     let y: Result<(), ()> = Ok(());\n@@ -99,3 +61,5 @@ fn test_nested() {\n         }\n     }\n }\n+\n+fn main() {}", "previous_filename": "tests/ui/checked_unwrap.rs"}, {"sha": "a2207314aeec5605e17d2a4d699bd22223acde89", "filename": "tests/ui/checked_unwrap/complex_conditionals.stderr", "status": "renamed", "additions": 31, "deletions": 135, "changes": 166, "blob_url": "https://github.com/rust-lang/rust/blob/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr?ref=48bff49484a358667810d68cc619f4fc972116af", "patch": "@@ -1,138 +1,34 @@\n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:7:9\n+  --> $DIR/complex_conditionals.rs:8:9\n    |\n-LL |     if x.is_some() {\n-   |        ----------- the check is happening here\n+LL |     if x.is_ok() && y.is_err() {\n+   |        --------- the check is happening here\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/checked_unwrap.rs:1:35\n+  --> $DIR/complex_conditionals.rs:1:35\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:9:9\n-   |\n-LL |     if x.is_some() {\n-   |        ----------- because of this check\n-...\n-LL |         x.unwrap(); // will panic\n-   |         ^^^^^^^^^^\n-   |\n-note: lint level defined here\n-  --> $DIR/checked_unwrap.rs:1:9\n-   |\n-LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:12:9\n-   |\n-LL |     if x.is_none() {\n-   |        ----------- because of this check\n-LL |         x.unwrap(); // will panic\n-   |         ^^^^^^^^^^\n-\n-error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:14:9\n-   |\n-LL |     if x.is_none() {\n-   |        ----------- the check is happening here\n-...\n-LL |         x.unwrap(); // unnecessary\n-   |         ^^^^^^^^^^\n-\n-error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:18:9\n-   |\n-LL |     if x.is_ok() {\n-   |        --------- the check is happening here\n-LL |         x.unwrap(); // unnecessary\n-   |         ^^^^^^^^^^\n-\n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:19:9\n+  --> $DIR/complex_conditionals.rs:9:9\n    |\n-LL |     if x.is_ok() {\n-   |        --------- because of this check\n-LL |         x.unwrap(); // unnecessary\n-LL |         x.unwrap_err(); // will panic\n-   |         ^^^^^^^^^^^^^^\n-\n-error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:21:9\n-   |\n-LL |     if x.is_ok() {\n+LL |     if x.is_ok() && y.is_err() {\n    |        --------- because of this check\n-...\n-LL |         x.unwrap(); // will panic\n-   |         ^^^^^^^^^^\n-\n-error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:22:9\n-   |\n-LL |     if x.is_ok() {\n-   |        --------- the check is happening here\n-...\n-LL |         x.unwrap_err(); // unnecessary\n-   |         ^^^^^^^^^^^^^^\n-\n-error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:25:9\n-   |\n-LL |     if x.is_err() {\n-   |        ---------- because of this check\n-LL |         x.unwrap(); // will panic\n-   |         ^^^^^^^^^^\n-\n-error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:26:9\n-   |\n-LL |     if x.is_err() {\n-   |        ---------- the check is happening here\n-LL |         x.unwrap(); // will panic\n-LL |         x.unwrap_err(); // unnecessary\n-   |         ^^^^^^^^^^^^^^\n-\n-error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:28:9\n-   |\n-LL |     if x.is_err() {\n-   |        ---------- the check is happening here\n-...\n LL |         x.unwrap(); // unnecessary\n-   |         ^^^^^^^^^^\n-\n-error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:29:9\n-   |\n-LL |     if x.is_err() {\n-   |        ---------- because of this check\n-...\n LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n-\n-error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:46:9\n    |\n-LL |     if x.is_ok() && y.is_err() {\n-   |        --------- the check is happening here\n-LL |         x.unwrap(); // unnecessary\n-   |         ^^^^^^^^^^\n-\n-error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:47:9\n+note: lint level defined here\n+  --> $DIR/complex_conditionals.rs:1:9\n    |\n-LL |     if x.is_ok() && y.is_err() {\n-   |        --------- because of this check\n-LL |         x.unwrap(); // unnecessary\n-LL |         x.unwrap_err(); // will panic\n-   |         ^^^^^^^^^^^^^^\n+LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:48:9\n+  --> $DIR/complex_conditionals.rs:10:9\n    |\n LL |     if x.is_ok() && y.is_err() {\n    |                     ---------- because of this check\n@@ -141,7 +37,7 @@ LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:49:9\n+  --> $DIR/complex_conditionals.rs:11:9\n    |\n LL |     if x.is_ok() && y.is_err() {\n    |                     ---------- the check is happening here\n@@ -150,7 +46,7 @@ LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:63:9\n+  --> $DIR/complex_conditionals.rs:25:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |        --------- because of this check\n@@ -159,7 +55,7 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:64:9\n+  --> $DIR/complex_conditionals.rs:26:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |        --------- the check is happening here\n@@ -168,7 +64,7 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:65:9\n+  --> $DIR/complex_conditionals.rs:27:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |                     --------- because of this check\n@@ -177,7 +73,7 @@ LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:66:9\n+  --> $DIR/complex_conditionals.rs:28:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |                     --------- the check is happening here\n@@ -186,15 +82,15 @@ LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:70:9\n+  --> $DIR/complex_conditionals.rs:32:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- the check is happening here\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:71:9\n+  --> $DIR/complex_conditionals.rs:33:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- because of this check\n@@ -203,7 +99,7 @@ LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:72:9\n+  --> $DIR/complex_conditionals.rs:34:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- because of this check\n@@ -212,7 +108,7 @@ LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:73:9\n+  --> $DIR/complex_conditionals.rs:35:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- the check is happening here\n@@ -221,7 +117,7 @@ LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:74:9\n+  --> $DIR/complex_conditionals.rs:36:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- the check is happening here\n@@ -230,7 +126,7 @@ LL |         z.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:75:9\n+  --> $DIR/complex_conditionals.rs:37:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- because of this check\n@@ -239,7 +135,7 @@ LL |         z.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:83:9\n+  --> $DIR/complex_conditionals.rs:45:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- because of this check\n@@ -248,7 +144,7 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:84:9\n+  --> $DIR/complex_conditionals.rs:46:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- the check is happening here\n@@ -257,7 +153,7 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:85:9\n+  --> $DIR/complex_conditionals.rs:47:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- the check is happening here\n@@ -266,7 +162,7 @@ LL |         y.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:86:9\n+  --> $DIR/complex_conditionals.rs:48:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- because of this check\n@@ -275,7 +171,7 @@ LL |         y.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:87:9\n+  --> $DIR/complex_conditionals.rs:49:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- because of this check\n@@ -284,7 +180,7 @@ LL |         z.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:88:9\n+  --> $DIR/complex_conditionals.rs:50:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- the check is happening here\n@@ -293,21 +189,21 @@ LL |         z.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:96:13\n+  --> $DIR/complex_conditionals.rs:58:13\n    |\n LL |         if x.is_some() {\n    |            ----------- the check is happening here\n LL |             x.unwrap(); // unnecessary\n    |             ^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:98:13\n+  --> $DIR/complex_conditionals.rs:60:13\n    |\n LL |         if x.is_some() {\n    |            ----------- because of this check\n ...\n LL |             x.unwrap(); // will panic\n    |             ^^^^^^^^^^\n \n-error: aborting due to 34 previous errors\n+error: aborting due to 22 previous errors\n ", "previous_filename": "tests/ui/checked_unwrap.stderr"}, {"sha": "c20c4a7a70091f9647244cfb32c0111a5c531e9e", "filename": "tests/ui/checked_unwrap/simple_conditionals.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs?ref=48bff49484a358667810d68cc619f4fc972116af", "patch": "@@ -0,0 +1,40 @@\n+#![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+#![allow(clippy::if_same_then_else)]\n+\n+fn main() {\n+    let x = Some(());\n+    if x.is_some() {\n+        x.unwrap(); // unnecessary\n+    } else {\n+        x.unwrap(); // will panic\n+    }\n+    if x.is_none() {\n+        x.unwrap(); // will panic\n+    } else {\n+        x.unwrap(); // unnecessary\n+    }\n+    let mut x: Result<(), ()> = Ok(());\n+    if x.is_ok() {\n+        x.unwrap(); // unnecessary\n+        x.unwrap_err(); // will panic\n+    } else {\n+        x.unwrap(); // will panic\n+        x.unwrap_err(); // unnecessary\n+    }\n+    if x.is_err() {\n+        x.unwrap(); // will panic\n+        x.unwrap_err(); // unnecessary\n+    } else {\n+        x.unwrap(); // unnecessary\n+        x.unwrap_err(); // will panic\n+    }\n+    if x.is_ok() {\n+        x = Err(());\n+        x.unwrap(); // not unnecessary because of mutation of x\n+                    // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n+    } else {\n+        x = Ok(());\n+        x.unwrap_err(); // not unnecessary because of mutation of x\n+                        // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n+    }\n+}"}, {"sha": "58a38cd8209ccaf885386d029faeee502a41d36e", "filename": "tests/ui/checked_unwrap/simple_conditionals.stderr", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bff49484a358667810d68cc619f4fc972116af/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr?ref=48bff49484a358667810d68cc619f4fc972116af", "patch": "@@ -0,0 +1,118 @@\n+error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/simple_conditionals.rs:7:9\n+   |\n+LL |     if x.is_some() {\n+   |        ----------- the check is happening here\n+LL |         x.unwrap(); // unnecessary\n+   |         ^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/simple_conditionals.rs:1:35\n+   |\n+LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: This call to `unwrap()` will always panic.\n+  --> $DIR/simple_conditionals.rs:9:9\n+   |\n+LL |     if x.is_some() {\n+   |        ----------- because of this check\n+...\n+LL |         x.unwrap(); // will panic\n+   |         ^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/simple_conditionals.rs:1:9\n+   |\n+LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: This call to `unwrap()` will always panic.\n+  --> $DIR/simple_conditionals.rs:12:9\n+   |\n+LL |     if x.is_none() {\n+   |        ----------- because of this check\n+LL |         x.unwrap(); // will panic\n+   |         ^^^^^^^^^^\n+\n+error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/simple_conditionals.rs:14:9\n+   |\n+LL |     if x.is_none() {\n+   |        ----------- the check is happening here\n+...\n+LL |         x.unwrap(); // unnecessary\n+   |         ^^^^^^^^^^\n+\n+error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/simple_conditionals.rs:18:9\n+   |\n+LL |     if x.is_ok() {\n+   |        --------- the check is happening here\n+LL |         x.unwrap(); // unnecessary\n+   |         ^^^^^^^^^^\n+\n+error: This call to `unwrap_err()` will always panic.\n+  --> $DIR/simple_conditionals.rs:19:9\n+   |\n+LL |     if x.is_ok() {\n+   |        --------- because of this check\n+LL |         x.unwrap(); // unnecessary\n+LL |         x.unwrap_err(); // will panic\n+   |         ^^^^^^^^^^^^^^\n+\n+error: This call to `unwrap()` will always panic.\n+  --> $DIR/simple_conditionals.rs:21:9\n+   |\n+LL |     if x.is_ok() {\n+   |        --------- because of this check\n+...\n+LL |         x.unwrap(); // will panic\n+   |         ^^^^^^^^^^\n+\n+error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/simple_conditionals.rs:22:9\n+   |\n+LL |     if x.is_ok() {\n+   |        --------- the check is happening here\n+...\n+LL |         x.unwrap_err(); // unnecessary\n+   |         ^^^^^^^^^^^^^^\n+\n+error: This call to `unwrap()` will always panic.\n+  --> $DIR/simple_conditionals.rs:25:9\n+   |\n+LL |     if x.is_err() {\n+   |        ---------- because of this check\n+LL |         x.unwrap(); // will panic\n+   |         ^^^^^^^^^^\n+\n+error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/simple_conditionals.rs:26:9\n+   |\n+LL |     if x.is_err() {\n+   |        ---------- the check is happening here\n+LL |         x.unwrap(); // will panic\n+LL |         x.unwrap_err(); // unnecessary\n+   |         ^^^^^^^^^^^^^^\n+\n+error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/simple_conditionals.rs:28:9\n+   |\n+LL |     if x.is_err() {\n+   |        ---------- the check is happening here\n+...\n+LL |         x.unwrap(); // unnecessary\n+   |         ^^^^^^^^^^\n+\n+error: This call to `unwrap_err()` will always panic.\n+  --> $DIR/simple_conditionals.rs:29:9\n+   |\n+LL |     if x.is_err() {\n+   |        ---------- because of this check\n+...\n+LL |         x.unwrap_err(); // will panic\n+   |         ^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}]}