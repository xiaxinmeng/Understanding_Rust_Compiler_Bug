{"sha": "a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZjU0ZjVkZmRmZGYwMDE3ZmZlY2ZiY2Q2ZjQzMzUyYjhiNzFjYTE=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-04-01T16:30:47Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-04-05T11:35:51Z"}, "message": "Renaming the lint to branches_sharing_code and fixing typos", "tree": {"sha": "2ddb446dad2a9f74f64844a0de370fbe1f7563be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ddb446dad2a9f74f64844a0de370fbe1f7563be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "html_url": "https://github.com/rust-lang/rust/commit/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c9e192e055f8b8a8a5f8b177c415440bc2333ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9e192e055f8b8a8a5f8b177c415440bc2333ce", "html_url": "https://github.com/rust-lang/rust/commit/7c9e192e055f8b8a8a5f8b177c415440bc2333ce"}], "stats": {"total": 140, "additions": 71, "deletions": 69}, "files": [{"sha": "73997192ae0d5537db33b9c7a1f52990cf0d3c21", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -2129,6 +2129,7 @@ Released 2018-09-13\n [`borrowed_box`]: https://rust-lang.github.io/rust-clippy/master/index.html#borrowed_box\n [`box_vec`]: https://rust-lang.github.io/rust-clippy/master/index.html#box_vec\n [`boxed_local`]: https://rust-lang.github.io/rust-clippy/master/index.html#boxed_local\n+[`branches_sharing_code`]: https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code\n [`builtin_type_shadow`]: https://rust-lang.github.io/rust-clippy/master/index.html#builtin_type_shadow\n [`bytes_nth`]: https://rust-lang.github.io/rust-clippy/master/index.html#bytes_nth\n [`cargo_common_metadata`]: https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata\n@@ -2455,7 +2456,6 @@ Released 2018-09-13\n [`shadow_reuse`]: https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse\n [`shadow_same`]: https://rust-lang.github.io/rust-clippy/master/index.html#shadow_same\n [`shadow_unrelated`]: https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated\n-[`shared_code_in_if_blocks`]: https://rust-lang.github.io/rust-clippy/master/index.html#shared_code_in_if_blocks\n [`short_circuit_statement`]: https://rust-lang.github.io/rust-clippy/master/index.html#short_circuit_statement\n [`should_assert_eq`]: https://rust-lang.github.io/rust-clippy/master/index.html#should_assert_eq\n [`should_implement_trait`]: https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait"}, {"sha": "1b982221b0653a57a8deb8eb7d645b7ba37d46c6", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,7 +1,8 @@\n-use crate::utils::{\n-    both, count_eq, eq_expr_value, first_line_of_span, get_enclosing_block, get_parent_expr, if_sequence, in_macro,\n-    indent_of, parent_node_is_if_expr, reindent_multiline, run_lints, search_same, snippet, snippet_opt,\n-    span_lint_and_note, span_lint_and_then, ContainsName, SpanlessEq, SpanlessHash,\n+use clippy_utils::diagnostics::{span_lint_and_note, span_lint_and_then};\n+use clippy_utils::source::{first_line_of_span, indent_of, reindent_multiline, snippet, snippet_opt};\n+use clippy_utils::{\n+    both, count_eq, eq_expr_value, get_enclosing_block, get_parent_expr, if_sequence, in_macro, parent_node_is_if_expr,\n+    run_lints, search_same, ContainsName, SpanlessEq, SpanlessHash,\n };\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashSet;\n@@ -141,7 +142,7 @@ declare_clippy_lint! {\n     ///     42\n     /// };\n     /// ```\n-    pub SHARED_CODE_IN_IF_BLOCKS,\n+    pub BRANCHES_SHARING_CODE,\n     complexity,\n     \"`if` statement with shared code in all blocks\"\n }\n@@ -150,7 +151,7 @@ declare_lint_pass!(CopyAndPaste => [\n     IFS_SAME_COND,\n     SAME_FUNCTIONS_IN_IF_CONDITION,\n     IF_SAME_THEN_ELSE,\n-    SHARED_CODE_IN_IF_BLOCKS\n+    BRANCHES_SHARING_CODE\n ]);\n \n impl<'tcx> LateLintPass<'tcx> for CopyAndPaste {\n@@ -173,17 +174,17 @@ impl<'tcx> LateLintPass<'tcx> for CopyAndPaste {\n                 lint_same_cond(cx, &conds);\n                 lint_same_fns_in_if_cond(cx, &conds);\n                 // Block duplication\n-                lint_same_then_else(cx, &blocks, conds.len() != blocks.len(), expr);\n+                lint_same_then_else(cx, &blocks, conds.len() == blocks.len(), expr);\n             }\n         }\n     }\n }\n \n-/// Implementation of `SHARED_CODE_IN_IF_BLOCKS` and `IF_SAME_THEN_ELSE` if the blocks are equal.\n+/// Implementation of `BRANCHES_SHARING_CODE` and `IF_SAME_THEN_ELSE` if the blocks are equal.\n fn lint_same_then_else<'tcx>(\n     cx: &LateContext<'tcx>,\n     blocks: &[&Block<'tcx>],\n-    has_unconditional_else: bool,\n+    has_conditional_else: bool,\n     expr: &'tcx Expr<'_>,\n ) {\n     // We only lint ifs with multiple blocks\n@@ -195,8 +196,8 @@ fn lint_same_then_else<'tcx>(\n     let has_expr = blocks[0].expr.is_some();\n     let (start_eq, mut end_eq, expr_eq) = scan_block_for_eq(cx, blocks);\n \n-    // SHARED_CODE_IN_IF_BLOCKS prerequisites\n-    if !has_unconditional_else || (start_eq == 0 && end_eq == 0 && (has_expr && !expr_eq)) {\n+    // BRANCHES_SHARING_CODE prerequisites\n+    if has_conditional_else || (start_eq == 0 && end_eq == 0 && (has_expr && !expr_eq)) {\n         return;\n     }\n \n@@ -210,7 +211,7 @@ fn lint_same_then_else<'tcx>(\n             intravisit::walk_stmt(&mut start_walker, stmt);\n         }\n \n-        emit_shared_code_in_if_blocks_lint(\n+        emit_branches_sharing_code_lint(\n             cx,\n             start_eq,\n             0,\n@@ -277,7 +278,7 @@ fn lint_same_then_else<'tcx>(\n             });\n         }\n \n-        emit_shared_code_in_if_blocks_lint(\n+        emit_branches_sharing_code_lint(\n             cx,\n             start_eq,\n             end_eq,\n@@ -298,7 +299,7 @@ fn scan_block_for_eq(cx: &LateContext<'tcx>, blocks: &[&Block<'tcx>]) -> (usize,\n         let r_stmts = win[1].stmts;\n \n         // `SpanlessEq` now keeps track of the locals and is therefore context sensitive clippy#6752.\n-        // The comparison therefor needs to be done in a way that builds the correct context.\n+        // The comparison therefore needs to be done in a way that builds the correct context.\n         let mut evaluator = SpanlessEq::new(cx);\n         let mut evaluator = evaluator.inter_expr();\n \n@@ -387,7 +388,7 @@ fn check_for_warn_of_moved_symbol(\n     })\n }\n \n-fn emit_shared_code_in_if_blocks_lint(\n+fn emit_branches_sharing_code_lint(\n     cx: &LateContext<'tcx>,\n     start_stmts: usize,\n     end_stmts: usize,\n@@ -472,7 +473,7 @@ fn emit_shared_code_in_if_blocks_lint(\n         let (place_str, span, sugg) = suggestions.pop().unwrap();\n         let msg = format!(\"all if blocks contain the same code at the {}\", place_str);\n         let help = format!(\"consider moving the {} statements out like this\", place_str);\n-        span_lint_and_then(cx, SHARED_CODE_IN_IF_BLOCKS, span, msg.as_str(), |diag| {\n+        span_lint_and_then(cx, BRANCHES_SHARING_CODE, span, msg.as_str(), |diag| {\n             diag.span_suggestion(span, help.as_str(), sugg, Applicability::Unspecified);\n \n             add_optional_msgs(diag);\n@@ -482,7 +483,7 @@ fn emit_shared_code_in_if_blocks_lint(\n         let (_, start_span, start_sugg) = suggestions.pop().unwrap();\n         span_lint_and_then(\n             cx,\n-            SHARED_CODE_IN_IF_BLOCKS,\n+            BRANCHES_SHARING_CODE,\n             start_span,\n             \"all if blocks contain the same code at the start and the end. Here at the start\",\n             move |diag| {"}, {"sha": "43e89c2475f3a1c1f82364d2692e43e0f0315a5b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -613,10 +613,10 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &collapsible_if::COLLAPSIBLE_IF,\n         &collapsible_match::COLLAPSIBLE_MATCH,\n         &comparison_chain::COMPARISON_CHAIN,\n+        &copies::BRANCHES_SHARING_CODE,\n         &copies::IFS_SAME_COND,\n         &copies::IF_SAME_THEN_ELSE,\n         &copies::SAME_FUNCTIONS_IN_IF_CONDITION,\n-        &copies::SHARED_CODE_IN_IF_BLOCKS,\n         &copy_iterator::COPY_ITERATOR,\n         &create_dir::CREATE_DIR,\n         &dbg_macro::DBG_MACRO,\n@@ -1483,9 +1483,9 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&collapsible_if::COLLAPSIBLE_IF),\n         LintId::of(&collapsible_match::COLLAPSIBLE_MATCH),\n         LintId::of(&comparison_chain::COMPARISON_CHAIN),\n+        LintId::of(&copies::BRANCHES_SHARING_CODE),\n         LintId::of(&copies::IFS_SAME_COND),\n         LintId::of(&copies::IF_SAME_THEN_ELSE),\n-        LintId::of(&copies::SHARED_CODE_IN_IF_BLOCKS),\n         LintId::of(&default::FIELD_REASSIGN_WITH_DEFAULT),\n         LintId::of(&derive::DERIVE_HASH_XOR_EQ),\n         LintId::of(&derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n@@ -1872,6 +1872,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&booleans::NONMINIMAL_BOOL),\n         LintId::of(&casts::CHAR_LIT_AS_U8),\n         LintId::of(&casts::UNNECESSARY_CAST),\n+        LintId::of(&copies::BRANCHES_SHARING_CODE),\n         LintId::of(&double_comparison::DOUBLE_COMPARISONS),\n         LintId::of(&double_parens::DOUBLE_PARENS),\n         LintId::of(&duration_subsec::DURATION_SUBSEC),"}, {"sha": "7ce90ffd9f0f1334d04c4961dc96f248b7264a52", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -47,7 +47,7 @@ pub mod usage;\n pub mod visitors;\n \n pub use self::attrs::*;\n-pub use self::hir_utils::{both, eq_expr_value, over, SpanlessEq, SpanlessHash};\n+pub use self::hir_utils::{both, count_eq, eq_expr_value, over, SpanlessEq, SpanlessHash};\n \n use std::collections::hash_map::Entry;\n use std::hash::BuildHasherDefault;"}, {"sha": "c389c243d447e45adaf8e20707d8d1013ee6736e", "filename": "tests/ui/branches_sharing_code/shared_at_bottom.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,7 +1,7 @@\n #![allow(dead_code)]\n-#![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n-// This tests the shared_code_in_if_blocks lint at the end of blocks\n+// This tests the branches_sharing_code lint at the end of blocks\n \n fn simple_examples() {\n     let x = 1;", "previous_filename": "tests/ui/shared_code_in_if_blocks/shared_at_bot.rs"}, {"sha": "271fcd8b6c129fa87203db8f8f04a4cd765ad93a", "filename": "tests/ui/branches_sharing_code/shared_at_bottom.stderr", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,5 +1,5 @@\n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:30:5\n+  --> $DIR/shared_at_bottom.rs:30:5\n    |\n LL | /         let result = false;\n LL | |         println!(\"Block end!\");\n@@ -8,10 +8,10 @@ LL | |     };\n    | |_____^\n    |\n note: the lint level is defined here\n-  --> $DIR/shared_at_bot.rs:2:36\n+  --> $DIR/shared_at_bottom.rs:2:36\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly\n help: consider moving the end statements out like this\n    |\n@@ -22,7 +22,7 @@ LL |     result;\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:48:5\n+  --> $DIR/shared_at_bottom.rs:48:5\n    |\n LL | /         println!(\"Same end of block\");\n LL | |     }\n@@ -35,7 +35,7 @@ LL |     println!(\"Same end of block\");\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:65:5\n+  --> $DIR/shared_at_bottom.rs:65:5\n    |\n LL | /         println!(\n LL | |             \"I'm moveable because I know: `outer_scope_value`: '{}'\",\n@@ -54,7 +54,7 @@ LL |     );\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:77:9\n+  --> $DIR/shared_at_bottom.rs:77:9\n    |\n LL | /             println!(\"Hello World\");\n LL | |         }\n@@ -67,7 +67,7 @@ LL |         println!(\"Hello World\");\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:93:5\n+  --> $DIR/shared_at_bottom.rs:93:5\n    |\n LL | /         let later_used_value = \"A string value\";\n LL | |         println!(\"{}\", later_used_value);\n@@ -84,7 +84,7 @@ LL |     println!(\"{}\", later_used_value);\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:106:5\n+  --> $DIR/shared_at_bottom.rs:106:5\n    |\n LL | /         let simple_examples = \"I now identify as a &str :)\";\n LL | |         println!(\"This is the new simple_example: {}\", simple_examples);\n@@ -100,7 +100,7 @@ LL |     println!(\"This is the new simple_example: {}\", simple_examples);\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:171:5\n+  --> $DIR/shared_at_bottom.rs:171:5\n    |\n LL | /         x << 2\n LL | |     };\n@@ -114,7 +114,7 @@ LL |     x << 2;\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:178:5\n+  --> $DIR/shared_at_bottom.rs:178:5\n    |\n LL | /         x * 4\n LL | |     }\n@@ -128,7 +128,7 @@ LL |     x * 4\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:190:44\n+  --> $DIR/shared_at_bottom.rs:190:44\n    |\n LL |     if x == 17 { b = 1; a = 0x99; } else { a = 0x99; }\n    |                                            ^^^^^^^^^^^", "previous_filename": "tests/ui/shared_code_in_if_blocks/shared_at_bot.stderr"}, {"sha": "e65bcfd78737f329e673fbce03cc79343ce40e03", "filename": "tests/ui/branches_sharing_code/shared_at_top.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,7 +1,7 @@\n #![allow(dead_code, clippy::eval_order_dependence)]\n-#![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n-// This tests the shared_code_in_if_blocks lint at the start of blocks\n+// This tests the branches_sharing_code lint at the start of blocks\n \n fn simple_examples() {\n     let x = 0;", "previous_filename": "tests/ui/shared_code_in_if_blocks/shared_at_top.rs"}, {"sha": "15867e9ea020ac09d5aa280e761f622be9229e13", "filename": "tests/ui/branches_sharing_code/shared_at_top.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -8,8 +8,8 @@ LL | |         println!(\"Hello World!\");\n note: the lint level is defined here\n   --> $DIR/shared_at_top.rs:2:36\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider moving the start statements out like this\n    |\n LL |     println!(\"Hello World!\");\n@@ -106,7 +106,7 @@ LL | |     } else {\n note: the lint level is defined here\n   --> $DIR/shared_at_top.rs:2:9\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: same as this\n   --> $DIR/shared_at_top.rs:98:12", "previous_filename": "tests/ui/shared_code_in_if_blocks/shared_at_top.stderr"}, {"sha": "deefdad32c9dd271635a5cac077d817490d409ca", "filename": "tests/ui/branches_sharing_code/shared_at_top_and_bottom.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,7 +1,7 @@\n #![allow(dead_code)]\n-#![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n-// shared_code_in_if_blocks at the top and bottom of the if blocks\n+// branches_sharing_code at the top and bottom of the if blocks\n \n struct DataPack {\n     id: u32,", "previous_filename": "tests/ui/shared_code_in_if_blocks/shared_at_top_and_bot.rs"}, {"sha": "212cfb2f1d1803f3ef7b96314a95b09b86dbbfbe", "filename": "tests/ui/branches_sharing_code/shared_at_top_and_bottom.stderr", "status": "renamed", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,5 +1,5 @@\n error: all if blocks contain the same code at the start and the end. Here at the start\n-  --> $DIR/shared_at_top_and_bot.rs:16:5\n+  --> $DIR/shared_at_top_and_bottom.rs:16:5\n    |\n LL | /     if x == 7 {\n LL | |         let t = 7;\n@@ -8,12 +8,12 @@ LL | |         let _overlap_end = 2 * t;\n    | |_________________________________^\n    |\n note: the lint level is defined here\n-  --> $DIR/shared_at_top_and_bot.rs:2:36\n+  --> $DIR/shared_at_top_and_bottom.rs:2:36\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: and here at the end\n-  --> $DIR/shared_at_top_and_bot.rs:28:5\n+  --> $DIR/shared_at_top_and_bottom.rs:28:5\n    |\n LL | /         let _u = 9;\n LL | |     }\n@@ -32,7 +32,7 @@ LL |     let _u = 9;\n    |\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n-  --> $DIR/shared_at_top_and_bot.rs:32:5\n+  --> $DIR/shared_at_top_and_bottom.rs:32:5\n    |\n LL | /     if x == 99 {\n LL | |         let r = 7;\n@@ -41,7 +41,7 @@ LL | |         let _overlap_middle = r * r;\n    | |____________________________________^\n    |\n note: and here at the end\n-  --> $DIR/shared_at_top_and_bot.rs:43:5\n+  --> $DIR/shared_at_top_and_bottom.rs:43:5\n    |\n LL | /         let _overlap_end = r * r * r;\n LL | |         let z = \"end\";\n@@ -63,7 +63,7 @@ LL |     let z = \"end\";\n    |\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n-  --> $DIR/shared_at_top_and_bot.rs:61:5\n+  --> $DIR/shared_at_top_and_bottom.rs:61:5\n    |\n LL | /     if (x > 7 && y < 13) || (x + y) % 2 == 1 {\n LL | |         let a = 0xcafe;\n@@ -72,7 +72,7 @@ LL | |         let e_id = gen_id(a, b);\n    | |________________________________^\n    |\n note: and here at the end\n-  --> $DIR/shared_at_top_and_bot.rs:81:5\n+  --> $DIR/shared_at_top_and_bottom.rs:81:5\n    |\n LL | /         let pack = DataPack {\n LL | |             id: e_id,\n@@ -101,14 +101,14 @@ LL |     };\n  ...\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n-  --> $DIR/shared_at_top_and_bot.rs:94:5\n+  --> $DIR/shared_at_top_and_bottom.rs:94:5\n    |\n LL | /     let _ = if x == 7 {\n LL | |         let _ = 19;\n    | |___________________^\n    |\n note: and here at the end\n-  --> $DIR/shared_at_top_and_bot.rs:103:5\n+  --> $DIR/shared_at_top_and_bottom.rs:103:5\n    |\n LL | /         x << 2\n LL | |     };\n@@ -126,14 +126,14 @@ LL |     x << 2;\n    |\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n-  --> $DIR/shared_at_top_and_bot.rs:106:5\n+  --> $DIR/shared_at_top_and_bottom.rs:106:5\n    |\n LL | /     if x == 9 {\n LL | |         let _ = 17;\n    | |___________________^\n    |\n note: and here at the end\n-  --> $DIR/shared_at_top_and_bot.rs:115:5\n+  --> $DIR/shared_at_top_and_bottom.rs:115:5\n    |\n LL | /         x * 4\n LL | |     }", "previous_filename": "tests/ui/shared_code_in_if_blocks/shared_at_top_and_bot.stderr"}, {"sha": "0c70e3748ec16aa480832a1297f7d7eb96b8f1c8", "filename": "tests/ui/branches_sharing_code/valid_if_blocks.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,9 +1,9 @@\n #![allow(dead_code, clippy::eval_order_dependence)]\n-#![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n-// This tests the shared_code_in_if_blocks lint at the start of blocks\n+// This tests valid if blocks that shouldn't trigger the lint\n \n-// Tests with value references are includes in \"shared_code_at_bot.rs\"\n+// Tests with value references are includes in \"shared_code_at_bottom.rs\"\n \n fn valid_examples() {\n     let x = 2;", "previous_filename": "tests/ui/shared_code_in_if_blocks/valid_if_blocks.rs"}, {"sha": "a815995e71721f1bcd75a7a21897e2d04b4edcfd", "filename": "tests/ui/branches_sharing_code/valid_if_blocks.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -9,7 +9,7 @@ LL | |     } else {\n note: the lint level is defined here\n   --> $DIR/valid_if_blocks.rs:2:9\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: same as this\n   --> $DIR/valid_if_blocks.rs:105:12", "previous_filename": "tests/ui/shared_code_in_if_blocks/valid_if_blocks.stderr"}, {"sha": "ec082c73b44c08fa534779647f395260864d3266", "filename": "tests/ui/checked_unwrap/complex_conditionals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,5 +1,5 @@\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n-#![allow(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+#![allow(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n fn test_complex_conditions() {\n     let x: Result<(), ()> = Ok(());"}, {"sha": "043ea4148dc517ed736dacd5c647f69d5c456fcf", "filename": "tests/ui/checked_unwrap/complex_conditionals_nested.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,5 +1,5 @@\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n-#![allow(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+#![allow(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n fn test_nested() {\n     fn nested() {"}, {"sha": "8f23fb28827a23a8841a70f4743dca2067c0ee6e", "filename": "tests/ui/checked_unwrap/simple_conditionals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -1,5 +1,5 @@\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n-#![allow(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n+#![allow(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n macro_rules! m {\n     ($a:expr) => {"}, {"sha": "43468872db0b45f69c61799afc1c6b75521e7100", "filename": "tests/ui/default_numeric_fallback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -3,7 +3,7 @@\n #![allow(clippy::never_loop)]\n #![allow(clippy::no_effect)]\n #![allow(clippy::unnecessary_operation)]\n-#![allow(clippy::shared_code_in_if_blocks)]\n+#![allow(clippy::branches_sharing_code)]\n \n mod basic_expr {\n     fn test() {"}, {"sha": "ef9567455008bfcfdf8bb4885d092dbf76f140c5", "filename": "tests/ui/if_same_then_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fif_same_then_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fif_same_then_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -6,7 +6,7 @@\n     clippy::no_effect,\n     clippy::unused_unit,\n     clippy::zero_divided_by_zero,\n-    clippy::shared_code_in_if_blocks\n+    clippy::branches_sharing_code\n )]\n \n struct Foo {"}, {"sha": "e4dc5b647dfd2eb0d3a42be5d5e7c262eaf41228", "filename": "tests/ui/if_same_then_else2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fif_same_then_else2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fif_same_then_else2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -6,7 +6,7 @@\n     clippy::ifs_same_cond,\n     clippy::needless_return,\n     clippy::single_element_loop,\n-    clippy::shared_code_in_if_blocks\n+    clippy::branches_sharing_code\n )]\n \n fn if_same_then_else2() -> Result<&'static str, ()> {"}, {"sha": "2d8f3c2f0e7aacf69c5d1b0808e4f38117cfa311", "filename": "tests/ui/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -3,7 +3,7 @@\n     unused_assignments,\n     clippy::similar_names,\n     clippy::blacklisted_name,\n-    clippy::shared_code_in_if_blocks\n+    clippy::branches_sharing_code\n )]\n #![warn(clippy::useless_let_if_seq)]\n "}, {"sha": "588bb88f446134fc38252837ed6fdcb845564ae5", "filename": "tests/ui/needless_bool/simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fneedless_bool%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fneedless_bool%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Fsimple.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -5,7 +5,7 @@\n     clippy::no_effect,\n     clippy::if_same_then_else,\n     clippy::needless_return,\n-    clippy::shared_code_in_if_blocks\n+    clippy::branches_sharing_code\n )]\n \n fn main() {"}, {"sha": "82d95cc041fb35941a47c4862625db40d34e40bd", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -4,7 +4,7 @@\n #![allow(\n     clippy::if_same_then_else,\n     clippy::single_match,\n-    clippy::shared_code_in_if_blocks,\n+    clippy::branches_sharing_code,\n     clippy::needless_bool\n )]\n #![warn(clippy::needless_return)]"}, {"sha": "8a471f802e111dbf62fa4d07afc1cb23582f2138", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=a6f54f5dfdfdf0017ffecfbcd6f43352b8b71ca1", "patch": "@@ -4,7 +4,7 @@\n #![allow(\n     clippy::if_same_then_else,\n     clippy::single_match,\n-    clippy::shared_code_in_if_blocks,\n+    clippy::branches_sharing_code,\n     clippy::needless_bool\n )]\n #![warn(clippy::needless_return)]"}]}