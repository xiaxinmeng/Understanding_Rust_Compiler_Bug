{"sha": "4ac30013c3402d9349f83888a9d0903f0a68746e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYzMwMDEzYzM0MDJkOTM0OWY4Mzg4OGE5ZDA5MDNmMGE2ODc0NmU=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-09-19T01:26:38Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-09-20T17:30:55Z"}, "message": "rustc_trans: don't do on-demand drop glue instantiation.", "tree": {"sha": "2ff86931512f143aa9d3261abadf996ca5112d11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ff86931512f143aa9d3261abadf996ca5112d11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ac30013c3402d9349f83888a9d0903f0a68746e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ac30013c3402d9349f83888a9d0903f0a68746e", "html_url": "https://github.com/rust-lang/rust/commit/4ac30013c3402d9349f83888a9d0903f0a68746e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ac30013c3402d9349f83888a9d0903f0a68746e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2726f4a548f77f0443701c457f9f7628b5c6b6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2726f4a548f77f0443701c457f9f7628b5c6b6c", "html_url": "https://github.com/rust-lang/rust/commit/a2726f4a548f77f0443701c457f9f7628b5c6b6c"}], "stats": {"total": 23, "additions": 5, "deletions": 18}, "files": [{"sha": "2a20728f09beae1120c22f8fdc75c51098e94354", "filename": "src/librustc_trans/glue.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Flibrustc_trans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Flibrustc_trans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fglue.rs?ref=4ac30013c3402d9349f83888a9d0903f0a68746e", "patch": "@@ -216,30 +216,14 @@ fn get_drop_glue_core<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n                                 g: DropGlueKind<'tcx>) -> ValueRef {\n     let g = g.map_ty(|t| get_drop_glue_type(ccx.tcx(), t));\n     match ccx.drop_glues().borrow().get(&g) {\n-        Some(&(glue, _)) => return glue,\n+        Some(&(glue, _)) => glue,\n         None => {\n-            debug!(\"Could not find drop glue for {:?} -- {} -- {}. \\\n-                    Falling back to on-demand instantiation.\",\n+            bug!(\"Could not find drop glue for {:?} -- {} -- {}.\",\n                     g,\n                     TransItem::DropGlue(g).to_raw_string(),\n                     ccx.codegen_unit().name());\n         }\n     }\n-\n-    // FIXME: #34151\n-    // Normally, getting here would indicate a bug in trans::collector,\n-    // since it seems to have missed a translation item. When we are\n-    // translating with non-MIR-based trans, however, the results of the\n-    // collector are not entirely reliable since it bases its analysis\n-    // on MIR. Thus, we'll instantiate the missing function on demand in\n-    // this codegen unit, so that things keep working.\n-\n-    TransItem::DropGlue(g).predefine(ccx, llvm::InternalLinkage);\n-    TransItem::DropGlue(g).define(ccx);\n-\n-    // Now that we made sure that the glue function is in ccx.drop_glues,\n-    // give it another try\n-    get_drop_glue_core(ccx, g)\n }\n \n pub fn implement_drop_glue<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,"}, {"sha": "ad466671cf79bb540fbb48f03c73b9ea0f1a8c98", "filename": "src/test/codegen-units/item-collection/instantiation-through-vtable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs?ref=4ac30013c3402d9349f83888a9d0903f0a68746e", "patch": "@@ -31,6 +31,7 @@ impl<T> Trait for Struct<T> {\n fn main() {\n     let s1 = Struct { _a: 0u32 };\n \n+    //~ TRANS_ITEM drop-glue i8\n     //~ TRANS_ITEM fn instantiation_through_vtable::{{impl}}[0]::foo[0]<u32>\n     //~ TRANS_ITEM fn instantiation_through_vtable::{{impl}}[0]::bar[0]<u32>\n     let _ = &s1 as &Trait;"}, {"sha": "cd4cc258f7a682edbbaa4a30cfa263fa55d670f3", "filename": "src/test/codegen-units/item-collection/unsizing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funsizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funsizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funsizing.rs?ref=4ac30013c3402d9349f83888a9d0903f0a68746e", "patch": "@@ -57,6 +57,7 @@ fn main()\n {\n     // simple case\n     let bool_sized = &true;\n+    //~ TRANS_ITEM drop-glue i8\n     //~ TRANS_ITEM fn unsizing::{{impl}}[0]::foo[0]\n     let _bool_unsized = bool_sized as &Trait;\n "}, {"sha": "0007eaae2897185c3dcff2c21b0a02921534dc3d", "filename": "src/test/codegen-units/partitioning/vtable-through-const.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac30013c3402d9349f83888a9d0903f0a68746e/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs?ref=4ac30013c3402d9349f83888a9d0903f0a68746e", "patch": "@@ -69,6 +69,7 @@ mod mod1 {\n \n //~ TRANS_ITEM fn vtable_through_const::main[0] @@ vtable_through_const[External]\n fn main() {\n+    //~ TRANS_ITEM drop-glue i8 @@ vtable_through_const[Internal]\n \n     // Since Trait1::do_something() is instantiated via its default implementation,\n     // it is considered a generic and is instantiated here only because it is"}]}