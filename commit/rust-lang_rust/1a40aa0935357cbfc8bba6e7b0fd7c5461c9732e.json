{"sha": "1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNDBhYTA5MzUzNTdjYmZjOGJiYTZlN2IwZmQ3YzU0NjFjOTczMmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-19T21:51:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-19T22:47:52Z"}, "message": "core: Make converting from a C string unsafe", "tree": {"sha": "12fe37e5bd7cf639dccbd1e6b1e2fa0c1bc1445b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12fe37e5bd7cf639dccbd1e6b1e2fa0c1bc1445b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e", "html_url": "https://github.com/rust-lang/rust/commit/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ae8e0626da4c808e98595fcaeb9689b47d01df", "url": "https://api.github.com/repos/rust-lang/rust/commits/13ae8e0626da4c808e98595fcaeb9689b47d01df", "html_url": "https://github.com/rust-lang/rust/commit/13ae8e0626da4c808e98595fcaeb9689b47d01df"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "dea86b5af2500c01edf8729fd92f2b54e5d46a22", "filename": "src/libcore/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e", "patch": "@@ -65,7 +65,7 @@ fn fill_charp_buf(f: fn(*mutable c_char, size_t) -> bool)\n     -> option<str> {\n     let buf = vec::to_mut(vec::from_elem(tmpbuf_sz, 0u8 as c_char));\n     vec::as_mut_buf(buf) { |b|\n-        if f(b, tmpbuf_sz as size_t) {\n+        if f(b, tmpbuf_sz as size_t) unsafe {\n             some(str::from_buf(b as *u8))\n         } else {\n             none"}, {"sha": "e0c15abe590f28af67f5ab31055129bdc1413893", "filename": "src/libcore/str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=1a40aa0935357cbfc8bba6e7b0fd7c5461c9732e", "patch": "@@ -186,7 +186,7 @@ fn from_chars(chs: [char]) -> str {\n }\n \n #[doc = \"Create a Rust string from a null-terminated *u8 buffer\"]\n-fn from_buf(buf: *u8) -> str unsafe {\n+unsafe fn from_buf(buf: *u8) -> str {\n     let mut curr = buf, i = 0u;\n     while *curr != 0u8 {\n         i += 1u;\n@@ -196,12 +196,12 @@ fn from_buf(buf: *u8) -> str unsafe {\n }\n \n #[doc = \"Create a Rust string from a null-terminated C string\"]\n-fn from_c_str(c_str: *libc::c_char) -> str unsafe {\n+unsafe fn from_c_str(c_str: *libc::c_char) -> str {\n     from_buf(::unsafe::reinterpret_cast(c_str))\n }\n \n #[doc = \"Create a Rust string from a *u8 buffer of the given length\"]\n-fn from_buf_len(buf: *u8, len: uint) -> str unsafe {\n+unsafe fn from_buf_len(buf: *u8, len: uint) -> str {\n     let mut v: [u8] = [];\n     vec::reserve(v, len + 1u);\n     vec::as_buf(v) {|b| ptr::memcpy(b, buf, len); }\n@@ -215,7 +215,7 @@ fn from_buf_len(buf: *u8, len: uint) -> str unsafe {\n }\n \n #[doc = \"Create a Rust string from a `*c_char` buffer of the given length\"]\n-fn from_c_str_len(c_str: *libc::c_char, len: uint) -> str unsafe {\n+unsafe fn from_c_str_len(c_str: *libc::c_char, len: uint) -> str {\n     from_buf_len(::unsafe::reinterpret_cast(c_str), len)\n }\n "}]}