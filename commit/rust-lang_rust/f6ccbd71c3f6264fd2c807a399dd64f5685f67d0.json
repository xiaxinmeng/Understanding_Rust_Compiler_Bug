{"sha": "f6ccbd71c3f6264fd2c807a399dd64f5685f67d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2Y2NiZDcxYzNmNjI2NGZkMmM4MDdhMzk5ZGQ2NGY1Njg1ZjY3ZDA=", "commit": {"author": {"name": "Sebastian Blunt", "email": "sebastian@c4k3.net", "date": "2017-02-19T18:56:37Z"}, "committer": {"name": "Sebastian Blunt", "email": "sebastian@c4k3.net", "date": "2017-02-19T18:56:37Z"}, "message": "Add error_on_line_overflow option\n\nMakes it configurable whether to error if unable to get all lines within\nthe max_width.", "tree": {"sha": "b52ac5a5d1647f2d46f4e63d5d3f1f6143006dfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52ac5a5d1647f2d46f4e63d5d3f1f6143006dfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEEdnPqSYE3f+8qgytrWtNT3gWDRrEFAlip6nkTHHNlYmFzdGlh\nbkBjNGszLm5ldAAKCRBa01PeBYNGsSbjD/9wNQ+6GZTYPbVnb/kzKa4h8vxXgBLz\noKOQk/nn+No3SWvlQVFjiqeEztfcMeGJYOEEVAvDJE8d3cxtTG5gquMlqNmS8NuF\nmkey3GhBvao8puC2UyPt5Q6w+OVp8nCV9KsbWQ/QOBxvuHSS6IfLmmzPlvoOX42k\nNIJsfqr1LvN7RXUaySNDHMwwobZzZx+p/AMTjQi5ohHRv1KxEo93/ND0GrP8QfMt\nM2Yq0qrpQkYVmAHVkkACBkE1crWMB8c8b33DKByYk3bBChXEv9ki4dtt634ofQpL\n5ydD2pFuENulrxqRSO2Psx8I5sTzDyycnClEzKZPShP7JyCG5fdrCyaPIbhOxL0I\nYg5jwnnyidLwiF0zFUXRpp6Z28SPO2fzAhcCPzRbaryBrNrY4OrbOmK5oX1eNkx4\nYo5v+GvS4TZqVs0AEfv4sA7LQ3t9gTjFqmzMG6uAtaqAe/xY7IEgDYCeGxFL1sFV\naPY3hTJSpibJdnPHkuXJBVUoa8SUqoJuk4Vb9i+5p/l8szpJhCowPrXCCg34RjUS\nZCU1rYeGN26KEwLjaqv5uNAxDiBTiaal3DDYIyJAhZ5tDaodk6fELN59fI8ptEbC\nSpKu7Ktx4wfAGm+VooTthdtNh61G5vw58jvxc94qTFcegPOaSN671voSPFpzh1ku\nXbFg+RaLXI5HiQ==\n=e+SB\n-----END PGP SIGNATURE-----", "payload": "tree b52ac5a5d1647f2d46f4e63d5d3f1f6143006dfc\nparent 4f939ddf0c9344da646367d46810eb1ac92c5780\nauthor Sebastian Blunt <sebastian@c4k3.net> 1487530597 +0100\ncommitter Sebastian Blunt <sebastian@c4k3.net> 1487530597 +0100\n\nAdd error_on_line_overflow option\n\nMakes it configurable whether to error if unable to get all lines within\nthe max_width.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0", "html_url": "https://github.com/rust-lang/rust/commit/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0/comments", "author": {"login": "C4K3", "id": 4582830, "node_id": "MDQ6VXNlcjQ1ODI4MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4582830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/C4K3", "html_url": "https://github.com/C4K3", "followers_url": "https://api.github.com/users/C4K3/followers", "following_url": "https://api.github.com/users/C4K3/following{/other_user}", "gists_url": "https://api.github.com/users/C4K3/gists{/gist_id}", "starred_url": "https://api.github.com/users/C4K3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/C4K3/subscriptions", "organizations_url": "https://api.github.com/users/C4K3/orgs", "repos_url": "https://api.github.com/users/C4K3/repos", "events_url": "https://api.github.com/users/C4K3/events{/privacy}", "received_events_url": "https://api.github.com/users/C4K3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "C4K3", "id": 4582830, "node_id": "MDQ6VXNlcjQ1ODI4MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4582830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/C4K3", "html_url": "https://github.com/C4K3", "followers_url": "https://api.github.com/users/C4K3/followers", "following_url": "https://api.github.com/users/C4K3/following{/other_user}", "gists_url": "https://api.github.com/users/C4K3/gists{/gist_id}", "starred_url": "https://api.github.com/users/C4K3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/C4K3/subscriptions", "organizations_url": "https://api.github.com/users/C4K3/orgs", "repos_url": "https://api.github.com/users/C4K3/repos", "events_url": "https://api.github.com/users/C4K3/events{/privacy}", "received_events_url": "https://api.github.com/users/C4K3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f939ddf0c9344da646367d46810eb1ac92c5780", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f939ddf0c9344da646367d46810eb1ac92c5780", "html_url": "https://github.com/rust-lang/rust/commit/4f939ddf0c9344da646367d46810eb1ac92c5780"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "892b90b117edd6f34e2618d6da98a8f4111bd304", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=f6ccbd71c3f6264fd2c807a399dd64f5685f67d0", "patch": "@@ -333,6 +333,7 @@ create_config! {\n          via the --file-lines option\";\n     max_width: usize, 100, \"Maximum width of each line\";\n     ideal_width: usize, 80, \"Ideal width of each line\";\n+    error_on_line_overflow: bool, true, \"Error if unable to get all lines within max_width\";\n     tab_spaces: usize, 4, \"Number of spaces per tab\";\n     fn_call_width: usize, 60,\n         \"Maximum width of the args of a function call before falling back to vertical formatting\";"}, {"sha": "4fdc9ff8675dca096ad031a8d6b2acaee89b5687", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ccbd71c3f6264fd2c807a399dd64f5685f67d0/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f6ccbd71c3f6264fd2c807a399dd64f5685f67d0", "patch": "@@ -399,7 +399,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n                 line_len -= b - lw;\n             }\n             // Check for any line width errors we couldn't correct.\n-            if line_len > config.max_width {\n+            if config.error_on_line_overflow && line_len > config.max_width {\n                 errors.push(FormattingError {\n                     line: cur_line,\n                     kind: ErrorKind::LineOverflow(line_len, config.max_width),"}]}