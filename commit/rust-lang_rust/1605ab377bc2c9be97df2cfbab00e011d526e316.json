{"sha": "1605ab377bc2c9be97df2cfbab00e011d526e316", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MDVhYjM3N2JjMmM5YmU5N2RmMmNmYmFiMDBlMDExZDUyNmUzMTY=", "commit": {"author": {"name": "Ticki", "email": "Ticki@users.noreply.github.com", "date": "2016-03-21T20:01:08Z"}, "committer": {"name": "Ticki", "email": "Ticki@users.noreply.github.com", "date": "2016-03-21T20:01:08Z"}, "message": "Add support for naked functions", "tree": {"sha": "fa2e1a73245bd8a3ea2da7a1af6c1b68d2b362eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa2e1a73245bd8a3ea2da7a1af6c1b68d2b362eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1605ab377bc2c9be97df2cfbab00e011d526e316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1605ab377bc2c9be97df2cfbab00e011d526e316", "html_url": "https://github.com/rust-lang/rust/commit/1605ab377bc2c9be97df2cfbab00e011d526e316", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1605ab377bc2c9be97df2cfbab00e011d526e316/comments", "author": {"login": "ticki", "id": 13349091, "node_id": "MDQ6VXNlcjEzMzQ5MDkx", "avatar_url": "https://avatars.githubusercontent.com/u/13349091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ticki", "html_url": "https://github.com/ticki", "followers_url": "https://api.github.com/users/ticki/followers", "following_url": "https://api.github.com/users/ticki/following{/other_user}", "gists_url": "https://api.github.com/users/ticki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ticki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ticki/subscriptions", "organizations_url": "https://api.github.com/users/ticki/orgs", "repos_url": "https://api.github.com/users/ticki/repos", "events_url": "https://api.github.com/users/ticki/events{/privacy}", "received_events_url": "https://api.github.com/users/ticki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ticki", "id": 13349091, "node_id": "MDQ6VXNlcjEzMzQ5MDkx", "avatar_url": "https://avatars.githubusercontent.com/u/13349091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ticki", "html_url": "https://github.com/ticki", "followers_url": "https://api.github.com/users/ticki/followers", "following_url": "https://api.github.com/users/ticki/following{/other_user}", "gists_url": "https://api.github.com/users/ticki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ticki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ticki/subscriptions", "organizations_url": "https://api.github.com/users/ticki/orgs", "repos_url": "https://api.github.com/users/ticki/repos", "events_url": "https://api.github.com/users/ticki/events{/privacy}", "received_events_url": "https://api.github.com/users/ticki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0215681744bb1156ef686ab265ed71e4d5705b64", "url": "https://api.github.com/repos/rust-lang/rust/commits/0215681744bb1156ef686ab265ed71e4d5705b64", "html_url": "https://github.com/rust-lang/rust/commit/0215681744bb1156ef686ab265ed71e4d5705b64"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "3325749d94cf85159269b699c560b621d4053ca0", "filename": "src/doc/reference.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1605ab377bc2c9be97df2cfbab00e011d526e316/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/1605ab377bc2c9be97df2cfbab00e011d526e316/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=1605ab377bc2c9be97df2cfbab00e011d526e316", "patch": "@@ -1905,6 +1905,8 @@ type int8_t = i8;\n - `should_panic` - indicates that this test function should panic, inverting the success condition.\n - `cold` - The function is unlikely to be executed, so optimize it (and calls\n   to it) differently.\n+- `naked` - The function utilizes a custom ABI or custom inline ASM that requires\n+  epilogue and prologue to be skipped.\n \n ### Static-only attributes\n "}, {"sha": "4ea920c57aadb1782f4df7cca43614c9e8d2c27b", "filename": "src/librustc_trans/trans/attributes.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1605ab377bc2c9be97df2cfbab00e011d526e316/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1605ab377bc2c9be97df2cfbab00e011d526e316/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs?ref=1605ab377bc2c9be97df2cfbab00e011d526e316", "patch": "@@ -81,6 +81,18 @@ pub fn set_optimize_for_size(val: ValueRef, optimize: bool) {\n     }\n }\n \n+/// Tell LLVM if this function should be 'naked', i.e. skip the epilogue and prologue.\n+#[inline]\n+pub fn naked(val: ValueRef, is_naked: bool) {\n+    if is_naked {\n+        llvm::SetFunctionAttribute(val, llvm::Attribute::Naked);\n+    } else {\n+        unsafe {\n+            llvm::LLVMRemoveFunctionAttr(val, llvm::Attribute::Naked.bits() as c_ulonglong);\n+        }\n+    }\n+}\n+\n /// Composite function which sets LLVM attributes for function depending on its AST (#[attribute])\n /// attributes.\n pub fn from_fn_attrs(ccx: &CrateContext, attrs: &[ast::Attribute], llfn: ValueRef) {\n@@ -105,6 +117,8 @@ pub fn from_fn_attrs(ccx: &CrateContext, attrs: &[ast::Attribute], llfn: ValueRe\n         if attr.check_name(\"cold\") {\n             llvm::Attributes::default().set(llvm::Attribute::Cold)\n                 .apply_llfn(llvm::FunctionIndex as usize, llfn)\n+        } else if attr.check_name(\"naked\") {\n+            naked(llfn, true);\n         } else if attr.check_name(\"allocator\") {\n             llvm::Attributes::default().set(llvm::Attribute::NoAlias)\n                 .apply_llfn(llvm::ReturnIndex as usize, llfn)"}, {"sha": "ebd8db1b25ccb6d37280b9c8d7ce6bdf1b5822fd", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1605ab377bc2c9be97df2cfbab00e011d526e316/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1605ab377bc2c9be97df2cfbab00e011d526e316/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=1605ab377bc2c9be97df2cfbab00e011d526e316", "patch": "@@ -212,6 +212,9 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Option<u32>, Status\n     // rust runtime internal\n     (\"unwind_attributes\", \"1.4.0\", None, Active),\n \n+\t// allow the use of `#[naked]` on functions.\n+    (\"naked_functions\", \"1.9.0\", None, Active),\n+\n     // allow empty structs and enum variants with braces\n     (\"braced_empty_structs\", \"1.5.0\", Some(29720), Accepted),\n \n@@ -376,6 +379,9 @@ pub const KNOWN_ATTRIBUTES: &'static [(&'static str, AttributeType, AttributeGat\n     // FIXME: #14406 these are processed in trans, which happens after the\n     // lint pass\n     (\"cold\", Whitelisted, Ungated),\n+    (\"naked\", Whitelisted, Gated(\"naked_functions\",\n+                                 \"the `#[naked]` attribute \\\n+                                  is an experimental feature\")),\n     (\"export_name\", Whitelisted, Ungated),\n     (\"inline\", Whitelisted, Ungated),\n     (\"link\", Whitelisted, Ungated),"}]}