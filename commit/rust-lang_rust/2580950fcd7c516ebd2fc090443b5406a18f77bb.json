{"sha": "2580950fcd7c516ebd2fc090443b5406a18f77bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ODA5NTBmY2Q3YzUxNmViZDJmYzA5MDQ0M2I1NDA2YTE4Zjc3YmI=", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@panix.com", "date": "2017-01-21T16:01:11Z"}, "committer": {"name": "Zack Weinberg", "email": "zackw@panix.com", "date": "2017-01-21T16:01:11Z"}, "message": "Generalize envs() and args() to iterators.\n\n * Command::envs() now takes anything that is IntoIterator<Item=(K, V)>\n   where both K and V are AsRef<OsStr>.\n * Since we're not 100% sure that's the right signature, envs() is\n   now marked unstable.  (You can use envs() with HashMap<str, str> but\n   not Vec<(str, str)>, for instance.)\n * Update the test to match.\n\n * By analogy, args() now takes any IntoIterator<Item=S>, S: AsRef<OsStr>.\n   This should be uncontroversial.", "tree": {"sha": "4632a369d5d734c9c923aa3c2972ff27d52591e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4632a369d5d734c9c923aa3c2972ff27d52591e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2580950fcd7c516ebd2fc090443b5406a18f77bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2580950fcd7c516ebd2fc090443b5406a18f77bb", "html_url": "https://github.com/rust-lang/rust/commit/2580950fcd7c516ebd2fc090443b5406a18f77bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2580950fcd7c516ebd2fc090443b5406a18f77bb/comments", "author": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c74efddc89859b9ddfbdccf8ccb2fa9862a1681d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c74efddc89859b9ddfbdccf8ccb2fa9862a1681d", "html_url": "https://github.com/rust-lang/rust/commit/c74efddc89859b9ddfbdccf8ccb2fa9862a1681d"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "d4dbbec1feec77ac5fb92a9035109d33b8b4a751", "filename": "src/libstd/process.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2580950fcd7c516ebd2fc090443b5406a18f77bb/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2580950fcd7c516ebd2fc090443b5406a18f77bb/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=2580950fcd7c516ebd2fc090443b5406a18f77bb", "patch": "@@ -345,7 +345,9 @@ impl Command {\n     ///         .expect(\"ls command failed to start\");\n     /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n-    pub fn args<S: AsRef<OsStr>>(&mut self, args: &[S]) -> &mut Command {\n+    pub fn args<I, S>(&mut self, args: I) -> &mut Command\n+        where I: IntoIterator<Item=S>, S: AsRef<OsStr>\n+    {\n         for arg in args {\n             self.arg(arg.as_ref());\n         }\n@@ -385,8 +387,9 @@ impl Command {\n     /// ```no_run\n     /// use std::process::{Command, Stdio};\n     /// use std::env;\n+    /// use std::collections::HashMap;\n     ///\n-    /// let filtered_env : Vec<(String, String)> =\n+    /// let filtered_env : HashMap<String, String> =\n     ///     env::vars().filter(|&(ref k, _)|\n     ///         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"\n     ///     ).collect();\n@@ -399,11 +402,11 @@ impl Command {\n     ///         .spawn()\n     ///         .expect(\"printenv failed to start\");\n     /// ```\n-    #[stable(feature = \"command_envs\", since = \"1.16.0\")]\n-    pub fn envs<K, V>(&mut self, vars: &[(K, V)]) -> &mut Command\n-        where K: AsRef<OsStr>, V: AsRef<OsStr>\n+    #[unstable(feature = \"command_envs\", issue = \"38526\")]\n+    pub fn envs<I, K, V>(&mut self, vars: I) -> &mut Command\n+        where I: IntoIterator<Item=(K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>\n     {\n-        for &(ref key, ref val) in vars {\n+        for (ref key, ref val) in vars {\n             self.inner.env(key.as_ref(), val.as_ref());\n         }\n         self"}, {"sha": "a131dcbe4ddc3e65d188f6a958d903b706f188c0", "filename": "src/test/run-pass/process-envs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2580950fcd7c516ebd2fc090443b5406a18f77bb/src%2Ftest%2Frun-pass%2Fprocess-envs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2580950fcd7c516ebd2fc090443b5406a18f77bb/src%2Ftest%2Frun-pass%2Fprocess-envs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-envs.rs?ref=2580950fcd7c516ebd2fc090443b5406a18f77bb", "patch": "@@ -10,8 +10,11 @@\n \n // ignore-emscripten\n \n+#![feature(command_envs)]\n+\n use std::process::Command;\n use std::env;\n+use std::collections::HashMap;\n \n #[cfg(all(unix, not(target_os=\"android\")))]\n pub fn env_cmd() -> Command {\n@@ -38,7 +41,7 @@ fn main() {\n     env::set_var(\"RUN_TEST_NEW_ENV\", \"123\");\n \n     // create filtered environment vector\n-    let filtered_env : Vec<(String, String)> =\n+    let filtered_env : HashMap<String, String> =\n         env::vars().filter(|&(ref k, _)| k == \"PATH\").collect();\n \n     let mut cmd = env_cmd();"}]}