{"sha": "ae158224acb8a85efce18cd358a445d18c6c6389", "node_id": "C_kwDOAAsO6NoAKGFlMTU4MjI0YWNiOGE4NWVmY2UxOGNkMzU4YTQ0NWQxOGM2YzYzODk", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-02-13T01:25:54Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-02-13T01:25:54Z"}, "message": "rustdoc-json: buffer output", "tree": {"sha": "37ba7dd6d6c32e6ef39d19aa1fb14221f3fe8d9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37ba7dd6d6c32e6ef39d19aa1fb14221f3fe8d9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae158224acb8a85efce18cd358a445d18c6c6389", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae158224acb8a85efce18cd358a445d18c6c6389", "html_url": "https://github.com/rust-lang/rust/commit/ae158224acb8a85efce18cd358a445d18c6c6389", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae158224acb8a85efce18cd358a445d18c6c6389/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cfa4def7c87d571bd46d92fed608edf8fad236e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cfa4def7c87d571bd46d92fed608edf8fad236e", "html_url": "https://github.com/rust-lang/rust/commit/3cfa4def7c87d571bd46d92fed608edf8fad236e"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "52980e07b8ca39b41d67bbee2a9ff5496e192c64", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae158224acb8a85efce18cd358a445d18c6c6389/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae158224acb8a85efce18cd358a445d18c6c6389/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=ae158224acb8a85efce18cd358a445d18c6c6389", "patch": "@@ -8,6 +8,7 @@ mod conversions;\n \n use std::cell::RefCell;\n use std::fs::{create_dir_all, File};\n+use std::io::{BufWriter, Write};\n use std::path::PathBuf;\n use std::rc::Rc;\n \n@@ -213,7 +214,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         let mut index = (*self.index).clone().into_inner();\n         index.extend(self.get_trait_items());\n         // This needs to be the default HashMap for compatibility with the public interface for\n-        // rustdoc-json\n+        // rustdoc-json-types\n         #[allow(rustc::default_hash_types)]\n         let output = types::Crate {\n             root: types::Id(String::from(\"0:0\")),\n@@ -263,8 +264,10 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         let mut p = out_dir;\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());\n         p.set_extension(\"json\");\n-        let file = try_err!(File::create(&p), p);\n-        serde_json::ser::to_writer(&file, &output).unwrap();\n+        let mut file = BufWriter::new(try_err!(File::create(&p), p));\n+        serde_json::ser::to_writer(&mut file, &output).unwrap();\n+        try_err!(file.flush(), p);\n+\n         Ok(())\n     }\n "}]}