{"sha": "2ec47e07ee933f9497185fc111b3501b8648aef5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYzQ3ZTA3ZWU5MzNmOTQ5NzE4NWZjMTExYjM1MDFiODY0OGFlZjU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-03-06T01:24:05Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-03-06T01:27:02Z"}, "message": "Remove seemingly unused sugarise-doc-comments Python script.\n\nThis Python script converts documentation comments from the\n`#[doc = \"...\"]` attribute to the `///` syntax. It was added six\nyears ago, presumably to help with the transition when `///` was\nimplemented and hasn't really been touched since. I don't think there's\nmuch value in keeping it around at this point.", "tree": {"sha": "e5cea598c0b15c999e90e9ca061b170fd3f507ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5cea598c0b15c999e90e9ca061b170fd3f507ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ec47e07ee933f9497185fc111b3501b8648aef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec47e07ee933f9497185fc111b3501b8648aef5", "html_url": "https://github.com/rust-lang/rust/commit/2ec47e07ee933f9497185fc111b3501b8648aef5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ec47e07ee933f9497185fc111b3501b8648aef5/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9334404f06a188854af33835a0efe1e834e4ac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9334404f06a188854af33835a0efe1e834e4ac4", "html_url": "https://github.com/rust-lang/rust/commit/c9334404f06a188854af33835a0efe1e834e4ac4"}], "stats": {"total": 93, "additions": 0, "deletions": 93}, "files": [{"sha": "ac2223f4acef3052d32d35689b90eb1227ca4a19", "filename": "src/etc/sugarise-doc-comments.py", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/c9334404f06a188854af33835a0efe1e834e4ac4/src%2Fetc%2Fsugarise-doc-comments.py", "raw_url": "https://github.com/rust-lang/rust/raw/c9334404f06a188854af33835a0efe1e834e4ac4/src%2Fetc%2Fsugarise-doc-comments.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsugarise-doc-comments.py?ref=c9334404f06a188854af33835a0efe1e834e4ac4", "patch": "@@ -1,93 +0,0 @@\n-#!/usr/bin/env python\n-#\n-# Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-#\n-# this script attempts to turn doc comment attributes (#[doc = \"...\"])\n-# into sugared-doc-comments (/** ... */ and /// ...)\n-#\n-# it sugarises all .rs/.rc files underneath the working directory\n-#\n-\n-import sys\n-import os\n-import fnmatch\n-import re\n-\n-\n-DOC_PATTERN = '^(?P<indent>[\\\\t ]*)#\\\\[(\\\\s*)doc(\\\\s*)=' + \\\n-              '(\\\\s*)\"(?P<text>(\\\\\"|[^\"])*?)\"(\\\\s*)\\\\]' + \\\n-              '(?P<semi>;)?'\n-\n-ESCAPES = [(\"\\\\'\", \"'\"),\n-           ('\\\\\"', '\"'),\n-           (\"\\\\n\", \"\\n\"),\n-           (\"\\\\r\", \"\\r\"),\n-           (\"\\\\t\", \"\\t\")]\n-\n-\n-def unescape(s):\n-    for (find, repl) in ESCAPES:\n-        s = s.replace(find, repl)\n-    return s\n-\n-\n-def block_trim(s):\n-    lns = s.splitlines()\n-\n-    # remove leading/trailing whitespace-lines\n-    while lns and not lns[0].strip():\n-        lns = lns[1:]\n-    while lns and not lns[-1].strip():\n-        lns = lns[:-1]\n-\n-    # remove leading horizontal whitespace\n-    n = sys.maxsize\n-    for ln in lns:\n-        if ln.strip():\n-            n = min(n, len(re.search('^\\s*', ln).group()))\n-    if n != sys.maxsize:\n-        lns = [ln[n:] for ln in lns]\n-\n-    # strip trailing whitespace\n-    lns = [ln.rstrip() for ln in lns]\n-\n-    return lns\n-\n-\n-def replace_doc(m):\n-    indent = m.group('indent')\n-    text = block_trim(unescape(m.group('text')))\n-\n-    if len(text) > 1:\n-        inner = '!' if m.group('semi') else '*'\n-        starify = lambda s: indent + ' *' + (' ' + s if s else '')\n-        text = '\\n'.join(map(starify, text))\n-        repl = indent + '/*' + inner + '\\n' + text + '\\n' + indent + ' */'\n-    else:\n-        inner = '!' if m.group('semi') else '/'\n-        repl = indent + '//' + inner + ' ' + text[0]\n-\n-    return repl\n-\n-\n-def sugarise_file(path):\n-    s = open(path).read()\n-\n-    r = re.compile(DOC_PATTERN, re.MULTILINE | re.DOTALL)\n-    ns = re.sub(r, replace_doc, s)\n-\n-    if s != ns:\n-        open(path, 'w').write(ns)\n-\n-for (dirpath, dirnames, filenames) in os.walk('.'):\n-    for name in fnmatch.filter(filenames, '*.r[sc]'):\n-        sugarise_file(os.path.join(dirpath, name))"}]}