{"sha": "52e06c663cb25308c1784b2263b93f4af32107c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZTA2YzY2M2NiMjUzMDhjMTc4NGIyMjYzYjkzZjRhZjMyMTA3YzI=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-01-10T05:03:18Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-01-10T05:03:18Z"}, "message": "Add eof to MemReader and BufReader\n\nIt's easy to figure out and useful as a sanity check sometimes.", "tree": {"sha": "ba3c1349f6cb8c7eda0c70ac1382069d0863fe28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba3c1349f6cb8c7eda0c70ac1382069d0863fe28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52e06c663cb25308c1784b2263b93f4af32107c2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52e06c663cb25308c1784b2263b93f4af32107c2", "html_url": "https://github.com/rust-lang/rust/commit/52e06c663cb25308c1784b2263b93f4af32107c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52e06c663cb25308c1784b2263b93f4af32107c2/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28ddc6537fcec5eb6033c78709b288abf72e8ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ddc6537fcec5eb6033c78709b288abf72e8ae7", "html_url": "https://github.com/rust-lang/rust/commit/28ddc6537fcec5eb6033c78709b288abf72e8ae7"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "f036131d211a6952368f42b9b9bb29761f63c478", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/52e06c663cb25308c1784b2263b93f4af32107c2/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52e06c663cb25308c1784b2263b93f4af32107c2/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=52e06c663cb25308c1784b2263b93f4af32107c2", "patch": "@@ -111,6 +111,11 @@ impl MemReader {\n         }\n     }\n \n+    /// Tests whether this reader has read all bytes in its buffer.\n+    ///\n+    /// If `true`, then this will no longer return bytes from `read`.\n+    pub fn eof(&self) -> bool { self.pos == self.buf.len() }\n+\n     /// Acquires an immutable reference to the underlying buffer of this\n     /// `MemReader`.\n     ///\n@@ -124,7 +129,7 @@ impl MemReader {\n \n impl Reader for MemReader {\n     fn read(&mut self, buf: &mut [u8]) -> Option<uint> {\n-        if self.pos == self.buf.len() { return None }\n+        if self.eof() { return None }\n \n         let write_len = min(buf.len(), self.buf.len() - self.pos);\n         {\n@@ -216,11 +221,16 @@ impl<'a> BufReader<'a> {\n             pos: 0\n         }\n     }\n+\n+    /// Tests whether this reader has read all bytes in its buffer.\n+    ///\n+    /// If `true`, then this will no longer return bytes from `read`.\n+    pub fn eof(&self) -> bool { self.pos == self.buf.len() }\n }\n \n impl<'a> Reader for BufReader<'a> {\n     fn read(&mut self, buf: &mut [u8]) -> Option<uint> {\n-        if self.pos == self.buf.len() { return None }\n+        if self.eof() { return None }\n \n         let write_len = min(buf.len(), self.buf.len() - self.pos);\n         {"}]}