{"sha": "43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzODkwY2ZmNmI4ZTFhOTNkOGQ2YzQxODlhZjdiMGZiZWI3MGVhYjc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-04-28T06:09:54Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-04-28T06:09:54Z"}, "message": "Preserve trailing comma inside array\n\nCloses #2652.", "tree": {"sha": "960561e031f25c4282dc63ccbf9c70ee6fbe3074", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/960561e031f25c4282dc63ccbf9c70ee6fbe3074"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7", "html_url": "https://github.com/rust-lang/rust/commit/43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "121f5e4e42afca5a4a60db98df3a4a506c614653", "url": "https://api.github.com/repos/rust-lang/rust/commits/121f5e4e42afca5a4a60db98df3a4a506c614653", "html_url": "https://github.com/rust-lang/rust/commit/121f5e4e42afca5a4a60db98df3a4a506c614653"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "7ca74c6ef0e55f48f5b37a830cc47245a63aaa72", "filename": "src/expr.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=43890cff6b8e1a93d8d6c4189af7b0fbeb70eab7", "patch": "@@ -70,7 +70,7 @@ pub fn format_expr(\n             expr.span,\n             context,\n             shape,\n-            None,\n+            choose_separator_tactic(context, expr.span),\n             None,\n         ),\n         ast::ExprKind::Lit(ref l) => rewrite_literal(context, l, shape),\n@@ -1336,6 +1336,18 @@ const SPECIAL_MACRO_WHITELIST: &[(&str, usize)] = &[\n     (\"debug_assert_ne!\", 2),\n ];\n \n+fn choose_separator_tactic(context: &RewriteContext, span: Span) -> Option<SeparatorTactic> {\n+    if context.inside_macro() {\n+        if span_ends_with_comma(context, span) {\n+            Some(SeparatorTactic::Always)\n+        } else {\n+            Some(SeparatorTactic::Never)\n+        }\n+    } else {\n+        None\n+    }\n+}\n+\n pub fn rewrite_call(\n     context: &RewriteContext,\n     callee: &str,\n@@ -1350,15 +1362,7 @@ pub fn rewrite_call(\n         shape,\n         span,\n         context.config.width_heuristics().fn_call_width,\n-        if context.inside_macro() {\n-            if span_ends_with_comma(context, span) {\n-                Some(SeparatorTactic::Always)\n-            } else {\n-                Some(SeparatorTactic::Never)\n-            }\n-        } else {\n-            None\n-        },\n+        choose_separator_tactic(context, span),\n     )\n }\n \n@@ -1436,11 +1440,14 @@ pub fn is_nested_call(expr: &ast::Expr) -> bool {\n pub fn span_ends_with_comma(context: &RewriteContext, span: Span) -> bool {\n     let mut result: bool = Default::default();\n     let mut prev_char: char = Default::default();\n+    let closing_delimiters = &[')', '}', ']'];\n \n     for (kind, c) in CharClasses::new(context.snippet(span).chars()) {\n         match c {\n             _ if kind.is_comment() || c.is_whitespace() => continue,\n-            ')' | '}' => result = result && prev_char != ')' && prev_char != '}',\n+            c if closing_delimiters.contains(&c) => {\n+                result &= !closing_delimiters.contains(&prev_char);\n+            }\n             ',' => result = true,\n             _ => result = false,\n         }"}]}