{"sha": "7208498d54b9f3d386b58f901c911a35170057ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMDg0OThkNTRiOWYzZDM4NmI1OGY5MDFjOTExYTM1MTcwMDU3Y2U=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-11T02:58:17Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-13T00:16:28Z"}, "message": "fix issue 3444", "tree": {"sha": "a2af022a5b52794e9deacfca24b77b3a1e980336", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2af022a5b52794e9deacfca24b77b3a1e980336"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7208498d54b9f3d386b58f901c911a35170057ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7208498d54b9f3d386b58f901c911a35170057ce", "html_url": "https://github.com/rust-lang/rust/commit/7208498d54b9f3d386b58f901c911a35170057ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7208498d54b9f3d386b58f901c911a35170057ce/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b4fc6d79060fc3120f92b01119e3a851c37829", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b4fc6d79060fc3120f92b01119e3a851c37829", "html_url": "https://github.com/rust-lang/rust/commit/05b4fc6d79060fc3120f92b01119e3a851c37829"}], "stats": {"total": 119, "additions": 108, "deletions": 11}, "files": [{"sha": "f3707f11625d1cbf578b0a5895dfe4b642c1c5da", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7208498d54b9f3d386b58f901c911a35170057ce/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7208498d54b9f3d386b58f901c911a35170057ce/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7208498d54b9f3d386b58f901c911a35170057ce", "patch": "@@ -940,6 +940,7 @@ dependencies = [\n name = \"ra_hir\"\n version = \"0.1.0\"\n dependencies = [\n+ \"arrayvec\",\n  \"either\",\n  \"itertools\",\n  \"log\","}, {"sha": "42193b492954275c9609c3a0f19b27f078da42b4", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=7208498d54b9f3d386b58f901c911a35170057ce", "patch": "@@ -11,6 +11,7 @@ doctest = false\n log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n either = \"1.5.3\"\n+arrayvec = \"0.5.1\"\n \n itertools = \"0.8.2\"\n "}, {"sha": "9e2fa03f886f07d47ea7d3b0d2233619386db48c", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=7208498d54b9f3d386b58f901c911a35170057ce", "patch": "@@ -1,6 +1,7 @@\n //! FIXME: write short doc here\n use std::sync::Arc;\n \n+use arrayvec::ArrayVec;\n use either::Either;\n use hir_def::{\n     adt::StructKind,\n@@ -226,7 +227,11 @@ impl Module {\n                     Some((name, def))\n                 }\n             })\n-            .map(|(name, def)| (name.clone(), def.into()))\n+            .flat_map(|(name, def)|\n+                ScopeDef::all_items(def)\n+                    .into_iter()\n+                    .map(move |item| (name.clone(), item))\n+            )\n             .collect()\n     }\n \n@@ -1288,15 +1293,38 @@ pub enum ScopeDef {\n     Unknown,\n }\n \n-impl From<PerNs> for ScopeDef {\n-    fn from(def: PerNs) -> Self {\n-        def.take_types()\n-            .or_else(|| def.take_values())\n-            .map(|module_def_id| ScopeDef::ModuleDef(module_def_id.into()))\n-            .or_else(|| {\n-                def.take_macros().map(|macro_def_id| ScopeDef::MacroDef(macro_def_id.into()))\n-            })\n-            .unwrap_or(ScopeDef::Unknown)\n+impl ScopeDef {\n+    pub fn all_items(def: PerNs) -> ArrayVec<[Self; 3]> {\n+        let mut items = ArrayVec::new();\n+\n+        match (def.take_types(), def.take_values()) {\n+            (Some(m1), None) => \n+                items.push(ScopeDef::ModuleDef(m1.into())),\n+            (None, Some(m2)) =>\n+                items.push(ScopeDef::ModuleDef(m2.into())),\n+            (Some(m1), Some(m2)) => {\n+                // Some items, like unit structs and enum variants, are\n+                // returned as both a type and a value. Here we want\n+                // to de-duplicate them.\n+                if m1 != m2 {\n+                    items.push(ScopeDef::ModuleDef(m1.into()));\n+                    items.push(ScopeDef::ModuleDef(m2.into()));\n+                } else {\n+                    items.push(ScopeDef::ModuleDef(m1.into()));\n+                }\n+            },\n+            (None, None) => {},\n+        };\n+\n+        if let Some(macro_def_id) = def.take_macros() {\n+            items.push(ScopeDef::MacroDef(macro_def_id.into()));\n+        }\n+\n+        if items.is_empty() {\n+            items.push(ScopeDef::Unknown);\n+        }\n+\n+        items\n     }\n }\n "}, {"sha": "e83eb1fdc20f5633d8f9b86f6b106e08df3259c8", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=7208498d54b9f3d386b58f901c911a35170057ce", "patch": "@@ -344,7 +344,13 @@ impl<'a, DB: HirDatabase> SemanticsScope<'a, DB> {\n \n         resolver.process_all_names(self.db, &mut |name, def| {\n             let def = match def {\n-                resolver::ScopeDef::PerNs(it) => it.into(),\n+                resolver::ScopeDef::PerNs(it) => {\n+                    let items = ScopeDef::all_items(it);\n+                    for item in items {\n+                        f(name.clone(), item);\n+                    }\n+                    return\n+                },\n                 resolver::ScopeDef::ImplSelfType(it) => ScopeDef::ImplSelfType(it.into()),\n                 resolver::ScopeDef::AdtSelfType(it) => ScopeDef::AdtSelfType(it.into()),\n                 resolver::ScopeDef::GenericParam(id) => ScopeDef::GenericParam(TypeParam { id }),"}, {"sha": "3f33a75b9a9a76301181fbb9c4a4c1037239878e", "filename": "crates/ra_hir_def/src/nameres/tests.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs?ref=7208498d54b9f3d386b58f901c911a35170057ce", "patch": "@@ -101,6 +101,28 @@ fn crate_def_map_super_super() {\n     \"###)\n }\n \n+#[test]\n+fn crate_def_map_fn_mod_same_name() {\n+    let map = def_map(\n+        \"\n+        //- /lib.rs\n+        mod m {\n+            pub mod z {}\n+            pub fn z() {}\n+        }\n+        \",\n+    );\n+    assert_snapshot!(map, @r###\"\n+        \u22eecrate\n+        \u22eem: t\n+        \u22ee\n+        \u22eecrate::m\n+        \u22eez: t v\n+        \u22ee\n+        \u22eecrate::m::z\n+    \"###)\n+}\n+\n #[test]\n fn bogus_paths() {\n     covers!(bogus_paths);"}, {"sha": "648c1d39b2b3043496151b9e046dc2ee40b112f5", "filename": "crates/ra_ide/src/completion/complete_path.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7208498d54b9f3d386b58f901c911a35170057ce/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=7208498d54b9f3d386b58f901c911a35170057ce", "patch": "@@ -967,4 +967,43 @@ mod tests {\n         ]\n         \"###);\n     }\n+\n+    #[test]\n+    fn function_mod_share_name() {\n+        assert_debug_snapshot!(\n+        do_reference_completion(\n+                r\"\n+                fn foo() {\n+                    self::m::<|>\n+                }\n+\n+                mod m {\n+                    pub mod z {}\n+                    pub fn z() {}\n+                }\n+                \",\n+        ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"z\",\n+                source_range: [57; 57),\n+                delete: [57; 57),\n+                insert: \"z\",\n+                kind: Module,\n+            },\n+            CompletionItem {\n+                label: \"z()\",\n+                source_range: [57; 57),\n+                delete: [57; 57),\n+                insert: \"z()$0\",\n+                kind: Function,\n+                lookup: \"z\",\n+                detail: \"pub fn z()\",\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n }"}]}