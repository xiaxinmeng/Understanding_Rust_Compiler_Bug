{"sha": "f4d1841811c260c96c71a41774d3cb61b62dad7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZDE4NDE4MTFjMjYwYzk2YzcxYTQxNzc0ZDNjYjYxYjYyZGFkN2Y=", "commit": {"author": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-07-18T05:15:06Z"}, "committer": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-07-18T05:15:06Z"}, "message": "Remove unnecessary cast", "tree": {"sha": "b8b9356a5e93cde70b08694e36e3aea9ffe3fa96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8b9356a5e93cde70b08694e36e3aea9ffe3fa96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4d1841811c260c96c71a41774d3cb61b62dad7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4d1841811c260c96c71a41774d3cb61b62dad7f", "html_url": "https://github.com/rust-lang/rust/commit/f4d1841811c260c96c71a41774d3cb61b62dad7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4d1841811c260c96c71a41774d3cb61b62dad7f/comments", "author": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c1beb2e453cdd8f3678e399aaa60c2c02980348", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c1beb2e453cdd8f3678e399aaa60c2c02980348", "html_url": "https://github.com/rust-lang/rust/commit/4c1beb2e453cdd8f3678e399aaa60c2c02980348"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "e0ad0d8d4112e619b7fd6164815f48e83e889323", "filename": "src/shims/posix/foreign_items.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4d1841811c260c96c71a41774d3cb61b62dad7f/src%2Fshims%2Fposix%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4d1841811c260c96c71a41774d3cb61b62dad7f/src%2Fshims%2Fposix%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fforeign_items.rs?ref=f4d1841811c260c96c71a41774d3cb61b62dad7f", "patch": "@@ -12,7 +12,6 @@ use shims::posix::fs::EvalContextExt as _;\n use shims::posix::sync::EvalContextExt as _;\n use shims::posix::thread::EvalContextExt as _;\n \n-\n impl<'mir, 'tcx: 'mir> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n     fn emulate_foreign_item_by_name(\n@@ -77,9 +76,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     // host's and target's `isize`. This saves us from\n                     // having to handle overflows later.\n                     let count = count.min(this.machine_isize_max() as u64).min(isize::MAX as u64);\n-                    // This can never fail because `count` was capped\n-                    // to be smaller than `isize::MAX`.\n-                    let count = isize::try_from(count).unwrap();\n \n                     // We want to read at most `count` bytes. We are\n                     // sure that `count` is not negative because it"}]}