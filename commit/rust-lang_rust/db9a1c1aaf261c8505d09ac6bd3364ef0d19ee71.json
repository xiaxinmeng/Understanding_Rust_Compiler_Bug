{"sha": "db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOWExYzFhYWYyNjFjODUwNWQwOWFjNmJkMzM2NGVmMGQxOWVlNzE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-06T03:46:46Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-06T03:47:08Z"}, "message": "Add some comments", "tree": {"sha": "29a4900b7e67360279b4169e57c7e4d7b66c6c97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29a4900b7e67360279b4169e57c7e4d7b66c6c97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71", "html_url": "https://github.com/rust-lang/rust/commit/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cc7b8f190565af501b0b4eda7be18f029a5d676", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cc7b8f190565af501b0b4eda7be18f029a5d676", "html_url": "https://github.com/rust-lang/rust/commit/7cc7b8f190565af501b0b4eda7be18f029a5d676"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "73247c1469efd78c0554a9e3c8ce8da82578a8af", "filename": "src/librustc_data_structures/sync.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71/src%2Flibrustc_data_structures%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71/src%2Flibrustc_data_structures%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsync.rs?ref=db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71", "patch": "@@ -131,6 +131,8 @@ cfg_if! {\n         #[macro_export]\n         macro_rules! parallel {\n             ($($blocks:tt),*) => {\n+                // We catch panics here ensuring that all the blocks execute.\n+                // This makes behavior consistent with the parallel compiler.\n                 let mut panic = None;\n                 $(\n                     if let Err(p) = ::std::panic::catch_unwind(\n@@ -158,6 +160,8 @@ cfg_if! {\n             for_each:\n                 impl Fn(<<T as IntoIterator>::IntoIter as Iterator>::Item) + Sync + Send\n         ) {\n+            // We catch panics here ensuring that all the loop iterations execute.\n+            // This makes behavior consistent with the parallel compiler.\n             let mut panic = None;\n             t.into_iter().for_each(|i| {\n                 if let Err(p) = catch_unwind(AssertUnwindSafe(|| for_each(i))) {\n@@ -309,6 +313,8 @@ cfg_if! {\n         use std::thread;\n         pub use rayon::{join, scope};\n \n+        /// Runs a list of blocks in parallel. The first block is executed immediately on\n+        /// the current thread. Use that for the longest running block.\n         #[macro_export]\n         macro_rules! parallel {\n             (impl $fblock:tt [$($c:tt,)*] [$block:tt $(, $rest:tt)*]) => {\n@@ -323,7 +329,7 @@ cfg_if! {\n                 })\n             };\n             ($fblock:tt, $($blocks:tt),*) => {\n-                // Reverse the order of the blocks since Rayon executes them in reverse order\n+                // Reverse the order of the later blocks since Rayon executes them in reverse order\n                 // when using a single thread. This ensures the execution order matches that\n                 // of a single threaded rustc\n                 parallel!(impl $fblock [] [$($blocks),*]);"}]}