{"sha": "3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNmQ0NmM2NDA0Y2JiMDc2YWMwN2M1NjhjNmM0ZWI2ZDM3MDk5NGU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-13T01:12:19Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-13T01:12:19Z"}, "message": "Resolve types when suggesting boxed closure", "tree": {"sha": "7d7b2f7b2e7677bb13cc19a70df6c32141a30e6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d7b2f7b2e7677bb13cc19a70df6c32141a30e6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "html_url": "https://github.com/rust-lang/rust/commit/3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8708e2c9a264f1db74700c7471b8038e2d7f8da", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8708e2c9a264f1db74700c7471b8038e2d7f8da", "html_url": "https://github.com/rust-lang/rust/commit/b8708e2c9a264f1db74700c7471b8038e2d7f8da"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "cff2b41e9eca1d095f2ed63c7b32545b66d19822", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "patch": "@@ -175,10 +175,26 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     name,\n                  ))\n             }\n-            Some(ty) if ty.is_closure() => (\n-                \" for the closure\".to_string(),\n-                \"a boxed closure type like `Box<Fn() -> _>`\".to_string(),\n-            ),\n+            Some(ty::TyS { sty: ty::TyKind::Closure(def_id, substs), .. }) => {\n+                let msg = \" for the closure\".to_string();\n+                let fn_sig = substs.closure_sig(*def_id, self.tcx);\n+                let args = fn_sig.inputs()\n+                    .skip_binder()\n+                    .iter()\n+                    .next()\n+                    .map(|args| args.tuple_fields()\n+                        .map(|arg| arg.to_string())\n+                        .collect::<Vec<_>>().join(\", \"))\n+                    .unwrap_or_else(String::new);\n+                // This suggestion is incomplete, as the user will get further type inference\n+                // errors due to the `_` placeholders and the introduction of `Box`, but it does\n+                // nudge them in the right direction.\n+                (msg, format!(\n+                    \"a boxed closure type like `Box<Fn({}) -> {}>`\",\n+                    args,\n+                    fn_sig.output().skip_binder().to_string(),\n+                ))\n+            }\n             _ => (String::new(), \"a type\".to_owned()),\n         };\n         let mut labels = vec![(span, InferCtxt::missing_type_msg(&name))];"}, {"sha": "02593d4d609fda723a05ec931f3d193615a4e4e3", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "patch": "@@ -2068,6 +2068,9 @@ impl<'tcx> TyS<'tcx> {\n             Error => {  // ignore errors (#54954)\n                 ty::Binder::dummy(FnSig::fake())\n             }\n+            Closure(..) => bug!(\n+                \"to get the signature of a closure, use `closure_sig()` not `fn_sig()`\",\n+            ),\n             _ => bug!(\"Ty::fn_sig() called on non-fn type: {:?}\", self)\n         }\n     }"}, {"sha": "8f48483c254218a66f9fcd4afe6cce7e919faf8e", "filename": "src/test/ui/inference/cannot-infer-closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Ftest%2Fui%2Finference%2Fcannot-infer-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Ftest%2Fui%2Finference%2Fcannot-infer-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-closure.rs?ref=3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "patch": "@@ -1,6 +1,6 @@\n fn main() {\n-    let x = || {\n-        Err(())?; //~ ERROR type annotations needed for the closure\n-        Ok(())\n+    let x = |a: (), b: ()| {\n+        Err(a)?; //~ ERROR type annotations needed for the closure\n+        Ok(b)\n     };\n }"}, {"sha": "20b2784a45d84c62bb3d0ab9e5189ef6add4fc59", "filename": "src/test/ui/inference/cannot-infer-closure.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Ftest%2Fui%2Finference%2Fcannot-infer-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b6d46c6404cbb076ac07c568c6c4eb6d370994e/src%2Ftest%2Fui%2Finference%2Fcannot-infer-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-closure.stderr?ref=3b6d46c6404cbb076ac07c568c6c4eb6d370994e", "patch": "@@ -1,10 +1,10 @@\n error[E0282]: type annotations needed for the closure\n   --> $DIR/cannot-infer-closure.rs:3:9\n    |\n-LL |     let x = || {\n-   |         - consider giving `x` a boxed closure type like `Box<Fn() -> _>`\n-LL |         Err(())?;\n-   |         ^^^^^^^^ cannot infer type\n+LL |     let x = |a: (), b: ()| {\n+   |         - consider giving `x` a boxed closure type like `Box<Fn((), ()) -> std::result::Result<(), _>>`\n+LL |         Err(a)?;\n+   |         ^^^^^^^ cannot infer type\n \n error: aborting due to previous error\n "}]}