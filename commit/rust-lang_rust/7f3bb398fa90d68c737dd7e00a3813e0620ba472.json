{"sha": "7f3bb398fa90d68c737dd7e00a3813e0620ba472", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmM2JiMzk4ZmE5MGQ2OGM3MzdkZDdlMDBhMzgxM2UwNjIwYmE0NzI=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-10T21:13:45Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-10T22:36:55Z"}, "message": "Add a TryFrom<Vec<u8>> impl that mirror from_vec_with_nul", "tree": {"sha": "8bddaea69aa91c9b614b2ce8e7911f8c5f2d2846", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bddaea69aa91c9b614b2ce8e7911f8c5f2d2846"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f3bb398fa90d68c737dd7e00a3813e0620ba472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f3bb398fa90d68c737dd7e00a3813e0620ba472", "html_url": "https://github.com/rust-lang/rust/commit/7f3bb398fa90d68c737dd7e00a3813e0620ba472", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f3bb398fa90d68c737dd7e00a3813e0620ba472/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b03164e6679284b984437fe82092682cf7c984f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b03164e6679284b984437fe82092682cf7c984f8", "html_url": "https://github.com/rust-lang/rust/commit/b03164e6679284b984437fe82092682cf7c984f8"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "3a3b51fd353b2ad64d0b5ce9718f2303037ebb54", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7f3bb398fa90d68c737dd7e00a3813e0620ba472/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3bb398fa90d68c737dd7e00a3813e0620ba472/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=7f3bb398fa90d68c737dd7e00a3813e0620ba472", "patch": "@@ -1,6 +1,7 @@\n use crate::ascii;\n use crate::borrow::{Borrow, Cow};\n use crate::cmp::Ordering;\n+use crate::convert::TryFrom;\n use crate::error::Error;\n use crate::fmt::{self, Write};\n use crate::io;\n@@ -853,6 +854,19 @@ impl From<Vec<NonZeroU8>> for CString {\n     }\n }\n \n+#[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+impl TryFrom<Vec<u8>> for CString {\n+    type Error = FromBytesWithNulError;\n+\n+    /// See the document about [`from_vec_with_nul`] for more\n+    /// informations about the behaviour of this method.\n+    ///\n+    /// [`from_vec_with_nul`]: struct.CString.html#method.from_vec_with_nul\n+    fn try_from(value: Vec<u8>) -> Result<Self, Self::Error> {\n+        Self::from_vec_with_nul(value)\n+    }\n+}\n+\n #[stable(feature = \"more_box_slice_clone\", since = \"1.29.0\")]\n impl Clone for Box<CStr> {\n     #[inline]"}]}