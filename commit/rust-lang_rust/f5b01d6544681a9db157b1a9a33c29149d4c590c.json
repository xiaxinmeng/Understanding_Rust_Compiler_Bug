{"sha": "f5b01d6544681a9db157b1a9a33c29149d4c590c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YjAxZDY1NDQ2ODFhOWRiMTU3YjFhOWEzM2MyOTE0OWQ0YzU5MGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-31T13:55:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-31T13:55:05Z"}, "message": "WIP: uniformalize external tools config", "tree": {"sha": "e84cd4885b3834797d38790f66a8b081156fb05b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e84cd4885b3834797d38790f66a8b081156fb05b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5b01d6544681a9db157b1a9a33c29149d4c590c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5b01d6544681a9db157b1a9a33c29149d4c590c", "html_url": "https://github.com/rust-lang/rust/commit/f5b01d6544681a9db157b1a9a33c29149d4c590c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5b01d6544681a9db157b1a9a33c29149d4c590c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35675defe75815ae5819ac0579481288e8781651", "url": "https://api.github.com/repos/rust-lang/rust/commits/35675defe75815ae5819ac0579481288e8781651", "html_url": "https://github.com/rust-lang/rust/commit/35675defe75815ae5819ac0579481288e8781651"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "ddc9de1ca031c0e247632532dd7a7ba34db18b96", "filename": "editors/code/package.json", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f5b01d6544681a9db157b1a9a33c29149d4c590c/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5b01d6544681a9db157b1a9a33c29149d4c590c/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=f5b01d6544681a9db157b1a9a33c29149d4c590c", "patch": "@@ -261,41 +261,57 @@\n                     \"default\": [],\n                     \"description\": \"Paths to exclude from analysis\"\n                 },\n-                \"rust-analyzer.rustfmtArgs\": {\n+                \"rust-analyzer.useClientWatching\": {\n+                    \"type\": \"boolean\",\n+                    \"default\": true,\n+                    \"description\": \"client provided file watching instead of notify watching.\"\n+                },\n+                \"rust-analyzer.rustfmt.extraArgs\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     },\n                     \"default\": [],\n-                    \"description\": \"Additional arguments to rustfmt\"\n+                    \"markdownDescription\": \"Additional `cargo fmt` arguments\"\n                 },\n-                \"rust-analyzer.useClientWatching\": {\n+                \"rust-analyzer.rustfmt.overrideCommand\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    },\n+                    \"default\": [],\n+                    \"markdownDescription\": \"Advanced option, fully override `cargo fmt` command line\"\n+                },\n+                \"rust-analyzer.checkOnSave.enable\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,\n-                    \"description\": \"client provided file watching instead of notify watching.\"\n+                    \"markdownDescription\": \"Run `cargo check` command for diagnostics on save\"\n+                },\n+                \"rust-analyzer.checkOnSave.cargoCommand\": {\n+                    \"type\": \"string\",\n+                    \"default\": \"check\",\n+                    \"markdownDescription\": \"Cargo command to run on save\"\n                 },\n-                \"rust-analyzer.cargo-watch.enable\": {\n+                \"rust-analyzer.checkOnSave.allTargets\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,\n-                    \"markdownDescription\": \"Run specified `cargo-watch` command for diagnostics on save\"\n+                    \"markdownDescription\": \"Check all targets and tests (will be passed as `--all-targets`)\"\n                 },\n-                \"rust-analyzer.cargo-watch.arguments\": {\n+                \"rust-analyzer.checkOnSave.extraArgs\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     },\n-                    \"markdownDescription\": \"`cargo-watch` arguments. (e.g: `--features=\\\"shumway,pdf\\\"` will run as `cargo watch -x \\\"check --features=\\\"shumway,pdf\\\"\\\"` )\",\n+                    \"markdownDescription\": \"Additional `cargo check` arguments\",\n                     \"default\": []\n                 },\n-                \"rust-analyzer.cargo-watch.command\": {\n-                    \"type\": \"string\",\n-                    \"markdownDescription\": \"`cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )\",\n-                    \"default\": \"check\"\n-                },\n-                \"rust-analyzer.cargo-watch.allTargets\": {\n-                    \"type\": \"boolean\",\n-                    \"markdownDescription\": \"Check all targets and tests (will be passed as `--all-targets`)\",\n-                    \"default\": true\n+                \"rust-analyzer.checkOnSave.overrideCommand\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    },\n+                    \"default\": [],\n+                    \"markdownDescription\": \"Advanced option, fully override `cargo check` command line (this must include at least `--message-format=json`)\"\n                 },\n                 \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\","}]}