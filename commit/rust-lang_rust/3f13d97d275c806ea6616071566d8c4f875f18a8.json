{"sha": "3f13d97d275c806ea6616071566d8c4f875f18a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMTNkOTdkMjc1YzgwNmVhNjYxNjA3MTU2NmQ4YzRmODc1ZjE4YTg=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-05-20T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-05-29T14:11:28Z"}, "message": "liveness: Log information about used variables", "tree": {"sha": "5b8af4ada2b8a6159658282a3b52611820501e45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b8af4ada2b8a6159658282a3b52611820501e45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f13d97d275c806ea6616071566d8c4f875f18a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f13d97d275c806ea6616071566d8c4f875f18a8", "html_url": "https://github.com/rust-lang/rust/commit/3f13d97d275c806ea6616071566d8c4f875f18a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f13d97d275c806ea6616071566d8c4f875f18a8/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77f95a89a108d4cd6ad1230fb210b3640952b146", "url": "https://api.github.com/repos/rust-lang/rust/commits/77f95a89a108d4cd6ad1230fb210b3640952b146", "html_url": "https://github.com/rust-lang/rust/commit/77f95a89a108d4cd6ad1230fb210b3640952b146"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "03ec8243662038d1e354bedff6625a8d84bf8bfc", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3f13d97d275c806ea6616071566d8c4f875f18a8/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f13d97d275c806ea6616071566d8c4f875f18a8/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=3f13d97d275c806ea6616071566d8c4f875f18a8", "patch": "@@ -357,7 +357,7 @@ fn visit_fn<'tcx>(\n     sp: Span,\n     id: hir::HirId,\n ) {\n-    debug!(\"visit_fn\");\n+    debug!(\"visit_fn {:?}\", id);\n \n     // swap in a new set of IR maps for this function body:\n     let def_id = ir.tcx.hir().local_def_id(id);\n@@ -777,12 +777,12 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n \n     fn write_vars<F>(&self, wr: &mut dyn Write, ln: LiveNode, mut test: F) -> io::Result<()>\n     where\n-        F: FnMut(usize) -> LiveNode,\n+        F: FnMut(usize) -> bool,\n     {\n         let node_base_idx = self.idx(ln, Variable(0));\n         for var_idx in 0..self.ir.num_vars {\n             let idx = node_base_idx + var_idx;\n-            if test(idx).is_valid() {\n+            if test(idx) {\n                 write!(wr, \" {:?}\", Variable(var_idx as u32))?;\n             }\n         }\n@@ -795,9 +795,12 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         {\n             let wr = &mut wr as &mut dyn Write;\n             write!(wr, \"[ln({:?}) of kind {:?} reads\", ln.get(), self.ir.lnk(ln));\n-            self.write_vars(wr, ln, |idx| self.rwu_table.get_reader(idx));\n+            self.write_vars(wr, ln, |idx| self.rwu_table.get_reader(idx).is_valid());\n             write!(wr, \"  writes\");\n-            self.write_vars(wr, ln, |idx| self.rwu_table.get_writer(idx));\n+            self.write_vars(wr, ln, |idx| self.rwu_table.get_writer(idx).is_valid());\n+            write!(wr, \"  uses\");\n+            self.write_vars(wr, ln, |idx| self.rwu_table.get_used(idx));\n+\n             write!(wr, \"  precedes {:?}]\", self.successors[ln.get()]);\n         }\n         String::from_utf8(wr).unwrap()"}]}