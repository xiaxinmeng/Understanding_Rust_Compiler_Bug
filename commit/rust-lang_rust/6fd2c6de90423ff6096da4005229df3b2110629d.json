{"sha": "6fd2c6de90423ff6096da4005229df3b2110629d", "node_id": "C_kwDOAAsO6NoAKDZmZDJjNmRlOTA0MjNmZjYwOTZkYTQwMDUyMjlkZjNiMjExMDYyOWQ", "commit": {"author": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-05-28T05:33:06Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-05-28T05:45:25Z"}, "message": "fix(lint): check const context\n\nhttps://github.com/rust-lang/rust-clippy/issues/8898", "tree": {"sha": "82e253706906f34cf9c4f45b7b9a507b0f5053ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82e253706906f34cf9c4f45b7b9a507b0f5053ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fd2c6de90423ff6096da4005229df3b2110629d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd2c6de90423ff6096da4005229df3b2110629d", "html_url": "https://github.com/rust-lang/rust/commit/6fd2c6de90423ff6096da4005229df3b2110629d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fd2c6de90423ff6096da4005229df3b2110629d/comments", "author": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b97784fd07b1981292703fb136cf6e4f7cddc113", "url": "https://api.github.com/repos/rust-lang/rust/commits/b97784fd07b1981292703fb136cf6e4f7cddc113", "html_url": "https://github.com/rust-lang/rust/commit/b97784fd07b1981292703fb136cf6e4f7cddc113"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "df3485533b3a479115b604159fcffdcdfd24945b", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6fd2c6de90423ff6096da4005229df3b2110629d/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd2c6de90423ff6096da4005229df3b2110629d/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=6fd2c6de90423ff6096da4005229df3b2110629d", "patch": "@@ -2,7 +2,7 @@\n \n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n-use clippy_utils::{meets_msrv, msrvs, SpanlessEq};\n+use clippy_utils::{in_constant, meets_msrv, msrvs, SpanlessEq};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n@@ -61,6 +61,7 @@ impl<'tcx> LateLintPass<'tcx> for CheckedConversions {\n         }\n \n         let result = if_chain! {\n+            if !in_constant(cx, item.hir_id);\n             if !in_external_macro(cx.sess(), item.span);\n             if let ExprKind::Binary(op, left, right) = &item.kind;\n "}, {"sha": "cb7100bc9efae463047f00fe353fb1bce319b8b2", "filename": "tests/ui/checked_conversions.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6fd2c6de90423ff6096da4005229df3b2110629d/tests%2Fui%2Fchecked_conversions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6fd2c6de90423ff6096da4005229df3b2110629d/tests%2Fui%2Fchecked_conversions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_conversions.fixed?ref=6fd2c6de90423ff6096da4005229df3b2110629d", "patch": "@@ -71,4 +71,9 @@ pub fn i8_to_u8(value: i8) {\n     let _ = value >= 0;\n }\n \n+// Do not lint\n+pub const fn issue_8898(i: u32) -> bool {\n+    i <= i32::MAX as u32\n+}\n+\n fn main() {}"}, {"sha": "ed4e0692388a55a4ad65dee76bf2649af70db3b2", "filename": "tests/ui/checked_conversions.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6fd2c6de90423ff6096da4005229df3b2110629d/tests%2Fui%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd2c6de90423ff6096da4005229df3b2110629d/tests%2Fui%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_conversions.rs?ref=6fd2c6de90423ff6096da4005229df3b2110629d", "patch": "@@ -71,4 +71,9 @@ pub fn i8_to_u8(value: i8) {\n     let _ = value >= 0;\n }\n \n+// Do not lint\n+pub const fn issue_8898(i: u32) -> bool {\n+    i <= i32::MAX as u32\n+}\n+\n fn main() {}"}]}