{"sha": "2793da3f39033d7f0b2c07a3556d68ccd4d03d4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OTNkYTNmMzkwMzNkN2YwYjJjMDdhMzU1NmQ2OGNjZDRkMDNkNGU=", "commit": {"author": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-07-08T19:51:31Z"}, "committer": {"name": "Jacob Hughes", "email": "j@jacobhughes.me", "date": "2020-09-23T01:55:38Z"}, "message": "Update src/librustc_passes/stability.rs\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "32112fa753ea80d40696192a7b436ebea059cda6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32112fa753ea80d40696192a7b436ebea059cda6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2793da3f39033d7f0b2c07a3556d68ccd4d03d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2793da3f39033d7f0b2c07a3556d68ccd4d03d4e", "html_url": "https://github.com/rust-lang/rust/commit/2793da3f39033d7f0b2c07a3556d68ccd4d03d4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2793da3f39033d7f0b2c07a3556d68ccd4d03d4e/comments", "author": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25dba40cbee4161709fba653c5f3915a7ac87537", "url": "https://api.github.com/repos/rust-lang/rust/commits/25dba40cbee4161709fba653c5f3915a7ac87537", "html_url": "https://github.com/rust-lang/rust/commit/25dba40cbee4161709fba653c5f3915a7ac87537"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "5b0df9e884ff6cb6c59dffa25d594fd99ac7b918", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2793da3f39033d7f0b2c07a3556d68ccd4d03d4e/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2793da3f39033d7f0b2c07a3556d68ccd4d03d4e/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=2793da3f39033d7f0b2c07a3556d68ccd4d03d4e", "patch": "@@ -43,15 +43,14 @@ enum AnnotationKind {\n /// have separate deprecation attributes from their parents, so we do not wish to inherit\n /// deprecation in this case. For example, inheriting deprecation for `T` in `Foo<T>`\n /// would cause a duplicate warning arising from both `Foo` and `T` being deprecated.\n-#[derive(PartialEq, Copy, Clone)]\n enum InheritDeprecation {\n     Yes,\n     No,\n }\n \n impl InheritDeprecation {\n     fn yes(&self) -> bool {\n-        *self == InheritDeprecation::Yes\n+        matches!(self, InheritDeprecation::Yes)\n     }\n }\n "}]}