{"sha": "e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "node_id": "C_kwDOAAsO6NoAKGU2MGZiYWY0Y2U3NjhkMTNhNmFiYzA0OGJkMzRlZTEyOTk1ZDE4ZGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-06T15:35:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-06T15:35:55Z"}, "message": "Auto merge of #105229 - saethlin:zst-writes-to-unions, r=oli-obk\n\nRe-enable removal of ZST writes to unions\n\nThis was previously disabled because Miri was lazily allocating unsized locals. But we aren't doing that anymore since  https://github.com/rust-lang/rust/pull/98831, so we can have this optimization back.", "tree": {"sha": "ac6ee4f848844d44ae4ca26001d3dca132643a8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac6ee4f848844d44ae4ca26001d3dca132643a8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "html_url": "https://github.com/rust-lang/rust/commit/e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6852428a8ea9728369b64b9964cad8e258403d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6852428a8ea9728369b64b9964cad8e258403d3", "html_url": "https://github.com/rust-lang/rust/commit/b6852428a8ea9728369b64b9964cad8e258403d3"}, {"sha": "74a270ac93710ef4ef2315cce3840486f92698b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/74a270ac93710ef4ef2315cce3840486f92698b5", "html_url": "https://github.com/rust-lang/rust/commit/74a270ac93710ef4ef2315cce3840486f92698b5"}], "stats": {"total": 104, "additions": 44, "deletions": 60}, "files": [{"sha": "569e783fee847b17a561293e001783627773ab9e", "filename": "compiler/rustc_mir_transform/src/remove_zsts.rs", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs?ref=e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "patch": "@@ -1,8 +1,7 @@\n //! Removes assignments to ZST places.\n \n use crate::MirPass;\n-use rustc_middle::mir::tcx::PlaceTy;\n-use rustc_middle::mir::{Body, LocalDecls, Place, StatementKind};\n+use rustc_middle::mir::{Body, StatementKind};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n \n pub struct RemoveZsts;\n@@ -35,9 +34,6 @@ impl<'tcx> MirPass<'tcx> for RemoveZsts {\n                     if !layout.is_zst() {\n                         continue;\n                     }\n-                    if involves_a_union(place, local_decls, tcx) {\n-                        continue;\n-                    }\n                     if tcx.consider_optimizing(|| {\n                         format!(\n                             \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n@@ -63,24 +59,3 @@ fn maybe_zst(ty: Ty<'_>) -> bool {\n         _ => false,\n     }\n }\n-\n-/// Miri lazily allocates memory for locals on assignment,\n-/// so we must preserve writes to unions and union fields,\n-/// or it will ICE on reads of those fields.\n-fn involves_a_union<'tcx>(\n-    place: Place<'tcx>,\n-    local_decls: &LocalDecls<'tcx>,\n-    tcx: TyCtxt<'tcx>,\n-) -> bool {\n-    let mut place_ty = PlaceTy::from_ty(local_decls[place.local].ty);\n-    if place_ty.ty.is_union() {\n-        return true;\n-    }\n-    for elem in place.projection {\n-        place_ty = place_ty.projection_ty(tcx, elem);\n-        if place_ty.ty.is_union() {\n-            return true;\n-        }\n-    }\n-    return false;\n-}"}, {"sha": "12e914e25e0c83b2ef61c2c0440f0ab1796f5d49", "filename": "src/test/mir-opt/remove_zsts.get_union.PreCodegen.after.mir", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/src%2Ftest%2Fmir-opt%2Fremove_zsts.get_union.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/src%2Ftest%2Fmir-opt%2Fremove_zsts.get_union.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_zsts.get_union.PreCodegen.after.mir?ref=e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "patch": "@@ -0,0 +1,10 @@\n+// MIR for `get_union` after PreCodegen\n+\n+fn get_union() -> Foo {\n+    let mut _0: Foo;                     // return place in scope 0 at $DIR/remove_zsts.rs:+0:19: +0:22\n+\n+    bb0: {\n+        Deinit(_0);                      // scope 0 at $DIR/remove_zsts.rs:+1:5: +1:18\n+        return;                          // scope 0 at $DIR/remove_zsts.rs:+2:2: +2:2\n+    }\n+}"}, {"sha": "169b7b1054b474a588ad675e8bbbff6bc818d2cc", "filename": "src/test/mir-opt/remove_zsts.get_union.RemoveZsts.diff", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/src%2Ftest%2Fmir-opt%2Fremove_zsts.get_union.RemoveZsts.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/src%2Ftest%2Fmir-opt%2Fremove_zsts.get_union.RemoveZsts.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_zsts.get_union.RemoveZsts.diff?ref=e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "patch": "@@ -0,0 +1,19 @@\n+- // MIR for `get_union` before RemoveZsts\n++ // MIR for `get_union` after RemoveZsts\n+  \n+  fn get_union() -> Foo {\n+      let mut _0: Foo;                     // return place in scope 0 at $DIR/remove_zsts.rs:+0:19: +0:22\n+      let mut _1: ();                      // in scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n+-         Deinit(_1);                      // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n++         nop;                             // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n+          Deinit(_0);                      // scope 0 at $DIR/remove_zsts.rs:+1:5: +1:18\n+-         (_0.0: ()) = move _1;            // scope 0 at $DIR/remove_zsts.rs:+1:5: +1:18\n++         nop;                             // scope 0 at $DIR/remove_zsts.rs:+1:5: +1:18\n+          StorageDead(_1);                 // scope 0 at $DIR/remove_zsts.rs:+1:17: +1:18\n+          return;                          // scope 0 at $DIR/remove_zsts.rs:+2:2: +2:2\n+      }\n+  }\n+  "}, {"sha": "1cf7ad6e3667c11e058f05fb3aa1e98eadbcc747", "filename": "src/test/mir-opt/remove_zsts.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/src%2Ftest%2Fmir-opt%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e60fbaf4ce768d13a6abc048bd34ee12995d18dc/src%2Ftest%2Fmir-opt%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_zsts.rs?ref=e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "patch": "@@ -0,0 +1,14 @@\n+union Foo {\n+    x: (),\n+    y: u64,\n+}\n+\n+// EMIT_MIR remove_zsts.get_union.RemoveZsts.diff\n+// EMIT_MIR remove_zsts.get_union.PreCodegen.after.mir\n+fn get_union() -> Foo {\n+    Foo { x: () }\n+}\n+\n+fn main() {\n+    get_union();\n+}"}, {"sha": "7d9e6046202ca312023fefc4b4c35e5bd94f7dae", "filename": "src/test/mir-opt/remove_zsts_dont_touch_unions.get_union.RemoveZsts.after.mir", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b6852428a8ea9728369b64b9964cad8e258403d3/src%2Ftest%2Fmir-opt%2Fremove_zsts_dont_touch_unions.get_union.RemoveZsts.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b6852428a8ea9728369b64b9964cad8e258403d3/src%2Ftest%2Fmir-opt%2Fremove_zsts_dont_touch_unions.get_union.RemoveZsts.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_zsts_dont_touch_unions.get_union.RemoveZsts.after.mir?ref=b6852428a8ea9728369b64b9964cad8e258403d3", "patch": "@@ -1,15 +0,0 @@\n-// MIR for `get_union` after RemoveZsts\n-\n-fn get_union() -> Foo {\n-    let mut _0: Foo;                     // return place in scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+0:19: +0:22\n-    let mut _1: ();                      // in scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+1:14: +1:16\n-\n-    bb0: {\n-        StorageLive(_1);                 // scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+1:14: +1:16\n-        nop;                             // scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+1:14: +1:16\n-        Deinit(_0);                      // scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+1:5: +1:18\n-        (_0.0: ()) = move _1;            // scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+1:5: +1:18\n-        StorageDead(_1);                 // scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+1:17: +1:18\n-        return;                          // scope 0 at $DIR/remove_zsts_dont_touch_unions.rs:+2:2: +2:2\n-    }\n-}"}, {"sha": "8b9de9b4d65a66fd987f2357d44fc0cecf038e42", "filename": "src/test/mir-opt/remove_zsts_dont_touch_unions.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b6852428a8ea9728369b64b9964cad8e258403d3/src%2Ftest%2Fmir-opt%2Fremove_zsts_dont_touch_unions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6852428a8ea9728369b64b9964cad8e258403d3/src%2Ftest%2Fmir-opt%2Fremove_zsts_dont_touch_unions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_zsts_dont_touch_unions.rs?ref=b6852428a8ea9728369b64b9964cad8e258403d3", "patch": "@@ -1,19 +0,0 @@\n-// unit-test: RemoveZsts\n-\n-// Ensure RemoveZsts doesn't remove ZST assignments to union fields,\n-// which causes problems in Miri.\n-\n-union Foo {\n-    x: (),\n-    y: u64,\n-}\n-\n-// EMIT_MIR remove_zsts_dont_touch_unions.get_union.RemoveZsts.after.mir\n-fn get_union() -> Foo {\n-    Foo { x: () }\n-}\n-\n-\n-fn main() {\n-    get_union();\n-}"}]}