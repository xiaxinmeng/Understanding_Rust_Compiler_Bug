{"sha": "03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZTIzYzdmOWExMGIxOGUxNjg3YmZkOTJjNjgwN2U5MzQyYWEwMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-24T17:29:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-24T17:29:12Z"}, "message": "Auto merge of #35883 - durka:gh35849, r=eddyb\n\ntypeck: use NoExpectation to check return type of diverging fn\n\nFixes #35849.\n\nThanks @eddyb.", "tree": {"sha": "63747bf53a862ae6d67d12c7a41d4e73ec26ba5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63747bf53a862ae6d67d12c7a41d4e73ec26ba5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "html_url": "https://github.com/rust-lang/rust/commit/03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "308824acecf902f2b6a9c1538bde0324804ba68e", "url": "https://api.github.com/repos/rust-lang/rust/commits/308824acecf902f2b6a9c1538bde0324804ba68e", "html_url": "https://github.com/rust-lang/rust/commit/308824acecf902f2b6a9c1538bde0324804ba68e"}, {"sha": "702ea7169cc20f3e572576e68339edc0b8fc5939", "url": "https://api.github.com/repos/rust-lang/rust/commits/702ea7169cc20f3e572576e68339edc0b8fc5939", "html_url": "https://github.com/rust-lang/rust/commit/702ea7169cc20f3e572576e68339edc0b8fc5939"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "b83826de26dd68b60b9936c86302bdcbca6ba1b2", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "patch": "@@ -1479,7 +1479,13 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                 self.ir.tcx.region_maps.call_site_extent(id, body.id),\n                 &self.fn_ret(id));\n \n-        if self.live_on_entry(entry_ln, self.s.no_ret_var).is_some() {\n+        if fn_ret.is_never() {\n+            // FIXME(durka) this rejects code like `fn foo(x: !) -> ! { x }`\n+            if self.live_on_entry(entry_ln, self.s.clean_exit_var).is_some() {\n+                span_err!(self.ir.tcx.sess, sp, E0270,\n+                          \"computation may converge in a function marked as diverging\");\n+            }\n+        } else if self.live_on_entry(entry_ln, self.s.no_ret_var).is_some() {\n             let param_env = ParameterEnvironment::for_item(self.ir.tcx, id);\n             let t_ret_subst = fn_ret.subst(self.ir.tcx, &param_env.free_substs);\n             let is_nil = self.ir.tcx.infer_ctxt(None, Some(param_env),"}, {"sha": "16300d869abf50ae87527a5e3d10d7aa01913301", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "patch": "@@ -708,7 +708,13 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n \n     inherited.tables.borrow_mut().liberated_fn_sigs.insert(fn_id, fn_sig);\n \n-    fcx.check_block_with_expected(body, ExpectHasType(fcx.ret_ty));\n+    // FIXME(aburka) do we need this special case? and should it be is_uninhabited?\n+    let expected = if fcx.ret_ty.is_never() {\n+        NoExpectation\n+    } else {\n+        ExpectHasType(fcx.ret_ty)\n+    };\n+    fcx.check_block_with_expected(body, expected);\n \n     fcx\n }"}, {"sha": "6dc447b4dc88759c32236b17ec5cc4a6a2bd4925", "filename": "src/test/compile-fail/diverging-fn-tail-35849.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Ftest%2Fcompile-fail%2Fdiverging-fn-tail-35849.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Ftest%2Fcompile-fail%2Fdiverging-fn-tail-35849.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdiverging-fn-tail-35849.rs?ref=03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn _converge() -> ! { //~ ERROR computation may converge\n+    42\n+}\n+\n+fn main() { }\n+"}, {"sha": "b1aa76cd9bfe50aa92797c3906b442aafc588956", "filename": "src/test/run-fail/call-fn-never-arg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Ftest%2Frun-fail%2Fcall-fn-never-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Ftest%2Frun-fail%2Fcall-fn-never-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fcall-fn-never-arg.rs?ref=03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "patch": "@@ -10,6 +10,7 @@\n \n // Test that we can use a ! for an argument of type !\n \n+// ignore-test FIXME(durka) can't be done with the current liveness code\n // error-pattern:wowzers!\n \n #![feature(never_type)]"}, {"sha": "6c05a02e7183cb1cdbdc31871079d8c358dab244", "filename": "src/test/run-pass/diverging-fn-tail-35849.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Ftest%2Frun-pass%2Fdiverging-fn-tail-35849.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e23c7f9a10b18e1687bfd92c6807e9342aa00b/src%2Ftest%2Frun-pass%2Fdiverging-fn-tail-35849.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiverging-fn-tail-35849.rs?ref=03e23c7f9a10b18e1687bfd92c6807e9342aa00b", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn assert_sizeof() -> ! {\n+    unsafe {\n+        ::std::mem::transmute::<f64, [u8; 8]>(panic!())\n+    }\n+}\n+\n+fn main() { }\n+"}]}