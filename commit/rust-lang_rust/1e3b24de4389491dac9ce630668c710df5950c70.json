{"sha": "1e3b24de4389491dac9ce630668c710df5950c70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlM2IyNGRlNDM4OTQ5MWRhYzljZTYzMDY2OGM3MTBkZjU5NTBjNzA=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-12-03T12:42:05Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-12-03T12:42:05Z"}, "message": "Make manual_swap autofixable", "tree": {"sha": "28086ac3596b55536d2e6319021698a599954f8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28086ac3596b55536d2e6319021698a599954f8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e3b24de4389491dac9ce630668c710df5950c70", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3mWB0ACgkQaTCGhp1Q\nZjeC3A//Q9ZynT1UGOny/wXc+UmSWVO8mSXhPz2gZcEoby6zGXcWXiRovaHoHsDM\nB32X80aH9ukWyCGqzAmb4fqNKzczZyw4dg3LC59c7iNpLe+Kie1Nml4p3osN6Ua2\nC7CUi02FCLc7ReQ2ubUDv5N96u2QA2OoXPw5TTdmTktw0qOruLPVczyfiVedq06M\n7/DiNlQsYDi04dM0LNJjKB3ZnkUYZfHPF9lFbPHEdnGNfDlryZ2RjqT6ZhZ8AGxz\n9dIrf5qXBzOmM0GPLylldbEaf8vVrUh7LTEricM7a2Z8fimYia81qneR0iWMP+4O\nd5DdoLrzU/gAFaF2Njk1Lbc7AJQjPymLmRw2pFhL5J/Xxk6xP/aTooNoEdrtZe8S\ns2Y1XfO7w5gYRMuskmDfRUq2ycXrke1AWLdFNfbcZBscqk+zZakolC4sc/JWzaQg\nB5D0NQralPrxrYHVWG50UVa8Mlsbgee3EpD9sk5RXi5HoLqaiKSaunsu0TmwwBgR\nq97IPPiRcS7eCnAfbC7PHHxzXivjIfT1BRG/LFy/X0rjX85w6yQyPP2cn5xZa6on\nZ1OvZ+KgBMB2ITrnEfXIC0a/p/2u558wkuyvODegLAumAe0gVHdHcR7OTNv67+nd\nKVo2Yt1nyMEtQEiamDEI0Y+LMRvUNOxUAtO5cTEDPc3EIexsT80=\n=dS/N\n-----END PGP SIGNATURE-----", "payload": "tree 28086ac3596b55536d2e6319021698a599954f8e\nparent bd39a608a8b09ad8207c87f6e976c85d6a407966\nauthor flip1995 <hello@philkrones.com> 1575376925 +0100\ncommitter flip1995 <hello@philkrones.com> 1575376925 +0100\n\nMake manual_swap autofixable\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e3b24de4389491dac9ce630668c710df5950c70", "html_url": "https://github.com/rust-lang/rust/commit/1e3b24de4389491dac9ce630668c710df5950c70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e3b24de4389491dac9ce630668c710df5950c70/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd39a608a8b09ad8207c87f6e976c85d6a407966", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd39a608a8b09ad8207c87f6e976c85d6a407966", "html_url": "https://github.com/rust-lang/rust/commit/bd39a608a8b09ad8207c87f6e976c85d6a407966"}], "stats": {"total": 113, "additions": 100, "deletions": 13}, "files": [{"sha": "77288869ce0e2d499c67c7aef5f54eb807e967a5", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1e3b24de4389491dac9ce630668c710df5950c70/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3b24de4389491dac9ce630668c710df5950c70/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=1e3b24de4389491dac9ce630668c710df5950c70", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::sugg::Sugg;\n use crate::utils::{\n-    differing_macro_contexts, is_type_diagnostic_item, match_type, paths, snippet, span_lint_and_then, walk_ptrs_ty,\n-    SpanlessEq,\n+    differing_macro_contexts, is_type_diagnostic_item, match_type, paths, snippet_with_applicability,\n+    span_lint_and_then, walk_ptrs_ty, SpanlessEq,\n };\n use if_chain::if_chain;\n use matches::matches;\n@@ -105,8 +105,9 @@ fn check_manual_swap(cx: &LateContext<'_, '_>, block: &Block) {\n                     }\n                 }\n \n-                let slice = check_for_slice(cx, lhs1, lhs2);\n+                let mut applicability = Applicability::MachineApplicable;\n \n+                let slice = check_for_slice(cx, lhs1, lhs2);\n                 let (replace, what, sugg) = if let Slice::NotSwappable = slice {\n                     return;\n                 } else if let Slice::Swappable(slice, idx1, idx2) = slice {\n@@ -117,8 +118,8 @@ fn check_manual_swap(cx: &LateContext<'_, '_>, block: &Block) {\n                             format!(\n                                 \"{}.swap({}, {})\",\n                                 slice.maybe_par(),\n-                                snippet(cx, idx1.span, \"..\"),\n-                                snippet(cx, idx2.span, \"..\"),\n+                                snippet_with_applicability(cx, idx1.span, \"..\", &mut applicability),\n+                                snippet_with_applicability(cx, idx2.span, \"..\", &mut applicability),\n                             ),\n                         )\n                     } else {\n@@ -147,7 +148,7 @@ fn check_manual_swap(cx: &LateContext<'_, '_>, block: &Block) {\n                                 span,\n                                 \"try\",\n                                 sugg,\n-                                Applicability::Unspecified,\n+                                applicability,\n                             );\n \n                             if replace {"}, {"sha": "82931bf91fdf2c025a2a679f8794dbe2ef05abf1", "filename": "tests/ui/swap.fixed", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/1e3b24de4389491dac9ce630668c710df5950c70/tests%2Fui%2Fswap.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1e3b24de4389491dac9ce630668c710df5950c70/tests%2Fui%2Fswap.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.fixed?ref=1e3b24de4389491dac9ce630668c710df5950c70", "patch": "@@ -0,0 +1,83 @@\n+// run-rustfix\n+\n+#![warn(clippy::all)]\n+#![allow(\n+    clippy::blacklisted_name,\n+    clippy::no_effect,\n+    clippy::redundant_clone,\n+    redundant_semicolon,\n+    unused_assignments\n+)]\n+\n+struct Foo(u32);\n+\n+#[derive(Clone)]\n+struct Bar {\n+    a: u32,\n+    b: u32,\n+}\n+\n+fn field() {\n+    let mut bar = Bar { a: 1, b: 2 };\n+\n+    let temp = bar.a;\n+    bar.a = bar.b;\n+    bar.b = temp;\n+\n+    let mut baz = vec![bar.clone(), bar.clone()];\n+    let temp = baz[0].a;\n+    baz[0].a = baz[1].a;\n+    baz[1].a = temp;\n+}\n+\n+fn array() {\n+    let mut foo = [1, 2];\n+    foo.swap(0, 1);\n+\n+    foo.swap(0, 1);\n+}\n+\n+fn slice() {\n+    let foo = &mut [1, 2];\n+    foo.swap(0, 1);\n+\n+    foo.swap(0, 1);\n+}\n+\n+fn unswappable_slice() {\n+    let foo = &mut [vec![1, 2], vec![3, 4]];\n+    let temp = foo[0][1];\n+    foo[0][1] = foo[1][0];\n+    foo[1][0] = temp;\n+\n+    // swap(foo[0][1], foo[1][0]) would fail\n+}\n+\n+fn vec() {\n+    let mut foo = vec![1, 2];\n+    foo.swap(0, 1);\n+\n+    foo.swap(0, 1);\n+}\n+\n+#[rustfmt::skip]\n+fn main() {\n+    field();\n+    array();\n+    slice();\n+    unswappable_slice();\n+    vec();\n+\n+    let mut a = 42;\n+    let mut b = 1337;\n+\n+    std::mem::swap(&mut a, &mut b);\n+\n+    ; std::mem::swap(&mut a, &mut b);\n+\n+    let mut c = Foo(42);\n+\n+    std::mem::swap(&mut c.0, &mut a);\n+\n+    ; std::mem::swap(&mut c.0, &mut a);\n+}"}, {"sha": "4582db4b40e29158c312dda948b6c970d275eece", "filename": "tests/ui/swap.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e3b24de4389491dac9ce630668c710df5950c70/tests%2Fui%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3b24de4389491dac9ce630668c710df5950c70/tests%2Fui%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.rs?ref=1e3b24de4389491dac9ce630668c710df5950c70", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+\n #![warn(clippy::all)]\n #![allow(\n     clippy::blacklisted_name,\n@@ -69,6 +71,7 @@ fn main() {\n     field();\n     array();\n     slice();\n+    unswappable_slice();\n     vec();\n \n     let mut a = 42;"}, {"sha": "f49bcfedf3a1970b59751afe03ef8bf400d5cc23", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1e3b24de4389491dac9ce630668c710df5950c70/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e3b24de4389491dac9ce630668c710df5950c70/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=1e3b24de4389491dac9ce630668c710df5950c70", "patch": "@@ -1,5 +1,5 @@\n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:33:5\n+  --> $DIR/swap.rs:35:5\n    |\n LL | /     let temp = foo[0];\n LL | |     foo[0] = foo[1];\n@@ -9,23 +9,23 @@ LL | |     foo[1] = temp;\n    = note: `-D clippy::manual-swap` implied by `-D warnings`\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:42:5\n+  --> $DIR/swap.rs:44:5\n    |\n LL | /     let temp = foo[0];\n LL | |     foo[0] = foo[1];\n LL | |     foo[1] = temp;\n    | |_________________^ help: try: `foo.swap(0, 1)`\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:60:5\n+  --> $DIR/swap.rs:62:5\n    |\n LL | /     let temp = foo[0];\n LL | |     foo[0] = foo[1];\n LL | |     foo[1] = temp;\n    | |_________________^ help: try: `foo.swap(0, 1)`\n \n error: this looks like you are swapping `a` and `b` manually\n-  --> $DIR/swap.rs:80:7\n+  --> $DIR/swap.rs:83:7\n    |\n LL |       ; let t = a;\n    |  _______^\n@@ -36,7 +36,7 @@ LL | |     b = t;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `c.0` and `a` manually\n-  --> $DIR/swap.rs:89:7\n+  --> $DIR/swap.rs:92:7\n    |\n LL |       ; let t = c.0;\n    |  _______^\n@@ -47,7 +47,7 @@ LL | |     a = t;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n-  --> $DIR/swap.rs:77:5\n+  --> $DIR/swap.rs:80:5\n    |\n LL | /     a = b;\n LL | |     b = a;\n@@ -57,7 +57,7 @@ LL | |     b = a;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `c.0` and `a`\n-  --> $DIR/swap.rs:86:5\n+  --> $DIR/swap.rs:89:5\n    |\n LL | /     c.0 = a;\n LL | |     a = c.0;"}]}