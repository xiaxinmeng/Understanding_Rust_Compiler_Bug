{"sha": "41c6c5d4996728b5a635319ef9b077a3d0ccc480", "node_id": "C_kwDOAAsO6NoAKDQxYzZjNWQ0OTk2NzI4YjVhNjM1MzE5ZWY5YjA3N2EzZDBjY2M0ODA", "commit": {"author": {"name": "Zephaniah Ong", "email": "zealorez@gmail.com", "date": "2023-02-09T08:01:29Z"}, "committer": {"name": "Zephaniah Ong", "email": "zealorez@gmail.com", "date": "2023-02-09T08:01:29Z"}, "message": "port over symlink_file function from Build to Config and create symlink for legacy rustfmt path", "tree": {"sha": "42baf66957705bc8c0ce50605739f95cd9a0eb0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42baf66957705bc8c0ce50605739f95cd9a0eb0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c6c5d4996728b5a635319ef9b077a3d0ccc480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c6c5d4996728b5a635319ef9b077a3d0ccc480", "html_url": "https://github.com/rust-lang/rust/commit/41c6c5d4996728b5a635319ef9b077a3d0ccc480", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c6c5d4996728b5a635319ef9b077a3d0ccc480/comments", "author": {"login": "zephaniahong", "id": 33389011, "node_id": "MDQ6VXNlcjMzMzg5MDEx", "avatar_url": "https://avatars.githubusercontent.com/u/33389011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zephaniahong", "html_url": "https://github.com/zephaniahong", "followers_url": "https://api.github.com/users/zephaniahong/followers", "following_url": "https://api.github.com/users/zephaniahong/following{/other_user}", "gists_url": "https://api.github.com/users/zephaniahong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zephaniahong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zephaniahong/subscriptions", "organizations_url": "https://api.github.com/users/zephaniahong/orgs", "repos_url": "https://api.github.com/users/zephaniahong/repos", "events_url": "https://api.github.com/users/zephaniahong/events{/privacy}", "received_events_url": "https://api.github.com/users/zephaniahong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zephaniahong", "id": 33389011, "node_id": "MDQ6VXNlcjMzMzg5MDEx", "avatar_url": "https://avatars.githubusercontent.com/u/33389011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zephaniahong", "html_url": "https://github.com/zephaniahong", "followers_url": "https://api.github.com/users/zephaniahong/followers", "following_url": "https://api.github.com/users/zephaniahong/following{/other_user}", "gists_url": "https://api.github.com/users/zephaniahong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zephaniahong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zephaniahong/subscriptions", "organizations_url": "https://api.github.com/users/zephaniahong/orgs", "repos_url": "https://api.github.com/users/zephaniahong/repos", "events_url": "https://api.github.com/users/zephaniahong/events{/privacy}", "received_events_url": "https://api.github.com/users/zephaniahong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef934d9b632b8ac00276558824664c104b92b5f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef934d9b632b8ac00276558824664c104b92b5f0", "html_url": "https://github.com/rust-lang/rust/commit/ef934d9b632b8ac00276558824664c104b92b5f0"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "5c863015adb278893d7ed2dbf7d6f3f1d4d9697f", "filename": "src/bootstrap/download.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/41c6c5d4996728b5a635319ef9b077a3d0ccc480/src%2Fbootstrap%2Fdownload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6c5d4996728b5a635319ef9b077a3d0ccc480/src%2Fbootstrap%2Fdownload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdownload.rs?ref=41c6c5d4996728b5a635319ef9b077a3d0ccc480", "patch": "@@ -2,7 +2,7 @@ use std::{\n     env,\n     ffi::{OsStr, OsString},\n     fs::{self, File},\n-    io::{BufRead, BufReader, ErrorKind},\n+    io::{self, BufRead, BufReader, ErrorKind},\n     path::{Path, PathBuf},\n     process::{Command, Stdio},\n };\n@@ -26,6 +26,14 @@ impl Config {\n         self.verbose > 0\n     }\n \n+    pub fn symlink_file<P: AsRef<Path>, Q: AsRef<Path>>(&self, src: P, link: Q) -> io::Result<()> {\n+        #[cfg(unix)]\n+        use std::os::unix::fs::symlink as symlink_file;\n+        #[cfg(windows)]\n+        use std::os::windows::fs::symlink_file;\n+        if !self.dry_run() { symlink_file(src.as_ref(), link.as_ref()) } else { Ok(()) }\n+    }\n+\n     pub(crate) fn create(&self, path: &Path, s: &str) {\n         if self.dry_run() {\n             return;\n@@ -331,6 +339,12 @@ impl Config {\n         let bin_root = self.out.join(host.triple).join(\"rustfmt\");\n         let rustfmt_path = bin_root.join(\"bin\").join(exe(\"rustfmt\", host));\n         let rustfmt_stamp = bin_root.join(\".rustfmt-stamp\");\n+\n+        let legacy_rustfmt = self.initial_rustc.with_file_name(exe(\"rustfmt\", host));\n+        if !legacy_rustfmt.exists() {\n+            t!(self.symlink_file(&rustfmt_path, &legacy_rustfmt));\n+        }\n+\n         if rustfmt_path.exists() && !program_out_of_date(&rustfmt_stamp, &channel) {\n             return Some(rustfmt_path);\n         }"}, {"sha": "f753720b353066bcb05a8e9889a0d97497e70587", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/41c6c5d4996728b5a635319ef9b077a3d0ccc480/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6c5d4996728b5a635319ef9b077a3d0ccc480/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=41c6c5d4996728b5a635319ef9b077a3d0ccc480", "patch": "@@ -20,7 +20,6 @@ use std::cell::{Cell, RefCell};\n use std::collections::{HashMap, HashSet};\n use std::env;\n use std::fs::{self, File};\n-use std::io;\n use std::io::ErrorKind;\n use std::path::{Path, PathBuf};\n use std::process::{Command, Stdio};\n@@ -1407,7 +1406,7 @@ impl Build {\n                 src = t!(fs::canonicalize(src));\n             } else {\n                 let link = t!(fs::read_link(src));\n-                t!(self.symlink_file(link, dst));\n+                t!(self.config.symlink_file(link, dst));\n                 return;\n             }\n         }\n@@ -1525,14 +1524,6 @@ impl Build {\n         iter.map(|e| t!(e)).collect::<Vec<_>>().into_iter()\n     }\n \n-    fn symlink_file<P: AsRef<Path>, Q: AsRef<Path>>(&self, src: P, link: Q) -> io::Result<()> {\n-        #[cfg(unix)]\n-        use std::os::unix::fs::symlink as symlink_file;\n-        #[cfg(windows)]\n-        use std::os::windows::fs::symlink_file;\n-        if !self.config.dry_run() { symlink_file(src.as_ref(), link.as_ref()) } else { Ok(()) }\n-    }\n-\n     /// Returns if config.ninja is enabled, and checks for ninja existence,\n     /// exiting with a nicer error message if not.\n     fn ninja(&self) -> bool {"}, {"sha": "07d339c067c860242ea0400a68b1b7575571895c", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c6c5d4996728b5a635319ef9b077a3d0ccc480/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6c5d4996728b5a635319ef9b077a3d0ccc480/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=41c6c5d4996728b5a635319ef9b077a3d0ccc480", "patch": "@@ -516,7 +516,7 @@ impl Step for Llvm {\n \n             let lib_llvm = out_dir.join(\"build\").join(\"lib\").join(lib_name);\n             if !lib_llvm.exists() {\n-                t!(builder.symlink_file(\"libLLVM.dylib\", &lib_llvm));\n+                t!(builder.build.config.symlink_file(\"libLLVM.dylib\", &lib_llvm));\n             }\n         }\n "}]}