{"sha": "8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMzVmYzYzMDMxOTVjMGY0N2M4ZWIwYmM1ZjlkYTBjZTAwNzNiMWY=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-10T16:21:14Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-10T16:26:58Z"}, "message": "copyediting: for loops", "tree": {"sha": "125e1a10b5b6afd3a2d6bee45c40fe27d6d89f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/125e1a10b5b6afd3a2d6bee45c40fe27d6d89f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f", "html_url": "https://github.com/rust-lang/rust/commit/8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b577beeb3a006f68cf8df25e7c77bb13a7803f26", "url": "https://api.github.com/repos/rust-lang/rust/commits/b577beeb3a006f68cf8df25e7c77bb13a7803f26", "html_url": "https://github.com/rust-lang/rust/commit/b577beeb3a006f68cf8df25e7c77bb13a7803f26"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "1e3f2fa54bcc6c292bef7912c1ea1699b8603dc5", "filename": "src/doc/trpl/for-loops.md", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f/src%2Fdoc%2Ftrpl%2Ffor-loops.md", "raw_url": "https://github.com/rust-lang/rust/raw/8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f/src%2Fdoc%2Ftrpl%2Ffor-loops.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ffor-loops.md?ref=8d35fc6303195c0f47c8eb0bc5f9da0ce0073b1f", "patch": "@@ -1,44 +1,43 @@\n % for Loops\n \n-The `for` loop is used to loop a particular number of times. Rust's `for` loops\n-work a bit differently than in other systems languages, however. Rust's `for`\n-loop doesn't look like this \"C-style\" `for` loop:\n+The `for` loop is used to loop a particular number of times. Rust\u2019s `for` loops\n+work a bit differently than in other systems languages, however. Rust\u2019s `for`\n+loop doesn\u2019t look like this \u201cC-style\u201d `for` loop:\n \n-```{c}\n+```c\n for (x = 0; x < 10; x++) {\n     printf( \"%d\\n\", x );\n }\n ```\n \n Instead, it looks like this:\n \n-```{rust}\n+```rust\n for x in 0..10 {\n     println!(\"{}\", x); // x: i32\n }\n ```\n \n In slightly more abstract terms,\n \n-```{ignore}\n+```ignore\n for var in expression {\n     code\n }\n ```\n \n-The expression is an iterator, which we will discuss in more depth later in the\n-guide. The iterator gives back a series of elements. Each element is one\n-iteration of the loop. That value is then bound to the name `var`, which is\n-valid for the loop body. Once the body is over, the next value is fetched from\n-the iterator, and we loop another time. When there are no more values, the\n-`for` loop is over.\n+The expression is an [iterator][iterator]. The iterator gives back a series of\n+elements. Each element is one iteration of the loop. That value is then bound\n+to the name `var`, which is valid for the loop body. Once the body is over, the\n+next value is fetched from the iterator, and we loop another time. When there\n+are no more values, the `for` loop is over.\n+\n+[iterator]: iterators.html\n \n In our example, `0..10` is an expression that takes a start and an end position,\n and gives an iterator over those values. The upper bound is exclusive, though,\n so our loop will print `0` through `9`, not `10`.\n \n-Rust does not have the \"C-style\" `for` loop on purpose. Manually controlling\n+Rust does not have the \u201cC-style\u201d `for` loop on purpose. Manually controlling\n each element of the loop is complicated and error prone, even for experienced C\n developers.\n-\n-We'll talk more about `for` when we cover *iterators*, later in the Guide."}]}