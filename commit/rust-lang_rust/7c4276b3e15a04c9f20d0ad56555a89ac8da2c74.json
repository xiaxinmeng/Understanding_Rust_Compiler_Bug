{"sha": "7c4276b3e15a04c9f20d0ad56555a89ac8da2c74", "node_id": "C_kwDOAAsO6NoAKDdjNDI3NmIzZTE1YTA0YzlmMjBkMGFkNTY1NTVhODlhYzhkYTJjNzQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-01T16:02:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-01T16:02:47Z"}, "message": "add path tests", "tree": {"sha": "bdd51a66ed9ff21fdd2c5e42e952a738642b2b38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdd51a66ed9ff21fdd2c5e42e952a738642b2b38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c4276b3e15a04c9f20d0ad56555a89ac8da2c74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c4276b3e15a04c9f20d0ad56555a89ac8da2c74", "html_url": "https://github.com/rust-lang/rust/commit/7c4276b3e15a04c9f20d0ad56555a89ac8da2c74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c4276b3e15a04c9f20d0ad56555a89ac8da2c74/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287e748aa914c55ac9704209559386e4f4a0676d", "url": "https://api.github.com/repos/rust-lang/rust/commits/287e748aa914c55ac9704209559386e4f4a0676d", "html_url": "https://github.com/rust-lang/rust/commit/287e748aa914c55ac9704209559386e4f4a0676d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "1174e33f5f8b28cff1c9656091760da38711270c", "filename": "crates/parser/src/tests/entries.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c4276b3e15a04c9f20d0ad56555a89ac8da2c74/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c4276b3e15a04c9f20d0ad56555a89ac8da2c74/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs?ref=7c4276b3e15a04c9f20d0ad56555a89ac8da2c74", "patch": "@@ -53,6 +53,16 @@ fn expr() {\n     check_prefix(PrefixEntryPoint::Expr, \"#[attr] ()\", \"#[attr] ()\");\n }\n \n+#[test]\n+fn path() {\n+    check_prefix(PrefixEntryPoint::Path, \"foo::bar baz\", \"foo::bar\");\n+    check_prefix(PrefixEntryPoint::Path, \"foo::<> baz\", \"foo::<>\");\n+    check_prefix(PrefixEntryPoint::Path, \"foo<> baz\", \"foo<>\");\n+    check_prefix(PrefixEntryPoint::Path, \"Fn() -> i32?\", \"Fn() -> i32\");\n+    // FIXME: this shouldn't be accepted as path actually.\n+    check_prefix(PrefixEntryPoint::Path, \"<_>::foo\", \"<_>::foo\");\n+}\n+\n fn check_prefix(entry: PrefixEntryPoint, input: &str, prefix: &str) {\n     let lexed = LexedStr::new(input);\n     let input = lexed.to_input();"}]}