{"sha": "f1044d2f774b3525ab28372ccd2be30911f2eb29", "node_id": "C_kwDOAAsO6NoAKGYxMDQ0ZDJmNzc0YjM1MjVhYjI4MzcyY2NkMmJlMzA5MTFmMmViMjk", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-06-21T18:42:19Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-06-21T18:46:10Z"}, "message": "Bless stderr files after rustfmt", "tree": {"sha": "f3e1b9ed43c55dcb56eb6f338ed4dbe30fd65dd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3e1b9ed43c55dcb56eb6f338ed4dbe30fd65dd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1044d2f774b3525ab28372ccd2be30911f2eb29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmKyEfIACgkQ+boUO5X/\nbYKn4A/8CvuiZRKI4Nam/7QBVA2rtwEe45jQwraqyfg67I2jvejvr84m9Pr8+jru\nO/KQcgG9pGG77x4R00tsb+9jbRk9ePVY3BIUwmEMxVHK6IQRHxgZTa/QEfpxAUIv\n/uPN0Udf4t2nd+YGrvMeEoGcS5Cy0e079ZDFTJf2CFfHtF/2pUacdfGzsx6rC6g9\nV3WJ2jVT6t3lW8A0/KB5fegbpRFQIcNPwqJrC4rU2qmoB/jh9vRPF7WstJp0WRGM\n0fCTD1AhMSJSThO7zG7vbT9rrbx4LcmC4pv0Y80CnSIVgmnnQQfwYlR6504eEutl\nXCeCZgeayoseHmVL8BH/vYtbOgvm/DC1aqdaWNUdN6DDyfEymWOlo1vJ2v4CI+o2\nejz2bg0FkSiuOiPwrx4RSlaNEsIG42jGwOexcjnSoTEeKwHpkWBUgVt+z/F5VtFA\n2KASJXtKiR+pXLE6rNg2zNA4i7ev9eyl6sR1XFMGb2ZVqYllhcC8bT05jY4Kt4Qh\nJFDRru5B8YXCy4Ly+PN/Yyzun8Qi8c0h0kVhXBtXeB/P0mmrV9PggMBDmkbAEJd7\nRJoGOGRQwEzIjsQlmYqFcWCg6eWMCIGzodp8awUBnP7/PjZ5jLf2G/I3FE9og4Gm\nKtE8IeNdk5Uug0PKY/ussW8BLEpHxD2Uno074Vaz51PfNu/b3VU=\n=wr7r\n-----END PGP SIGNATURE-----", "payload": "tree f3e1b9ed43c55dcb56eb6f338ed4dbe30fd65dd6\nparent 7326da7ce3750087fe13effd595c73caf92f5cdf\nauthor David Tolnay <dtolnay@gmail.com> 1655836939 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1655837170 -0700\n\nBless stderr files after rustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1044d2f774b3525ab28372ccd2be30911f2eb29", "html_url": "https://github.com/rust-lang/rust/commit/f1044d2f774b3525ab28372ccd2be30911f2eb29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1044d2f774b3525ab28372ccd2be30911f2eb29/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7326da7ce3750087fe13effd595c73caf92f5cdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/7326da7ce3750087fe13effd595c73caf92f5cdf", "html_url": "https://github.com/rust-lang/rust/commit/7326da7ce3750087fe13effd595c73caf92f5cdf"}], "stats": {"total": 253, "additions": 127, "deletions": 126}, "files": [{"sha": "e5a3ad3d33af06174808b81e856dd5c46d4c4700", "filename": "tests/fail/box-cell-alias.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fbox-cell-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fbox-cell-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fbox-cell-alias.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,11 +1,11 @@\n error: Undefined Behavior: trying to reborrow <TAG> for SharedReadWrite permission at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n   --> $DIR/box-cell-alias.rs:LL:CC\n    |\n-LL |     unsafe { (*ptr).set(20); }\n-   |              ^^^^^^^^^^^^^^\n-   |              |\n-   |              trying to reborrow <TAG> for SharedReadWrite permission at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n-   |              this error occurs as part of a reborrow at ALLOC[0x0..0x1]\n+LL |         (*ptr).set(20);\n+   |         ^^^^^^^^^^^^^^\n+   |         |\n+   |         trying to reborrow <TAG> for SharedReadWrite permission at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n+   |         this error occurs as part of a reborrow at ALLOC[0x0..0x1]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information"}, {"sha": "79fd2ba086853a678033b3eddc066eb788689f57", "filename": "tests/fail/dangling_pointers/maybe_null_pointer_write_zst.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: dereferencing pointer failed: ALLOC has size 1, so pointer at offset -2048 is out-of-bounds\n   --> $DIR/maybe_null_pointer_write_zst.rs:LL:CC\n    |\n-LL |     unsafe { *ptr = zst_val; }\n-   |              ^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC has size 1, so pointer at offset -2048 is out-of-bounds\n+LL |         *ptr = zst_val;\n+   |         ^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC has size 1, so pointer at offset -2048 is out-of-bounds\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "bb5a8742e9091bb938914f44645dfc59acc32a0c", "filename": "tests/fail/intrinsics/copy_null.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fcopy_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fcopy_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fcopy_null.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: memory access failed: null pointer is not a valid pointer\n   --> $DIR/copy_null.rs:LL:CC\n    |\n-LL |     unsafe { copy_nonoverlapping(std::ptr::null(), ptr, 0); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is not a valid pointer\n+LL |         copy_nonoverlapping(std::ptr::null(), ptr, 0);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is not a valid pointer\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "b244eaeb4191665c38781b74897eb0b5972c1758", "filename": "tests/fail/intrinsics/copy_unaligned.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fcopy_unaligned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fcopy_unaligned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fcopy_unaligned.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: accessing memory with alignment ALIGN, but alignment ALIGN is required\n   --> $DIR/copy_unaligned.rs:LL:CC\n    |\n-LL |     unsafe { copy_nonoverlapping(&data[5], ptr, 0); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ accessing memory with alignment ALIGN, but alignment ALIGN is required\n+LL |         copy_nonoverlapping(&data[5], ptr, 0);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ accessing memory with alignment ALIGN, but alignment ALIGN is required\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "66f8168fade7208469e92b962f3f0cca709cd15d", "filename": "tests/fail/intrinsics/exact_div1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fexact_div1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: calculating the remainder with a divisor of zero\n   --> $DIR/exact_div1.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::exact_div(2, 0); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ calculating the remainder with a divisor of zero\n+LL |         std::intrinsics::exact_div(2, 0);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ calculating the remainder with a divisor of zero\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "2c102dd0b55cdfe07c2b671ba7061ae04611bc9f", "filename": "tests/fail/intrinsics/exact_div2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fexact_div2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: exact_div: 2_u16 cannot be divided by 3_u16 without remainder\n   --> $DIR/exact_div2.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::exact_div(2u16, 3); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ exact_div: 2_u16 cannot be divided by 3_u16 without remainder\n+LL |         std::intrinsics::exact_div(2u16, 3);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ exact_div: 2_u16 cannot be divided by 3_u16 without remainder\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "61eacdc65ff3e88877cc5c367ea872966de10a57", "filename": "tests/fail/intrinsics/exact_div3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fexact_div3.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: exact_div: -19_i8 cannot be divided by 2_i8 without remainder\n   --> $DIR/exact_div3.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::exact_div(-19i8, 2); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ exact_div: -19_i8 cannot be divided by 2_i8 without remainder\n+LL |         std::intrinsics::exact_div(-19i8, 2);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ exact_div: -19_i8 cannot be divided by 2_i8 without remainder\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "a3f5aafbe2d6b7b317740ae3d3e377b3f82a70ce", "filename": "tests/fail/intrinsics/exact_div4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Fexact_div4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fexact_div4.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow in signed remainder (dividing MIN by -1)\n   --> $DIR/exact_div4.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::exact_div(i64::MIN, -1); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow in signed remainder (dividing MIN by -1)\n+LL |         std::intrinsics::exact_div(i64::MIN, -1);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow in signed remainder (dividing MIN by -1)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "b12fd13b5f4dacee9defff1bc95e865196f226c1", "filename": "tests/fail/intrinsics/float_to_int_32_inf1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_inf1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_inf1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_inf1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on +Inf which cannot be represented in target type `i32`\n   --> $DIR/float_to_int_32_inf1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, i32>(f32::INFINITY); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on +Inf which cannot be represented in target type `i32`\n+LL |         float_to_int_unchecked::<f32, i32>(f32::INFINITY);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on +Inf which cannot be represented in target type `i32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "d9223462bfa59b2c72938428961ba3db43875e46", "filename": "tests/fail/intrinsics/float_to_int_32_infneg1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_infneg1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_infneg1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_infneg1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `i32`\n   --> $DIR/float_to_int_32_infneg1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, i32>(f32::NEG_INFINITY); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `i32`\n+LL |         float_to_int_unchecked::<f32, i32>(f32::NEG_INFINITY);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `i32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "cb8764174abdcbfbd929fdc48adcddd927b70ae2", "filename": "tests/fail/intrinsics/float_to_int_32_nan.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nan.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n   --> $DIR/float_to_int_32_nan.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, u32>(f32::NAN); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n+LL |         float_to_int_unchecked::<f32, u32>(f32::NAN);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "49e19bf9635655b52207fc47bb764fa67a0751e3", "filename": "tests/fail/intrinsics/float_to_int_32_nanneg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nanneg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nanneg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nanneg.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n   --> $DIR/float_to_int_32_nanneg.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, u32>(-f32::NAN); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n+LL |         float_to_int_unchecked::<f32, u32>(-f32::NAN);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "5d847166a07180f2efb4c3bd25cd3bc54dbd5165", "filename": "tests/fail/intrinsics/float_to_int_32_neg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_neg.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -1 which cannot be represented in target type `u32`\n   --> $DIR/float_to_int_32_neg.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, u32>(-1.000000001f32); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -1 which cannot be represented in target type `u32`\n+LL |         float_to_int_unchecked::<f32, u32>(-1.000000001f32);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -1 which cannot be represented in target type `u32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "be6ad1f381d4d3d3fcbe04dcdf6d85b30147a580", "filename": "tests/fail/intrinsics/float_to_int_32_too_big1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 2.14748365E+9 which cannot be represented in target type `i32`\n   --> $DIR/float_to_int_32_too_big1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, i32>(2147483648.0f32); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 2.14748365E+9 which cannot be represented in target type `i32`\n+LL |         float_to_int_unchecked::<f32, i32>(2147483648.0f32);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 2.14748365E+9 which cannot be represented in target type `i32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "d7fbe5a34b52be24a59405cc649ba614cc6e34fd", "filename": "tests/fail/intrinsics/float_to_int_32_too_big2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 4.2949673E+9 which cannot be represented in target type `u32`\n   --> $DIR/float_to_int_32_too_big2.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, u32>((u32::MAX-127) as f32); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 4.2949673E+9 which cannot be represented in target type `u32`\n+LL |         float_to_int_unchecked::<f32, u32>((u32::MAX - 127) as f32);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 4.2949673E+9 which cannot be represented in target type `u32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "2c225b85ec90c155a932371b5e7b7d9a87ac945c", "filename": "tests/fail/intrinsics/float_to_int_32_too_small1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_small1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_small1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_small1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -2.1474839E+9 which cannot be represented in target type `i32`\n   --> $DIR/float_to_int_32_too_small1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f32, i32>(-2147483904.0f32); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -2.1474839E+9 which cannot be represented in target type `i32`\n+LL |         float_to_int_unchecked::<f32, i32>(-2147483904.0f32);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -2.1474839E+9 which cannot be represented in target type `i32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "7bb1f08afa8744d9a80891d7146dec813332c495", "filename": "tests/fail/intrinsics/float_to_int_64_inf1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_inf1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_inf1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_inf1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on +Inf which cannot be represented in target type `u128`\n   --> $DIR/float_to_int_64_inf1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, u128>(f64::INFINITY); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on +Inf which cannot be represented in target type `u128`\n+LL |         float_to_int_unchecked::<f64, u128>(f64::INFINITY);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on +Inf which cannot be represented in target type `u128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "eb96f6869a143117968ff493c275e90cd60929db", "filename": "tests/fail/intrinsics/float_to_int_64_infneg1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `u128`\n   --> $DIR/float_to_int_64_infneg1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, u128>(f64::NEG_INFINITY); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `u128`\n+LL |         float_to_int_unchecked::<f64, u128>(f64::NEG_INFINITY);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `u128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "a2f847be9071b108f39cbfbff88e2031d728bf9d", "filename": "tests/fail/intrinsics/float_to_int_64_infneg2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `i128`\n   --> $DIR/float_to_int_64_infneg2.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i128>(f64::NEG_INFINITY); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `i128`\n+LL |         float_to_int_unchecked::<f64, i128>(f64::NEG_INFINITY);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -Inf which cannot be represented in target type `i128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "8da85497582088404c16b42482c0f379602c0a9e", "filename": "tests/fail/intrinsics/float_to_int_64_nan.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_nan.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n   --> $DIR/float_to_int_64_nan.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, u32>(f64::NAN); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n+LL |         float_to_int_unchecked::<f64, u32>(f64::NAN);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on NaN which cannot be represented in target type `u32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "35bb0aaa22cb36212ee25b053da74839826b6a98", "filename": "tests/fail/intrinsics/float_to_int_64_neg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_neg.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -1 which cannot be represented in target type `u128`\n   --> $DIR/float_to_int_64_neg.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, u128>(-1.0000000000001f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -1 which cannot be represented in target type `u128`\n+LL |         float_to_int_unchecked::<f64, u128>(-1.0000000000001f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -1 which cannot be represented in target type `u128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "e031e00709e03bab21d2f87e60f0084b1b0c5e68", "filename": "tests/fail/intrinsics/float_to_int_64_too_big1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 2147483648 which cannot be represented in target type `i32`\n   --> $DIR/float_to_int_64_too_big1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i32>(2147483648.0f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 2147483648 which cannot be represented in target type `i32`\n+LL |         float_to_int_unchecked::<f64, i32>(2147483648.0f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 2147483648 which cannot be represented in target type `i32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "8c4478603fbd5b215744522c6dc09cf5269065d8", "filename": "tests/fail/intrinsics/float_to_int_64_too_big2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 9.2233720368547758E+18 which cannot be represented in target type `i64`\n   --> $DIR/float_to_int_64_too_big2.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i64>(9223372036854775808.0f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 9.2233720368547758E+18 which cannot be represented in target type `i64`\n+LL |         float_to_int_unchecked::<f64, i64>(9223372036854775808.0f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 9.2233720368547758E+18 which cannot be represented in target type `i64`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "d7f97f37de59373f0e1bcda05e7f60afa4e663f8", "filename": "tests/fail/intrinsics/float_to_int_64_too_big3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big3.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 1.8446744073709552E+19 which cannot be represented in target type `u64`\n   --> $DIR/float_to_int_64_too_big3.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, u64>(18446744073709551616.0f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 1.8446744073709552E+19 which cannot be represented in target type `u64`\n+LL |         float_to_int_unchecked::<f64, u64>(18446744073709551616.0f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 1.8446744073709552E+19 which cannot be represented in target type `u64`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "cfac443f4c9eda5e57b95bb714920c40f065e796", "filename": "tests/fail/intrinsics/float_to_int_64_too_big4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big4.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 3.4028236692093846E+38 which cannot be represented in target type `u128`\n   --> $DIR/float_to_int_64_too_big4.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, u128>(u128::MAX as f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 3.4028236692093846E+38 which cannot be represented in target type `u128`\n+LL |         float_to_int_unchecked::<f64, u128>(u128::MAX as f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 3.4028236692093846E+38 which cannot be represented in target type `u128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "a0d501dad303f5c8c7ccc3a831822c81e7b7cccc", "filename": "tests/fail/intrinsics/float_to_int_64_too_big5.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big5.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 2.4028236692093845E+38 which cannot be represented in target type `i128`\n   --> $DIR/float_to_int_64_too_big5.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i128>(240282366920938463463374607431768211455.0f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 2.4028236692093845E+38 which cannot be represented in target type `i128`\n+LL |         float_to_int_unchecked::<f64, i128>(240282366920938463463374607431768211455.0f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 2.4028236692093845E+38 which cannot be represented in target type `i128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "afb5d4ffe72280edf3f2e582cd28255b8a950014", "filename": "tests/fail/intrinsics/float_to_int_64_too_big6.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big6.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 1.7976931348623157E+308 which cannot be represented in target type `u128`\n   --> $DIR/float_to_int_64_too_big6.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, u128>(f64::MAX); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 1.7976931348623157E+308 which cannot be represented in target type `u128`\n+LL |         float_to_int_unchecked::<f64, u128>(f64::MAX);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 1.7976931348623157E+308 which cannot be represented in target type `u128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "291acf529b4fc37660a2dd311da3eb052c3ecc3e", "filename": "tests/fail/intrinsics/float_to_int_64_too_big7.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big7.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -1.7976931348623157E+308 which cannot be represented in target type `i128`\n   --> $DIR/float_to_int_64_too_big7.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i128>(f64::MIN); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -1.7976931348623157E+308 which cannot be represented in target type `i128`\n+LL |         float_to_int_unchecked::<f64, i128>(f64::MIN);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -1.7976931348623157E+308 which cannot be represented in target type `i128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "ceb625972690f97104cb86add8d2acfae8f027d1", "filename": "tests/fail/intrinsics/float_to_int_64_too_small1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -2147483649 which cannot be represented in target type `i32`\n   --> $DIR/float_to_int_64_too_small1.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i32>(-2147483649.0f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -2147483649 which cannot be represented in target type `i32`\n+LL |         float_to_int_unchecked::<f64, i32>(-2147483649.0f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -2147483649 which cannot be represented in target type `i32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "f8255c2daca09056423388a102f66558e68cf175", "filename": "tests/fail/intrinsics/float_to_int_64_too_small2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -9.2233720368547778E+18 which cannot be represented in target type `i64`\n   --> $DIR/float_to_int_64_too_small2.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i64>(-9223372036854777856.0f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -9.2233720368547778E+18 which cannot be represented in target type `i64`\n+LL |         float_to_int_unchecked::<f64, i64>(-9223372036854777856.0f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -9.2233720368547778E+18 which cannot be represented in target type `i64`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "6bfb6f1f18d8a054f9441dff767a1eacbdfa4f48", "filename": "tests/fail/intrinsics/float_to_int_64_too_small3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small3.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on -2.4028236692093845E+38 which cannot be represented in target type `i128`\n   --> $DIR/float_to_int_64_too_small3.rs:LL:CC\n    |\n-LL |     unsafe { float_to_int_unchecked::<f64, i128>(-240282366920938463463374607431768211455.0f64); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -2.4028236692093845E+38 which cannot be represented in target type `i128`\n+LL |         float_to_int_unchecked::<f64, i128>(-240282366920938463463374607431768211455.0f64);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on -2.4028236692093845E+38 which cannot be represented in target type `i128`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "403bbbac5149f9b1eb13d92686b65273e156a855", "filename": "tests/fail/intrinsics/unchecked_add1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_add1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_add1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Funchecked_add1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow executing `unchecked_add`\n   --> $DIR/unchecked_add1.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::unchecked_add(40000u16, 30000); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_add`\n+LL |         std::intrinsics::unchecked_add(40000u16, 30000);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_add`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "4881fce719e7e1a2eb512d1b7d3d37fda99ae9a9", "filename": "tests/fail/intrinsics/unchecked_add2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_add2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_add2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Funchecked_add2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow executing `unchecked_add`\n   --> $DIR/unchecked_add2.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::unchecked_add(-30000i16, -8000); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_add`\n+LL |         std::intrinsics::unchecked_add(-30000i16, -8000);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_add`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "4792608961d3d8eb6b3920701b087ec9935e6fa3", "filename": "tests/fail/intrinsics/unchecked_div1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_div1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_div1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Funchecked_div1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow in signed division (dividing MIN by -1)\n   --> $DIR/unchecked_div1.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::unchecked_div(i16::MIN, -1); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow in signed division (dividing MIN by -1)\n+LL |         std::intrinsics::unchecked_div(i16::MIN, -1);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow in signed division (dividing MIN by -1)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "e94676fdfed793c15fb986e3f3cd098cbd075534", "filename": "tests/fail/intrinsics/unchecked_mul1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_mul1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_mul1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Funchecked_mul1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow executing `unchecked_mul`\n   --> $DIR/unchecked_mul1.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::unchecked_mul(300u16, 250u16); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_mul`\n+LL |         std::intrinsics::unchecked_mul(300u16, 250u16);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_mul`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "493e04e46634d2abb1f2d6cc144bf91832c7addc", "filename": "tests/fail/intrinsics/unchecked_mul2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_mul2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_mul2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Funchecked_mul2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow executing `unchecked_mul`\n   --> $DIR/unchecked_mul2.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::unchecked_mul(1_000_000_000i32, -4); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_mul`\n+LL |         std::intrinsics::unchecked_mul(1_000_000_000i32, -4);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_mul`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "838005dc1e31df39f1cc5000f6a93b9b8526d4b6", "filename": "tests/fail/intrinsics/unchecked_sub1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_sub1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_sub1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Funchecked_sub1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow executing `unchecked_sub`\n   --> $DIR/unchecked_sub1.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::unchecked_sub(14u32, 22); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_sub`\n+LL |         std::intrinsics::unchecked_sub(14u32, 22);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_sub`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "dc4b170198797f96b3490d4d052b2db7a1ddccbd", "filename": "tests/fail/intrinsics/unchecked_sub2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_sub2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fintrinsics%2Funchecked_sub2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Funchecked_sub2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow executing `unchecked_sub`\n   --> $DIR/unchecked_sub2.rs:LL:CC\n    |\n-LL |     unsafe { std::intrinsics::unchecked_sub(30000i16, -7000); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_sub`\n+LL |         std::intrinsics::unchecked_sub(30000i16, -7000);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overflow executing `unchecked_sub`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "7094aebd6131c0c54403fda22fa919be1284ec1b", "filename": "tests/fail/panic/unwind_panic_abort.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fpanic%2Funwind_panic_abort.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fpanic%2Funwind_panic_abort.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fpanic%2Funwind_panic_abort.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: unwinding past a stack frame that does not allow unwinding\n   --> $DIR/unwind_panic_abort.rs:LL:CC\n    |\n-LL |     unsafe { miri_start_panic(&mut 0); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^ unwinding past a stack frame that does not allow unwinding\n+LL |         miri_start_panic(&mut 0);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ unwinding past a stack frame that does not allow unwinding\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "a70a45f2235aff14d7770ae454136be0d0fe67dc", "filename": "tests/fail/stacked_borrows/illegal_write1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -17,8 +17,8 @@ LL |     let xref = &*target;\n help: <TAG> was later invalidated at offsets [0x0..0x4]\n   --> $DIR/illegal_write1.rs:LL:CC\n    |\n-LL |         unsafe { *x = 42; } // invalidates shared ref, activates raw\n-   |                  ^^^^^^^\n+LL |             *x = 42; // invalidates shared ref, activates raw\n+   |             ^^^^^^^\n    = note: inside `main` at $DIR/illegal_write1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "d2a06cc386a144e6bab75d5e330926d885704ead", "filename": "tests/fail/stacked_borrows/illegal_write2.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,11 +1,11 @@\n error: Undefined Behavior: attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n   --> $DIR/illegal_write2.rs:LL:CC\n    |\n-LL |     unsafe { *target2 = 13; }\n-   |              ^^^^^^^^^^^^^\n-   |              |\n-   |              attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n-   |              this error occurs as part of an access at ALLOC[0x0..0x4]\n+LL |         *target2 = 13;\n+   |         ^^^^^^^^^^^^^\n+   |         |\n+   |         attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n+   |         this error occurs as part of an access at ALLOC[0x0..0x4]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information"}, {"sha": "fc87557ea9b467448ff1782ecd010f4d16ba67c0", "filename": "tests/fail/stacked_borrows/illegal_write3.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,11 +1,11 @@\n error: Undefined Behavior: attempting a write access using <untagged> at ALLOC[0x0], but that tag only grants SharedReadOnly permission for this location\n   --> $DIR/illegal_write3.rs:LL:CC\n    |\n-LL |     unsafe { *ptr = 42; }\n-   |              ^^^^^^^^^\n-   |              |\n-   |              attempting a write access using <untagged> at ALLOC[0x0], but that tag only grants SharedReadOnly permission for this location\n-   |              this error occurs as part of an access at ALLOC[0x0..0x4]\n+LL |         *ptr = 42;\n+   |         ^^^^^^^^^\n+   |         |\n+   |         attempting a write access using <untagged> at ALLOC[0x0], but that tag only grants SharedReadOnly permission for this location\n+   |         this error occurs as part of an access at ALLOC[0x0..0x4]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information"}, {"sha": "3a7fc0ef8116bc46b7998109d91c381b9fbfaf83", "filename": "tests/fail/stacked_borrows/illegal_write6.stderr", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: not granting access to tag <untagged> because incompatible item is protected: [Unique for <TAG> (call ID)]\n   --> $DIR/illegal_write6.rs:LL:CC\n    |\n-LL |     unsafe { *y = 2; }\n-   |              ^^^^^^ not granting access to tag <untagged> because incompatible item is protected: [Unique for <TAG> (call ID)]\n+LL |         *y = 2;\n+   |         ^^^^^^ not granting access to tag <untagged> because incompatible item is protected: [Unique for <TAG> (call ID)]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n@@ -22,7 +22,8 @@ help: this protector is live for this call\n LL | / fn foo(a: &mut u32, y: *mut u32) -> u32 {\n LL | |     *a = 1;\n LL | |     let _b = &*a;\n-LL | |     unsafe { *y = 2; }\n+LL | |     unsafe {\n+...  |\n LL | |     return *a;\n LL | | }\n    | |_^"}, {"sha": "60a277ee057ec9f24311c0718935c6d7377c6bc5", "filename": "tests/fail/stacked_borrows/raw_tracking.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,11 +1,11 @@\n error: Undefined Behavior: attempting a write access using <TAG> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n   --> $DIR/raw_tracking.rs:LL:CC\n    |\n-LL |     unsafe { *raw1 = 13; }\n-   |              ^^^^^^^^^^\n-   |              |\n-   |              attempting a write access using <TAG> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n-   |              this error occurs as part of an access at ALLOC[0x0..0x4]\n+LL |         *raw1 = 13;\n+   |         ^^^^^^^^^^\n+   |         |\n+   |         attempting a write access using <TAG> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n+   |         this error occurs as part of an access at ALLOC[0x0..0x4]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information"}, {"sha": "0808d8471b452c675d394c910e04d9b0edb3694f", "filename": "tests/fail/stacked_borrows/shr_frozen_violation1.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,25 +1,25 @@\n error: Undefined Behavior: attempting a write access using <untagged> at ALLOC[0x0], but that tag only grants SharedReadOnly permission for this location\n   --> $DIR/shr_frozen_violation1.rs:LL:CC\n    |\n-LL |     unsafe { *(x as *const i32 as *mut i32) = 7; }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |              |\n-   |              attempting a write access using <untagged> at ALLOC[0x0], but that tag only grants SharedReadOnly permission for this location\n-   |              this error occurs as part of an access at ALLOC[0x0..0x4]\n+LL |         *(x as *const i32 as *mut i32) = 7;\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         |\n+   |         attempting a write access using <untagged> at ALLOC[0x0], but that tag only grants SharedReadOnly permission for this location\n+   |         this error occurs as part of an access at ALLOC[0x0..0x4]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n help: tag was most recently created at offsets [0x0..0x4]\n   --> $DIR/shr_frozen_violation1.rs:LL:CC\n    |\n-LL |     unsafe { *(x as *const i32 as *mut i32) = 7; }\n-   |                ^\n+LL |         *(x as *const i32 as *mut i32) = 7;\n+   |           ^\n    = note: inside `unknown_code` at $DIR/shr_frozen_violation1.rs:LL:CC\n note: inside `foo` at $DIR/shr_frozen_violation1.rs:LL:CC\n   --> $DIR/shr_frozen_violation1.rs:LL:CC\n    |\n-LL |   unknown_code(&*x);\n-   |   ^^^^^^^^^^^^^^^^^\n+LL |     unknown_code(&*x);\n+   |     ^^^^^^^^^^^^^^^^^\n note: inside `main` at $DIR/shr_frozen_violation1.rs:LL:CC\n   --> $DIR/shr_frozen_violation1.rs:LL:CC\n    |"}, {"sha": "c077e37844d156ca6156db6666a0ae4fe2f9a08f", "filename": "tests/fail/stacked_borrows/transmute-is-no-escape.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Ftransmute-is-no-escape.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Ftransmute-is-no-escape.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Ftransmute-is-no-escape.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,11 +1,11 @@\n error: Undefined Behavior: attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n   --> $DIR/transmute-is-no-escape.rs:LL:CC\n    |\n-LL |     unsafe { *raw = 13; }\n-   |              ^^^^^^^^^\n-   |              |\n-   |              attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n-   |              this error occurs as part of an access at ALLOC[0x0..0x4]\n+LL |         *raw = 13;\n+   |         ^^^^^^^^^\n+   |         |\n+   |         attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n+   |         this error occurs as part of an access at ALLOC[0x0..0x4]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information"}, {"sha": "616c60b8aa1b8f8277804d9ebeb522d9d7860d6f", "filename": "tests/fail/stacked_borrows/unescaped_local.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Funescaped_local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fstacked_borrows%2Funescaped_local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Funescaped_local.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,11 +1,11 @@\n error: Undefined Behavior: attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n   --> $DIR/unescaped_local.rs:LL:CC\n    |\n-LL |     unsafe { *raw = 13; }\n-   |              ^^^^^^^^^\n-   |              |\n-   |              attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n-   |              this error occurs as part of an access at ALLOC[0x0..0x4]\n+LL |         *raw = 13;\n+   |         ^^^^^^^^^\n+   |         |\n+   |         attempting a write access using <untagged> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n+   |         this error occurs as part of an access at ALLOC[0x0..0x4]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information"}, {"sha": "fe63b05a55014e175dc6aebc1dca7295d4ac9398", "filename": "tests/fail/unaligned_pointers/intptrcast_alignment_check.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Funaligned_pointers%2Fintptrcast_alignment_check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Funaligned_pointers%2Fintptrcast_alignment_check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funaligned_pointers%2Fintptrcast_alignment_check.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: accessing memory with alignment ALIGN, but alignment ALIGN is required\n   --> $DIR/intptrcast_alignment_check.rs:LL:CC\n    |\n-LL |     unsafe { *u16_ptr = 2; }\n-   |              ^^^^^^^^^^^^ accessing memory with alignment ALIGN, but alignment ALIGN is required\n+LL |         *u16_ptr = 2;\n+   |         ^^^^^^^^^^^^ accessing memory with alignment ALIGN, but alignment ALIGN is required\n    |\n    = help: this usually indicates that your program performed an invalid operation and caused Undefined Behavior\n    = help: but due to `-Zmiri-symbolic-alignment-check`, alignment errors can also be false positives"}, {"sha": "0df2098d2e19a5a12580f84858c39ea92f06856b", "filename": "tests/fail/zst2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fzst2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fzst2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fzst2.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: pointer to ALLOC was dereferenced after this allocation got freed\n   --> $DIR/zst2.rs:LL:CC\n    |\n-LL |     unsafe { *x = zst_val; }\n-   |              ^^^^^^^^^^^^ pointer to ALLOC was dereferenced after this allocation got freed\n+LL |         *x = zst_val;\n+   |         ^^^^^^^^^^^^ pointer to ALLOC was dereferenced after this allocation got freed\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "dce0d7b3891ca8daf507335684c980e90e0f38be", "filename": "tests/fail/zst3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fzst3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1044d2f774b3525ab28372ccd2be30911f2eb29/tests%2Ffail%2Fzst3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fzst3.stderr?ref=f1044d2f774b3525ab28372ccd2be30911f2eb29", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: dereferencing pointer failed: ALLOC has size 1, so pointer at offset 2 is out-of-bounds\n   --> $DIR/zst3.rs:LL:CC\n    |\n-LL |     unsafe { *(x as *mut [u8; 0]) = zst_val; }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC has size 1, so pointer at offset 2 is out-of-bounds\n+LL |         *(x as *mut [u8; 0]) = zst_val;\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC has size 1, so pointer at offset 2 is out-of-bounds\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}]}