{"sha": "aeca13894438af8876f88e26a4947b4e7627111d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlY2ExMzg5NDQzOGFmODg3NmY4OGUyNmE0OTQ3YjRlNzYyNzExMWQ=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-09T19:16:11Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-09T19:16:11Z"}, "message": "swap taskptr and callee in preparation for making taskptr optional.", "tree": {"sha": "dc68b15ee7262ee0f384ec187e1ac223c73f0feb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc68b15ee7262ee0f384ec187e1ac223c73f0feb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeca13894438af8876f88e26a4947b4e7627111d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeca13894438af8876f88e26a4947b4e7627111d", "html_url": "https://github.com/rust-lang/rust/commit/aeca13894438af8876f88e26a4947b4e7627111d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeca13894438af8876f88e26a4947b4e7627111d/comments", "author": null, "committer": null, "parents": [{"sha": "50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6", "html_url": "https://github.com/rust-lang/rust/commit/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "04f5d5af9047eb22521e410b1d5dd39b053afecf", "filename": "src/comp/back/x86.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aeca13894438af8876f88e26a4947b4e7627111d/src%2Fcomp%2Fback%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeca13894438af8876f88e26a4947b4e7627111d/src%2Fcomp%2Fback%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fx86.rs?ref=aeca13894438af8876f88e26a4947b4e7627111d", "patch": "@@ -175,8 +175,11 @@ fn upcall_glue(int n_args) -> vec[str] {\n      */\n \n     fn copy_arg(uint i) -> str {\n-        auto src_off = wstr(5 + (i as int));\n-        auto dst_off = wstr(1 + (i as int));\n+        if (i == 0u) {\n+            ret \"movl  %edx, (%esp)\";\n+        }\n+        auto src_off = wstr(4 + (i as int));\n+        auto dst_off = wstr(0 + (i as int));\n         auto m = vec(\"movl  \" + src_off + \"(%ebp),%eax\",\n                      \"movl  %eax,\" + dst_off + \"(%esp)\");\n         ret _str.connect(m, \"\\n\\t\");\n@@ -193,14 +196,13 @@ fn upcall_glue(int n_args) -> vec[str] {\n         + load_esp_from_runtime_sp()\n \n         + vec(\"subl  $\" + wstr(n_args + 1) + \", %esp   # esp -= args\",\n-              \"andl  $~0xf, %esp    # align esp down\",\n-              \"movl  %ecx, (%esp)   # arg[0] = rust_task \")\n+              \"andl  $~0xf, %esp    # align esp down\")\n \n-        + _vec.init_fn[str](carg, n_args as uint)\n+        + _vec.init_fn[str](carg, (n_args + 1) as uint)\n \n-        +  vec(\"movl  %ecx, %edi     # save task from ecx to edi\",\n-               \"call  *%edx          # call *%edx\",\n-               \"movl  %edi, %ecx     # restore edi-saved task to ecx\")\n+        +  vec(\"movl  %edx, %edi     # save task from ecx to edi\",\n+               \"call  *%ecx          # call *%edx\",\n+               \"movl  %edi, %edx     # restore edi-saved task to ecx\")\n \n         + load_esp_from_rust_sp()\n         + restore_callee_saves()"}, {"sha": "5a50fbee037ec7360567ddcebe52f14f09af48d8", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aeca13894438af8876f88e26a4947b4e7627111d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeca13894438af8876f88e26a4947b4e7627111d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=aeca13894438af8876f88e26a4947b4e7627111d", "patch": "@@ -831,8 +831,8 @@ fn decl_upcall_glue(ModuleRef llmod, type_names tn, uint _n) -> ValueRef {\n     let int n = _n as int;\n     let str s = abi.upcall_glue_name(n);\n     let vec[TypeRef] args =\n-        vec(T_taskptr(tn), // taskptr\n-            T_int())     // callee\n+        vec(T_int(),     // callee\n+            T_taskptr(tn)) // taskptr\n         + _vec.init_elt[TypeRef](T_int(), n as uint);\n \n     ret decl_fastcall_fn(llmod, s, T_fn(args, T_int()));\n@@ -856,7 +856,7 @@ fn trans_upcall(@block_ctxt cx, str name, vec[ValueRef] args) -> result {\n     llupcall = llvm.LLVMConstPointerCast(llupcall, T_int());\n \n     let ValueRef llglue = cx.fcx.ccx.glues.upcall_glues.(n);\n-    let vec[ValueRef] call_args = vec(cx.fcx.lltaskptr, llupcall);\n+    let vec[ValueRef] call_args = vec(llupcall, cx.fcx.lltaskptr);\n \n     for (ValueRef a in args) {\n         call_args += cx.build.ZExtOrBitCast(a, T_int());"}]}