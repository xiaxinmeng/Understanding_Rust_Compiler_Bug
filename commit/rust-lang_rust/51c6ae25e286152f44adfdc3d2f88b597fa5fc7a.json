{"sha": "51c6ae25e286152f44adfdc3d2f88b597fa5fc7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYzZhZTI1ZTI4NjE1MmY0NGFkZmRjM2QyZjg4YjU5N2ZhNWZjN2E=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-01T04:56:43Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-13T13:37:09Z"}, "message": "implement std::cmp::* traits for `!`", "tree": {"sha": "f6bace127ce3f6114f6ddcfb1ba53a0ffff7a1b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6bace127ce3f6114f6ddcfb1ba53a0ffff7a1b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51c6ae25e286152f44adfdc3d2f88b597fa5fc7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51c6ae25e286152f44adfdc3d2f88b597fa5fc7a", "html_url": "https://github.com/rust-lang/rust/commit/51c6ae25e286152f44adfdc3d2f88b597fa5fc7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51c6ae25e286152f44adfdc3d2f88b597fa5fc7a/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b22beed737531e78cb0aa8a20d3b49e679295779", "url": "https://api.github.com/repos/rust-lang/rust/commits/b22beed737531e78cb0aa8a20d3b49e679295779", "html_url": "https://github.com/rust-lang/rust/commit/b22beed737531e78cb0aa8a20d3b49e679295779"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "1d2ed735e81302027f4eb0b74b31dff94d2b4fe7", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/51c6ae25e286152f44adfdc3d2f88b597fa5fc7a/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51c6ae25e286152f44adfdc3d2f88b597fa5fc7a/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=51c6ae25e286152f44adfdc3d2f88b597fa5fc7a", "patch": "@@ -699,6 +699,39 @@ mod impls {\n \n     ord_impl! { char usize u8 u16 u32 u64 isize i8 i16 i32 i64 }\n \n+    // Note: This macro is a temporary hack that can be remove once we are building with a compiler\n+    // that supports `!`\n+    macro_rules! argh {\n+        () => {\n+            #[unstable(feature = \"bang_type\", issue = \"35121\")]\n+            impl PartialEq for ! {\n+                fn eq(&self, _: &!) -> bool {\n+                    *self\n+                }\n+            }\n+\n+            #[unstable(feature = \"bang_type\", issue = \"35121\")]\n+            impl Eq for ! {}\n+\n+            #[unstable(feature = \"bang_type\", issue = \"35121\")]\n+            impl PartialOrd for ! {\n+                fn partial_cmp(&self, _: &!) -> Option<Ordering> {\n+                    *self\n+                }\n+            }\n+\n+            #[unstable(feature = \"bang_type\", issue = \"35121\")]\n+            impl Ord for ! {\n+                fn cmp(&self, _: &!) -> Ordering {\n+                    *self\n+                }\n+            }\n+        }\n+    }\n+\n+    #[cfg(not(stage0))]\n+    argh!();\n+\n     // & pointers\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}