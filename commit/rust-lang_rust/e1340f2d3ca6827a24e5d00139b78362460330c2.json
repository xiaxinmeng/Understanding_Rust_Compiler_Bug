{"sha": "e1340f2d3ca6827a24e5d00139b78362460330c2", "node_id": "C_kwDOAAsO6NoAKGUxMzQwZjJkM2NhNjgyN2EyNGU1ZDAwMTM5Yjc4MzYyNDYwMzMwYzI", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-22T02:53:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-22T02:53:04Z"}, "message": "Rollup merge of #97144 - samziz:patch-1, r=Dylan-DPC\n\nFix rusty grammar in `std::error::Reporter` docs\n\n### Commit\n\nI initially saw \"print's\" instead of \"prints\" at the start of the doc comment for `std::error::Reporter`, while reading the docs for that type. Then I figured 'probably more where that came from', so, as well as correcting the foregoing to \"prints\", I've patched up these three minor solecisms (well, two [types](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction), three [tokens](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction)):\n\n- One use of the indicative which should be subjunctive - indeed the sentence immediately following it, which mirrors its structure, _does_ use the subjunctive ([L871](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L871)). Replaced with the subjunctive.\n- Two separate clauses joined with commas ([L975](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L975), [L1023](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L1023)). Replaced the first with a semicolon and the second with a period. Admittedly those judgements are pretty much 100% subjective, based on my sense of how the sentences flowed into each other (though ofc the _replacement of the comma itself_ is not subjective or opinion-based).\n\nI know this is silly and finicky, but I hope it helps tidy up the docs a bit for future readers!\n\n### PR notes\n\n**This is very much non-urgent (and, honestly, non-important).** I just figured it might be a nice quality-of-life improvement and bit of tidying up for the core contributors themselves not to have to do. \ud83d\ude42\n\nI'm tagging Steve, per the [contributing guidelines](https://rustc-dev-guide.rust-lang.org/contributing.html#r) (\"Steve usually reviews documentation changes. So if you were to make a documentation change, add `r? `@steveklabnik`\"):`\n\nr? `@steveklabnik`", "tree": {"sha": "f3cbd2655fc06820cfc8b1fdeddeca238044906c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3cbd2655fc06820cfc8b1fdeddeca238044906c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1340f2d3ca6827a24e5d00139b78362460330c2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiiaWQCRBK7hj4Ov3rIwAA4qMIAJaLwHxiR1ICGSrQ7hUWVIQn\nXYVOpbEK/uea7Et/mJ1xBNYDkRx3i2s9MWWMRYnuBt0jhliMziqgoeieGM/FUnHH\nmUMrX7eKLAvRrZurfWmZsfvakligxjS6gAIpermRziDEctmNCf8Q/WhjZgyepNsK\nA1fOSklgMxkVmFHLj2LQpeQaP8wmUPWmcsh/PiW328D3ZjDDddfylFHTxi5X/eCU\nqK37Pijfqt4sgfR9Yl6qMH7Dh/qa3OMfZ00StX9V+wLAMnjbsWc00y7M4WpG3BjG\na7nspVL8NtVecY7iAkN/NASVQokdj+wfp2e5yzxqXpJILyn1Hmv3q+ChSwfICHk=\n=svVj\n-----END PGP SIGNATURE-----\n", "payload": "tree f3cbd2655fc06820cfc8b1fdeddeca238044906c\nparent e52e7115c7477bbc257c44447bb7eccbcfe9cfb2\nparent d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8\nauthor Yuki Okushi <jtitor@2k36.org> 1653187984 +0900\ncommitter GitHub <noreply@github.com> 1653187984 +0900\n\nRollup merge of #97144 - samziz:patch-1, r=Dylan-DPC\n\nFix rusty grammar in `std::error::Reporter` docs\n\n### Commit\n\nI initially saw \"print's\" instead of \"prints\" at the start of the doc comment for `std::error::Reporter`, while reading the docs for that type. Then I figured 'probably more where that came from', so, as well as correcting the foregoing to \"prints\", I've patched up these three minor solecisms (well, two [types](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction), three [tokens](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction)):\n\n- One use of the indicative which should be subjunctive - indeed the sentence immediately following it, which mirrors its structure, _does_ use the subjunctive ([L871](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L871)). Replaced with the subjunctive.\n- Two separate clauses joined with commas ([L975](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L975), [L1023](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L1023)). Replaced the first with a semicolon and the second with a period. Admittedly those judgements are pretty much 100% subjective, based on my sense of how the sentences flowed into each other (though ofc the _replacement of the comma itself_ is not subjective or opinion-based).\n\nI know this is silly and finicky, but I hope it helps tidy up the docs a bit for future readers!\n\n### PR notes\n\n**This is very much non-urgent (and, honestly, non-important).** I just figured it might be a nice quality-of-life improvement and bit of tidying up for the core contributors themselves not to have to do. \ud83d\ude42\n\nI'm tagging Steve, per the [contributing guidelines](https://rustc-dev-guide.rust-lang.org/contributing.html#r) (\"Steve usually reviews documentation changes. So if you were to make a documentation change, add `r? `@steveklabnik`\"):`\n\nr? `@steveklabnik`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1340f2d3ca6827a24e5d00139b78362460330c2", "html_url": "https://github.com/rust-lang/rust/commit/e1340f2d3ca6827a24e5d00139b78362460330c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1340f2d3ca6827a24e5d00139b78362460330c2/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e52e7115c7477bbc257c44447bb7eccbcfe9cfb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e52e7115c7477bbc257c44447bb7eccbcfe9cfb2", "html_url": "https://github.com/rust-lang/rust/commit/e52e7115c7477bbc257c44447bb7eccbcfe9cfb2"}, {"sha": "d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8", "html_url": "https://github.com/rust-lang/rust/commit/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "438304e1664cb1f56993a179d2e94260521d6677", "filename": "library/std/src/error.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1340f2d3ca6827a24e5d00139b78362460330c2/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1340f2d3ca6827a24e5d00139b78362460330c2/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=e1340f2d3ca6827a24e5d00139b78362460330c2", "patch": "@@ -863,12 +863,12 @@ impl dyn Error + Send + Sync {\n     }\n }\n \n-/// An error reporter that print's an error and its sources.\n+/// An error reporter that prints an error and its sources.\n ///\n /// Report also exposes configuration options for formatting the error chain, either entirely on a\n /// single line, or in multi-line format with each cause in the error chain on a new line.\n ///\n-/// `Report` only requires that the wrapped error implements `Error`. It doesn't require that the\n+/// `Report` only requires that the wrapped error implement `Error`. It doesn't require that the\n /// wrapped error be `Send`, `Sync`, or `'static`.\n ///\n /// # Examples\n@@ -972,7 +972,7 @@ impl dyn Error + Send + Sync {\n ///\n /// ## Return from `main`\n ///\n-/// `Report` also implements `From` for all types that implement [`Error`], this when combined with\n+/// `Report` also implements `From` for all types that implement [`Error`]; this when combined with\n /// the `Debug` output means `Report` is an ideal starting place for formatting errors returned\n /// from `main`.\n ///\n@@ -1020,7 +1020,7 @@ impl dyn Error + Send + Sync {\n /// ```\n ///\n /// **Note**: `Report`s constructed via `?` and `From` will be configured to use the single line\n-/// output format, if you want to make sure your `Report`s are pretty printed and include backtrace\n+/// output format. If you want to make sure your `Report`s are pretty printed and include backtrace\n /// you will need to manually convert and enable those flags.\n ///\n /// ```should_panic"}]}