{"sha": "5950496c92f99d15d85432c0c0eace5fb6b25c02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NTA0OTZjOTJmOTlkMTVkODU0MzJjMGMwZWFjZTVmYjZiMjVjMDI=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-05T17:06:29Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-05T18:49:47Z"}, "message": "Remove another unused error variant", "tree": {"sha": "8cc6cf182087396477d874a0e97928fab7c40350", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cc6cf182087396477d874a0e97928fab7c40350"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5950496c92f99d15d85432c0c0eace5fb6b25c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5950496c92f99d15d85432c0c0eace5fb6b25c02", "html_url": "https://github.com/rust-lang/rust/commit/5950496c92f99d15d85432c0c0eace5fb6b25c02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5950496c92f99d15d85432c0c0eace5fb6b25c02/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "848080dc42a0080fc4dc1d29556aaddbbc3e5bd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/848080dc42a0080fc4dc1d29556aaddbbc3e5bd5", "html_url": "https://github.com/rust-lang/rust/commit/848080dc42a0080fc4dc1d29556aaddbbc3e5bd5"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "5e67065d1c13fcbf1656b29f3c2c54c596f55ac8", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5950496c92f99d15d85432c0c0eace5fb6b25c02/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5950496c92f99d15d85432c0c0eace5fb6b25c02/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=5950496c92f99d15d85432c0c0eace5fb6b25c02", "patch": "@@ -524,7 +524,6 @@ for ::middle::const_val::ErrKind<'gcx> {\n         mem::discriminant(self).hash_stable(hcx, hasher);\n \n         match *self {\n-            NonConstPath |\n             TypeckError |\n             CouldNotResolve |\n             CheckMatchError => {"}, {"sha": "88275b3c18cc1172f83fd736a02c362d129e52f3", "filename": "src/librustc/middle/const_val.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5950496c92f99d15d85432c0c0eace5fb6b25c02/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5950496c92f99d15d85432c0c0eace5fb6b25c02/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_val.rs?ref=5950496c92f99d15d85432c0c0eace5fb6b25c02", "patch": "@@ -39,7 +39,6 @@ pub struct ConstEvalErr<'tcx> {\n #[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub enum ErrKind<'tcx> {\n \n-    NonConstPath,\n     CouldNotResolve,\n     TypeckError,\n     CheckMatchError,\n@@ -82,7 +81,6 @@ impl<'a, 'gcx, 'tcx> ConstEvalErr<'tcx> {\n         }\n \n         match *self.kind {\n-            NonConstPath        => simple!(\"non-constant path in constant expression\"),\n             CouldNotResolve => simple!(\"could not resolve\"),\n             TypeckError => simple!(\"type-checking failed\"),\n             CheckMatchError => simple!(\"match-checking failed\"),"}, {"sha": "79a6311185076a0b5366661722871d48ba463b25", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5950496c92f99d15d85432c0c0eace5fb6b25c02/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5950496c92f99d15d85432c0c0eace5fb6b25c02/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=5950496c92f99d15d85432c0c0eace5fb6b25c02", "patch": "@@ -594,7 +594,6 @@ impl<'a, 'tcx> Lift<'tcx> for const_val::ErrKind<'a> {\n         use middle::const_val::ErrKind::*;\n \n         Some(match *self {\n-            NonConstPath => NonConstPath,\n             CouldNotResolve => CouldNotResolve,\n             TypeckError => TypeckError,\n             CheckMatchError => CheckMatchError,"}]}