{"sha": "73a40ac1a0bf9e7adfe69a886727d64bc69fec05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYTQwYWMxYTBiZjllN2FkZmU2OWE4ODY3MjdkNjRiYzY5ZmVjMDU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-06-05T16:49:51Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-06-05T16:49:51Z"}, "message": "Inline maybe_update_submodule\n\nIt was a trivial function only used once.", "tree": {"sha": "0b57b18c5bc60c44214fcef8fdb4e7a1c6fdb08c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b57b18c5bc60c44214fcef8fdb4e7a1c6fdb08c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73a40ac1a0bf9e7adfe69a886727d64bc69fec05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73a40ac1a0bf9e7adfe69a886727d64bc69fec05", "html_url": "https://github.com/rust-lang/rust/commit/73a40ac1a0bf9e7adfe69a886727d64bc69fec05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73a40ac1a0bf9e7adfe69a886727d64bc69fec05/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fbe2ca916e4a815a15c5100bc5ad1452d33a314", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fbe2ca916e4a815a15c5100bc5ad1452d33a314", "html_url": "https://github.com/rust-lang/rust/commit/2fbe2ca916e4a815a15c5100bc5ad1452d33a314"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "a5b1664ed69a18cd325edb3ac61716cff6b90f1c", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/73a40ac1a0bf9e7adfe69a886727d64bc69fec05/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a40ac1a0bf9e7adfe69a886727d64bc69fec05/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=73a40ac1a0bf9e7adfe69a886727d64bc69fec05", "patch": "@@ -472,21 +472,17 @@ impl Build {\n         slice::from_ref(&self.build.triple)\n     }\n \n-    /// If the LLVM submodule has been initialized already, sync it unconditionally. This avoids\n-    /// contributors checking in a submodule change by accident.\n-    pub fn maybe_update_llvm_submodule(&self) {\n-        if self.in_tree_llvm_info.is_git() {\n-            native::update_llvm_submodule(self);\n-        }\n-    }\n-\n     /// Executes the entire build, as configured by the flags and configuration.\n     pub fn build(&mut self) {\n         unsafe {\n             job::setup(self);\n         }\n \n-        self.maybe_update_llvm_submodule();\n+        // If the LLVM submodule has been initialized already, sync it unconditionally. This avoids\n+        // contributors checking in a submodule change by accident.\n+        if self.in_tree_llvm_info.is_git() {\n+            native::update_llvm_submodule(self);\n+        }\n \n         if let Subcommand::Format { check, paths } = &self.config.cmd {\n             return format::format(self, *check, &paths);"}]}