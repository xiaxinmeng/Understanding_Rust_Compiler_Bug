{"sha": "9e8b42c02bfa348b024ad07652e860b125345acf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllOGI0MmMwMmJmYTM0OGIwMjRhZDA3NjUyZTg2MGIxMjUzNDVhY2Y=", "commit": {"author": {"name": "Hanif Bin Ariffin", "email": "hanif.ariffin.4326@gmail.com", "date": "2020-04-25T23:39:40Z"}, "committer": {"name": "Hanif Bin Ariffin", "email": "hanif.ariffin.4326@gmail.com", "date": "2020-06-13T19:06:22Z"}, "message": "Added unsafety documentation to shift_tail\n\nThis is just the reverse of shift_head.", "tree": {"sha": "5cf593b4a3513a5a09e3cdc9ea9c2acc1b8e947c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cf593b4a3513a5a09e3cdc9ea9c2acc1b8e947c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e8b42c02bfa348b024ad07652e860b125345acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8b42c02bfa348b024ad07652e860b125345acf", "html_url": "https://github.com/rust-lang/rust/commit/9e8b42c02bfa348b024ad07652e860b125345acf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e8b42c02bfa348b024ad07652e860b125345acf/comments", "author": {"login": "hbina", "id": 6733660, "node_id": "MDQ6VXNlcjY3MzM2NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6733660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hbina", "html_url": "https://github.com/hbina", "followers_url": "https://api.github.com/users/hbina/followers", "following_url": "https://api.github.com/users/hbina/following{/other_user}", "gists_url": "https://api.github.com/users/hbina/gists{/gist_id}", "starred_url": "https://api.github.com/users/hbina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hbina/subscriptions", "organizations_url": "https://api.github.com/users/hbina/orgs", "repos_url": "https://api.github.com/users/hbina/repos", "events_url": "https://api.github.com/users/hbina/events{/privacy}", "received_events_url": "https://api.github.com/users/hbina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hbina", "id": 6733660, "node_id": "MDQ6VXNlcjY3MzM2NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6733660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hbina", "html_url": "https://github.com/hbina", "followers_url": "https://api.github.com/users/hbina/followers", "following_url": "https://api.github.com/users/hbina/following{/other_user}", "gists_url": "https://api.github.com/users/hbina/gists{/gist_id}", "starred_url": "https://api.github.com/users/hbina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hbina/subscriptions", "organizations_url": "https://api.github.com/users/hbina/orgs", "repos_url": "https://api.github.com/users/hbina/repos", "events_url": "https://api.github.com/users/hbina/events{/privacy}", "received_events_url": "https://api.github.com/users/hbina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7349f2c6a3a02885449c951852af4bc4a7678b8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7349f2c6a3a02885449c951852af4bc4a7678b8a", "html_url": "https://github.com/rust-lang/rust/commit/7349f2c6a3a02885449c951852af4bc4a7678b8a"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "0177c5a9ffdfb5e8b9e8c37d1f42c63e4e4c4666", "filename": "src/libcore/slice/sort.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9e8b42c02bfa348b024ad07652e860b125345acf/src%2Flibcore%2Fslice%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e8b42c02bfa348b024ad07652e860b125345acf/src%2Flibcore%2Fslice%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fsort.rs?ref=9e8b42c02bfa348b024ad07652e860b125345acf", "patch": "@@ -76,6 +76,20 @@ where\n     F: FnMut(&T, &T) -> bool,\n {\n     let len = v.len();\n+    // SAFETY: As with shift_head, the unsafe operations below involves indexing without a bound check (`get_unchecked` and `get_unchecked_mut`)\n+    // and copying memory (`ptr::copy_nonoverlapping`).\n+    //\n+    // a. Indexing:\n+    //  1. We checked the size of the array to >=2.\n+    //  2. All the indexing that we will do is always between {0 <= index < len-1} at most.\n+    //\n+    // b. Memory copying\n+    //  1. We are obtaining pointers to references which are guaranteed to be valid.\n+    //  2. They cannot overlap because we obtain pointers to difference indices of the slice.\n+    //     Namely, `i` and `i+1`.\n+    //  3. FIXME: Guarantees that the elements are properly aligned?\n+    //\n+    // See comments below for further detail.\n     unsafe {\n         // If the last two elements are out-of-order...\n         if len >= 2 && is_less(v.get_unchecked(len - 1), v.get_unchecked(len - 2)) {"}]}