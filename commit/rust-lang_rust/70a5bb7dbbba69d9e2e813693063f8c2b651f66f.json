{"sha": "70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYTViYjdkYmJiYTY5ZDllMmU4MTM2OTMwNjNmOGMyYjY1MWY2NmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-06T12:08:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-10T12:36:56Z"}, "message": "force pointers before reborrowing; fixes cargo miri test suite", "tree": {"sha": "b3cb2d5a0e6be637a40236e78082be277a4b8fec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3cb2d5a0e6be637a40236e78082be277a4b8fec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "html_url": "https://github.com/rust-lang/rust/commit/70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6f9bbc9e22be612849508552271e98bb0ae62bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6f9bbc9e22be612849508552271e98bb0ae62bf", "html_url": "https://github.com/rust-lang/rust/commit/a6f9bbc9e22be612849508552271e98bb0ae62bf"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "351a6e7e54a6f002ec05c9373ae8c28805e8f254", "filename": "src/helpers.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "patch": "@@ -116,7 +116,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             .map(|(size, _)| size)\n             .unwrap_or_else(|| place.layout.size)\n         );\n-        let place = this.normalize_mplace_ptr(place)?;\n         // Store how far we proceeded into the place so far. Everything to the left of\n         // this offset has already been handled, in the sense that the frozen parts\n         // have had `action` called on them."}, {"sha": "90656180150f18ea2d39ac5a1fafc16509be27b7", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "patch": "@@ -587,6 +587,7 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // Nothing to do for ZSTs.\n             return Ok(*val);\n         }\n+        let place = this.force_mplace_ptr(place)?;\n \n         // Compute new borrow.\n         let new_tag = match kind {"}, {"sha": "73515c74e401030dd14a4169a984662121622ce2", "filename": "test-cargo-miri/run-test.py", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "patch": "@@ -52,9 +52,8 @@ def test_cargo_miri_run():\n     )\n \n def test_cargo_miri_test():\n-    # FIXME: enable validation again, once that no longer conflicts with intptrcast\n     test(\"cargo miri test\",\n-        cargo_miri(\"test\") + [\"--\", \"-Zmiri-seed=feed\", \"-Zmiri-disable-validation\"],\n+        cargo_miri(\"test\") + [\"--\", \"-Zmiri-seed=feed\"],\n         \"test.stdout.ref\", \"test.stderr.ref\"\n     )\n     test(\"cargo miri test (with filter)\","}, {"sha": "6e3c6e771ccb8a210ee382a316274e3b8bfe97bc", "filename": "tests/run-pass/mpsc.rs", "status": "renamed", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/tests%2Frun-pass%2Fmpsc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70a5bb7dbbba69d9e2e813693063f8c2b651f66f/tests%2Frun-pass%2Fmpsc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmpsc.rs?ref=70a5bb7dbbba69d9e2e813693063f8c2b651f66f", "patch": "@@ -7,4 +7,9 @@ pub fn main() {\n     tx.send(box 100).unwrap();\n     let v = rx.recv().unwrap();\n     assert_eq!(v, box 100);\n+\n+    tx.send(box 101).unwrap();\n+    tx.send(box 102).unwrap();\n+    assert_eq!(rx.recv().unwrap(), box 101);\n+    assert_eq!(rx.recv().unwrap(), box 102);\n }", "previous_filename": "tests/run-pass/unique-send.rs"}]}