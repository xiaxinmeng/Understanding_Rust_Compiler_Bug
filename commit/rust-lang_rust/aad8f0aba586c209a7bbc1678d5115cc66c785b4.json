{"sha": "aad8f0aba586c209a7bbc1678d5115cc66c785b4", "node_id": "C_kwDOAAsO6NoAKGFhZDhmMGFiYTU4NmMyMDlhN2JiYzE2NzhkNTExNWNjNjZjNzg1YjQ", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-10-17T00:11:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-17T00:11:39Z"}, "message": "Merge pull request #310 from rust-lang/readme\n\nUpdate readme", "tree": {"sha": "27ad5fade6576e08a4f6bbef8fa65249673e1eb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27ad5fade6576e08a4f6bbef8fa65249673e1eb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aad8f0aba586c209a7bbc1678d5115cc66c785b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjTJ27CRBK7hj4Ov3rIwAAEUYIAC/3j6yO/EY5x4upfvzOOoBB\nS2NqjPTDW61ycAyIfBoh0cwy4B7W+KVHLOscnhZi8WdCUu9L4ACDPU/xCDN+AaoI\n+fiY1+ibw0eBK03x6SdGiqgAHH0318NaK2Dj7Vt4uSYWjma0TV3agQfYvebBQ/o+\nVn61PFboUMNrs94zUWdgH845fQ/CCz+v72Js8k+cSnmYjZFTizCDRm3EfyEbtcoM\nC5YAAr1MOL3wtz0Kj6RaQ50w+KlrV4tRDEoom5NaEHnYufHLwAuvsyP18RzTR763\nc6pQnwxv82sCsnHNK5GnAtukfoZodylQsBMDccEvmrDiP8hxKM0bk35WDw1s0yw=\n=XF7y\n-----END PGP SIGNATURE-----\n", "payload": "tree 27ad5fade6576e08a4f6bbef8fa65249673e1eb6\nparent 2f38f70e110f109e77149f894b026d8632476866\nparent f236f5745a0058bd85e044fe3252b87676843018\nauthor Caleb Zulawski <caleb.zulawski@gmail.com> 1665965499 -0400\ncommitter GitHub <noreply@github.com> 1665965499 -0400\n\nMerge pull request #310 from rust-lang/readme\n\nUpdate readme"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aad8f0aba586c209a7bbc1678d5115cc66c785b4", "html_url": "https://github.com/rust-lang/rust/commit/aad8f0aba586c209a7bbc1678d5115cc66c785b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aad8f0aba586c209a7bbc1678d5115cc66c785b4/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f38f70e110f109e77149f894b026d8632476866", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f38f70e110f109e77149f894b026d8632476866", "html_url": "https://github.com/rust-lang/rust/commit/2f38f70e110f109e77149f894b026d8632476866"}, {"sha": "f236f5745a0058bd85e044fe3252b87676843018", "url": "https://api.github.com/repos/rust-lang/rust/commits/f236f5745a0058bd85e044fe3252b87676843018", "html_url": "https://github.com/rust-lang/rust/commit/f236f5745a0058bd85e044fe3252b87676843018"}], "stats": {"total": 30, "additions": 9, "deletions": 21}, "files": [{"sha": "80313157ea2c90da50d99540414ebcc3b76e5022", "filename": "README.md", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/aad8f0aba586c209a7bbc1678d5115cc66c785b4/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/aad8f0aba586c209a7bbc1678d5115cc66c785b4/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=aad8f0aba586c209a7bbc1678d5115cc66c785b4", "patch": "@@ -24,45 +24,33 @@ or by setting up `rustup default nightly` or else with `cargo +nightly {build,te\n ```bash\n cargo new hellosimd\n ```\n-to create a new crate. Edit `hellosimd/Cargo.toml` to be \n-```toml\n-[package]\n-name = \"hellosimd\"\n-version = \"0.1.0\"\n-edition = \"2018\"\n-[dependencies]\n-core_simd = { git = \"https://github.com/rust-lang/portable-simd\" }\n-```\n-\n-and finally write this in `src/main.rs`:\n+to create a new crate. Finally write this in `src/main.rs`:\n ```rust\n #![feature(portable_simd)]\n-use core_simd::*;\n+use std::simd::f32x4;\n fn main() {\n     let a = f32x4::splat(10.0);\n     let b = f32x4::from_array([1.0, 2.0, 3.0, 4.0]);\n     println!(\"{:?}\", a + b);\n }\n ```\n \n-Explanation: We import all the bindings from the crate with the first line. Then, we construct our SIMD vectors with methods like `splat` or `from_array`. Finally, we can use operators on them like `+` and the appropriate SIMD instructions will be carried out. When we run `cargo run` you should get `[11.0, 12.0, 13.0, 14.0]`.\n-\n-## Code Organization\n+Explanation: We construct our SIMD vectors with methods like `splat` or `from_array`. Next, we can use operators like `+` on them, and the appropriate SIMD instructions will be carried out. When we run `cargo run` you should get `[11.0, 12.0, 13.0, 14.0]`.\n \n-Currently the crate is organized so that each element type is a file, and then the 64-bit, 128-bit, 256-bit, and 512-bit vectors using those types are contained in said file.\n+## Supported vectors\n \n-All types are then exported as a single, flat module.\n+Currently, vectors may have up to 64 elements, but aliases are provided only up to 512-bit vectors.\n \n Depending on the size of the primitive type, the number of lanes the vector will have varies. For example, 128-bit vectors have four `f32` lanes and two `f64` lanes.\n \n The supported element types are as follows:\n * **Floating Point:** `f32`, `f64`\n-* **Signed Integers:** `i8`, `i16`, `i32`, `i64`, `i128`, `isize`\n-* **Unsigned Integers:** `u8`, `u16`, `u32`, `u64`, `u128`, `usize`\n-* **Masks:** `mask8`, `mask16`, `mask32`, `mask64`, `mask128`, `masksize`\n+* **Signed Integers:** `i8`, `i16`, `i32`, `i64`, `isize` (`i128` excluded)\n+* **Unsigned Integers:** `u8`, `u16`, `u32`, `u64`, `usize` (`u128` excluded)\n+* **Masks:** 8-bit, 16-bit, 32-bit, 64-bit, and `usize`-sized masks\n \n Floating point, signed integers, and unsigned integers are the [primitive types](https://doc.rust-lang.org/core/primitive/index.html) you're already used to.\n-The `mask` types are \"truthy\" values, but they use the number of bits in their name instead of just 1 bit like a normal `bool` uses.\n+The mask types have elements that are \"truthy\" values, like `bool`, but have an unspecified layout because different architectures prefer different layouts for mask types.\n \n [simd-guide]: ./beginners-guide.md\n [zulip-project-portable-simd]: https://rust-lang.zulipchat.com/#narrow/stream/257879-project-portable-simd"}]}