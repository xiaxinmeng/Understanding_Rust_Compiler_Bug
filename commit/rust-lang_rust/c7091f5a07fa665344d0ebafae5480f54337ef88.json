{"sha": "c7091f5a07fa665344d0ebafae5480f54337ef88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MDkxZjVhMDdmYTY2NTM0NGQwZWJhZmFlNTQ4MGY1NDMzN2VmODg=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-02-26T10:01:23Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-02-26T10:02:51Z"}, "message": "Link crtbegin/crtend on musl to terminate .eh_frame\n\nFor some targets, rustc uses a \"CRT fallback\", where it links CRT\nobject files it ships instead of letting the host compiler link\nthem.\n\nOn musl, rustc currently links crt1, crti and crtn (provided by\nlibc), but does not link crtbegin and crtend (provided by libgcc).\nIn particular, crtend is responsible for terminating the .eh_frame\nsection. Lack of terminator may result in segfaults during\nunwinding, as reported in #47551 and encountered by the LLVM 12\nupdate in #81451.\n\nThis patch links crtbegin and crtend for musl as well, following\nthe table at the top of crt_objects.rs.", "tree": {"sha": "bfd035549cc4904e6191e6be49a88365235ef10b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfd035549cc4904e6191e6be49a88365235ef10b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7091f5a07fa665344d0ebafae5480f54337ef88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7091f5a07fa665344d0ebafae5480f54337ef88", "html_url": "https://github.com/rust-lang/rust/commit/c7091f5a07fa665344d0ebafae5480f54337ef88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7091f5a07fa665344d0ebafae5480f54337ef88/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98f8cce6db6c6c6660eeffee2b3903104e547ecf", "url": "https://api.github.com/repos/rust-lang/rust/commits/98f8cce6db6c6c6660eeffee2b3903104e547ecf", "html_url": "https://github.com/rust-lang/rust/commit/98f8cce6db6c6c6660eeffee2b3903104e547ecf"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "51a48147e6b629a3631e1172d5f01a453b7571ce", "filename": "compiler/rustc_target/src/spec/crt_objects.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c7091f5a07fa665344d0ebafae5480f54337ef88/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7091f5a07fa665344d0ebafae5480f54337ef88/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs?ref=c7091f5a07fa665344d0ebafae5480f54337ef88", "patch": "@@ -64,17 +64,24 @@ pub(super) fn all(obj: &str) -> CrtObjects {\n \n pub(super) fn pre_musl_fallback() -> CrtObjects {\n     new(&[\n-        (LinkOutputKind::DynamicNoPicExe, &[\"crt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::DynamicPicExe, &[\"Scrt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::StaticNoPicExe, &[\"crt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::StaticPicExe, &[\"rcrt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::DynamicDylib, &[\"crti.o\"]),\n-        (LinkOutputKind::StaticDylib, &[\"crti.o\"]),\n+        (LinkOutputKind::DynamicNoPicExe, &[\"crt1.o\", \"crti.o\", \"crtbegin.o\"]),\n+        (LinkOutputKind::DynamicPicExe, &[\"Scrt1.o\", \"crti.o\", \"crtbeginS.o\"]),\n+        (LinkOutputKind::StaticNoPicExe, &[\"crt1.o\", \"crti.o\", \"crtbegin.o\"]),\n+        (LinkOutputKind::StaticPicExe, &[\"rcrt1.o\", \"crti.o\", \"crtbeginS.o\"]),\n+        (LinkOutputKind::DynamicDylib, &[\"crti.o\", \"crtbeginS.o\"]),\n+        (LinkOutputKind::StaticDylib, &[\"crti.o\", \"crtbeginS.o\"]),\n     ])\n }\n \n pub(super) fn post_musl_fallback() -> CrtObjects {\n-    all(\"crtn.o\")\n+    new(&[\n+        (LinkOutputKind::DynamicNoPicExe, &[\"crtend.o\", \"crtn.o\"]),\n+        (LinkOutputKind::DynamicPicExe, &[\"crtendS.o\", \"crtn.o\"]),\n+        (LinkOutputKind::StaticNoPicExe, &[\"crtend.o\", \"crtn.o\"]),\n+        (LinkOutputKind::StaticPicExe, &[\"crtendS.o\", \"crtn.o\"]),\n+        (LinkOutputKind::DynamicDylib, &[\"crtendS.o\", \"crtn.o\"]),\n+        (LinkOutputKind::StaticDylib, &[\"crtendS.o\", \"crtn.o\"]),\n+    ])\n }\n \n pub(super) fn pre_mingw_fallback() -> CrtObjects {"}, {"sha": "859e38dc34647d3ab520801351735b2723fbbf69", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7091f5a07fa665344d0ebafae5480f54337ef88/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7091f5a07fa665344d0ebafae5480f54337ef88/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=c7091f5a07fa665344d0ebafae5480f54337ef88", "patch": "@@ -189,6 +189,12 @@ fn copy_self_contained_objects(\n                 DependencyType::TargetSelfContained,\n             );\n         }\n+        for &obj in &[\"crtbegin.o\", \"crtbeginS.o\", \"crtend.o\", \"crtendS.o\"] {\n+            let src = compiler_file(builder, builder.cc(target), target, obj);\n+            let target = libdir_self_contained.join(obj);\n+            builder.copy(&src, &target);\n+            target_deps.push((target, DependencyType::TargetSelfContained));\n+        }\n     } else if target.ends_with(\"-wasi\") {\n         let srcdir = builder.wasi_root(target).unwrap().join(\"lib/wasm32-wasi\");\n         for &obj in &[\"crt1.o\", \"crt1-reactor.o\"] {"}]}