{"sha": "e4ac4478514779d956cbc51068ec2d3207083bfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YWM0NDc4NTE0Nzc5ZDk1NmNiYzUxMDY4ZWMyZDMyMDcwODNiZmE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-18T02:47:17Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-18T04:54:42Z"}, "message": "Rollup merge of #54646 - vn971:fix_std_thread_sleep, r=frewsxcv\n\nimprove documentation on std::thread::sleep", "tree": {"sha": "516ab13f623c2d95d49aab96f852ea6b7dbd870c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/516ab13f623c2d95d49aab96f852ea6b7dbd870c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4ac4478514779d956cbc51068ec2d3207083bfa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvIEhMACgkQ/vbIBR0O\nATy1GQ//anTGzEJdqa0Q9n9CNIUg25QTYJ1XyveyrqvRuq9lEbXRP478vIhdW+8f\noPEBLqjEE/MLopw5H90JtY84pIVWWJVH7YgLD3i+Ff8Vi9lERIaDF2V5fAmxyTa3\noo+NbdB3d0UpL+ZPccEgO8Azaz9oJURVM5t2SCpod2drPbBc+ZX1MDKcVwYjpLYs\nTALWPeW+WkP3ztT78Z7C84E5NeEQeQLUxCQR1WpubyIgXmlh+Q52LQTprj17gXH+\nI8aETNuwjJnkIMUYhcmGpHg74yMYLXhf4T9C/gItYwU099HO9GfokK1uP3TF0dwq\nH+FDFpgEdzyLgHXTo1YZ9zdaXvt/T+7J5N5BLH6t2DVNfVrAZhNPmV+nwR+7CJYU\nvbxZjPBfdzpOOfq8us/48B+6hH8knA+QQn2giRSX9rmdwQtXRCbR5FdqQWny0o3V\nDmtpxlnzzxztgn93TTldeUvI4PsmDdEGjIhg96TKtblaWFH4Ryb7DJJ3hxUXXrQo\nnElrxic3EsApxE1yrujEp2g0kEQpl9DGAQpkJ1LY61CrjEJhui5N5+9xWK5BDtL9\nB3o1gKG8ZQ8ZRzqRJ7UCypQlCtV3Q7p+G1ELncsrG/69r9YEVwqoj6jFZlp0O1k5\n9Yw5xunwwBKH0Z78eM55J3dQv+oJ1doHUVrOHnIlCkTN6Ab5NGc=\n=Fr9K\n-----END PGP SIGNATURE-----", "payload": "tree 516ab13f623c2d95d49aab96f852ea6b7dbd870c\nparent f7eb7fbbf6bca0eaa146c4a48cd39c133a257706\nparent 7a0fa95336439120d89bb2f6116146011fd40307\nauthor kennytm <kennytm@gmail.com> 1539830837 +0800\ncommitter kennytm <kennytm@gmail.com> 1539838482 +0800\n\nRollup merge of #54646 - vn971:fix_std_thread_sleep, r=frewsxcv\n\nimprove documentation on std::thread::sleep\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ac4478514779d956cbc51068ec2d3207083bfa", "html_url": "https://github.com/rust-lang/rust/commit/e4ac4478514779d956cbc51068ec2d3207083bfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4ac4478514779d956cbc51068ec2d3207083bfa/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7eb7fbbf6bca0eaa146c4a48cd39c133a257706", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7eb7fbbf6bca0eaa146c4a48cd39c133a257706", "html_url": "https://github.com/rust-lang/rust/commit/f7eb7fbbf6bca0eaa146c4a48cd39c133a257706"}, {"sha": "7a0fa95336439120d89bb2f6116146011fd40307", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a0fa95336439120d89bb2f6116146011fd40307", "html_url": "https://github.com/rust-lang/rust/commit/7a0fa95336439120d89bb2f6116146011fd40307"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "c1f0a6fecefe90d05b1f5fbd53695a6fe2066827", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e4ac4478514779d956cbc51068ec2d3207083bfa/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4ac4478514779d956cbc51068ec2d3207083bfa/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=e4ac4478514779d956cbc51068ec2d3207083bfa", "patch": "@@ -650,15 +650,17 @@ pub fn panicking() -> bool {\n     panicking::panicking()\n }\n \n-/// Puts the current thread to sleep for the specified amount of time.\n+/// Puts the current thread to sleep for at least the specified amount of time.\n ///\n /// The thread may sleep longer than the duration specified due to scheduling\n-/// specifics or platform-dependent functionality.\n+/// specifics or platform-dependent functionality. It will never sleep less.\n ///\n /// # Platform-specific behavior\n ///\n-/// On Unix platforms this function will not return early due to a\n-/// signal being received or a spurious wakeup.\n+/// On Unix platforms, the underlying syscall may be interrupted by a\n+/// spurious wakeup or signal handler. To ensure the sleep occurs for at least\n+/// the specified duration, this function may invoke that system call multiple\n+/// times.\n ///\n /// # Examples\n ///\n@@ -674,17 +676,19 @@ pub fn sleep_ms(ms: u32) {\n     sleep(Duration::from_millis(ms as u64))\n }\n \n-/// Puts the current thread to sleep for the specified amount of time.\n+/// Puts the current thread to sleep for at least the specified amount of time.\n ///\n /// The thread may sleep longer than the duration specified due to scheduling\n-/// specifics or platform-dependent functionality.\n+/// specifics or platform-dependent functionality. It will never sleep less.\n ///\n /// # Platform-specific behavior\n ///\n-/// On Unix platforms this function will not return early due to a\n-/// signal being received or a spurious wakeup. Platforms which do not support\n-/// nanosecond precision for sleeping will have `dur` rounded up to the nearest\n-/// granularity of time they can sleep for.\n+/// On Unix platforms, the underlying syscall may be interrupted by a\n+/// spurious wakeup or signal handler. To ensure the sleep occurs for at least\n+/// the specified duration, this function may invoke that system call multiple\n+/// times.\n+/// Platforms which do not support nanosecond precision for sleeping will\n+/// have `dur` rounded up to the nearest granularity of time they can sleep for.\n ///\n /// # Examples\n ///"}]}