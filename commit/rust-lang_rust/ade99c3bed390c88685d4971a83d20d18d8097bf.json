{"sha": "ade99c3bed390c88685d4971a83d20d18d8097bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZTk5YzNiZWQzOTBjODg2ODVkNDk3MWE4M2QyMGQxOGQ4MDk3YmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-09T15:35:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-09T15:35:28Z"}, "message": "Auto merge of #1473 - Stupremee:no-ice-if-no-main-fn, r=oli-obk\n\nEarly exit if program doesn't contain a main function\n\nResolves #1452", "tree": {"sha": "77db54ebf16d33eb2690acdfa998a0f6dfebdc9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77db54ebf16d33eb2690acdfa998a0f6dfebdc9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ade99c3bed390c88685d4971a83d20d18d8097bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ade99c3bed390c88685d4971a83d20d18d8097bf", "html_url": "https://github.com/rust-lang/rust/commit/ade99c3bed390c88685d4971a83d20d18d8097bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ade99c3bed390c88685d4971a83d20d18d8097bf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb5ff1791be706d173b4f4c29e9c0529b4235c0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5ff1791be706d173b4f4c29e9c0529b4235c0e", "html_url": "https://github.com/rust-lang/rust/commit/eb5ff1791be706d173b4f4c29e9c0529b4235c0e"}, {"sha": "d23e245f38f556e833ca7fc4f616b78e791b923b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d23e245f38f556e833ca7fc4f616b78e791b923b", "html_url": "https://github.com/rust-lang/rust/commit/d23e245f38f556e833ca7fc4f616b78e791b923b"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "73e52af4ec51d1da9476b10ddb51be47b786d032", "filename": "src/bin/miri.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ade99c3bed390c88685d4971a83d20d18d8097bf/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ade99c3bed390c88685d4971a83d20d18d8097bf/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=ade99c3bed390c88685d4971a83d20d18d8097bf", "patch": "@@ -5,6 +5,7 @@ extern crate rustc_driver;\n extern crate rustc_hir;\n extern crate rustc_interface;\n extern crate rustc_session;\n+extern crate rustc_errors;\n \n use std::convert::TryFrom;\n use std::env;\n@@ -13,7 +14,8 @@ use std::str::FromStr;\n use hex::FromHexError;\n use log::debug;\n \n-use rustc_session::CtfeBacktrace;\n+use rustc_session::{CtfeBacktrace, config::ErrorOutputType};\n+use rustc_errors::emitter::{HumanReadableErrorType, ColorConfig};\n use rustc_driver::Compilation;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_middle::ty::TyCtxt;\n@@ -32,7 +34,12 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n \n         queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             init_late_loggers(tcx);\n-            let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\"no main function found!\");\n+            let (entry_def_id, _) = if let Some((entry_def, x)) = tcx.entry_fn(LOCAL_CRATE) {\n+                (entry_def, x)\n+            } else {\n+                let output_ty = ErrorOutputType::HumanReadable(HumanReadableErrorType::Default(ColorConfig::Auto));\n+                rustc_session::early_error(output_ty, \"miri can only run programs that have a main function\");\n+            };\n             let mut config = self.miri_config.clone();\n \n             // Add filename to `miri` arguments."}, {"sha": "a9e8e816828c05a6009528111909f6978641ae3d", "filename": "tests/compile-fail/no_main.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ade99c3bed390c88685d4971a83d20d18d8097bf/tests%2Fcompile-fail%2Fno_main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ade99c3bed390c88685d4971a83d20d18d8097bf/tests%2Fcompile-fail%2Fno_main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fno_main.rs?ref=ade99c3bed390c88685d4971a83d20d18d8097bf", "patch": "@@ -0,0 +1,2 @@\n+// error-pattern: miri can only run programs that have a main function\n+#![no_main]"}]}