{"sha": "b43c02b0aad08fe8ffef702423bc60e2fa869eee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0M2MwMmIwYWFkMDhmZThmZmVmNzAyNDIzYmM2MGUyZmE4NjllZWU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-07-20T12:56:53Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-08-11T08:38:31Z"}, "message": "Make librustc_driver work without librustc_trans", "tree": {"sha": "0098538e4a2ccf8ce710de8e007e4271940dfd48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0098538e4a2ccf8ce710de8e007e4271940dfd48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43c02b0aad08fe8ffef702423bc60e2fa869eee", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQIcBAABCgAGBQJZjW0IAAoJEEpHzFJ6U7W8xZAP/25v2XIrgbjw4srL1IN5yOyT\nijKfn5jGKQHln1VWJx5c2izAie6zBmnynCKuE0uFx5pDb2RzeSlI575qg03DPoYF\ny12ZLTAfvEOb6hUGMjDGynXskli3T3uIwNm1ZS548qG0x3WK+XZ0/qx972/hNNxW\nYvVzI+Uwv71DF66zApaSw3tgCupknghEhCJcEAMh0cGxYSp8xa/HKWA/dB8ZreLs\n6wAl6g6ZEnZ8QlOqv8zk85Wog2wjDSF2VNjq0JKkaDjWk6s+pgeFzszpJuZTwNTJ\nAE+05CVOXnwLrmJCzCvaURnnl7El+fPhOS0WKWExrgXpKwLTxgrVH/H4uKS/gbUb\niLn7DNI3Crst1unsbFMARoNN961FSanlnLC9XW5rTVYK0AUKJ09OM4vaGUSWwA6f\nrgID4JdhF4vlVfZe2Ax3VZP7DjejMnrdn+qWmpVWbsulYCMRGjIl2uDMe0gJcUZv\nkiN1L9gGwNRJzOV3b9z5as/Euoa6K3fBns5Xnk6QoLra6dAx5xe9npXhITZ1/NZh\nLry+V0KTRH7QO4nOlA3JeMH08x5TaH+QNnPOJjas3dryGXSRauHl8/h5HtthS0ZL\nVU/3UEarSkeBuZNTykQ48ACceAvk/XqrVqRikQfYorkOxSWeLxrnnXmcZtl2SiWX\nKygnN8wTo/wlDJxUix75\n=MhDy\n-----END PGP SIGNATURE-----", "payload": "tree 0098538e4a2ccf8ce710de8e007e4271940dfd48\nparent e152a1620b9fb91a70c629059df482872c687522\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1500555413 +0200\ncommitter bjorn3 <bjorn3@users.noreply.github.com> 1502440711 +0200\n\nMake librustc_driver work without librustc_trans\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43c02b0aad08fe8ffef702423bc60e2fa869eee", "html_url": "https://github.com/rust-lang/rust/commit/b43c02b0aad08fe8ffef702423bc60e2fa869eee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43c02b0aad08fe8ffef702423bc60e2fa869eee/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e152a1620b9fb91a70c629059df482872c687522", "url": "https://api.github.com/repos/rust-lang/rust/commits/e152a1620b9fb91a70c629059df482872c687522", "html_url": "https://github.com/rust-lang/rust/commit/e152a1620b9fb91a70c629059df482872c687522"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "2e3b54f00bc1d1895179d8663c285375b9c57670", "filename": "src/Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=b43c02b0aad08fe8ffef702423bc60e2fa869eee", "patch": "@@ -65,6 +65,11 @@ name = \"ansi_term\"\n version = \"0.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"ar\"\n+version = \"0.3.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"arena\"\n version = \"0.0.0\"\n@@ -1333,6 +1338,7 @@ dependencies = [\n name = \"rustc_driver\"\n version = \"0.0.0\"\n dependencies = [\n+ \"ar 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"arena 0.0.0\",\n  \"env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"graphviz 0.0.0\",\n@@ -2141,6 +2147,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum aho-corasick 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca972c2ea5f742bfce5687b9aef75506a764f61d37f8f649047846a9686ddb66\"\n \"checksum aho-corasick 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"500909c4f87a9e52355b26626d890833e9e1d53ac566db76c36faa984b889699\"\n \"checksum ansi_term 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"23ac7c30002a5accbf7e8987d0632fa6de155b7c3d39d0067317a391e00a2ef6\"\n+\"checksum ar 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b24e4eef8e3fa7e2ca75b157e6039cdf8d9d3a68213ddc19d0fd9d576b9717c9\"\n \"checksum atty 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d912da0db7fa85514874458ca3651fe2cddace8d0b0505571dbdcd41ab490159\"\n \"checksum backtrace 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72f9b4182546f4b04ebc4ab7f84948953a118bd6021a1b6a6c909e3e94f6be76\"\n \"checksum backtrace-sys 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"afccc5772ba333abccdf60d55200fa3406f8c59dcf54d5f7998c9107d3799c7c\""}, {"sha": "c8ea09f4687b148299efe55e6aed23954c7afa83", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=b43c02b0aad08fe8ffef702423bc60e2fa869eee", "patch": "@@ -29,9 +29,14 @@ rustc_plugin = { path = \"../librustc_plugin\" }\n rustc_privacy = { path = \"../librustc_privacy\" }\n rustc_resolve = { path = \"../librustc_resolve\" }\n rustc_save_analysis = { path = \"../librustc_save_analysis\" }\n-rustc_trans = { path = \"../librustc_trans\" }\n+rustc_trans = { path = \"../librustc_trans\", optional = true }\n rustc_typeck = { path = \"../librustc_typeck\" }\n serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }\n syntax_ext = { path = \"../libsyntax_ext\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+\n+ar = \"0.3.0\"\n+\n+[features]\n+llvm = [\"rustc_trans\"]"}, {"sha": "2a3da956468e54ba4948f8beba102a5c1e0367b5", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=b43c02b0aad08fe8ffef702423bc60e2fa869eee", "patch": "@@ -28,6 +28,9 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(set_stdio)]\n \n+#[cfg(not(feature=\"llvm\"))]\n+extern crate ar;\n+\n extern crate arena;\n extern crate getopts;\n extern crate graphviz;\n@@ -49,6 +52,7 @@ extern crate rustc_metadata;\n extern crate rustc_mir;\n extern crate rustc_resolve;\n extern crate rustc_save_analysis;\n+#[cfg(feature=\"llvm\")]\n extern crate rustc_trans;\n extern crate rustc_typeck;\n extern crate serialize;\n@@ -74,6 +78,8 @@ use rustc::session::config::nightly_options;\n use rustc::session::{early_error, early_warn};\n use rustc::lint::Lint;\n use rustc::lint;\n+#[cfg(not(feature=\"llvm\"))]\n+use rustc::middle::cstore::MetadataLoader;\n use rustc_metadata::locator;\n use rustc_metadata::cstore::CStore;\n use rustc::util::common::{time, ErrorReported};\n@@ -151,6 +157,45 @@ pub fn run<F>(run_compiler: F) -> isize\n     0\n }\n \n+#[cfg(not(feature=\"llvm\"))]\n+pub struct NoLLvmMetadataLoader;\n+\n+#[cfg(not(feature=\"llvm\"))]\n+pub use NoLLvmMetadataLoader as MetadataLoader;\n+#[cfg(feature=\"llvm\")]\n+pub use rustc_trans::LlvmMetadataLoader as MetadataLoader;\n+\n+#[cfg(not(feature=\"llvm\"))]\n+impl MetadataLoader for NoLLvmMetadataLoader {\n+    fn get_rlib_metadata(&self, _: &Target, filename: &Path) -> Result<ErasedBoxRef<[u8]>, String> {\n+        use std::fs::File;\n+        use std::io;\n+        use self::ar::Archive;\n+\n+        let file = File::open(filename).map_err(|e|format!(\"metadata file open err: {:?}\", e))?;\n+        let mut archive = Archive::new(file);\n+\n+        while let Some(entry_result) = archive.next_entry() {\n+            let mut entry = entry_result.map_err(|e|format!(\"metadata section read err: {:?}\", e))?;\n+            if entry.header().identifier() == METADATA_FILENAME {\n+                let mut buf = Vec::new();\n+                io::copy(&mut entry, &mut buf).unwrap();\n+                let buf: OwningRef<Vec<u8>, [u8]> = OwningRef::new(buf).into();\n+                return Ok(buf.erase_owner());\n+            }\n+        }\n+\n+        Err(\"Couldnt find metadata section\".to_string())\n+    }\n+\n+    fn get_dylib_metadata(&self,\n+                          target: &Target,\n+                          filename: &Path)\n+                          -> Result<ErasedBoxRef<[u8]>, String> {\n+        panic!(\"Dylib metadata loading not supported without LLVM\")\n+    }\n+}\n+\n // Parse args and run the compiler. This is the primary entry point for rustc.\n // See comments on CompilerCalls below for details about the callbacks argument.\n // The FileLoader provides a way to load files from sources other than the file system.\n@@ -197,7 +242,7 @@ pub fn run_compiler<'a>(args: &[String],\n     };\n \n     let dep_graph = DepGraph::new(sopts.build_dep_graph());\n-    let cstore = Rc::new(CStore::new(&dep_graph, box rustc_trans::LlvmMetadataLoader));\n+    let cstore = Rc::new(CStore::new(&dep_graph, box ::MetadataLoader));\n \n     let loader = file_loader.unwrap_or(box RealFileLoader);\n     let codemap = Rc::new(CodeMap::with_file_loader(loader, sopts.file_path_mapping()));\n@@ -477,7 +522,7 @@ impl<'a> CompilerCalls<'a> for RustcDefaultCalls {\n                     return None;\n                 }\n                 let dep_graph = DepGraph::new(sopts.build_dep_graph());\n-                let cstore = Rc::new(CStore::new(&dep_graph, box rustc_trans::LlvmMetadataLoader));\n+                let cstore = Rc::new(CStore::new(&dep_graph, box ::MetadataLoader));\n                 let mut sess = build_session(sopts.clone(),\n                     &dep_graph,\n                     None,"}, {"sha": "b187cdaa480ed17fff846ff205846c7827f78178", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=b43c02b0aad08fe8ffef702423bc60e2fa869eee", "patch": "@@ -106,7 +106,7 @@ fn test_env<F>(source_string: &str,\n \n     let dep_graph = DepGraph::new(false);\n     let _ignore = dep_graph.in_ignore();\n-    let cstore = Rc::new(CStore::new(&dep_graph, box rustc_trans::LlvmMetadataLoader));\n+    let cstore = Rc::new(CStore::new(&dep_graph, box ::MetadataLoader));\n     let sess = session::build_session_(options,\n                                        &dep_graph,\n                                        None,"}, {"sha": "d185c061d5bd9fb6656b7240de820824447d2137", "filename": "src/rustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Frustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b43c02b0aad08fe8ffef702423bc60e2fa869eee/src%2Frustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.toml?ref=b43c02b0aad08fe8ffef702423bc60e2fa869eee", "patch": "@@ -15,3 +15,4 @@ rustc_driver = { path = \"../librustc_driver\" }\n \n [features]\n jemalloc = [\"rustc_back/jemalloc\"]\n+llvm = [\"rustc_driver/llvm\"]"}]}