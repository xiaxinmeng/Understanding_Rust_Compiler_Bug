{"sha": "987797bfe17ab8b75a9195d047c32264ffef8852", "node_id": "C_kwDOAAsO6NoAKDk4Nzc5N2JmZTE3YWI4Yjc1YTkxOTVkMDQ3YzMyMjY0ZmZlZjg4NTI", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-11-05T01:32:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-05T01:32:39Z"}, "message": "Rollup merge of #90507 - TaKO8Ki:suggest-extern-crate-alloc, r=jackh726\n\nSuggest `extern crate alloc` when using undeclared module `alloc`\n\ncloses #90136", "tree": {"sha": "e911bf31530687a7d530df8d432267ec2f9df242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e911bf31530687a7d530df8d432267ec2f9df242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/987797bfe17ab8b75a9195d047c32264ffef8852", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhhIm4CRBK7hj4Ov3rIwAAnz0IAEcivl6DwzxWGttDOZTfYwr6\nTdeyXjaIR7bqD9/fMKwhZxbBVsPZaNHL9gaCNzPGpukeVwPLsqVd3xZchEYYUAQK\n3nm6PZPI72o/s/FW6nebigcTAK0B5tgMG10d+HM0dk1FxCJM0756P4JocLnSUsYq\n0cAFCYe2XmMLQhe/Hh5AELegPFQk490s/qa5xftA/D1QYbhGvg/BFNsXv769HE5n\nkbVrU9qx3RkpgrhOBLMkOe1qg70oO1v2j52sYSdQF5NwdE9t7Uhq1I/WFIEZOtdn\nZ+NKowALX9Hu4SNsEsNwqNHwLubJMHOn95vPJtxawsyJxYeKbebej1Z8Uls7oH4=\n=OpTa\n-----END PGP SIGNATURE-----\n", "payload": "tree e911bf31530687a7d530df8d432267ec2f9df242\nparent 2cff30b17a5409e15134f8634444069fc6f21cb6\nparent 6c1e194534ab91ecdb3aa953089964c364b6b2e2\nauthor Yuki Okushi <jtitor@2k36.org> 1636075959 +0900\ncommitter GitHub <noreply@github.com> 1636075959 +0900\n\nRollup merge of #90507 - TaKO8Ki:suggest-extern-crate-alloc, r=jackh726\n\nSuggest `extern crate alloc` when using undeclared module `alloc`\n\ncloses #90136\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/987797bfe17ab8b75a9195d047c32264ffef8852", "html_url": "https://github.com/rust-lang/rust/commit/987797bfe17ab8b75a9195d047c32264ffef8852", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/987797bfe17ab8b75a9195d047c32264ffef8852/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cff30b17a5409e15134f8634444069fc6f21cb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cff30b17a5409e15134f8634444069fc6f21cb6", "html_url": "https://github.com/rust-lang/rust/commit/2cff30b17a5409e15134f8634444069fc6f21cb6"}, {"sha": "6c1e194534ab91ecdb3aa953089964c364b6b2e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c1e194534ab91ecdb3aa953089964c364b6b2e2", "html_url": "https://github.com/rust-lang/rust/commit/6c1e194534ab91ecdb3aa953089964c364b6b2e2"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "ff0d76e94fdf5c231a8b8f193e034c4a0d4201f1", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/987797bfe17ab8b75a9195d047c32264ffef8852/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987797bfe17ab8b75a9195d047c32264ffef8852/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=987797bfe17ab8b75a9195d047c32264ffef8852", "patch": "@@ -420,6 +420,10 @@ impl<'a> Resolver<'a> {\n                 err.span_label(span, label);\n \n                 if let Some((suggestions, msg, applicability)) = suggestion {\n+                    if suggestions.is_empty() {\n+                        err.help(&msg);\n+                        return err;\n+                    }\n                     err.multipart_suggestion(&msg, suggestions, applicability);\n                 }\n "}, {"sha": "5f3620b247e26e1885a7361d282316268b84b1fb", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/987797bfe17ab8b75a9195d047c32264ffef8852/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987797bfe17ab8b75a9195d047c32264ffef8852/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=987797bfe17ab8b75a9195d047c32264ffef8852", "patch": "@@ -2523,19 +2523,29 @@ impl<'a> Resolver<'a> {\n                         } else {\n                             (\n                                 format!(\"use of undeclared crate or module `{}`\", ident),\n-                                self.find_similarly_named_module_or_crate(\n-                                    ident.name,\n-                                    &parent_scope.module,\n-                                )\n-                                .map(|sugg| {\n-                                    (\n-                                        vec![(ident.span, sugg.to_string())],\n+                                if ident.name == sym::alloc {\n+                                    Some((\n+                                        vec![],\n                                         String::from(\n-                                            \"there is a crate or module with a similar name\",\n+                                            \"add `extern crate alloc` to use the `alloc` crate\",\n                                         ),\n                                         Applicability::MaybeIncorrect,\n+                                    ))\n+                                } else {\n+                                    self.find_similarly_named_module_or_crate(\n+                                        ident.name,\n+                                        &parent_scope.module,\n                                     )\n-                                }),\n+                                    .map(|sugg| {\n+                                        (\n+                                            vec![(ident.span, sugg.to_string())],\n+                                            String::from(\n+                                                \"there is a crate or module with a similar name\",\n+                                            ),\n+                                            Applicability::MaybeIncorrect,\n+                                        )\n+                                    })\n+                                },\n                             )\n                         }\n                     } else {"}, {"sha": "1defa1cef286353c0d359aa6c76756d5a12f3807", "filename": "src/test/ui/suggestions/undeclared-module-alloc.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/987797bfe17ab8b75a9195d047c32264ffef8852/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987797bfe17ab8b75a9195d047c32264ffef8852/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.rs?ref=987797bfe17ab8b75a9195d047c32264ffef8852", "patch": "@@ -0,0 +1,5 @@\n+// edition:2018\n+\n+use alloc::rc::Rc; //~ ERROR failed to resolve: use of undeclared crate or module `alloc`\n+\n+fn main() {}"}, {"sha": "39169dfa9f7778c5f7841d8d43d6bddeace83574", "filename": "src/test/ui/suggestions/undeclared-module-alloc.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/987797bfe17ab8b75a9195d047c32264ffef8852/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/987797bfe17ab8b75a9195d047c32264ffef8852/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.stderr?ref=987797bfe17ab8b75a9195d047c32264ffef8852", "patch": "@@ -0,0 +1,11 @@\n+error[E0433]: failed to resolve: use of undeclared crate or module `alloc`\n+  --> $DIR/undeclared-module-alloc.rs:3:5\n+   |\n+LL | use alloc::rc::Rc;\n+   |     ^^^^^ use of undeclared crate or module `alloc`\n+   |\n+   = help: add `extern crate alloc` to use the `alloc` crate\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}]}