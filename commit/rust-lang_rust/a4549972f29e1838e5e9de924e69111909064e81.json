{"sha": "a4549972f29e1838e5e9de924e69111909064e81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NTQ5OTcyZjI5ZTE4MzhlNWU5ZGU5MjRlNjkxMTE5MDkwNjRlODE=", "commit": {"author": {"name": "arturo", "email": "arturo@openframeworks.cc", "date": "2014-12-27T20:08:47Z"}, "committer": {"name": "arturo", "email": "arturo@openframeworks.cc", "date": "2014-12-28T18:43:04Z"}, "message": "src/libstd/thread_local/scoped.rs: fixes scoped_thread_local! macro\n\nwas missing a ;", "tree": {"sha": "12ae5520e0262454cfb715c3ffe18a4c511ec616", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12ae5520e0262454cfb715c3ffe18a4c511ec616"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4549972f29e1838e5e9de924e69111909064e81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4549972f29e1838e5e9de924e69111909064e81", "html_url": "https://github.com/rust-lang/rust/commit/a4549972f29e1838e5e9de924e69111909064e81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4549972f29e1838e5e9de924e69111909064e81/comments", "author": {"login": "arturoc", "id": 48240, "node_id": "MDQ6VXNlcjQ4MjQw", "avatar_url": "https://avatars.githubusercontent.com/u/48240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arturoc", "html_url": "https://github.com/arturoc", "followers_url": "https://api.github.com/users/arturoc/followers", "following_url": "https://api.github.com/users/arturoc/following{/other_user}", "gists_url": "https://api.github.com/users/arturoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/arturoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arturoc/subscriptions", "organizations_url": "https://api.github.com/users/arturoc/orgs", "repos_url": "https://api.github.com/users/arturoc/repos", "events_url": "https://api.github.com/users/arturoc/events{/privacy}", "received_events_url": "https://api.github.com/users/arturoc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arturoc", "id": 48240, "node_id": "MDQ6VXNlcjQ4MjQw", "avatar_url": "https://avatars.githubusercontent.com/u/48240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arturoc", "html_url": "https://github.com/arturoc", "followers_url": "https://api.github.com/users/arturoc/followers", "following_url": "https://api.github.com/users/arturoc/following{/other_user}", "gists_url": "https://api.github.com/users/arturoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/arturoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arturoc/subscriptions", "organizations_url": "https://api.github.com/users/arturoc/orgs", "repos_url": "https://api.github.com/users/arturoc/repos", "events_url": "https://api.github.com/users/arturoc/events{/privacy}", "received_events_url": "https://api.github.com/users/arturoc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e6b29f8ad1ddfcb134d743a66ee5f467e16c350", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e6b29f8ad1ddfcb134d743a66ee5f467e16c350", "html_url": "https://github.com/rust-lang/rust/commit/3e6b29f8ad1ddfcb134d743a66ee5f467e16c350"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "5f96548c0530ac63badbeef3a827a5ddbc702b07", "filename": "src/libstd/thread_local/scoped.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a4549972f29e1838e5e9de924e69111909064e81/src%2Flibstd%2Fthread_local%2Fscoped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4549972f29e1838e5e9de924e69111909064e81/src%2Flibstd%2Fthread_local%2Fscoped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread_local%2Fscoped.rs?ref=a4549972f29e1838e5e9de924e69111909064e81", "patch": "@@ -62,10 +62,10 @@ pub struct Key<T> { #[doc(hidden)] pub inner: KeyInner<T> }\n #[macro_export]\n macro_rules! scoped_thread_local {\n     (static $name:ident: $t:ty) => (\n-        __scoped_thread_local_inner!(static $name: $t)\n+        __scoped_thread_local_inner!(static $name: $t);\n     );\n     (pub static $name:ident: $t:ty) => (\n-        __scoped_thread_local_inner!(pub static $name: $t)\n+        __scoped_thread_local_inner!(pub static $name: $t);\n     );\n }\n \n@@ -240,6 +240,8 @@ mod tests {\n     use cell::Cell;\n     use prelude::*;\n \n+    scoped_thread_local!(static FOO: uint);\n+\n     #[test]\n     fn smoke() {\n         scoped_thread_local!(static BAR: uint);\n@@ -264,4 +266,16 @@ mod tests {\n             });\n         });\n     }\n+\n+    #[test]\n+    fn scope_item_allowed() {\n+        assert!(!FOO.is_set());\n+        FOO.set(&1, || {\n+            assert!(FOO.is_set());\n+            FOO.with(|slot| {\n+                assert_eq!(*slot, 1);\n+            });\n+        });\n+        assert!(!FOO.is_set());\n+    }\n }"}]}