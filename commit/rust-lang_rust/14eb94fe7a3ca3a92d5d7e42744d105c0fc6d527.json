{"sha": "14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZWI5NGZlN2EzY2EzYTkyZDVkN2U0Mjc0NGQxMDVjMGZjNmQ1Mjc=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2021-01-16T23:41:52Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2021-01-17T00:01:36Z"}, "message": "don't suggest erroneous trailing comma after `..`\n\nIn #76612, suggestions were added for missing fields in\npatterns. However, the suggestions are being inserted just at the end\nof the last field in the pattern\u2014before any trailing comma after the\nlast field. This resulted in the \"if you don't care about missing\nfields\" suggestion to recommend code with a trailing comma after the\nfield ellipsis (`..,`), which is actually not legal (\"`..` must be at\nthe end and cannot have a trailing comma\")!\n\nIncidentally, the doc-comment on `error_unmentioned_fields` was using\n`you_cant_use_this_field` as an example field name (presumably\ncopy-paste inherited from the description of Issue #76077), but\nthe present author found this confusing, because unmentioned fields\naren't necessarily unusable.\n\nThe suggested code in the diff this commit introduces to\n`destructuring-assignment/struct_destructure_fail.stderr` doesn't\nwork, but it didn't work beforehand, either (because of the \"found\nreserved identifier `_`\" thing), so you can't really call it a\nregression; it could be fixed in a separate PR.\n\nResolves #78511.", "tree": {"sha": "6863952ae3418e1efb37b1aef143478f973b1609", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6863952ae3418e1efb37b1aef143478f973b1609"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "html_url": "https://github.com/rust-lang/rust/commit/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63a83c5f55801b17b77adf690db397d17c706c48", "url": "https://api.github.com/repos/rust-lang/rust/commits/63a83c5f55801b17b77adf690db397d17c706c48", "html_url": "https://github.com/rust-lang/rust/commit/63a83c5f55801b17b77adf690db397d17c706c48"}], "stats": {"total": 81, "additions": 66, "deletions": 15}, "files": [{"sha": "79234f076acd184b6c284c97595d4e9a84c3cb1f", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "patch": "@@ -1486,11 +1486,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// Returns a diagnostic reporting a struct pattern which does not mention some fields.\n     ///\n     /// ```text\n-    /// error[E0027]: pattern does not mention field `you_cant_use_this_field`\n+    /// error[E0027]: pattern does not mention field `bar`\n     ///   --> src/main.rs:15:9\n     ///    |\n     /// LL |     let foo::Foo {} = foo::Foo::new();\n-    ///    |         ^^^^^^^^^^^ missing field `you_cant_use_this_field`\n+    ///    |         ^^^^^^^^^^^ missing field `bar`\n     /// ```\n     fn error_unmentioned_fields(\n         &self,\n@@ -1524,14 +1524,26 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 }\n                 _ => return err,\n             },\n-            [.., field] => (\n-                match pat.kind {\n-                    PatKind::Struct(_, [_, ..], _) => \", \",\n-                    _ => \"\",\n-                },\n-                \"\",\n-                field.span.shrink_to_hi(),\n-            ),\n+            [.., field] => {\n+                // if last field has a trailing comma, use the comma\n+                // as the span to avoid trailing comma in ultimate\n+                // suggestion (Issue #78511)\n+                let tail = field.span.shrink_to_hi().until(pat.span.shrink_to_hi());\n+                let tail_through_comma = self.tcx.sess.source_map().span_through_char(tail, ',');\n+                let sp = if tail_through_comma == tail {\n+                    field.span.shrink_to_hi()\n+                } else {\n+                    tail_through_comma\n+                };\n+                (\n+                    match pat.kind {\n+                        PatKind::Struct(_, [_, ..], _) => \", \",\n+                        _ => \"\",\n+                    },\n+                    \"\",\n+                    sp,\n+                )\n+            }\n         };\n         err.span_suggestion(\n             sp,"}, {"sha": "c0955ef8b065a85537c51fdb535f54a88939b9f4", "filename": "src/test/ui/destructuring-assignment/struct_destructure_fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr?ref=14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "patch": "@@ -32,11 +32,11 @@ LL |     Struct { a, _ } = Struct { a: 1, b: 2 };\n    |\n help: include the missing field in the pattern\n    |\n-LL |     Struct { a, b, _ } = Struct { a: 1, b: 2 };\n+LL |     Struct { a, b _ } = Struct { a: 1, b: 2 };\n    |               ^^^\n help: if you don't care about this missing field, you can explicitly ignore it\n    |\n-LL |     Struct { a, .., _ } = Struct { a: 1, b: 2 };\n+LL |     Struct { a, .. _ } = Struct { a: 1, b: 2 };\n    |               ^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "e7eca1ce5af97d4f2c47fa93a10973cb52b971e3", "filename": "src/test/ui/error-codes/E0027.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/src%2Ftest%2Fui%2Ferror-codes%2FE0027.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/src%2Ftest%2Fui%2Ferror-codes%2FE0027.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027.rs?ref=14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "patch": "@@ -3,12 +3,21 @@ struct Dog {\n     age: u32,\n }\n \n+\n fn main() {\n     let d = Dog { name: \"Rusty\".to_string(), age: 8 };\n \n     match d {\n         Dog { age: x } => {} //~ ERROR pattern does not mention field `name`\n     }\n+    match d {\n+        // trailing comma\n+        Dog { name: x, } => {} //~ ERROR pattern does not mention field `age`\n+    }\n+    match d {\n+        // trailing comma with weird whitespace\n+        Dog { name: x  , } => {} //~ ERROR pattern does not mention field `age`\n+    }\n     match d {\n         Dog {} => {} //~ ERROR pattern does not mention fields `name`, `age`\n     }"}, {"sha": "694bbc358fee2eb0490d4711db0fc34e7b3f308b", "filename": "src/test/ui/error-codes/E0027.stderr", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr?ref=14eb94fe7a3ca3a92d5d7e42744d105c0fc6d527", "patch": "@@ -1,5 +1,5 @@\n error[E0027]: pattern does not mention field `name`\n-  --> $DIR/E0027.rs:10:9\n+  --> $DIR/E0027.rs:11:9\n    |\n LL |         Dog { age: x } => {}\n    |         ^^^^^^^^^^^^^^ missing field `name`\n@@ -13,8 +13,38 @@ help: if you don't care about this missing field, you can explicitly ignore it\n LL |         Dog { age: x, .. } => {}\n    |                     ^^^^\n \n+error[E0027]: pattern does not mention field `age`\n+  --> $DIR/E0027.rs:15:9\n+   |\n+LL |         Dog { name: x, } => {}\n+   |         ^^^^^^^^^^^^^^^^ missing field `age`\n+   |\n+help: include the missing field in the pattern\n+   |\n+LL |         Dog { name: x, age } => {}\n+   |                      ^^^^^\n+help: if you don't care about this missing field, you can explicitly ignore it\n+   |\n+LL |         Dog { name: x, .. } => {}\n+   |                      ^^^^\n+\n+error[E0027]: pattern does not mention field `age`\n+  --> $DIR/E0027.rs:19:9\n+   |\n+LL |         Dog { name: x  , } => {}\n+   |         ^^^^^^^^^^^^^^^^^^ missing field `age`\n+   |\n+help: include the missing field in the pattern\n+   |\n+LL |         Dog { name: x, age } => {}\n+   |                      ^^^^^\n+help: if you don't care about this missing field, you can explicitly ignore it\n+   |\n+LL |         Dog { name: x, .. } => {}\n+   |                      ^^^^\n+\n error[E0027]: pattern does not mention fields `name`, `age`\n-  --> $DIR/E0027.rs:13:9\n+  --> $DIR/E0027.rs:22:9\n    |\n LL |         Dog {} => {}\n    |         ^^^^^^ missing fields `name`, `age`\n@@ -28,6 +58,6 @@ help: if you don't care about these missing fields, you can explicitly ignore th\n LL |         Dog { .. } => {}\n    |             ^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0027`."}]}