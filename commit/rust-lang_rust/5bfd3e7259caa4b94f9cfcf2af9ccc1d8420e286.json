{"sha": "5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZmQzZTcyNTljYWE0Yjk0ZjljZmNmMmFmOWNjYzFkODQyMGUyODY=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-10-19T23:06:00Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-10-19T23:06:00Z"}, "message": "Accidentally fixed #78071", "tree": {"sha": "169d9264e1ac22438dcc037b92fa29051f580eed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/169d9264e1ac22438dcc037b92fa29051f580eed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286", "html_url": "https://github.com/rust-lang/rust/commit/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c", "html_url": "https://github.com/rust-lang/rust/commit/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c"}], "stats": {"total": 60, "additions": 36, "deletions": 24}, "files": [{"sha": "f87f96e34fccdc373f5ca237d60b2596caa5bf5f", "filename": "src/test/ui/pattern/usefulness/consts-opaque.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.rs?ref=5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286", "patch": "@@ -44,11 +44,13 @@ fn main() {\n         //~^ ERROR unreachable pattern\n     }\n \n-    // FIXME: this causes an ICE (https://github.com/rust-lang/rust/issues/78071)\n-    //match FOO_REF_REF {\n-    //    FOO_REF_REF => {}\n-    //    Foo(_) => {}\n-    //}\n+    // This used to cause an ICE (https://github.com/rust-lang/rust/issues/78071)\n+    match FOO_REF_REF {\n+        FOO_REF_REF => {}\n+        //~^ WARNING must be annotated with `#[derive(PartialEq, Eq)]`\n+        //~| WARNING this was previously accepted by the compiler but is being phased out\n+        Foo(_) => {}\n+    }\n \n     match BAR {\n         Bar => {}"}, {"sha": "f10166d5a35801cae7b9a33a5e32d672ad706d0e", "filename": "src/test/ui/pattern/usefulness/consts-opaque.stderr", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.stderr?ref=5bfd3e7259caa4b94f9cfcf2af9ccc1d8420e286", "patch": "@@ -28,22 +28,32 @@ error: unreachable pattern\n LL |         Foo(_) => {} // should not be emitting unreachable warning\n    |         ^^^^^^\n \n+warning: to use a constant of type `Foo` in a pattern, `Foo` must be annotated with `#[derive(PartialEq, Eq)]`\n+  --> $DIR/consts-opaque.rs:49:9\n+   |\n+LL |         FOO_REF_REF => {}\n+   |         ^^^^^^^^^^^\n+   |\n+   = note: `#[warn(indirect_structural_match)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n+\n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:55:9\n+  --> $DIR/consts-opaque.rs:57:9\n    |\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:55:9\n+  --> $DIR/consts-opaque.rs:57:9\n    |\n LL |         Bar => {}\n    |         --- matches any value\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^ unreachable pattern\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:58:9\n+  --> $DIR/consts-opaque.rs:60:9\n    |\n LL |         Bar => {}\n    |         --- matches any value\n@@ -52,19 +62,19 @@ LL |         _ => {}\n    |         ^ unreachable pattern\n \n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:63:9\n+  --> $DIR/consts-opaque.rs:65:9\n    |\n LL |         BAR => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:65:9\n+  --> $DIR/consts-opaque.rs:67:9\n    |\n LL |         Bar => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:67:9\n+  --> $DIR/consts-opaque.rs:69:9\n    |\n LL |         Bar => {} // should not be emitting unreachable warning\n    |         --- matches any value\n@@ -73,76 +83,76 @@ LL |         _ => {}\n    |         ^ unreachable pattern\n \n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:72:9\n+  --> $DIR/consts-opaque.rs:74:9\n    |\n LL |         BAR => {}\n    |         ^^^\n \n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:74:9\n+  --> $DIR/consts-opaque.rs:76:9\n    |\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:74:9\n+  --> $DIR/consts-opaque.rs:76:9\n    |\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:77:9\n+  --> $DIR/consts-opaque.rs:79:9\n    |\n LL |         _ => {} // should not be emitting unreachable warning\n    |         ^\n \n error: to use a constant of type `Baz` in a pattern, `Baz` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:82:9\n+  --> $DIR/consts-opaque.rs:84:9\n    |\n LL |         BAZ => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:84:9\n+  --> $DIR/consts-opaque.rs:86:9\n    |\n LL |         Baz::Baz1 => {} // should not be emitting unreachable warning\n    |         ^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:86:9\n+  --> $DIR/consts-opaque.rs:88:9\n    |\n LL |         _ => {}\n    |         ^\n \n error: to use a constant of type `Baz` in a pattern, `Baz` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:92:9\n+  --> $DIR/consts-opaque.rs:94:9\n    |\n LL |         BAZ => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:94:9\n+  --> $DIR/consts-opaque.rs:96:9\n    |\n LL |         _ => {}\n    |         ^\n \n error: to use a constant of type `Baz` in a pattern, `Baz` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:99:9\n+  --> $DIR/consts-opaque.rs:101:9\n    |\n LL |         BAZ => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:101:9\n+  --> $DIR/consts-opaque.rs:103:9\n    |\n LL |         Baz::Baz2 => {} // should not be emitting unreachable warning\n    |         ^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:103:9\n+  --> $DIR/consts-opaque.rs:105:9\n    |\n LL |         _ => {} // should not be emitting unreachable warning\n    |         ^\n \n-error: aborting due to 22 previous errors\n+error: aborting due to 22 previous errors; 1 warning emitted\n "}]}