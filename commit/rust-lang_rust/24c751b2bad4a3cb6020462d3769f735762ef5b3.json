{"sha": "24c751b2bad4a3cb6020462d3769f735762ef5b3", "node_id": "C_kwDOAAsO6NoAKDI0Yzc1MWIyYmFkNGEzY2I2MDIwNDYyZDM3NjlmNzM1NzYyZWY1YjM", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-09-14T14:08:56Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-09-14T15:14:15Z"}, "message": "Rustdoc-Json: Add test for extern_types", "tree": {"sha": "2ab4ee4aeb86b8c87140398bd68fda91ecda50dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ab4ee4aeb86b8c87140398bd68fda91ecda50dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24c751b2bad4a3cb6020462d3769f735762ef5b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24c751b2bad4a3cb6020462d3769f735762ef5b3", "html_url": "https://github.com/rust-lang/rust/commit/24c751b2bad4a3cb6020462d3769f735762ef5b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24c751b2bad4a3cb6020462d3769f735762ef5b3/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393792da8d8a931643baf855369df0a009acdb19", "url": "https://api.github.com/repos/rust-lang/rust/commits/393792da8d8a931643baf855369df0a009acdb19", "html_url": "https://github.com/rust-lang/rust/commit/393792da8d8a931643baf855369df0a009acdb19"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "d287d5ebec5436b88e37e3bd3bbeed9cb7374c86", "filename": "src/test/rustdoc-json/type/extern.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/24c751b2bad4a3cb6020462d3769f735762ef5b3/src%2Ftest%2Frustdoc-json%2Ftype%2Fextern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24c751b2bad4a3cb6020462d3769f735762ef5b3/src%2Ftest%2Frustdoc-json%2Ftype%2Fextern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftype%2Fextern.rs?ref=24c751b2bad4a3cb6020462d3769f735762ef5b3", "patch": "@@ -0,0 +1,10 @@\n+#![feature(extern_types)]\n+\n+extern {\n+    /// No inner information\n+    pub type Foo;\n+}\n+\n+// @is \"$.index[*][?(@.docs=='No inner information')].name\" '\"Foo\"'\n+// @is \"$.index[*][?(@.docs=='No inner information')].kind\" '\"foreign_type\"'\n+// @!has \"$.index[*][?(@.docs=='No inner information')].inner\""}, {"sha": "65d7143d133852739efe77b19857bc3452f2088c", "filename": "src/tools/jsondoclint/src/item_kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24c751b2bad4a3cb6020462d3769f735762ef5b3/src%2Ftools%2Fjsondoclint%2Fsrc%2Fitem_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24c751b2bad4a3cb6020462d3769f735762ef5b3/src%2Ftools%2Fjsondoclint%2Fsrc%2Fitem_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fjsondoclint%2Fsrc%2Fitem_kind.rs?ref=24c751b2bad4a3cb6020462d3769f735762ef5b3", "patch": "@@ -52,9 +52,9 @@ impl Kind {\n             Macro => true,\n             ProcMacro => true,\n             Primitive => true,\n+            ForeignType => true,\n \n             // FIXME(adotinthevoid): I'm not sure if these are corrent\n-            ForeignType => false,\n             Keyword => false,\n             OpaqueTy => false,\n             ProcAttribute => false,"}, {"sha": "d7bf6fe9e3ca4335370445392294c49fafebb838", "filename": "src/tools/jsondoclint/src/validator.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/24c751b2bad4a3cb6020462d3769f735762ef5b3/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24c751b2bad4a3cb6020462d3769f735762ef5b3/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator.rs?ref=24c751b2bad4a3cb6020462d3769f735762ef5b3", "patch": "@@ -68,7 +68,7 @@ impl<'a> Validator<'a> {\n                 ItemEnum::OpaqueTy(x) => self.check_opaque_ty(x),\n                 ItemEnum::Constant(x) => self.check_constant(x),\n                 ItemEnum::Static(x) => self.check_static(x),\n-                ItemEnum::ForeignType => todo!(),\n+                ItemEnum::ForeignType => {} // nop\n                 ItemEnum::Macro(x) => self.check_macro(x),\n                 ItemEnum::ProcMacro(x) => self.check_proc_macro(x),\n                 ItemEnum::PrimitiveType(x) => self.check_primitive_type(x),\n@@ -340,6 +340,13 @@ impl<'a> Validator<'a> {\n         fp.generic_params.iter().for_each(|gpd| self.check_generic_param_def(gpd));\n     }\n \n+    // TODO: Remove\n+    fn add_id(&mut self, id: &'a Id) {\n+        if !self.seen_ids.contains(id) {\n+            self.todo.insert(id);\n+        }\n+    }\n+\n     fn add_id_checked(&mut self, id: &'a Id, valid: fn(Kind) -> bool, expected: &str) {\n         if let Some(kind) = self.kind_of(id) {\n             if valid(kind) {"}]}