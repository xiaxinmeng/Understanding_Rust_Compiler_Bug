{"sha": "9337ad5baec6e63ac6231193b2c0a4d810198b1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMzdhZDViYWVjNmU2M2FjNjIzMTE5M2IyYzBhNGQ4MTAxOThiMWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-27T17:38:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-27T17:38:11Z"}, "message": "Auto merge of #42103 - jorendorff:master, r=estebank\n\ntrace_macro: Show both the macro call and its expansion. #42072.\n\nSee #42072 for the initial motivation behind this.\n\nThe change is not the minimal fix, but I want this behavior almost every time I use `trace_macros`.", "tree": {"sha": "8368a95a55bc8b8fc5a48a6383a0db974c184ff3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8368a95a55bc8b8fc5a48a6383a0db974c184ff3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9337ad5baec6e63ac6231193b2c0a4d810198b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9337ad5baec6e63ac6231193b2c0a4d810198b1d", "html_url": "https://github.com/rust-lang/rust/commit/9337ad5baec6e63ac6231193b2c0a4d810198b1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9337ad5baec6e63ac6231193b2c0a4d810198b1d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a11c26f6acb1b8890c36196e88371840c01e201d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a11c26f6acb1b8890c36196e88371840c01e201d", "html_url": "https://github.com/rust-lang/rust/commit/a11c26f6acb1b8890c36196e88371840c01e201d"}, {"sha": "f8b66a001d74946565ee2e7df58afc9918455da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b66a001d74946565ee2e7df58afc9918455da1", "html_url": "https://github.com/rust-lang/rust/commit/f8b66a001d74946565ee2e7df58afc9918455da1"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "15042e529e51a8c2970c7a92041ac8697306dba4", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9337ad5baec6e63ac6231193b2c0a4d810198b1d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9337ad5baec6e63ac6231193b2c0a4d810198b1d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=9337ad5baec6e63ac6231193b2c0a4d810198b1d", "patch": "@@ -84,6 +84,12 @@ impl TTMacroExpander for MacroRulesMacroExpander {\n     }\n }\n \n+fn trace_macros_note(cx: &mut ExtCtxt, sp: Span, message: String) {\n+    let sp = sp.macro_backtrace().last().map(|trace| trace.call_site).unwrap_or(sp);\n+    let mut values: &mut Vec<String> = cx.expansions.entry(sp).or_insert_with(Vec::new);\n+    values.push(message);\n+}\n+\n /// Given `lhses` and `rhses`, this is the new macro we create\n fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n                           sp: Span,\n@@ -93,9 +99,7 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n                           rhses: &[quoted::TokenTree])\n                           -> Box<MacResult+'cx> {\n     if cx.trace_macros() {\n-        let sp = sp.macro_backtrace().last().map(|trace| trace.call_site).unwrap_or(sp);\n-        let mut values: &mut Vec<String> = cx.expansions.entry(sp).or_insert_with(Vec::new);\n-        values.push(format!(\"expands to `{}! {{ {} }}`\", name, arg));\n+        trace_macros_note(cx, sp, format!(\"expanding `{}! {{ {} }}`\", name, arg));\n     }\n \n     // Which arm's failure should we report? (the one furthest along)\n@@ -117,6 +121,11 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n                 };\n                 // rhs has holes ( `$id` and `$(...)` that need filled)\n                 let tts = transcribe(&cx.parse_sess.span_diagnostic, Some(named_matches), rhs);\n+\n+                if cx.trace_macros() {\n+                    trace_macros_note(cx, sp, format!(\"to `{}`\", tts));\n+                }\n+\n                 let directory = Directory {\n                     path: cx.current_expansion.module.directory.clone(),\n                     ownership: cx.current_expansion.directory_ownership,"}, {"sha": "6cf3b0bd35d5edab3182967d2b863d26526e62f7", "filename": "src/test/ui/macros/trace-macro.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9337ad5baec6e63ac6231193b2c0a4d810198b1d/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9337ad5baec6e63ac6231193b2c0a4d810198b1d/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr?ref=9337ad5baec6e63ac6231193b2c0a4d810198b1d", "patch": "@@ -4,6 +4,9 @@ note: trace_macro\n 14 |     println!(\"Hello, World!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: expands to `println! { \"Hello, World!\" }`\n-   = note: expands to `print! { concat ! ( \"Hello, World!\" , \"/n\" ) }`\n+   = note: expanding `println! { \"Hello, World!\" }`\n+   = note: to `print ! ( concat ! ( \"Hello, World!\" , \"/n\" ) )`\n+   = note: expanding `print! { concat ! ( \"Hello, World!\" , \"/n\" ) }`\n+   = note: to `$crate :: io :: _print ( format_args ! ( concat ! ( \"Hello, World!\" , \"/n\" ) )\n+           )`\n "}]}