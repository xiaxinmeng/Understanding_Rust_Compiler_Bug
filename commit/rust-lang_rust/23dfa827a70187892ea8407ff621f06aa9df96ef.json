{"sha": "23dfa827a70187892ea8407ff621f06aa9df96ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZGZhODI3YTcwMTg3ODkyZWE4NDA3ZmY2MjFmMDZhYTlkZjk2ZWY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-21T23:56:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-21T23:56:53Z"}, "message": "Merge pull request #2295 from topecongiro/issue-2280\n\nMake 'cargo fmt' formats every workspace member", "tree": {"sha": "7e3d0d19c335afa991ca9139b41c060c771947f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e3d0d19c335afa991ca9139b41c060c771947f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23dfa827a70187892ea8407ff621f06aa9df96ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaPEpFCRBK7hj4Ov3rIwAAdHIIAH0CbRRpfTwCJbGIz7UtaP9X\np8VsALpJGe58nuBN4GrnAyR/FznDdb2BACSkrEz7sDHiR5X9mH/zUfqft6JBE5my\nE5WwTOm7DfpLgxF2GA0lTpIRy+Cv2uu4mekkMKXh6w2mw+0iC0LOuFOaClW5Ek8R\nxT8VU+a0QsVRdUzU1mGUk37O+NRWYNiv5D3eft2u70fxy9UXrYvvRqrJh6SC5Wgh\nmHzaK0M3iZ1V59DUU8Chxrm18BkFTVfVau/X0getcRwoKg3SzSyUfA0o8JTxTE7y\nWw59oNtUGF/cyLfDvIbLGU6Mgv1gHysYpfrdsKMoWkuw9mhmzxm/tXFjHtk8GhE=\n=p/HM\n-----END PGP SIGNATURE-----\n", "payload": "tree 7e3d0d19c335afa991ca9139b41c060c771947f0\nparent 72413c55b09d1a91fc1a36fb79c6052b3539dd07\nparent 85ef4638b65a0443fca54f3cf6af55df923b1923\nauthor Nick Cameron <nrc@ncameron.org> 1513900613 +1300\ncommitter GitHub <noreply@github.com> 1513900613 +1300\n\nMerge pull request #2295 from topecongiro/issue-2280\n\nMake 'cargo fmt' formats every workspace member"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23dfa827a70187892ea8407ff621f06aa9df96ef", "html_url": "https://github.com/rust-lang/rust/commit/23dfa827a70187892ea8407ff621f06aa9df96ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23dfa827a70187892ea8407ff621f06aa9df96ef/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72413c55b09d1a91fc1a36fb79c6052b3539dd07", "url": "https://api.github.com/repos/rust-lang/rust/commits/72413c55b09d1a91fc1a36fb79c6052b3539dd07", "html_url": "https://github.com/rust-lang/rust/commit/72413c55b09d1a91fc1a36fb79c6052b3539dd07"}, {"sha": "85ef4638b65a0443fca54f3cf6af55df923b1923", "url": "https://api.github.com/repos/rust-lang/rust/commits/85ef4638b65a0443fca54f3cf6af55df923b1923", "html_url": "https://github.com/rust-lang/rust/commit/85ef4638b65a0443fca54f3cf6af55df923b1923"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "0cf1ec7674956f365ebc07c15fb585971c2d8a9c", "filename": "CHANGELOG.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23dfa827a70187892ea8407ff621f06aa9df96ef/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/23dfa827a70187892ea8407ff621f06aa9df96ef/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=23dfa827a70187892ea8407ff621f06aa9df96ef", "patch": "@@ -2,6 +2,10 @@\n \n ## [Unreleased]\n \n+### Changed\n+\n+- `cargo fmt` will format every workspace member.\n+\n ## [0.3.2] 2017-12-15\n \n ### Changed"}, {"sha": "e45521de30b273ff816410e5af5022fd6f97d0fa", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23dfa827a70187892ea8407ff621f06aa9df96ef/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23dfa827a70187892ea8407ff621f06aa9df96ef/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=23dfa827a70187892ea8407ff621f06aa9df96ef", "patch": "@@ -240,7 +240,7 @@ fn get_targets_root_only(targets: &mut HashSet<Target>) -> Result<(), io::Error>\n \n     for package in metadata.packages {\n         for target in package.targets {\n-            if target.name == package.name {\n+            if is_target_workspace_members(&target.name, &metadata.workspace_members) {\n                 targets.insert(Target::from_target(&target));\n             }\n         }\n@@ -249,6 +249,15 @@ fn get_targets_root_only(targets: &mut HashSet<Target>) -> Result<(), io::Error>\n     Ok(())\n }\n \n+fn is_target_workspace_members(target: &str, workspace_members: &[String]) -> bool {\n+    workspace_members.iter().any(|member| {\n+        member\n+            .split_whitespace()\n+            .nth(0)\n+            .map_or(false, |name| name == target)\n+    })\n+}\n+\n fn get_targets_recursive(\n     manifest_path: Option<&Path>,\n     mut targets: &mut HashSet<Target>,"}]}