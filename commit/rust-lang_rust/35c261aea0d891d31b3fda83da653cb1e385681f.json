{"sha": "35c261aea0d891d31b3fda83da653cb1e385681f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YzI2MWFlYTBkODkxZDMxYjNmZGE4M2RhNjUzY2IxZTM4NTY4MWY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-30T21:52:00Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-04-01T15:21:42Z"}, "message": "Add `#[fundamental]` annotations into libcore so that `Sized` and the\n`Fn` traits are considered fundamental, along with `Box` (though that is\nmostly for show; the real type is `~T` in the compiler).", "tree": {"sha": "5914fe35c58c55958a01fac1bb438bca65d0badc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5914fe35c58c55958a01fac1bb438bca65d0badc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35c261aea0d891d31b3fda83da653cb1e385681f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35c261aea0d891d31b3fda83da653cb1e385681f", "html_url": "https://github.com/rust-lang/rust/commit/35c261aea0d891d31b3fda83da653cb1e385681f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35c261aea0d891d31b3fda83da653cb1e385681f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03d3ba7667ed9599f46b742ac314a43297d76b19", "url": "https://api.github.com/repos/rust-lang/rust/commits/03d3ba7667ed9599f46b742ac314a43297d76b19", "html_url": "https://github.com/rust-lang/rust/commit/03d3ba7667ed9599f46b742ac314a43297d76b19"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "adfe0f461bea39363102d82372fa6bcbea19a20c", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=35c261aea0d891d31b3fda83da653cb1e385681f", "patch": "@@ -86,6 +86,7 @@ pub static HEAP: () = ();\n /// See the [module-level documentation](../../std/boxed/index.html) for more.\n #[lang = \"owned_box\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[fundamental]\n pub struct Box<T>(Unique<T>);\n \n impl<T> Box<T> {"}, {"sha": "a8be63d637359beff197d7947b43a037023d8b15", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=35c261aea0d891d31b3fda83da653cb1e385681f", "patch": "@@ -71,6 +71,8 @@\n #![feature(no_std)]\n #![no_std]\n #![feature(allocator)]\n+#![feature(custom_attribute)]\n+#![feature(fundamental)]\n #![feature(lang_items, unsafe_destructor)]\n #![feature(box_syntax)]\n #![feature(optin_builtin_traits)]"}, {"sha": "3a9af50fefbc78c29f2453144563bfb506c1dc86", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=35c261aea0d891d31b3fda83da653cb1e385681f", "patch": "@@ -70,8 +70,10 @@\n #![feature(unboxed_closures)]\n #![feature(rustc_attrs)]\n #![feature(optin_builtin_traits)]\n+#![feature(fundamental)]\n #![feature(concat_idents)]\n #![feature(reflect)]\n+#![feature(custom_attribute)]\n \n #[macro_use]\n mod macros;"}, {"sha": "97bde9fc96eec1bce25789b066c9f9329bc0799f", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=35c261aea0d891d31b3fda83da653cb1e385681f", "patch": "@@ -49,6 +49,7 @@ impl !Send for Managed { }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[lang=\"sized\"]\n #[rustc_on_unimplemented = \"`{Self}` does not have a constant size known at compile-time\"]\n+#[fundamental] // for Default, for example, which requires that `[T]: !Default` be evaluatable\n pub trait Sized : MarkerTrait {\n     // Empty.\n }"}, {"sha": "399aec9afd440b542bd6270b1a3de0b4f5ff5a30", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c261aea0d891d31b3fda83da653cb1e385681f/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=35c261aea0d891d31b3fda83da653cb1e385681f", "patch": "@@ -1117,6 +1117,7 @@ impl<'a, T: ?Sized> DerefMut for &'a mut T {\n #[lang=\"fn\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_paren_sugar]\n+#[fundamental] // so that regex can rely that `&str: !FnMut`\n pub trait Fn<Args> : FnMut<Args> {\n     /// This is called when the call operator is used.\n     extern \"rust-call\" fn call(&self, args: Args) -> Self::Output;\n@@ -1126,6 +1127,7 @@ pub trait Fn<Args> : FnMut<Args> {\n #[lang=\"fn_mut\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_paren_sugar]\n+#[fundamental] // so that regex can rely that `&str: !FnMut`\n pub trait FnMut<Args> : FnOnce<Args> {\n     /// This is called when the call operator is used.\n     extern \"rust-call\" fn call_mut(&mut self, args: Args) -> Self::Output;\n@@ -1135,6 +1137,7 @@ pub trait FnMut<Args> : FnOnce<Args> {\n #[lang=\"fn_once\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_paren_sugar]\n+#[fundamental] // so that regex can rely that `&str: !FnMut`\n pub trait FnOnce<Args> {\n     /// The returned type after the call operator is used.\n     type Output;"}]}