{"sha": "dc2d232c7485c60dd856f8b9aee83426492d4661", "node_id": "C_kwDOAAsO6NoAKGRjMmQyMzJjNzQ4NWM2MGRkODU2ZjhiOWFlZTgzNDI2NDkyZDQ2NjE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-25T14:04:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-25T14:04:40Z"}, "message": "Auto merge of #85673 - csmoe:export-exe-sym, r=bjorn3\n\nRFC-2841: add codegen flag export symbols from executable\n\nCloses #84161\nr? `@nikomatsakis` `@Mark-Simulacrum`", "tree": {"sha": "70c25085169e18c0e4218bffde720a23b367449e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c25085169e18c0e4218bffde720a23b367449e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc2d232c7485c60dd856f8b9aee83426492d4661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2d232c7485c60dd856f8b9aee83426492d4661", "html_url": "https://github.com/rust-lang/rust/commit/dc2d232c7485c60dd856f8b9aee83426492d4661", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc2d232c7485c60dd856f8b9aee83426492d4661/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fdbf075cf502431ca9fee6616331b32e34f25de", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fdbf075cf502431ca9fee6616331b32e34f25de", "html_url": "https://github.com/rust-lang/rust/commit/2fdbf075cf502431ca9fee6616331b32e34f25de"}, {"sha": "6674c94d15e8bdf2d6d3d53d73acb28bd0b10c36", "url": "https://api.github.com/repos/rust-lang/rust/commits/6674c94d15e8bdf2d6d3d53d73acb28bd0b10c36", "html_url": "https://github.com/rust-lang/rust/commit/6674c94d15e8bdf2d6d3d53d73acb28bd0b10c36"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "48d24ecf4128077672ad52f9ea165bb3461a3b3d", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=dc2d232c7485c60dd856f8b9aee83426492d4661", "patch": "@@ -2082,7 +2082,12 @@ fn add_order_independent_options(\n         // sections to ensure we have all the data for PGO.\n         let keep_metadata =\n             crate_type == CrateType::Dylib || sess.opts.cg.profile_generate.enabled();\n-        cmd.gc_sections(keep_metadata);\n+        if crate_type != CrateType::Executable || !sess.opts.unstable_opts.export_executable_symbols\n+        {\n+            cmd.gc_sections(keep_metadata);\n+        } else {\n+            cmd.no_gc_sections();\n+        }\n     }\n \n     cmd.set_output_kind(link_output_kind, out_filename);"}, {"sha": "8e5ac9da4ac50652b62a39e7d760ee18e14ad163", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=dc2d232c7485c60dd856f8b9aee83426492d4661", "patch": "@@ -640,9 +640,14 @@ impl<'a> Linker for GccLinker<'a> {\n \n     fn export_symbols(&mut self, tmpdir: &Path, crate_type: CrateType, symbols: &[String]) {\n         // Symbol visibility in object files typically takes care of this.\n-        if crate_type == CrateType::Executable && self.sess.target.override_export_symbols.is_none()\n-        {\n-            return;\n+        if crate_type == CrateType::Executable {\n+            let should_export_executable_symbols =\n+                self.sess.opts.unstable_opts.export_executable_symbols;\n+            if self.sess.target.override_export_symbols.is_none()\n+                && !should_export_executable_symbols\n+            {\n+                return;\n+            }\n         }\n \n         // We manually create a list of exported symbols to ensure we don't expose any more.\n@@ -969,7 +974,11 @@ impl<'a> Linker for MsvcLinker<'a> {\n     fn export_symbols(&mut self, tmpdir: &Path, crate_type: CrateType, symbols: &[String]) {\n         // Symbol visibility takes care of this typically\n         if crate_type == CrateType::Executable {\n-            return;\n+            let should_export_executable_symbols =\n+                self.sess.opts.unstable_opts.export_executable_symbols;\n+            if !should_export_executable_symbols {\n+                return;\n+            }\n         }\n \n         let path = tmpdir.join(\"lib.def\");"}, {"sha": "0a0eb99cd926644b447eac8be1353caddd8c3efe", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=dc2d232c7485c60dd856f8b9aee83426492d4661", "patch": "@@ -733,6 +733,7 @@ fn test_unstable_options_tracking_hash() {\n     tracked!(debug_macros, true);\n     tracked!(dep_info_omit_d_target, true);\n     tracked!(drop_tracking, true);\n+    tracked!(export_executable_symbols, true);\n     tracked!(dual_proc_macros, true);\n     tracked!(dwarf_version, Some(5));\n     tracked!(emit_thin_lto, false);"}, {"sha": "28e2e0db89a1fb7cffa737739963c0ed37764f67", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2d232c7485c60dd856f8b9aee83426492d4661/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=dc2d232c7485c60dd856f8b9aee83426492d4661", "patch": "@@ -1282,6 +1282,8 @@ options! {\n         \"emit a section containing stack size metadata (default: no)\"),\n     emit_thin_lto: bool = (true, parse_bool, [TRACKED],\n         \"emit the bc module with thin LTO info (default: yes)\"),\n+    export_executable_symbols: bool = (false, parse_bool, [TRACKED],\n+        \"export symbols from executables, as if they were dynamic libraries\"),\n     fewer_names: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"reduce memory use by retaining fewer names within compilation artifacts (LLVM-IR) \\\n         (default: no)\"),"}, {"sha": "5006f9cb8cfeacfe3410b07e3693e90780290555", "filename": "src/test/run-make/export-executable-symbols/Makefile", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dc2d232c7485c60dd856f8b9aee83426492d4661/src%2Ftest%2Frun-make%2Fexport-executable-symbols%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/dc2d232c7485c60dd856f8b9aee83426492d4661/src%2Ftest%2Frun-make%2Fexport-executable-symbols%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexport-executable-symbols%2FMakefile?ref=dc2d232c7485c60dd856f8b9aee83426492d4661", "patch": "@@ -0,0 +1,11 @@\n+-include ../../run-make-fulldeps/tools.mk\n+\n+# ignore-wasm32\n+# ignore-wasm64\n+# ignore-none no-std is not supported\n+# only-linux\n+\n+all:\n+\t$(RUSTC) -Zexport-executable-symbols  main.rs --target $(TARGET) --crate-type=bin\n+\tnm $(TMPDIR)/main | $(CGREP) exported_symbol\n+"}, {"sha": "c498381a33f64239320df59236429e32d42be8d3", "filename": "src/test/run-make/export-executable-symbols/main.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dc2d232c7485c60dd856f8b9aee83426492d4661/src%2Ftest%2Frun-make%2Fexport-executable-symbols%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2d232c7485c60dd856f8b9aee83426492d4661/src%2Ftest%2Frun-make%2Fexport-executable-symbols%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexport-executable-symbols%2Fmain.rs?ref=dc2d232c7485c60dd856f8b9aee83426492d4661", "patch": "@@ -0,0 +1,8 @@\n+// edition:2018\n+\n+fn main() {}\n+\n+#[no_mangle]\n+pub fn exported_symbol() -> i8 {\n+    42\n+}"}, {"sha": "86e42440bd0bceb276aa6f6b38b86caf0342f8e0", "filename": "src/test/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc2d232c7485c60dd856f8b9aee83426492d4661/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/dc2d232c7485c60dd856f8b9aee83426492d4661/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout?ref=dc2d232c7485c60dd856f8b9aee83426492d4661", "patch": "@@ -37,6 +37,7 @@\n     -Z                           dwarf-version=val -- version of DWARF debug information to emit (default: 2 or 4, depending on platform)\n     -Z                        emit-stack-sizes=val -- emit a section containing stack size metadata (default: no)\n     -Z                           emit-thin-lto=val -- emit the bc module with thin LTO info (default: yes)\n+    -Z               export-executable-symbols=val -- export symbols from executables, as if they were dynamic libraries\n     -Z                             fewer-names=val -- reduce memory use by retaining fewer names within compilation artifacts (LLVM-IR) (default: no)\n     -Z              force-unstable-if-unmarked=val -- force all crates to be `rustc_private` unstable (default: no)\n     -Z                                    fuel=val -- set the optimization fuel quota for a crate"}]}