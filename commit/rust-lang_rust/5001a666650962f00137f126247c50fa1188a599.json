{"sha": "5001a666650962f00137f126247c50fa1188a599", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwMDFhNjY2NjUwOTYyZjAwMTM3ZjEyNjI0N2M1MGZhMTE4OGE1OTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-13T02:06:31Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-13T03:17:36Z"}, "message": "Test fixes from rollup\n\nCloses #14163 (Fix typos in rustc manpage)\nCloses #14161 (Add the patch number to version strings. Closes #13289)\nCloses #14156 (rustdoc: Fix hiding implementations of traits)\nCloses #14152 (add shebang to scripts that have execute bit set)\nCloses #14150 (libcore: remove fails from slice.rs and remove duplicated length checking)\nCloses #14147 (Make ProcessOutput Eq, TotalEq, Clone)\nCloses #14142 (doc: updates rust manual (loop to continue))\nCloses #14141 (doc: Update the linkage documentation)\nCloses #14139 (Remove an unnecessary .move_iter().collect())\nCloses #14136 (Two minor fixes in parser.rs)\nCloses #14130 (Fixed typo in comments of driver.rs)\nCloses #14128 (Add `stat` method to `std::io::fs::File` to stat without a Path.)\nCloses #14114 (rustdoc: List macros in the sidebar)\nCloses #14113 (shootout-nbody improvement)\nCloses #14112 (Improved example code in Option)\nCloses #14104 (Remove reference to MutexArc)\nCloses #14087 (emacs: highlight `macro_name!` in macro invocations using [] delimiters)", "tree": {"sha": "ee59a0b0f34615f392f2342e24d5188a6c7f54d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee59a0b0f34615f392f2342e24d5188a6c7f54d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5001a666650962f00137f126247c50fa1188a599", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5001a666650962f00137f126247c50fa1188a599", "html_url": "https://github.com/rust-lang/rust/commit/5001a666650962f00137f126247c50fa1188a599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5001a666650962f00137f126247c50fa1188a599/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13491dbadbb90f228d3a3df4051495262b5f5299", "url": "https://api.github.com/repos/rust-lang/rust/commits/13491dbadbb90f228d3a3df4051495262b5f5299", "html_url": "https://github.com/rust-lang/rust/commit/13491dbadbb90f228d3a3df4051495262b5f5299"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "3c32b7ca802d78867f20504b4116d7be32fdb1c4", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5001a666650962f00137f126247c50fa1188a599/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5001a666650962f00137f126247c50fa1188a599/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=5001a666650962f00137f126247c50fa1188a599", "patch": "@@ -1509,7 +1509,6 @@ pub enum FileType {\n ///     Err(e) => fail!(\"couldn't read foo.txt: {}\", e),\n /// };\n ///\n-/// println!(\"path: {}\", info.path.display());\n /// println!(\"byte size: {}\", info.size);\n /// # }\n /// ```"}, {"sha": "f7324dc08b6d584251eba0639db14e1fc7eb463d", "filename": "src/libstd/os.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5001a666650962f00137f126247c50fa1188a599/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5001a666650962f00137f126247c50fa1188a599/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=5001a666650962f00137f126247c50fa1188a599", "patch": "@@ -95,13 +95,12 @@ pub fn getcwd() -> Path {\n \n #[cfg(windows)]\n pub mod win32 {\n-    use iter::Iterator;\n     use libc::types::os::arch::extra::DWORD;\n     use libc;\n     use option::{None, Option, Expect};\n     use option;\n     use os::TMPBUF_SZ;\n-    use slice::{MutableVector, ImmutableVector, OwnedVector};\n+    use slice::{MutableVector, ImmutableVector};\n     use str::{StrSlice, StrAllocating};\n     use str;\n     use vec::Vec;"}]}