{"sha": "10def9a6e0fc9ace09934f71a8eef0b556e9111f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZGVmOWE2ZTBmYzlhY2UwOTkzNGY3MWE4ZWVmMGI1NTZlOTExMWY=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-14T23:22:13Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:25Z"}, "message": "Revert borrowck changes", "tree": {"sha": "b23a6da8f5efea0b2d4179ba690dcd9ce941420a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b23a6da8f5efea0b2d4179ba690dcd9ce941420a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10def9a6e0fc9ace09934f71a8eef0b556e9111f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10def9a6e0fc9ace09934f71a8eef0b556e9111f", "html_url": "https://github.com/rust-lang/rust/commit/10def9a6e0fc9ace09934f71a8eef0b556e9111f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10def9a6e0fc9ace09934f71a8eef0b556e9111f/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ad0f89e867df98b4be3573d58f99d3abcaf02e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad0f89e867df98b4be3573d58f99d3abcaf02e1", "html_url": "https://github.com/rust-lang/rust/commit/2ad0f89e867df98b4be3573d58f99d3abcaf02e1"}], "stats": {"total": 30, "additions": 4, "deletions": 26}, "files": [{"sha": "426eef5957075b4eb21e2c69cb247287708406df", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/10def9a6e0fc9ace09934f71a8eef0b556e9111f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10def9a6e0fc9ace09934f71a8eef0b556e9111f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=10def9a6e0fc9ace09934f71a8eef0b556e9111f", "patch": "@@ -21,7 +21,6 @@ use borrowck::move_data::MoveData;\n use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n-use rustc::middle::region::extent_has_yield;\n use rustc::middle::region;\n use rustc::ty::{self, TyCtxt};\n \n@@ -37,20 +36,19 @@ mod gather_moves;\n mod move_error;\n \n pub fn gather_loans_in_fn<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n-                                    body_id: hir::BodyId)\n+                                    body: hir::BodyId)\n                                     -> (Vec<Loan<'tcx>>, move_data::MoveData<'tcx>) {\n-    let def_id = bccx.tcx.hir.body_owner_def_id(body_id);\n+    let def_id = bccx.tcx.hir.body_owner_def_id(body);\n     let param_env = bccx.tcx.param_env(def_id);\n-    let body = bccx.tcx.hir.body(body_id);\n     let mut glcx = GatherLoanCtxt {\n         bccx: bccx,\n         all_loans: Vec::new(),\n-        item_ub: region::CodeExtent::Misc(body_id.node_id),\n+        item_ub: region::CodeExtent::Misc(body.node_id),\n         move_data: MoveData::new(),\n         move_error_collector: move_error::MoveErrorCollector::new(),\n-        generator: body.is_generator(),\n     };\n \n+    let body = glcx.bccx.tcx.hir.body(body);\n     euv::ExprUseVisitor::new(&mut glcx, bccx.tcx, param_env, &bccx.region_maps, bccx.tables)\n         .consume_body(body);\n \n@@ -67,7 +65,6 @@ struct GatherLoanCtxt<'a, 'tcx: 'a> {\n     /// `item_ub` is used as an upper-bound on the lifetime whenever we\n     /// ask for the scope of an expression categorized as an upvar.\n     item_ub: region::CodeExtent,\n-    generator: bool,\n }\n \n impl<'a, 'tcx> euv::Delegate<'tcx> for GatherLoanCtxt<'a, 'tcx> {\n@@ -219,19 +216,6 @@ fn check_aliasability<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n     }\n }\n \n-fn check_yields<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n-                          borrow_span: Span,\n-                          loan_region: ty::Region<'tcx>) {\n-    if let &ty::RegionKind::ReScope(extent) = loan_region {\n-        if extent_has_yield(bccx.tcx, extent) {\n-             span_err!(bccx.tcx.sess,\n-                borrow_span,\n-                E0624,\n-                \"cannot borrow this value across the suspend point of a generator\");\n-        }\n-    }\n-}\n-\n /// Implements the M-* rules in README.md.\n fn check_mutability<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                               borrow_span: Span,\n@@ -343,11 +327,6 @@ impl<'a, 'tcx> GatherLoanCtxt<'a, 'tcx> {\n             return;\n         }\n \n-        // Check that the region has no yields if this is in a generator\n-        if self.generator {\n-            check_yields(self.bccx, borrow_span, loan_region);\n-        }\n-\n         // Check that the lifetime of the borrow does not exceed\n         // the lifetime of the data being borrowed.\n         if lifetime::guarantee_lifetime(self.bccx, self.item_ub,"}, {"sha": "cc9bdf8c8a553098296aafcf7ab4715819d5aaa9", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/10def9a6e0fc9ace09934f71a8eef0b556e9111f/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10def9a6e0fc9ace09934f71a8eef0b556e9111f/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=10def9a6e0fc9ace09934f71a8eef0b556e9111f", "patch": "@@ -1192,5 +1192,4 @@ register_diagnostics! {\n     E0595, // closure cannot assign to {}\n     E0598, // lifetime of {} is too short to guarantee its contents can be...\n     E0623, // borrow of the implicit argument of a generator\n-    E0624, // borrow across a suspend point\n }"}]}