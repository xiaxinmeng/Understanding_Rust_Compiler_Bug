{"sha": "0f434b86201d62e7b96c99e787ee4c8eca4b3a16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNDM0Yjg2MjAxZDYyZTdiOTZjOTllNzg3ZWU0YzhlY2E0YjNhMTY=", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-07-31T04:50:19Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-07-31T04:50:19Z"}, "message": "move to else f", "tree": {"sha": "602ab2df44c99ef60fbf5687b517a0495b8d651c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/602ab2df44c99ef60fbf5687b517a0495b8d651c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f434b86201d62e7b96c99e787ee4c8eca4b3a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f434b86201d62e7b96c99e787ee4c8eca4b3a16", "html_url": "https://github.com/rust-lang/rust/commit/0f434b86201d62e7b96c99e787ee4c8eca4b3a16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f434b86201d62e7b96c99e787ee4c8eca4b3a16/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2baef17bb1bd330e76130f0d6e3c2e7e5673f30f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2baef17bb1bd330e76130f0d6e3c2e7e5673f30f", "html_url": "https://github.com/rust-lang/rust/commit/2baef17bb1bd330e76130f0d6e3c2e7e5673f30f"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "d0fecc6956fab2e238b432778975167a61c00973", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f434b86201d62e7b96c99e787ee4c8eca4b3a16/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f434b86201d62e7b96c99e787ee4c8eca4b3a16/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=0f434b86201d62e7b96c99e787ee4c8eca4b3a16", "patch": "@@ -489,13 +489,12 @@ fn highlight_def(db: &RootDatabase, krate: Option<hir::Crate>, def: Definition)\n             let ty = local.ty(db);\n             if local.is_mut(db) || ty.is_mutable_reference() {\n                 h |= HlMod::Mutable;\n+            } else if local.is_ref(db) || ty.is_reference() {\n+                h |= HlMod::Reference;\n             }\n             if ty.as_callable(db).is_some() || ty.impls_fnonce(db) {\n                 h |= HlMod::Callable;\n             }\n-            if local.is_ref(db) || ty.is_reference() {\n-                h |= HlMod::Reference;\n-            }\n             h\n         }\n         Definition::Label(_) => Highlight::new(HlTag::Symbol(SymbolKind::Label)),"}]}