{"sha": "c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYWU4YTZmOTA4MzBmZTAxYTJiZGQ0M2NiYzVlYTcxNjE4OTNlNjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-03T09:25:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-03T09:25:05Z"}, "message": "adjust for different 'yield' hint on aarch64", "tree": {"sha": "8308706b7069fe0857b0371f8550b2af3cc6ce81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8308706b7069fe0857b0371f8550b2af3cc6ce81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64", "html_url": "https://github.com/rust-lang/rust/commit/c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aac6e2ad3e800153b6552d639e291b2b232881f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/aac6e2ad3e800153b6552d639e291b2b232881f4", "html_url": "https://github.com/rust-lang/rust/commit/aac6e2ad3e800153b6552d639e291b2b232881f4"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "75a7505e73de5b8a10eb325c023f1eedbb248487", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=c3ae8a6f90830fe01a2bdd43cbc5ea7161893e64", "patch": "@@ -512,16 +512,16 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let &[] = check_arg_count(args)?;\n                 this.yield_active_thread();\n             }\n-            \"llvm.aarch64.hint\" if this.tcx.sess.target.arch == \"aarch64\" => {\n+            \"llvm.aarch64.isb\" if this.tcx.sess.target.arch == \"aarch64\" => {\n                 check_abi(abi, Abi::C { unwind: false })?;\n-                let &[ref hint] = check_arg_count(args)?;\n-                let hint = this.read_scalar(hint)?.to_i32()?;\n-                match hint {\n-                    1 => { // HINT_YIELD\n+                let &[ref arg] = check_arg_count(args)?;\n+                let arg = this.read_scalar(arg)?.to_i32()?;\n+                match arg {\n+                    15 => { // SY (\"full system scope\")\n                         this.yield_active_thread();\n                     }\n                     _ => {\n-                        throw_unsup_format!(\"unsupported llvm.aarch64.hint argument {}\", hint);\n+                        throw_unsup_format!(\"unsupported llvm.aarch64.isb argument {}\", arg);\n                     }\n                 }\n             }"}]}