{"sha": "5c973142df3661a23a085bfb655300c08ca19764", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOTczMTQyZGYzNjYxYTIzYTA4NWJmYjY1NTMwMGMwOGNhMTk3NjQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-24T01:30:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-26T23:59:15Z"}, "message": "rt: Turn on cycle collection at task death; add a test case", "tree": {"sha": "109a3daf071a74120b3e0357c6a0291691fe0e47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/109a3daf071a74120b3e0357c6a0291691fe0e47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c973142df3661a23a085bfb655300c08ca19764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c973142df3661a23a085bfb655300c08ca19764", "html_url": "https://github.com/rust-lang/rust/commit/5c973142df3661a23a085bfb655300c08ca19764", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c973142df3661a23a085bfb655300c08ca19764/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad19ab4c6fdf3ea74ac0ff3688d040a852f30760", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad19ab4c6fdf3ea74ac0ff3688d040a852f30760", "html_url": "https://github.com/rust-lang/rust/commit/ad19ab4c6fdf3ea74ac0ff3688d040a852f30760"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "70bb5aab1edc502a92ccd28f837c2421c34341fb", "filename": "src/rt/rust_cc.cpp", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5c973142df3661a23a085bfb655300c08ca19764/src%2Frt%2Frust_cc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5c973142df3661a23a085bfb655300c08ca19764/src%2Frt%2Frust_cc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_cc.cpp?ref=5c973142df3661a23a085bfb655300c08ca19764", "patch": "@@ -17,6 +17,10 @@\n #undef DPRINT\n #define DPRINT(fmt,...)     fprintf(stderr, fmt, ##__VA_ARGS__)\n \n+// The number of allocations Rust code performs before performing cycle\n+// collection.\n+#define RUST_CC_FREQUENCY   5000\n+\n namespace cc {\n \n // Internal reference count computation\n@@ -417,7 +421,7 @@ sweep(rust_task *task, const std::set<void *> &marked) {\n         if (marked.find(alloc) == marked.end()) {\n             const type_desc *tydesc = begin->second;\n \n-            DPRINT(\"object is part of a cycle: %p\\n\", alloc);\n+            //DPRINT(\"object is part of a cycle: %p\\n\", alloc);\n \n             // Run the destructor.\n             // TODO: What if it fails?\n@@ -453,8 +457,18 @@ do_cc(rust_task *task) {\n void\n maybe_cc(rust_task *task) {\n     static debug::flag zeal(\"RUST_CC_ZEAL\");\n-    if (*zeal)\n+    if (*zeal) {\n         do_cc(task);\n+        return;\n+    }\n+\n+    // FIXME: Needs a snapshot.\n+#if 0\n+    if (task->cc_counter++ > RUST_CC_FREQUENCY) {\n+        task->cc_counter = 0;\n+        do_cc(task);\n+    }\n+#endif\n }\n \n }   // end namespace cc"}, {"sha": "97d68e6be391220ec20366a975d5295df5715893", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c973142df3661a23a085bfb655300c08ca19764/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5c973142df3661a23a085bfb655300c08ca19764/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=5c973142df3661a23a085bfb655300c08ca19764", "patch": "@@ -1,5 +1,6 @@\n \n #include \"rust_internal.h\"\n+#include \"rust_cc.h\"\n \n #include \"valgrind.h\"\n #include \"memcheck.h\"\n@@ -75,7 +76,8 @@ rust_task::rust_task(rust_scheduler *sched, rust_task_list *state,\n     failed(false),\n     killed(false),\n     propagate_failure(true),\n-    dynastack(this)\n+    dynastack(this),\n+    cc_counter(0)\n {\n     LOGPTR(sched, \"new task\", (uintptr_t)this);\n     DLOG(sched, task, \"sizeof(task) = %d (0x%x)\", sizeof *this, sizeof *this);"}, {"sha": "fe19e06e6576322a31dc3946d570b5637e9ab135", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c973142df3661a23a085bfb655300c08ca19764/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/5c973142df3661a23a085bfb655300c08ca19764/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=5c973142df3661a23a085bfb655300c08ca19764", "patch": "@@ -125,6 +125,7 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     rust_obstack dynastack;\n \n     std::map<void *,const type_desc *> local_allocs;\n+    uint32_t cc_counter;\n \n     debug::task_debug_info debug;\n "}, {"sha": "8cb2bc7979f325ead11488e0871e502f3a6368b5", "filename": "src/test/run-pass/cycle-collection.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5c973142df3661a23a085bfb655300c08ca19764/src%2Ftest%2Frun-pass%2Fcycle-collection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c973142df3661a23a085bfb655300c08ca19764/src%2Ftest%2Frun-pass%2Fcycle-collection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcycle-collection.rs?ref=5c973142df3661a23a085bfb655300c08ca19764", "patch": "@@ -0,0 +1,14 @@\n+tag taggy {\n+    cons(@mutable taggy);\n+    nil;\n+}\n+\n+fn f() {\n+    let box = @mutable nil;\n+    *box = cons(box);\n+}\n+\n+fn main() {\n+    f();\n+}\n+"}]}