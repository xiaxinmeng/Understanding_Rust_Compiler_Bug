{"sha": "da1e3c9635900eccd42262dd138481137b60c01d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMWUzYzk2MzU5MDBlY2NkNDIyNjJkZDEzODQ4MTEzN2I2MGMwMWQ=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-05-06T20:31:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-06T20:31:38Z"}, "message": "Merge pull request #3540 from rchaser53/issue-3539\n\ncorrect to get wrong BytePos", "tree": {"sha": "5f20185cfdc5390a95e6ed8df44644b14bc83bae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f20185cfdc5390a95e6ed8df44644b14bc83bae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da1e3c9635900eccd42262dd138481137b60c01d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc0JmqCRBK7hj4Ov3rIwAAdHIIAAz4Jxwb8hTkCyakl+kIVk8n\n63fFupltzyu535z8IfqB1egckcKNWsKJJmo/6yjRUapmDTH6CBRiIe3scDcENk+W\nbehT2HhH21h5vYhBHQ621mALig9dIu45H5A0WT3NsFAOPC87plkf+Vroqcf60IWI\nqjsnhXqCmPwew2AshRhjwEHF07RybbG0KTi3vCFetFxnxImYxW89cddL/poJFtkI\nCTruJhuFQdAU1dvHtfGlK49sAbgV+PkS3O1ROERwVvme8ozyKE9Sm+QS0+Lq0BX5\nlfOH/rTJsr1dqNBog+ynMpWVsnz4iuBKPW+WK9oli4S0myfNZ840MwsO//yT3l0=\n=mix3\n-----END PGP SIGNATURE-----\n", "payload": "tree 5f20185cfdc5390a95e6ed8df44644b14bc83bae\nparent 467c53febe85a7f7cf578d00f0ee8376f3e40eb4\nparent 7a93a26aad24ebbdab28906316ccbc6371becd5d\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1557174698 +0200\ncommitter GitHub <noreply@github.com> 1557174698 +0200\n\nMerge pull request #3540 from rchaser53/issue-3539\n\ncorrect to get wrong BytePos"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da1e3c9635900eccd42262dd138481137b60c01d", "html_url": "https://github.com/rust-lang/rust/commit/da1e3c9635900eccd42262dd138481137b60c01d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da1e3c9635900eccd42262dd138481137b60c01d/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "467c53febe85a7f7cf578d00f0ee8376f3e40eb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/467c53febe85a7f7cf578d00f0ee8376f3e40eb4", "html_url": "https://github.com/rust-lang/rust/commit/467c53febe85a7f7cf578d00f0ee8376f3e40eb4"}, {"sha": "7a93a26aad24ebbdab28906316ccbc6371becd5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a93a26aad24ebbdab28906316ccbc6371becd5d", "html_url": "https://github.com/rust-lang/rust/commit/7a93a26aad24ebbdab28906316ccbc6371becd5d"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "55367805ca31a9241458c7be45f5cf43877ae29d", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da1e3c9635900eccd42262dd138481137b60c01d/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da1e3c9635900eccd42262dd138481137b60c01d/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=da1e3c9635900eccd42262dd138481137b60c01d", "patch": "@@ -320,7 +320,7 @@ where\n     let list_lo = context.snippet_provider.span_after(span, \"(\");\n     let (list_str, tactic) = if inputs.len() == 0 {\n         let tactic = get_tactics(&[], &output, shape);\n-        let list_hi = context.snippet_provider.span_before_last(span, \")\");\n+        let list_hi = context.snippet_provider.span_before(span, \")\");\n         let comment = context\n             .snippet_provider\n             .span_to_snippet(mk_sp(list_lo, list_hi))?"}, {"sha": "aa2fa72ece3245a8d0ef6ed0b03b5a20e98131fa", "filename": "tests/target/issue-3539.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/da1e3c9635900eccd42262dd138481137b60c01d/tests%2Ftarget%2Fissue-3539.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da1e3c9635900eccd42262dd138481137b60c01d/tests%2Ftarget%2Fissue-3539.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3539.rs?ref=da1e3c9635900eccd42262dd138481137b60c01d", "patch": "@@ -0,0 +1,8 @@\n+use std::io::Error;\n+\n+fn main() {\n+    let _read_num: fn() -> Result<(i32), Error> = || -> Result<(i32), Error> {\n+        let a = 1;\n+        Ok(a)\n+    };\n+}"}]}