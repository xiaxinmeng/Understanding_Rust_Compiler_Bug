{"sha": "6d2b885112f991149476df7a30359abb91374113", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMmI4ODUxMTJmOTkxMTQ5NDc2ZGY3YTMwMzU5YWJiOTEzNzQxMTM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-03T00:22:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-03T00:22:11Z"}, "message": "Rollup merge of #76242 - RalfJung:read-fixme, r=Dylan-DPC\n\nRead: adjust a FIXME reference\n\nThere's already another reference to https://github.com/rust-lang/rust/issues/42788 for basically the same problem, so lets reuse it here:\nhttps://github.com/rust-lang/rust/blob/5e208efaa850efaa97495e81c49cf0f5767e8f49/library/std/src/io/mod.rs#L369-L376\n\nr? @Dylan-DPC", "tree": {"sha": "f9117a67de967f23faa5191e016d8d26b1a53f0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9117a67de967f23faa5191e016d8d26b1a53f0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d2b885112f991149476df7a30359abb91374113", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfUDc0CRBK7hj4Ov3rIwAAdHIIALC19SrBlIdADo+wf54sw6BJ\noT4BLqOVTSPUdfcTpXvMxeYxdt+yF0BgDrn4e2cuEZzeieFq3NMvZj0RRb90qgaz\nXCCbmaoANG39bA8fjtA3RTgJ+AlO/kE7iv2i75rcomlPloc+megSKgDPPUU7Rww9\nfAwmr9AwoJIB8/ksQsMBEyh+x84aPMaPi0zN8D8W0StJt02/+KDSSRg68+dEY9A7\nJcqPVIHKmDjvz8fF90JfHPtcSY8n6vt+Nl1AW/M4sGKyMdOzODD2CnOzHj7dkq/j\n13p61vnw45ulEA99CJgn4T3hIBKk6LRxZbS81DiHAQ2DVTcowZ2BnLIaCZBOqAA=\n=wc+U\n-----END PGP SIGNATURE-----\n", "payload": "tree f9117a67de967f23faa5191e016d8d26b1a53f0f\nparent 4918ed96eef0f8ffc3768a0d1a7d18372c015f56\nparent 0af3bd01dfae488392dc6f08daa2d0d8d370fb00\nauthor Dylan DPC <dylan.dpc@gmail.com> 1599092531 +0200\ncommitter GitHub <noreply@github.com> 1599092531 +0200\n\nRollup merge of #76242 - RalfJung:read-fixme, r=Dylan-DPC\n\nRead: adjust a FIXME reference\n\nThere's already another reference to https://github.com/rust-lang/rust/issues/42788 for basically the same problem, so lets reuse it here:\nhttps://github.com/rust-lang/rust/blob/5e208efaa850efaa97495e81c49cf0f5767e8f49/library/std/src/io/mod.rs#L369-L376\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d2b885112f991149476df7a30359abb91374113", "html_url": "https://github.com/rust-lang/rust/commit/6d2b885112f991149476df7a30359abb91374113", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d2b885112f991149476df7a30359abb91374113/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4918ed96eef0f8ffc3768a0d1a7d18372c015f56", "url": "https://api.github.com/repos/rust-lang/rust/commits/4918ed96eef0f8ffc3768a0d1a7d18372c015f56", "html_url": "https://github.com/rust-lang/rust/commit/4918ed96eef0f8ffc3768a0d1a7d18372c015f56"}, {"sha": "0af3bd01dfae488392dc6f08daa2d0d8d370fb00", "url": "https://api.github.com/repos/rust-lang/rust/commits/0af3bd01dfae488392dc6f08daa2d0d8d370fb00", "html_url": "https://github.com/rust-lang/rust/commit/0af3bd01dfae488392dc6f08daa2d0d8d370fb00"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "44d2937ee1bf2a1f5bba58c5b60b4fd47563a760", "filename": "library/std/src/io/util.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6d2b885112f991149476df7a30359abb91374113/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d2b885112f991149476df7a30359abb91374113/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil.rs?ref=6d2b885112f991149476df7a30359abb91374113", "patch": "@@ -52,11 +52,14 @@ where\n     W: Write,\n {\n     let mut buf = MaybeUninit::<[u8; super::DEFAULT_BUF_SIZE]>::uninit();\n-    // FIXME(#76092): This is calling `get_mut` and `get_ref` on an uninitialized\n-    // `MaybeUninit`. Revisit this once we decided whether that is valid or not.\n-    // This is still technically undefined behavior due to creating a reference\n-    // to uninitialized data, but within libstd we can rely on more guarantees\n-    // than if this code were in an external lib.\n+    // FIXME: #42788\n+    //\n+    //   - This creates a (mut) reference to a slice of\n+    //     _uninitialized_ integers, which is **undefined behavior**\n+    //\n+    //   - Only the standard library gets to soundly \"ignore\" this,\n+    //     based on its privileged knowledge of unstable rustc\n+    //     internals;\n     unsafe {\n         reader.initializer().initialize(buf.assume_init_mut());\n     }"}]}