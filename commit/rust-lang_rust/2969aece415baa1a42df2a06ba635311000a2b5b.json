{"sha": "2969aece415baa1a42df2a06ba635311000a2b5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NjlhZWNlNDE1YmFhMWE0MmRmMmEwNmJhNjM1MzExMDAwYTJiNWI=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-08-14T20:54:17Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-08-14T21:58:04Z"}, "message": "Fix dead code warning when inline const is used in pattern", "tree": {"sha": "c9abfdda26f378f5bc6345d4086b567cfa3a7052", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9abfdda26f378f5bc6345d4086b567cfa3a7052"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2969aece415baa1a42df2a06ba635311000a2b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2969aece415baa1a42df2a06ba635311000a2b5b", "html_url": "https://github.com/rust-lang/rust/commit/2969aece415baa1a42df2a06ba635311000a2b5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2969aece415baa1a42df2a06ba635311000a2b5b/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a59e8853148c6a26ed583cccd0f1c3fc50444c9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a59e8853148c6a26ed583cccd0f1c3fc50444c9c", "html_url": "https://github.com/rust-lang/rust/commit/a59e8853148c6a26ed583cccd0f1c3fc50444c9c"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "ae65222f3f22fc450d959293fa9a4152799382dc", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2969aece415baa1a42df2a06ba635311000a2b5b/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2969aece415baa1a42df2a06ba635311000a2b5b/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=2969aece415baa1a42df2a06ba635311000a2b5b", "patch": "@@ -15,6 +15,7 @@ use rustc_middle::middle::privacy;\n use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n use rustc_session::lint;\n use rustc_span::symbol::{sym, Symbol};\n+use std::mem;\n \n // Any local node that may call something in its body block should be\n // explored. For example, if it's a live Node::Item that is a\n@@ -395,8 +396,14 @@ impl<'tcx> Visitor<'tcx> for MarkSymbolVisitor<'tcx> {\n     }\n \n     fn visit_anon_const(&mut self, c: &'tcx hir::AnonConst) {\n+        // When inline const blocks are used in pattern position, paths\n+        // referenced by it should be considered as used.\n+        let in_pat = mem::replace(&mut self.in_pat, false);\n+\n         self.live_symbols.insert(self.tcx.hir().local_def_id(c.hir_id));\n         intravisit::walk_anon_const(self, c);\n+\n+        self.in_pat = in_pat;\n     }\n }\n "}]}