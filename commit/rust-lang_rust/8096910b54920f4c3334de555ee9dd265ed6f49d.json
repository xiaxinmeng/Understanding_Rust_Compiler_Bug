{"sha": "8096910b54920f4c3334de555ee9dd265ed6f49d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOTY5MTBiNTQ5MjBmNGMzMzM0ZGU1NTVlZTlkZDI2NWVkNmY0OWQ=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T13:35:40Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-31T05:25:36Z"}, "message": "Report variant size without the discriminant", "tree": {"sha": "862bd381568f3f65c423772bdf32bd1e5fba855c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/862bd381568f3f65c423772bdf32bd1e5fba855c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8096910b54920f4c3334de555ee9dd265ed6f49d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmEtvVIACgkQAn35M4hi\nrd1WMhAAk2wRqiTvBzD8RIwomg4t2pcqagfEtVqbKBNvjuLz5vEx0GROJw3B/3RK\nO1jtPLeecA1eyUZ1a/VFAE04ycf85ujpfJAyU31b61WHH7NSJorn2r09T5sHkNdn\n+kEjIKQM/rYmCZ5G8ZXKUR75iGexhNQclF8DgJx+oONdlGxBtVC4ekUd73Yefz37\nKlv+t38P3ID+53ntnyKOoSzJgvNXR9QO6VuBNtmJEgqzrJqhbkGL74UlvDAO9Wth\nJT3kT3sN73qaMFFprV083ggQr5DiKs7eXA3VZ5gVeNJmeg8Otyvd/OoNHI8OLeKY\nBVq1lhesb8Mto7A5tldccd86NQRJ8faTgMdq3tgxhDUBuVOlm4DSrC4AeQD0cDh1\nExvxO1rH3yL3Co56ynjSTDUwxcSl4zq/n9eITmhM/gDzoEatuFDqpnHfiplRUERP\nQ9lzsRl0jpKUHG+ovxPark40oqKtO9ooXHpT++OE+7ZNcfJ/PXjOaw9HRvJFUwNr\ndwI0ZoXvdhA2OgjboD5m/Wws7ivMFPkG1IRfb/Il2aGGdeVr4/2f7yb0TUeoUi7r\nBtipvjlZqtpagxR3tCfeODgAH1IQqxuK5fCgD5kf6GWXCv6pwJT0Lvah9Bj0VUM3\niCL/Gg0fUrPuupUMy1arw5EmaLXU/9YPtfeAROlu2tKiB8TyKxs=\n=BhuI\n-----END PGP SIGNATURE-----", "payload": "tree 862bd381568f3f65c423772bdf32bd1e5fba855c\nparent c349b79029770e39963fadf5021cfa6a6cfe5472\nauthor Deadbeef <ent3rm4n@gmail.com> 1625924140 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1630387536 +0000\n\nReport variant size without the discriminant\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8096910b54920f4c3334de555ee9dd265ed6f49d", "html_url": "https://github.com/rust-lang/rust/commit/8096910b54920f4c3334de555ee9dd265ed6f49d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8096910b54920f4c3334de555ee9dd265ed6f49d/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c349b79029770e39963fadf5021cfa6a6cfe5472", "url": "https://api.github.com/repos/rust-lang/rust/commits/c349b79029770e39963fadf5021cfa6a6cfe5472", "html_url": "https://github.com/rust-lang/rust/commit/c349b79029770e39963fadf5021cfa6a6cfe5472"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "4e90e611a16ae6c29674f829457506cd5f3be958", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8096910b54920f4c3334de555ee9dd265ed6f49d/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8096910b54920f4c3334de555ee9dd265ed6f49d/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=8096910b54920f4c3334de555ee9dd265ed6f49d", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::ty::layout::LayoutError;\n use rustc_middle::ty::{Adt, TyCtxt};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Symbol};\n-use rustc_target::abi::{Layout, Variants};\n+use rustc_target::abi::{Layout, Primitive, Variants};\n \n use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_strs, notable_traits_decl,\n@@ -1606,11 +1606,11 @@ fn document_non_exhaustive(w: &mut Buffer, item: &clean::Item) {\n }\n \n fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n-    fn write_size_of_layout(w: &mut Buffer, layout: &Layout) {\n+    fn write_size_of_layout(w: &mut Buffer, layout: &Layout, tag_size: u64) {\n         if layout.abi.is_unsized() {\n             write!(w, \"(unsized)\");\n         } else {\n-            let bytes = layout.size.bytes();\n+            let bytes = layout.size.bytes() - tag_size;\n             write!(w, \"{size} byte{pl}\", size = bytes, pl = if bytes == 1 { \"\" } else { \"s\" },);\n         }\n     }\n@@ -1637,9 +1637,9 @@ fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n                  chapter for details on type layout guarantees.</p></div>\"\n             );\n             w.write_str(\"<p><strong>Size:</strong> \");\n-            write_size_of_layout(w, ty_layout.layout);\n+            write_size_of_layout(w, ty_layout.layout, 0);\n             writeln!(w, \"</p>\");\n-            if let Variants::Multiple { variants, .. } = &ty_layout.layout.variants {\n+            if let Variants::Multiple { variants, tag, .. } = &ty_layout.layout.variants {\n                 if !variants.is_empty() {\n                     w.write_str(\n                         \"<p>\\\n@@ -1653,10 +1653,16 @@ fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n                         span_bug!(tcx.def_span(ty_def_id), \"not an adt\")\n                     };\n \n+                    let tag_size = if let Primitive::Int(i, _) = tag.value {\n+                        i.size().bytes()\n+                    } else {\n+                        span_bug!(tcx.def_span(ty_def_id), \"tag is not int\")\n+                    };\n+\n                     for (index, layout) in variants.iter_enumerated() {\n                         let ident = adt.variants[index].ident;\n-                        write!(w, \"<li><code>{name}</code> \", name = ident);\n-                        write_size_of_layout(w, layout);\n+                        write!(w, \"<li><code>{name}</code>: \", name = ident);\n+                        write_size_of_layout(w, layout, tag_size);\n                         writeln!(w, \"</li>\");\n                     }\n                     w.write_str(\"</ul></p>\");"}, {"sha": "bc1b65c46e24ae405b842e221d1954a9f4af054c", "filename": "src/test/rustdoc/type-layout.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8096910b54920f4c3334de555ee9dd265ed6f49d/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8096910b54920f4c3334de555ee9dd265ed6f49d/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout.rs?ref=8096910b54920f4c3334de555ee9dd265ed6f49d", "patch": "@@ -53,7 +53,8 @@ pub struct Unsized([u8]);\n // @!has type_layout/trait.MyTrait.html 'Size: '\n pub trait MyTrait {}\n \n-// @has type_layout/enum.Variants.html '1 byte'\n+// @has type_layout/enum.Variants.html '<code>A</code>: 0 bytes'\n+// @has - '<code>B</code>: 1 byte'\n pub enum Variants {\n     A,\n     B(u8),"}]}