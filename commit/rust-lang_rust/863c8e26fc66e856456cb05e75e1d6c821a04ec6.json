{"sha": "863c8e26fc66e856456cb05e75e1d6c821a04ec6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2M2M4ZTI2ZmM2NmU4NTY0NTZjYjA1ZTc1ZTFkNmM4MjFhMDRlYzY=", "commit": {"author": {"name": "Joshua Holmer", "email": "jholmer@dminc.com", "date": "2018-10-12T17:15:55Z"}, "committer": {"name": "Joshua Holmer", "email": "jholmer@dminc.com", "date": "2018-10-12T17:15:55Z"}, "message": "Revert \"Exclude pattern guards from unnecessary_fold lint\"\n\nThis reverts commit d3c06f7252fdca30b19aa6ff8ecf63c86675676e.", "tree": {"sha": "c1e19eeaaf1df6a66f6861456abb6f5cab9bb4fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1e19eeaaf1df6a66f6861456abb6f5cab9bb4fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/863c8e26fc66e856456cb05e75e1d6c821a04ec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/863c8e26fc66e856456cb05e75e1d6c821a04ec6", "html_url": "https://github.com/rust-lang/rust/commit/863c8e26fc66e856456cb05e75e1d6c821a04ec6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/863c8e26fc66e856456cb05e75e1d6c821a04ec6/comments", "author": null, "committer": null, "parents": [{"sha": "d3c06f7252fdca30b19aa6ff8ecf63c86675676e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c06f7252fdca30b19aa6ff8ecf63c86675676e", "html_url": "https://github.com/rust-lang/rust/commit/d3c06f7252fdca30b19aa6ff8ecf63c86675676e"}], "stats": {"total": 25, "additions": 0, "deletions": 25}, "files": [{"sha": "7c15eb677cc6f74d14b2a7da6e1a357116d02e82", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/863c8e26fc66e856456cb05e75e1d6c821a04ec6/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/863c8e26fc66e856456cb05e75e1d6c821a04ec6/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=863c8e26fc66e856456cb05e75e1d6c821a04ec6", "patch": "@@ -9,7 +9,6 @@\n \n \n use crate::rustc::hir;\n-use crate::rustc::hir::{ExprKind, Guard, Node};\n use crate::rustc::hir::def::Def;\n use crate::rustc::lint::{in_external_macro, LateContext, LateLintPass, Lint, LintArray, LintContext, LintPass};\n use crate::rustc::ty::{self, Ty};\n@@ -1429,23 +1428,6 @@ fn lint_unnecessary_fold(cx: &LateContext<'_, '_>, expr: &hir::Expr, fold_args:\n         return;\n     }\n \n-    // `Iterator::any` cannot be used within a pattern guard\n-    // See https://github.com/rust-lang-nursery/rust-clippy/issues/3069\n-    if_chain! {\n-        if let Some(fold_parent) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(expr.id));\n-        if let Node::Expr(fold_parent) = fold_parent;\n-        if let ExprKind::Match(_, ref arms, _) = fold_parent.node;\n-        if arms.iter().any(|arm| {\n-            if let Some(Guard::If(ref guard)) = arm.guard {\n-                return guard.id == expr.id;\n-            }\n-            false\n-        });\n-        then {\n-            return;\n-        }\n-    }\n-\n     assert!(fold_args.len() == 3,\n         \"Expected fold_args to have three entries - the receiver, the initial value and the closure\");\n "}, {"sha": "e8d84ecea8c69fbd3243eda8093cc84df60a9246", "filename": "tests/ui/unnecessary_fold.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/863c8e26fc66e856456cb05e75e1d6c821a04ec6/tests%2Fui%2Funnecessary_fold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/863c8e26fc66e856456cb05e75e1d6c821a04ec6/tests%2Fui%2Funnecessary_fold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_fold.rs?ref=863c8e26fc66e856456cb05e75e1d6c821a04ec6", "patch": "@@ -45,13 +45,6 @@ fn unnecessary_fold_should_ignore() {\n \n     let _ = [(0..2), (0..3)].iter().fold(0, |a, b| a + b.len());\n     let _ = [(0..2), (0..3)].iter().fold(1, |a, b| a * b.len());\n-\n-    // Because `any` takes the iterator as a mutable reference,\n-    // it cannot be used in a pattern guard, and we must use `fold`.\n-    match 1 {\n-        _ if (0..3).fold(false, |acc, x| acc || x > 2) => {}\n-        _ => {}\n-    }\n }\n \n fn main() {}"}]}