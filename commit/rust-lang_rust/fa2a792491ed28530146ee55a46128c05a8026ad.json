{"sha": "fa2a792491ed28530146ee55a46128c05a8026ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMmE3OTI0OTFlZDI4NTMwMTQ2ZWU1NWE0NjEyOGMwNWE4MDI2YWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-22T01:01:53Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-23T23:59:38Z"}, "message": "add `Span` to `ast::Defaultness::Default`.", "tree": {"sha": "4fc69b8061150c0978f88451eba057003ecffce7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fc69b8061150c0978f88451eba057003ecffce7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa2a792491ed28530146ee55a46128c05a8026ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa2a792491ed28530146ee55a46128c05a8026ad", "html_url": "https://github.com/rust-lang/rust/commit/fa2a792491ed28530146ee55a46128c05a8026ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa2a792491ed28530146ee55a46128c05a8026ad/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d0e58bff88f620c1a4f641a627f046bf4cde4ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d0e58bff88f620c1a4f641a627f046bf4cde4ad", "html_url": "https://github.com/rust-lang/rust/commit/6d0e58bff88f620c1a4f641a627f046bf4cde4ad"}], "stats": {"total": 78, "additions": 48, "deletions": 30}, "files": [{"sha": "3d6926df58d52b9482071250190173afbf7ca378", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -810,13 +810,9 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             }\n             AssocItemKind::Macro(..) => unimplemented!(),\n         };\n-        hir::TraitItemRef {\n-            id: hir::TraitItemId { hir_id: self.lower_node_id(i.id) },\n-            ident: i.ident,\n-            span: i.span,\n-            defaultness: self.lower_defaultness(Defaultness::Default, has_default),\n-            kind,\n-        }\n+        let id = hir::TraitItemId { hir_id: self.lower_node_id(i.id) };\n+        let defaultness = hir::Defaultness::Default { has_value: has_default };\n+        hir::TraitItemRef { id, ident: i.ident, span: i.span, defaultness, kind }\n     }\n \n     /// Construct `ExprKind::Err` for the given `span`.\n@@ -948,7 +944,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n     fn lower_defaultness(&self, d: Defaultness, has_value: bool) -> hir::Defaultness {\n         match d {\n-            Defaultness::Default => hir::Defaultness::Default { has_value: has_value },\n+            Defaultness::Default(_) => hir::Defaultness::Default { has_value },\n             Defaultness::Final => {\n                 assert!(has_value);\n                 hir::Defaultness::Final"}, {"sha": "d385ea1a4a6d7514227307096b371b168977e345", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -400,9 +400,11 @@ impl<'a> AstValidator<'a> {\n     }\n \n     fn check_defaultness(&self, span: Span, defaultness: Defaultness) {\n-        if let Defaultness::Default = defaultness {\n+        if let Defaultness::Default(def_span) = defaultness {\n+            let span = self.session.source_map().def_span(span);\n             self.err_handler()\n                 .struct_span_err(span, \"`default` is only allowed on items in `impl` definitions\")\n+                .span_label(def_span, \"`default` because of this\")\n                 .emit();\n         }\n     }\n@@ -863,10 +865,12 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 if polarity == ImplPolarity::Negative {\n                     self.err_handler().span_err(item.span, \"inherent impls cannot be negative\");\n                 }\n-                if defaultness == Defaultness::Default {\n+                if let Defaultness::Default(def_span) = defaultness {\n+                    let span = self.session.source_map().def_span(item.span);\n                     self.err_handler()\n-                        .struct_span_err(item.span, \"inherent impls cannot be default\")\n-                        .note(\"only trait implementations may be annotated with default\")\n+                        .struct_span_err(span, \"inherent impls cannot be `default`\")\n+                        .span_label(def_span, \"`default` because of this\")\n+                        .note(\"only trait implementations may be annotated with `default`\")\n                         .emit();\n                 }\n                 if let Const::Yes(span) = constness {"}, {"sha": "586539d9b5ee2476de6039ef439d3b919c2c7b10", "filename": "src/librustc_ast_passes/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Ffeature_gate.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -349,7 +349,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     );\n                 }\n \n-                if let ast::Defaultness::Default = defaultness {\n+                if let ast::Defaultness::Default(_) = defaultness {\n                     gate_feature_post!(&self, specialization, i.span, \"specialization is unstable\");\n                 }\n             }\n@@ -543,7 +543,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n     }\n \n     fn visit_assoc_item(&mut self, i: &'a ast::AssocItem, ctxt: AssocCtxt) {\n-        if i.defaultness == ast::Defaultness::Default {\n+        if let ast::Defaultness::Default(_) = i.defaultness {\n             gate_feature_post!(&self, specialization, i.span, \"specialization is unstable\");\n         }\n "}, {"sha": "abe3165df4b9ac1ef4643381f9b7d26807273886", "filename": "src/librustc_ast_pretty/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_pretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_ast_pretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fpprust.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -1389,7 +1389,7 @@ impl<'a> State<'a> {\n     }\n \n     crate fn print_defaultness(&mut self, defaultness: ast::Defaultness) {\n-        if let ast::Defaultness::Default = defaultness {\n+        if let ast::Defaultness::Default(_) = defaultness {\n             self.word_nbsp(\"default\");\n         }\n     }"}, {"sha": "a6e4900bc626dcde430f19fa60564ae8d62e8733", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -547,7 +547,7 @@ impl<'a> Parser<'a> {\n             )\n         {\n             self.bump(); // `default`\n-            Defaultness::Default\n+            Defaultness::Default(self.prev_span)\n         } else {\n             Defaultness::Final\n         }"}, {"sha": "a7a10c0be0d6288fba1ee64c6fdc2ded4dd737c0", "filename": "src/librustc_save_analysis/sig.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_save_analysis%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibrustc_save_analysis%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fsig.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -502,7 +502,7 @@ impl Sig for ast::Item {\n                 items: _,\n             } => {\n                 let mut text = String::new();\n-                if let ast::Defaultness::Default = defaultness {\n+                if let ast::Defaultness::Default(_) = defaultness {\n                     text.push_str(\"default \");\n                 }\n                 if let ast::Unsafe::Yes(_) = unsafety {"}, {"sha": "bcf94d196132fb265c4867dc8d016bf09b80a94d", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -2106,7 +2106,7 @@ pub enum Const {\n /// For details see the [RFC #2532](https://github.com/rust-lang/rfcs/pull/2532).\n #[derive(Copy, Clone, PartialEq, RustcEncodable, RustcDecodable, Debug, HashStable_Generic)]\n pub enum Defaultness {\n-    Default,\n+    Default(Span),\n     Final,\n }\n "}, {"sha": "dfd0053fda2f327cbadbf8fdbdffeb95f29b426d", "filename": "src/test/ui/parser/assoc-static-semantic-fail.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fparser%2Fassoc-static-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fparser%2Fassoc-static-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fassoc-static-semantic-fail.stderr?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -74,13 +74,17 @@ error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/assoc-static-semantic-fail.rs:24:5\n    |\n LL |     default static TC: u8 = 0;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     -------^^^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     `default` because of this\n \n error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/assoc-static-semantic-fail.rs:27:5\n    |\n LL |     pub(crate) default static TD: u8;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^-------^^^^^^^^^^^^^^^\n+   |                |\n+   |                `default` because of this\n \n error[E0449]: unnecessary visibility qualifier\n   --> $DIR/assoc-static-semantic-fail.rs:27:5"}, {"sha": "6bb946d5b647095b518e539efb86c504763d93cb", "filename": "src/test/ui/parser/trait-item-with-defaultness-fail-semantic.stderr", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fparser%2Ftrait-item-with-defaultness-fail-semantic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fparser%2Ftrait-item-with-defaultness-fail-semantic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-item-with-defaultness-fail-semantic.stderr?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -2,37 +2,49 @@ error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/trait-item-with-defaultness-fail-semantic.rs:6:5\n    |\n LL |     default const A: u8;\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     -------^^^^^^^^^^^^^\n+   |     |\n+   |     `default` because of this\n \n error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/trait-item-with-defaultness-fail-semantic.rs:7:5\n    |\n LL |     default const B: u8 = 0;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     -------^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     `default` because of this\n \n error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/trait-item-with-defaultness-fail-semantic.rs:8:5\n    |\n LL |     default type D;\n-   |     ^^^^^^^^^^^^^^^\n+   |     -------^^^^^^^^\n+   |     |\n+   |     `default` because of this\n \n error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/trait-item-with-defaultness-fail-semantic.rs:9:5\n    |\n LL |     default type C: Ord;\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     -------^^^^^^^^^^^^^\n+   |     |\n+   |     `default` because of this\n \n error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/trait-item-with-defaultness-fail-semantic.rs:10:5\n    |\n LL |     default fn f1();\n-   |     ^^^^^^^^^^^^^^^^\n+   |     -------^^^^^^^^^\n+   |     |\n+   |     `default` because of this\n \n error: `default` is only allowed on items in `impl` definitions\n   --> $DIR/trait-item-with-defaultness-fail-semantic.rs:11:5\n    |\n LL |     default fn f2() {}\n-   |     ^^^^^^^^^^^^^^^^^^\n+   |     -------^^^^^^^^\n+   |     |\n+   |     `default` because of this\n \n error: aborting due to 6 previous errors\n "}, {"sha": "26b3f1ec4149118ff12904b40c4feec30dff4af4", "filename": "src/test/ui/specialization/defaultimpl/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fvalidation.rs?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -4,7 +4,7 @@\n struct S;\n struct Z;\n \n-default impl S {} //~ ERROR inherent impls cannot be default\n+default impl S {} //~ ERROR inherent impls cannot be `default`\n \n default unsafe impl Send for S {} //~ ERROR impls of auto traits cannot be default\n default impl !Send for Z {} //~ ERROR impls of auto traits cannot be default"}, {"sha": "03b1ef69ca0725c0016d4f5f13861a44d5586598", "filename": "src/test/ui/specialization/defaultimpl/validation.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fvalidation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa2a792491ed28530146ee55a46128c05a8026ad/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fvalidation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fvalidation.stderr?ref=fa2a792491ed28530146ee55a46128c05a8026ad", "patch": "@@ -1,10 +1,12 @@\n-error: inherent impls cannot be default\n+error: inherent impls cannot be `default`\n   --> $DIR/validation.rs:7:1\n    |\n LL | default impl S {}\n-   | ^^^^^^^^^^^^^^^^^\n+   | -------^^^^^^^\n+   | |\n+   | `default` because of this\n    |\n-   = note: only trait implementations may be annotated with default\n+   = note: only trait implementations may be annotated with `default`\n \n error: impls of auto traits cannot be default\n   --> $DIR/validation.rs:9:1"}]}