{"sha": "947c1badd1f56571c34f9fcb114845f3aadd1d99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0N2MxYmFkZDFmNTY1NzFjMzRmOWZjYjExNDg0NWYzYWFkZDFkOTk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-29T04:04:34Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-29T04:04:34Z"}, "message": "Uncomment other MyOption test.", "tree": {"sha": "7e710224300cd1269de4d8aff405b5d799c87c96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e710224300cd1269de4d8aff405b5d799c87c96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/947c1badd1f56571c34f9fcb114845f3aadd1d99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/947c1badd1f56571c34f9fcb114845f3aadd1d99", "html_url": "https://github.com/rust-lang/rust/commit/947c1badd1f56571c34f9fcb114845f3aadd1d99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/947c1badd1f56571c34f9fcb114845f3aadd1d99/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbf49715c96c01dcd7745160638461f7011d41da", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbf49715c96c01dcd7745160638461f7011d41da", "html_url": "https://github.com/rust-lang/rust/commit/fbf49715c96c01dcd7745160638461f7011d41da"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "a4d0b4eb8b2d60b05990bb2090e517d38891b32c", "filename": "test/basic.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/947c1badd1f56571c34f9fcb114845f3aadd1d99/test%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/947c1badd1f56571c34f9fcb114845f3aadd1d99/test%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fbasic.rs?ref=947c1badd1f56571c34f9fcb114845f3aadd1d99", "patch": "@@ -121,6 +121,15 @@ fn match_my_opt_some() -> i32 {\n     }\n }\n \n+#[miri_run(expected = \"Int(42)\")]\n+fn match_my_opt_none() -> i32 {\n+    let x = MyOption::None;\n+    match x {\n+        MyOption::Some { data } => data,\n+        MyOption::None => 42,\n+    }\n+}\n+\n // #[miri_run(expected = \"Int(13)\")]\n // fn match_opt_some() -> i32 {\n //     let x = Some(13);\n@@ -130,15 +139,6 @@ fn match_my_opt_some() -> i32 {\n //     }\n // }\n \n-// #[miri_run(expected = \"Int(42)\")]\n-// fn match_opt_none() -> i32 {\n-//     let x = MyOption::None;\n-//     match x {\n-//         MyOption::Some { data } => data,\n-//         MyOption::None => 42,\n-//     }\n-// }\n-\n /// Test calling a very simple function from the standard library.\n #[miri_run(expected = \"Int(1)\")]\n fn cross_crate_fn_call() -> i32 {"}]}