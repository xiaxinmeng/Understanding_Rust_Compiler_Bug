{"sha": "182d4b32d506bb061f30069fcb38090c11f08775", "node_id": "C_kwDOAAsO6NoAKDE4MmQ0YjMyZDUwNmJiMDYxZjMwMDY5ZmNiMzgwOTBjMTFmMDg3NzU", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-03-27T22:13:17Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-03-27T22:13:17Z"}, "message": "Update target_has_atomic documentation for stabilization", "tree": {"sha": "132d2881f7aca2e6b241aed5665e18259e4b79f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/132d2881f7aca2e6b241aed5665e18259e4b79f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/182d4b32d506bb061f30069fcb38090c11f08775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/182d4b32d506bb061f30069fcb38090c11f08775", "html_url": "https://github.com/rust-lang/rust/commit/182d4b32d506bb061f30069fcb38090c11f08775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/182d4b32d506bb061f30069fcb38090c11f08775/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab0c2e18dceb7140626a158affb983ae81039bd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab0c2e18dceb7140626a158affb983ae81039bd0", "html_url": "https://github.com/rust-lang/rust/commit/ab0c2e18dceb7140626a158affb983ae81039bd0"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "c11a35ab947a808160bd1051916664ee3c71b239", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/182d4b32d506bb061f30069fcb38090c11f08775/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/182d4b32d506bb061f30069fcb38090c11f08775/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=182d4b32d506bb061f30069fcb38090c11f08775", "patch": "@@ -65,9 +65,10 @@\n //! For reference, the `std` library requires `AtomicBool`s and pointer-sized atomics, although\n //! `core` does not.\n //!\n-//! Currently you'll need to use `#[cfg(target_arch)]` primarily to\n-//! conditionally compile in code with atomics. There is an unstable\n-//! `#[cfg(target_has_atomic)]` as well which may be stabilized in the future.\n+//! The `#[cfg(target_has_atomic)]` attribute can be used to conditionally\n+//! compile based on the target's supported bit widths. It is a key-value\n+//! option set for each supported size, with values \"8\", \"16\", \"32\", \"64\",\n+//! \"128\", and \"ptr\" for pointer-sized atomics.\n //!\n //! [lock-free]: https://en.wikipedia.org/wiki/Non-blocking_algorithm\n //!"}]}