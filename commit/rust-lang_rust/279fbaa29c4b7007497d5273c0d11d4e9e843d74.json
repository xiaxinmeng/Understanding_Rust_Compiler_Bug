{"sha": "279fbaa29c4b7007497d5273c0d11d4e9e843d74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OWZiYWEyOWM0YjcwMDc0OTdkNTI3M2MwZDExZDRlOWU4NDNkNzQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-23T02:14:42Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-05T14:54:49Z"}, "message": "Fix test/run-pass", "tree": {"sha": "c52e0a75eaca33e80b3d3831b0a4bcac995e4fb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c52e0a75eaca33e80b3d3831b0a4bcac995e4fb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/279fbaa29c4b7007497d5273c0d11d4e9e843d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/279fbaa29c4b7007497d5273c0d11d4e9e843d74", "html_url": "https://github.com/rust-lang/rust/commit/279fbaa29c4b7007497d5273c0d11d4e9e843d74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/279fbaa29c4b7007497d5273c0d11d4e9e843d74/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61b9d87c2816d476ce74b15691db157af420f069", "url": "https://api.github.com/repos/rust-lang/rust/commits/61b9d87c2816d476ce74b15691db157af420f069", "html_url": "https://github.com/rust-lang/rust/commit/61b9d87c2816d476ce74b15691db157af420f069"}], "stats": {"total": 121, "additions": 36, "deletions": 85}, "files": [{"sha": "b17464e04190f459bfebe1101c1360e3c714b71b", "filename": "src/test/run-pass/allocator/auxiliary/custom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fallocator%2Fauxiliary%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fallocator%2Fauxiliary%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator%2Fauxiliary%2Fcustom.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,7 +10,7 @@\n \n // no-prefer-dynamic\n \n-#![feature(heap_api, allocator_api)]\n+#![feature(allocator_api)]\n #![crate_type = \"rlib\"]\n \n use std::alloc::{GlobalAlloc, System, Layout};"}, {"sha": "7a45fd28bdbc57713f20b7526f2ff1ed1deaf5ef", "filename": "src/test/run-pass/allocator/xcrate-use2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fallocator%2Fxcrate-use2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fallocator%2Fxcrate-use2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator%2Fxcrate-use2.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -13,7 +13,7 @@\n // aux-build:helper.rs\n // no-prefer-dynamic\n \n-#![feature(heap_api, allocator_api)]\n+#![feature(allocator_api)]\n \n extern crate custom;\n extern crate custom_as_global;"}, {"sha": "669d61fdb192a056ed95f963241f5aa9da3ee140", "filename": "src/test/run-pass/async-await.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fasync-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fasync-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasync-await.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,6 +10,9 @@\n \n // edition:2018\n \n+// FIXME(varkor): `await_macro` isn't visible.\n+#![allow(unknown_features)]\n+\n #![feature(arbitrary_self_types, async_await, await_macro, futures_api, pin)]\n \n use std::boxed::PinBox;"}, {"sha": "56a0437146b9ef542567abadb6e0e33d987a3474", "filename": "src/test/run-pass/c-stack-returning-int64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-wasm32-bare no libc to test with\n \n-#![feature(libc, std_misc)]\n+#![feature(libc)]\n \n extern crate libc;\n "}, {"sha": "03c80e497410ef3e9b88a25196364cd948d2ceb4", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -13,8 +13,6 @@\n // pretty-expanded FIXME #23616\n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n fn child2(_s: String) { }"}, {"sha": "48aa41cf1d1c2997845d5cb0d2c3867a214c2822", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,7 +11,7 @@\n // ignore-emscripten no threads support\n \n #![allow(unknown_features)]\n-#![feature(box_syntax, std_misc)]\n+#![feature(box_syntax)]\n \n use std::thread;\n "}, {"sha": "7c78cbdce0853faa2ad58faac062ba40005613d9", "filename": "src/test/run-pass/comm.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomm.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::{channel, Sender};\n "}, {"sha": "eaec9b1926a20dc51211c17ff44969b11f0fb3b9", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -16,7 +16,7 @@\n // memory, which makes for some *confusing* logs. That's why these are here\n // instead of in std.\n \n-#![feature(libc, std_misc, duration)]\n+#![feature(libc, duration)]\n \n extern crate libc;\n "}, {"sha": "ceeb42663965f1b3e24fa3b625de416569abee0c", "filename": "src/test/run-pass/deriving-hash.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fderiving-hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fderiving-hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-hash.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-#![feature(hash_default)]\n-\n use std::hash::{Hash, SipHasher, Hasher};\n use std::mem::size_of;\n "}, {"sha": "e92f24a27519e8d6bfcb3c4dc5bdd148953c5fd3", "filename": "src/test/run-pass/env-home-dir.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,8 +11,6 @@\n // ignore-cloudabi no environment variables present\n // ignore-emscripten env vars don't work?\n \n-#![feature(path)]\n-\n use std::env::*;\n use std::path::PathBuf;\n "}, {"sha": "a29ea377947c794b43b9c5bb7eb210ea93a4f1ad", "filename": "src/test/run-pass/extern-call-scrub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -14,7 +14,7 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(libc, std_misc)]\n+#![feature(libc)]\n \n extern crate libc;\n use std::thread;"}, {"sha": "fd827efbfdd440a0b2f17ed65ab5566d3ef98e36", "filename": "src/test/run-pass/foreign-fn-linkname.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-wasm32-bare no libc to test ffi with\n \n-#![feature(std_misc, libc)]\n+#![feature(libc)]\n \n extern crate libc;\n use std::ffi::CString;"}, {"sha": "f88ce83e37d63fed595cf6854e221fa60780bd58", "filename": "src/test/run-pass/hashmap-memory.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,7 +11,6 @@\n // ignore-emscripten No support for threads\n \n #![allow(unknown_features)]\n-#![feature(std_misc)]\n \n /**\n    A somewhat reduced test case to expose some Valgrind issues."}, {"sha": "c8f9a0e4cab6d9b7e07c593c163fea185c892ab8", "filename": "src/test/run-pass/init-large-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Finit-large-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Finit-large-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-large-type.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -15,7 +15,7 @@\n // pretty-expanded FIXME #23616\n // ignore-emscripten no threads support\n \n-#![feature(intrinsics, std_misc)]\n+#![feature(intrinsics)]\n \n use std::thread;\n "}, {"sha": "634046e86ee6c45969f41bb73f731bd6678b4a8f", "filename": "src/test/run-pass/issue-13259-windows-tcb-trash.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-13259-windows-tcb-trash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-13259-windows-tcb-trash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13259-windows-tcb-trash.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(libc, std_misc)]\n+#![feature(libc)]\n \n extern crate libc;\n "}, {"sha": "1676281aa2fb5019b2015f30ccdbab97f5b18ec7", "filename": "src/test/run-pass/issue-13304.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13304.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,7 +11,7 @@\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n \n-#![feature(io, process_capture)]\n+#![feature(io)]\n \n use std::env;\n use std::io::prelude::*;"}, {"sha": "bfedc52919c0942f29a1e5ce9c8436b31d283224", "filename": "src/test/run-pass/issue-14456.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-14456.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-14456.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14456.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,7 +11,7 @@\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n \n-#![feature(io, process_capture)]\n+#![feature(io)]\n \n use std::env;\n use std::io::prelude::*;"}, {"sha": "7671b43d493e1b2440c5e9c96d714907df554b74", "filename": "src/test/run-pass/issue-20091.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20091.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,7 +11,7 @@\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n \n-#![feature(std_misc, os)]\n+#![feature(os)]\n \n #[cfg(unix)]\n fn main() {"}, {"sha": "15cb79ac6a86f5dc65200579de8517d4f79eb99b", "filename": "src/test/run-pass/issue-20454.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-20454.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-20454.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20454.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n fn _foo() {"}, {"sha": "83ffdb3bf4424419b80f9aa57e5d0e1fb2babebf", "filename": "src/test/run-pass/issue-22577.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-22577.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-22577.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-22577.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,8 +11,6 @@\n // pretty-expanded FIXME #23616\n // ignore-cloudabi no std::fs\n \n-#![feature(fs, net)]\n-\n use std::{fs, net};\n \n fn assert_both<T: Send + Sync>() {}"}, {"sha": "d59f2956ee4027614e973b5840c143f0edbbdcac", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n //\n \n-#![feature(std_misc)]\n-\n pub type Task = isize;\n \n // tjc: I don't know why"}, {"sha": "f53053f2edcb778ecb729977e897fbd50004880e", "filename": "src/test/run-pass/issue-3609.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-3609.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-3609.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3609.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(unknown_features)]\n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::Sender;\n "}, {"sha": "6b573698a36002738f53face68f4472940900963", "filename": "src/test/run-pass/issue-8827.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-8827.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fissue-8827.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8827.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::{channel, Receiver};\n "}, {"sha": "0da1d18afd8efed4e1d9c7efe4e35a7b6a0f11a1", "filename": "src/test/run-pass/ivec-tag.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-tag.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::{channel, Sender};\n "}, {"sha": "1c5d8a69bf3406a9a7eb7d9f9ddea8376f6fba87", "filename": "src/test/run-pass/kindck-implicit-close-over-mut-var.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fkindck-implicit-close-over-mut-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fkindck-implicit-close-over-mut-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fkindck-implicit-close-over-mut-var.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n fn user(_i: isize) {}"}, {"sha": "b23947cc2b5041c42f4ad4346a0967ca00f9bff7", "filename": "src/test/run-pass/macro-stability.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fmacro-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fmacro-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-stability.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,6 +10,9 @@\n \n // aux-build:unstable-macros.rs\n \n+// FIXME(varkor): `unstable_macros` isn't visible.\n+#![allow(unknown_features)]\n+\n #![feature(unstable_macros)]\n \n #[macro_use] extern crate unstable_macros;"}, {"sha": "548a62f4603de67c320ec0dc488ca0079206c2b2", "filename": "src/test/run-pass/moves-based-on-type-capture-clause.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-capture-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-capture-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-capture-clause.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n pub fn main() {"}, {"sha": "e2de795bdb72b315af722e2bbc6d6373fc6cec0a", "filename": "src/test/run-pass/panic-handler-chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-handler-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-handler-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-handler-chain.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(panic_handler, std_panic)]\n+#![feature(std_panic)]\n \n use std::sync::atomic::{AtomicUsize, Ordering};\n use std::panic;"}, {"sha": "f0c50f842ab3c55fc4596971bf87244f0071f596", "filename": "src/test/run-pass/panic-handler-flail-wildly.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-handler-flail-wildly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-handler-flail-wildly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-handler-flail-wildly.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -7,10 +7,11 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(panic_handler, std_panic)]\n \n // ignore-emscripten no threads support\n \n+#![feature(std_panic)]\n+\n use std::panic;\n use std::thread;\n "}, {"sha": "120483ab336ffbf8ed1ab595c1faca2c55cfc76d", "filename": "src/test/run-pass/panic-handler-set-twice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-handler-set-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-handler-set-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-handler-set-twice.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(panic_handler, std_panic)]\n+#![feature(std_panic)]\n \n // ignore-emscripten no threads support\n "}, {"sha": "cc2cfb6be969bc7ef6b632f15b40dd55a079c170", "filename": "src/test/run-pass/panic-recover-propagate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-recover-propagate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-recover-propagate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-recover-propagate.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(panic_handler)]\n-\n use std::sync::atomic::{AtomicUsize, Ordering, ATOMIC_USIZE_INIT};\n use std::panic;\n use std::thread;"}, {"sha": "e2a1a8881448022e603a277907bb6a0167186eb4", "filename": "src/test/run-pass/panic-runtime/abort-link-to-unwinding-crates.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -14,6 +14,9 @@\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n \n+// FIXME(varkor): remove this\n+// ignore-macos\n+\n extern crate exit_success_if_unwind;\n \n use std::process::Command;"}, {"sha": "bab59dea42240a22f75f0bcdaa34ee3a182a994d", "filename": "src/test/run-pass/panic-runtime/abort.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -13,6 +13,9 @@\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n \n+// FIXME(varkor): remove this\n+// ignore-macos\n+\n use std::process::Command;\n use std::env;\n "}, {"sha": "16020aaf060550dab2789fe48f049ef61971d28e", "filename": "src/test/run-pass/panic-runtime/link-to-abort.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flink-to-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flink-to-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flink-to-abort.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,9 +11,11 @@\n // compile-flags:-C panic=abort\n // no-prefer-dynamic\n \n+// FIXME(varkor): remove this\n+// ignore-macos\n+\n #![feature(panic_abort)]\n \n extern crate panic_abort;\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "61ef386442bb91da051a77faee29950aa3f1d59e", "filename": "src/test/run-pass/realloc-16687.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Frealloc-16687.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Frealloc-16687.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frealloc-16687.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -13,7 +13,7 @@\n // Ideally this would be revised to use no_std, but for now it serves\n // well enough to reproduce (and illustrate) the bug from #16687.\n \n-#![feature(heap_api, allocator_api)]\n+#![feature(allocator_api)]\n \n use std::alloc::{Global, Alloc, Layout, handle_alloc_error};\n use std::ptr::{self, NonNull};"}, {"sha": "59332d6b65e8cd5a177cc92948ba7aad539b39cd", "filename": "src/test/run-pass/send-resource.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-resource.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,8 +11,6 @@\n // pretty-expanded FIXME #23616\n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::channel;\n "}, {"sha": "1ad04493528b4f913413dff08b5e45c85cc11911", "filename": "src/test/run-pass/std-sync-right-kind-impls.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fstd-sync-right-kind-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fstd-sync-right-kind-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstd-sync-right-kind-impls.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,9 +10,6 @@\n \n // pretty-expanded FIXME #23616\n \n-#![feature(static_mutex, static_rwlock, static_condvar)]\n-#![feature(semaphore)]\n-\n use std::sync;\n \n fn assert_both<T: Sync + Send>() {}"}, {"sha": "e9584e12b2e3ec9f818368abd014fdf06699b520", "filename": "src/test/run-pass/sync-send-iterators-in-libcollections.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcollections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcollections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcollections.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![allow(warnings)]\n-#![feature(drain, collections_bound, btree_range, vecmap)]\n+#![feature(drain, collections_bound, btree_range)]\n \n use std::collections::BinaryHeap;\n use std::collections::{BTreeMap, BTreeSet};"}, {"sha": "55269a28666313cd1288f635abbefb1529b5a0c4", "filename": "src/test/run-pass/sync-send-iterators-in-libcore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcore.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -13,7 +13,6 @@\n #![allow(warnings)]\n #![feature(iter_empty)]\n #![feature(iter_once)]\n-#![feature(iter_unfold)]\n #![feature(str_escape)]\n \n use std::iter::{empty, once, repeat};"}, {"sha": "01e6d4cf7dee43a8844243b828c5088111256b51", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::{channel, Sender};\n "}, {"sha": "3295e68ac4e3a3f6925bf4f2ff2c5c38e523cd83", "filename": "src/test/run-pass/task-comm-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n pub fn main() { test00(); }"}, {"sha": "a69bba82ff0cdca1225a982bbdc25ed6b56fe760", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::{channel, Sender};\n "}, {"sha": "c7beeb53850efe1f277a182f480c204068a0432a", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,8 +11,6 @@\n // pretty-expanded FIXME #23616\n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::sync::mpsc::{channel, Sender};\n use std::thread;\n "}, {"sha": "23594cebf3183c66996ddccb9a317ef0a8738b7e", "filename": "src/test/run-pass/task-comm-12.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n pub fn main() { test00(); }"}, {"sha": "b48299703769a5ddd6a5e1b35c1719cce86a6e54", "filename": "src/test/run-pass/task-comm-13.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::sync::mpsc::{channel, Sender};\n use std::thread;\n "}, {"sha": "a03ff8719bba8b86b325a083f9be9eb6ae93b01a", "filename": "src/test/run-pass/task-comm-14.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::sync::mpsc::{channel, Sender};\n use std::thread;\n "}, {"sha": "fc5a891d1d667818405bf854d9cdc2a2d988bb83", "filename": "src/test/run-pass/task-comm-15.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,8 +11,6 @@\n // ignore-emscripten no threads support\n // pretty-expanded FIXME #23616\n \n-#![feature(std_misc)]\n-\n use std::sync::mpsc::{channel, Sender};\n use std::thread;\n "}, {"sha": "ca6f5c164ed37456e18ac25ae3a4e15043215fe8", "filename": "src/test/run-pass/task-comm-17.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,8 +11,6 @@\n // ignore-emscripten no threads support\n // pretty-expanded FIXME #23616\n \n-#![feature(std_misc)]\n-\n // Issue #922\n \n // This test is specifically about spawning temporary closures."}, {"sha": "8d2d3afc78777d82c53bcfbf52a8422c35d09bcc", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(std_misc)]\n-\n // ignore-emscripten no threads support\n \n use std::thread;"}, {"sha": "7ab267ea66c1d81fce71326667cca6ce1f2a7a3d", "filename": "src/test/run-pass/task-comm-7.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,7 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n #![allow(dead_assignment)]\n \n use std::sync::mpsc::{channel, Sender};"}, {"sha": "1f0eebf1f715b061233aea30dc74ae385fcd99f2", "filename": "src/test/run-pass/task-comm-9.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n use std::sync::mpsc::{channel, Sender};\n "}, {"sha": "34ea43ca82799c4f78c1f9201d3e7855f0cfb650", "filename": "src/test/run-pass/task-life-0.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-life-0.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,8 +11,6 @@\n // ignore-emscripten no threads support\n // pretty-expanded FIXME #23616\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n pub fn main() {"}, {"sha": "cd6cb5a4b5279b7cddf9af85bf41f2edee6364af", "filename": "src/test/run-pass/task-spawn-move-and-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-spawn-move-and-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftask-spawn-move-and-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-spawn-move-and-copy.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -11,7 +11,7 @@\n // ignore-emscripten no threads support\n \n #![allow(unknown_features)]\n-#![feature(box_syntax, std_misc)]\n+#![feature(box_syntax)]\n \n use std::thread;\n use std::sync::mpsc::channel;"}, {"sha": "f193598975aaf9c5807d9dc7b6c33357e02824bb", "filename": "src/test/run-pass/threads.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fthreads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fthreads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthreads.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten no threads support\n \n-#![feature(std_misc)]\n-\n use std::thread;\n \n pub fn main() {"}, {"sha": "9623da3309adc5a593b12be5c3d80d1757125666", "filename": "src/test/run-pass/trait-bounds-in-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -13,7 +13,7 @@\n \n // ignore-emscripten no threads support\n #![allow(unknown_features)]\n-#![feature(box_syntax, std_misc)]\n+#![feature(box_syntax)]\n \n use std::sync::Arc;\n use std::sync::mpsc::channel;"}, {"sha": "bbdd65f7e5b2de33c645c62728b23b59c4d70904", "filename": "src/test/run-pass/x86stdcall2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279fbaa29c4b7007497d5273c0d11d4e9e843d74/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs?ref=279fbaa29c4b7007497d5273c0d11d4e9e843d74", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(std_misc)]\n-\n pub type HANDLE = usize;\n pub type DWORD = u32;\n pub type SIZE_T = u32;"}]}