{"sha": "4f405119e8305b26d0ee9e857887d2720b5c5c2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNDA1MTE5ZTgzMDViMjZkMGVlOWU4NTc4ODdkMjcyMGI1YzVjMmE=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-03-22T02:37:51Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-03-22T02:37:51Z"}, "message": "Resolve worsened debug build codegen", "tree": {"sha": "8a9b907fe0a10ab289de2ec64b3b844102d80dc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a9b907fe0a10ab289de2ec64b3b844102d80dc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f405119e8305b26d0ee9e857887d2720b5c5c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f405119e8305b26d0ee9e857887d2720b5c5c2a", "html_url": "https://github.com/rust-lang/rust/commit/4f405119e8305b26d0ee9e857887d2720b5c5c2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f405119e8305b26d0ee9e857887d2720b5c5c2a/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38114ff16e7856f98b2b4be7ab4cd29b38bed59a", "url": "https://api.github.com/repos/rust-lang/rust/commits/38114ff16e7856f98b2b4be7ab4cd29b38bed59a", "html_url": "https://github.com/rust-lang/rust/commit/38114ff16e7856f98b2b4be7ab4cd29b38bed59a"}], "stats": {"total": 73, "additions": 65, "deletions": 8}, "files": [{"sha": "1c6ae0918c7a1396beee6613419a7ca29222c7f5", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4f405119e8305b26d0ee9e857887d2720b5c5c2a/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f405119e8305b26d0ee9e857887d2720b5c5c2a/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=4f405119e8305b26d0ee9e857887d2720b5c5c2a", "patch": "@@ -324,14 +324,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n     ) -> ConstPropagator<'mir, 'tcx> {\n         let def_id = source.def_id();\n         let substs = &InternalSubsts::identity_for_item(tcx, def_id);\n-        let mut param_env = tcx.param_env(def_id);\n-\n-        // If we're evaluating inside a monomorphic function, then use `Reveal::All` because\n-        // we want to see the same instances that codegen will see. This allows us to `resolve()`\n-        // specializations.\n-        if !substs.needs_subst() {\n-            param_env = param_env.with_reveal_all();\n-        }\n+        let param_env = tcx.param_env(def_id).with_reveal_all();\n \n         let span = tcx.def_span(def_id);\n         let mut ecx = InterpCx::new(tcx.at(span), param_env, ConstPropMachine, ());"}, {"sha": "0e9f33b15e2cc1d68f09fcc3321f3df190139521", "filename": "src/test/mir-opt/const_prop/control-flow-simplification.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/4f405119e8305b26d0ee9e857887d2720b5c5c2a/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f405119e8305b26d0ee9e857887d2720b5c5c2a/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification.rs?ref=4f405119e8305b26d0ee9e857887d2720b5c5c2a", "patch": "@@ -0,0 +1,64 @@\n+// compile-flags: -Zmir-opt-level=1\n+\n+trait NeedsDrop:Sized{\n+    const NEEDS:bool=std::mem::needs_drop::<Self>();\n+}\n+\n+impl<This> NeedsDrop for This{}\n+\n+fn hello<T>(){\n+    if <bool>::NEEDS {\n+        panic!()\n+    }\n+}\n+\n+pub fn main() {\n+    hello::<()>();\n+    hello::<Vec<()>>();\n+}\n+\n+// END RUST SOURCE\n+// START rustc.hello.ConstProp.before.mir\n+// let mut _0: ();\n+// let mut _1: bool;\n+// let mut _2: !;\n+// bb0: {\n+//   StorageLive(_1);\n+//   _1 = const <bool as NeedsDrop>::NEEDS;\n+//   switchInt(_1) -> [false: bb1, otherwise: bb2];\n+// }\n+// bb1: {\n+//   _0 = ();\n+//   StorageDead(_1);\n+//   return;\n+// }\n+// bb2: {\n+//   StorageLive(_2);\n+//   const std::rt::begin_panic::<&str>(const \"explicit panic\");\n+// }\n+// END rustc.hello.ConstProp.before.mir\n+// START rustc.hello.ConstProp.after.mir\n+// let mut _0: ();\n+// let mut _1: bool;\n+// let mut _2: !;\n+// bb0: {\n+//   StorageLive(_1);\n+//   _1 = const false;\n+//   switchInt(const false) -> [false: bb1, otherwise: bb2];\n+// }\n+// bb1: {\n+//   _0 = ();\n+//   StorageDead(_1);\n+//   return;\n+// }\n+// bb2: {\n+//   StorageLive(_2);\n+//   const std::rt::begin_panic::<&str>(const \"explicit panic\");\n+// }\n+// END rustc.hello.ConstProp.after.mir\n+// START rustc.hello.PreCodegen.before.mir\n+// let mut _0: ();\n+// bb0: {\n+//   return;\n+// }\n+// END rustc.hello.PreCodegen.before.mir"}]}