{"sha": "52c03d1d619fd25c961bc9de59bcc942b660d5db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYzAzZDFkNjE5ZmQyNWM5NjFiYzlkZTU5YmNjOTQyYjY2MGQ1ZGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-11T13:42:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-11T13:42:52Z"}, "message": "Auto merge of #38984 - alexcrichton:less-debuginfo, r=brson\n\nrustbuild: Don't enable debuginfo in rustc\n\nIn #37280 we enabled line number debugging information in release artifacts,\nprimarily to close out #36452 where debugging information was critical for MSVC\nbuilds of Rust to be useful in production. This commit, however, apparently had\nsome unfortunate side effects.\n\nNamely it was noticed in #37477 that if `RUST_BACKTRACE=1` was set then any\ncompiler error would take a very long time for the compiler to exit. The cause\nof the problem here was somewhat deep:\n\n* For all compiler errors, the compiler will `panic!` with a known value. This\n  tears down the main compiler thread and allows cleaning up all the various\n  resources. By default, however, this panic output is suppressed for \"normal\"\n  compiler errors.\n* When `RUST_BACKTRACE=1` was set this caused every compiler error to generate a\n  backtrace.\n* The libbacktrace library hits a pathological case where it spends a very long\n  time in its custom allocation function, `backtrace_alloc`, because the\n  compiler has so much debugging information. More information about this can be\n  found in #29293 with a summary at the end of #37477.\n\nTo solve this problem this commit simply removes debuginfo from the compiler but\nnot from the standard library. This should allow us to keep #36452 closed while\nalso closing #37477. I've measured the difference to be orders of magnitude\nfaster than it was before, so we should see a much quicker time-to-exit after a\ncompile error when `RUST_BACKTRACE=1` is set.\n\nCloses #37477\nCloses #37571", "tree": {"sha": "fd0296d0cce904193b62a9fbb5a46d0b15b70143", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd0296d0cce904193b62a9fbb5a46d0b15b70143"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c03d1d619fd25c961bc9de59bcc942b660d5db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c03d1d619fd25c961bc9de59bcc942b660d5db", "html_url": "https://github.com/rust-lang/rust/commit/52c03d1d619fd25c961bc9de59bcc942b660d5db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c03d1d619fd25c961bc9de59bcc942b660d5db/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d03d51cc0534ac514732f4e8d845e9743ef6300", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d03d51cc0534ac514732f4e8d845e9743ef6300", "html_url": "https://github.com/rust-lang/rust/commit/0d03d51cc0534ac514732f4e8d845e9743ef6300"}, {"sha": "099e7cb120ad2cf7c85609ec58ef6a1ac7a56b1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/099e7cb120ad2cf7c85609ec58ef6a1ac7a56b1d", "html_url": "https://github.com/rust-lang/rust/commit/099e7cb120ad2cf7c85609ec58ef6a1ac7a56b1d"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "a93a6c5a3a68559505a6ce69515e06767b31f100", "filename": "configure", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/52c03d1d619fd25c961bc9de59bcc942b660d5db/configure", "raw_url": "https://github.com/rust-lang/rust/raw/52c03d1d619fd25c961bc9de59bcc942b660d5db/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=52c03d1d619fd25c961bc9de59bcc942b660d5db", "patch": "@@ -647,6 +647,7 @@ opt_nosave debug-assertions 0 \"build with debugging assertions\"\n opt_nosave llvm-release-debuginfo 0 \"build LLVM with debugger metadata\"\n opt_nosave debuginfo 0 \"build with debugger metadata\"\n opt_nosave debuginfo-lines 0 \"build with line number debugger metadata\"\n+opt_nosave debuginfo-only-std 0 \"build only libstd with debugging information\"\n opt_nosave debug-jemalloc 0 \"build jemalloc with --enable-debug --enable-fill\"\n \n valopt localstatedir \"/var/lib\" \"local state directory\"\n@@ -733,23 +734,26 @@ case \"$CFG_RELEASE_CHANNEL\" in\n     nightly )\n \tmsg \"overriding settings for $CFG_RELEASE_CHANNEL\"\n \tCFG_ENABLE_LLVM_ASSERTIONS=1\n-\n-        # FIXME(#37364) shouldn't have to disable this on windows-gnu\n+        # FIXME(stage0) re-enable this on the next stage0 now that #35566 is\n+        # fixed\n         case \"$CFG_BUILD\" in\n           *-pc-windows-gnu)\n             ;;\n           *)\n-\t    CFG_ENABLE_DEBUGINFO_LINES=1\n+            CFG_ENABLE_DEBUGINFO_LINES=1\n+            CFG_ENABLE_DEBUGINFO_ONLY_STD=1\n             ;;\n         esac\n+\n \t;;\n     beta | stable)\n \tmsg \"overriding settings for $CFG_RELEASE_CHANNEL\"\n         case \"$CFG_BUILD\" in\n           *-pc-windows-gnu)\n             ;;\n           *)\n-\t    CFG_ENABLE_DEBUGINFO_LINES=1\n+            CFG_ENABLE_DEBUGINFO_LINES=1\n+            CFG_ENABLE_DEBUGINFO_ONLY_STD=1\n             ;;\n         esac\n \t;;\n@@ -785,6 +789,7 @@ if [ -n \"$CFG_ENABLE_DEBUG_ASSERTIONS\" ]; then putvar CFG_ENABLE_DEBUG_ASSERTION\n if [ -n \"$CFG_ENABLE_LLVM_RELEASE_DEBUGINFO\" ]; then putvar CFG_ENABLE_LLVM_RELEASE_DEBUGINFO; fi\n if [ -n \"$CFG_ENABLE_DEBUGINFO\" ]; then putvar CFG_ENABLE_DEBUGINFO; fi\n if [ -n \"$CFG_ENABLE_DEBUGINFO_LINES\" ]; then putvar CFG_ENABLE_DEBUGINFO_LINES; fi\n+if [ -n \"$CFG_ENABLE_DEBUGINFO_ONLY_STD\" ]; then putvar CFG_ENABLE_DEBUGINFO_ONLY_STD; fi\n if [ -n \"$CFG_ENABLE_DEBUG_JEMALLOC\" ]; then putvar CFG_ENABLE_DEBUG_JEMALLOC; fi\n \n step_msg \"looking for build programs\""}, {"sha": "d0ffccb03cc0ef8ba6b0423c2218484dfee5a068", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/52c03d1d619fd25c961bc9de59bcc942b660d5db/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c03d1d619fd25c961bc9de59bcc942b660d5db/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=52c03d1d619fd25c961bc9de59bcc942b660d5db", "patch": "@@ -189,6 +189,13 @@ pub fn rustc(build: &Build, target: &str, compiler: &Compiler) {\n          .env(\"CFG_PREFIX\", build.config.prefix.clone().unwrap_or(String::new()))\n          .env(\"CFG_LIBDIR_RELATIVE\", \"lib\");\n \n+    // If we're not building a compiler with debugging information then remove\n+    // these two env vars which would be set otherwise.\n+    if build.config.rust_debuginfo_only_std {\n+        cargo.env_remove(\"RUSTC_DEBUGINFO\");\n+        cargo.env_remove(\"RUSTC_DEBUGINFO_LINES\");\n+    }\n+\n     if let Some(ref ver_date) = build.ver_date {\n         cargo.env(\"CFG_VER_DATE\", ver_date);\n     }"}, {"sha": "dd0887e3b9f5e92eaad257e7cb6f70a6c754a34e", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52c03d1d619fd25c961bc9de59bcc942b660d5db/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c03d1d619fd25c961bc9de59bcc942b660d5db/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=52c03d1d619fd25c961bc9de59bcc942b660d5db", "patch": "@@ -63,6 +63,7 @@ pub struct Config {\n     pub rust_debug_assertions: bool,\n     pub rust_debuginfo: bool,\n     pub rust_debuginfo_lines: bool,\n+    pub rust_debuginfo_only_std: bool,\n     pub rust_rpath: bool,\n     pub rustc_default_linker: Option<String>,\n     pub rustc_default_ar: Option<String>,\n@@ -179,6 +180,7 @@ struct Rust {\n     debug_assertions: Option<bool>,\n     debuginfo: Option<bool>,\n     debuginfo_lines: Option<bool>,\n+    debuginfo_only_std: Option<bool>,\n     debug_jemalloc: Option<bool>,\n     use_jemalloc: Option<bool>,\n     backtrace: Option<bool>,\n@@ -298,6 +300,7 @@ impl Config {\n             set(&mut config.rust_debug_assertions, rust.debug_assertions);\n             set(&mut config.rust_debuginfo, rust.debuginfo);\n             set(&mut config.rust_debuginfo_lines, rust.debuginfo_lines);\n+            set(&mut config.rust_debuginfo_only_std, rust.debuginfo_only_std);\n             set(&mut config.rust_optimize, rust.optimize);\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.rust_debuginfo_tests, rust.debuginfo_tests);\n@@ -390,6 +393,7 @@ impl Config {\n                 (\"DEBUG_ASSERTIONS\", self.rust_debug_assertions),\n                 (\"DEBUGINFO\", self.rust_debuginfo),\n                 (\"DEBUGINFO_LINES\", self.rust_debuginfo_lines),\n+                (\"DEBUGINFO_ONLY_STD\", self.rust_debuginfo_only_std),\n                 (\"JEMALLOC\", self.use_jemalloc),\n                 (\"DEBUG_JEMALLOC\", self.debug_jemalloc),\n                 (\"RPATH\", self.rust_rpath),"}, {"sha": "76ac2808f09e84f7c7a56bceabb875ec9d4e553e", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/52c03d1d619fd25c961bc9de59bcc942b660d5db/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/52c03d1d619fd25c961bc9de59bcc942b660d5db/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=52c03d1d619fd25c961bc9de59bcc942b660d5db", "patch": "@@ -149,6 +149,11 @@\n # Whether or not line number debug information is emitted\n #debuginfo-lines = false\n \n+# Whether or not to only build debuginfo for the standard library if enabled.\n+# If enabled, this will not compile the compiler with debuginfo, just the\n+# standard library.\n+#debuginfo-only-std = false\n+\n # Whether or not jemalloc is built and enabled\n #use-jemalloc = true\n "}]}