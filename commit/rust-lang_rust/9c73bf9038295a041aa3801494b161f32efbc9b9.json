{"sha": "9c73bf9038295a041aa3801494b161f32efbc9b9", "node_id": "C_kwDOAAsO6NoAKDljNzNiZjkwMzgyOTVhMDQxYWEzODAxNDk0YjE2MWYzMmVmYmM5Yjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-27T13:32:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-27T13:32:41Z"}, "message": "Rollup merge of #109580 - compiler-errors:new-solver-fixmes, r=lcnr\n\nRemove some stale FIXMEs in new solver\n\nSome FIXMEs are no longer needed", "tree": {"sha": "66fc1b3d9e9fcc4b228689de046c028f9d62d657", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66fc1b3d9e9fcc4b228689de046c028f9d62d657"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c73bf9038295a041aa3801494b161f32efbc9b9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkIZr5CRBK7hj4Ov3rIwAAQpoIAFoyf+TTSHFugvmJGgoGqhxL\nyAf/wyR7xOmBnKkT4Idw+7S2rjHWmeDO8nSnY494lxTsRmu85MV+RaqJBe46KRoB\nU+4Y1Gj0R2n78guMFQnxpjw5p4GGG/kXj44y77Ymcsxn+XcSIv0T3XRiUlis0yf/\nZ4wGN1pIjtdujjB2Ov2wKUqKWF5x3pyMclku4zW6XS7YcEog8BbbqG9WB6Tt7Eit\nxqTC2a0v607qNOYVK8+iIOzDWRgbPCRKctX3xl0kkijBeee+Vm4xUbFe7EgHw60T\nKB/RbL7u7yPiNja3Ohoa6C3WFBSjnmVh4q2g+H13pcfaCjyl45s+V080aVgKYGo=\n=ur9O\n-----END PGP SIGNATURE-----\n", "payload": "tree 66fc1b3d9e9fcc4b228689de046c028f9d62d657\nparent 3917644b0ea1eb78cd72660f110ca79bb9668ef4\nparent 53ec4bc63182570d16baca886819a046b7e43c52\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679923961 +0200\ncommitter GitHub <noreply@github.com> 1679923961 +0200\n\nRollup merge of #109580 - compiler-errors:new-solver-fixmes, r=lcnr\n\nRemove some stale FIXMEs in new solver\n\nSome FIXMEs are no longer needed\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c73bf9038295a041aa3801494b161f32efbc9b9", "html_url": "https://github.com/rust-lang/rust/commit/9c73bf9038295a041aa3801494b161f32efbc9b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c73bf9038295a041aa3801494b161f32efbc9b9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3917644b0ea1eb78cd72660f110ca79bb9668ef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3917644b0ea1eb78cd72660f110ca79bb9668ef4", "html_url": "https://github.com/rust-lang/rust/commit/3917644b0ea1eb78cd72660f110ca79bb9668ef4"}, {"sha": "53ec4bc63182570d16baca886819a046b7e43c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/53ec4bc63182570d16baca886819a046b7e43c52", "html_url": "https://github.com/rust-lang/rust/commit/53ec4bc63182570d16baca886819a046b7e43c52"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "65e7bcb7f019dc1f9657f071375b20fcd1485034", "filename": "compiler/rustc_trait_selection/src/solve/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c73bf9038295a041aa3801494b161f32efbc9b9/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c73bf9038295a041aa3801494b161f32efbc9b9/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs?ref=9c73bf9038295a041aa3801494b161f32efbc9b9", "patch": "@@ -9,8 +9,6 @@\n //! FIXME(@lcnr): Write that section. If you read this before then ask me\n //! about it on zulip.\n \n-// FIXME: uses of `infcx.at` need to enable deferred projection equality once that's implemented.\n-\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::canonical::{Canonical, CanonicalVarValues};\n use rustc_infer::traits::query::NoSolution;\n@@ -105,8 +103,6 @@ impl<'a, 'tcx> EvalCtxt<'a, 'tcx> {\n         goal: Goal<'tcx, SubtypePredicate<'tcx>>,\n     ) -> QueryResult<'tcx> {\n         if goal.predicate.a.is_ty_var() && goal.predicate.b.is_ty_var() {\n-            // FIXME: Do we want to register a subtype relation between these vars?\n-            // That won't actually reflect in the query response, so it seems moot.\n             self.evaluate_added_goals_and_make_canonical_response(Certainty::AMBIGUOUS)\n         } else {\n             self.sub(goal.param_env, goal.predicate.a, goal.predicate.b)?;"}, {"sha": "9773a3eacd6fa3b1a7c515e250bf3a6c433d1079", "filename": "compiler/rustc_trait_selection/src/solve/search_graph/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c73bf9038295a041aa3801494b161f32efbc9b9/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c73bf9038295a041aa3801494b161f32efbc9b9/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs?ref=9c73bf9038295a041aa3801494b161f32efbc9b9", "patch": "@@ -78,8 +78,6 @@ impl<'tcx> SearchGraph<'tcx> {\n         tcx: TyCtxt<'tcx>,\n         goal: CanonicalGoal<'tcx>,\n     ) -> Result<(), QueryResult<'tcx>> {\n-        // FIXME: start by checking the global cache\n-\n         // Look at the provisional cache to check for cycles.\n         let cache = &mut self.provisional_cache;\n         match cache.lookup_table.entry(goal) {"}]}