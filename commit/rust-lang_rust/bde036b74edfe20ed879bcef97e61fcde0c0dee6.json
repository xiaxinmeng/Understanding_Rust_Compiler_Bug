{"sha": "bde036b74edfe20ed879bcef97e61fcde0c0dee6", "node_id": "C_kwDOAAsO6NoAKGJkZTAzNmI3NGVkZmUyMGVkODc5YmNlZjk3ZTYxZmNkZTBjMGRlZTY", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-05-13T13:05:17Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-05-13T13:05:34Z"}, "message": "Revert \"Fix conversion of float literals in `TtTreeSink`\"\n\nThis reverts commit 43a066c5a87972b5e42ad41bab56861661c49b18.", "tree": {"sha": "57bc8cd29fb19ca293cfb8b25a07e2096556e8a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57bc8cd29fb19ca293cfb8b25a07e2096556e8a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bde036b74edfe20ed879bcef97e61fcde0c0dee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bde036b74edfe20ed879bcef97e61fcde0c0dee6", "html_url": "https://github.com/rust-lang/rust/commit/bde036b74edfe20ed879bcef97e61fcde0c0dee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bde036b74edfe20ed879bcef97e61fcde0c0dee6/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fcdb96789fbe3434fecc5719a3e325ef84f85f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fcdb96789fbe3434fecc5719a3e325ef84f85f3", "html_url": "https://github.com/rust-lang/rust/commit/4fcdb96789fbe3434fecc5719a3e325ef84f85f3"}], "stats": {"total": 54, "additions": 0, "deletions": 54}, "files": [{"sha": "73799574d83eea9f234f3aec7b2390aa869b2603", "filename": "crates/hir-def/src/macro_expansion_tests/mbe/tt_conversion.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bde036b74edfe20ed879bcef97e61fcde0c0dee6/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde036b74edfe20ed879bcef97e61fcde0c0dee6/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs?ref=bde036b74edfe20ed879bcef97e61fcde0c0dee6", "patch": "@@ -183,22 +183,18 @@ fn float_literal_in_tt() {\n macro_rules! constant {\n     ($( $ret:expr; )*) => {};\n }\n-\n macro_rules! float_const_impl {\n     () => ( constant!(0.3; 3.3;); );\n }\n-\n float_const_impl! {}\n \"#,\n         expect![[r#\"\n macro_rules! constant {\n     ($( $ret:expr; )*) => {};\n }\n-\n macro_rules! float_const_impl {\n     () => ( constant!(0.3; 3.3;); );\n }\n-\n constant!(0.3;\n 3.3;\n );"}, {"sha": "83d22af92325eae3b65be0861499d8e9a4d32a1a", "filename": "crates/mbe/src/syntax_bridge.rs", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/bde036b74edfe20ed879bcef97e61fcde0c0dee6/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde036b74edfe20ed879bcef97e61fcde0c0dee6/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs?ref=bde036b74edfe20ed879bcef97e61fcde0c0dee6", "patch": "@@ -740,7 +740,6 @@ struct TtTreeSink<'a> {\n     text_pos: TextSize,\n     inner: SyntaxTreeBuilder,\n     token_map: TokenMap,\n-    remaining_float_lit_text: String,\n }\n \n impl<'a> TtTreeSink<'a> {\n@@ -752,7 +751,6 @@ impl<'a> TtTreeSink<'a> {\n             text_pos: 0.into(),\n             inner: SyntaxTreeBuilder::default(),\n             token_map: TokenMap::default(),\n-            remaining_float_lit_text: String::new(),\n         }\n     }\n \n@@ -779,54 +777,6 @@ impl<'a> TtTreeSink<'a> {\n             n_tokens = 2;\n         }\n \n-        // We need to split a float `tt::Literal` into up to 3 tokens consumed by the parser.\n-        match self.cursor.token_tree() {\n-            Some(tt::buffer::TokenTreeRef::Subtree(sub, _)) if sub.delimiter.is_none() => {\n-                self.cursor = self.cursor.subtree().unwrap()\n-            }\n-            _ => {}\n-        }\n-        let literal = match self.cursor.token_tree() {\n-            Some(tt::buffer::TokenTreeRef::Leaf(tt::Leaf::Literal(lit), _)) => Some(lit),\n-            _ => None,\n-        };\n-        if matches!(\n-            kind,\n-            FLOAT_NUMBER_PART | FLOAT_NUMBER_START_0 | FLOAT_NUMBER_START_1 | FLOAT_NUMBER_START_2\n-        ) {\n-            if self.remaining_float_lit_text.is_empty() {\n-                always!(\n-                    literal.is_some(),\n-                    \"kind={:?}, cursor tt={:?}\",\n-                    kind,\n-                    self.cursor.token_tree()\n-                );\n-                let text = literal.map_or(String::new(), |lit| lit.to_string());\n-                self.cursor = self.cursor.bump();\n-                match text.split_once('.') {\n-                    Some((start, end)) => {\n-                        self.inner.token(kind, start);\n-                        self.remaining_float_lit_text = format!(\".{end}\");\n-                        return;\n-                    }\n-                    None => {\n-                        self.inner.token(kind, &text);\n-                        return;\n-                    }\n-                }\n-            } else {\n-                self.inner.token(kind, &self.remaining_float_lit_text);\n-                self.remaining_float_lit_text.clear();\n-                return;\n-            }\n-        }\n-        if kind == DOT && !self.remaining_float_lit_text.is_empty() {\n-            always!(self.remaining_float_lit_text.chars().next() == Some('.'));\n-            self.inner.token(kind, \".\");\n-            self.remaining_float_lit_text = self.remaining_float_lit_text[1..].to_string();\n-            return;\n-        }\n-\n         let mut last = self.cursor;\n         for _ in 0..n_tokens {\n             let tmp: u8;"}]}