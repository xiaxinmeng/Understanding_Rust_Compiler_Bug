{"sha": "92109b12029b21e27f9f12a2b4faf4abc0627b64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMTA5YjEyMDI5YjIxZTI3ZjlmMTJhMmI0ZmFmNGFiYzA2MjdiNjQ=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-10-03T20:58:01Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-10-29T16:09:20Z"}, "message": "Yet more neatening", "tree": {"sha": "2d47b4ac15532713ac4320efa963da32912675f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d47b4ac15532713ac4320efa963da32912675f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92109b12029b21e27f9f12a2b4faf4abc0627b64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92109b12029b21e27f9f12a2b4faf4abc0627b64", "html_url": "https://github.com/rust-lang/rust/commit/92109b12029b21e27f9f12a2b4faf4abc0627b64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92109b12029b21e27f9f12a2b4faf4abc0627b64/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "727731f89ed5c341237705026f50f5f6a566336d", "url": "https://api.github.com/repos/rust-lang/rust/commits/727731f89ed5c341237705026f50f5f6a566336d", "html_url": "https://github.com/rust-lang/rust/commit/727731f89ed5c341237705026f50f5f6a566336d"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "c3bda97e9107a2d7e048cf3322ca04c309e97dd9", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/92109b12029b21e27f9f12a2b4faf4abc0627b64/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92109b12029b21e27f9f12a2b4faf4abc0627b64/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=92109b12029b21e27f9f12a2b4faf4abc0627b64", "patch": "@@ -326,14 +326,12 @@ fn range_to_inttype(cx: &mut CrateContext, hint: Hint, bounds: &IntBounds) -> In\n             attempts = choose_shortest;\n         }\n     }\n-    let mut best = attr::UnsignedInt(ast::ty_u64);\n     for &ity in attempts.iter() {\n         if bounds_usable(cx, ity, bounds) {\n-            best = ity;\n-            break;\n+            return ity;\n         }\n     }\n-    return best;\n+    return attr::UnsignedInt(ast::ty_u64);\n }\n \n pub fn ll_inttype(cx: &mut CrateContext, ity: IntType) -> Type {"}]}