{"sha": "f1a4c10fb444f7af5fbbfcd3055cef68a1578d72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxYTRjMTBmYjQ0NGY3YWY1ZmJiZmNkMzA1NWNlZjY4YTE1NzhkNzI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-27T06:16:49Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-27T08:23:29Z"}, "message": "Rollup merge of #50246 - nnethercote:no-dump_allocs, r=Mark-Simulacrum\n\nMake dump_{alloc,allocs,local}() no-ops when tracing is disabled.\n\nBecause they traverse data structures and build up strings, which is\nwasted effort if those strings aren't printed.\n\nThe patch also removes some now-unnecessary log_enabled! tests at call\nsites.\n\nThis is a big win for the Debug and Opt runs of coercions, tuple-stress, html5ever, and encoding.\n```\ncoercions-opt\n        avg: -7.8%      min: -14.8%     max: 0.1%\ncoercions\n        avg: -8.0%      min: -12.8%     max: 0.1%\ntuple-stress\n        avg: -7.2%      min: -10.8%     max: -0.7%\ntuple-stress-opt\n        avg: -6.9%      min: -10.7%     max: 0.6%\nhtml5ever\n        avg: -4.6%      min: -7.3%      max: -0.3%\nencoding\n        avg: -2.4%      min: -4.5%      max: 0.1%\nhtml5ever-opt\n        avg: -2.7%      min: -4.2%      max: -0.2%\nencoding-opt\n        avg: -1.4%      min: -2.4%      max: 0.0%\n```", "tree": {"sha": "68c13998527cba6aec92d46a8384ff1d9223a6cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68c13998527cba6aec92d46a8384ff1d9223a6cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlri3gIACgkQ/vbIBR0O\nATzvohAAg41gnWojueqGJafjh8DlheaK53DkMq/I/XBiwzW1BnDhkhp3nHn572Mj\nXpQWIwwujjLQDH3xryRKIgwsXAqJTwaBPx9nD7zbVPTKn5wSZ/IuvbGxJZ6kdDjV\ntIt7k97mZaZ9/UgOLilZ7yMv+WlCwMskBRhzCIhLw0SWhMhnHjkKKNmY96GJhcWA\nj8czSt1/UWSt3Bl/ol1WDThk3byMoAnWFS/FMAmG/IG7qrrouyUHpDY+RrtZV4rB\nquz1QFF+wzwPMq9pLri5qRQ5rD7xdahXtQSGDEj+P1Ey6tHYTWRD+TRoHp6SmRbx\nQqrhByeaJgjMPD4txjp65hUni6yNHkwE3t50vlCmgbz9wuZKfP24r30FApKPHg7i\nwVJmQ+Y01itQ4nJvu9ODnCedndvBThOmSW0DhUkQOzJ8C2nc05jZllu5G2eJa8xS\nmtt0Vh7UHjnp3E3ojhcBANBVO1/17zEHBGO/MwgRInr9oHUXVpIj3k7ELMbhVSYR\ndAyw6RkFVp6wGSIXUKNZ+NhI/a3OpLfMx0rzUgITiH0jkeAsVQdMPNkawncmNvte\nlKtHuzqO6gMKsKb7pAgqV4T/Js8rd2LQgAdvHR+QNAoifpzWbnyMwV7oibqXmaSI\nWGKDx1DiZk7mkJex311+plMdrjvF+lPasiHLmlA5UukBGx9MjDQ=\n=Ecm2\n-----END PGP SIGNATURE-----", "payload": "tree 68c13998527cba6aec92d46a8384ff1d9223a6cb\nparent e9b67d221fd2392f1de4b7f874744535f3a43135\nparent 2e4f66a86f7baa5644d18bb2adc07a8cd1c7409d\nauthor kennytm <kennytm@gmail.com> 1524809809 +0800\ncommitter kennytm <kennytm@gmail.com> 1524817409 +0800\n\nRollup merge of #50246 - nnethercote:no-dump_allocs, r=Mark-Simulacrum\n\nMake dump_{alloc,allocs,local}() no-ops when tracing is disabled.\n\nBecause they traverse data structures and build up strings, which is\nwasted effort if those strings aren't printed.\n\nThe patch also removes some now-unnecessary log_enabled! tests at call\nsites.\n\nThis is a big win for the Debug and Opt runs of coercions, tuple-stress, html5ever, and encoding.\n```\ncoercions-opt\n        avg: -7.8%      min: -14.8%     max: 0.1%\ncoercions\n        avg: -8.0%      min: -12.8%     max: 0.1%\ntuple-stress\n        avg: -7.2%      min: -10.8%     max: -0.7%\ntuple-stress-opt\n        avg: -6.9%      min: -10.7%     max: 0.6%\nhtml5ever\n        avg: -4.6%      min: -7.3%      max: -0.3%\nencoding\n        avg: -2.4%      min: -4.5%      max: 0.1%\nhtml5ever-opt\n        avg: -2.7%      min: -4.2%      max: -0.2%\nencoding-opt\n        avg: -1.4%      min: -2.4%      max: 0.0%\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72", "html_url": "https://github.com/rust-lang/rust/commit/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9b67d221fd2392f1de4b7f874744535f3a43135", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9b67d221fd2392f1de4b7f874744535f3a43135", "html_url": "https://github.com/rust-lang/rust/commit/e9b67d221fd2392f1de4b7f874744535f3a43135"}, {"sha": "2e4f66a86f7baa5644d18bb2adc07a8cd1c7409d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e4f66a86f7baa5644d18bb2adc07a8cd1c7409d", "html_url": "https://github.com/rust-lang/rust/commit/2e4f66a86f7baa5644d18bb2adc07a8cd1c7409d"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "f6e9994b5da3f9f885bb59f9852ecb47087a810b", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=f1a4c10fb444f7af5fbbfcd3055cef68a1578d72", "patch": "@@ -768,9 +768,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n             }\n         }\n \n-        if log_enabled!(::log::Level::Trace) {\n-            self.dump_local(dest);\n-        }\n+        self.dump_local(dest);\n \n         Ok(())\n     }\n@@ -1572,6 +1570,9 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n \n     pub fn dump_local(&self, place: Place) {\n         // Debug output\n+        if !log_enabled!(::log::Level::Trace) {\n+            return;\n+        }\n         match place {\n             Place::Local { frame, local } => {\n                 let mut allocs = Vec::new();"}, {"sha": "7f8205b8327face1250c757888a8dbfaaf8039d7", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=f1a4c10fb444f7af5fbbfcd3055cef68a1578d72", "patch": "@@ -334,11 +334,17 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n \n     /// For debugging, print an allocation and all allocations it points to, recursively.\n     pub fn dump_alloc(&self, id: AllocId) {\n+        if !log_enabled!(::log::Level::Trace) {\n+            return;\n+        }\n         self.dump_allocs(vec![id]);\n     }\n \n     /// For debugging, print a list of allocations and all allocations they point to, recursively.\n     pub fn dump_allocs(&self, mut allocs: Vec<AllocId>) {\n+        if !log_enabled!(::log::Level::Trace) {\n+            return;\n+        }\n         use std::fmt::Write;\n         allocs.sort();\n         allocs.dedup();"}, {"sha": "d03204bfab16d6cb384fc2eea11c42ad220b208a", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1a4c10fb444f7af5fbbfcd3055cef68a1578d72/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=f1a4c10fb444f7af5fbbfcd3055cef68a1578d72", "patch": "@@ -219,9 +219,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n             }\n         };\n \n-        if log_enabled!(::log::Level::Trace) {\n-            self.dump_local(place);\n-        }\n+        self.dump_local(place);\n \n         Ok(place)\n     }"}]}