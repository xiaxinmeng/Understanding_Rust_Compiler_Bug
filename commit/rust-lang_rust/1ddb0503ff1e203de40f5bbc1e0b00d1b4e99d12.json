{"sha": "1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZGIwNTAzZmYxZTIwM2RlNDBmNWJiYzFlMGIwMGQxYjRlOTlkMTI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-10T10:23:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-10T10:23:04Z"}, "message": "div/rem overflow tests: also test i128", "tree": {"sha": "4a2b16c009b50905ce937fb6fa033ea05b4a4c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a2b16c009b50905ce937fb6fa033ea05b4a4c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "html_url": "https://github.com/rust-lang/rust/commit/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b434d7ef8ae19c145dd9348b70bb955147dfab70", "url": "https://api.github.com/repos/rust-lang/rust/commits/b434d7ef8ae19c145dd9348b70bb955147dfab70", "html_url": "https://github.com/rust-lang/rust/commit/b434d7ef8ae19c145dd9348b70bb955147dfab70"}], "stats": {"total": 156, "additions": 117, "deletions": 39}, "files": [{"sha": "5866cef2d2c70ceff2143217583a3a3232a08773", "filename": "src/test/ui/issues/issue-8460-const.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs?ref=1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "patch": "@@ -3,7 +3,7 @@\n \n #![deny(const_err)]\n \n-use std::{isize, i8, i16, i32, i64};\n+use std::{isize, i8, i16, i32, i64, i128};\n use std::thread;\n \n fn main() {\n@@ -22,6 +22,9 @@ fn main() {\n     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n     //~^ ERROR attempt to divide with overflow\n     //~| ERROR this expression will panic at runtime\n+    assert!(thread::spawn(move|| { i128::MIN / -1; }).join().is_err());\n+    //~^ ERROR attempt to divide with overflow\n+    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n     //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n@@ -32,6 +35,8 @@ fn main() {\n     //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n     //~^ ERROR attempt to divide by zero\n+    assert!(thread::spawn(move|| { 1i128 / 0; }).join().is_err());\n+    //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n     //~| ERROR this expression will panic at runtime\n@@ -47,6 +52,9 @@ fn main() {\n     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n     //~| ERROR this expression will panic at runtime\n+    assert!(thread::spawn(move|| { i128::MIN % -1; }).join().is_err());\n+    //~^ ERROR attempt to calculate the remainder with overflow\n+    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n@@ -57,4 +65,6 @@ fn main() {\n     //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with a divisor of zero\n+    assert!(thread::spawn(move|| { 1i128 % 0; }).join().is_err());\n+    //~^ ERROR attempt to calculate the remainder with a divisor of zero\n }"}, {"sha": "d7373948cb9e0519b03ba75aee12fcf156ecc2ff", "filename": "src/test/ui/issues/issue-8460-const.stderr", "status": "modified", "additions": 57, "deletions": 21, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr?ref=1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "patch": "@@ -64,125 +64,161 @@ error: this expression will panic at runtime\n LL |     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n \n-error: attempt to divide by zero\n+error: attempt to divide with overflow\n+  --> $DIR/issue-8460-const.rs:25:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i128::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^\n+\n+error: this expression will panic at runtime\n   --> $DIR/issue-8460-const.rs:25:36\n    |\n+LL |     assert!(thread::spawn(move|| { i128::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^ attempt to divide with overflow\n+\n+error: attempt to divide by zero\n+  --> $DIR/issue-8460-const.rs:28:36\n+   |\n LL |     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n    |                                    ^^^^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:27:36\n+  --> $DIR/issue-8460-const.rs:30:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n    |                                    ^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:29:36\n+  --> $DIR/issue-8460-const.rs:32:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:31:36\n+  --> $DIR/issue-8460-const.rs:34:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:33:36\n+  --> $DIR/issue-8460-const.rs:36:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n+error: attempt to divide by zero\n+  --> $DIR/issue-8460-const.rs:38:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i128 / 0; }).join().is_err());\n+   |                                    ^^^^^^^^^\n+\n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:35:36\n+  --> $DIR/issue-8460-const.rs:40:36\n    |\n LL |     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:35:36\n+  --> $DIR/issue-8460-const.rs:40:36\n    |\n LL |     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:38:36\n+  --> $DIR/issue-8460-const.rs:43:36\n    |\n LL |     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:38:36\n+  --> $DIR/issue-8460-const.rs:43:36\n    |\n LL |     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:41:36\n+  --> $DIR/issue-8460-const.rs:46:36\n    |\n LL |     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:41:36\n+  --> $DIR/issue-8460-const.rs:46:36\n    |\n LL |     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:44:36\n+  --> $DIR/issue-8460-const.rs:49:36\n    |\n LL |     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:44:36\n+  --> $DIR/issue-8460-const.rs:49:36\n    |\n LL |     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:47:36\n+  --> $DIR/issue-8460-const.rs:52:36\n    |\n LL |     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:47:36\n+  --> $DIR/issue-8460-const.rs:52:36\n    |\n LL |     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n \n+error: attempt to calculate the remainder with overflow\n+  --> $DIR/issue-8460-const.rs:55:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i128::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^\n+\n+error: this expression will panic at runtime\n+  --> $DIR/issue-8460-const.rs:55:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i128::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n+\n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:50:36\n+  --> $DIR/issue-8460-const.rs:58:36\n    |\n LL |     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n    |                                    ^^^^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:52:36\n+  --> $DIR/issue-8460-const.rs:60:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n    |                                    ^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:54:36\n+  --> $DIR/issue-8460-const.rs:62:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:56:36\n+  --> $DIR/issue-8460-const.rs:64:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:58:36\n+  --> $DIR/issue-8460-const.rs:66:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n-error: aborting due to 30 previous errors\n+error: attempt to calculate the remainder with a divisor of zero\n+  --> $DIR/issue-8460-const.rs:68:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i128 % 0; }).join().is_err());\n+   |                                    ^^^^^^^^^\n+\n+error: aborting due to 36 previous errors\n "}, {"sha": "afea859bb65a905ea32ed8f151d90c4833fdc4b7", "filename": "src/test/ui/issues/issue-8460-const2.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.rs?ref=1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "patch": "@@ -3,7 +3,7 @@\n \n #![deny(const_err)]\n \n-use std::{isize, i8, i16, i32, i64};\n+use std::{isize, i8, i16, i32, i64, i128};\n use std::thread;\n \n fn main() {\n@@ -17,6 +17,8 @@ fn main() {\n     //~^ ERROR attempt to divide with overflow\n     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n     //~^ ERROR attempt to divide with overflow\n+    assert!(thread::spawn(move|| { i128::MIN / -1; }).join().is_err());\n+    //~^ ERROR attempt to divide with overflow\n     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n     //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n@@ -27,6 +29,8 @@ fn main() {\n     //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n     //~^ ERROR attempt to divide by zero\n+    assert!(thread::spawn(move|| { 1i128 / 0; }).join().is_err());\n+    //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n@@ -37,6 +41,8 @@ fn main() {\n     //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n+    assert!(thread::spawn(move|| { i128::MIN % -1; }).join().is_err());\n+    //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n@@ -47,4 +53,6 @@ fn main() {\n     //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with a divisor of zero\n+    assert!(thread::spawn(move|| { 1i128 % 0; }).join().is_err());\n+    //~^ ERROR attempt to calculate the remainder with a divisor of zero\n }"}, {"sha": "e25d560fe0ce34e03b2cb53b030343fcb7e9b48c", "filename": "src/test/ui/issues/issue-8460-const2.stderr", "status": "modified", "additions": 40, "deletions": 16, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.stderr?ref=1ddb0503ff1e203de40f5bbc1e0b00d1b4e99d12", "patch": "@@ -34,95 +34,119 @@ error: attempt to divide with overflow\n LL |     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n-error: attempt to divide by zero\n+error: attempt to divide with overflow\n   --> $DIR/issue-8460-const2.rs:20:36\n    |\n+LL |     assert!(thread::spawn(move|| { i128::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^\n+\n+error: attempt to divide by zero\n+  --> $DIR/issue-8460-const2.rs:22:36\n+   |\n LL |     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n    |                                    ^^^^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const2.rs:22:36\n+  --> $DIR/issue-8460-const2.rs:24:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n    |                                    ^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const2.rs:24:36\n+  --> $DIR/issue-8460-const2.rs:26:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const2.rs:26:36\n+  --> $DIR/issue-8460-const2.rs:28:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const2.rs:28:36\n+  --> $DIR/issue-8460-const2.rs:30:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n+error: attempt to divide by zero\n+  --> $DIR/issue-8460-const2.rs:32:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i128 / 0; }).join().is_err());\n+   |                                    ^^^^^^^^^\n+\n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const2.rs:30:36\n+  --> $DIR/issue-8460-const2.rs:34:36\n    |\n LL |     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^^^\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const2.rs:32:36\n+  --> $DIR/issue-8460-const2.rs:36:36\n    |\n LL |     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const2.rs:34:36\n+  --> $DIR/issue-8460-const2.rs:38:36\n    |\n LL |     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const2.rs:36:36\n+  --> $DIR/issue-8460-const2.rs:40:36\n    |\n LL |     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const2.rs:38:36\n+  --> $DIR/issue-8460-const2.rs:42:36\n    |\n LL |     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n+error: attempt to calculate the remainder with overflow\n+  --> $DIR/issue-8460-const2.rs:44:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i128::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^\n+\n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const2.rs:40:36\n+  --> $DIR/issue-8460-const2.rs:46:36\n    |\n LL |     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n    |                                    ^^^^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const2.rs:42:36\n+  --> $DIR/issue-8460-const2.rs:48:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n    |                                    ^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const2.rs:44:36\n+  --> $DIR/issue-8460-const2.rs:50:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const2.rs:46:36\n+  --> $DIR/issue-8460-const2.rs:52:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const2.rs:48:36\n+  --> $DIR/issue-8460-const2.rs:54:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n-error: aborting due to 20 previous errors\n+error: attempt to calculate the remainder with a divisor of zero\n+  --> $DIR/issue-8460-const2.rs:56:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i128 % 0; }).join().is_err());\n+   |                                    ^^^^^^^^^\n+\n+error: aborting due to 24 previous errors\n "}]}