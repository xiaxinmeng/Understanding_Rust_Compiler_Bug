{"sha": "2e6a91812c64a507e3d2ab727824ff9cda8449fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNmE5MTgxMmM2NGE1MDdlM2QyYWI3Mjc4MjRmZjljZGE4NDQ5ZmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2016-09-16T01:17:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2016-09-19T18:17:12Z"}, "message": "librustc: Add a new nop statement to the MIR.\n\nThis is useful when passes want to remove statements without affecting\n`Location`s.", "tree": {"sha": "c3c1f8fd9d8b7e981d5412e2d4105184d3aec319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3c1f8fd9d8b7e981d5412e2d4105184d3aec319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e6a91812c64a507e3d2ab727824ff9cda8449fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e6a91812c64a507e3d2ab727824ff9cda8449fc", "html_url": "https://github.com/rust-lang/rust/commit/2e6a91812c64a507e3d2ab727824ff9cda8449fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e6a91812c64a507e3d2ab727824ff9cda8449fc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f6f8384484382aeec5e1f647e18d37992966425", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6f8384484382aeec5e1f647e18d37992966425", "html_url": "https://github.com/rust-lang/rust/commit/5f6f8384484382aeec5e1f647e18d37992966425"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "3ab8ed5bce292a6567794b70c6853dca3b59b613", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -187,6 +187,14 @@ impl<'tcx> Mir<'tcx> {\n         self.var_decls.len() +\n         self.temp_decls.len() + 1\n     }\n+\n+    /// Changes a statement to a nop. This is both faster than deleting instructions and avoids\n+    /// invalidating statement indices in `Location`s.\n+    pub fn make_statement_nop(&mut self, location: Location) {\n+        let block = &mut self[location.block];\n+        debug_assert!(location.statement_index < block.statements.len());\n+        block.statements[location.statement_index].make_nop()\n+    }\n }\n \n impl<'tcx> Index<BasicBlock> for Mir<'tcx> {\n@@ -686,6 +694,14 @@ pub struct Statement<'tcx> {\n     pub kind: StatementKind<'tcx>,\n }\n \n+impl<'tcx> Statement<'tcx> {\n+    /// Changes a statement to a nop. This is both faster than deleting instructions and avoids\n+    /// invalidating statement indices in `Location`s.\n+    pub fn make_nop(&mut self) {\n+        self.kind = StatementKind::Nop\n+    }\n+}\n+\n #[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub enum StatementKind<'tcx> {\n     /// Write the RHS Rvalue to the LHS Lvalue.\n@@ -699,6 +715,9 @@ pub enum StatementKind<'tcx> {\n \n     /// End the current live range for the storage of the local.\n     StorageDead(Lvalue<'tcx>),\n+\n+    /// No-op. Useful for deleting instructions without affecting statement indices.\n+    Nop,\n }\n \n impl<'tcx> Debug for Statement<'tcx> {\n@@ -711,6 +730,7 @@ impl<'tcx> Debug for Statement<'tcx> {\n             SetDiscriminant{lvalue: ref lv, variant_index: index} => {\n                 write!(fmt, \"discriminant({:?}) = {:?}\", lv, index)\n             }\n+            Nop => write!(fmt, \"nop\"),\n         }\n     }\n }"}, {"sha": "072faf795220a6cf80fafed6d49b104571027ec6", "filename": "src/librustc/mir/visit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -346,6 +346,7 @@ macro_rules! make_mir_visitor {\n                     StatementKind::StorageDead(ref $($mutability)* lvalue) => {\n                         self.visit_lvalue(lvalue, LvalueContext::StorageDead, location);\n                     }\n+                    StatementKind::Nop => {}\n                 }\n             }\n "}, {"sha": "55dda8eda3a4a552e52c9dd33da78d36cdbaadf8", "filename": "src/librustc_borrowck/borrowck/mir/dataflow/impls.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fimpls.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -455,7 +455,8 @@ impl<'a, 'tcx> BitDenotation for MovingOutStatements<'a, 'tcx> {\n                                      });\n             }\n             repr::StatementKind::StorageLive(_) |\n-            repr::StatementKind::StorageDead(_) => {}\n+            repr::StatementKind::StorageDead(_) |\n+            repr::StatementKind::Nop => {}\n         }\n     }\n "}, {"sha": "aeb91f06a9aa455947d200861ac94c294adbbee4", "filename": "src/librustc_borrowck/borrowck/mir/dataflow/sanity_check.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fsanity_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fsanity_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fsanity_check.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -105,7 +105,8 @@ fn each_block<'a, 'tcx, O>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                 (lvalue, rvalue)\n             }\n             repr::StatementKind::StorageLive(_) |\n-            repr::StatementKind::StorageDead(_) => continue,\n+            repr::StatementKind::StorageDead(_) |\n+            repr::StatementKind::Nop => continue,\n             repr::StatementKind::SetDiscriminant{ .. } =>\n                 span_bug!(stmt.source_info.span,\n                           \"sanity_check should run before Deaggregator inserts SetDiscriminant\"),"}, {"sha": "f26afdc2b857280ae51891af7712098027323db4", "filename": "src/librustc_borrowck/borrowck/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -389,7 +389,8 @@ fn drop_flag_effects_for_location<'a, 'tcx, F>(\n                                        |moi| callback(moi, DropFlagState::Present))\n             }\n             repr::StatementKind::StorageLive(_) |\n-            repr::StatementKind::StorageDead(_) => {}\n+            repr::StatementKind::StorageDead(_) |\n+            repr::StatementKind::Nop => {}\n         },\n         None => {\n             debug!(\"drop_flag_effects: replace {:?}\", block.terminator());"}, {"sha": "9f162aabe0c2fbabf1f785b9579838f8871d140f", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -910,7 +910,8 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n                 }\n                 StatementKind::SetDiscriminant { .. } |\n                 StatementKind::StorageLive(_) |\n-                StatementKind::StorageDead(_) => {}\n+                StatementKind::StorageDead(_) |\n+                StatementKind::Nop => {}\n             }\n         });\n     }"}, {"sha": "412759cd5b2d3522f01c0ba28f11cb2a962f27a4", "filename": "src/librustc_mir/transform/type_check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -385,6 +385,7 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n                     }\n                 }\n             }\n+            StatementKind::Nop => {}\n         }\n     }\n "}, {"sha": "70d0a61840475e5b90391d1cb89e12a611bbe591", "filename": "src/librustc_trans/mir/constant.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fconstant.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -292,7 +292,8 @@ impl<'a, 'tcx> MirConstContext<'a, 'tcx> {\n                         }\n                     }\n                     mir::StatementKind::StorageLive(_) |\n-                    mir::StatementKind::StorageDead(_) => {}\n+                    mir::StatementKind::StorageDead(_) |\n+                    mir::StatementKind::Nop => {}\n                     mir::StatementKind::SetDiscriminant{ .. } => {\n                         span_bug!(span, \"SetDiscriminant should not appear in constants?\");\n                     }"}, {"sha": "325bd655266c122793e0db01de990ffe56243a00", "filename": "src/librustc_trans/mir/statement.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_trans%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6a91812c64a507e3d2ab727824ff9cda8449fc/src%2Flibrustc_trans%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fstatement.rs?ref=2e6a91812c64a507e3d2ab727824ff9cda8449fc", "patch": "@@ -78,6 +78,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             mir::StatementKind::StorageDead(ref lvalue) => {\n                 self.trans_storage_liveness(bcx, lvalue, base::Lifetime::End)\n             }\n+            mir::StatementKind::Nop => bcx,\n         }\n     }\n "}]}