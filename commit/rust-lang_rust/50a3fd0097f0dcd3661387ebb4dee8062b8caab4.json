{"sha": "50a3fd0097f0dcd3661387ebb4dee8062b8caab4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYTNmZDAwOTdmMGRjZDM2NjEzODdlYmI0ZGVlODA2MmI4Y2FhYjQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-09-10T16:34:11Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-19T00:14:29Z"}, "message": "rustc: remove useless 0 prefix from Layout::StructWrappedNullablePointer's discrfield.", "tree": {"sha": "2418ebaeb96d0c028c0e38ba1b45f363396a2680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2418ebaeb96d0c028c0e38ba1b45f363396a2680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50a3fd0097f0dcd3661387ebb4dee8062b8caab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50a3fd0097f0dcd3661387ebb4dee8062b8caab4", "html_url": "https://github.com/rust-lang/rust/commit/50a3fd0097f0dcd3661387ebb4dee8062b8caab4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50a3fd0097f0dcd3661387ebb4dee8062b8caab4/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44eef7c9ac6d2944131c4216136a2c39e0c5da30", "url": "https://api.github.com/repos/rust-lang/rust/commits/44eef7c9ac6d2944131c4216136a2c39e0c5da30", "html_url": "https://github.com/rust-lang/rust/commit/44eef7c9ac6d2944131c4216136a2c39e0c5da30"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "a7c707de4815ac4ba0ca7ced907a6268c08466cc", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50a3fd0097f0dcd3661387ebb4dee8062b8caab4/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a3fd0097f0dcd3661387ebb4dee8062b8caab4/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=50a3fd0097f0dcd3661387ebb4dee8062b8caab4", "patch": "@@ -1145,7 +1145,6 @@ pub enum Layout {\n     StructWrappedNullablePointer {\n         nndiscr: u64,\n         nonnull: Struct,\n-        /// N.B. There is a 0 at the start, for LLVM GEP through a pointer.\n         discrfield: FieldPath,\n         /// Like discrfield, but in source order. For debuginfo.\n         discrfield_source: FieldPath\n@@ -1472,9 +1471,7 @@ impl<'a, 'tcx> Layout {\n                         let mut i = *path.last().unwrap();\n                         i = st.memory_index[i as usize];\n                         *path.last_mut().unwrap() = i;\n-                        path.push(0); // For GEP through a pointer.\n                         path.reverse();\n-                        path_source.push(0);\n                         path_source.reverse();\n \n                         return success(StructWrappedNullablePointer {"}, {"sha": "82c975c751ff2706d3588a7c695d9eb7d02016c5", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50a3fd0097f0dcd3661387ebb4dee8062b8caab4/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a3fd0097f0dcd3661387ebb4dee8062b8caab4/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=50a3fd0097f0dcd3661387ebb4dee8062b8caab4", "patch": "@@ -1312,7 +1312,6 @@ impl<'tcx> EnumMemberDescriptionFactory<'tcx> {\n                 let null_variant_index = (1 - nndiscr) as usize;\n                 let null_variant_name = adt.variants[null_variant_index].name;\n                 let discrfield_source = discrfield_source.iter()\n-                                           .skip(1)\n                                            .map(|x| x.to_string())\n                                            .collect::<Vec<_>>().join(\"$\");\n                 let union_member_name = format!(\"RUST$ENCODED$ENUM${}${}\","}, {"sha": "7cf35c4405c8e01d8ae75941a7e3735504e894c9", "filename": "src/librustc_trans/mir/lvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a3fd0097f0dcd3661387ebb4dee8062b8caab4/src%2Flibrustc_trans%2Fmir%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a3fd0097f0dcd3661387ebb4dee8062b8caab4/src%2Flibrustc_trans%2Fmir%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Flvalue.rs?ref=50a3fd0097f0dcd3661387ebb4dee8062b8caab4", "patch": "@@ -332,7 +332,7 @@ impl<'a, 'tcx> LvalueRef<'tcx> {\n \n     // Double index to account for padding (FieldPath already uses `Struct::memory_index`)\n     fn gepi_struct_llfields_path(self, bcx: &Builder, discrfield: &layout::FieldPath) -> ValueRef {\n-        let path = iter::once(C_u32(bcx.ccx, 0)).chain(discrfield[1..].iter().map(|&i| {\n+        let path = iter::once(C_u32(bcx.ccx, 0)).chain(discrfield.iter().map(|&i| {\n             let i = adt::memory_index_to_gep(i as u64);\n             assert_eq!(i as u32 as u64, i);\n             C_u32(bcx.ccx, i as u32)"}]}