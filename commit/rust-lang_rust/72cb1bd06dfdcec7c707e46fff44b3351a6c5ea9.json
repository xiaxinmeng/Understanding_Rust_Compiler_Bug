{"sha": "72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9", "node_id": "C_kwDOAAsO6NoAKDcyY2IxYmQwNmRmZGNlYzdjNzA3ZTQ2ZmZmNDRiMzM1MWE2YzVlYTk", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-01-07T18:10:30Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-01-07T21:59:27Z"}, "message": "silence tidy errors", "tree": {"sha": "b3747553656a8dabb03ae3eb9f5d38e83196499b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3747553656a8dabb03ae3eb9f5d38e83196499b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9", "html_url": "https://github.com/rust-lang/rust/commit/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b3902fc6550f7646c4612c7ff8f4d8712f13334", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b3902fc6550f7646c4612c7ff8f4d8712f13334", "html_url": "https://github.com/rust-lang/rust/commit/5b3902fc6550f7646c4612c7ff8f4d8712f13334"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "613ec43a906e7e886c0ec3d35c25de5477ef47e0", "filename": "library/std/src/error.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9", "patch": "@@ -1284,9 +1284,7 @@ where\n \n             for (ind, error) in cause.chain().enumerate() {\n                 writeln!(f)?;\n-                let mut indented = Indented {\n-                    inner: f,\n-                };\n+                let mut indented = Indented { inner: f };\n                 if multiple {\n                     write!(indented, \"{: >4}: {}\", ind, error)?;\n                 } else {\n@@ -1310,8 +1308,7 @@ where\n     }\n }\n \n-impl Report<Box<dyn Error>>\n-{\n+impl Report<Box<dyn Error>> {\n     fn backtrace(&self) -> Option<&Backtrace> {\n         // have to grab the backtrace on the first error directly since that error may not be\n         // 'static\n@@ -1353,9 +1350,7 @@ impl Report<Box<dyn Error>>\n \n             for (ind, error) in cause.chain().enumerate() {\n                 writeln!(f)?;\n-                let mut indented = Indented {\n-                    inner: f,\n-                };\n+                let mut indented = Indented { inner: f };\n                 if multiple {\n                     write!(indented, \"{: >4}: {}\", ind, error)?;\n                 } else {\n@@ -1411,8 +1406,7 @@ where\n }\n \n #[unstable(feature = \"error_reporter\", issue = \"90172\")]\n-impl fmt::Display for Report<Box<dyn Error>>\n-{\n+impl fmt::Display for Report<Box<dyn Error>> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         if self.pretty { self.fmt_multiline(f) } else { self.fmt_singleline(f) }\n     }"}, {"sha": "eae5f43ff3cfb060b424b6a59aa0d8e40e35b2ad", "filename": "library/std/src/error/tests.rs", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9/library%2Fstd%2Fsrc%2Ferror%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9/library%2Fstd%2Fsrc%2Ferror%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror%2Ftests.rs?ref=72cb1bd06dfdcec7c707e46fff44b3351a6c5ea9", "patch": "@@ -82,11 +82,13 @@ fn multi_line_formatting() {\n     let error = SuperError { source: SuperErrorSideKick };\n     let report = Report::new(&error).pretty(true);\n     let actual = report.to_string();\n-    let expected = String::from(\"\\\n+    let expected = String::from(\n+        \"\\\n SuperError is here!\n \n Caused by:\n-      SuperErrorSideKick is here!\");\n+      SuperErrorSideKick is here!\",\n+    );\n \n     assert_eq!(expected, actual);\n }\n@@ -112,43 +114,47 @@ fn error_with_no_sources_formats_multi_line_correctly() {\n #[test]\n fn error_with_backtrace_outputs_correctly_with_one_source() {\n     let trace = Backtrace::force_capture();\n-    let expected = format!(\"\\\n+    let expected = format!(\n+        \"\\\n The source of the error\n \n Caused by:\n       Error with backtrace\n \n Stack backtrace:\n-{}\", trace);\n+{}\",\n+        trace\n+    );\n     let error = GenericError::new(\"Error with backtrace\");\n     let mut error = GenericError::new_with_source(\"The source of the error\", error);\n     error.backtrace = Some(trace);\n     let report = Report::new(error).pretty(true).show_backtrace(true);\n \n-\n     println!(\"Error: {}\", report);\n     assert_eq!(expected.trim_end(), report.to_string());\n }\n \n #[test]\n fn error_with_backtrace_outputs_correctly_with_two_sources() {\n     let trace = Backtrace::force_capture();\n-    let expected = format!(\"\\\n+    let expected = format!(\n+        \"\\\n Error with two sources\n \n Caused by:\n    0: The source of the error\n    1: Error with backtrace\n \n Stack backtrace:\n-{}\", trace);\n+{}\",\n+        trace\n+    );\n     let mut error = GenericError::new(\"Error with backtrace\");\n     error.backtrace = Some(trace);\n     let error = GenericError::new_with_source(\"The source of the error\", error);\n     let error = GenericError::new_with_source(\"Error with two sources\", error);\n     let report = Report::new(error).pretty(true).show_backtrace(true);\n \n-\n     println!(\"Error: {}\", report);\n     assert_eq!(expected.trim_end(), report.to_string());\n }\n@@ -313,11 +319,11 @@ The message\n \n \n Caused by:\n-   0: \n-      The message\n-      \n-   1: \n-      The message\n+   0: \\\n+\\n      The message\n+      \\\n+\\n   1: \\\n+\\n      The message\n       \";\n \n     let actual = report.to_string();\n@@ -399,11 +405,11 @@ line 2\n \n Caused by:\n    0: line 1\n-      \n-      line 2\n+      \\\n+\\n      line 2\n    1: line 1\n-      \n-      line 2\";\n+      \\\n+\\n      line 2\";\n \n     let actual = report.to_string();\n     assert_eq!(expected, actual);"}]}