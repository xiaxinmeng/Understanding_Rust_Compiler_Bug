{"sha": "ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMGE0MDM5NmNkNmM5MmRiZTU2ZTNmOGM3NDRhOTViMjk5NjRkNjg=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-06-23T14:37:12Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-07-10T10:20:56Z"}, "message": "incr.comp.: Improve debug output for work products.", "tree": {"sha": "433ac934f95a885f075f4bd0fe47439eb359bd47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/433ac934f95a885f075f4bd0fe47439eb359bd47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "html_url": "https://github.com/rust-lang/rust/commit/ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2557800fd6bcb529a604b422b8fc8166e19f9977", "url": "https://api.github.com/repos/rust-lang/rust/commits/2557800fd6bcb529a604b422b8fc8166e19f9977", "html_url": "https://github.com/rust-lang/rust/commit/2557800fd6bcb529a604b422b8fc8166e19f9977"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "c3fa7d8f585183a55af0f13dd17244136dd3aab0", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "patch": "@@ -157,9 +157,9 @@ impl DepGraph {\n     }\n \n     #[inline(always)]\n-    pub(super) fn register_dep_node_debug_str<F>(&self,\n-                                                 dep_node: DepNode,\n-                                                 debug_str_gen: F)\n+    pub fn register_dep_node_debug_str<F>(&self,\n+                                          dep_node: DepNode,\n+                                          debug_str_gen: F)\n         where F: FnOnce() -> String\n     {\n         let mut dep_node_debug = self.data.dep_node_debug.borrow_mut();\n@@ -206,6 +206,7 @@ impl DepGraph {\n /// previous hash. If it matches up, we can reuse the object file.\n #[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub struct WorkProduct {\n+    pub cgu_name: String,\n     /// Extra hash used to decide if work-product is still suitable;\n     /// note that this is *not* a hash of the work-product itself.\n     /// See documentation on `WorkProduct` type for an example."}, {"sha": "4b41572c1a1049d3353553331e09cd49eb6c554f", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "patch": "@@ -489,6 +489,12 @@ impl Options {\n             self.debugging_opts.query_dep_graph\n     }\n \n+    #[inline(always)]\n+    pub fn enable_dep_node_debug_strs(&self) -> bool {\n+        cfg!(debug_assertions) &&\n+            (self.debugging_opts.query_dep_graph || self.debugging_opts.incremental_info)\n+    }\n+\n     pub fn single_codegen_unit(&self) -> bool {\n         self.incremental.is_none() ||\n         self.cg.codegen_units == 1"}, {"sha": "cbbdc8f9910dcda8c686ec64a932cf3bc510ecbc", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "patch": "@@ -189,7 +189,8 @@ pub fn decode_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                          &serialized_dep_graph.nodes,\n                          &dirty_raw_nodes,\n                          &mut clean_work_products,\n-                         &mut dirty_work_products);\n+                         &mut dirty_work_products,\n+                         &work_products);\n         }\n     }\n \n@@ -394,7 +395,8 @@ fn process_edge<'a, 'tcx, 'edges>(\n     nodes: &IndexVec<DepNodeIndex, DepNode>,\n     dirty_raw_nodes: &DirtyNodes,\n     clean_work_products: &mut FxHashSet<WorkProductId>,\n-    dirty_work_products: &mut FxHashSet<WorkProductId>)\n+    dirty_work_products: &mut FxHashSet<WorkProductId>,\n+    work_products: &[SerializedWorkProduct])\n {\n     // If the target is dirty, skip the edge. If this is an edge\n     // that targets a work-product, we can print the blame\n@@ -418,9 +420,11 @@ fn process_edge<'a, 'tcx, 'edges>(\n                         format!(\"{:?}\", blame)\n                     };\n \n-                    eprintln!(\"incremental: module {:?} is dirty because {:?} \\\n-                               changed or was removed\",\n-                              wp_id,\n+                    let wp = work_products.iter().find(|swp| swp.id == wp_id).unwrap();\n+\n+                    eprintln!(\"incremental: module {:?} is dirty because \\\n+                              {:?} changed or was removed\",\n+                              wp.work_product.cgu_name,\n                               blame_str);\n                 }\n             }"}, {"sha": "8f99ce91a67a985eee1117c8554a4e860ede9f2f", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "patch": "@@ -55,6 +55,7 @@ pub fn save_trans_partition(sess: &Session,\n     };\n \n     let work_product = WorkProduct {\n+        cgu_name: cgu_name.to_string(),\n         input_hash: partition_hash,\n         saved_files: saved_files,\n     };"}, {"sha": "68b72087b2e6596229e77702d5f520c70046eb51", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0a40396cd6c92dbe56e3f8c744a95b29964d68/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=ca0a40396cd6c92dbe56e3f8c744a95b29964d68", "patch": "@@ -270,6 +270,14 @@ pub fn partition<'a, 'tcx, I>(scx: &SharedCrateContext<'a, 'tcx>,\n         (&cgu1.name[..]).cmp(&cgu2.name[..])\n     });\n \n+    if scx.sess().opts.enable_dep_node_debug_strs() {\n+        for cgu in &result {\n+            let dep_node = cgu.work_product_dep_node();\n+            scx.tcx().dep_graph.register_dep_node_debug_str(dep_node,\n+                                                            || cgu.name().to_string());\n+        }\n+    }\n+\n     result\n }\n "}]}