{"sha": "db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiN2Q4NDJmYjNiOWFlNTFmMWY0ZTE1NWI1Nzc5NTAzY2EzYTJiYjQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-11T09:06:44Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-11T09:06:44Z"}, "message": "Fix comment wording.", "tree": {"sha": "7fcd8be4e6f06ef6b40554a8480082ec5b708764", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fcd8be4e6f06ef6b40554a8480082ec5b708764"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4", "html_url": "https://github.com/rust-lang/rust/commit/db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ac138c61fd9acc86b42820970d98b2d56e5eebc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac138c61fd9acc86b42820970d98b2d56e5eebc", "html_url": "https://github.com/rust-lang/rust/commit/5ac138c61fd9acc86b42820970d98b2d56e5eebc"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "338dc8fdf7b10a47ca668b7784f80f98f8a574d7", "filename": "src/interpreter/vtable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4/src%2Finterpreter%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4/src%2Finterpreter%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fvtable.rs?ref=db7d842fb3b9ae51f1f4e155b5779503ca3a2bb4", "patch": "@@ -9,8 +9,8 @@ use memory::Pointer;\n use super::terminator::{get_impl_method, ImplMethod};\n \n impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n-    /// Creates a returns a dynamic vtable for the given type and vtable origin.\n-    /// This is used only for objects.\n+    /// Creates a dynamic vtable for the given type and vtable origin. This is used only for\n+    /// objects.\n     ///\n     /// The `trait_ref` encodes the erased self type. Hence if we are\n     /// making an object `Foo<Trait>` from a value of type `Foo<T>`, then"}]}