{"sha": "c5f4880e9153d07cd95fa53221a0d976934cb938", "node_id": "C_kwDOAAsO6NoAKGM1ZjQ4ODBlOTE1M2QwN2NkOTVmYTUzMjIxYTBkOTc2OTM0Y2I5Mzg", "commit": {"author": {"name": "Wei Liu", "email": "liuw@liuw.name", "date": "2022-06-18T17:19:24Z"}, "committer": {"name": "Wei Liu", "email": "liuw@liuw.name", "date": "2022-06-20T10:05:04Z"}, "message": "Drop magic value 3 from code\n\nMagic value 3 is used to create state for a yield point. It is in fact\nthe number of reserved variants.\n\nLift RESERVED_VARIANTS out to module scope and use it instead.", "tree": {"sha": "f285a9016793bdabc7a1f1d42705fc3bbe6d0a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f285a9016793bdabc7a1f1d42705fc3bbe6d0a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f4880e9153d07cd95fa53221a0d976934cb938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f4880e9153d07cd95fa53221a0d976934cb938", "html_url": "https://github.com/rust-lang/rust/commit/c5f4880e9153d07cd95fa53221a0d976934cb938", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f4880e9153d07cd95fa53221a0d976934cb938/comments", "author": {"login": "liuw", "id": 138514, "node_id": "MDQ6VXNlcjEzODUxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/138514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuw", "html_url": "https://github.com/liuw", "followers_url": "https://api.github.com/users/liuw/followers", "following_url": "https://api.github.com/users/liuw/following{/other_user}", "gists_url": "https://api.github.com/users/liuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuw/subscriptions", "organizations_url": "https://api.github.com/users/liuw/orgs", "repos_url": "https://api.github.com/users/liuw/repos", "events_url": "https://api.github.com/users/liuw/events{/privacy}", "received_events_url": "https://api.github.com/users/liuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liuw", "id": 138514, "node_id": "MDQ6VXNlcjEzODUxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/138514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuw", "html_url": "https://github.com/liuw", "followers_url": "https://api.github.com/users/liuw/followers", "following_url": "https://api.github.com/users/liuw/following{/other_user}", "gists_url": "https://api.github.com/users/liuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuw/subscriptions", "organizations_url": "https://api.github.com/users/liuw/orgs", "repos_url": "https://api.github.com/users/liuw/repos", "events_url": "https://api.github.com/users/liuw/events{/privacy}", "received_events_url": "https://api.github.com/users/liuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cec6874c086a8fa107115dcca73d93228a3bef6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cec6874c086a8fa107115dcca73d93228a3bef6", "html_url": "https://github.com/rust-lang/rust/commit/2cec6874c086a8fa107115dcca73d93228a3bef6"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "d777d13d7a51425d0b4ac0cfea3a504134ff94d5", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5f4880e9153d07cd95fa53221a0d976934cb938/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f4880e9153d07cd95fa53221a0d976934cb938/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=c5f4880e9153d07cd95fa53221a0d976934cb938", "patch": "@@ -195,6 +195,11 @@ const RETURNED: usize = GeneratorSubsts::RETURNED;\n /// Generator has panicked and is poisoned.\n const POISONED: usize = GeneratorSubsts::POISONED;\n \n+/// Number of variants to reserve in generator state. Corresponds to\n+/// `UNRESUMED` (beginning of a generator) and `RETURNED`/`POISONED`\n+/// (end of a generator) states.\n+const RESERVED_VARIANTS: usize = 3;\n+\n /// A `yield` point in the generator.\n struct SuspensionPoint<'tcx> {\n     /// State discriminant used when suspending or resuming at this point.\n@@ -345,7 +350,7 @@ impl<'tcx> MutVisitor<'tcx> for TransformVisitor<'tcx> {\n             data.statements.extend(self.make_state(state_idx, v, source_info));\n             let state = if let Some((resume, mut resume_arg)) = resume {\n                 // Yield\n-                let state = 3 + self.suspension_points.len();\n+                let state = RESERVED_VARIANTS + self.suspension_points.len();\n \n                 // The resume arg target location might itself be remapped if its base local is\n                 // live across a yield.\n@@ -792,7 +797,6 @@ fn compute_layout<'tcx>(\n     // Leave empty variants for the UNRESUMED, RETURNED, and POISONED states.\n     // In debuginfo, these will correspond to the beginning (UNRESUMED) or end\n     // (RETURNED, POISONED) of the function.\n-    const RESERVED_VARIANTS: usize = 3;\n     let body_span = body.source_scopes[OUTERMOST_SOURCE_SCOPE].span;\n     let mut variant_source_info: IndexVec<VariantIdx, SourceInfo> = [\n         SourceInfo::outermost(body_span.shrink_to_lo()),"}]}