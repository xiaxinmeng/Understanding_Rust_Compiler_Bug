{"sha": "4d23c8e9a162a91c4e25f75285353be938ea1f25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMjNjOGU5YTE2MmE5MWM0ZTI1Zjc1Mjg1MzUzYmU5MzhlYTFmMjU=", "commit": {"author": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2021-04-06T01:09:43Z"}, "committer": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2021-04-06T08:54:56Z"}, "message": "Add listing of lints (eg via -W help) to rustdoc", "tree": {"sha": "20b7df9c30c9308015efa7de4609734032209ed2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20b7df9c30c9308015efa7de4609734032209ed2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d23c8e9a162a91c4e25f75285353be938ea1f25", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1ycQ10Ou2Tzw/6ueaKZbzZ0on/4FAmBsIeIACgkQaKZbzZ0o\nn/5mExAAkq08RvWdbtDE49nVapTjAkqjQm5xWkzLhAeoofbIU1+KX0zOFi3aeh7W\nkUInS/rbdXh1kkjC8E5Xwn1ozU7uaH8+hdaITYvWXN0YKam8AvMYZutNUhcT+8kg\nZyaU3jpnAEJtFzoKH+b2l5nIrK/JwBv+tMhx+U7uhf0jvrPl665WiJv9Dj/LGJdc\nQbdIOyNSStHnzQsTaZ05tmadMNBDxcP90G0vJyzGrUQkNqdEwjBoMG8yd+GMTUkM\nCrA9Vsaurx+xKwk0rsb7VSlhYKsJ0M9z0KBiOSfB2i1rMFvuccceyqSfFYLoT7+N\ni2dF4tpYHMyeGwqF8fdghpCjDIeYYgGAnccU/yH74DuRW6JfkC4mhY/lHJNobZKO\nv7/fTJHJt52iPPYpzcmX7RvDAuELb+gJGwU5Wo4ZQNLzBRiY7Dgf+WrORjPKOQR7\n9I8n+cs54FxXmgkwJV8vsgQ1qTrACJriKoJ7qcUmYYnNSzWRDpVRhGF20vg4+tSL\ngEyXoTRQKkl28et78oEQzgD/y862uPIi+VyWnkBnuNHI6n6nOPeLG+jyjXuORnba\n6ZnNMW5xw4PYt/qNsZYxlVdwIlCPpr4l1eC8UQPAyNVGEt3/K5tcLccPlUZ5ibxT\nfwHPGiLRuUlbvjjbdr5lISonZJQkwsARznxL84RZyawEAv5rqsY=\n=M1jS\n-----END PGP SIGNATURE-----", "payload": "tree 20b7df9c30c9308015efa7de4609734032209ed2\nparent d32238532138485c80db4f2cd596372bce214e00\nauthor Alan Egerton <eggyal@gmail.com> 1617671383 +0100\ncommitter Alan Egerton <eggyal@gmail.com> 1617699296 +0100\n\nAdd listing of lints (eg via -W help) to rustdoc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d23c8e9a162a91c4e25f75285353be938ea1f25", "html_url": "https://github.com/rust-lang/rust/commit/4d23c8e9a162a91c4e25f75285353be938ea1f25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d23c8e9a162a91c4e25f75285353be938ea1f25/comments", "author": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d32238532138485c80db4f2cd596372bce214e00", "url": "https://api.github.com/repos/rust-lang/rust/commits/d32238532138485c80db4f2cd596372bce214e00", "html_url": "https://github.com/rust-lang/rust/commit/d32238532138485c80db4f2cd596372bce214e00"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "8d6cb420bf75c54f8b1d014c1b6cd42a7244ea04", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d23c8e9a162a91c4e25f75285353be938ea1f25/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d23c8e9a162a91c4e25f75285353be938ea1f25/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=4d23c8e9a162a91c4e25f75285353be938ea1f25", "patch": "@@ -845,7 +845,8 @@ the command line flag directly.\n     );\n }\n \n-fn describe_lints(sess: &Session, lint_store: &LintStore, loaded_plugins: bool) {\n+/// Write to stdout lint command options, together with a list of all available lints\n+pub fn describe_lints(sess: &Session, lint_store: &LintStore, loaded_plugins: bool) {\n     println!(\n         \"\n Available lint options:"}, {"sha": "c374e1f8d102cc8473848a8d54085052480c0de1", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=4d23c8e9a162a91c4e25f75285353be938ea1f25", "patch": "@@ -97,8 +97,7 @@ crate struct Options {\n     crate maybe_sysroot: Option<PathBuf>,\n     /// Lint information passed over the command-line.\n     crate lint_opts: Vec<(String, Level)>,\n-    /// Whether to ask rustc to describe the lints it knows. Practically speaking, this will not be\n-    /// used, since we abort if we have no input file, but it's included for completeness.\n+    /// Whether to ask rustc to describe the lints it knows.\n     crate describe_lints: bool,\n     /// What level to cap lints at.\n     crate lint_cap: Option<Level>,"}, {"sha": "241aa1f12df7e5e61d4e29265237915a53b1ae80", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=4d23c8e9a162a91c4e25f75285353be938ea1f25", "patch": "@@ -74,7 +74,7 @@ use std::default::Default;\n use std::env;\n use std::process;\n \n-use rustc_driver::abort_on_err;\n+use rustc_driver::{abort_on_err, describe_lints};\n use rustc_errors::ErrorReported;\n use rustc_interface::interface;\n use rustc_middle::ty::TyCtxt;\n@@ -705,6 +705,12 @@ fn main_options(options: config::Options) -> MainResult {\n         compiler.enter(|queries| {\n             let sess = compiler.session();\n \n+            if sess.opts.describe_lints {\n+                let (_, lint_store) = &*queries.register_plugins()?.peek();\n+                describe_lints(sess, lint_store, true);\n+                return Ok(());\n+            }\n+\n             // We need to hold on to the complete resolver, so we cause everything to be\n             // cloned for the analysis passes to use. Suboptimal, but necessary in the\n             // current architecture."}, {"sha": "a261b782d48593aa4e68122f88a07e4c96fed15c", "filename": "src/test/rustdoc-ui/issue-83883-describe-lints.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs?ref=4d23c8e9a162a91c4e25f75285353be938ea1f25", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -W help\n+// check-pass\n+//\n+// ignore-tidy-linelength\n+//\n+// normalize-stdout-test: \"( +name  default  meaning\\n +----  -------  -------\\n)?( *[[:word:]:-]+  (allow  |warn   |deny   |forbid )  [^\\n]+\\n)+\" -> \"    $$NAMES  $$LEVELS  $$MEANINGS\"\n+// normalize-stdout-test: \" +name  sub-lints\\n +----  ---------\\n( *[[:word:]:-]+  [^\\n]+\\n)+\" -> \"    $$NAMES  $$SUB_LINTS\"\n+// normalize-stdout-test: \" +rustdoc::all(  (rustdoc::[[:word:]-]+, )*rustdoc::[[:word:]-]+)?\" -> \"    rustdoc::all  $$GROUPS$4\""}, {"sha": "651faf5761f18ff22b94fbc07ecdfb298efcfa9b", "filename": "src/test/rustdoc-ui/issue-83883-describe-lints.stdout", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4d23c8e9a162a91c4e25f75285353be938ea1f25/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout?ref=4d23c8e9a162a91c4e25f75285353be938ea1f25", "patch": "@@ -0,0 +1,25 @@\n+\n+Available lint options:\n+    -W <foo>           Warn about <foo>\n+    -A <foo>           Allow <foo>\n+    -D <foo>           Deny <foo>\n+    -F <foo>           Forbid <foo> (deny <foo> and all attempts to override)\n+\n+\n+Lint checks provided by rustc:\n+\n+    $NAMES  $LEVELS  $MEANINGS\n+\n+Lint groups provided by rustc:\n+\n+    $NAMES  $SUB_LINTS\n+\n+Lint checks provided by plugins loaded by this crate:\n+\n+    $NAMES  $LEVELS  $MEANINGS\n+\n+Lint groups provided by plugins loaded by this crate:\n+\n+    rustdoc::all  $GROUPS\n+\n+"}]}