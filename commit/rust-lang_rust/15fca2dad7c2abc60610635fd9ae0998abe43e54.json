{"sha": "15fca2dad7c2abc60610635fd9ae0998abe43e54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZmNhMmRhZDdjMmFiYzYwNjEwNjM1ZmQ5YWUwOTk4YWJlNDNlNTQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-15T05:48:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-15T06:41:31Z"}, "message": "compiletest: Run tests in their own thread to avoid blocking the scheduler\n\nThe calls to waitpid are interacting badly with the message passing that goes\non between schedulers and causing us to have very little parallelism in\nthe test suite. I don't fully understand the sequence of events that causes\nthe problem here but clearly blocking on waitpid is something that a\nwell-behaved task should not be doing.\n\nUnfortunately this adds quite a bit of overhead to each test: one thread, two\ntasks, three stacks, so there's a tradeoff. The time to execute run-pass on\nmy 4-core machine goes from ~750s to ~300s.", "tree": {"sha": "179b5ab96870ed9d28117a0bca455784104e7d72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/179b5ab96870ed9d28117a0bca455784104e7d72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15fca2dad7c2abc60610635fd9ae0998abe43e54", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15fca2dad7c2abc60610635fd9ae0998abe43e54", "html_url": "https://github.com/rust-lang/rust/commit/15fca2dad7c2abc60610635fd9ae0998abe43e54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15fca2dad7c2abc60610635fd9ae0998abe43e54/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d817ee869387322dec4d3f7d407dcc9f91c2632", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d817ee869387322dec4d3f7d407dcc9f91c2632", "html_url": "https://github.com/rust-lang/rust/commit/0d817ee869387322dec4d3f7d407dcc9f91c2632"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "2346aba3bcbb655cd5553fe4a883cccb906b50b5", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/15fca2dad7c2abc60610635fd9ae0998abe43e54/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15fca2dad7c2abc60610635fd9ae0998abe43e54/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=15fca2dad7c2abc60610635fd9ae0998abe43e54", "patch": "@@ -20,16 +20,30 @@ use procsrv;\n use util;\n use util::logv;\n \n+use std::cell::Cell;\n use std::io;\n use std::os;\n use std::str;\n+use std::task::{spawn_sched, SingleThreaded};\n use std::vec;\n \n use extra::test::MetricMap;\n \n pub fn run(config: config, testfile: ~str) {\n-    let mut _mm = MetricMap::new();\n-    run_metrics(config, testfile, &mut _mm);\n+    let config = Cell::new(config);\n+    let testfile = Cell::new(testfile);\n+    // FIXME #6436: Creating another thread to run the test because this\n+    // is going to call waitpid. The new scheduler has some strange\n+    // interaction between the blocking tasks and 'friend' schedulers\n+    // that destroys parallelism if we let normal schedulers block.\n+    // It should be possible to remove this spawn once std::run is\n+    // rewritten to be non-blocking.\n+    do spawn_sched(SingleThreaded) {\n+        let config = config.take();\n+        let testfile = testfile.take();\n+        let mut _mm = MetricMap::new();\n+        run_metrics(config, testfile, &mut _mm);\n+    }\n }\n \n pub fn run_metrics(config: config, testfile: ~str, mm: &mut MetricMap) {"}]}