{"sha": "4de4e6186417489b37bc73c064b35effe7e4409a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZTRlNjE4NjQxNzQ4OWIzN2JjNzNjMDY0YjM1ZWZmZTdlNDQwOWE=", "commit": {"author": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-16T03:32:43Z"}, "committer": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-18T23:57:15Z"}, "message": "Fix ignored unused outer label when inner label shadows and is broken multiple times", "tree": {"sha": "c2b1cc1a5670bf169a9228bdf2b5115b6dc1cd0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2b1cc1a5670bf169a9228bdf2b5115b6dc1cd0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4de4e6186417489b37bc73c064b35effe7e4409a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4de4e6186417489b37bc73c064b35effe7e4409a", "html_url": "https://github.com/rust-lang/rust/commit/4de4e6186417489b37bc73c064b35effe7e4409a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4de4e6186417489b37bc73c064b35effe7e4409a/comments", "author": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f274122eef3c69c09c406dff32d695fca5509b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f274122eef3c69c09c406dff32d695fca5509b3", "html_url": "https://github.com/rust-lang/rust/commit/0f274122eef3c69c09c406dff32d695fca5509b3"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "f55a37697bc3fa04ca040afabce98e9e240adaaf", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4de4e6186417489b37bc73c064b35effe7e4409a/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4de4e6186417489b37bc73c064b35effe7e4409a/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=4de4e6186417489b37bc73c064b35effe7e4409a", "patch": "@@ -472,7 +472,7 @@ declare_lint! {\n }\n \n #[derive(Clone)]\n-pub struct UnusedLabel(pub Vec<ast::Label>);\n+pub struct UnusedLabel(pub Vec<(ast::Label, bool)>);\n \n impl UnusedLabel {\n     pub fn new() -> Self {\n@@ -493,11 +493,11 @@ impl EarlyLintPass for UnusedLabel {\n             | ast::ExprKind::WhileLet(_, _, _, Some(label))\n             | ast::ExprKind::ForLoop(_, _, _, Some(label))\n             | ast::ExprKind::Loop(_, Some(label)) => {\n-                self.0.push(label);\n+                self.0.push((label, false));\n             }\n             ast::ExprKind::Break(Some(label), _) | ast::ExprKind::Continue(Some(label)) => {\n-                if let Some(index) = self.0.iter().rposition(|&l| l.ident == label.ident) {\n-                    self.0.remove(index);\n+                if let Some((_, ref mut was_used)) = self.0.iter_mut().rev().find(|(l, _)| label == *l) {\n+                    *was_used = true;\n                 }\n             }\n             _ => {}\n@@ -510,11 +510,9 @@ impl EarlyLintPass for UnusedLabel {\n             | ast::ExprKind::WhileLet(_, _, _, Some(label))\n             | ast::ExprKind::ForLoop(_, _, _, Some(label))\n             | ast::ExprKind::Loop(_, Some(label)) => {\n-                if let Some(unused_label) = self.0.pop() {\n-                    if label.ident == unused_label.ident {\n+                if let Some((_, was_used)) = self.0.pop() {\n+                    if !was_used {\n                         ctxt.span_lint(UNUSED_LABEL, label.ident.span, \"unused label\");\n-                    } else {\n-                        self.0.push(unused_label);\n                     }\n                 }\n             },"}]}