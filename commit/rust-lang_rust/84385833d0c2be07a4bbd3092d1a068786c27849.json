{"sha": "84385833d0c2be07a4bbd3092d1a068786c27849", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0Mzg1ODMzZDBjMmJlMDdhNGJiZDMwOTJkMWEwNjg3ODZjMjc4NDk=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-04-25T07:32:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-25T07:32:31Z"}, "message": "Merge pull request #2679 from devonhollowood/cast-alignment-cvoid\n\nMake cast_ptr_alignment ignore c_void", "tree": {"sha": "0b1cb4dbf48f28c4b7ef6794f53e9bc4784f02c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b1cb4dbf48f28c4b7ef6794f53e9bc4784f02c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84385833d0c2be07a4bbd3092d1a068786c27849", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa4C8PCRBK7hj4Ov3rIwAAdHIIADxIFbpsR+NCqcwKWtkziWOo\n3oVwt11MAgMpM0nVrcsl5XrsAxcwoTsKSPbmkz+pNmE5Mci61naKUEsJ3rM4zmos\nYLUp9nNqgJNGVYoAgDzfmhj76ERjVY4fXNzE+M2KEnchYuQFehxWyEWURT3/JmTa\nZfkXZS45pkdBST+Qdza3t7yS6C05gFNVPHh2rLMA9c6GkNv3LY0O1GpYlesX76j6\nCvvYQK587oaNLoRrTj5axUffxMygyBCGvF6Pf+EukAYKqplKnYyPFGHw+/QsMol4\nOh7eAq8FuRTdzSCLoz4SWsyWGiqRbU+p1Qgx4NGIPBqYxV87HgmxIvHDDbtP1kQ=\n=yHOv\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b1cb4dbf48f28c4b7ef6794f53e9bc4784f02c3\nparent 9a375668b4e71afc8ebeed103e3f5b0899782503\nparent f0e09d43c9047c846ae8361d1652ac5406c3cf3d\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1524641551 +0200\ncommitter GitHub <noreply@github.com> 1524641551 +0200\n\nMerge pull request #2679 from devonhollowood/cast-alignment-cvoid\n\nMake cast_ptr_alignment ignore c_void"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84385833d0c2be07a4bbd3092d1a068786c27849", "html_url": "https://github.com/rust-lang/rust/commit/84385833d0c2be07a4bbd3092d1a068786c27849", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84385833d0c2be07a4bbd3092d1a068786c27849/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a375668b4e71afc8ebeed103e3f5b0899782503", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a375668b4e71afc8ebeed103e3f5b0899782503", "html_url": "https://github.com/rust-lang/rust/commit/9a375668b4e71afc8ebeed103e3f5b0899782503"}, {"sha": "f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "html_url": "https://github.com/rust-lang/rust/commit/f0e09d43c9047c846ae8361d1652ac5406c3cf3d"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "69c37bb63052a8e6011be722562b1f5d4fbbb363", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/84385833d0c2be07a4bbd3092d1a068786c27849/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84385833d0c2be07a4bbd3092d1a068786c27849/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=84385833d0c2be07a4bbd3092d1a068786c27849", "patch": "@@ -13,7 +13,7 @@ use syntax::ast::{FloatTy, IntTy, UintTy};\n use syntax::codemap::Span;\n use syntax::errors::DiagnosticBuilder;\n use utils::{comparisons, higher, in_constant, in_external_macro, in_macro, last_path_segment, match_def_path, match_path,\n-            multispan_sugg, opt_def_id, same_tys, snippet, snippet_opt, span_help_and_lint, span_lint,\n+            match_type, multispan_sugg, opt_def_id, same_tys, snippet, snippet_opt, span_help_and_lint, span_lint,\n             span_lint_and_sugg, span_lint_and_then, clip, unsext, sext, int_bits};\n use utils::paths;\n use consts::{constant, Constant};\n@@ -981,6 +981,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n                 if let Some(from_align) = cx.layout_of(from_ptr_ty.ty).ok().map(|a| a.align.abi());\n                 if let Some(to_align) = cx.layout_of(to_ptr_ty.ty).ok().map(|a| a.align.abi());\n                 if from_align < to_align;\n+                // with c_void, we inherently need to trust the user\n+                if ! (\n+                    match_type(cx, from_ptr_ty.ty, &paths::C_VOID)\n+                    || match_type(cx, from_ptr_ty.ty, &paths::C_VOID_LIBC)\n+                );\n                 then {\n                     span_lint(\n                         cx,"}, {"sha": "fbc3cc303a8eeb786ee011f5bee9a20e89572a99", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84385833d0c2be07a4bbd3092d1a068786c27849/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84385833d0c2be07a4bbd3092d1a068786c27849/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=84385833d0c2be07a4bbd3092d1a068786c27849", "patch": "@@ -20,6 +20,8 @@ pub const CMP_MAX: [&str; 3] = [\"core\", \"cmp\", \"max\"];\n pub const CMP_MIN: [&str; 3] = [\"core\", \"cmp\", \"min\"];\n pub const COW: [&str; 3] = [\"alloc\", \"borrow\", \"Cow\"];\n pub const CSTRING_NEW: [&str; 5] = [\"std\", \"ffi\", \"c_str\", \"CString\", \"new\"];\n+pub const C_VOID: [&str; 4] = [\"std\", \"os\", \"raw\", \"c_void\"];\n+pub const C_VOID_LIBC: [&str; 2] = [\"libc\", \"c_void\"];\n pub const DEBUG_FMT_METHOD: [&str; 4] = [\"core\", \"fmt\", \"Debug\", \"fmt\"];\n pub const DEFAULT_TRAIT: [&str; 3] = [\"core\", \"default\", \"Default\"];\n pub const DISPLAY_FMT_METHOD: [&str; 4] = [\"core\", \"fmt\", \"Display\", \"fmt\"];"}, {"sha": "32e2f93169e2385a1b00b3e7e0c96f7c1ce81654", "filename": "tests/ui/cast_alignment.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/84385833d0c2be07a4bbd3092d1a068786c27849/tests%2Fui%2Fcast_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84385833d0c2be07a4bbd3092d1a068786c27849/tests%2Fui%2Fcast_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.rs?ref=84385833d0c2be07a4bbd3092d1a068786c27849", "patch": "@@ -1,5 +1,9 @@\n //! Test casts for alignment issues\n \n+#![feature(libc)]\n+\n+extern crate libc;\n+\n #[warn(cast_ptr_alignment)]\n #[allow(no_effect, unnecessary_operation, cast_lossless)]\n fn main() {\n@@ -16,4 +20,7 @@ fn main() {\n     // cast to less-strictly-aligned type\n     (&1u16 as *const u16) as *const u8;\n     (&mut 1u16 as *mut u16) as *mut u8;\n+    // For c_void, we should trust the user. See #2677\n+    (&1u32 as *const u32 as *const std::os::raw::c_void) as *const u32;\n+    (&1u32 as *const u32 as *const libc::c_void) as *const u32;\n }"}, {"sha": "42df78a37a68eb89aead1759891f0d7f5534eb58", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/84385833d0c2be07a4bbd3092d1a068786c27849/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84385833d0c2be07a4bbd3092d1a068786c27849/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=84385833d0c2be07a4bbd3092d1a068786c27849", "patch": "@@ -1,15 +1,15 @@\n error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n- --> $DIR/cast_alignment.rs:9:5\n-  |\n-9 |     (&1u8 as *const u8) as *const u16;\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = note: `-D cast-ptr-alignment` implied by `-D warnings`\n+  --> $DIR/cast_alignment.rs:13:5\n+   |\n+13 |     (&1u8 as *const u8) as *const u16;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D cast-ptr-alignment` implied by `-D warnings`\n \n error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n-  --> $DIR/cast_alignment.rs:10:5\n+  --> $DIR/cast_alignment.rs:14:5\n    |\n-10 |     (&mut 1u8 as *mut u8) as *mut u16;\n+14 |     (&mut 1u8 as *mut u8) as *mut u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}]}