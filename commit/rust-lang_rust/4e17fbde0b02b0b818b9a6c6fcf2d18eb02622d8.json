{"sha": "4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMTdmYmRlMGIwMmIwYjgxOGI5YTZjNmZjZjJkMThlYjAyNjIyZDg=", "commit": {"author": {"name": "Dmytro Shynkevych", "email": "dm.shynk@gmail.com", "date": "2018-08-05T06:41:14Z"}, "committer": {"name": "Dmytro Shynkevych", "email": "dm.shynk@gmail.com", "date": "2018-08-05T06:41:14Z"}, "message": "Fixed typo", "tree": {"sha": "0776131c985c2658789e143b5b2e7daf059688a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0776131c985c2658789e143b5b2e7daf059688a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8", "html_url": "https://github.com/rust-lang/rust/commit/4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8/comments", "author": {"login": "dshynkev", "id": 24684698, "node_id": "MDQ6VXNlcjI0Njg0Njk4", "avatar_url": "https://avatars.githubusercontent.com/u/24684698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dshynkev", "html_url": "https://github.com/dshynkev", "followers_url": "https://api.github.com/users/dshynkev/followers", "following_url": "https://api.github.com/users/dshynkev/following{/other_user}", "gists_url": "https://api.github.com/users/dshynkev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dshynkev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dshynkev/subscriptions", "organizations_url": "https://api.github.com/users/dshynkev/orgs", "repos_url": "https://api.github.com/users/dshynkev/repos", "events_url": "https://api.github.com/users/dshynkev/events{/privacy}", "received_events_url": "https://api.github.com/users/dshynkev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dshynkev", "id": 24684698, "node_id": "MDQ6VXNlcjI0Njg0Njk4", "avatar_url": "https://avatars.githubusercontent.com/u/24684698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dshynkev", "html_url": "https://github.com/dshynkev", "followers_url": "https://api.github.com/users/dshynkev/followers", "following_url": "https://api.github.com/users/dshynkev/following{/other_user}", "gists_url": "https://api.github.com/users/dshynkev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dshynkev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dshynkev/subscriptions", "organizations_url": "https://api.github.com/users/dshynkev/orgs", "repos_url": "https://api.github.com/users/dshynkev/repos", "events_url": "https://api.github.com/users/dshynkev/events{/privacy}", "received_events_url": "https://api.github.com/users/dshynkev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1553ea23165fc795b8c7e8188d2782c39c94b922", "url": "https://api.github.com/repos/rust-lang/rust/commits/1553ea23165fc795b8c7e8188d2782c39c94b922", "html_url": "https://github.com/rust-lang/rust/commit/1553ea23165fc795b8c7e8188d2782c39c94b922"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "82e1c92359ccb5cdf3de1ad55310362e9a2db867", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=4e17fbde0b02b0b818b9a6c6fcf2d18eb02622d8", "patch": "@@ -1362,7 +1362,7 @@ trait RcBoxPtr<T: ?Sized> {\n         // We want to abort on overflow instead of dropping the value.\n         // The reference count will never be zero when this is called;\n         // nevertheless, we insert an abort here to hint LLVM at\n-        // an otherwise missied optimization.\n+        // an otherwise missed optimization.\n         if self.strong() == 0 || self.strong() == usize::max_value() {\n             unsafe { abort(); }\n         }\n@@ -1384,7 +1384,7 @@ trait RcBoxPtr<T: ?Sized> {\n         // We want to abort on overflow instead of dropping the value.\n         // The reference count will never be zero when this is called;\n         // nevertheless, we insert an abort here to hint LLVM at\n-        // an otherwise missied optimization.\n+        // an otherwise missed optimization.\n         if self.weak() == 0 || self.weak() == usize::max_value() {\n             unsafe { abort(); }\n         }"}]}