{"sha": "3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkOTAyM2ZhNGRkYzhkYmI1ZDliZTBlNGU0ZWY1YzI4NGM2YjA3N2E=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-11T23:34:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-12T00:11:31Z"}, "message": "rt: Take the task lock when dropping port refcounts\n\nSucks, but otherwise there are races when one task drops the refcount to zero\nfollowed by another bumping it again", "tree": {"sha": "ff4ed0e61a85f4f11e4b094fac90d488462403bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff4ed0e61a85f4f11e4b094fac90d488462403bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "html_url": "https://github.com/rust-lang/rust/commit/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07771ec25bc394a4a053252a2b5441f3160a0568", "url": "https://api.github.com/repos/rust-lang/rust/commits/07771ec25bc394a4a053252a2b5441f3160a0568", "html_url": "https://github.com/rust-lang/rust/commit/07771ec25bc394a4a053252a2b5441f3160a0568"}], "stats": {"total": 48, "additions": 21, "deletions": 27}, "files": [{"sha": "e8109ea7a047c6364d959db687e20d4197ef6b8e", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "patch": "@@ -471,6 +471,7 @@ extern \"C\" CDECL void\n del_port(rust_port *port) {\n     rust_task *task = rust_scheduler::get_task();\n     LOG(task, comm, \"del_port(0x%\" PRIxPTR \")\", (uintptr_t) port);\n+    scoped_lock with(task->lock);\n     port->deref();\n }\n \n@@ -487,11 +488,12 @@ chan_id_send(type_desc *t, rust_task_id target_task_id,\n     rust_task *target_task = task->kernel->get_task_by_id(target_task_id);\n     if(target_task) {\n         rust_port *port = target_task->get_port_by_id(target_port_id);\n-        target_task->deref();\n         if(port) {\n             port->send(sptr);\n+            scoped_lock with(target_task->lock);\n             port->deref();\n         }\n+        target_task->deref();\n     }\n }\n "}, {"sha": "e5d43e7b308f11d2f19fedc4d11ba348757948cc", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 15, "deletions": 20, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "patch": "@@ -127,15 +127,20 @@ rust_task::~rust_task()\n          name, (uintptr_t)this, ref_count);\n \n     if(user.notify_enabled) {\n-        rust_port *target =\n-            get_port_by_chan_handle(&user.notify_chan);\n-        if(target) {\n-            task_notification msg;\n-            msg.id = user.id;\n-            msg.result = failed ? tr_failure : tr_success;\n-\n-            target->send(&msg);\n-            target->deref();\n+        rust_task *target_task = kernel->get_task_by_id(user.notify_chan.task);\n+        if (target_task) {\n+            rust_port *target_port =\n+                target_task->get_port_by_id(user.notify_chan.port);\n+            if(target_port) {\n+                task_notification msg;\n+                msg.id = user.id;\n+                msg.result = failed ? tr_failure : tr_success;\n+\n+                target_port->send(&msg);\n+                scoped_lock with(target_task->lock);\n+                target_port->deref();\n+            }\n+            target_task->deref();\n         }\n     }\n \n@@ -553,8 +558,7 @@ rust_port_id rust_task::register_port(rust_port *port) {\n }\n \n void rust_task::release_port(rust_port_id id) {\n-    I(sched, !lock.lock_held_by_current_thread());\n-    scoped_lock with(lock);\n+    I(sched, lock.lock_held_by_current_thread());\n     port_table.remove(id);\n }\n \n@@ -569,15 +573,6 @@ rust_port *rust_task::get_port_by_id(rust_port_id id) {\n     return port;\n }\n \n-rust_port *rust_task::get_port_by_chan_handle(chan_handle *handle) {\n-    rust_task *target_task = kernel->get_task_by_id(handle->task);\n-    if(target_task) {\n-        rust_port *port = target_task->get_port_by_id(handle->port);\n-        target_task->deref();\n-        return port;\n-    }\n-    return NULL;\n-}\n \n // Temporary routine to allow boxes on one task's shared heap to be reparented\n // to another."}, {"sha": "2d8afa619cd8fa316d674e50bc7dd5aa90caa7e0", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "patch": "@@ -209,8 +209,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     // not at all safe.\n     intptr_t get_ref_count() const { return ref_count; }\n \n-    rust_port *get_port_by_chan_handle(chan_handle *handle);\n-\n     // FIXME: These functions only exist to get the tasking system off the\n     // ground. We should never be migrating shared boxes between tasks.\n     const type_desc *release_alloc(void *alloc);"}, {"sha": "69b11519d28bd9df78993e4f53062af5d20972b0", "filename": "src/test/run-pass/task-comm-15.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs?ref=3d9023fa4ddc8dbb5d9be0e4e4ef5c284c6b077a", "patch": "@@ -1,11 +1,10 @@\n-// xfail-test\n // xfail-win32\n use std;\n import std::comm;\n import std::task;\n \n-fn start(c: comm::chan<int>, n: int) {\n-    let i: int = n;\n+fn start(&&args: (comm::chan<int>, int)) {\n+    let (c, i) = args;\n \n     while i > 0 { comm::send(c, 0); i = i - 1; }\n }\n@@ -16,6 +15,6 @@ fn main() {\n     // is likely to terminate before the child completes, so from\n     // the child's point of view the receiver may die. We should\n     // drop messages on the floor in this case, and not crash!\n-    let child = task::spawn(bind start(comm::chan(p), 10));\n+    let child = task::spawn((comm::chan(p), 10), start);\n     let c = comm::recv(p);\n }"}]}