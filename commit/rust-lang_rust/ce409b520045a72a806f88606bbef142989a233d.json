{"sha": "ce409b520045a72a806f88606bbef142989a233d", "node_id": "C_kwDOAAsO6NoAKGNlNDA5YjUyMDA0NWE3MmE4MDZmODg2MDZiYmVmMTQyOTg5YTIzM2Q", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-25T18:12:51Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-28T17:35:39Z"}, "message": "Make normalize and normalize_to pub(crate)", "tree": {"sha": "3a1247c491d5801872c9deccfb539496f4062d7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a1247c491d5801872c9deccfb539496f4062d7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce409b520045a72a806f88606bbef142989a233d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce409b520045a72a806f88606bbef142989a233d", "html_url": "https://github.com/rust-lang/rust/commit/ce409b520045a72a806f88606bbef142989a233d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce409b520045a72a806f88606bbef142989a233d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06786227fdb92f7a905cfd4a0131f2ec9db5072f", "url": "https://api.github.com/repos/rust-lang/rust/commits/06786227fdb92f7a905cfd4a0131f2ec9db5072f", "html_url": "https://github.com/rust-lang/rust/commit/06786227fdb92f7a905cfd4a0131f2ec9db5072f"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "f44d1d71fa66c4f748901e7c849876fbdf2a9f97", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce409b520045a72a806f88606bbef142989a233d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce409b520045a72a806f88606bbef142989a233d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=ce409b520045a72a806f88606bbef142989a233d", "patch": "@@ -1595,6 +1595,7 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                     bound_predicate.rebind(data),\n                 );\n                 let mut obligations = vec![];\n+                // FIXME(normalization): Change this to use `At::normalize`\n                 let normalized_ty = super::normalize_projection_type(\n                     &mut selcx,\n                     obligation.param_env,"}, {"sha": "c6efbd6b684c058e65901d99951227d73b10e16b", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce409b520045a72a806f88606bbef142989a233d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce409b520045a72a806f88606bbef142989a233d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=ce409b520045a72a806f88606bbef142989a233d", "patch": "@@ -56,7 +56,8 @@ pub use self::object_safety::astconv_object_safety_violations;\n pub use self::object_safety::is_vtable_safe_method;\n pub use self::object_safety::MethodViolationCode;\n pub use self::object_safety::ObjectSafetyViolation;\n-pub use self::project::{normalize, normalize_projection_type, normalize_to, NormalizeExt};\n+pub use self::project::{NormalizeExt, normalize_projection_type};\n+pub(crate) use self::project::{normalize, normalize_to};\n pub use self::select::{EvaluationCache, SelectionCache, SelectionContext};\n pub use self::select::{EvaluationResult, IntercrateAmbiguityCause, OverflowError};\n pub use self::specialize::specialization_graph::FutureCompatOverlapError;"}, {"sha": "7483b160f333e2c8c60c334fb746296eb6cb67ab", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce409b520045a72a806f88606bbef142989a233d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce409b520045a72a806f88606bbef142989a233d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=ce409b520045a72a806f88606bbef142989a233d", "patch": "@@ -307,7 +307,7 @@ fn project_and_unify_type<'cx, 'tcx>(\n /// them with a fully resolved type where possible. The return value\n /// combines the normalized result and any additional obligations that\n /// were incurred as result.\n-pub fn normalize<'a, 'b, 'tcx, T>(\n+pub(crate) fn normalize<'a, 'b, 'tcx, T>(\n     selcx: &'a mut SelectionContext<'b, 'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     cause: ObligationCause<'tcx>,\n@@ -321,7 +321,7 @@ where\n     Normalized { value, obligations }\n }\n \n-pub fn normalize_to<'a, 'b, 'tcx, T>(\n+pub(crate) fn normalize_to<'a, 'b, 'tcx, T>(\n     selcx: &'a mut SelectionContext<'b, 'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     cause: ObligationCause<'tcx>,\n@@ -335,7 +335,7 @@ where\n }\n \n /// As `normalize`, but with a custom depth.\n-pub fn normalize_with_depth<'a, 'b, 'tcx, T>(\n+pub(crate) fn normalize_with_depth<'a, 'b, 'tcx, T>(\n     selcx: &'a mut SelectionContext<'b, 'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     cause: ObligationCause<'tcx>,\n@@ -351,7 +351,7 @@ where\n }\n \n #[instrument(level = \"info\", skip(selcx, param_env, cause, obligations))]\n-pub fn normalize_with_depth_to<'a, 'b, 'tcx, T>(\n+pub(crate) fn normalize_with_depth_to<'a, 'b, 'tcx, T>(\n     selcx: &'a mut SelectionContext<'b, 'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     cause: ObligationCause<'tcx>,\n@@ -371,7 +371,7 @@ where\n }\n \n #[instrument(level = \"info\", skip(selcx, param_env, cause, obligations))]\n-pub fn try_normalize_with_depth_to<'a, 'b, 'tcx, T>(\n+pub(crate) fn try_normalize_with_depth_to<'a, 'b, 'tcx, T>(\n     selcx: &'a mut SelectionContext<'b, 'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     cause: ObligationCause<'tcx>,"}]}