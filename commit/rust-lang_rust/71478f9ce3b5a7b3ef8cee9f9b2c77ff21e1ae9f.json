{"sha": "71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNDc4ZjljZTNiNWE3YjNlZjhjZWU5ZjliMmM3N2ZmMjFlMWFlOWY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-02-01T00:47:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-02-01T00:56:12Z"}, "message": "Workaround for #4717: pad contents of ast. rs=breakage", "tree": {"sha": "3ee766b7b2840673722de643d70769fe7e3161d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ee766b7b2840673722de643d70769fe7e3161d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "html_url": "https://github.com/rust-lang/rust/commit/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0682ad0eb9a6b268498a81b2e16a40544e44f0fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/0682ad0eb9a6b268498a81b2e16a40544e44f0fa", "html_url": "https://github.com/rust-lang/rust/commit/0682ad0eb9a6b268498a81b2e16a40544e44f0fa"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "a33d78c3b585a26613e89e65370634f5944a143a", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -510,7 +510,7 @@ fn mk_test_wrapper(cx: test_ctxt,\n     let wrapper_expr = ast::expr  {\n         id: cx.sess.next_node_id(),\n         callee_id: cx.sess.next_node_id(),\n-        node: ast::expr_fn(ast::ProtoBare, wrapper_decl, wrapper_body),\n+        node: ast::expr_fn(ast::ProtoBare, wrapper_decl, wrapper_body, @()),\n         span: span\n     };\n "}, {"sha": "11c557f02496caffed8a083e86dfe9ce4ba621e8", "filename": "src/librustc/middle/check_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -32,7 +32,7 @@ pub fn check_crate(tcx: ty::ctxt, crate: @crate) {\n               expr_loop(ref b, _) => {\n                 (v.visit_block)((*b), {in_loop: true,.. cx}, v);\n               }\n-              expr_fn(_, _, _) => {\n+              expr_fn(*) => {\n                 visit::visit_expr(e, {in_loop: false, can_ret: true}, v);\n               }\n               expr_fn_block(_, ref b) => {"}, {"sha": "35c6b625e1114bae303fcaf1a4b8b66dcf0d1f9c", "filename": "src/librustc/middle/freevars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffreevars.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -48,7 +48,7 @@ fn collect_freevars(def_map: resolve::DefMap, blk: ast::blk)\n \n     let walk_expr = fn@(expr: @ast::expr, &&depth: int, v: visit::vt<int>) {\n             match expr.node {\n-              ast::expr_fn(proto, _, _) => {\n+              ast::expr_fn(proto, _, _, _) => {\n                 if proto != ast::ProtoBare {\n                     visit::visit_expr(expr, depth + 1, v);\n                 }"}, {"sha": "0cafe528d042182357429a21fb40ce262225953e", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -559,8 +559,8 @@ fn visit_expr(expr: @expr, &&self: @IrMaps, vt: vt<@IrMaps>) {\n         }\n         visit::visit_expr(expr, self, vt);\n       }\n-      expr_fn(_, _, _) |\n-      expr_fn_block(_, _) => {\n+      expr_fn(*) |\n+      expr_fn_block(*) => {\n         // Interesting control flow (for loops can contain labeled\n         // breaks or continues)\n         self.add_live_node_for_node(expr.id, ExprNode(expr.span));\n@@ -1105,7 +1105,7 @@ impl Liveness {\n               self.propagate_through_expr(e, succ)\n           }\n \n-          expr_fn(_, _, ref blk) | expr_fn_block(_, ref blk) => {\n+          expr_fn(_, _, ref blk, _) | expr_fn_block(_, ref blk) => {\n               debug!(\"%s is an expr_fn or expr_fn_block\",\n                    expr_to_str(expr, self.tcx.sess.intr()));\n "}, {"sha": "81b3761451c61ac67cddd384723280f2753b862b", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -615,7 +615,7 @@ impl VisitContext {\n                 self.use_expr(base, comp_mode, visitor);\n             }\n \n-            expr_fn(_, _, ref body) |\n+            expr_fn(_, _, ref body, _) |\n             expr_fn_block(_, ref body) => {\n                 let cap_vars = self.compute_captures(expr.id);\n                 self.move_maps.capture_map.insert(expr.id, cap_vars);"}, {"sha": "f7488156204346c8edfa8c9893dba9718c165361", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -4820,7 +4820,7 @@ pub impl Resolver {\n                 visit_expr(expr, (), visitor);\n             }\n \n-            expr_fn(_, ref fn_decl, ref block) |\n+            expr_fn(_, ref fn_decl, ref block, _) |\n             expr_fn_block(ref fn_decl, ref block) => {\n                 self.resolve_function(FunctionRibKind(expr.id, block.node.id),\n                                       Some(@/*bad*/copy *fn_decl),"}, {"sha": "d4c86cbaa09333e521ce907e34a16f97d629f57a", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -789,7 +789,7 @@ pub fn create_function(fcx: fn_ctxt) -> @metadata<subprogram_md> {\n       }\n       ast_map::node_expr(expr) => {\n         match /*bad*/copy expr.node {\n-          ast::expr_fn(_, decl, _) => {\n+          ast::expr_fn(_, decl, _, _) => {\n             ((dbg_cx.names)(~\"fn\"), decl.output, expr.id)\n           }\n           ast::expr_fn_block(decl, _) => {"}, {"sha": "2443f426ee45361f4d0d2dd6579b98018d70e845", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -566,7 +566,7 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n             return tvec::trans_fixed_vstore(bcx, expr, expr, dest);\n         }\n         // XXX: Bad copy.\n-        ast::expr_fn(proto, copy decl, ref body) => {\n+        ast::expr_fn(proto, copy decl, ref body, _) => {\n             // Don't use this function for anything real. Use the one in\n             // astconv instead.\n             return closure::trans_expr_fn(bcx, proto, decl,"}, {"sha": "620c0d804401f0cb8f1149576dd67af01fdf84cf", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -2164,7 +2164,7 @@ pub fn check_expr_with_unifier(fcx: @fn_ctxt,\n       ast::expr_match(discrim, ref arms) => {\n         bot = _match::check_match(fcx, expr, discrim, (/*bad*/copy *arms));\n       }\n-      ast::expr_fn(proto, ref decl, ref body) => {\n+      ast::expr_fn(proto, ref decl, ref body, _) => {\n         check_expr_fn(fcx, expr, Some(proto),\n                       decl, (*body), Vanilla, expected);\n       }"}, {"sha": "e85f41c54a22aa04ec6d347d2d5819fee28aba17", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -695,7 +695,10 @@ pub enum expr_ {\n        (implicit) condition is always true. */\n     expr_loop(blk, Option<ident>),\n     expr_match(@expr, ~[arm]),\n-    expr_fn(Proto, fn_decl, blk),\n+\n+    // FIXME(#4717) the @() is req'd on windows or else LLVM croaks\n+    expr_fn(Proto, fn_decl, blk, @()),\n+\n     expr_fn_block(fn_decl, blk),\n     // Inner expr is always an expr_fn_block. We need the wrapping node to\n     // easily type this (a function returning nil on the inside but bool on"}, {"sha": "5c80a6664de63fa29b3d1c1ae4791740998744ee", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -466,10 +466,11 @@ pub fn noop_fold_expr(e: expr_, fld: ast_fold) -> expr_ {\n             expr_match(fld.fold_expr(expr),\n                      vec::map((*arms), |x| fld.fold_arm(*x)))\n           }\n-          expr_fn(proto, decl, ref body) => {\n+          expr_fn(proto, decl, ref body, _) => {\n             expr_fn(proto,\n                     fold_fn_decl(decl, fld),\n-                    fld.fold_block(*body))\n+                    fld.fold_block(*body),\n+                    @())\n           }\n           expr_fn_block(decl, ref body) => {\n             expr_fn_block(fold_fn_decl(decl, fld),"}, {"sha": "48f38092f88c14671004210471fb9a0d3395f2ac", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -1567,7 +1567,8 @@ pub impl Parser {\n         let decl = self.parse_fn_decl(|p| p.parse_arg_or_capture_item());\n \n         let body = self.parse_block();\n-        return self.mk_expr(lo, body.span.hi,expr_fn(proto, decl, body));\n+        return self.mk_expr(lo, body.span.hi,\n+                            expr_fn(proto, decl, body, @()));\n     }\n \n     // `|args| { ... }` like in `do` expressions"}, {"sha": "6661f5e810a33f01f08ddfba9f10367c2f836e1e", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -1305,7 +1305,7 @@ pub fn print_expr(s: ps, &&expr: @ast::expr) {\n         }\n         bclose_(s, expr.span, match_indent_unit);\n       }\n-      ast::expr_fn(proto, decl, ref body) => {\n+      ast::expr_fn(proto, decl, ref body, _) => {\n         // containing cbox, will be closed by print-block at }\n         cbox(s, indent_unit);\n         // head-box, will be closed by print-block at start"}, {"sha": "a174ea4774054aa6d8ac3d5b1695be6883cc68b1", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=71478f9ce3b5a7b3ef8cee9f9b2c77ff21e1ae9f", "patch": "@@ -457,7 +457,7 @@ pub fn visit_expr<E>(ex: @expr, e: E, v: vt<E>) {\n         (v.visit_expr)(x, e, v);\n         for (*arms).each |a| { (v.visit_arm)(*a, e, v); }\n       }\n-      expr_fn(proto, decl, ref body) => {\n+      expr_fn(proto, decl, ref body, _) => {\n         (v.visit_fn)(fk_anon(proto), decl, (*body),\n                      ex.span, ex.id, e, v);\n       }"}]}