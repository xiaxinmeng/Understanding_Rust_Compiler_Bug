{"sha": "e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YTM5MzQ1OTliYmIyZGJkMjg1YzYyNTljYWM3MWY3MGMxZWMzZTY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-10T23:21:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-10T23:21:20Z"}, "message": "Rollup merge of #55816 - nnethercote:from_decimal_string-SmallVec, r=oli-obk\n\nUse `SmallVec` to avoid allocations in `from_decimal_string`.\n\nThis reduces the number of allocations in a \"check clean\" build of\n`tuple-stress` by 14%, reducing instruction counts by 0.6%.", "tree": {"sha": "a300012074f6b9f089ec0f18a7d483943124aa45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a300012074f6b9f089ec0f18a7d483943124aa45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb52fwCRBK7hj4Ov3rIwAAdHIIAKy+18ME2q4R6DGV6wA6JTpH\nJ+l5RnNf9UmuSE+GuVchWr6hmi9Wy/85dDT5KIRlebHunMV3i0ChKEMQ2z1nJMBR\naDfRBPB17BIMeVYsJ8E/09Cqhesda1Hp/Nlh6rdaWF4J+eZ8tuFaUtMY4ptPT5bW\nEJ0k98YYhX3ZJVGCjBMNUyhNnBpALm5OlhXSGsYQxR3Te/nn54jWoIqS6nyofJsp\nGwvLCh1CQ22N0rr6q0PZd1S6MCtLoWaeBzmrFkFwVbypHvvNEYh2RO/Ogt5bvjML\nb5CczmZzg16Dv5ubjd2VbZrkS8+m2yK5gVw6nDhl1Y+xfNY164plpOZdL4mIJ+k=\n=REJu\n-----END PGP SIGNATURE-----\n", "payload": "tree a300012074f6b9f089ec0f18a7d483943124aa45\nparent 5b0b0ce61ebf0da19d89f1be7ccea67f6cd128a7\nparent a66d7b2001def5ab87e99d661e31890660f38374\nauthor Pietro Albini <pietro@pietroalbini.org> 1541892080 +0100\ncommitter GitHub <noreply@github.com> 1541892080 +0100\n\nRollup merge of #55816 - nnethercote:from_decimal_string-SmallVec, r=oli-obk\n\nUse `SmallVec` to avoid allocations in `from_decimal_string`.\n\nThis reduces the number of allocations in a \"check clean\" build of\n`tuple-stress` by 14%, reducing instruction counts by 0.6%.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "html_url": "https://github.com/rust-lang/rust/commit/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b0b0ce61ebf0da19d89f1be7ccea67f6cd128a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0b0ce61ebf0da19d89f1be7ccea67f6cd128a7", "html_url": "https://github.com/rust-lang/rust/commit/5b0b0ce61ebf0da19d89f1be7ccea67f6cd128a7"}, {"sha": "a66d7b2001def5ab87e99d661e31890660f38374", "url": "https://api.github.com/repos/rust-lang/rust/commits/a66d7b2001def5ab87e99d661e31890660f38374", "html_url": "https://github.com/rust-lang/rust/commit/a66d7b2001def5ab87e99d661e31890660f38374"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "2ac51263cb5ca05644dcd816dad2923192b3264f", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "patch": "@@ -2096,6 +2096,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_cratesio_shim 0.0.0\",\n+ \"smallvec 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]"}, {"sha": "a8a5da90c7a6bb41418cb0b5cf20447eca1fff38", "filename": "src/librustc_apfloat/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2Flibrustc_apfloat%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2Flibrustc_apfloat%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2FCargo.toml?ref=e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "patch": "@@ -10,3 +10,4 @@ path = \"lib.rs\"\n [dependencies]\n bitflags = \"1.0\"\n rustc_cratesio_shim = { path = \"../librustc_cratesio_shim\" }\n+smallvec = { version = \"0.6.5\", features = [\"union\"] }"}, {"sha": "4f405858e350ce8269b9fba6dfe8512f2f6474ed", "filename": "src/librustc_apfloat/ieee.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2Flibrustc_apfloat%2Fieee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2Flibrustc_apfloat%2Fieee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Fieee.rs?ref=e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "patch": "@@ -11,6 +11,7 @@\n use {Category, ExpInt, IEK_INF, IEK_NAN, IEK_ZERO};\n use {Float, FloatConvert, ParseError, Round, Status, StatusAnd};\n \n+use smallvec::{SmallVec, smallvec};\n use std::cmp::{self, Ordering};\n use std::convert::TryFrom;\n use std::fmt::{self, Write};\n@@ -1962,7 +1963,7 @@ impl<S: Semantics> IeeeFloat<S> {\n         // to hold the full significand, and an extra limb required by\n         // tcMultiplyPart.\n         let max_limbs = limbs_for_bits(1 + 196 * significand_digits / 59);\n-        let mut dec_sig = Vec::with_capacity(max_limbs);\n+        let mut dec_sig: SmallVec<[Limb; 1]> = SmallVec::with_capacity(max_limbs);\n \n         // Convert to binary efficiently - we do almost all multiplication\n         // in a Limb. When this would overflow do we do a single\n@@ -2021,11 +2022,11 @@ impl<S: Semantics> IeeeFloat<S> {\n \n             const FIRST_EIGHT_POWERS: [Limb; 8] = [1, 5, 25, 125, 625, 3125, 15625, 78125];\n \n-            let mut p5_scratch = vec![];\n-            let mut p5 = vec![FIRST_EIGHT_POWERS[4]];\n+            let mut p5_scratch = smallvec![];\n+            let mut p5: SmallVec<[Limb; 1]> = smallvec![FIRST_EIGHT_POWERS[4]];\n \n-            let mut r_scratch = vec![];\n-            let mut r = vec![FIRST_EIGHT_POWERS[power & 7]];\n+            let mut r_scratch = smallvec![];\n+            let mut r: SmallVec<[Limb; 1]> = smallvec![FIRST_EIGHT_POWERS[power & 7]];\n             power >>= 3;\n \n             while power > 0 {\n@@ -2064,7 +2065,7 @@ impl<S: Semantics> IeeeFloat<S> {\n             let calc_precision = (LIMB_BITS << attempt) - 1;\n             attempt += 1;\n \n-            let calc_normal_from_limbs = |sig: &mut Vec<Limb>,\n+            let calc_normal_from_limbs = |sig: &mut SmallVec<[Limb; 1]>,\n                                           limbs: &[Limb]|\n              -> StatusAnd<ExpInt> {\n                 sig.resize(limbs_for_bits(calc_precision), 0);"}, {"sha": "69c9f385409e4a268a1c0d17a39233e64c39bdbf", "filename": "src/librustc_apfloat/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2Flibrustc_apfloat%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6/src%2Flibrustc_apfloat%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Flib.rs?ref=e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "patch": "@@ -53,6 +53,7 @@ extern crate rustc_cratesio_shim;\n \n #[macro_use]\n extern crate bitflags;\n+extern crate smallvec;\n \n use std::cmp::Ordering;\n use std::fmt;"}]}