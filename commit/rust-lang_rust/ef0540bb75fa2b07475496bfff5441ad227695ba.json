{"sha": "ef0540bb75fa2b07475496bfff5441ad227695ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMDU0MGJiNzVmYTJiMDc0NzU0OTZiZmZmNTQ0MWFkMjI3Njk1YmE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-17T21:09:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-17T21:09:18Z"}, "message": "Rollup merge of #74368 - GuillaumeGomez:css-tidy-check, r=Mark-Simulacrum\n\nAdd CSS tidy check\n\nr? @Mark-Simulacrum", "tree": {"sha": "fda477956047efc0eb89881c98d35f7a142ce41d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fda477956047efc0eb89881c98d35f7a142ce41d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef0540bb75fa2b07475496bfff5441ad227695ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEhN/CRBK7hj4Ov3rIwAAdHIIADemcoT+nWOijD+tTdNdobTS\nr3Nq41j1Lxh/8MmUFZACfTiiY7gH16GHAugPNHmjdWcMSpjsAmLhYmnsnDljenlc\nsx9s0EcfS+OInu7LO6HwragGfqWt7vR8I7mB5AJkvFK+vVOxCz4mvewpPvXvlacA\n7KYe9uQ6MFIq5vtgMqXWHhU1vLHZR/1NFT/ALi9nMirKIJM7I3bpNMqv0wMMUAI7\nuVHJyUs7RNE77Fmgm3Oft+/uhh8rwXiTHb/rsHh9f/otSmLERY5A61j1JdCqBZih\n2a/bOKXFGsASPFjnSx0szASVAeckRkMxXWEr23w83br517XImVgT+Fc9czu8PXw=\n=dOVk\n-----END PGP SIGNATURE-----\n", "payload": "tree fda477956047efc0eb89881c98d35f7a142ce41d\nparent 344b5e06fabab3e0634866a810d5fc57fcaac616\nparent 83ffd5c18d83bbb2786309139e3030590f4985f1\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595020158 -0700\ncommitter GitHub <noreply@github.com> 1595020158 -0700\n\nRollup merge of #74368 - GuillaumeGomez:css-tidy-check, r=Mark-Simulacrum\n\nAdd CSS tidy check\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef0540bb75fa2b07475496bfff5441ad227695ba", "html_url": "https://github.com/rust-lang/rust/commit/ef0540bb75fa2b07475496bfff5441ad227695ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef0540bb75fa2b07475496bfff5441ad227695ba/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "344b5e06fabab3e0634866a810d5fc57fcaac616", "url": "https://api.github.com/repos/rust-lang/rust/commits/344b5e06fabab3e0634866a810d5fc57fcaac616", "html_url": "https://github.com/rust-lang/rust/commit/344b5e06fabab3e0634866a810d5fc57fcaac616"}, {"sha": "83ffd5c18d83bbb2786309139e3030590f4985f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/83ffd5c18d83bbb2786309139e3030590f4985f1", "html_url": "https://github.com/rust-lang/rust/commit/83ffd5c18d83bbb2786309139e3030590f4985f1"}], "stats": {"total": 193, "additions": 123, "deletions": 70}, "files": [{"sha": "0e0426279183f631fd297c1d4b4bb0c65b475457", "filename": "src/librustdoc/html/static/normalize.css", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnormalize.css", "raw_url": "https://github.com/rust-lang/rust/raw/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnormalize.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnormalize.css?ref=ef0540bb75fa2b07475496bfff5441ad227695ba", "patch": "@@ -1 +1,2 @@\n+/* ignore-tidy-linelength */\n /*! normalize.css v3.0.0 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0}input[type=\"number\"]::-webkit-inner-spin-button,input[type=\"number\"]::-webkit-outer-spin-button{height:auto}input[type=\"search\"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}"}, {"sha": "38709b445efae9aa89649872aa167af0053942dd", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=ef0540bb75fa2b07475496bfff5441ad227695ba", "patch": "@@ -49,9 +49,9 @@\n }\n \n * {\n-  -webkit-box-sizing: border-box;\n-\t -moz-box-sizing: border-box;\n-\t\t  box-sizing: border-box;\n+\t-webkit-box-sizing: border-box;\n+\t-moz-box-sizing: border-box;\n+\tbox-sizing: border-box;\n }\n \n /* This part handles the \"default\" theme being used depending on the system one. */\n@@ -91,7 +91,8 @@ h2 {\n h3 {\n \tfont-size: 1.3em;\n }\n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod):not(.important), h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n+h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod):not(.important),\n+h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n \tfont-weight: 500;\n \tmargin: 20px 0 15px 0;\n \tpadding-bottom: 6px;\n@@ -103,7 +104,8 @@ h1.fqn {\n h1.fqn > .in-band > a:hover {\n \ttext-decoration: underline;\n }\n-h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n+h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n+h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n \tborder-bottom: 1px solid;\n }\n h3.impl, h3.method, h4.method, h3.type, h4.type, h4.associatedconstant {\n@@ -1123,21 +1125,20 @@ h3 > .collapse-toggle, h4 > .collapse-toggle {\n \t/* The margin on the tooltip does not capture hover events,\n \t   this extends the area of hover enough so that mouse hover is not\n \t   lost when moving the mouse to the tooltip */\n-    content: \"\\00a0\\00a0\\00a0\";\n+\tcontent: \"\\00a0\\00a0\\00a0\";\n }\n \n .important-traits .important, .important-traits .docblock {\n \tmargin: 0;\n }\n \n .important-traits .docblock code.content{\n-    margin: 0;\n-    padding: 0;\n-    font-size: 20px;\n+\tmargin: 0;\n+\tpadding: 0;\n+\tfont-size: 20px;\n }\n \n-/* Example code has the \"Run\" button that\n-   needs to be positioned relative to the pre */\n+/* Example code has the \"Run\" button that needs to be positioned relative to the pre */\n pre.rust.rust-example-rendered {\n \tposition: relative;\n }"}, {"sha": "e0ab7170ea8772d0bc5816d6d557f03d6f3b551f", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 67, "deletions": 51, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=ef0540bb75fa2b07475496bfff5441ad227695ba", "patch": "@@ -10,7 +10,8 @@ body {\n \tcolor: #c5c5c5;\n }\n \n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {\n+h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n+h4:not(.method):not(.type):not(.tymethod) {\n \tcolor: white;\n }\n h1.fqn {\n@@ -41,13 +42,13 @@ h3 > code, h4 > code, h5 > code {\n \tcolor: #e6e1cf;\n }\n pre > code {\n-    color: #e6e1cf; \n+\tcolor: #e6e1cf;\n }\n span code {\n-    color: #e6e1cf;\n+\tcolor: #e6e1cf;\n }\n .docblock a > code {\n-    color: #39AFD7 !important;\n+\tcolor: #39AFD7 !important;\n }\n .docblock code, .docblock-short code {\n \tbackground-color: #191f26;\n@@ -100,11 +101,11 @@ pre {\n }\n \n .sidebar-elems .location {\n-    color: #ff7733;\n+\tcolor: #ff7733;\n }\n \n .sidebar-elems .location a {\n-    color: #fff;\n+\tcolor: #fff;\n }\n \n .sidebar .version {\n@@ -123,9 +124,9 @@ pre {\n \n .line-numbers span { color: #5c6773ab; }\n .line-numbers .line-highlighted {\n-    background-color: rgba(255, 236, 164, 0.06) !important;\n-    padding-right: 4px;\n-    border-right: 1px solid #ffb44c;\n+\tbackground-color: rgba(255, 236, 164, 0.06) !important;\n+\tpadding-right: 4px;\n+\tborder-right: 1px solid #ffb44c;\n }\n \n .docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5 {\n@@ -168,31 +169,31 @@ pre {\n .content span.keyword, .content a.keyword { color: #de5249; }\n \n .content span.externcrate, .content span.mod, .content a.mod {\n-    color: #acccf9;\n+\tcolor: #acccf9;\n }\n .content span.struct, .content a.struct {\n-    color: #ffa0a5;\n+\tcolor: #ffa0a5;\n }\n .content span.enum, .content a.enum {\n-    color: #99e0c9;\n+\tcolor: #99e0c9;\n }\n .content span.trait, .content a.trait {\n-    color: #39AFD7;\n+\tcolor: #39AFD7;\n }\n .content span.type, .content a.type {\n-    color: #cfbcf5;\n+\tcolor: #cfbcf5;\n }\n .content span.fn, .content a.fn, .content span.method,\n .content a.method, .content span.tymethod,\n .content a.tymethod, .content .fnname {\n-    color: #fdd687;\n+\tcolor: #fdd687;\n }\n .content span.attr, .content a.attr, .content span.derive,\n .content a.derive, .content span.macro, .content a.macro {\n-    color: #a37acc;\n+\tcolor: #a37acc;\n }\n \n-pre.rust .comment, pre.rust .doccomment { \n+pre.rust .comment, pre.rust .doccomment {\n \tcolor: #788797;\n \tfont-style: italic;\n }\n@@ -228,14 +229,24 @@ a {\n }\n \n .search-input {\n-    color: #ffffff;\n-    background-color: #141920;\n-    box-shadow: 0 0 0 1px #424c57,0 0 0 2px transparent;\n-    transition: box-shadow 150ms ease-in-out;\n+\tcolor: #ffffff;\n+\tbackground-color: #141920;\n+\tbox-shadow: 0 0 0 1px #424c57,0 0 0 2px transparent;\n+\ttransition: box-shadow 150ms ease-in-out;\n }\n \n #crate-search+.search-input:focus {\n-    box-shadow: 0 0 0 1px #148099,0 0 0 2px transparent;\n+\tbox-shadow: 0 0 0 1px #148099,0 0 0 2px transparent;\n+\tcolor: #ffffff;\n+\tbackground-color: #141920;\n+\tbox-shadow: none;\n+\ttransition: box-shadow 150ms ease-in-out;\n+\tborder-radius: 4px;\n+\tmargin-left: 8px;\n+}\n+\n+#crate-search+.search-input:focus {\n+\tbox-shadow: 0px 6px 20px 0px black;\n }\n \n .search-focus:disabled {\n@@ -249,7 +260,7 @@ a {\n .stab.unstable,\n .stab.deprecated,\n .stab.portability {\n-    color: #c5c5c5;\n+\tcolor: #c5c5c5;\n \tbackground: #314559 !important;\n \tborder-style: none !important;\n \tborder-radius: 4px;\n@@ -262,10 +273,10 @@ a {\n }\n \n #help > div {\n-    background: #14191f;\n-    box-shadow: 0px 6px 20px 0px black;\n-    border: none;\n-    border-radius: 4px;\n+\tbackground: #14191f;\n+\tbox-shadow: 0px 6px 20px 0px black;\n+\tborder: none;\n+\tborder-radius: 4px;\n }\n \n .since {\n@@ -288,14 +299,14 @@ pre.rust .question-mark {\n \tcolor: #ff9011;\n }\n pre.rust .self {\n-    color: #36a3d9;\n-    font-style: italic;\n+\tcolor: #36a3d9;\n+\tfont-style: italic;\n }\n pre.rust .attribute {\n-    color: #e6e1cf;\n+\tcolor: #e6e1cf;\n }\n pre.rust .attribute .ident, pre.rust .attribute .op {\n-    color: #e6e1cf;\n+\tcolor: #e6e1cf;\n }\n \n .example-wrap > pre.line-number {\n@@ -304,15 +315,15 @@ pre.rust .attribute .ident, pre.rust .attribute .op {\n }\n \n a.test-arrow {\n-    font-size: 100%;\n-    color: #788797;\n-    border-radius: 4px;\n-    background-color: rgba(255, 255, 255, 0);\n+\tfont-size: 100%;\n+\tcolor: #788797;\n+\tborder-radius: 4px;\n+\tbackground-color: rgba(255, 255, 255, 0);\n }\n \n a.test-arrow:hover {\n-    background-color: rgba(242, 151, 24, 0.05);\n-    color: #ffb44c;\n+\tbackground-color: rgba(242, 151, 24, 0.05);\n+\tcolor: #ffb44c;\n }\n \n .toggle-label {\n@@ -377,22 +388,22 @@ pre.ignore:hover, .information:hover + pre.ignore {\n }\n \n .tooltip .tooltiptext {\n-    background-color: #314559;\n-    color: #c5c5c5;\n-    border: 1px solid #5c6773;\n+\tbackground-color: #314559;\n+\tcolor: #c5c5c5;\n+\tborder: 1px solid #5c6773;\n }\n \n .tooltip .tooltiptext::after {\n \tborder-color: transparent #314559 transparent transparent;\n }\n \n .important-traits-tooltiptext {\n-    background-color: #314559;\n-    border-color: #5c6773;\n+\tbackground-color: #314559;\n+\tborder-color: #5c6773;\n }\n \n #titles > div.selected {\n-    background-color: #141920 !important;\n+\tbackground-color: #141920 !important;\n \tborder-bottom: 1px solid #ffb44c !important;\n \tborder-top: none;\n }\n@@ -403,7 +414,7 @@ pre.ignore:hover, .information:hover + pre.ignore {\n }\n \n #titles > div:hover {\n-    border-bottom: 1px solid rgba(242, 151, 24, 0.3);\n+\tborder-bottom: 1px solid rgba(242, 151, 24, 0.3);\n }\n \n #titles > div > div.count {\n@@ -413,12 +424,13 @@ pre.ignore:hover, .information:hover + pre.ignore {\n /* rules that this theme does not need to set, here to satisfy the rule checker */\n /* note that a lot of these are partially set in some way (meaning they are set\n individually rather than as a group) */\n-/* TODO: these rules should be at the bottom of the file but currently must be\n+/* FIXME: these rules should be at the bottom of the file but currently must be\n above the `@media (max-width: 700px)` rules due to a bug in the css checker */\n /* see https://github.com/rust-lang/rust/pull/71237#issuecomment-618170143 */\n .content .highlighted.mod, .content .highlighted.externcrate {}\n .search-input:focus {}\n-.content span.attr,.content a.attr,.block a.current.attr,.content span.derive,.content a.derive,.block a.current.derive,.content span.macro,.content a.macro,.block a.current.macro {}\n+.content span.attr,.content a.attr,.block a.current.attr,.content span.derive,.content a.derive,\n+.block a.current.derive,.content span.macro,.content a.macro,.block a.current.macro {}\n .content .highlighted.trait {}\n .content span.struct,.content a.struct,.block a.current.struct {}\n #titles>div:hover,#titles>div.selected {}\n@@ -433,16 +445,20 @@ pre.rust .lifetime {}\n .content .highlighted.fn,.content .highlighted.method,.content .highlighted.tymethod {}\n h2,h3:not(.impl):not(.method):not(.type):not(.tymethod),h4:not(.method):not(.type):not(.tymethod) {}\n .content span.enum,.content a.enum,.block a.current.enum {}\n-.content span.constant,.content a.constant,.block a.current.constant,.content span.static,.content a.static,.block a.current.static {}\n+.content span.constant,.content a.constant,.block a.current.constant,.content span.static,\n+.content a.static,.block a.current.static {}\n .content span.keyword,.content a.keyword,.block a.current.keyword {}\n pre.rust .comment {}\n .content .highlighted.enum {}\n .content .highlighted.struct {}\n .content .highlighted.keyword {}\n .content span.traitalias,.content a.traitalias,.block a.current.traitalias {}\n-.content span.fn,.content a.fn,.block a.current.fn,.content span.method,.content a.method,.block a.current.method,.content span.tymethod,.content a.tymethod,.block a.current.tymethod,.content .fnname {}\n+.content span.fn,.content a.fn,.block a.current.fn,.content span.method,.content a.method,\n+.block a.current.method,.content span.tymethod,.content a.tymethod,.block a.current.tymethod,\n+.content .fnname {}\n pre.rust .kw {}\n-pre.rust .self,pre.rust .bool-val,pre.rust .prelude-val,pre.rust .attribute,pre.rust .attribute .ident {}\n+pre.rust .self,pre.rust .bool-val,pre.rust .prelude-val,pre.rust .attribute,\n+pre.rust .attribute .ident {}\n .content span.foreigntype,.content a.foreigntype,.block a.current.foreigntype {}\n pre.rust .doccomment {}\n .stab.deprecated {}\n@@ -483,11 +499,11 @@ kbd {\n \n #theme-picker, #settings-menu {\n \tborder-color: #5c6773;\n-    background-color: #0f1419;\n+\tbackground-color: #0f1419;\n }\n \n #theme-picker > img, #settings-menu > img {\n-    filter: invert(100);\n+\tfilter: invert(100);\n }\n \n #theme-picker:hover, #theme-picker:focus,"}, {"sha": "33c0f885fa95b4afe9f136c299f4db23e9c59b1b", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=ef0540bb75fa2b07475496bfff5441ad227695ba", "patch": "@@ -3,13 +3,15 @@ body {\n \tcolor: #ddd;\n }\n \n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {\n+h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n+h4:not(.method):not(.type):not(.tymethod) {\n \tcolor: #ddd;\n }\n h1.fqn {\n \tborder-bottom-color: #d2d2d2;\n }\n-h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {\n+h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n+h4:not(.method):not(.type):not(.tymethod) {\n \tborder-bottom-color: #d2d2d2;\n }\n "}, {"sha": "569ce7da2091f07d79c2499d6f7fe4335de6bdd6", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=ef0540bb75fa2b07475496bfff5441ad227695ba", "patch": "@@ -5,13 +5,15 @@ body {\n \tcolor: black;\n }\n \n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {\n+h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n+h4:not(.method):not(.type):not(.tymethod) {\n \tcolor: black;\n }\n h1.fqn {\n \tborder-bottom-color: #D5D5D5;\n }\n-h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {\n+h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n+h4:not(.method):not(.type):not(.tymethod) {\n \tborder-bottom-color: #DDDDDD;\n }\n "}, {"sha": "470fab496a442fa6dc65328896c3af6713d7593b", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef0540bb75fa2b07475496bfff5441ad227695ba/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=ef0540bb75fa2b07475496bfff5441ad227695ba", "patch": "@@ -119,6 +119,7 @@ fn contains_ignore_directive(can_contain: bool, contents: &str, check: &str) ->\n     // Update `can_contain` when changing this\n     if contents.contains(&format!(\"// ignore-tidy-{}\", check))\n         || contents.contains(&format!(\"# ignore-tidy-{}\", check))\n+        || contents.contains(&format!(\"/* ignore-tidy-{} */\", check))\n     {\n         Directive::Ignore(false)\n     } else {\n@@ -136,15 +137,37 @@ macro_rules! suppressible_tidy_err {\n     };\n }\n \n+pub fn is_in(full_path: &Path, parent_folder_to_find: &str, folder_to_find: &str) -> bool {\n+    if let Some(parent) = full_path.parent() {\n+        if parent.file_name().map_or_else(\n+            || false,\n+            |f| {\n+                f.to_string_lossy() == folder_to_find\n+                    && parent\n+                        .parent()\n+                        .and_then(|f| f.file_name())\n+                        .map_or_else(|| false, |f| f == parent_folder_to_find)\n+            },\n+        ) {\n+            true\n+        } else {\n+            is_in(parent, parent_folder_to_find, folder_to_find)\n+        }\n+    } else {\n+        false\n+    }\n+}\n+\n pub fn check(path: &Path, bad: &mut bool) {\n     super::walk(path, &mut super::filter_dirs, &mut |entry, contents| {\n         let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n-        let extensions = [\".rs\", \".py\", \".js\", \".sh\", \".c\", \".cpp\", \".h\", \".md\"];\n+        let extensions = [\".rs\", \".py\", \".js\", \".sh\", \".c\", \".cpp\", \".h\", \".md\", \".css\"];\n         if extensions.iter().all(|e| !filename.ends_with(e)) || filename.starts_with(\".#\") {\n             return;\n         }\n \n+        let is_style_file = filename.ends_with(\".css\");\n         let under_rustfmt = filename.ends_with(\".rs\") &&\n             // This list should ideally be sourced from rustfmt.toml but we don't want to add a toml\n             // parser to tidy.\n@@ -161,6 +184,10 @@ pub fn check(path: &Path, bad: &mut bool) {\n             // currently), just the long error code explanation ones.\n             return;\n         }\n+        if is_style_file && !is_in(file, \"src\", \"librustdoc\") {\n+            // We only check CSS files in rustdoc.\n+            return;\n+        }\n \n         if contents.is_empty() {\n             tidy_error!(bad, \"{}: empty file\", file.display());\n@@ -172,8 +199,9 @@ pub fn check(path: &Path, bad: &mut bool) {\n             COLS\n         };\n \n-        let can_contain =\n-            contents.contains(\"// ignore-tidy-\") || contents.contains(\"# ignore-tidy-\");\n+        let can_contain = contents.contains(\"// ignore-tidy-\")\n+            || contents.contains(\"# ignore-tidy-\")\n+            || contents.contains(\"/* ignore-tidy-\");\n         // Enable testing ICE's that require specific (untidy)\n         // file formats easily eg. `issue-1234-ignore-tidy.rs`\n         if filename.contains(\"ignore-tidy\") {\n@@ -208,12 +236,15 @@ pub fn check(path: &Path, bad: &mut bool) {\n                     &format!(\"line longer than {} chars\", max_columns)\n                 );\n             }\n-            if line.contains('\\t') {\n+            if !is_style_file && line.contains('\\t') {\n                 suppressible_tidy_err!(err, skip_tab, \"tab character\");\n             }\n             if line.ends_with(' ') || line.ends_with('\\t') {\n                 suppressible_tidy_err!(err, skip_end_whitespace, \"trailing whitespace\");\n             }\n+            if is_style_file && line.starts_with(' ') {\n+                err(\"CSS files use tabs for indent\");\n+            }\n             if line.contains('\\r') {\n                 suppressible_tidy_err!(err, skip_cr, \"CR character\");\n             }"}]}