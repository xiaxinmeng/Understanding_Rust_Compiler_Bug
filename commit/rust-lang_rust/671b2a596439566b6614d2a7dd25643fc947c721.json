{"sha": "671b2a596439566b6614d2a7dd25643fc947c721", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MWIyYTU5NjQzOTU2NmI2NjE0ZDJhN2RkMjU2NDNmYzk0N2M3MjE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-04-26T09:37:03Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-30T16:18:33Z"}, "message": "Remove the `rustc_const_math` crate", "tree": {"sha": "a1bd7fc008fd3ee2aec42808170a7517644175ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1bd7fc008fd3ee2aec42808170a7517644175ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/671b2a596439566b6614d2a7dd25643fc947c721", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrnQdksHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MATI\n9BAAhw8TvlD0VdTIO5Ec9QTgdrgIC5PLMqy7d3mDlu2T+NTkZ71jWgdGoZejxckH\niOFmrQABzaqU5Q8MSi7CLMCQFksmY+ECR33gv5ofFxhHsQqZ1EqUurJLGVE3Wx1f\nvUbVebMzY9vqpE+16tVg/dAD/683U43sCiVmEdRT9KjzF7z8ErgXLuxWcDJohkJl\nXAzqt3xvkRvSybsV8nl4Tj/SHRq37pv/vvsd9mp31ys2KIuucl3TDe1lzZJzz+io\nSlvF5X8O4S3wJeZrJ1vBQSUMUGf1lvRRb4YwEb/2Bo6dtQY2RMWqFR+KvstzmMaF\nbX4Uf7uRV+0DvX9pkww9eVJvFBSxEplvDWSh6oMN3yOsIPzrH1I7R3cbfMZZ2ACZ\nFqFnNORSsxw5BdCpQk9en66Hjw7yr/EQolfxAVznM/ZxA8QNvTPNnGihy8ezWFmZ\nr7V96z3sPfHf1pfdssENi3BWZEnb74ZQFyDf6K8mEuOcAsVcDF2we4ud2ouBLOGx\n6hGHmlB3Wrs/miSqeNqcSLIjPoT3ul7lQtyalGFNUvMqsx0Lt1vM8AcLkgEz8ede\ncLUD8JWOm1wuhoAi1PD9ln0Eiz39pyDqRV1UOVb1Urr1mqltn/Us2OWO7tzAabF3\n4xgYb1j0zRKsroo9tk8pE59yVlPNsKRxx8KLyvsRrsg11Ag=\n=M4Qm\n-----END PGP SIGNATURE-----", "payload": "tree a1bd7fc008fd3ee2aec42808170a7517644175ab\nparent cf103e56bd0bfdc3ef7202ba774a1981adb36a46\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1524735423 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1525105113 +0200\n\nRemove the `rustc_const_math` crate\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/671b2a596439566b6614d2a7dd25643fc947c721", "html_url": "https://github.com/rust-lang/rust/commit/671b2a596439566b6614d2a7dd25643fc947c721", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/671b2a596439566b6614d2a7dd25643fc947c721/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf103e56bd0bfdc3ef7202ba774a1981adb36a46", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf103e56bd0bfdc3ef7202ba774a1981adb36a46", "html_url": "https://github.com/rust-lang/rust/commit/cf103e56bd0bfdc3ef7202ba774a1981adb36a46"}], "stats": {"total": 192, "additions": 60, "deletions": 132}, "files": [{"sha": "af108188ce0f476b5d40da5a697701b1be49b65c", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -19,7 +19,6 @@ log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n proc_macro = { path = \"../libproc_macro\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_target = { path = \"../librustc_target\" }\n-rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n serialize = { path = \"../libserialize\" }"}, {"sha": "bbc43987c99de7cffa354b0ab971ce24f7360cf6", "filename": "src/librustc/ich/impls_const_math.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc%2Fich%2Fimpls_const_math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc%2Fich%2Fimpls_const_math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_const_math.rs?ref=cf103e56bd0bfdc3ef7202ba774a1981adb36a46", "patch": "@@ -1,29 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! This module contains `HashStable` implementations for various data types\n-//! from `rustc_const_math` in no particular order.\n-\n-impl_stable_hash_for!(enum ::rustc_const_math::ConstMathErr {\n-    Overflow(op),\n-    DivisionByZero,\n-    RemainderByZero,\n-});\n-\n-impl_stable_hash_for!(enum ::rustc_const_math::Op {\n-    Add,\n-    Sub,\n-    Mul,\n-    Div,\n-    Rem,\n-    Shr,\n-    Shl,\n-    Neg,\n-});"}, {"sha": "92a8ee28168cf5af1c5ed2c1e296112b3c2f5f3c", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -669,6 +669,23 @@ for ::mir::interpret::EvalError<'gcx> {\n     }\n }\n \n+impl_stable_hash_for!(enum mir::interpret::ConstMathErr {\n+    Overflow(op),\n+    DivisionByZero,\n+    RemainderByZero,\n+});\n+\n+impl_stable_hash_for!(enum mir::interpret::Op {\n+    Add,\n+    Sub,\n+    Mul,\n+    Div,\n+    Rem,\n+    Shr,\n+    Shl,\n+    Neg,\n+});\n+\n impl_stable_hash_for!(enum mir::interpret::Lock {\n     NoLock,\n     WriteLock(dl),"}, {"sha": "a0c6bbbb2393f83929c88980f2740ac515d6f4dc", "filename": "src/librustc/ich/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fmod.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -18,7 +18,6 @@ mod fingerprint;\n mod caching_codemap_view;\n mod hcx;\n \n-mod impls_const_math;\n mod impls_cstore;\n mod impls_hir;\n mod impls_mir;"}, {"sha": "9c06c9055fbe9eae49121be4181e23f06756d415", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -85,7 +85,6 @@ extern crate libc;\n extern crate rustc_target;\n #[macro_use] extern crate rustc_data_structures;\n extern crate serialize;\n-extern crate rustc_const_math;\n extern crate rustc_errors as errors;\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}, {"sha": "fff555a8976c3398db2a5c0e8babfa8b258dd86f", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -8,7 +8,6 @@ use super::{\n     MemoryPointer, Lock, AccessKind\n };\n \n-use rustc_const_math::ConstMathErr;\n use syntax::codemap::Span;\n use backtrace::Backtrace;\n \n@@ -304,3 +303,41 @@ impl<'tcx> fmt::Display for EvalError<'tcx> {\n         }\n     }\n }\n+\n+#[derive(Debug, PartialEq, Eq, Clone, RustcEncodable, RustcDecodable)]\n+pub enum ConstMathErr {\n+    Overflow(Op),\n+    DivisionByZero,\n+    RemainderByZero,\n+}\n+pub use self::ConstMathErr::*;\n+\n+#[derive(Debug, PartialEq, Eq, Clone, RustcEncodable, RustcDecodable)]\n+pub enum Op {\n+    Add,\n+    Sub,\n+    Mul,\n+    Div,\n+    Rem,\n+    Shr,\n+    Shl,\n+    Neg,\n+}\n+\n+impl ConstMathErr {\n+    pub fn description(&self) -> &'static str {\n+        use self::Op::*;\n+        match *self {\n+            Overflow(Add) => \"attempt to add with overflow\",\n+            Overflow(Sub) => \"attempt to subtract with overflow\",\n+            Overflow(Mul) => \"attempt to multiply with overflow\",\n+            Overflow(Div) => \"attempt to divide with overflow\",\n+            Overflow(Rem) => \"attempt to calculate the remainder with overflow\",\n+            Overflow(Neg) => \"attempt to negate with overflow\",\n+            Overflow(Shr) => \"attempt to shift right with overflow\",\n+            Overflow(Shl) => \"attempt to shift left with overflow\",\n+            DivisionByZero => \"attempt to divide by zero\",\n+            RemainderByZero => \"attempt to calculate the remainder with a divisor of zero\",\n+        }\n+    }\n+}"}, {"sha": "fe29222e883ce73250df5794dddc07a06073dc84", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -8,7 +8,7 @@ macro_rules! err {\n mod error;\n mod value;\n \n-pub use self::error::{EvalError, EvalResult, EvalErrorKind};\n+pub use self::error::{EvalError, EvalResult, EvalErrorKind, Op, ConstMathErr};\n \n pub use self::value::{PrimVal, PrimValKind, Value, Pointer};\n "}, {"sha": "3c4b9ae33519e2f72760a002124a34c405603f79", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -15,7 +15,6 @@\n use graphviz::IntoCow;\n use middle::const_val::ConstVal;\n use middle::region;\n-use rustc_const_math::ConstMathErr;\n use rustc_data_structures::sync::{Lrc};\n use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use rustc_data_structures::control_flow_graph::dominators::{Dominators, dominators};\n@@ -26,7 +25,7 @@ use rustc_serialize as serialize;\n use hir::def::CtorKind;\n use hir::def_id::DefId;\n use mir::visit::MirVisitable;\n-use mir::interpret::{Value, PrimVal};\n+use mir::interpret::{Value, PrimVal, ConstMathErr};\n use ty::subst::{Subst, Substs};\n use ty::{self, AdtDef, CanonicalTy, ClosureSubsts, Region, Ty, TyCtxt, GeneratorInterior};\n use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};"}, {"sha": "41310ede3e085a0928288779615792ea79dd8055", "filename": "src/librustc_const_math/Cargo.toml", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc_const_math%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc_const_math%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2FCargo.toml?ref=cf103e56bd0bfdc3ef7202ba774a1981adb36a46", "patch": "@@ -1,14 +0,0 @@\n-[package]\n-authors = [\"The Rust Project Developers\"]\n-name = \"rustc_const_math\"\n-version = \"0.0.0\"\n-\n-[lib]\n-name = \"rustc_const_math\"\n-path = \"lib.rs\"\n-crate-type = [\"dylib\"]\n-\n-[dependencies]\n-rustc_apfloat = { path = \"../librustc_apfloat\" }\n-serialize = { path = \"../libserialize\" }\n-syntax = { path = \"../libsyntax\" }"}, {"sha": "552932993ecf866f62899caab26a69f94fee521f", "filename": "src/librustc_const_math/err.rs", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc_const_math%2Ferr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc_const_math%2Ferr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Ferr.rs?ref=cf103e56bd0bfdc3ef7202ba774a1981adb36a46", "patch": "@@ -1,47 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[derive(Debug, PartialEq, Eq, Clone, RustcEncodable, RustcDecodable)]\n-pub enum ConstMathErr {\n-    Overflow(Op),\n-    DivisionByZero,\n-    RemainderByZero,\n-}\n-pub use self::ConstMathErr::*;\n-\n-#[derive(Debug, PartialEq, Eq, Clone, RustcEncodable, RustcDecodable)]\n-pub enum Op {\n-    Add,\n-    Sub,\n-    Mul,\n-    Div,\n-    Rem,\n-    Shr,\n-    Shl,\n-    Neg,\n-}\n-\n-impl ConstMathErr {\n-    pub fn description(&self) -> &'static str {\n-        use self::Op::*;\n-        match *self {\n-            Overflow(Add) => \"attempt to add with overflow\",\n-            Overflow(Sub) => \"attempt to subtract with overflow\",\n-            Overflow(Mul) => \"attempt to multiply with overflow\",\n-            Overflow(Div) => \"attempt to divide with overflow\",\n-            Overflow(Rem) => \"attempt to calculate the remainder with overflow\",\n-            Overflow(Neg) => \"attempt to negate with overflow\",\n-            Overflow(Shr) => \"attempt to shift right with overflow\",\n-            Overflow(Shl) => \"attempt to shift left with overflow\",\n-            DivisionByZero => \"attempt to divide by zero\",\n-            RemainderByZero => \"attempt to calculate the remainder with a divisor of zero\",\n-        }\n-    }\n-}"}, {"sha": "08996b892f9a62cd66c30d117b752843879bf073", "filename": "src/librustc_const_math/lib.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc_const_math%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf103e56bd0bfdc3ef7202ba774a1981adb36a46/src%2Flibrustc_const_math%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Flib.rs?ref=cf103e56bd0bfdc3ef7202ba774a1981adb36a46", "patch": "@@ -1,26 +0,0 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Rusty Mathematics\n-//!\n-//! # Note\n-//!\n-//! This API is completely unstable and subject to change.\n-\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n-\n-\n-extern crate serialize as rustc_serialize; // used by deriving\n-\n-mod err;\n-\n-pub use err::{ConstMathErr, Op};"}, {"sha": "62964745b6f9eb49ff8c8730a4375dd4dd1b255a", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -16,7 +16,6 @@ log = \"0.4\"\n log_settings = \"0.1.1\"\n rustc = { path = \"../librustc\" }\n rustc_target = { path = \"../librustc_target\" }\n-rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n serialize = { path = \"../libserialize\" }"}, {"sha": "a3798f3ed4c65ac38f49f9809acc68a14099cdf3", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -10,7 +10,6 @@\n \n //! See docs in build/expr/mod.rs\n \n-use rustc_const_math::{ConstMathErr, Op};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::indexed_vec::Idx;\n \n@@ -21,7 +20,7 @@ use rustc::middle::const_val::ConstVal;\n use rustc::middle::region;\n use rustc::ty::{self, Ty};\n use rustc::mir::*;\n-use rustc::mir::interpret::{Value, PrimVal};\n+use rustc::mir::interpret::{Value, PrimVal, ConstMathErr, Op};\n use syntax_pos::Span;\n \n impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {"}, {"sha": "97d1fb0a698b6f77b7e11e30cb956513f777533d", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -50,8 +50,6 @@ extern crate rustc_errors;\n extern crate syntax;\n extern crate syntax_pos;\n extern crate rustc_target;\n-extern crate rustc_const_math;\n-extern crate core; // for NonZero\n extern crate log_settings;\n extern crate rustc_apfloat;\n extern crate byteorder;"}, {"sha": "a4dd02e97b233573d417e789950265498e4b4634", "filename": "src/librustc_trans/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_trans%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_trans%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2FCargo.toml?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -21,7 +21,6 @@ rustc-demangle = \"0.1.4\"\n rustc_allocator = { path = \"../librustc_allocator\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_target = { path = \"../librustc_target\" }\n-rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_incremental = { path = \"../librustc_incremental\" }"}, {"sha": "306f4179e4f5729cc94cc558d36574f38fbcda32", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -43,7 +43,6 @@ extern crate rustc_mir;\n extern crate rustc_allocator;\n extern crate rustc_apfloat;\n extern crate rustc_target;\n-extern crate rustc_const_math;\n #[macro_use] extern crate rustc_data_structures;\n extern crate rustc_demangle;\n extern crate rustc_incremental;"}, {"sha": "7c854ef04b7ca66857778d3b7ce4f0bc2a67d343", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671b2a596439566b6614d2a7dd25643fc947c721/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=671b2a596439566b6614d2a7dd25643fc947c721", "patch": "@@ -311,8 +311,8 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n                 // checked operation, just a comparison with the minimum\n                 // value, so we have to check for the assert message.\n                 if !bx.cx.check_overflow {\n-                    use rustc_const_math::ConstMathErr::Overflow;\n-                    use rustc_const_math::Op::Neg;\n+                    use rustc::mir::interpret::ConstMathErr::Overflow;\n+                    use rustc::mir::interpret::Op::Neg;\n \n                     if let mir::AssertMessage::Math(Overflow(Neg)) = *msg {\n                         const_cond = Some(expected);"}]}