{"sha": "616cf52358a66f0d546aac67a58958e2b50c5f0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNmNmNTIzNThhNjZmMGQ1NDZhYWM2N2E1ODk1OGUyYjUwYzVmMGI=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-04T16:30:41Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-11T08:43:54Z"}, "message": "Extend union-nodrop.rs test", "tree": {"sha": "a2d6a37962f39b93d273f9a2ac4ce33dfb508f95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2d6a37962f39b93d273f9a2ac4ce33dfb508f95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/616cf52358a66f0d546aac67a58958e2b50c5f0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/616cf52358a66f0d546aac67a58958e2b50c5f0b", "html_url": "https://github.com/rust-lang/rust/commit/616cf52358a66f0d546aac67a58958e2b50c5f0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/616cf52358a66f0d546aac67a58958e2b50c5f0b/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc512d2cdf5ab654e55e25725b7243812f4630d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc512d2cdf5ab654e55e25725b7243812f4630d1", "html_url": "https://github.com/rust-lang/rust/commit/fc512d2cdf5ab654e55e25725b7243812f4630d1"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "59282bec59b84de9cbf6757e0c78ef1197e21406", "filename": "src/test/ui/union/union-nodrop.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/616cf52358a66f0d546aac67a58958e2b50c5f0b/src%2Ftest%2Fui%2Funion%2Funion-nodrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/616cf52358a66f0d546aac67a58958e2b50c5f0b/src%2Ftest%2Fui%2Funion%2Funion-nodrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-nodrop.rs?ref=616cf52358a66f0d546aac67a58958e2b50c5f0b", "patch": "@@ -13,10 +13,14 @@ impl Drop for NeedDrop {\n     fn drop(&mut self) {}\n }\n \n-// Constant expressions allow `NoDrop` to go out of scope,\n+// Constant expressios allow `NoDrop` to go out of scope,\n // unlike a value of the interior type implementing `Drop`.\n static X: () = (NoDrop { inner: ManuallyDrop::new(NeedDrop) }, ()).1;\n \n+const Y: () = (NoDrop { inner: ManuallyDrop::new(NeedDrop) }, ()).1;\n+\n+const fn _f() { (NoDrop { inner: ManuallyDrop::new(NeedDrop) }, ()).1 }\n+\n // A union that scrubs the drop glue from its inner type\n union NoDrop<T> { inner: ManuallyDrop<T> }\n "}]}