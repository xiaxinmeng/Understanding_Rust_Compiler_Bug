{"sha": "3ef933647ab6adf841d8323a712101f37851eff9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZjkzMzY0N2FiNmFkZjg0MWQ4MzIzYTcxMjEwMWYzNzg1MWVmZjk=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-07T02:41:11Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-07T02:41:11Z"}, "message": "syntax: print expansion info from #[attribute] macros in the correct\nformat.\n\nPreviously, any attempt to use this information from inside something\nlike #[deriving(Foo)] would result in it printing like `deriving(Foo)!`.", "tree": {"sha": "545ae6c4fbd16b29189abb7bee7ef259a92b50b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/545ae6c4fbd16b29189abb7bee7ef259a92b50b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ef933647ab6adf841d8323a712101f37851eff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef933647ab6adf841d8323a712101f37851eff9", "html_url": "https://github.com/rust-lang/rust/commit/3ef933647ab6adf841d8323a712101f37851eff9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ef933647ab6adf841d8323a712101f37851eff9/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09a879460cfa42ecfd4a769bdc21e1d55b795bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/09a879460cfa42ecfd4a769bdc21e1d55b795bd8", "html_url": "https://github.com/rust-lang/rust/commit/09a879460cfa42ecfd4a769bdc21e1d55b795bd8"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "cf8dbfdcad6a5e7cef768b3e6d9573a528142991", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=3ef933647ab6adf841d8323a712101f37851eff9", "patch": "@@ -18,7 +18,7 @@ use std::vec;\n use syntax::ast_util::*;\n use syntax::attr::AttrMetaMethods;\n use syntax::attr;\n-use syntax::codemap::{dummy_sp, Span, ExpnInfo, NameAndSpan};\n+use syntax::codemap::{dummy_sp, Span, ExpnInfo, NameAndSpan, MacroAttribute};\n use syntax::codemap;\n use syntax::ext::base::ExtCtxt;\n use syntax::fold::ast_fold;\n@@ -158,6 +158,7 @@ fn generate_test_harness(sess: session::Session, crate: ast::Crate)\n         call_site: dummy_sp(),\n         callee: NameAndSpan {\n             name: @\"test\",\n+            format: MacroAttribute,\n             span: None\n         }\n     });"}, {"sha": "f4cb19bfa247400c16883211e130bb160d83a5e3", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=3ef933647ab6adf841d8323a712101f37851eff9", "patch": "@@ -161,8 +161,22 @@ pub struct LocWithOpt {\n // used to be structural records. Better names, anyone?\n pub struct FileMapAndLine {fm: @FileMap, line: uint}\n pub struct FileMapAndBytePos {fm: @FileMap, pos: BytePos}\n+\n #[deriving(IterBytes)]\n-pub struct NameAndSpan {name: @str, span: Option<Span>}\n+pub enum MacroFormat {\n+    // e.g. #[deriving(...)] <item>\n+    MacroAttribute,\n+    // e.g. `format!()`\n+    MacroBang\n+}\n+\n+#[deriving(IterBytes)]\n+pub struct NameAndSpan {\n+    name: @str,\n+    // the format with which the macro was invoked.\n+    format: MacroFormat,\n+    span: Option<Span>\n+}\n \n /// Extra information for tracking macro expansion of spans\n #[deriving(IterBytes)]"}, {"sha": "59f33bc77696fcf9757f172142e789bb77b1d5ee", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=3ef933647ab6adf841d8323a712101f37851eff9", "patch": "@@ -342,8 +342,13 @@ fn highlight_lines(cm: @codemap::CodeMap,\n fn print_macro_backtrace(cm: @codemap::CodeMap, sp: Span) {\n     for ei in sp.expn_info.iter() {\n         let ss = ei.callee.span.as_ref().map_default(~\"\", |span| cm.span_to_str(*span));\n+        let (pre, post) = match ei.callee.format {\n+            codemap::MacroAttribute => (\"#[\", \"]\"),\n+            codemap::MacroBang => (\"\", \"!\")\n+        };\n+\n         print_diagnostic(ss, note,\n-                         format!(\"in expansion of {}!\", ei.callee.name));\n+                         format!(\"in expansion of {}{}{}\", pre, ei.callee.name, post));\n         let ss = cm.span_to_str(ei.call_site);\n         print_diagnostic(ss, note, \"expansion site\");\n         print_macro_backtrace(cm, ei.call_site);"}, {"sha": "4bb35457182f75db8cd1d942d43bb652e02f6abc", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef933647ab6adf841d8323a712101f37851eff9/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=3ef933647ab6adf841d8323a712101f37851eff9", "patch": "@@ -18,7 +18,7 @@ use ext::build::AstBuilder;\n use attr;\n use attr::AttrMetaMethods;\n use codemap;\n-use codemap::{Span, Spanned, ExpnInfo, NameAndSpan};\n+use codemap::{Span, Spanned, ExpnInfo, NameAndSpan, MacroBang, MacroAttribute};\n use ext::base::*;\n use fold::*;\n use opt_vec;\n@@ -69,6 +69,7 @@ pub fn expand_expr(extsbox: @mut SyntaxEnv,\n                                 call_site: e.span,\n                                 callee: NameAndSpan {\n                                     name: extnamestr,\n+                                    format: MacroBang,\n                                     span: exp_span,\n                                 },\n                             });\n@@ -257,6 +258,7 @@ pub fn expand_mod_items(extsbox: @mut SyntaxEnv,\n                       call_site: attr.span,\n                       callee: NameAndSpan {\n                           name: mname,\n+                          format: MacroAttribute,\n                           span: None\n                       }\n                   });\n@@ -352,6 +354,7 @@ pub fn expand_item_mac(extsbox: @mut SyntaxEnv,\n                 call_site: it.span,\n                 callee: NameAndSpan {\n                     name: extnamestr,\n+                    format: MacroBang,\n                     span: span\n                 }\n             });\n@@ -370,6 +373,7 @@ pub fn expand_item_mac(extsbox: @mut SyntaxEnv,\n                 call_site: it.span,\n                 callee: NameAndSpan {\n                     name: extnamestr,\n+                    format: MacroBang,\n                     span: span\n                 }\n             });\n@@ -459,6 +463,7 @@ pub fn expand_stmt(extsbox: @mut SyntaxEnv,\n                 call_site: s.span,\n                 callee: NameAndSpan {\n                     name: extnamestr,\n+                    format: MacroBang,\n                     span: exp_span,\n                 }\n             });"}]}