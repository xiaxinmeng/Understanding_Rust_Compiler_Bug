{"sha": "d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5YzFmNWNmNGY3NjE0NTUwMjRmYzdiOWRkNTg2YjFhNjY5YmNiMGY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-28T11:12:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-28T11:12:09Z"}, "message": "Rollup merge of #71311 - estebank:fn-type-param, r=varkor\n\nOn `FnDef` type annotation suggestion, use fn-pointer output\n\nAddress the last point in #71209.", "tree": {"sha": "4352b7c8ce84447a51cfced6b5a22f4f157e2a34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4352b7c8ce84447a51cfced6b5a22f4f157e2a34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeqA+KCRBK7hj4Ov3rIwAAdHIIAGaqwMPGjLK9DJBrwcrDWL/x\nQJRO8h+XiRp6bNoVJX4InjnUqW8+CQAlz7e9SMeUWXjewq5taSqGm7tGnt3DLj+Z\ndbwHs5FVIQqF6DNUcZHJgRHD0xMR6j5DVVVzaDniH/BHm9bYHir8z85eChaRYKvV\ne61kFz0BolAVjUNLo0gzQUu5uMSt+Bvs6LCk9pnfK6rTNqCe7beSIfMuKWIzBZYb\nBKst65vZnnkIbRI+wL4SDsRPi3OG87ZEIVM3MYzpIuWmZZGAiylQ7LVxiWL72TtE\nUupkxG7WhWgC427NxmS2P5VWPMDTFG3gF/Y7HkqJOhHz5I37Ahna+Q9Qbr9Bi2k=\n=j5pm\n-----END PGP SIGNATURE-----\n", "payload": "tree 4352b7c8ce84447a51cfced6b5a22f4f157e2a34\nparent fb5615a4771ea3d54256f969dc84d2dfd38d812c\nparent 432ab343f8c75e657d25713addc2ee0cd5110542\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588072329 +0200\ncommitter GitHub <noreply@github.com> 1588072329 +0200\n\nRollup merge of #71311 - estebank:fn-type-param, r=varkor\n\nOn `FnDef` type annotation suggestion, use fn-pointer output\n\nAddress the last point in #71209.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f", "html_url": "https://github.com/rust-lang/rust/commit/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb5615a4771ea3d54256f969dc84d2dfd38d812c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb5615a4771ea3d54256f969dc84d2dfd38d812c", "html_url": "https://github.com/rust-lang/rust/commit/fb5615a4771ea3d54256f969dc84d2dfd38d812c"}, {"sha": "432ab343f8c75e657d25713addc2ee0cd5110542", "url": "https://api.github.com/repos/rust-lang/rust/commits/432ab343f8c75e657d25713addc2ee0cd5110542", "html_url": "https://github.com/rust-lang/rust/commit/432ab343f8c75e657d25713addc2ee0cd5110542"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "93c8e505697b40230eace65f36e1135935a348b3", "filename": "src/librustc_infer/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f", "patch": "@@ -257,7 +257,13 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 None\n             };\n             printer.name_resolver = Some(Box::new(&getter));\n-            let _ = ty.print(printer);\n+            let _ = if let ty::FnDef(..) = ty.kind {\n+                // We don't want the regular output for `fn`s because it includes its path in\n+                // invalid pseduo-syntax, we want the `fn`-pointer output instead.\n+                ty.fn_sig(self.tcx).print(printer)\n+            } else {\n+                ty.print(printer)\n+            };\n             s\n         };\n "}, {"sha": "2f140f823afb923707f116ba589670d9c35542ae", "filename": "src/test/ui/suggestions/fn-needing-specified-return-type-param.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-needing-specified-return-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-needing-specified-return-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-needing-specified-return-type-param.rs?ref=d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f", "patch": "@@ -0,0 +1,5 @@\n+fn f<A>() -> A { unimplemented!() }\n+fn foo() {\n+    let _ = f; //~ ERROR type annotations needed for `fn() -> A`\n+}\n+fn main() {}"}, {"sha": "b59a3818e704253358074c2a397e6c513a3dbe4b", "filename": "src/test/ui/suggestions/fn-needing-specified-return-type-param.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-needing-specified-return-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-needing-specified-return-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-needing-specified-return-type-param.stderr?ref=d9c1f5cf4f761455024fc7b9dd586b1a669bcb0f", "patch": "@@ -0,0 +1,11 @@\n+error[E0282]: type annotations needed for `fn() -> A`\n+  --> $DIR/fn-needing-specified-return-type-param.rs:3:13\n+   |\n+LL |     let _ = f;\n+   |         -   ^ cannot infer type for type parameter `A` declared on the function `f`\n+   |         |\n+   |         consider giving this pattern the explicit type `fn() -> A`, where the type parameter `A` is specified\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}]}