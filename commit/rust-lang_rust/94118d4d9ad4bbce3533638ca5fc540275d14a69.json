{"sha": "94118d4d9ad4bbce3533638ca5fc540275d14a69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MTE4ZDRkOWFkNGJiY2UzNTMzNjM4Y2E1ZmM1NDAyNzVkMTRhNjk=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-16T19:22:58Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Make an assert message consistent with other asserts.", "tree": {"sha": "30dd2169f8549bf1923554d94d1000f1c4928b04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30dd2169f8549bf1923554d94d1000f1c4928b04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94118d4d9ad4bbce3533638ca5fc540275d14a69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94118d4d9ad4bbce3533638ca5fc540275d14a69", "html_url": "https://github.com/rust-lang/rust/commit/94118d4d9ad4bbce3533638ca5fc540275d14a69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94118d4d9ad4bbce3533638ca5fc540275d14a69/comments", "author": null, "committer": null, "parents": [{"sha": "552080a5b7c4ec01d3ed74b411bfefaaebf70feb", "url": "https://api.github.com/repos/rust-lang/rust/commits/552080a5b7c4ec01d3ed74b411bfefaaebf70feb", "html_url": "https://github.com/rust-lang/rust/commit/552080a5b7c4ec01d3ed74b411bfefaaebf70feb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "085a53862fd44b6ca7eb3c5a8fff9e400571c55b", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94118d4d9ad4bbce3533638ca5fc540275d14a69/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94118d4d9ad4bbce3533638ca5fc540275d14a69/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=94118d4d9ad4bbce3533638ca5fc540275d14a69", "patch": "@@ -206,7 +206,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n     let res: InterpResult<'_, i64> = (|| {\n         // Main loop.\n         while ecx.schedule()? {\n-            assert!(ecx.step()?, \"Bug: a terminated thread was scheduled for execution.\");\n+            assert!(ecx.step()?, \"a terminated thread was scheduled for execution\");\n             ecx.process_diagnostics();\n         }\n         // Read the return code pointer *before* we run TLS destructors, to assert"}]}