{"sha": "638db28c472c1edadc3c37f900df28f14cca7665", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzOGRiMjhjNDcyYzFlZGFkYzNjMzdmOTAwZGYyOGYxNGNjYTc2NjU=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2012-08-30T02:24:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-31T23:20:36Z"}, "message": "jit: Correct formatting and argv[0] for JITted programs", "tree": {"sha": "25b13f38ff3eec2d63eb41defef2ffe016d990e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25b13f38ff3eec2d63eb41defef2ffe016d990e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/638db28c472c1edadc3c37f900df28f14cca7665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/638db28c472c1edadc3c37f900df28f14cca7665", "html_url": "https://github.com/rust-lang/rust/commit/638db28c472c1edadc3c37f900df28f14cca7665", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/638db28c472c1edadc3c37f900df28f14cca7665/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efb576a60dbd12cdd9c732cb5d8b202283b9864a", "url": "https://api.github.com/repos/rust-lang/rust/commits/efb576a60dbd12cdd9c732cb5d8b202283b9864a", "html_url": "https://github.com/rust-lang/rust/commit/efb576a60dbd12cdd9c732cb5d8b202283b9864a"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "65835e9b470ac50eb250410c4425d81bbef42658", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/638db28c472c1edadc3c37f900df28f14cca7665/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/638db28c472c1edadc3c37f900df28f14cca7665/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=638db28c472c1edadc3c37f900df28f14cca7665", "patch": "@@ -51,7 +51,9 @@ fn run_rfail_test(config: config, props: test_props, testfile: &Path) {\n     let procres = if !config.jit {\n         let procres = compile_test(config, props, testfile);\n \n-        if procres.status != 0 { fatal_procres(~\"compilation failed!\", procres); }\n+        if procres.status != 0 {\n+            fatal_procres(~\"compilation failed!\", procres);\n+        }\n \n         exec_compiled_test(config, props, testfile)\n     } else {\n@@ -83,11 +85,15 @@ fn run_rpass_test(config: config, props: test_props, testfile: &Path) {\n     if !config.jit {\n         let mut procres = compile_test(config, props, testfile);\n \n-        if procres.status != 0 { fatal_procres(~\"compilation failed!\", procres); }\n+        if procres.status != 0 {\n+            fatal_procres(~\"compilation failed!\", procres);\n+        }\n \n         procres = exec_compiled_test(config, props, testfile);\n \n-        if procres.status != 0 { fatal_procres(~\"test run failed!\", procres); }\n+        if procres.status != 0 {\n+            fatal_procres(~\"test run failed!\", procres);\n+        }\n     } else {\n         let mut procres = jit_test(config, props, testfile);\n "}, {"sha": "695bdcbc5ea99d631fe9fc6d0f6d982423596740", "filename": "src/rustc/back/link.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Flink.rs?ref=638db28c472c1edadc3c37f900df28f14cca7665", "patch": "@@ -85,22 +85,19 @@ mod jit {\n             m: ModuleRef,\n             opt: c_int,\n             stacks: bool) unsafe {\n-        let ptr = llvm::LLVMRustJIT(rusti::morestack_addr(), pm, m, opt, stacks);\n+        let ptr = llvm::LLVMRustJIT(rusti::morestack_addr(),\n+                                    pm, m, opt, stacks);\n \n         if ptr::is_null(ptr) {\n             llvm_err(sess, ~\"Could not JIT\");\n         } else {\n-            let bin = match os::self_exe_path() {\n-                Some(path) => path.to_str(),\n-                _ => ~\"rustc\"\n-            };\n             let closure = Closure {\n                 code: ptr,\n                 env: ptr::null()\n             };\n             let func: fn(~[~str]) = unsafe::transmute(closure);\n \n-            func(~[bin]);\n+            func(~[sess.opts.binary]);\n         }\n     }\n }"}, {"sha": "a1864357d60f828e103a1ef33106c8d6a5449bdd", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=638db28c472c1edadc3c37f900df28f14cca7665", "patch": "@@ -428,7 +428,8 @@ fn host_triple() -> ~str {\n         };\n }\n \n-fn build_session_options(matches: getopts::Matches,\n+fn build_session_options(binary: ~str,\n+                         matches: getopts::Matches,\n                          demitter: diagnostic::emitter) -> @session::options {\n     let crate_type = if opt_present(matches, ~\"lib\") {\n         session::lib_crate\n@@ -553,6 +554,7 @@ fn build_session_options(matches: getopts::Matches,\n           maybe_sysroot: sysroot_opt,\n           target_triple: target,\n           cfg: cfg,\n+          binary: binary,\n           test: test,\n           parse_only: parse_only,\n           no_trans: no_trans,\n@@ -736,7 +738,8 @@ mod test {\n               Err(f) => fail ~\"test_switch_implies_cfg_test: \" +\n                              getopts::fail_str(f)\n             };\n-        let sessopts = build_session_options(matches, diagnostic::emit);\n+        let sessopts = build_session_options(\n+            ~\"rustc\", matches, diagnostic::emit);\n         let sess = build_session(sessopts, diagnostic::emit);\n         let cfg = build_configuration(sess, ~\"whatever\", str_input(~\"\"));\n         assert (attr::contains_name(cfg, ~\"test\"));\n@@ -754,7 +757,8 @@ mod test {\n                     getopts::fail_str(f);\n               }\n             };\n-        let sessopts = build_session_options(matches, diagnostic::emit);\n+        let sessopts = build_session_options(\n+            ~\"rustc\", matches, diagnostic::emit);\n         let sess = build_session(sessopts, diagnostic::emit);\n         let cfg = build_configuration(sess, ~\"whatever\", str_input(~\"\"));\n         let test_items = attr::find_meta_items_by_name(cfg, ~\"test\");"}, {"sha": "2289a51e7c4765fc178b4722dc3bb4d115fb3e76", "filename": "src/rustc/driver/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Frustc.rs?ref=638db28c472c1edadc3c37f900df28f14cca7665", "patch": "@@ -166,7 +166,7 @@ fn run_compiler(args: ~[~str], demitter: diagnostic::emitter) {\n       _ => early_error(demitter, ~\"multiple input filenames provided\")\n     };\n \n-    let sopts = build_session_options(matches, demitter);\n+    let sopts = build_session_options(binary, matches, demitter);\n     let sess = build_session(sopts, demitter);\n     let odir = getopts::opt_maybe_str(matches, ~\"out-dir\");\n     let odir = option::map(odir, |o| Path(o));"}, {"sha": "a1785355af8e3ea2ae9c2804bb39314351bf77ec", "filename": "src/rustc/driver/session.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/638db28c472c1edadc3c37f900df28f14cca7665/src%2Frustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fsession.rs?ref=638db28c472c1edadc3c37f900df28f14cca7665", "patch": "@@ -114,6 +114,7 @@ type options =\n      maybe_sysroot: Option<Path>,\n      target_triple: ~str,\n      cfg: ast::crate_cfg,\n+     binary: ~str,\n      test: bool,\n      parse_only: bool,\n      no_trans: bool,\n@@ -256,6 +257,7 @@ fn basic_options() -> @options {\n         maybe_sysroot: None,\n         target_triple: driver::host_triple(),\n         cfg: ~[],\n+        binary: ~\"rustc\",\n         test: false,\n         parse_only: false,\n         no_trans: false,"}]}