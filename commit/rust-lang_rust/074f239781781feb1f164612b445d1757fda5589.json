{"sha": "074f239781781feb1f164612b445d1757fda5589", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NGYyMzk3ODE3ODFmZWIxZjE2NDYxMmI0NDVkMTc1N2ZkYTU1ODk=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2019-03-13T19:15:58Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-04-04T17:50:02Z"}, "message": "add mutable_borrow_reservation_conflict future-incompatibility lint.\n\nConvert the new 2-phase reservation errors into instances of the lint\nso that they will be controlled by that attribute.", "tree": {"sha": "ffd59abc910c474d06e5587523484073a1387d99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffd59abc910c474d06e5587523484073a1387d99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/074f239781781feb1f164612b445d1757fda5589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/074f239781781feb1f164612b445d1757fda5589", "html_url": "https://github.com/rust-lang/rust/commit/074f239781781feb1f164612b445d1757fda5589", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/074f239781781feb1f164612b445d1757fda5589/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0c3c00c59a41b8a8a232523cb58739c63169439", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0c3c00c59a41b8a8a232523cb58739c63169439", "html_url": "https://github.com/rust-lang/rust/commit/c0c3c00c59a41b8a8a232523cb58739c63169439"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "cbdeda7b902066da87fbab65b8ad9204fb7028f7", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/074f239781781feb1f164612b445d1757fda5589/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/074f239781781feb1f164612b445d1757fda5589/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=074f239781781feb1f164612b445d1757fda5589", "patch": "@@ -392,6 +392,12 @@ declare_lint! {\n     \"nested occurrence of `impl Trait` type\"\n }\n \n+declare_lint! {\n+    pub MUTABLE_BORROW_RESERVATION_CONFLICT,\n+    Warn,\n+    \"reservation of a two-phased borrow conflicts with other shared borrows\"\n+}\n+\n declare_lint_pass! {\n     /// Does nothing as a lint pass, but registers some `Lint`s\n     /// that are used by other parts of the compiler.\n@@ -457,6 +463,7 @@ declare_lint_pass! {\n         AMBIGUOUS_ASSOCIATED_ITEMS,\n         NESTED_IMPL_TRAIT,\n         DUPLICATE_MATCHER_BINDING_NAME,\n+        MUTABLE_BORROW_RESERVATION_CONFLICT,\n     ]\n }\n "}, {"sha": "07c505c6bde08e287f2883dae028b409ea133179", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/074f239781781feb1f164612b445d1757fda5589/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/074f239781781feb1f164612b445d1757fda5589/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=074f239781781feb1f164612b445d1757fda5589", "patch": "@@ -438,6 +438,11 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             reference: \"issue #59014 <https://github.com/rust-lang/rust/issues/59014>\",\n             edition: None,\n         },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(MUTABLE_BORROW_RESERVATION_CONFLICT),\n+            reference: \"issue #59159 <https://github.com/rust-lang/rust/issues/59159>\",\n+            edition: None,\n+        }\n         ]);\n \n     // Register renamed and removed lints."}, {"sha": "255dc2df5b898289e7883c1b17ebaa2279c91f7c", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/074f239781781feb1f164612b445d1757fda5589/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/074f239781781feb1f164612b445d1757fda5589/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=074f239781781feb1f164612b445d1757fda5589", "patch": "@@ -6,6 +6,7 @@ use rustc::hir::Node;\n use rustc::hir::def_id::DefId;\n use rustc::infer::InferCtxt;\n use rustc::lint::builtin::UNUSED_MUT;\n+use rustc::lint::builtin::{MUTABLE_BORROW_RESERVATION_CONFLICT};\n use rustc::middle::borrowck::SignalledError;\n use rustc::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n use rustc::mir::{\n@@ -26,7 +27,7 @@ use std::collections::BTreeMap;\n use std::mem;\n use std::rc::Rc;\n \n-use syntax_pos::Span;\n+use syntax_pos::{Span, DUMMY_SP};\n \n use crate::dataflow::indexes::{BorrowIndex, InitIndex, MoveOutIndex, MovePathIndex};\n use crate::dataflow::move_paths::{HasMoveData, LookupResult, MoveData, MoveError};\n@@ -262,11 +263,19 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n     }\n     mbcx.analyze_results(&mut state); // entry point for DataflowResultsConsumer\n \n-    // Buffer any reservation warnings.\n+    // Convert any reservation warnings into lints.\n     let reservation_warnings = mem::replace(&mut mbcx.reservation_warnings, Default::default());\n     for (_, (place, span, context, bk, borrow)) in reservation_warnings {\n-        let mut diag = mbcx.report_conflicting_borrow(context, (&place, span), bk, &borrow);\n-        downgrade_if_error(&mut diag);\n+        let mut initial_diag = mbcx.report_conflicting_borrow(context, (&place, span), bk, &borrow);\n+\n+        // Span and message don't matter; we overwrite them below anyway\n+        let mut diag = mbcx.infcx.tcx.struct_span_lint_hir(\n+            MUTABLE_BORROW_RESERVATION_CONFLICT, id, DUMMY_SP, \"\");\n+\n+        diag.message = initial_diag.styled_message().clone();\n+        diag.span = initial_diag.span.clone();\n+\n+        initial_diag.cancel();\n         diag.buffer(&mut mbcx.errors_buffer);\n     }\n "}]}