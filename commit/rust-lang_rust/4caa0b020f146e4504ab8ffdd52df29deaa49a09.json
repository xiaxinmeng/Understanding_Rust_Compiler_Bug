{"sha": "4caa0b020f146e4504ab8ffdd52df29deaa49a09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYWEwYjAyMGYxNDZlNDUwNGFiOGZmZGQ1MmRmMjlkZWFhNDlhMDk=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-21T00:04:36Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-21T00:05:34Z"}, "message": "Fixes bootstrapping with custom cargo/rustc.\n\nconfig.mk is now always read when parsing the configuration to prevent\nthis from reoccurring in the future, hopefully.", "tree": {"sha": "083db6230ee65f437a2b94926f651c62a00253fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/083db6230ee65f437a2b94926f651c62a00253fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4caa0b020f146e4504ab8ffdd52df29deaa49a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4caa0b020f146e4504ab8ffdd52df29deaa49a09", "html_url": "https://github.com/rust-lang/rust/commit/4caa0b020f146e4504ab8ffdd52df29deaa49a09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4caa0b020f146e4504ab8ffdd52df29deaa49a09/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29bce6e220f6fd2292d13d65fe503af7bf4852b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/29bce6e220f6fd2292d13d65fe503af7bf4852b7", "html_url": "https://github.com/rust-lang/rust/commit/29bce6e220f6fd2292d13d65fe503af7bf4852b7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "5ef18b89841f0e6f28598e6fe08048832ee13def", "filename": "src/bootstrap/bin/main.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4caa0b020f146e4504ab8ffdd52df29deaa49a09/src%2Fbootstrap%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4caa0b020f146e4504ab8ffdd52df29deaa49a09/src%2Fbootstrap%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fmain.rs?ref=4caa0b020f146e4504ab8ffdd52df29deaa49a09", "patch": "@@ -26,12 +26,6 @@ use bootstrap::{Flags, Config, Build};\n fn main() {\n     let args = env::args().skip(1).collect::<Vec<_>>();\n     let flags = Flags::parse(&args);\n-    let mut config = Config::parse(&flags.build, flags.config.clone());\n-\n-    // compat with `./configure` while we're still using that\n-    if std::fs::metadata(\"config.mk\").is_ok() {\n-        config.update_with_config_mk();\n-    }\n-\n+    let config = Config::parse(&flags.build, flags.config.clone());\n     Build::new(flags, config).build();\n }"}, {"sha": "902cd0997a8ed4227ef7703bc92d878556b11392", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4caa0b020f146e4504ab8ffdd52df29deaa49a09/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4caa0b020f146e4504ab8ffdd52df29deaa49a09/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=4caa0b020f146e4504ab8ffdd52df29deaa49a09", "patch": "@@ -15,7 +15,7 @@\n \n use std::collections::HashMap;\n use std::env;\n-use std::fs::File;\n+use std::fs::{self, File};\n use std::io::prelude::*;\n use std::path::PathBuf;\n use std::process;\n@@ -410,6 +410,12 @@ impl Config {\n             set(&mut config.rust_dist_src, t.src_tarball);\n         }\n \n+\n+        // compat with `./configure` while we're still using that\n+        if fs::metadata(\"config.mk\").is_ok() {\n+            config.update_with_config_mk();\n+        }\n+\n         return config\n     }\n \n@@ -418,7 +424,7 @@ impl Config {\n     /// While we still have `./configure` this implements the ability to decode\n     /// that configuration into this. This isn't exactly a full-blown makefile\n     /// parser, but hey it gets the job done!\n-    pub fn update_with_config_mk(&mut self) {\n+    fn update_with_config_mk(&mut self) {\n         let mut config = String::new();\n         File::open(\"config.mk\").unwrap().read_to_string(&mut config).unwrap();\n         for line in config.lines() {"}]}