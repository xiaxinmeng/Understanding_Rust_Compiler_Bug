{"sha": "3e5eb2634cbb356b626e028a4be1305d4a44a023", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNWViMjYzNGNiYjM1NmI2MjZlMDI4YTRiZTEzMDVkNGE0NGEwMjM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-12-13T15:41:19Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-01-19T19:23:07Z"}, "message": "Fix `VecDeque::truncate` leak on drop panic", "tree": {"sha": "8154f8e4fd2506207f18ea5db0d57fda185a2305", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8154f8e4fd2506207f18ea5db0d57fda185a2305"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e5eb2634cbb356b626e028a4be1305d4a44a023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5eb2634cbb356b626e028a4be1305d4a44a023", "html_url": "https://github.com/rust-lang/rust/commit/3e5eb2634cbb356b626e028a4be1305d4a44a023", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e5eb2634cbb356b626e028a4be1305d4a44a023/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "html_url": "https://github.com/rust-lang/rust/commit/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "7307aad8a9ed654bb706edc6974c3fcceb45af40", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3e5eb2634cbb356b626e028a4be1305d4a44a023/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e5eb2634cbb356b626e028a4be1305d4a44a023/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=3e5eb2634cbb356b626e028a4be1305d4a44a023", "patch": "@@ -866,6 +866,18 @@ impl<T> VecDeque<T> {\n     /// ```\n     #[stable(feature = \"deque_extras\", since = \"1.16.0\")]\n     pub fn truncate(&mut self, len: usize) {\n+        /// Runs the destructor for all items in the slice when it gets dropped (normally or\n+        /// during unwinding).\n+        struct Dropper<'a, T>(&'a mut [T]);\n+\n+        impl<'a, T> Drop for Dropper<'a, T> {\n+            fn drop(&mut self) {\n+                unsafe {\n+                    ptr::drop_in_place(self.0);\n+                }\n+            }\n+        }\n+\n         // Safe because:\n         //\n         // * Any slice passed to `drop_in_place` is valid; the second case has\n@@ -888,8 +900,11 @@ impl<T> VecDeque<T> {\n                 let drop_back = back as *mut _;\n                 let drop_front = front.get_unchecked_mut(len..) as *mut _;\n                 self.head = self.wrap_sub(self.head, num_dropped);\n+\n+                // Make sure the second half is dropped even when a destructor\n+                // in the first one panics.\n+                let _back_dropper = Dropper(&mut *drop_back);\n                 ptr::drop_in_place(drop_front);\n-                ptr::drop_in_place(drop_back);\n             }\n         }\n     }"}, {"sha": "2dc50d0c70e234d98b85e73de3d1e445e3d8efee", "filename": "src/liballoc/tests/vec_deque.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/3e5eb2634cbb356b626e028a4be1305d4a44a023/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e5eb2634cbb356b626e028a4be1305d4a44a023/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec_deque.rs?ref=3e5eb2634cbb356b626e028a4be1305d4a44a023", "patch": "@@ -2,7 +2,7 @@ use std::collections::TryReserveError::*;\n use std::collections::{vec_deque::Drain, VecDeque};\n use std::fmt::Debug;\n use std::mem::size_of;\n-use std::panic::catch_unwind;\n+use std::panic::{AssertUnwindSafe, catch_unwind};\n use std::{isize, usize};\n \n use crate::hash;\n@@ -1573,3 +1573,36 @@ fn test_try_rfold_moves_iter() {\n     assert_eq!(iter.try_rfold(0_i8, |acc, &x| acc.checked_add(x)), None);\n     assert_eq!(iter.next_back(), Some(&70));\n }\n+\n+#[test]\n+fn truncate_leak() {\n+    static mut DROPS: i32 = 0;\n+\n+    struct D(bool);\n+\n+    impl Drop for D {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+\n+            if self.0 {\n+                panic!(\"panic in `drop`\");\n+            }\n+        }\n+    }\n+\n+    let mut q = VecDeque::new();\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_front(D(true));\n+    q.push_front(D(false));\n+    q.push_front(D(false));\n+\n+    catch_unwind(AssertUnwindSafe(|| q.truncate(1))).ok();\n+\n+    assert_eq!(unsafe { DROPS }, 7);\n+}"}]}