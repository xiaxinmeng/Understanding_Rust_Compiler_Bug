{"sha": "69cd826a85fe046ea102f3144f66b5b4b1b8accf", "node_id": "C_kwDOAAsO6NoAKDY5Y2Q4MjZhODVmZTA0NmVhMTAyZjMxNDRmNjZiNWI0YjFiOGFjY2Y", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2022-02-08T01:56:53Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2022-02-09T22:41:23Z"}, "message": "Add llvm.build-config option", "tree": {"sha": "6d929067e3c47631d51674e7a9a2d639837391af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d929067e3c47631d51674e7a9a2d639837391af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69cd826a85fe046ea102f3144f66b5b4b1b8accf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69cd826a85fe046ea102f3144f66b5b4b1b8accf", "html_url": "https://github.com/rust-lang/rust/commit/69cd826a85fe046ea102f3144f66b5b4b1b8accf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69cd826a85fe046ea102f3144f66b5b4b1b8accf/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27f5d830eb11cd7bdc834d6f0d78120976f75443", "url": "https://api.github.com/repos/rust-lang/rust/commits/27f5d830eb11cd7bdc834d6f0d78120976f75443", "html_url": "https://github.com/rust-lang/rust/commit/27f5d830eb11cd7bdc834d6f0d78120976f75443"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "8e7b40b22481dfc0a3838db4960b9247a87a8ab6", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/69cd826a85fe046ea102f3144f66b5b4b1b8accf/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/69cd826a85fe046ea102f3144f66b5b4b1b8accf/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=69cd826a85fe046ea102f3144f66b5b4b1b8accf", "patch": "@@ -157,6 +157,9 @@ changelog-seen = 2\n # Whether to build the clang compiler.\n #clang = false\n \n+# Custom CMake defines to set when building LLVM.\n+#build-config = {}\n+\n # =============================================================================\n # General build configuration options\n # ============================================================================="}, {"sha": "d6f77fe6cd6d0c06e54ea744d7a7d746044a1dc9", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69cd826a85fe046ea102f3144f66b5b4b1b8accf/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69cd826a85fe046ea102f3144f66b5b4b1b8accf/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=69cd826a85fe046ea102f3144f66b5b4b1b8accf", "patch": "@@ -108,6 +108,7 @@ pub struct Config {\n     pub llvm_polly: bool,\n     pub llvm_clang: bool,\n     pub llvm_from_ci: bool,\n+    pub llvm_build_config: HashMap<String, String>,\n \n     pub use_lld: bool,\n     pub lld_enabled: bool,\n@@ -477,6 +478,7 @@ derive_merge! {\n         polly: Option<bool>,\n         clang: Option<bool>,\n         download_ci_llvm: Option<StringOrBool>,\n+        build_config: Option<HashMap<String, String>>,\n     }\n }\n \n@@ -807,6 +809,7 @@ impl Config {\n             config.llvm_allow_old_toolchain = llvm.allow_old_toolchain.unwrap_or(false);\n             config.llvm_polly = llvm.polly.unwrap_or(false);\n             config.llvm_clang = llvm.clang.unwrap_or(false);\n+            config.llvm_build_config = llvm.build_config.clone().unwrap_or(Default::default());\n             config.llvm_from_ci = match llvm.download_ci_llvm {\n                 Some(StringOrBool::String(s)) => {\n                     assert!(s == \"if-available\", \"unknown option `{}` for download-ci-llvm\", s);\n@@ -876,6 +879,7 @@ impl Config {\n                 check_ci_llvm!(llvm.allow_old_toolchain);\n                 check_ci_llvm!(llvm.polly);\n                 check_ci_llvm!(llvm.clang);\n+                check_ci_llvm!(llvm.build_config);\n                 check_ci_llvm!(llvm.plugins);\n \n                 // CI-built LLVM can be either dynamic or static."}, {"sha": "14de1531f73ab0ca28e924ce2e10a0dca19aa51e", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69cd826a85fe046ea102f3144f66b5b4b1b8accf/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69cd826a85fe046ea102f3144f66b5b4b1b8accf/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=69cd826a85fe046ea102f3144f66b5b4b1b8accf", "patch": "@@ -353,6 +353,10 @@ impl Step for Llvm {\n \n         configure_cmake(builder, target, &mut cfg, true);\n \n+        for (key, val) in &builder.config.llvm_build_config {\n+            cfg.define(key, val);\n+        }\n+\n         // FIXME: we don't actually need to build all LLVM tools and all LLVM\n         //        libraries here, e.g., we just want a few components and a few\n         //        tools. Figure out how to filter them down and only build the right"}]}