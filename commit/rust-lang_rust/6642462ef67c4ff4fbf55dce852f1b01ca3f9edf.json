{"sha": "6642462ef67c4ff4fbf55dce852f1b01ca3f9edf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NDI0NjJlZjY3YzRmZjRmYmY1NWRjZTg1MmYxYjAxY2EzZjllZGY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-25T22:10:01Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-27T20:46:23Z"}, "message": "Make small modifications", "tree": {"sha": "5a12d9b4e6297b3b725dbe6c3f1a07302bd69508", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a12d9b4e6297b3b725dbe6c3f1a07302bd69508"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf", "html_url": "https://github.com/rust-lang/rust/commit/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2a1cce9c558fe84ef5a2b8e3b07f1ee1521694a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2a1cce9c558fe84ef5a2b8e3b07f1ee1521694a", "html_url": "https://github.com/rust-lang/rust/commit/e2a1cce9c558fe84ef5a2b8e3b07f1ee1521694a"}], "stats": {"total": 28, "additions": 7, "deletions": 21}, "files": [{"sha": "30441c331e4cfea71cf9eabb835ff7b6ecb9d5fc", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=6642462ef67c4ff4fbf55dce852f1b01ca3f9edf", "patch": "@@ -115,7 +115,7 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n             hir_body_nodes,\n         };\n         collector.insert_entry(CRATE_NODE_ID, Entry {\n-            parent: ast::DUMMY_NODE_ID,\n+            parent: CRATE_NODE_ID,\n             dep_node: root_mod_sig_dep_index,\n             node: Node::Crate,\n         });"}, {"sha": "4f33120b46dffafde5d22b9fc8e90123af75ff29", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=6642462ef67c4ff4fbf55dce852f1b01ca3f9edf", "patch": "@@ -59,13 +59,6 @@ impl<'hir> Entry<'hir> {\n         }\n     }\n \n-    fn to_node(self) -> Option<Node<'hir>> {\n-        match self.node {\n-            Node::Crate => None,\n-            _ => Some(self.node),\n-        }\n-    }\n-\n     fn fn_decl(&self) -> Option<&FnDecl> {\n         match self.node {\n             Node::Item(ref item) => {\n@@ -568,7 +561,7 @@ impl<'hir> Map<'hir> {\n     /// Retrieve the Node corresponding to `id`, returning None if\n     /// cannot be found.\n     pub fn find(&self, id: NodeId) -> Option<Node<'hir>> {\n-        let result = self.find_entry(id).and_then(|x| x.to_node());\n+        let result = self.find_entry(id).map(|x| x.node);\n         if result.is_some() {\n             self.read(id);\n         }\n@@ -638,16 +631,11 @@ impl<'hir> Map<'hir> {\n                 return Err(id);\n             }\n \n-            if let Some(node) = self.find_entry(parent_node) {\n-                match node.to_node() {\n-                    Some(ref node) => {\n-                        if found(node) {\n-                            return Ok(parent_node);\n-                        } else if bail_early(node) {\n-                            return Err(parent_node);\n-                        }\n-                    }\n-                    None => return Err(parent_node),\n+            if let Some(entry) = self.find_entry(parent_node) {\n+                if found(&entry.node) {\n+                    return Ok(parent_node);\n+                } else if bail_early(&entry.node) {\n+                    return Err(parent_node);\n                 }\n                 id = parent_node;\n             } else {"}, {"sha": "7ac334d84a9bfdd2401f6f5734a044f4d4f7aad0", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6642462ef67c4ff4fbf55dce852f1b01ca3f9edf/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=6642462ef67c4ff4fbf55dce852f1b01ca3f9edf", "patch": "@@ -2397,7 +2397,5 @@ pub enum Node<'hir> {\n     GenericParam(&'hir GenericParam),\n     Visibility(&'hir Visibility),\n \n-    /// Roots for node trees. Its DepNodeIndex when in `Entry`\n-    /// is the dependency node of the crate's root module.\n     Crate,\n }"}]}