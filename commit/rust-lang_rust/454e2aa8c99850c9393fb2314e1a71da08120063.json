{"sha": "454e2aa8c99850c9393fb2314e1a71da08120063", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NGUyYWE4Yzk5ODUwYzkzOTNmYjIzMTRlMWE3MWRhMDgxMjAwNjM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-29T00:44:20Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-30T19:05:26Z"}, "message": "Do not complain about missing `fn main()` in some cases", "tree": {"sha": "89912fba3e2938a85bf7bbf8712989562db897f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89912fba3e2938a85bf7bbf8712989562db897f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/454e2aa8c99850c9393fb2314e1a71da08120063", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/454e2aa8c99850c9393fb2314e1a71da08120063", "html_url": "https://github.com/rust-lang/rust/commit/454e2aa8c99850c9393fb2314e1a71da08120063", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/454e2aa8c99850c9393fb2314e1a71da08120063/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "053a09529a41931a217daecbe879b88386101249", "url": "https://api.github.com/repos/rust-lang/rust/commits/053a09529a41931a217daecbe879b88386101249", "html_url": "https://github.com/rust-lang/rust/commit/053a09529a41931a217daecbe879b88386101249"}], "stats": {"total": 166, "additions": 50, "deletions": 116}, "files": [{"sha": "cdf5da006064a79a7ba12d1f5c0ec82ff0c71672", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -440,7 +440,7 @@ impl cstore::CStore {\n         let source_file = sess.parse_sess.source_map().new_source_file(source_name, def.body);\n         let local_span = Span::with_root_ctxt(source_file.start_pos, source_file.end_pos);\n         let (body, mut errors) = source_file_to_stream(&sess.parse_sess, source_file, None);\n-        emit_unclosed_delims(&mut errors, &sess.diagnostic());\n+        emit_unclosed_delims(&mut errors, &sess.parse_sess);\n \n         // Mark the attrs as used\n         let attrs = data.get_item_attrs(id.index, sess);"}, {"sha": "660047190608de5cf8813816f310a15966e72af2", "filename": "src/librustc_passes/entry.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibrustc_passes%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibrustc_passes%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fentry.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -154,6 +154,14 @@ fn configure_main(tcx: TyCtxt<'_>, visitor: &EntryContext<'_, '_>) -> Option<(De\n }\n \n fn no_main_err(tcx: TyCtxt<'_>, visitor: &EntryContext<'_, '_>) {\n+    let sp = tcx.hir().krate().span;\n+    if *tcx.sess.parse_sess.reached_eof.borrow() {\n+        // There's an unclosed brace that made the parser reach `Eof`, we shouldn't complain about\n+        // the missing `fn main()` then as it might have been hidden inside an unclosed block.\n+        tcx.sess.delay_span_bug(sp, \"`main` not found, but expected unclosed brace error\");\n+        return;\n+    }\n+\n     // There is no main function.\n     let mut err = struct_err!(tcx.sess, E0601,\n         \"`main` function not found in crate `{}`\", tcx.crate_name(LOCAL_CRATE));\n@@ -173,7 +181,6 @@ fn no_main_err(tcx: TyCtxt<'_>, visitor: &EntryContext<'_, '_>) {\n     } else {\n         String::from(\"consider adding a `main` function at the crate level\")\n     };\n-    let sp = tcx.hir().krate().span;\n     // The file may be empty, which leads to the diagnostic machinery not emitting this\n     // note. This is a relatively simple way to detect that case and emit a span-less\n     // note instead."}, {"sha": "6d8ecdf805b01a15e8a8a31252f9e244d3268301", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -108,7 +108,7 @@ pub fn parse_stream_from_source_str(\n         sess.source_map().new_source_file(name, source),\n         override_span,\n     );\n-    emit_unclosed_delims(&mut errors, &sess.span_diagnostic);\n+    emit_unclosed_delims(&mut errors, &sess);\n     stream\n }\n \n@@ -242,7 +242,7 @@ pub fn maybe_file_to_stream(\n             err.buffer(&mut buffer);\n             // Not using `emit_unclosed_delims` to use `db.buffer`\n             for unmatched in unmatched_braces {\n-                if let Some(err) = make_unclosed_delims_error(unmatched, &sess.span_diagnostic) {\n+                if let Some(err) = make_unclosed_delims_error(unmatched, &sess) {\n                     err.buffer(&mut buffer);\n                 }\n             }"}, {"sha": "e81d4573b73e5b253c6b1931b6185c7321dc2062", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -148,8 +148,7 @@ pub struct Parser<'a> {\n \n impl<'a> Drop for Parser<'a> {\n     fn drop(&mut self) {\n-        let diag = self.diagnostic();\n-        emit_unclosed_delims(&mut self.unclosed_delims, diag);\n+        emit_unclosed_delims(&mut self.unclosed_delims, &self.sess);\n     }\n }\n \n@@ -1372,12 +1371,12 @@ impl<'a> Parser<'a> {\n \n crate fn make_unclosed_delims_error(\n     unmatched: UnmatchedBrace,\n-    handler: &errors::Handler,\n+    sess: &ParseSess,\n ) -> Option<DiagnosticBuilder<'_>> {\n     // `None` here means an `Eof` was found. We already emit those errors elsewhere, we add them to\n     // `unmatched_braces` only for error recovery in the `Parser`.\n     let found_delim = unmatched.found_delim?;\n-    let mut err = handler.struct_span_err(unmatched.found_span, &format!(\n+    let mut err = sess.span_diagnostic.struct_span_err(unmatched.found_span, &format!(\n         \"incorrect close delimiter: `{}`\",\n         pprust::token_kind_to_string(&token::CloseDelim(found_delim)),\n     ));\n@@ -1391,8 +1390,10 @@ crate fn make_unclosed_delims_error(\n     Some(err)\n }\n \n-pub fn emit_unclosed_delims(unclosed_delims: &mut Vec<UnmatchedBrace>, handler: &errors::Handler) {\n+pub fn emit_unclosed_delims(unclosed_delims: &mut Vec<UnmatchedBrace>, sess: &ParseSess) {\n+    *sess.reached_eof.borrow_mut() |= unclosed_delims.iter()\n+        .any(|unmatched_delim| unmatched_delim.found_delim.is_none());\n     for unmatched in unclosed_delims.drain(..) {\n-        make_unclosed_delims_error(unmatched, handler).map(|mut e| e.emit());\n+        make_unclosed_delims_error(unmatched, sess).map(|mut e| e.emit());\n     }\n }"}, {"sha": "fcf3b4c0aa891a30def8b3043951369d25539db5", "filename": "src/libsyntax/parse/parser/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1141,6 +1141,11 @@ impl<'a> Parser<'a> {\n                  // Don't attempt to recover from this unclosed delimiter more than once.\n                 let unmatched = self.unclosed_delims.remove(pos);\n                 let delim = TokenType::Token(token::CloseDelim(unmatched.expected_delim));\n+                if unmatched.found_delim.is_none() {\n+                    // We encountered `Eof`, set this fact here to avoid complaining about missing\n+                    // `fn main()` when we found place to suggest the closing brace.\n+                    *self.sess.reached_eof.borrow_mut() = true;\n+                }\n \n                 // We want to suggest the inclusion of the closing delimiter where it makes\n                 // the most sense, which is immediately after the last token:"}, {"sha": "323fe01f067efbf35b7a4e22ba801318f4d5e497", "filename": "src/libsyntax/sess.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fsess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Flibsyntax%2Fsess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsess.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -73,6 +73,8 @@ pub struct ParseSess {\n     pub ambiguous_block_expr_parse: Lock<FxHashMap<Span, Span>>,\n     pub injected_crate_name: Once<Symbol>,\n     crate gated_spans: GatedSpans,\n+    /// The parser has reached `Eof` due to an unclosed brace. Used to silence unnecessary errors.\n+    pub reached_eof: Lock<bool>,\n }\n \n impl ParseSess {\n@@ -101,6 +103,7 @@ impl ParseSess {\n             ambiguous_block_expr_parse: Lock::new(FxHashMap::default()),\n             injected_crate_name: Once::new(),\n             gated_spans: GatedSpans::default(),\n+            reached_eof: Lock::new(false),\n         }\n     }\n "}, {"sha": "21d36048e6703f0b62e4d0a86402f5a487e275c9", "filename": "src/test/ui/parser-recovery-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser-recovery-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser-recovery-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-1.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -3,7 +3,6 @@\n // Test that we can recover from missing braces in the parser.\n \n trait Foo {\n-//~^ ERROR `main` function not found\n     fn bar() {\n         let x = foo();\n         //~^ ERROR cannot find function `foo` in this scope"}, {"sha": "83f8ef63c99548219b3e09cc66d4fb36056f78bc", "filename": "src/test/ui/parser-recovery-1.stderr", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser-recovery-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser-recovery-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-1.stderr?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,9 +1,8 @@\n error: this file contains an un-closed delimiter\n-  --> $DIR/parser-recovery-1.rs:16:55\n+  --> $DIR/parser-recovery-1.rs:15:55\n    |\n LL | trait Foo {\n    |           - un-closed delimiter\n-LL |\n LL |     fn bar() {\n    |              - this delimiter might not be properly closed...\n ...\n@@ -14,36 +13,23 @@ LL | }\n    |                                                       ^\n \n error: unexpected token: `;`\n-  --> $DIR/parser-recovery-1.rs:13:15\n+  --> $DIR/parser-recovery-1.rs:12:15\n    |\n LL |     let x = y.;\n    |               ^\n \n error[E0425]: cannot find function `foo` in this scope\n-  --> $DIR/parser-recovery-1.rs:8:17\n+  --> $DIR/parser-recovery-1.rs:7:17\n    |\n LL |         let x = foo();\n    |                 ^^^ not found in this scope\n \n error[E0425]: cannot find value `y` in this scope\n-  --> $DIR/parser-recovery-1.rs:13:13\n+  --> $DIR/parser-recovery-1.rs:12:13\n    |\n LL |     let x = y.;\n    |             ^ not found in this scope\n \n-error[E0601]: `main` function not found in crate `parser_recovery_1`\n-  --> $DIR/parser-recovery-1.rs:5:1\n-   |\n-LL | / trait Foo {\n-LL | |\n-LL | |     fn bar() {\n-LL | |         let x = foo();\n-...  |\n-LL | |\n-LL | | }\n-   | |______________________________________________________^ consider adding a `main` function to `$DIR/parser-recovery-1.rs`\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0425, E0601.\n-For more information about an error, try `rustc --explain E0425`.\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "c4fc471618283a0087cad9d763a623ec084dda8f", "filename": "src/test/ui/parser/issue-2354.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,7 +1,4 @@\n fn foo() { //~ NOTE un-closed delimiter\n-//~^ ERROR `main` function not found\n-//~^^ NOTE main function must be defined\n-//~^^^ NOTE you have one or more functions\n   match Some(10) {\n   //~^ NOTE this delimiter might not be properly closed...\n       Some(y) => { panic!(); }\n@@ -14,5 +11,5 @@ fn bar() {\n     while (i < 1000) {}\n }\n \n-fn main() {} //~ NOTE here is a function named `main`\n-             //~ ERROR this file contains an un-closed delimiter\n+fn main() {}\n+//~ ERROR this file contains an un-closed delimiter"}, {"sha": "45199b02cb8d4f88a8f35bf2a53ae7058712344f", "filename": "src/test/ui/parser/issue-2354.stderr", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,38 +1,16 @@\n error: this file contains an un-closed delimiter\n-  --> $DIR/issue-2354.rs:18:66\n+  --> $DIR/issue-2354.rs:15:53\n    |\n LL | fn foo() {\n    |          - un-closed delimiter\n-...\n LL |   match Some(10) {\n    |                  - this delimiter might not be properly closed...\n ...\n LL | }\n    | - ...as it matches this but it has different indentation\n ...\n LL |\n-   |                                                                  ^\n-\n-error[E0601]: `main` function not found in crate `issue_2354`\n-  --> $DIR/issue-2354.rs:1:1\n-   |\n-LL | / fn foo() {\n-LL | |\n-LL | |\n-LL | |\n-...  |\n-LL | | fn main() {}\n-LL | |\n-   | |_________________________________________________________________^ the main function must be defined at the crate level (in `$DIR/issue-2354.rs`)\n-   |\n-note: here is a function named `main`\n-  --> $DIR/issue-2354.rs:17:1\n-   |\n-LL | fn main() {}\n-   | ^^^^^^^^^^^^\n-   = note: you have one or more functions named `main` not defined at the crate level\n-   = help: either move the `main` function definitions or attach the `#[main]` attribute to one of them\n+   |                                                     ^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0601`."}, {"sha": "8d89905909e94f99743e992cf9e66d3e775f8035", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-impl-trait.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,5 +1,4 @@\n-impl T for () { //~ ERROR `main` function not found\n-//~^ ERROR cannot find trait `T` in this scope\n+impl T for () { //~ ERROR cannot find trait `T` in this scope\n \n fn foo(&self) {}\n "}, {"sha": "9bf54181a079c13ec924d4bbc6a9cf5d94cc7559", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-impl-trait.stderr", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-impl-trait.stderr?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,18 +1,18 @@\n error: this file contains an un-closed delimiter\n-  --> $DIR/missing-close-brace-in-impl-trait.rs:13:53\n+  --> $DIR/missing-close-brace-in-impl-trait.rs:12:53\n    |\n LL | impl T for () {\n    |               - un-closed delimiter\n ...\n LL |\n    |                                                     ^\n \n-error: expected one of `async`, `const`, `crate`, `default`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found `trait`\n-  --> $DIR/missing-close-brace-in-impl-trait.rs:6:1\n+error: expected one of `async`, `const`, `crate`, `default`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found keyword `trait`\n+  --> $DIR/missing-close-brace-in-impl-trait.rs:5:1\n    |\n LL | impl T for () {\n    |               - unclosed delimiter\n-...\n+LL | \n LL | fn foo(&self) {}\n    |                 -\n    |                 |\n@@ -28,19 +28,6 @@ error[E0405]: cannot find trait `T` in this scope\n LL | impl T for () {\n    |      ^ not found in this scope\n \n-error[E0601]: `main` function not found in crate `missing_close_brace_in_impl_trait`\n-  --> $DIR/missing-close-brace-in-impl-trait.rs:1:1\n-   |\n-LL | / impl T for () {\n-LL | |\n-LL | |\n-LL | | fn foo(&self) {}\n-...  |\n-LL | | fn main() {}\n-LL | |\n-   | |____________________________________________________^ consider adding a `main` function to `$DIR/missing-close-brace-in-impl-trait.rs`\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0405, E0601.\n-For more information about an error, try `rustc --explain E0405`.\n+For more information about this error, try `rustc --explain E0405`."}, {"sha": "5b716b1467cb158ad5898fe97558a7d9848db3d6", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,4 +1,4 @@\n-pub(crate) struct Bar<T> { //~ ERROR `main` function not found\n+pub(crate) struct Bar<T> {\n   foo: T,\n \n trait T { //~ ERROR expected identifier, found keyword `trait`"}, {"sha": "ce399dbbf456dc266224bc6f4b45eab58b47de9f", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-struct.stderr", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -24,18 +24,5 @@ error: expected `:`, found `T`\n LL | trait T {\n    |       ^ expected `:`\n \n-error[E0601]: `main` function not found in crate `missing_close_brace_in_struct`\n-  --> $DIR/missing-close-brace-in-struct.rs:1:1\n-   |\n-LL | / pub(crate) struct Bar<T> {\n-LL | |   foo: T,\n-LL | |\n-LL | | trait T {\n-...  |\n-LL | |\n-LL | | fn main() {}\n-   | |_________________________________________________________________^ consider adding a `main` function to `$DIR/missing-close-brace-in-struct.rs`\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-For more information about this error, try `rustc --explain E0601`."}, {"sha": "795471954112704884a869090c29477d75bcb7f6", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.rs?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,5 +1,4 @@\n trait T {\n-//~^ ERROR `main` function not found in crate `missing_close_brace_in_trait`\n     fn foo(&self);\n \n pub(crate) struct Bar<T>(); //~ ERROR expected one of"}, {"sha": "4bfb4c1cb3a523489113f84c4e4b90b9d03548fb", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-trait.stderr", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/454e2aa8c99850c9393fb2314e1a71da08120063/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-trait.stderr?ref=454e2aa8c99850c9393fb2314e1a71da08120063", "patch": "@@ -1,18 +1,17 @@\n error: this file contains an un-closed delimiter\n-  --> $DIR/missing-close-brace-in-trait.rs:11:66\n+  --> $DIR/missing-close-brace-in-trait.rs:10:66\n    |\n LL | trait T {\n    |         - un-closed delimiter\n ...\n LL | fn main() {}\n    |                                                                  ^\n \n-error: expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found `pub`\n-  --> $DIR/missing-close-brace-in-trait.rs:5:1\n+error: expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found keyword `pub`\n+  --> $DIR/missing-close-brace-in-trait.rs:4:1\n    |\n LL | trait T {\n    |         - unclosed delimiter\n-LL |\n LL |     fn foo(&self);\n    |                   -\n    |                   |\n@@ -22,18 +21,5 @@ LL |\n LL | pub(crate) struct Bar<T>();\n    | ^^^ unexpected token\n \n-error[E0601]: `main` function not found in crate `missing_close_brace_in_trait`\n-  --> $DIR/missing-close-brace-in-trait.rs:1:1\n-   |\n-LL | / trait T {\n-LL | |\n-LL | |     fn foo(&self);\n-LL | |\n-...  |\n-LL | |\n-LL | | fn main() {}\n-   | |_________________________________________________________________^ consider adding a `main` function to `$DIR/missing-close-brace-in-trait.rs`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0601`."}]}