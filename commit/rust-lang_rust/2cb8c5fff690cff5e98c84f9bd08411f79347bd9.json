{"sha": "2cb8c5fff690cff5e98c84f9bd08411f79347bd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYjhjNWZmZjY5MGNmZjVlOThjODRmOWJkMDg0MTFmNzkzNDdiZDk=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-02-23T00:59:04Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-03-05T20:43:44Z"}, "message": "Run rustfmt on tidy/src/deps.rs", "tree": {"sha": "d0a2297c537af69f14ddd2728b9d88723e4b5bb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0a2297c537af69f14ddd2728b9d88723e4b5bb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cb8c5fff690cff5e98c84f9bd08411f79347bd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb8c5fff690cff5e98c84f9bd08411f79347bd9", "html_url": "https://github.com/rust-lang/rust/commit/2cb8c5fff690cff5e98c84f9bd08411f79347bd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cb8c5fff690cff5e98c84f9bd08411f79347bd9/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2746d870017c869b84fc56ecd63f5e4f9646c96", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2746d870017c869b84fc56ecd63f5e4f9646c96", "html_url": "https://github.com/rust-lang/rust/commit/e2746d870017c869b84fc56ecd63f5e4f9646c96"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "c3fb0d3913fdfd7d5a408c8a159c7afaf40ed132", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2cb8c5fff690cff5e98c84f9bd08411f79347bd9/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb8c5fff690cff5e98c84f9bd08411f79347bd9/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=2cb8c5fff690cff5e98c84f9bd08411f79347bd9", "patch": "@@ -29,19 +29,19 @@ static LICENSES: &'static [&'static str] = &[\n // tooling. It is _crucial_ that no exception crates be dependencies\n // of the Rust runtime (std / test).\n static EXCEPTIONS: &'static [&'static str] = &[\n-    \"mdbook\", // MPL2, mdbook\n-    \"openssl\", // BSD+advertising clause, cargo, mdbook\n-    \"pest\", // MPL2, mdbook via handlebars\n-    \"thread-id\", // Apache-2.0, mdbook\n-    \"toml-query\", // MPL-2.0, mdbook\n-    \"is-match\", // MPL-2.0, mdbook\n-    \"cssparser\", // MPL-2.0, rustdoc\n-    \"smallvec\", // MPL-2.0, rustdoc\n+    \"mdbook\",             // MPL2, mdbook\n+    \"openssl\",            // BSD+advertising clause, cargo, mdbook\n+    \"pest\",               // MPL2, mdbook via handlebars\n+    \"thread-id\",          // Apache-2.0, mdbook\n+    \"toml-query\",         // MPL-2.0, mdbook\n+    \"is-match\",           // MPL-2.0, mdbook\n+    \"cssparser\",          // MPL-2.0, rustdoc\n+    \"smallvec\",           // MPL-2.0, rustdoc\n     \"fuchsia-zircon-sys\", // BSD-3-Clause, rustdoc, rustc, cargo\n-    \"fuchsia-zircon\", // BSD-3-Clause, rustdoc, rustc, cargo (jobserver & tempdir)\n-    \"cssparser-macros\", // MPL-2.0, rustdoc\n-    \"selectors\", // MPL-2.0, rustdoc\n-    \"clippy_lints\", // MPL-2.0 rls\n+    \"fuchsia-zircon\",     // BSD-3-Clause, rustdoc, rustc, cargo (jobserver & tempdir)\n+    \"cssparser-macros\",   // MPL-2.0, rustdoc\n+    \"selectors\",          // MPL-2.0, rustdoc\n+    \"clippy_lints\",       // MPL-2.0 rls\n ];\n \n pub fn check(path: &Path, bad: &mut bool) {\n@@ -57,7 +57,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n             if dir.path()\n                 .to_str()\n                 .unwrap()\n-                .contains(&format!(\"src/vendor/{}\", exception)) {\n+                .contains(&format!(\"src/vendor/{}\", exception))\n+            {\n                 continue 'next_path;\n             }\n         }\n@@ -102,7 +103,7 @@ fn extract_license(line: &str) -> String {\n     let first_quote = line.find('\"');\n     let last_quote = line.rfind('\"');\n     if let (Some(f), Some(l)) = (first_quote, last_quote) {\n-        let license = &line[f + 1 .. l];\n+        let license = &line[f + 1..l];\n         license.into()\n     } else {\n         \"bad-license-parse\".into()"}]}