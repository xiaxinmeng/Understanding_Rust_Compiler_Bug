{"sha": "14b38e198cbf6413eb52d61671c904014ed6037d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YjM4ZTE5OGNiZjY0MTNlYjUyZDYxNjcxYzkwNDAxNGVkNjAzN2Q=", "commit": {"author": {"name": "Anatol Liu", "email": "axlui@anatols-mbp.lan", "date": "2020-11-05T04:08:46Z"}, "committer": {"name": "Anatol Liu", "email": "axlui@anatols-mbp.lan", "date": "2020-11-05T07:41:02Z"}, "message": "Add static semantic token modifier for associated functions with no &self\n\nrefactor logic into code_model.rs", "tree": {"sha": "8b88229f3ba599bf93982bf6a99cd347c6af6106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b88229f3ba599bf93982bf6a99cd347c6af6106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14b38e198cbf6413eb52d61671c904014ed6037d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14b38e198cbf6413eb52d61671c904014ed6037d", "html_url": "https://github.com/rust-lang/rust/commit/14b38e198cbf6413eb52d61671c904014ed6037d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14b38e198cbf6413eb52d61671c904014ed6037d/comments", "author": null, "committer": null, "parents": [{"sha": "771c0d8c083e9c86a309a4380039602817e09fc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/771c0d8c083e9c86a309a4380039602817e09fc8", "html_url": "https://github.com/rust-lang/rust/commit/771c0d8c083e9c86a309a4380039602817e09fc8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1319eb9cb7e1bff01cbbadb3c7e1efed2234b48f", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14b38e198cbf6413eb52d61671c904014ed6037d/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14b38e198cbf6413eb52d61671c904014ed6037d/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=14b38e198cbf6413eb52d61671c904014ed6037d", "patch": "@@ -790,7 +790,7 @@ impl Function {\n \n     /// whether this function is associated with some trait/impl\n     pub fn is_associated(self, db: &dyn HirDatabase) -> bool {\n-        if let Some(_) = self.self_param(db) {\n+        if self.self_param(db).is_some() {\n             return false;\n         }\n "}]}