{"sha": "fd2b43dfb79e508635166b66a8eb04df934b35ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMmI0M2RmYjc5ZTUwODYzNTE2NmI2NmE4ZWIwNGRmOTM0YjM1Y2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-26T16:56:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-26T16:56:05Z"}, "message": "Auto merge of #7495 - camsteffen:extern-conflict, r=Manishearth\n\nImprove conflicting rlibs error again\n\nchangelog: none\n\nNow you can do `rm <paste>` and \ud83d\udc07\ud83d\udca8\n\n```text\nthread 'compile_test' panicked at '\n----------------------------------------------------------------------\nERROR: Found multiple rlibs for crates: `clippy_lints`, `clippy_utils`\nTry running `cargo clean` or remove the following files:\n\ntarget/debug/deps/libclippy_lints-9117c875159004e0.rlib \\\ntarget/debug/deps/libclippy_lints-fe45157be7ff9444.rlib \\\ntarget/debug/deps/libclippy_utils-5eba1e07a9846ed0.rlib \\\ntarget/debug/deps/libclippy_utils-ccbc08fcf64de262.rlib\n\nFor details on this error see https://github.com/rust-lang/rust-clippy/issues/7343\n----------------------------------------------------------------------\n```", "tree": {"sha": "f4d5ee1b3bc3f9688b1f7aeba164cddc315ddcda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4d5ee1b3bc3f9688b1f7aeba164cddc315ddcda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd2b43dfb79e508635166b66a8eb04df934b35ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2b43dfb79e508635166b66a8eb04df934b35ce", "html_url": "https://github.com/rust-lang/rust/commit/fd2b43dfb79e508635166b66a8eb04df934b35ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd2b43dfb79e508635166b66a8eb04df934b35ce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3214de3fe6fd999274d2ccbacfc378299d53cde5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3214de3fe6fd999274d2ccbacfc378299d53cde5", "html_url": "https://github.com/rust-lang/rust/commit/3214de3fe6fd999274d2ccbacfc378299d53cde5"}, {"sha": "3c517b3b24a0251a21540c4352c1fec9761784b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c517b3b24a0251a21540c4352c1fec9761784b0", "html_url": "https://github.com/rust-lang/rust/commit/3c517b3b24a0251a21540c4352c1fec9761784b0"}], "stats": {"total": 89, "additions": 50, "deletions": 39}, "files": [{"sha": "0a82377a10e4247eaebac2c19ab4696b96673fc0", "filename": "tests/compile-test.rs", "status": "modified", "additions": 50, "deletions": 39, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/fd2b43dfb79e508635166b66a8eb04df934b35ce/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd2b43dfb79e508635166b66a8eb04df934b35ce/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=fd2b43dfb79e508635166b66a8eb04df934b35ce", "patch": "@@ -1,5 +1,6 @@\n #![feature(test)] // compiletest_rs requires this attribute\n #![feature(once_cell)]\n+#![feature(try_blocks)]\n \n use compiletest_rs as compiletest;\n use compiletest_rs::common::Mode as TestMode;\n@@ -45,48 +46,49 @@ fn third_party_crates() -> String {\n         \"syn\",\n     ];\n     let dep_dir = cargo::TARGET_LIB.join(\"deps\");\n-    let mut crates: HashMap<&str, PathBuf> = HashMap::with_capacity(CRATES.len());\n-    for entry in fs::read_dir(dep_dir).unwrap() {\n-        let path = match entry {\n-            Ok(entry) => entry.path(),\n-            Err(_) => continue,\n-        };\n-        if let Some(name) = path.file_name().and_then(OsStr::to_str) {\n-            for dep in CRATES {\n-                if name.starts_with(&format!(\"lib{}-\", dep))\n-                    && name.rsplit('.').next().map(|ext| ext.eq_ignore_ascii_case(\"rlib\")) == Some(true)\n-                {\n-                    if let Some(old) = crates.insert(dep, path.clone()) {\n-                        // Check which action should be done in order to remove compiled deps.\n-                        // If pre-installed version of compiler is used, `cargo clean` will do.\n-                        // Otherwise (for bootstrapped compiler), the dependencies directory\n-                        // must be removed manually.\n-                        let suggested_action = if std::env::var_os(\"RUSTC_BOOTSTRAP\").is_some() {\n-                            \"remove the stageN-tools directory\"\n-                        } else {\n-                            \"run `cargo clean`\"\n-                        };\n-\n-                        panic!(\n-                            \"\\n---------------------------------------------------\\n\\n \\\n-                            Found multiple rlibs for crate `{}`: `{:?}` and `{:?}`.\\n \\\n-                            Probably, you need to {} before running tests again.\\n \\\n-                            \\nFor details on that error see https://github.com/rust-lang/rust-clippy/issues/7343 \\\n-                            \\n---------------------------------------------------\\n\",\n-                            dep, old, path, suggested_action\n-                        );\n-                    }\n-                    break;\n-                }\n-            }\n+    let mut crates: HashMap<&str, Vec<PathBuf>> = HashMap::with_capacity(CRATES.len());\n+    let mut flags = String::new();\n+    for entry in fs::read_dir(dep_dir).unwrap().flatten() {\n+        let path = entry.path();\n+        if let Some(name) = try {\n+            let name = path.file_name()?.to_str()?;\n+            let (name, _) = name.strip_suffix(\".rlib\")?.strip_prefix(\"lib\")?.split_once('-')?;\n+            CRATES.iter().copied().find(|&c| c == name)?\n+        } {\n+            flags += &format!(\" --extern {}={}\", name, path.display());\n+            crates.entry(name).or_default().push(path.clone());\n         }\n     }\n+    crates.retain(|_, paths| paths.len() > 1);\n+    if !crates.is_empty() {\n+        let crate_names = crates.keys().map(|s| format!(\"`{}`\", s)).collect::<Vec<_>>().join(\", \");\n+        // add backslashes for an easy copy-paste `rm` command\n+        let paths = crates\n+            .into_values()\n+            .flatten()\n+            .map(|p| strip_current_dir(&p).display().to_string())\n+            .collect::<Vec<_>>()\n+            .join(\" \\\\\\n\");\n+        // Check which action should be done in order to remove compiled deps.\n+        // If pre-installed version of compiler is used, `cargo clean` will do.\n+        // Otherwise (for bootstrapped compiler), the dependencies directory\n+        // must be removed manually.\n+        let suggested_action = if std::env::var_os(\"RUSTC_BOOTSTRAP\").is_some() {\n+            \"removing the stageN-tools directory\"\n+        } else {\n+            \"running `cargo clean`\"\n+        };\n \n-    let v: Vec<_> = crates\n-        .into_iter()\n-        .map(|(dep, path)| format!(\"--extern {}={}\", dep, path.display()))\n-        .collect();\n-    v.join(\" \")\n+        panic!(\n+            \"\\n----------------------------------------------------------------------\\n\\\n+            ERROR: Found multiple rlibs for crates: {}\\n\\\n+            Try {} or remove the following files:\\n\\n{}\\n\\n\\\n+            For details on this error see https://github.com/rust-lang/rust-clippy/issues/7343\\n\\\n+            ----------------------------------------------------------------------\\n\",\n+            crate_names, suggested_action, paths\n+        );\n+    }\n+    flags\n }\n \n fn default_config() -> compiletest::Config {\n@@ -313,3 +315,12 @@ impl Drop for VarGuard {\n         }\n     }\n }\n+\n+fn strip_current_dir(path: &Path) -> &Path {\n+    if let Ok(curr) = env::current_dir() {\n+        if let Ok(stripped) = path.strip_prefix(curr) {\n+            return stripped;\n+        }\n+    }\n+    path\n+}"}]}