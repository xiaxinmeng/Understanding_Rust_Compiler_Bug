{"sha": "1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOWRjMmNhNTJjZDRhYjRkMzc3MzRlZWI4ZmQyMWYyNTQxNjJhZmU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-09T23:26:16Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-09T23:26:16Z"}, "message": "rustc: Decouple new_fn_ctxt from AST items so that we can use it to generate glue too", "tree": {"sha": "7f62cc8d15bee882d344708d2494ee3e4c1fda2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f62cc8d15bee882d344708d2494ee3e4c1fda2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe", "html_url": "https://github.com/rust-lang/rust/commit/1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d213f9be95c1b42133eb4be257926fb70cf51067", "url": "https://api.github.com/repos/rust-lang/rust/commits/d213f9be95c1b42133eb4be257926fb70cf51067", "html_url": "https://github.com/rust-lang/rust/commit/d213f9be95c1b42133eb4be257926fb70cf51067"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "efbff5d263e21cd618bb2c58750d1043e85dcdce", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1c9dc2ca52cd4ab4d37734eeb8fd21f254162afe", "patch": "@@ -1815,26 +1815,22 @@ impure fn trans_block(@block_ctxt cx, &ast.block b) -> result {\n fn new_fn_ctxt(@crate_ctxt cx,\n                str name,\n                vec[ast.arg] args,\n-               ast.def_id fid) -> @fn_ctxt {\n+               ValueRef llfndecl) -> @fn_ctxt {\n \n-    check (cx.item_ids.contains_key(fid));\n-    let ValueRef llfn = cx.item_ids.get(fid);\n-    cx.item_names.insert(cx.path, llfn);\n-\n-    let ValueRef lltaskptr = llvm.LLVMGetParam(llfn, 0u);\n+    let ValueRef lltaskptr = llvm.LLVMGetParam(llfndecl, 0u);\n     let uint arg_n = 1u;\n \n     let hashmap[ast.def_id, ValueRef] lllocals = new_def_hash[ValueRef]();\n     let hashmap[ast.def_id, ValueRef] llargs = new_def_hash[ValueRef]();\n \n     for (ast.arg arg in args) {\n-        auto llarg = llvm.LLVMGetParam(llfn, arg_n);\n+        auto llarg = llvm.LLVMGetParam(llfndecl, arg_n);\n         check (llarg as int != 0);\n         llargs.insert(arg.id, llarg);\n         arg_n += 1u;\n     }\n \n-    ret @rec(llfn=llfn,\n+    ret @rec(llfn=llfndecl,\n              lltaskptr=lltaskptr,\n              llargs=llargs,\n              lllocals=lllocals,\n@@ -1882,7 +1878,10 @@ fn arg_tys_of_fn(ast.ann ann) -> vec[typeck.arg] {\n impure fn trans_fn(@crate_ctxt cx, &ast._fn f, ast.def_id fid,\n                    &ast.ann ann) {\n \n-    auto fcx = new_fn_ctxt(cx, cx.path, f.inputs, fid);\n+    auto llfndecl = cx.item_ids.get(fid);\n+    cx.item_names.insert(cx.path, llfndecl);\n+\n+    auto fcx = new_fn_ctxt(cx, cx.path, f.inputs, llfndecl);\n     auto bcx = new_top_block_ctxt(fcx);\n \n     copy_args_to_allocas(bcx, f.inputs, arg_tys_of_fn(ann));\n@@ -1918,7 +1917,10 @@ fn trans_tag_variant(@crate_ctxt cx, ast.def_id tag_id,\n     let ValueRef llfn = decl_fastcall_fn(cx.llmod, s, llfnty);\n     cx.item_ids.insert(variant.id, llfn);\n \n-    auto fcx = new_fn_ctxt(cx, cx.path, fn_args, variant.id);\n+    let ValueRef llfndecl = cx.item_ids.get(variant.id);\n+    cx.item_names.insert(cx.path, llfndecl);\n+\n+    auto fcx = new_fn_ctxt(cx, cx.path, fn_args, llfndecl);\n     auto bcx = new_top_block_ctxt(fcx);\n \n     auto arg_tys = arg_tys_of_fn(variant.ann);"}]}