{"sha": "2c4402638e5b24179165110eedd11aca55a0a9e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNDQwMjYzOGU1YjI0MTc5MTY1MTEwZWVkZDExYWNhNTVhMGE5ZTQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-08-15T23:09:12Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-08-16T07:35:45Z"}, "message": "syntax: also warn about edition \"umbrella\" features being implied by --edition.", "tree": {"sha": "70cbaff0d4150ca68b4cd55779544f7c920f1ec3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70cbaff0d4150ca68b4cd55779544f7c920f1ec3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c4402638e5b24179165110eedd11aca55a0a9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c4402638e5b24179165110eedd11aca55a0a9e4", "html_url": "https://github.com/rust-lang/rust/commit/2c4402638e5b24179165110eedd11aca55a0a9e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c4402638e5b24179165110eedd11aca55a0a9e4/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f009795171c7ea9977110e6aeebe72c67f559c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f009795171c7ea9977110e6aeebe72c67f559c7", "html_url": "https://github.com/rust-lang/rust/commit/0f009795171c7ea9977110e6aeebe72c67f559c7"}], "stats": {"total": 69, "additions": 49, "deletions": 20}, "files": [{"sha": "dcae9b1e9ca7eabfa494328cb63d7100266b7364", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -1923,6 +1923,14 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n     let mut features = Features::new();\n     let mut edition_enabled_features = FxHashMap();\n \n+    for &edition in ALL_EDITIONS {\n+        if edition <= crate_edition {\n+            // The `crate_edition` implies its respective umbrella feature-gate\n+            // (i.e. `#![feature(rust_20XX_preview)]` isn't needed on edition 20XX).\n+            edition_enabled_features.insert(Symbol::intern(edition.feature_name()), edition);\n+        }\n+    }\n+\n     for &(name, .., f_edition, set) in ACTIVE_FEATURES {\n         if let Some(f_edition) = f_edition {\n             if f_edition <= crate_edition {\n@@ -1993,25 +2001,26 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n                 continue\n             };\n \n+            if let Some(edition) = edition_enabled_features.get(&name) {\n+                struct_span_warn!(\n+                    span_handler,\n+                    mi.span,\n+                    E0705,\n+                    \"the feature `{}` is included in the Rust {} edition\",\n+                    name,\n+                    edition,\n+                ).emit();\n+                continue;\n+            }\n+\n             if ALL_EDITIONS.iter().any(|e| name == e.feature_name()) {\n                 // Handled in the separate loop above.\n                 continue;\n             }\n \n             if let Some((.., set)) = ACTIVE_FEATURES.iter().find(|f| name == f.0) {\n-                if let Some(edition) = edition_enabled_features.get(&name) {\n-                    struct_span_warn!(\n-                        span_handler,\n-                        mi.span,\n-                        E0705,\n-                        \"the feature `{}` is included in the Rust {} edition\",\n-                        name,\n-                        edition,\n-                    ).emit();\n-                } else {\n-                    set(&mut features, mi.span);\n-                    features.declared_lang_features.push((name, mi.span, None));\n-                }\n+                set(&mut features, mi.span);\n+                features.declared_lang_features.push((name, mi.span, None));\n                 continue\n             }\n "}, {"sha": "f3d39deef173083939609268aff7177579709c79", "filename": "src/test/rustdoc/async-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fasync-fn.rs?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -13,7 +13,7 @@\n \n // FIXME: once `--edition` is stable in rustdoc, remove that `compile-flags` directive\n \n-#![feature(rust_2018_preview, async_await, futures_api)]\n+#![feature(async_await, futures_api)]\n \n // @has async_fn/struct.S.html\n // @has - '//code' 'pub async fn f()'"}, {"sha": "5896e9a07159164c923153fb375b54b25c0663f4", "filename": "src/test/ui/editions/edition-feature-ok.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Feditions%2Fedition-feature-ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Feditions%2Fedition-feature-ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-feature-ok.rs?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:--edition 2018\n // compile-pass\n \n #![feature(rust_2018_preview)]"}, {"sha": "d20873f5e11635d1dd710d31206b7fd2adbdc9ea", "filename": "src/test/ui/editions/edition-feature-redundant.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.rs?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// edition:2018\n+// compile-pass\n+\n+#![feature(rust_2018_preview)]\n+//~^ WARN the feature `rust_2018_preview` is included in the Rust 2018 edition\n+\n+fn main() {}"}, {"sha": "ccf7b21fbc5c04a7e4a552ec3595e9c08e0c4905", "filename": "src/test/ui/editions/edition-feature-redundant.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -0,0 +1,6 @@\n+warning[E0705]: the feature `rust_2018_preview` is included in the Rust 2018 edition\n+  --> $DIR/edition-feature-redundant.rs:14:12\n+   |\n+LL | #![feature(rust_2018_preview)]\n+   |            ^^^^^^^^^^^^^^^^^\n+"}, {"sha": "c7c73e90988e3f0be3428f35aad406b4f5a9750e", "filename": "src/test/ui/rust-2018/extern-crate-idiomatic-in-2018.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.fixed?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -15,7 +15,6 @@\n // The \"normal case\". Ideally we would remove the `extern crate` here,\n // but we don't.\n \n-#![feature(rust_2018_preview)]\n #![deny(rust_2018_idioms)]\n #![allow(dead_code)]\n "}, {"sha": "ee37a3d766af445a0db42c7b68464994e0cbae5d", "filename": "src/test/ui/rust-2018/extern-crate-idiomatic-in-2018.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.rs?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -15,7 +15,6 @@\n // The \"normal case\". Ideally we would remove the `extern crate` here,\n // but we don't.\n \n-#![feature(rust_2018_preview)]\n #![deny(rust_2018_idioms)]\n #![allow(dead_code)]\n "}, {"sha": "0ecfd4e4a2ca3076523bffe3ebf6a840dd5fcda9", "filename": "src/test/ui/rust-2018/extern-crate-idiomatic-in-2018.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c4402638e5b24179165110eedd11aca55a0a9e4/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.stderr?ref=2c4402638e5b24179165110eedd11aca55a0a9e4", "patch": "@@ -1,18 +1,18 @@\n error: unused extern crate\n-  --> $DIR/extern-crate-idiomatic-in-2018.rs:22:1\n+  --> $DIR/extern-crate-idiomatic-in-2018.rs:21:1\n    |\n LL | extern crate edition_lint_paths;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n note: lint level defined here\n-  --> $DIR/extern-crate-idiomatic-in-2018.rs:19:9\n+  --> $DIR/extern-crate-idiomatic-in-2018.rs:18:9\n    |\n LL | #![deny(rust_2018_idioms)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: #[deny(unused_extern_crates)] implied by #[deny(rust_2018_idioms)]\n \n error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/extern-crate-idiomatic-in-2018.rs:25:1\n+  --> $DIR/extern-crate-idiomatic-in-2018.rs:24:1\n    |\n LL | extern crate edition_lint_paths as bar;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `use`"}]}