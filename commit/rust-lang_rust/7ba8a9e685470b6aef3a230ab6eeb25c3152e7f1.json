{"sha": "7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYThhOWU2ODU0NzBiNmFlZjNhMjMwYWI2ZWViMjVjMzE1MmU3ZjE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-13T22:49:01Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-14T19:45:19Z"}, "message": "Fix Windows dll name format", "tree": {"sha": "ba55b59d9096d1387e0309b5306262f40e4a4928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba55b59d9096d1387e0309b5306262f40e4a4928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlyzjc8ACgkQtAh+UQ6Y\nsWR+6Q//e3hYrzVWJUrjwLlAgS5olbYhUcLdQUTcd+o+LqjqP0zjCXpJ+HbCo25g\ntbmREFd5qUwGjGmGECy1MUAZgz+kSMcnDQBFR4qnA/oiV/yRdzJAW/XfhG86XHLu\nfWf0y3vB/Vnkyi2Ogv1wgC1lXC0YCWgEAyrcUEbuZWEPH2DMEyEE/5npNw1naXfQ\ndi2FRKjkHaOAkdMdxuzsPA9fyYsIsAl57A5XrnoXRzUA7Y4rIWdnxdGYxVaPLQIk\n3PLVpoUGvPWyDlYIaBmp63ql2pRyW/FUi8YzYflt1MtDm1viuzHlRrPNd4vMsan0\n8g1cdOQAspF0tQ5/IrGe0KJT/Yn71X4MdCq46q11cKpc84wpvFi3N4oBIefVI103\n6oXtPrvPz8iUkffP+p8X8l6YivPkeBkW2cuEFDep2x4pbjpxAPqc3gzvFNiyFyA0\nwdaXmfjFz63HPxm8WuabeDKTs43CXhpMvbHwHyH0A0KWn4oQcaD8x1UfNqE6M1pC\nY5p4WZ8O9L7MVL4zfwsmuMZuY6o74pGaMgeGEStpbGjhQ3Lh6U722lZBc/AWahyT\nJyK53bn0y/vjOZ2qedWJkbQlhd3u6squhMBJK6oclCedNOZj4ERhqn+nlMGi3KJ5\nvxjUYaHStxEW9xUbzoBqysbk2WdZqPyXRPsUSRzbUHSPLN6Yp2U=\n=WtUU\n-----END PGP SIGNATURE-----", "payload": "tree ba55b59d9096d1387e0309b5306262f40e4a4928\nparent 3c7c2c6ca7de0317b5852c0e77aa39a2493f2dee\nauthor Aaron Hill <aa1ronham@gmail.com> 1555195741 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1555271119 -0400\n\nFix Windows dll name format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1", "html_url": "https://github.com/rust-lang/rust/commit/7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c7c2c6ca7de0317b5852c0e77aa39a2493f2dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7c2c6ca7de0317b5852c0e77aa39a2493f2dee", "html_url": "https://github.com/rust-lang/rust/commit/3c7c2c6ca7de0317b5852c0e77aa39a2493f2dee"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "11e9f1c39785d8352b9028ff1dab49075f0fdb42", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=7ba8a9e685470b6aef3a230ab6eeb25c3152e7f1", "patch": "@@ -74,22 +74,22 @@ pub fn dylib_env_var() -> &'static str {\n     }\n }\n \n-/// The platform-specific library file extension\n-pub fn lib_extension(dylib: bool) -> &'static str {\n+/// The platform-specific library name\n+pub fn get_lib_name(lib: &str, dylib: bool) -> String {\n     // In some casess (e.g. MUSL), we build a static\n     // library, rather than a dynamic library.\n     // In this case, the only path we can pass\n     // with '--extern-meta' is the '.lib' file\n     if !dylib {\n-        return \".rlib\"\n+        return format!(\"lib{}.rlib\", lib);\n     }\n \n     if cfg!(windows) {\n-        \".dll\"\n+        format!(\"{}.dll\", lib)\n     } else if cfg!(target_os = \"macos\") {\n-        \".dylib\"\n+        format!(\"lib{}.dylib\", lib)\n     } else {\n-        \".so\"\n+        format!(\"lib{}.so\", lib)\n     }\n }\n \n@@ -1608,7 +1608,7 @@ impl<'test> TestCx<'test> {\n         let mut extern_priv = self.props.extern_private.clone();\n \n         let mut add_extern_priv = |priv_dep: &str, dylib: bool| {\n-            let lib_name = format!(\"lib{}{}\", priv_dep, lib_extension(dylib));\n+            let lib_name = get_lib_name(priv_dep, dylib);\n             rustc\n                 .arg(\"--extern-private\")\n                 .arg(format!(\"{}={}\", priv_dep, aux_dir.join(lib_name).to_str().unwrap()));"}]}