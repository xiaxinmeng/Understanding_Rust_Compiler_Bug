{"sha": "34debb640bd96a4c929ba5f81291c880b8a629e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZGViYjY0MGJkOTZhNGM5MjliYTVmODEyOTFjODgwYjhhNjI5ZTM=", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-01-17T19:28:02Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-01-17T19:30:18Z"}, "message": "Edit rustc_middle::ty::cast docs\n\nLink to RFC 401 and add missing punctuation.", "tree": {"sha": "a7d7058ccdad160fca1862521158230fcd4a7486", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7d7058ccdad160fca1862521158230fcd4a7486"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34debb640bd96a4c929ba5f81291c880b8a629e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34debb640bd96a4c929ba5f81291c880b8a629e3", "html_url": "https://github.com/rust-lang/rust/commit/34debb640bd96a4c929ba5f81291c880b8a629e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34debb640bd96a4c929ba5f81291c880b8a629e3/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edeb631ad0cd6fdf31e2e31ec90e105d1768be28", "url": "https://api.github.com/repos/rust-lang/rust/commits/edeb631ad0cd6fdf31e2e31ec90e105d1768be28", "html_url": "https://github.com/rust-lang/rust/commit/edeb631ad0cd6fdf31e2e31ec90e105d1768be28"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d737d1ebf56c658815570b9a6f669a96c5ea3faa", "filename": "compiler/rustc_middle/src/ty/cast.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/34debb640bd96a4c929ba5f81291c880b8a629e3/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34debb640bd96a4c929ba5f81291c880b8a629e3/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs?ref=34debb640bd96a4c929ba5f81291c880b8a629e3", "patch": "@@ -22,15 +22,16 @@ pub enum CastTy<'tcx> {\n     /// Various types that are represented as ints and handled mostly\n     /// in the same way, merged for easier matching.\n     Int(IntTy),\n-    /// Floating-Point types\n+    /// Floating-point types.\n     Float,\n-    /// Function Pointers\n+    /// Function pointers.\n     FnPtr,\n-    /// Raw pointers\n+    /// Raw pointers.\n     Ptr(ty::TypeAndMut<'tcx>),\n }\n \n-/// Cast Kind. See RFC 401 (or librustc_typeck/check/cast.rs)\n+/// Cast Kind. See [RFC 401](https://rust-lang.github.io/rfcs/0401-coercions.html)\n+/// (or librustc_typeck/check/cast.rs).\n #[derive(Copy, Clone, Debug, TyEncodable, TyDecodable, HashStable)]\n pub enum CastKind {\n     CoercionCast,\n@@ -48,7 +49,7 @@ pub enum CastKind {\n \n impl<'tcx> CastTy<'tcx> {\n     /// Returns `Some` for integral/pointer casts.\n-    /// casts like unsizing casts will return `None`\n+    /// Casts like unsizing casts will return `None`.\n     pub fn from_ty(t: Ty<'tcx>) -> Option<CastTy<'tcx>> {\n         match *t.kind() {\n             ty::Bool => Some(CastTy::Int(IntTy::Bool)),"}]}