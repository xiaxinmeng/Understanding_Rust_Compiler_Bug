{"sha": "de2ea00ace0910701620afbcaf3a124ea2cb9942", "node_id": "C_kwDOAAsO6NoAKGRlMmVhMDBhY2UwOTEwNzAxNjIwYWZiY2FmM2ExMjRlYTJjYjk5NDI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-25T11:37:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-25T11:37:30Z"}, "message": "Merge #10345\n\n10345: minore: improve consistency r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "300272651d9617a1305d542bacb37d02a91eed0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/300272651d9617a1305d542bacb37d02a91eed0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de2ea00ace0910701620afbcaf3a124ea2cb9942", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhTwn6CRBK7hj4Ov3rIwAAloQIAGv+oFacuMac/19+7Ls6Umv4\ntPWHGtm69PWX/byxe59Q8n9RE6sZrRq/8bpbgO/iuSTutYV5HqNx9/rrVliPXhkk\npxkQc4DvuxSzDpO09KmiwkBR1+rPsRztnczb0Xv99m1AjbRTS6Dds//hWE0xQaaD\neZt5In94ZzOo9Q3Opu7Fi2UmH5OTLofvYkVebGLMS/Y9BYKC5ltKt82wtdZFcio4\nQ1TFnNLzItVJKzBMrKt0xdk4mg0MJnbKCNEJ+rFIEegKuqQ7kMz9rOOhw/AFz8Ra\nI+fSUmt6skzmNs/eQMeOuAVTl7/Nat5kDdaYzdeCB/5oh/F68a7+7HPSB1z7sWA=\n=i3qY\n-----END PGP SIGNATURE-----\n", "payload": "tree 300272651d9617a1305d542bacb37d02a91eed0f\nparent 33c5204809e677139ca1fe193e1b01b8f20db633\nparent 929fca5adcf0661f3427b30b3fb1053e04c82bea\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632569850 +0000\ncommitter GitHub <noreply@github.com> 1632569850 +0000\n\nMerge #10345\n\n10345: minore: improve consistency r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de2ea00ace0910701620afbcaf3a124ea2cb9942", "html_url": "https://github.com/rust-lang/rust/commit/de2ea00ace0910701620afbcaf3a124ea2cb9942", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de2ea00ace0910701620afbcaf3a124ea2cb9942/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33c5204809e677139ca1fe193e1b01b8f20db633", "url": "https://api.github.com/repos/rust-lang/rust/commits/33c5204809e677139ca1fe193e1b01b8f20db633", "html_url": "https://github.com/rust-lang/rust/commit/33c5204809e677139ca1fe193e1b01b8f20db633"}, {"sha": "929fca5adcf0661f3427b30b3fb1053e04c82bea", "url": "https://api.github.com/repos/rust-lang/rust/commits/929fca5adcf0661f3427b30b3fb1053e04c82bea", "html_url": "https://github.com/rust-lang/rust/commit/929fca5adcf0661f3427b30b3fb1053e04c82bea"}], "stats": {"total": 282, "additions": 137, "deletions": 145}, "files": [{"sha": "ba64f58e6dcf0e3974a5a2b565464bc5f9ed44c7", "filename": "crates/parser/src/grammar/expressions.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -243,12 +243,12 @@ fn current_op(p: &Parser) -> (u8, SyntaxKind) {\n fn expr_bp(p: &mut Parser, mut r: Restrictions, bp: u8) -> (Option<CompletedMarker>, BlockLike) {\n     let mut lhs = match lhs(p, r) {\n         Some((lhs, blocklike)) => {\n-            // test stmt_bin_expr_ambiguity\n-            // fn foo() {\n-            //     let _ = {1} & 2;\n-            //     {1} &2;\n-            // }\n             if r.prefer_stmt && blocklike.is_block() {\n+                // test stmt_bin_expr_ambiguity\n+                // fn f() {\n+                //     let _ = {1} & 2;\n+                //     {1} &2;\n+                // }\n                 return (Some(lhs), BlockLike::Block);\n             }\n             lhs\n@@ -263,9 +263,7 @@ fn expr_bp(p: &mut Parser, mut r: Restrictions, bp: u8) -> (Option<CompletedMark\n             break;\n         }\n         // test as_precedence\n-        // fn foo() {\n-        //     let _ = &1 as *const i32;\n-        // }\n+        // fn f() { let _ = &1 as *const i32; }\n         if p.at(T![as]) {\n             lhs = cast_expr(p, lhs);\n             continue;\n@@ -274,9 +272,7 @@ fn expr_bp(p: &mut Parser, mut r: Restrictions, bp: u8) -> (Option<CompletedMark\n         p.bump(op);\n \n         // test binop_resets_statementness\n-        // fn foo() {\n-        //     v = {1}&2;\n-        // }\n+        // fn f() { v = {1}&2; }\n         r = Restrictions { prefer_stmt: false, ..r };\n \n         if is_range {"}, {"sha": "07213b08be2739220af52b8b1b97ee9d0e1da794", "filename": "crates/syntax/src/tests/sourcegen_ast.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -19,22 +19,22 @@ use crate::tests::ast_src::{\n \n #[test]\n fn sourcegen_ast() {\n-    let grammar = rust_grammar();\n-    let ast = lower(&grammar);\n-\n+    let syntax_kinds = generate_syntax_kinds(KINDS_SRC);\n     let syntax_kinds_file =\n         sourcegen::project_root().join(\"crates/parser/src/syntax_kind/generated.rs\");\n-    let syntax_kinds = generate_syntax_kinds(KINDS_SRC);\n     sourcegen::ensure_file_contents(syntax_kinds_file.as_path(), &syntax_kinds);\n \n+    let grammar = rust_grammar();\n+    let ast = lower(&grammar);\n+\n+    let ast_tokens = generate_tokens(&ast);\n     let ast_tokens_file =\n         sourcegen::project_root().join(\"crates/syntax/src/ast/generated/tokens.rs\");\n-    let contents = generate_tokens(&ast);\n-    sourcegen::ensure_file_contents(ast_tokens_file.as_path(), &contents);\n+    sourcegen::ensure_file_contents(ast_tokens_file.as_path(), &ast_tokens);\n \n+    let ast_nodes = generate_nodes(KINDS_SRC, &ast);\n     let ast_nodes_file = sourcegen::project_root().join(\"crates/syntax/src/ast/generated/nodes.rs\");\n-    let contents = generate_nodes(KINDS_SRC, &ast);\n-    sourcegen::ensure_file_contents(ast_nodes_file.as_path(), &contents);\n+    sourcegen::ensure_file_contents(ast_nodes_file.as_path(), &ast_nodes);\n }\n \n fn generate_tokens(grammar: &AstSrc) -> String {"}, {"sha": "509c54c2acf1cf1e1024aa6d9a080c57e430f3cd", "filename": "crates/syntax/test_data/parser/inline/ok/0070_stmt_bin_expr_ambiguity.rast", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -1,50 +1,50 @@\n-SOURCE_FILE@0..46\n-  FN@0..45\n+SOURCE_FILE@0..44\n+  FN@0..43\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n-    NAME@3..6\n-      IDENT@3..6 \"foo\"\n-    PARAM_LIST@6..8\n-      L_PAREN@6..7 \"(\"\n-      R_PAREN@7..8 \")\"\n-    WHITESPACE@8..9 \" \"\n-    BLOCK_EXPR@9..45\n-      L_CURLY@9..10 \"{\"\n-      WHITESPACE@10..15 \"\\n    \"\n-      LET_STMT@15..31\n-        LET_KW@15..18 \"let\"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..43\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..13 \"\\n    \"\n+      LET_STMT@13..29\n+        LET_KW@13..16 \"let\"\n+        WHITESPACE@16..17 \" \"\n+        WILDCARD_PAT@17..18\n+          UNDERSCORE@17..18 \"_\"\n         WHITESPACE@18..19 \" \"\n-        WILDCARD_PAT@19..20\n-          UNDERSCORE@19..20 \"_\"\n+        EQ@19..20 \"=\"\n         WHITESPACE@20..21 \" \"\n-        EQ@21..22 \"=\"\n-        WHITESPACE@22..23 \" \"\n-        BIN_EXPR@23..30\n-          BLOCK_EXPR@23..26\n-            L_CURLY@23..24 \"{\"\n-            LITERAL@24..25\n-              INT_NUMBER@24..25 \"1\"\n-            R_CURLY@25..26 \"}\"\n+        BIN_EXPR@21..28\n+          BLOCK_EXPR@21..24\n+            L_CURLY@21..22 \"{\"\n+            LITERAL@22..23\n+              INT_NUMBER@22..23 \"1\"\n+            R_CURLY@23..24 \"}\"\n+          WHITESPACE@24..25 \" \"\n+          AMP@25..26 \"&\"\n           WHITESPACE@26..27 \" \"\n-          AMP@27..28 \"&\"\n-          WHITESPACE@28..29 \" \"\n-          LITERAL@29..30\n-            INT_NUMBER@29..30 \"2\"\n-        SEMICOLON@30..31 \";\"\n-      WHITESPACE@31..36 \"\\n    \"\n-      EXPR_STMT@36..39\n-        BLOCK_EXPR@36..39\n-          L_CURLY@36..37 \"{\"\n-          LITERAL@37..38\n-            INT_NUMBER@37..38 \"1\"\n-          R_CURLY@38..39 \"}\"\n-      WHITESPACE@39..40 \" \"\n-      EXPR_STMT@40..43\n-        REF_EXPR@40..42\n-          AMP@40..41 \"&\"\n-          LITERAL@41..42\n-            INT_NUMBER@41..42 \"2\"\n-        SEMICOLON@42..43 \";\"\n-      WHITESPACE@43..44 \"\\n\"\n-      R_CURLY@44..45 \"}\"\n-  WHITESPACE@45..46 \"\\n\"\n+          LITERAL@27..28\n+            INT_NUMBER@27..28 \"2\"\n+        SEMICOLON@28..29 \";\"\n+      WHITESPACE@29..34 \"\\n    \"\n+      EXPR_STMT@34..37\n+        BLOCK_EXPR@34..37\n+          L_CURLY@34..35 \"{\"\n+          LITERAL@35..36\n+            INT_NUMBER@35..36 \"1\"\n+          R_CURLY@36..37 \"}\"\n+      WHITESPACE@37..38 \" \"\n+      EXPR_STMT@38..41\n+        REF_EXPR@38..40\n+          AMP@38..39 \"&\"\n+          LITERAL@39..40\n+            INT_NUMBER@39..40 \"2\"\n+        SEMICOLON@40..41 \";\"\n+      WHITESPACE@41..42 \"\\n\"\n+      R_CURLY@42..43 \"}\"\n+  WHITESPACE@43..44 \"\\n\""}, {"sha": "7e8bd87bf1cfac40c080aaf25dafe04818db8e0d", "filename": "crates/syntax/test_data/parser/inline/ok/0070_stmt_bin_expr_ambiguity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rs?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -1,4 +1,4 @@\n-fn foo() {\n+fn f() {\n     let _ = {1} & 2;\n     {1} &2;\n }"}, {"sha": "c9cfb97ef36cde77382a7b09cc211894db2100d9", "filename": "crates/syntax/test_data/parser/inline/ok/0146_as_precedence.rast", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -1,42 +1,42 @@\n-SOURCE_FILE@0..43\n-  FN@0..42\n+SOURCE_FILE@0..37\n+  FN@0..36\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n-    NAME@3..6\n-      IDENT@3..6 \"foo\"\n-    PARAM_LIST@6..8\n-      L_PAREN@6..7 \"(\"\n-      R_PAREN@7..8 \")\"\n-    WHITESPACE@8..9 \" \"\n-    BLOCK_EXPR@9..42\n-      L_CURLY@9..10 \"{\"\n-      WHITESPACE@10..15 \"\\n    \"\n-      LET_STMT@15..40\n-        LET_KW@15..18 \"let\"\n-        WHITESPACE@18..19 \" \"\n-        WILDCARD_PAT@19..20\n-          UNDERSCORE@19..20 \"_\"\n-        WHITESPACE@20..21 \" \"\n-        EQ@21..22 \"=\"\n-        WHITESPACE@22..23 \" \"\n-        CAST_EXPR@23..39\n-          REF_EXPR@23..25\n-            AMP@23..24 \"&\"\n-            LITERAL@24..25\n-              INT_NUMBER@24..25 \"1\"\n-          WHITESPACE@25..26 \" \"\n-          AS_KW@26..28 \"as\"\n-          WHITESPACE@28..29 \" \"\n-          PTR_TYPE@29..39\n-            STAR@29..30 \"*\"\n-            CONST_KW@30..35 \"const\"\n-            WHITESPACE@35..36 \" \"\n-            PATH_TYPE@36..39\n-              PATH@36..39\n-                PATH_SEGMENT@36..39\n-                  NAME_REF@36..39\n-                    IDENT@36..39 \"i32\"\n-        SEMICOLON@39..40 \";\"\n-      WHITESPACE@40..41 \"\\n\"\n-      R_CURLY@41..42 \"}\"\n-  WHITESPACE@42..43 \"\\n\"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..36\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..9 \" \"\n+      LET_STMT@9..34\n+        LET_KW@9..12 \"let\"\n+        WHITESPACE@12..13 \" \"\n+        WILDCARD_PAT@13..14\n+          UNDERSCORE@13..14 \"_\"\n+        WHITESPACE@14..15 \" \"\n+        EQ@15..16 \"=\"\n+        WHITESPACE@16..17 \" \"\n+        CAST_EXPR@17..33\n+          REF_EXPR@17..19\n+            AMP@17..18 \"&\"\n+            LITERAL@18..19\n+              INT_NUMBER@18..19 \"1\"\n+          WHITESPACE@19..20 \" \"\n+          AS_KW@20..22 \"as\"\n+          WHITESPACE@22..23 \" \"\n+          PTR_TYPE@23..33\n+            STAR@23..24 \"*\"\n+            CONST_KW@24..29 \"const\"\n+            WHITESPACE@29..30 \" \"\n+            PATH_TYPE@30..33\n+              PATH@30..33\n+                PATH_SEGMENT@30..33\n+                  NAME_REF@30..33\n+                    IDENT@30..33 \"i32\"\n+        SEMICOLON@33..34 \";\"\n+      WHITESPACE@34..35 \" \"\n+      R_CURLY@35..36 \"}\"\n+  WHITESPACE@36..37 \"\\n\""}, {"sha": "70559c5ef5a59f32d19309917c3492667898ce0a", "filename": "crates/syntax/test_data/parser/inline/ok/0146_as_precedence.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rs?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -1,3 +1 @@\n-fn foo() {\n-    let _ = &1 as *const i32;\n-}\n+fn f() { let _ = &1 as *const i32; }"}, {"sha": "7473f4836ed60202a6a1ef560d0df91c0a6ffdde", "filename": "crates/syntax/test_data/parser/inline/ok/0158_binop_resets_statementness.rast", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -1,36 +1,36 @@\n-SOURCE_FILE@0..28\n-  FN@0..27\n+SOURCE_FILE@0..22\n+  FN@0..21\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n-    NAME@3..6\n-      IDENT@3..6 \"foo\"\n-    PARAM_LIST@6..8\n-      L_PAREN@6..7 \"(\"\n-      R_PAREN@7..8 \")\"\n-    WHITESPACE@8..9 \" \"\n-    BLOCK_EXPR@9..27\n-      L_CURLY@9..10 \"{\"\n-      WHITESPACE@10..15 \"\\n    \"\n-      EXPR_STMT@15..25\n-        BIN_EXPR@15..24\n-          PATH_EXPR@15..16\n-            PATH@15..16\n-              PATH_SEGMENT@15..16\n-                NAME_REF@15..16\n-                  IDENT@15..16 \"v\"\n-          WHITESPACE@16..17 \" \"\n-          EQ@17..18 \"=\"\n-          WHITESPACE@18..19 \" \"\n-          BIN_EXPR@19..24\n-            BLOCK_EXPR@19..22\n-              L_CURLY@19..20 \"{\"\n-              LITERAL@20..21\n-                INT_NUMBER@20..21 \"1\"\n-              R_CURLY@21..22 \"}\"\n-            AMP@22..23 \"&\"\n-            LITERAL@23..24\n-              INT_NUMBER@23..24 \"2\"\n-        SEMICOLON@24..25 \";\"\n-      WHITESPACE@25..26 \"\\n\"\n-      R_CURLY@26..27 \"}\"\n-  WHITESPACE@27..28 \"\\n\"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..21\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..9 \" \"\n+      EXPR_STMT@9..19\n+        BIN_EXPR@9..18\n+          PATH_EXPR@9..10\n+            PATH@9..10\n+              PATH_SEGMENT@9..10\n+                NAME_REF@9..10\n+                  IDENT@9..10 \"v\"\n+          WHITESPACE@10..11 \" \"\n+          EQ@11..12 \"=\"\n+          WHITESPACE@12..13 \" \"\n+          BIN_EXPR@13..18\n+            BLOCK_EXPR@13..16\n+              L_CURLY@13..14 \"{\"\n+              LITERAL@14..15\n+                INT_NUMBER@14..15 \"1\"\n+              R_CURLY@15..16 \"}\"\n+            AMP@16..17 \"&\"\n+            LITERAL@17..18\n+              INT_NUMBER@17..18 \"2\"\n+        SEMICOLON@18..19 \";\"\n+      WHITESPACE@19..20 \" \"\n+      R_CURLY@20..21 \"}\"\n+  WHITESPACE@21..22 \"\\n\""}, {"sha": "e325e46676fcbae3f0a62cf43f6c0c3a69224cf6", "filename": "crates/syntax/test_data/parser/inline/ok/0158_binop_resets_statementness.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2ea00ace0910701620afbcaf3a124ea2cb9942/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rs?ref=de2ea00ace0910701620afbcaf3a124ea2cb9942", "patch": "@@ -1,3 +1 @@\n-fn foo() {\n-    v = {1}&2;\n-}\n+fn f() { v = {1}&2; }"}]}