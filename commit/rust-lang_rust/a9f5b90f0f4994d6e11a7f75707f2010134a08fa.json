{"sha": "a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZjViOTBmMGY0OTk0ZDZlMTFhN2Y3NTcwN2YyMDEwMTM0YTA4ZmE=", "commit": {"author": {"name": "Phil Turnbull", "email": "philip.turnbull@gmail.com", "date": "2016-11-22T18:22:37Z"}, "committer": {"name": "Phil Turnbull", "email": "philip.turnbull@gmail.com", "date": "2016-11-23T02:06:20Z"}, "message": "Lint usage of `*&` and `*&mut`\n\nfixes #1316", "tree": {"sha": "3238938e7e7a43e2bbdd35d526d7aec3246a3480", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3238938e7e7a43e2bbdd35d526d7aec3246a3480"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "html_url": "https://github.com/rust-lang/rust/commit/a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/comments", "author": {"login": "philipturnbull", "id": 45588, "node_id": "MDQ6VXNlcjQ1NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/45588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipturnbull", "html_url": "https://github.com/philipturnbull", "followers_url": "https://api.github.com/users/philipturnbull/followers", "following_url": "https://api.github.com/users/philipturnbull/following{/other_user}", "gists_url": "https://api.github.com/users/philipturnbull/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipturnbull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipturnbull/subscriptions", "organizations_url": "https://api.github.com/users/philipturnbull/orgs", "repos_url": "https://api.github.com/users/philipturnbull/repos", "events_url": "https://api.github.com/users/philipturnbull/events{/privacy}", "received_events_url": "https://api.github.com/users/philipturnbull/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philipturnbull", "id": 45588, "node_id": "MDQ6VXNlcjQ1NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/45588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipturnbull", "html_url": "https://github.com/philipturnbull", "followers_url": "https://api.github.com/users/philipturnbull/followers", "following_url": "https://api.github.com/users/philipturnbull/following{/other_user}", "gists_url": "https://api.github.com/users/philipturnbull/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipturnbull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipturnbull/subscriptions", "organizations_url": "https://api.github.com/users/philipturnbull/orgs", "repos_url": "https://api.github.com/users/philipturnbull/repos", "events_url": "https://api.github.com/users/philipturnbull/events{/privacy}", "received_events_url": "https://api.github.com/users/philipturnbull/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "530083c3b925829e4d2211057444510a7177f3b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/530083c3b925829e4d2211057444510a7177f3b4", "html_url": "https://github.com/rust-lang/rust/commit/530083c3b925829e4d2211057444510a7177f3b4"}], "stats": {"total": 130, "additions": 129, "deletions": 1}, "files": [{"sha": "8c4c3b2eb8a5649951a72bb7d667477cc6b08164", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "patch": "@@ -248,6 +248,7 @@ All notable changes to this project will be documented in this file.\n [`crosspointer_transmute`]: https://github.com/Manishearth/rust-clippy/wiki#crosspointer_transmute\n [`cyclomatic_complexity`]: https://github.com/Manishearth/rust-clippy/wiki#cyclomatic_complexity\n [`deprecated_semver`]: https://github.com/Manishearth/rust-clippy/wiki#deprecated_semver\n+[`deref_addrof`]: https://github.com/Manishearth/rust-clippy/wiki#deref_addrof\n [`derive_hash_xor_eq`]: https://github.com/Manishearth/rust-clippy/wiki#derive_hash_xor_eq\n [`diverging_sub_expression`]: https://github.com/Manishearth/rust-clippy/wiki#diverging_sub_expression\n [`doc_markdown`]: https://github.com/Manishearth/rust-clippy/wiki#doc_markdown"}, {"sha": "b2d0c498f749ece0432cc3385359d340940fd7e0", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "patch": "@@ -182,7 +182,7 @@ You can check out this great service at [clippy.bashy.io](https://clippy.bashy.i\n \n ## Lints\n \n-There are 178 lints included in this crate:\n+There are 179 lints included in this crate:\n \n name                                                                                                                   | default | triggers on\n -----------------------------------------------------------------------------------------------------------------------|---------|----------------------------------------------------------------------------------------------------------------------------------\n@@ -214,6 +214,7 @@ name\n [crosspointer_transmute](https://github.com/Manishearth/rust-clippy/wiki#crosspointer_transmute)                       | warn    | transmutes that have to or from types that are a pointer to the other\n [cyclomatic_complexity](https://github.com/Manishearth/rust-clippy/wiki#cyclomatic_complexity)                         | warn    | functions that should be split up into multiple functions\n [deprecated_semver](https://github.com/Manishearth/rust-clippy/wiki#deprecated_semver)                                 | warn    | use of `#[deprecated(since = \"x\")]` where x is not semver\n+[deref_addrof](https://github.com/Manishearth/rust-clippy/wiki#deref_addrof)                                           | warn    | use of `*&` or `*&mut` in an expression\n [derive_hash_xor_eq](https://github.com/Manishearth/rust-clippy/wiki#derive_hash_xor_eq)                               | warn    | deriving `Hash` but implementing `PartialEq` explicitly\n [diverging_sub_expression](https://github.com/Manishearth/rust-clippy/wiki#diverging_sub_expression)                   | warn    | whether an expression contains a diverging sub expression\n [doc_markdown](https://github.com/Manishearth/rust-clippy/wiki#doc_markdown)                                           | warn    | presence of `_`, `::` or camel-case outside backticks in documentation"}, {"sha": "508ef023b80f6a780e0a6690e218446a990c63ea", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "patch": "@@ -115,6 +115,7 @@ pub mod precedence;\n pub mod print;\n pub mod ptr;\n pub mod ranges;\n+pub mod reference;\n pub mod regex;\n pub mod returns;\n pub mod serde;\n@@ -266,6 +267,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box ok_if_let::Pass);\n     reg.register_late_lint_pass(box if_let_redundant_pattern_matching::Pass);\n     reg.register_late_lint_pass(box partialeq_ne_impl::Pass);\n+    reg.register_late_lint_pass(box reference::Pass);\n \n     reg.register_lint_group(\"clippy_restrictions\", vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -431,6 +433,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         ptr::PTR_ARG,\n         ranges::RANGE_STEP_BY_ZERO,\n         ranges::RANGE_ZIP_WITH_LEN,\n+        reference::DEREF_ADDROF,\n         regex::INVALID_REGEX,\n         regex::REGEX_MACRO,\n         regex::TRIVIAL_REGEX,"}, {"sha": "97ee9b2a577558768f9fa937eceb6db87275b63c", "filename": "clippy_lints/src/reference.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "patch": "@@ -0,0 +1,48 @@\n+use rustc::hir::*;\n+use rustc::lint::*;\n+use utils::{span_lint_and_then, snippet};\n+\n+/// **What it does:** Checks for usage of `*&` and `*&mut` in expressions.\n+///\n+/// **Why is this bad?** Immediately dereferencing a reference is no-op and\n+/// makes the code less clear.\n+///\n+/// **Known problems:** Multiple dereference/addrof pairs are not handled so\n+/// the suggested fix for `x = **&&y` is `x = *&y`, which is still incorrect.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let a = f(*&mut b);\n+/// let c = *&d;\n+/// ```\n+declare_lint! {\n+    pub DEREF_ADDROF,\n+    Warn,\n+    \"use of `*&` or `*&mut` in an expression\"\n+}\n+\n+pub struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(DEREF_ADDROF)\n+    }\n+}\n+\n+impl LateLintPass for Pass {\n+    fn check_expr(&mut self, cx: &LateContext, e: &Expr) {\n+        if let ExprUnary(UnDeref, ref deref_target) = e.node {\n+            if let ExprAddrOf(_, ref addrof_target) = deref_target.node {\n+                span_lint_and_then(\n+                    cx,\n+                    DEREF_ADDROF,\n+                    e.span,\n+                    \"immediately dereferencing a reference\",\n+                    |db| {\n+                        db.span_suggestion(e.span, \"try this\",\n+                                             format!(\"{}\", snippet(cx, addrof_target.span, \"_\")));\n+                    });\n+            }\n+        }\n+    }\n+}"}, {"sha": "30a66a715f2000ed5d1650b77dc66a449ff1887d", "filename": "tests/compile-fail/no_effect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/tests%2Fcompile-fail%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/tests%2Fcompile-fail%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fno_effect.rs?ref=a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "patch": "@@ -4,6 +4,7 @@\n #![deny(no_effect, unnecessary_operation)]\n #![allow(dead_code)]\n #![allow(path_statements)]\n+#![allow(deref_addrof)]\n #![feature(untagged_unions)]\n \n struct Unit;"}, {"sha": "7a113ad5255e12cb1f307efe7f2bb081f0d57135", "filename": "tests/compile-fail/reference.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/tests%2Fcompile-fail%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f5b90f0f4994d6e11a7f75707f2010134a08fa/tests%2Fcompile-fail%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freference.rs?ref=a9f5b90f0f4994d6e11a7f75707f2010134a08fa", "patch": "@@ -0,0 +1,74 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+fn get_number() -> usize {\n+    10\n+}\n+\n+fn get_reference(n : &usize) -> &usize {\n+    n\n+}\n+\n+#[allow(many_single_char_names)]\n+#[allow(unused_variables)]\n+#[deny(deref_addrof)]\n+fn main() {\n+    let a = 10;\n+    let aref = &a;\n+\n+    let b = *&a;\n+    //~^ERROR immediately dereferencing a reference\n+    //~|HELP try this\n+    //~|SUGGESTION a\n+\n+    let b = *&get_number();\n+    //~^ERROR immediately dereferencing a reference\n+    //~|HELP try this\n+    //~|SUGGESTION get_number()\n+\n+    let b = *get_reference(&a);\n+\n+    let bytes : Vec<usize> = vec![1, 2, 3, 4];\n+    let b = *&bytes[1..2][0];\n+    //~^ERROR immediately dereferencing a reference\n+    //~|HELP try this\n+    //~|SUGGESTION bytes[1..2][0]\n+\n+    let b = *(&a);\n+    //~^ERROR immediately dereferencing a reference\n+    //~|HELP try this\n+    //~|SUGGESTION a\n+\n+    let b = *&&a;\n+    //~^ERROR immediately dereferencing a reference\n+    //~|HELP try this\n+    //~|SUGGESTION &a\n+\n+    let b = **&aref;\n+    //~^ERROR immediately dereferencing a reference\n+    //~|HELP try this\n+    //~|SUGGESTION aref\n+\n+    //This produces a suggestion of 'let b = *&a;' which is still incorrect\n+    let b = **&&a;\n+    //~^ERROR immediately dereferencing a reference\n+    //~|HELP try this\n+    //~|SUGGESTION a\n+\n+    {\n+        let mut x = 10;\n+        let y = *&mut x;\n+        //~^ERROR immediately dereferencing a reference\n+        //~|HELP try this\n+        //~|SUGGESTION x\n+    }\n+\n+    {\n+        //This produces a suggestion of 'let y = *&mut x' which is still incorrect\n+        let mut x = 10;\n+        let y = **&mut &mut x;\n+        //~^ERROR immediately dereferencing a reference\n+        //~|HELP try this\n+        //~|SUGGESTION x\n+    }\n+}"}]}