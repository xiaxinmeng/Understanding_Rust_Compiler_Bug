{"sha": "b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MzU4N2M3YmRkNjdjNjNiZDMzYTc0NWZkYWViMjJhODQ3YjZjMmY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-14T17:46:39Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-14T17:46:39Z"}, "message": "Re-export Origin to replace ExpansionOrigin", "tree": {"sha": "c4a73cb4d89ff6dce084f3b2af640e272b163319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4a73cb4d89ff6dce084f3b2af640e272b163319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "html_url": "https://github.com/rust-lang/rust/commit/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61360fdfec981eadef1eefb595c8b32c951771e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/61360fdfec981eadef1eefb595c8b32c951771e8", "html_url": "https://github.com/rust-lang/rust/commit/61360fdfec981eadef1eefb595c8b32c951771e8"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "8b9562722d4db45407fb40a0f55e354ccc3d2be7", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "patch": "@@ -58,7 +58,6 @@ pub use hir_def::{\n     type_ref::Mutability,\n };\n pub use hir_expand::{\n-    name::Name, ExpansionOrigin, HirFileId, InFile, MacroCallId, MacroCallLoc, MacroDefId,\n-    MacroFile,\n+    name::Name, HirFileId, InFile, MacroCallId, MacroCallLoc, MacroDefId, MacroFile, Origin,\n };\n pub use hir_ty::{display::HirDisplay, CallableDef};"}, {"sha": "cb4e1950bf82f6c2b27269a5a813043e217317be", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "patch": "@@ -214,11 +214,7 @@ pub struct ExpansionInfo {\n     exp_map: Arc<mbe::TokenMap>,\n }\n \n-#[derive(Debug, Clone, PartialEq, Eq)]\n-pub enum ExpansionOrigin {\n-    Call,\n-    Def,\n-}\n+pub use mbe::Origin;\n \n impl ExpansionInfo {\n     pub fn call_node(&self) -> Option<InFile<SyntaxNode>> {\n@@ -241,17 +237,15 @@ impl ExpansionInfo {\n     pub fn map_token_up(\n         &self,\n         token: InFile<&SyntaxToken>,\n-    ) -> Option<(InFile<SyntaxToken>, ExpansionOrigin)> {\n+    ) -> Option<(InFile<SyntaxToken>, Origin)> {\n         let token_id = self.exp_map.token_by_range(token.value.text_range())?;\n \n         let (token_id, origin) = self.macro_def.0.map_id_up(token_id);\n-        let (token_map, tt, origin) = match origin {\n-            mbe::Origin::Call => (&self.macro_arg.1, self.arg.clone(), ExpansionOrigin::Call),\n-            mbe::Origin::Def => (\n-                &self.macro_def.1,\n-                self.def.as_ref().map(|tt| tt.syntax().clone()),\n-                ExpansionOrigin::Def,\n-            ),\n+        let (token_map, tt) = match origin {\n+            mbe::Origin::Call => (&self.macro_arg.1, self.arg.clone()),\n+            mbe::Origin::Def => {\n+                (&self.macro_def.1, self.def.as_ref().map(|tt| tt.syntax().clone()))\n+            }\n         };\n \n         let range = token_map.range_by_token(token_id)?;"}, {"sha": "258478bc138b80d92b88df0d97a6095e89bf15da", "filename": "crates/ra_ide/src/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_ide%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_ide%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fexpand.rs?ref=b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "patch": "@@ -1,7 +1,7 @@\n //! Utilities to work with files, produced by macros.\n use std::iter::successors;\n \n-use hir::{ExpansionOrigin, InFile};\n+use hir::{InFile, Origin};\n use ra_db::FileId;\n use ra_syntax::{ast, AstNode, SyntaxNode, SyntaxToken, TextRange};\n \n@@ -45,7 +45,7 @@ pub(crate) fn original_range_by_kind(\n \n             if first.file_id != last.file_id\n                 || first_origin != last_origin\n-                || (kind == OriginalRangeKind::CallToken && first_origin != ExpansionOrigin::Call)\n+                || (kind == OriginalRangeKind::CallToken && first_origin != Origin::Call)\n             {\n                 return None;\n             }"}, {"sha": "ce2deadf6e41a49227800d0aefebdd4e8ca05153", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53587c7bdd67c63bd33a745fdaeb22a847b6c2f/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=b53587c7bdd67c63bd33a745fdaeb22a847b6c2f", "patch": "@@ -104,6 +104,7 @@ impl Shift {\n     }\n }\n \n+#[derive(Debug, Eq, PartialEq)]\n pub enum Origin {\n     Def,\n     Call,"}]}