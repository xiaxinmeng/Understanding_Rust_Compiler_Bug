{"sha": "50be479475799b6e3f8a2d842faf43f6cc246e4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYmU0Nzk0NzU3OTliNmUzZjhhMmQ4NDJmYWY0M2Y2Y2MyNDZlNGU=", "commit": {"author": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2019-02-06T14:42:21Z"}, "committer": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2019-02-06T14:46:39Z"}, "message": "Updated RELEASES.md for 1.33.0", "tree": {"sha": "adf2e3ee98f9c367187e7d76f24bcf47e0e01998", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adf2e3ee98f9c367187e7d76f24bcf47e0e01998"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50be479475799b6e3f8a2d842faf43f6cc246e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50be479475799b6e3f8a2d842faf43f6cc246e4e", "html_url": "https://github.com/rust-lang/rust/commit/50be479475799b6e3f8a2d842faf43f6cc246e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50be479475799b6e3f8a2d842faf43f6cc246e4e/comments", "author": null, "committer": null, "parents": [{"sha": "b139669f374eb5024a50eb13f116ff763b1c5935", "url": "https://api.github.com/repos/rust-lang/rust/commits/b139669f374eb5024a50eb13f116ff763b1c5935", "html_url": "https://github.com/rust-lang/rust/commit/b139669f374eb5024a50eb13f116ff763b1c5935"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "d2d92512d44273280dbff5e312e64a14db8dc5bc", "filename": "RELEASES.md", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/50be479475799b6e3f8a2d842faf43f6cc246e4e/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/50be479475799b6e3f8a2d842faf43f6cc246e4e/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=50be479475799b6e3f8a2d842faf43f6cc246e4e", "patch": "@@ -1,3 +1,129 @@\n+Version 1.33.0 (2019-02-28)\n+==========================\n+\n+Language\n+--------\n+- [You can now use the `cfg(target_vendor)` attribute.][57465] E.g.\n+  `#[cfg(target_vendor=\"linux\")] fn main() { println!(\"Hello Linux!\"); }`\n+- [You can now have multiple patterns in `if let` and `while let`\n+  expressions.][57532] You can do this with the same syntax as a `match`\n+  expression. E.g.\n+  ```rust\n+  enum Creature {\n+    Crab(String),\n+    Person(String),\n+  }\n+\n+  fn main() {\n+    let state = Creature::Crab(\"Ferrous\");\n+\n+    if let Creature::Crab(name) | Creature::Person(name) {\n+      println!(\"This creature's name is: {}\", name);\n+    }\n+  }\n+  ```\n+- [You can now have irrefutable `if let` and `while let` patterns.][57535] Using\n+  this feature will by default produce a warning as this behaviour can be\n+  unintuitive. E.g. `if let _ = 5 {}`\n+- [You can now use `let` bindings and pattern destructurcting in\n+  constant functions.][57175]\n+- [You can now specify multiple attributes in a `cfg_attr` attribute.][57332]\n+  E.g. `#[cfg_attr(all(), must_use, optimize)]`\n+- [You can now specify a specific alignment with the `#[repr(packed)]`\n+  attribute.][57049] E.g. `#[repr(packed(2))] struct Foo(i16, i32);` is a struct\n+  with an alignment of 2 bytes and a size of 6 bytes.\n+- [You can now call unsafe constant functions.][57067] E.g.\n+  ```rust\n+  unsafe const fn foo() -> i32 { 5 }\n+  const fn bar() -> i32 {\n+    unsafe { foo() }\n+  }\n+  ```\n+- [You can now import an item from a module as a `_`.][56303] This allows you to\n+  import a trait's impls, and not have the name in the namespace. E.g.\n+  ```rust\n+  use std::io::Read as _;\n+\n+  // Allowed as there is only one `Read` in the module.\n+  pub trait Read {}\n+  ```\n+- [`extern` functions will now abort by default when panicking.][55982]\n+\n+Compiler\n+--------\n+- [You can now set a linker flavor for `rustc` with the `-Clinker-flavor`\n+  command line argument.][56351]\n+- [The mininum required LLVM version has been bumped to 6.0.][56642]\n+- [Added support for the PowerPC64 architecture on FreeBSD.][57615]\n+- [The `x86_64-fortanix-unknown-sgx` target support has been upgraded to\n+  tier 2 support.][57130] Visit the [platform support] page for information on\n+  Rust's platform support.\n+- [Added support for the `thumbv7neon-linux-androideabi` and\n+  `thumbv7neon-unknown-linux-gnueabihf` targets.][56947]\n+- [Added support for the `x86_64-unknown-uefi` target.][56769]\n+\n+Libraries\n+---------\n+- [The functions `overflowing_{add, sub, mul, shl, shr}` are now constant\n+  functions for all numeric types.][57566]\n+- [The `get` method for all `NonZero` types is now constant.][57167]\n+- [The functions `count_ones`, `count_zeros`, `leading_zeros`, `trailing_zeros`,\n+  `swap_bytes`, `from_be`, `from_le`, `to_be`, `to_le` are now constant for all\n+  numeric types.][57234]\n+- [`Ipv4Addr::new` is now a constant function][57234]\n+\n+Stabilized APIs\n+---------------\n+- [`unix::FileExt::read_exact_at`]\n+- [`unix::FileExt::write_exact_at`]\n+- [`Option::transpose`]\n+- [`Result::transpose`]\n+- [`convert::identity`]\n+- [`pin::Pin`]\n+- [`Vec::resize_with`]\n+- [`VecDeque::resize_with`]\n+- [`Duration::as_millis`]\n+- [`Duration::as_micros`]\n+- [`Duration::as_nanos`]\n+\n+Cargo\n+-----\n+- [Cargo should now rebuild a crate if a file was modified during the initial\n+  build.][cargo/6484]\n+\n+\n+[57615]: https://github.com/rust-lang/rust/pull/57615/\n+[57465]: https://github.com/rust-lang/rust/pull/57465/\n+[57532]: https://github.com/rust-lang/rust/pull/57532/\n+[57535]: https://github.com/rust-lang/rust/pull/57535/\n+[57566]: https://github.com/rust-lang/rust/pull/57566/\n+[57130]: https://github.com/rust-lang/rust/pull/57130/\n+[57167]: https://github.com/rust-lang/rust/pull/57167/\n+[57175]: https://github.com/rust-lang/rust/pull/57175/\n+[57234]: https://github.com/rust-lang/rust/pull/57234/\n+[57332]: https://github.com/rust-lang/rust/pull/57332/\n+[56947]: https://github.com/rust-lang/rust/pull/56947/\n+[57049]: https://github.com/rust-lang/rust/pull/57049/\n+[57067]: https://github.com/rust-lang/rust/pull/57067/\n+[56769]: https://github.com/rust-lang/rust/pull/56769/\n+[56642]: https://github.com/rust-lang/rust/pull/56642/\n+[56303]: https://github.com/rust-lang/rust/pull/56303/\n+[56351]: https://github.com/rust-lang/rust/pull/56351/\n+[55982]: https://github.com/rust-lang/rust/pull/55982/\n+[cargo/6484]: https://github.com/rust-lang/cargo/pull/6484/\n+[`unix::FileExt::read_exact_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#read_exact_at\n+[`unix::FileExt::write_exact_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#write_exact_at\n+[`Option::transpose`]: https://doc.rust-lang.org/std/option/enum.Option.html#transpose\n+[`Result::transpose`]: https://doc.rust-lang.org/std/result/enum.Result.html#transpose\n+[`convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html\n+[`pin::Pin`]: https://doc.rust-lang.org/std/pin/struct.Pin.html\n+[`Vec::resize_with`]: https://doc.rust-lang.org/std/vec/struct.Vec.html#resize_with\n+[`VecDeque::resize_with`]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html#resize_with\n+[`Duration::as_millis`]: https://doc.rust-lang.org/std/time/struct.Duration.html#as_millis\n+[`Duration::as_micros`]: https://doc.rust-lang.org/std/time/struct.Duration.html#as_micros\n+[`Duration::as_nanos`]: https://doc.rust-lang.org/std/time/struct.Duration.html#as_millis\n+\n+\n Version 1.32.0 (2019-01-17)\n ==========================\n "}]}