{"sha": "43a3796379e59a09d7de7b8e441f4a166737e568", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYTM3OTYzNzllNTlhMDlkN2RlN2I4ZTQ0MWY0YTE2NjczN2U1Njg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-06T18:21:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-06T18:21:25Z"}, "message": "Auto merge of #4781 - lzutao:rustup/65134, r=matthiaskrgr\n\nrustup improper_ctypes: `extern \"C\"` fns\n\ncc https://github.com/rust-lang/rust/pull/65134\nchangelog: none", "tree": {"sha": "6849aed13e147643a2cb1a64a5cfb5cb7326ec25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6849aed13e147643a2cb1a64a5cfb5cb7326ec25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43a3796379e59a09d7de7b8e441f4a166737e568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43a3796379e59a09d7de7b8e441f4a166737e568", "html_url": "https://github.com/rust-lang/rust/commit/43a3796379e59a09d7de7b8e441f4a166737e568", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43a3796379e59a09d7de7b8e441f4a166737e568/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0be213bb79c7c476784e707880b2fae4ce5d5af7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0be213bb79c7c476784e707880b2fae4ce5d5af7", "html_url": "https://github.com/rust-lang/rust/commit/0be213bb79c7c476784e707880b2fae4ce5d5af7"}, {"sha": "fdc0153ef5c6899abcaa0cc26b69a8ef2db8f353", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdc0153ef5c6899abcaa0cc26b69a8ef2db8f353", "html_url": "https://github.com/rust-lang/rust/commit/fdc0153ef5c6899abcaa0cc26b69a8ef2db8f353"}], "stats": {"total": 61, "additions": 31, "deletions": 30}, "files": [{"sha": "271754cb06ee7eb7ffa4ac7a598d62b41a335a22", "filename": "tests/ui/functions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43a3796379e59a09d7de7b8e441f4a166737e568/tests%2Fui%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a3796379e59a09d7de7b8e441f4a166737e568/tests%2Fui%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.rs?ref=43a3796379e59a09d7de7b8e441f4a166737e568", "patch": "@@ -31,12 +31,12 @@ fn bad_multiline(\n extern \"C\" fn extern_fn(\n     _one: u32,\n     _two: u32,\n-    _three: &str,\n+    _three: *const u8,\n     _four: bool,\n     _five: f32,\n     _six: f32,\n     _seven: bool,\n-    _eight: (),\n+    _eight: *const std::ffi::c_void,\n ) {\n }\n "}, {"sha": "e93a7fe2985b3968357e8a69081abd6dd2f67eeb", "filename": "tests/ui/needless_pass_by_value.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43a3796379e59a09d7de7b8e441f4a166737e568/tests%2Fui%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a3796379e59a09d7de7b8e441f4a166737e568/tests%2Fui%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.rs?ref=43a3796379e59a09d7de7b8e441f4a166737e568", "patch": "@@ -11,6 +11,7 @@\n use std::borrow::Borrow;\n use std::collections::HashSet;\n use std::convert::AsRef;\n+use std::mem::MaybeUninit;\n \n // `v` should be warned\n // `w`, `x` and `y` are allowed (moved or mutated)\n@@ -111,8 +112,8 @@ trait FalsePositive {\n }\n \n // shouldn't warn on extern funcs\n-extern \"C\" fn ext(x: String) -> usize {\n-    x.len()\n+extern \"C\" fn ext(x: MaybeUninit<usize>) -> usize {\n+    unsafe { x.assume_init() }\n }\n \n // whitelist RangeArgument"}, {"sha": "37241dbb409e327351ad7d931aefc4643f7a0268", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/43a3796379e59a09d7de7b8e441f4a166737e568/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43a3796379e59a09d7de7b8e441f4a166737e568/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=43a3796379e59a09d7de7b8e441f4a166737e568", "patch": "@@ -1,61 +1,61 @@\n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:17:23\n+  --> $DIR/needless_pass_by_value.rs:18:23\n    |\n LL | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n    |                       ^^^^^^ help: consider changing the type to: `&[T]`\n    |\n    = note: `-D clippy::needless-pass-by-value` implied by `-D warnings`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:31:11\n+  --> $DIR/needless_pass_by_value.rs:32:11\n    |\n LL | fn bar(x: String, y: Wrapper) {\n    |           ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:31:22\n+  --> $DIR/needless_pass_by_value.rs:32:22\n    |\n LL | fn bar(x: String, y: Wrapper) {\n    |                      ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:37:71\n+  --> $DIR/needless_pass_by_value.rs:38:71\n    |\n LL | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n    |                                                                       ^ help: consider taking a reference instead: `&V`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:49:18\n+  --> $DIR/needless_pass_by_value.rs:50:18\n    |\n LL | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Option<Option<String>>`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:62:24\n+  --> $DIR/needless_pass_by_value.rs:63:24\n    |\n LL | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                        ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:62:36\n+  --> $DIR/needless_pass_by_value.rs:63:36\n    |\n LL | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                                    ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:78:49\n+  --> $DIR/needless_pass_by_value.rs:79:49\n    |\n LL | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n    |                                                 ^ help: consider taking a reference instead: `&T`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:18\n+  --> $DIR/needless_pass_by_value.rs:81:18\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                  ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:29\n+  --> $DIR/needless_pass_by_value.rs:81:29\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^^^\n@@ -70,13 +70,13 @@ LL |     let _ = t.to_string();\n    |             ^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:40\n+  --> $DIR/needless_pass_by_value.rs:81:40\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                        ^^^^^^^^ help: consider taking a reference instead: `&Vec<i32>`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:53\n+  --> $DIR/needless_pass_by_value.rs:81:53\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                                     ^^^^^^^^\n@@ -91,85 +91,85 @@ LL |     let _ = v.to_owned();\n    |             ^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:93:12\n+  --> $DIR/needless_pass_by_value.rs:94:12\n    |\n LL |         s: String,\n    |            ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:94:12\n+  --> $DIR/needless_pass_by_value.rs:95:12\n    |\n LL |         t: String,\n    |            ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:103:23\n+  --> $DIR/needless_pass_by_value.rs:104:23\n    |\n LL |     fn baz(&self, _u: U, _s: Self) {}\n    |                       ^ help: consider taking a reference instead: `&U`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:103:30\n+  --> $DIR/needless_pass_by_value.rs:104:30\n    |\n LL |     fn baz(&self, _u: U, _s: Self) {}\n    |                              ^^^^ help: consider taking a reference instead: `&Self`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:125:24\n+  --> $DIR/needless_pass_by_value.rs:126:24\n    |\n LL | fn bar_copy(x: u32, y: CopyWrapper) {\n    |                        ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as Copy\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:131:29\n+  --> $DIR/needless_pass_by_value.rs:132:29\n    |\n LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n    |                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as Copy\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:131:45\n+  --> $DIR/needless_pass_by_value.rs:132:45\n    |\n LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n    |                                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as Copy\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:131:61\n+  --> $DIR/needless_pass_by_value.rs:132:61\n    |\n LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n    |                                                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as Copy\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:143:40\n+  --> $DIR/needless_pass_by_value.rs:144:40\n    |\n LL | fn some_fun<'b, S: Bar<'b, ()>>(_item: S) {}\n    |                                        ^ help: consider taking a reference instead: `&S`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:148:20\n+  --> $DIR/needless_pass_by_value.rs:149:20\n    |\n LL | fn more_fun(_item: impl Club<'static, i32>) {}\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&impl Club<'static, i32>`"}]}