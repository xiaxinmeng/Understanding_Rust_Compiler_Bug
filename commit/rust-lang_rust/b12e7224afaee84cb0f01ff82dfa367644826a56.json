{"sha": "b12e7224afaee84cb0f01ff82dfa367644826a56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMmU3MjI0YWZhZWU4NGNiMGYwMWZmODJkZmEzNjc2NDQ4MjZhNTY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T14:48:45Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T14:48:45Z"}, "message": "move method to function so it can be used in map iterators without borrowing self", "tree": {"sha": "b61aff830ac80127bd3f52a1a3a7deebffdd8b9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b61aff830ac80127bd3f52a1a3a7deebffdd8b9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b12e7224afaee84cb0f01ff82dfa367644826a56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYHJ/NAAoJEFbW7qD8Z6xGEtAP/3toofft3R3gwKdOXrwqRxIv\nZmDzSbsPAgKvIL3GwhPrfo1R0hRxz4qPPR8XkU030krByXs94P5vhV6W3xITtCxt\nW4NzBagCpYlaBo91ypo3GfdW3DpM0y/Ts+eg4+YP3nkHOgSiVk03YBvOnuDAyjI5\nUL8I8tWHjvgT4htm8dj0TfJhQS1Xcw9ft0lQDkIfF0WpveZjiL3uxEgWQfQKvRJ7\nnzRA+HUJsqpOQamUPK7/6OkrKsRX2g/OoYyVl1TsPG6DnUcmvWjp7MxRxRqA2yzt\nVsDamAAMQnhwdN8vQ2tlF86QyI90Ht6RQXnXlxEXzRYp9hjNUDp+SX9fFV/ts0P1\n2/lk8xwM2EooR0qbjRunTCHIRfzxT21M/qKRKnmXbFynzVU/H+JBtO56qgtNM0yj\nszaxUuboHNrXrHqsXGvxD/AibyRu/lbtEYMOBevKeEDdSDNJlcJoijW0AnAuFjDI\neAaUHEV0UH+dChriTan6wLDfpvvNbINs7c4Lpuv1SQotruEHez8C4fBNoGgmZO6X\nkMCrJdu57hJnUgvNjXZm+q0tgHBokfLO2a+UcafpQL1P00TvLM1O0SBVhv+7yrMI\nN9LGh47mxoD/LKJzT4GYYks1VX7gaaE4+4g/8QWPH20Q7wz6OfOnA4iBeifvhzpo\nFenAfrUGpEG1w4SkH3CP\n=Qx/w\n-----END PGP SIGNATURE-----", "payload": "tree b61aff830ac80127bd3f52a1a3a7deebffdd8b9c\nparent 73d7f1d41b0521da8385f9910a20c1c116246dd4\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478270925 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478270925 +0100\n\nmove method to function so it can be used in map iterators without borrowing self"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b12e7224afaee84cb0f01ff82dfa367644826a56", "html_url": "https://github.com/rust-lang/rust/commit/b12e7224afaee84cb0f01ff82dfa367644826a56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b12e7224afaee84cb0f01ff82dfa367644826a56/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d7f1d41b0521da8385f9910a20c1c116246dd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d7f1d41b0521da8385f9910a20c1c116246dd4", "html_url": "https://github.com/rust-lang/rust/commit/73d7f1d41b0521da8385f9910a20c1c116246dd4"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "6ce987d314d3244d2e15c458d8887fed50fd1343", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b12e7224afaee84cb0f01ff82dfa367644826a56/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b12e7224afaee84cb0f01ff82dfa367644826a56/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=b12e7224afaee84cb0f01ff82dfa367644826a56", "patch": "@@ -285,11 +285,6 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         }\n     }\n \n-    pub fn monomorphize_field_ty(&self, f: ty::FieldDef<'tcx>, substs: &'tcx Substs<'tcx>) -> Ty<'tcx> {\n-        let substituted = &f.ty(self.tcx, substs);\n-        self.tcx.normalize_associated_type(&substituted)\n-    }\n-\n     pub fn monomorphize(&self, ty: Ty<'tcx>, substs: &'tcx Substs<'tcx>) -> Ty<'tcx> {\n         let substituted = ty.subst(self.tcx, substs);\n         self.tcx.normalize_associated_type(&substituted)\n@@ -1511,8 +1506,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n                 let iter = src_fields.zip(dst_fields).enumerate();\n                 for (i, (src_f, dst_f)) in iter {\n-                    let src_fty = self.monomorphize_field_ty(src_f, substs_a);\n-                    let dst_fty = self.monomorphize_field_ty(dst_f, substs_b);\n+                    let src_fty = monomorphize_field_ty(self.tcx, src_f, substs_a);\n+                    let dst_fty = monomorphize_field_ty(self.tcx, dst_f, substs_b);\n                     if self.type_size(dst_fty) == 0 {\n                         continue;\n                     }\n@@ -1729,3 +1724,9 @@ impl IntegerExt for layout::Integer {\n         }\n     }\n }\n+\n+\n+pub fn monomorphize_field_ty<'a, 'tcx:'a >(tcx: TyCtxt<'a, 'tcx, 'tcx>, f: ty::FieldDef<'tcx>, substs: &'tcx Substs<'tcx>) -> Ty<'tcx> {\n+    let substituted = &f.ty(tcx, substs);\n+    tcx.normalize_associated_type(&substituted)\n+}"}]}