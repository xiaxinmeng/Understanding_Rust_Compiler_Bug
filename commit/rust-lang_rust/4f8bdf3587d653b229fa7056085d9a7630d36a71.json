{"sha": "4f8bdf3587d653b229fa7056085d9a7630d36a71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOGJkZjM1ODdkNjUzYjIyOWZhNzA1NjA4NWQ5YTc2MzBkMzZhNzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-14T09:36:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-14T09:36:16Z"}, "message": "Auto merge of #4231 - jeremystucki:flat-map, r=flip1995\n\nImplement flat_map lint\n\nFixes #4224\n\nchangelog: New Lint `flat_map_identity` to detect unnecessary calls to `flat_map`", "tree": {"sha": "cd2926e60aa83f4fb6c7ab6d0d554aecd27dc6e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd2926e60aa83f4fb6c7ab6d0d554aecd27dc6e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f8bdf3587d653b229fa7056085d9a7630d36a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f8bdf3587d653b229fa7056085d9a7630d36a71", "html_url": "https://github.com/rust-lang/rust/commit/4f8bdf3587d653b229fa7056085d9a7630d36a71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f8bdf3587d653b229fa7056085d9a7630d36a71/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36f7faee05f2e23176d63f2ea83f449d94d0c5d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/36f7faee05f2e23176d63f2ea83f449d94d0c5d6", "html_url": "https://github.com/rust-lang/rust/commit/36f7faee05f2e23176d63f2ea83f449d94d0c5d6"}, {"sha": "2bfcf89f82193b53c8a5985146c7202a4816dec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bfcf89f82193b53c8a5985146c7202a4816dec6", "html_url": "https://github.com/rust-lang/rust/commit/2bfcf89f82193b53c8a5985146c7202a4816dec6"}], "stats": {"total": 133, "additions": 131, "deletions": 2}, "files": [{"sha": "87dbe891ff38a29005426a999c815d10899652e1", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -947,6 +947,7 @@ Released 2018-09-13\n [`filter_map_next`]: https://rust-lang.github.io/rust-clippy/master/index.html#filter_map_next\n [`filter_next`]: https://rust-lang.github.io/rust-clippy/master/index.html#filter_next\n [`find_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#find_map\n+[`flat_map_identity`]: https://rust-lang.github.io/rust-clippy/master/index.html#flat_map_identity\n [`float_arithmetic`]: https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic\n [`float_cmp`]: https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp\n [`float_cmp_const`]: https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp_const"}, {"sha": "389fe316ade2a6cc4b4fa9979a364fc869a09b1c", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -6,7 +6,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 309 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 310 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "38fa6c9b5bcd154b124ab83bc4062dab66394367", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -777,6 +777,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         methods::CLONE_ON_COPY,\n         methods::EXPECT_FUN_CALL,\n         methods::FILTER_NEXT,\n+        methods::FLAT_MAP_IDENTITY,\n         methods::INTO_ITER_ON_ARRAY,\n         methods::INTO_ITER_ON_REF,\n         methods::ITER_CLONED_COLLECT,\n@@ -1021,6 +1022,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         methods::CHARS_NEXT_CMP,\n         methods::CLONE_ON_COPY,\n         methods::FILTER_NEXT,\n+        methods::FLAT_MAP_IDENTITY,\n         methods::SEARCH_IS_SOME,\n         methods::UNNECESSARY_FILTER_MAP,\n         methods::USELESS_ASREF,"}, {"sha": "39ac112481e45bdad684ee8db84d0e4ee759f4f5", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -342,6 +342,28 @@ declare_clippy_lint! {\n     \"using combination of `filter_map` and `next` which can usually be written as a single method call\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for usage of `flat_map(|x| x)`.\n+    ///\n+    /// **Why is this bad?** Readability, this can be written more concisely by using `flatten`.\n+    ///\n+    /// **Known problems:** None\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// # let iter = vec![vec![0]].into_iter();\n+    /// iter.flat_map(|x| x);\n+    /// ```\n+    /// Can be written as\n+    /// ```rust\n+    /// # let iter = vec![vec![0]].into_iter();\n+    /// iter.flatten();\n+    /// ```\n+    pub FLAT_MAP_IDENTITY,\n+    complexity,\n+    \"call to `flat_map` where `flatten` is sufficient\"\n+}\n+\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.find(_).map(_)`.\n     ///\n@@ -892,6 +914,7 @@ declare_lint_pass!(Methods => [\n     FILTER_NEXT,\n     FILTER_MAP,\n     FILTER_MAP_NEXT,\n+    FLAT_MAP_IDENTITY,\n     FIND_MAP,\n     MAP_FLATTEN,\n     ITER_NTH,\n@@ -932,6 +955,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n             [\"map\", \"find\"] => lint_find_map(cx, expr, arg_lists[1], arg_lists[0]),\n             [\"flat_map\", \"filter\"] => lint_filter_flat_map(cx, expr, arg_lists[1], arg_lists[0]),\n             [\"flat_map\", \"filter_map\"] => lint_filter_map_flat_map(cx, expr, arg_lists[1], arg_lists[0]),\n+            [\"flat_map\", ..] => lint_flat_map_identity(cx, expr, arg_lists[0]),\n             [\"flatten\", \"map\"] => lint_map_flatten(cx, expr, arg_lists[1]),\n             [\"is_some\", \"find\"] => lint_search_is_some(cx, expr, \"find\", arg_lists[1], arg_lists[0]),\n             [\"is_some\", \"position\"] => lint_search_is_some(cx, expr, \"position\", arg_lists[1], arg_lists[0]),\n@@ -2143,6 +2167,56 @@ fn lint_filter_map_flat_map<'a, 'tcx>(\n     }\n }\n \n+/// lint use of `flat_map` for `Iterators` where `flatten` would be sufficient\n+fn lint_flat_map_identity<'a, 'tcx>(\n+    cx: &LateContext<'a, 'tcx>,\n+    expr: &'tcx hir::Expr,\n+    flat_map_args: &'tcx [hir::Expr],\n+) {\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+        let arg_node = &flat_map_args[1].node;\n+\n+        let apply_lint = |message: &str| {\n+            if let hir::ExprKind::MethodCall(_, span, _) = &expr.node {\n+                span_lint_and_sugg(\n+                    cx,\n+                    FLAT_MAP_IDENTITY,\n+                    span.with_hi(expr.span.hi()),\n+                    message,\n+                    \"try\",\n+                    \"flatten()\".to_string(),\n+                    Applicability::MachineApplicable,\n+                );\n+            }\n+        };\n+\n+        if_chain! {\n+            if let hir::ExprKind::Closure(_, _, body_id, _, _) = arg_node;\n+            let body = cx.tcx.hir().body(*body_id);\n+\n+            if let hir::PatKind::Binding(_, _, binding_ident, _) = body.arguments[0].pat.node;\n+            if let hir::ExprKind::Path(hir::QPath::Resolved(_, ref path)) = body.value.node;\n+\n+            if path.segments.len() == 1;\n+            if path.segments[0].ident.as_str() == binding_ident.as_str();\n+\n+            then {\n+                apply_lint(\"called `flat_map(|x| x)` on an `Iterator`\");\n+            }\n+        }\n+\n+        if_chain! {\n+            if let hir::ExprKind::Path(ref qpath) = arg_node;\n+\n+            if match_qpath(qpath, &paths::STD_CONVERT_IDENTITY);\n+\n+            then {\n+                apply_lint(\"called `flat_map(std::convert::identity)` on an `Iterator`\");\n+            }\n+        }\n+    }\n+}\n+\n /// lint searching an Iterator followed by `is_some()`\n fn lint_search_is_some<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,"}, {"sha": "be811da02179c9fe4719432caecd00ad54c397b7", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -95,6 +95,7 @@ pub const SLICE_INTO_VEC: [&str; 4] = [\"alloc\", \"slice\", \"<impl [T]>\", \"into_vec\n pub const SLICE_ITER: [&str; 3] = [\"core\", \"slice\", \"Iter\"];\n pub const STDERR: [&str; 4] = [\"std\", \"io\", \"stdio\", \"stderr\"];\n pub const STDOUT: [&str; 4] = [\"std\", \"io\", \"stdio\", \"stdout\"];\n+pub const STD_CONVERT_IDENTITY: [&str; 3] = [\"std\", \"convert\", \"identity\"];\n pub const STD_MEM_TRANSMUTE: [&str; 3] = [\"std\", \"mem\", \"transmute\"];\n pub const STD_PTR_NULL: [&str; 3] = [\"std\", \"ptr\", \"null\"];\n pub const STRING: [&str; 3] = [\"alloc\", \"string\", \"String\"];"}, {"sha": "63d1be8fe0df242d6f85c098dd14a2e942c5e966", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -6,7 +6,7 @@ pub use lint::Lint;\n pub use lint::LINT_LEVELS;\n \n // begin lint list, do not remove this comment, it\u2019s used in `update_lints`\n-pub const ALL_LINTS: [Lint; 309] = [\n+pub const ALL_LINTS: [Lint; 310] = [\n     Lint {\n         name: \"absurd_extreme_comparisons\",\n         group: \"correctness\",\n@@ -553,6 +553,13 @@ pub const ALL_LINTS: [Lint; 309] = [\n         deprecation: None,\n         module: \"methods\",\n     },\n+    Lint {\n+        name: \"flat_map_identity\",\n+        group: \"complexity\",\n+        desc: \"call to `flat_map` where `flatten` is sufficient\",\n+        deprecation: None,\n+        module: \"methods\",\n+    },\n     Lint {\n         name: \"float_arithmetic\",\n         group: \"restriction\","}, {"sha": "dfe3bd47e1394b4517cdbc88ee1b288a86a0c036", "filename": "tests/ui/unnecessary_flat_map.fixed", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/tests%2Fui%2Funnecessary_flat_map.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/tests%2Fui%2Funnecessary_flat_map.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_flat_map.fixed?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+\n+#![allow(unused_imports)]\n+#![warn(clippy::flat_map_identity)]\n+\n+use std::convert;\n+\n+fn main() {\n+    let iterator = [[0, 1], [2, 3], [4, 5]].iter();\n+    let _ = iterator.flatten();\n+\n+    let iterator = [[0, 1], [2, 3], [4, 5]].iter();\n+    let _ = iterator.flatten();\n+}"}, {"sha": "393b95692554ca200ab9e5ac37f998e350f37d99", "filename": "tests/ui/unnecessary_flat_map.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/tests%2Fui%2Funnecessary_flat_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/tests%2Fui%2Funnecessary_flat_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_flat_map.rs?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+\n+#![allow(unused_imports)]\n+#![warn(clippy::flat_map_identity)]\n+\n+use std::convert;\n+\n+fn main() {\n+    let iterator = [[0, 1], [2, 3], [4, 5]].iter();\n+    let _ = iterator.flat_map(|x| x);\n+\n+    let iterator = [[0, 1], [2, 3], [4, 5]].iter();\n+    let _ = iterator.flat_map(convert::identity);\n+}"}, {"sha": "a1cd5745e494991ca6cc70dc7cb0f9a3f96f9d96", "filename": "tests/ui/unnecessary_flat_map.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4f8bdf3587d653b229fa7056085d9a7630d36a71/tests%2Fui%2Funnecessary_flat_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f8bdf3587d653b229fa7056085d9a7630d36a71/tests%2Fui%2Funnecessary_flat_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_flat_map.stderr?ref=4f8bdf3587d653b229fa7056085d9a7630d36a71", "patch": "@@ -0,0 +1,16 @@\n+error: called `flat_map(|x| x)` on an `Iterator`\n+  --> $DIR/unnecessary_flat_map.rs:10:22\n+   |\n+LL |     let _ = iterator.flat_map(|x| x);\n+   |                      ^^^^^^^^^^^^^^^ help: try: `flatten()`\n+   |\n+   = note: `-D clippy::flat-map-identity` implied by `-D warnings`\n+\n+error: called `flat_map(std::convert::identity)` on an `Iterator`\n+  --> $DIR/unnecessary_flat_map.rs:13:22\n+   |\n+LL |     let _ = iterator.flat_map(convert::identity);\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n+\n+error: aborting due to 2 previous errors\n+"}]}