{"sha": "4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe", "node_id": "C_kwDOAAsO6NoAKDRlNDk0MGUyMWVlMmJkY2RlYjA4NGU2ZDJlZDY3NWNkYWM3NDZkZmU", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2023-05-06T13:21:00Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2023-05-06T13:21:00Z"}, "message": "Add `Arena::alloc_many` to easily get `IdxRange`\n\nThere are no currently ways to get `IdxRange` without manually offseting\n`Idx`. Providing a method for multiple-allocation simplifies this\nprocess and makes it less error-prone.", "tree": {"sha": "71f2a0a716b1292d3a1ce812c7b7695b7163dd5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71f2a0a716b1292d3a1ce812c7b7695b7163dd5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe", "html_url": "https://github.com/rust-lang/rust/commit/4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "300f3a1b43d13b08b2dcd01bdfb992456e3cc012", "url": "https://api.github.com/repos/rust-lang/rust/commits/300f3a1b43d13b08b2dcd01bdfb992456e3cc012", "html_url": "https://github.com/rust-lang/rust/commit/300f3a1b43d13b08b2dcd01bdfb992456e3cc012"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "bb7f21788c60254a68a5b835c20a9afbb39761ff", "filename": "lib/la-arena/src/lib.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe/lib%2Fla-arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe/lib%2Fla-arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fla-arena%2Fsrc%2Flib.rs?ref=4e4940e21ee2bdcdeb084e6d2ed675cdac746dfe", "patch": "@@ -312,6 +312,21 @@ impl<T> Arena<T> {\n         idx\n     }\n \n+    /// Densely allocates multiple values, returning the values\u2019 index range.\n+    ///\n+    /// ```\n+    /// let mut arena = la_arena::Arena::new();\n+    /// let range = arena.alloc_many(0..4);\n+    ///\n+    /// assert_eq!(arena[range], [0, 1, 2, 3]);\n+    /// ```\n+    pub fn alloc_many<II: IntoIterator<Item = T>>(&mut self, iter: II) -> IdxRange<T> {\n+        let start = self.next_idx();\n+        self.extend(iter);\n+        let end = self.next_idx();\n+        IdxRange::new(start..end)\n+    }\n+\n     /// Returns an iterator over the arena\u2019s elements.\n     ///\n     /// ```"}]}