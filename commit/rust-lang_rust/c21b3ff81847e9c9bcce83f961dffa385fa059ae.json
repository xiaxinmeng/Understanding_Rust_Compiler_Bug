{"sha": "c21b3ff81847e9c9bcce83f961dffa385fa059ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMWIzZmY4MTg0N2U5YzliY2NlODNmOTYxZGZmYTM4NWZhMDU5YWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-07T19:44:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-07T19:44:53Z"}, "message": "rustc: Make \"ne\" use traits", "tree": {"sha": "a02f9cfeb3884d22554283373ee0f5dec8bc6c71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a02f9cfeb3884d22554283373ee0f5dec8bc6c71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c21b3ff81847e9c9bcce83f961dffa385fa059ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c21b3ff81847e9c9bcce83f961dffa385fa059ae", "html_url": "https://github.com/rust-lang/rust/commit/c21b3ff81847e9c9bcce83f961dffa385fa059ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c21b3ff81847e9c9bcce83f961dffa385fa059ae/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4d879a2ef67230813bc6e361787731ca8ecdb04", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4d879a2ef67230813bc6e361787731ca8ecdb04", "html_url": "https://github.com/rust-lang/rust/commit/b4d879a2ef67230813bc6e361787731ca8ecdb04"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "1ff4728f47264e020ebc6a37da1155846690070e", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c21b3ff81847e9c9bcce83f961dffa385fa059ae/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c21b3ff81847e9c9bcce83f961dffa385fa059ae/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=c21b3ff81847e9c9bcce83f961dffa385fa059ae", "patch": "@@ -110,7 +110,8 @@ pure fn binop_to_method_name(op: binop) -> Option<~str> {\n       ge => return Some(~\"ge\"),\n       gt => return Some(~\"gt\"),\n       eq => return Some(~\"eq\"),\n-      and | or | ne => return None\n+      ne => return Some(~\"ne\"),\n+      and | or => return None\n     }\n }\n "}, {"sha": "dfc5e84b701dc191436b3503bdf5f9c984c33a4c", "filename": "src/rustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c21b3ff81847e9c9bcce83f961dffa385fa059ae/src%2Frustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c21b3ff81847e9c9bcce83f961dffa385fa059ae/src%2Frustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve.rs?ref=c21b3ff81847e9c9bcce83f961dffa385fa059ae", "patch": "@@ -4530,7 +4530,7 @@ struct Resolver {\n                 self.add_fixed_trait_for_expr(expr.id,\n                                               self.lang_items.ord_trait);\n             }\n-            expr_binary(eq, _, _) => {\n+            expr_binary(eq, _, _) | expr_binary(ne, _, _) => {\n                 self.add_fixed_trait_for_expr(expr.id,\n                                               self.lang_items.eq_trait);\n             }"}, {"sha": "177fa29723772947ba604e826551e2764a6dadfa", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c21b3ff81847e9c9bcce83f961dffa385fa059ae/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c21b3ff81847e9c9bcce83f961dffa385fa059ae/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=c21b3ff81847e9c9bcce83f961dffa385fa059ae", "patch": "@@ -1108,7 +1108,7 @@ fn check_expr_with_unifier(fcx: @fn_ctxt,\n \n         // Hack: Unify the two sides if this is a relational operator.\n         match op {\n-            ast::eq | ast::lt | ast::le | ast::ne | ast::ge | ast::gt => {\n+            ast::eq | ast::ne | ast::lt | ast::le | ast::ge | ast::gt => {\n                 check_expr_with(fcx, rhs, lhs_t);\n             }\n             _ => {}"}]}