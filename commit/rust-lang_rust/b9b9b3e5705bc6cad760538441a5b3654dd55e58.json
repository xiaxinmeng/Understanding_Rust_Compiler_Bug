{"sha": "b9b9b3e5705bc6cad760538441a5b3654dd55e58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5YjliM2U1NzA1YmM2Y2FkNzYwNTM4NDQxYTViMzY1NGRkNTVlNTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-26T03:18:02Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-26T03:18:05Z"}, "message": "rt: Set the initial obstack size to 128 bytes\n\nDouble the size on each allocation", "tree": {"sha": "8aa23fef86e7ebf10daaabcacf60e3f50879e02b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8aa23fef86e7ebf10daaabcacf60e3f50879e02b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9b9b3e5705bc6cad760538441a5b3654dd55e58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9b9b3e5705bc6cad760538441a5b3654dd55e58", "html_url": "https://github.com/rust-lang/rust/commit/b9b9b3e5705bc6cad760538441a5b3654dd55e58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9b9b3e5705bc6cad760538441a5b3654dd55e58/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3eb9a003165e800d2c48083d794cb9879f3be89", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3eb9a003165e800d2c48083d794cb9879f3be89", "html_url": "https://github.com/rust-lang/rust/commit/b3eb9a003165e800d2c48083d794cb9879f3be89"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "554043cf4f10351caf83b615f22a3f9610be391a", "filename": "src/rt/rust_obstack.cpp", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b9b9b3e5705bc6cad760538441a5b3654dd55e58/src%2Frt%2Frust_obstack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b9b9b3e5705bc6cad760538441a5b3654dd55e58/src%2Frt%2Frust_obstack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_obstack.cpp?ref=b9b9b3e5705bc6cad760538441a5b3654dd55e58", "patch": "@@ -20,8 +20,8 @@\n #undef DPRINT\n #define DPRINT(fmt, ...)\n \n-//const size_t DEFAULT_CHUNK_SIZE = 4096;\n-const size_t DEFAULT_CHUNK_SIZE = 500000;\n+const size_t DEFAULT_CHUNK_SIZE = 128;\n+const size_t MAX_CHUNK_SIZE = (1024*64);\n const size_t DEFAULT_ALIGNMENT = 16;\n \n // A single type-tagged allocation in a chunk.\n@@ -42,7 +42,6 @@ rust_obstack_chunk::alloc(size_t len, type_desc *tydesc) {\n \n     if (sizeof(rust_obstack_alloc) + len > size - alen) {\n         DPRINT(\"Not enough space, len=%lu!\\n\", len);\n-        assert(0);      // FIXME\n         return NULL;    // Not enough space.\n     }\n \n@@ -70,9 +69,15 @@ rust_obstack_chunk::mark() {\n // Allocates the given number of bytes in a new chunk.\n void *\n rust_obstack::alloc_new(size_t len, type_desc *tydesc) {\n+    size_t default_chunk_size = DEFAULT_CHUNK_SIZE;\n+    if (chunk) {\n+\tdefault_chunk_size = std::min(chunk->size * 2, MAX_CHUNK_SIZE);\n+    }\n+\n     size_t chunk_size = std::max(sizeof(rust_obstack_alloc) + len,\n-                                 DEFAULT_CHUNK_SIZE);\n-    void *ptr = task->malloc(sizeof(chunk) + chunk_size, \"obstack\");\n+                                 default_chunk_size);\n+    void *ptr = task->malloc(sizeof(rust_obstack_chunk) + chunk_size,\n+\t\t\t     \"obstack\");\n     DPRINT(\"making new chunk at %p, len %lu\\n\", ptr, chunk_size);\n     chunk = new(ptr) rust_obstack_chunk(chunk, chunk_size);\n     return chunk->alloc(len, tydesc);"}]}