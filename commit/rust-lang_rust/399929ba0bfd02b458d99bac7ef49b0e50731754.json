{"sha": "399929ba0bfd02b458d99bac7ef49b0e50731754", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5OTkyOWJhMGJmZDAyYjQ1OGQ5OWJhYzdlZjQ5YjBlNTA3MzE3NTQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-21T00:48:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-21T00:48:28Z"}, "message": "Support ty_obj in trans_field; simple-obj.rs compiles (but crashes).", "tree": {"sha": "443e3a3d4ddce9dfb67436c4aab2f2689027097d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/443e3a3d4ddce9dfb67436c4aab2f2689027097d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/399929ba0bfd02b458d99bac7ef49b0e50731754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/399929ba0bfd02b458d99bac7ef49b0e50731754", "html_url": "https://github.com/rust-lang/rust/commit/399929ba0bfd02b458d99bac7ef49b0e50731754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/399929ba0bfd02b458d99bac7ef49b0e50731754/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86188da3483b35ffd3d118600d55437c5233438c", "url": "https://api.github.com/repos/rust-lang/rust/commits/86188da3483b35ffd3d118600d55437c5233438c", "html_url": "https://github.com/rust-lang/rust/commit/86188da3483b35ffd3d118600d55437c5233438c"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "d0c130052c816310bd3dd0f2aefbc7bd93f5115b", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/399929ba0bfd02b458d99bac7ef49b0e50731754/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399929ba0bfd02b458d99bac7ef49b0e50731754/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=399929ba0bfd02b458d99bac7ef49b0e50731754", "patch": "@@ -1641,13 +1641,24 @@ impure fn trans_field(@block_ctxt cx, &ast.span sp, @ast.expr base,\n         case (typeck.ty_tup(?fields)) {\n             let uint ix = typeck.field_num(cx.fcx.ccx.sess, sp, field);\n             auto v = r.bcx.build.GEP(r.val, vec(C_int(0), C_int(ix as int)));\n-            ret tup(res(r.bcx, v), lv._1);\n+            ret tup(res(r.bcx, v), true);\n         }\n         case (typeck.ty_rec(?fields)) {\n             let uint ix = typeck.field_idx(cx.fcx.ccx.sess, sp,\n                                            field, fields);\n             auto v = r.bcx.build.GEP(r.val, vec(C_int(0), C_int(ix as int)));\n-            ret tup(res(r.bcx, v), lv._1);\n+            ret tup(res(r.bcx, v), true);\n+        }\n+        case (typeck.ty_obj(?methods)) {\n+            let uint ix = typeck.method_idx(cx.fcx.ccx.sess, sp,\n+                                            field, methods);\n+            auto vtbl = r.bcx.build.GEP(r.val,\n+                                        vec(C_int(0),\n+                                            C_int(abi.obj_field_vtbl)));\n+            vtbl = r.bcx.build.Load(vtbl);\n+            auto v =  r.bcx.build.GEP(vtbl, vec(C_int(0),\n+                                                C_int(ix as int)));\n+            ret tup(res(r.bcx, v), true);\n         }\n         case (_) { cx.fcx.ccx.sess.unimpl(\"field variant in trans_field\"); }\n     }\n@@ -1798,12 +1809,15 @@ impure fn trans_args(@block_ctxt cx, &vec[@ast.expr] es, @typeck.ty fn_ty)\n impure fn trans_call(@block_ctxt cx, @ast.expr f,\n                      vec[@ast.expr] args, &ast.ann ann) -> result {\n     auto f_res = trans_lval(cx, f);\n-    check (! f_res._1);\n+    auto faddr = f_res._0.val;\n+    if (f_res._1) {\n+        faddr = f_res._0.bcx.build.Load(faddr);\n+    }\n     auto fn_ty = typeck.expr_ty(f);\n     auto ret_ty = typeck.ann_to_type(ann);\n     auto args_res = trans_args(f_res._0.bcx, args, fn_ty);\n \n-    auto real_retval = args_res._0.build.FastCall(f_res._0.val, args_res._1);\n+    auto real_retval = args_res._0.build.FastCall(faddr, args_res._1);\n     auto retval;\n     if (typeck.type_is_nil(ret_ty)) {\n         retval = C_nil();"}]}