{"sha": "a83eb7ca994a0d0a169ba0120e4f1da63422c517", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4M2ViN2NhOTk0YTBkMGExNjliYTAxMjBlNGYxZGE2MzQyMmM1MTc=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-11-27T15:53:30Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-11-27T16:41:50Z"}, "message": "Make --fix imply --no-deps", "tree": {"sha": "06ff7ac8ae2001dd495160335208075cf25179da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06ff7ac8ae2001dd495160335208075cf25179da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a83eb7ca994a0d0a169ba0120e4f1da63422c517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a83eb7ca994a0d0a169ba0120e4f1da63422c517", "html_url": "https://github.com/rust-lang/rust/commit/a83eb7ca994a0d0a169ba0120e4f1da63422c517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a83eb7ca994a0d0a169ba0120e4f1da63422c517/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eda421e9629a717d31ec03d12b4befd03f5fb50", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eda421e9629a717d31ec03d12b4befd03f5fb50", "html_url": "https://github.com/rust-lang/rust/commit/7eda421e9629a717d31ec03d12b4befd03f5fb50"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "ea06743394d1075ba270830ba5e49b0c783cc3bf", "filename": "src/main.rs", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a83eb7ca994a0d0a169ba0120e4f1da63422c517/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a83eb7ca994a0d0a169ba0120e4f1da63422c517/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=a83eb7ca994a0d0a169ba0120e4f1da63422c517", "patch": "@@ -62,7 +62,7 @@ struct ClippyCmd {\n     unstable_options: bool,\n     cargo_subcommand: &'static str,\n     args: Vec<String>,\n-    clippy_args: String,\n+    clippy_args: Vec<String>,\n }\n \n impl ClippyCmd {\n@@ -99,7 +99,10 @@ impl ClippyCmd {\n             args.insert(0, \"+nightly\".to_string());\n         }\n \n-        let clippy_args: String = old_args.map(|arg| format!(\"{}__CLIPPY_HACKERY__\", arg)).collect();\n+        let mut clippy_args: Vec<String> = old_args.collect();\n+        if cargo_subcommand == \"fix\" && !clippy_args.iter().any(|arg| arg == \"--no-deps\") {\n+            clippy_args.push(\"--no-deps\".into());\n+        }\n \n         ClippyCmd {\n             unstable_options,\n@@ -147,10 +150,15 @@ impl ClippyCmd {\n \n     fn into_std_cmd(self) -> Command {\n         let mut cmd = Command::new(\"cargo\");\n+        let clippy_args: String = self\n+            .clippy_args\n+            .iter()\n+            .map(|arg| format!(\"{}__CLIPPY_HACKERY__\", arg))\n+            .collect();\n \n         cmd.env(self.path_env(), Self::path())\n             .envs(ClippyCmd::target_dir())\n-            .env(\"CLIPPY_ARGS\", self.clippy_args)\n+            .env(\"CLIPPY_ARGS\", clippy_args)\n             .arg(self.cargo_subcommand)\n             .args(&self.args);\n \n@@ -201,6 +209,24 @@ mod tests {\n         assert!(cmd.args.iter().any(|arg| arg.ends_with(\"unstable-options\")));\n     }\n \n+    #[test]\n+    fn fix_implies_no_deps() {\n+        let args = \"cargo clippy --fix -Zunstable-options\"\n+            .split_whitespace()\n+            .map(ToString::to_string);\n+        let cmd = ClippyCmd::new(args);\n+        assert!(cmd.clippy_args.iter().any(|arg| arg == \"--no-deps\"));\n+    }\n+\n+    #[test]\n+    fn no_deps_not_duplicated_with_fix() {\n+        let args = \"cargo clippy --fix -Zunstable-options -- --no-deps\"\n+            .split_whitespace()\n+            .map(ToString::to_string);\n+        let cmd = ClippyCmd::new(args);\n+        assert_eq!(cmd.clippy_args.iter().filter(|arg| *arg == \"--no-deps\").count(), 1);\n+    }\n+\n     #[test]\n     fn check() {\n         let args = \"cargo clippy\".split_whitespace().map(ToString::to_string);"}]}