{"sha": "ba1f036c7a3541729f43ca5a4127adddb4fc2e13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMWYwMzZjN2EzNTQxNzI5ZjQzY2E1YTQxMjdhZGRkYjRmYzJlMTM=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-15T20:29:28Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-15T20:29:28Z"}, "message": "Drop a few unneeded borrows", "tree": {"sha": "5db696a46a2e505d96e803bd301c0fa99327660f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5db696a46a2e505d96e803bd301c0fa99327660f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba1f036c7a3541729f43ca5a4127adddb4fc2e13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1f036c7a3541729f43ca5a4127adddb4fc2e13", "html_url": "https://github.com/rust-lang/rust/commit/ba1f036c7a3541729f43ca5a4127adddb4fc2e13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba1f036c7a3541729f43ca5a4127adddb4fc2e13/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e48eb37b9470a26748c916f7153569906f3c67bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e48eb37b9470a26748c916f7153569906f3c67bf", "html_url": "https://github.com/rust-lang/rust/commit/e48eb37b9470a26748c916f7153569906f3c67bf"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6177e39ba9e4c09cba1c902a6afad49d70731037", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ba1f036c7a3541729f43ca5a4127adddb4fc2e13/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1f036c7a3541729f43ca5a4127adddb4fc2e13/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=ba1f036c7a3541729f43ca5a4127adddb4fc2e13", "patch": "@@ -813,25 +813,25 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     if ty.is_never() {\n                         None\n                     } else {\n-                        Some(match &elem.kind {\n+                        Some(match elem.kind {\n                             // Point at the tail expression when possible.\n                             hir::ExprKind::Block(block, _) => {\n-                                block.expr.as_ref().map_or(block.span, |e| e.span)\n+                                block.expr.map_or(block.span, |e| e.span)\n                             }\n                             _ => elem.span,\n                         })\n                     }\n                 })\n         };\n \n-        if let hir::ExprKind::If(_, _, Some(el)) = &expr.kind {\n+        if let hir::ExprKind::If(_, _, Some(el)) = expr.kind {\n             if let Some(rslt) = check_in_progress(el) {\n                 return rslt;\n             }\n         }\n \n-        if let hir::ExprKind::Match(_, arms, _) = &expr.kind {\n-            let mut iter = arms.iter().filter_map(|arm| check_in_progress(&arm.body));\n+        if let hir::ExprKind::Match(_, arms, _) = expr.kind {\n+            let mut iter = arms.iter().filter_map(|arm| check_in_progress(arm.body));\n             if let Some(span) = iter.next() {\n                 if iter.next().is_none() {\n                     return span;"}]}