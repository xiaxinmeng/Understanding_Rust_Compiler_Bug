{"sha": "9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOGExY2IzOGQ0ZDZkZDE2MjkxYWEwZmQ5ZjE5ZTkzZTUyNjMwMjg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-25T07:18:14Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-25T07:18:14Z"}, "message": "Use os::getcwd instead of env in rustbook (fixup #22727)", "tree": {"sha": "f0604ebcbd4cff2f83eb52ce03cc7d098355a704", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0604ebcbd4cff2f83eb52ce03cc7d098355a704"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "html_url": "https://github.com/rust-lang/rust/commit/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8e4fcb38c2ab0b5180c8fff35ad0454eb0667d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e4fcb38c2ab0b5180c8fff35ad0454eb0667d7", "html_url": "https://github.com/rust-lang/rust/commit/f8e4fcb38c2ab0b5180c8fff35ad0454eb0667d7"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f36d97d6d120d50ef2f42aaa2f47f3de788e49c7", "filename": "src/rustbook/build.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028/src%2Frustbook%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028/src%2Frustbook%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fbuild.rs?ref=9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "patch": "@@ -11,6 +11,7 @@\n //! Implementation of the `build` subcommand, used to compile a book.\n \n use std::env;\n+use std::os;\n use std::old_io;\n use std::old_io::{fs, File, BufferedWriter, TempDir, IoResult};\n \n@@ -81,7 +82,7 @@ fn render(book: &Book, tgt: &Path) -> CliResult<()> {\n \n         let src;\n         if env::args().len() < 3 {\n-            src = env::current_dir().unwrap().clone();\n+            src = os::getcwd().unwrap().clone();\n         } else {\n             src = Path::new(env::args().nth(2).unwrap().clone());\n         }\n@@ -149,7 +150,7 @@ impl Subcommand for Build {\n     }\n     fn usage(&self) {}\n     fn execute(&mut self, term: &mut Term) -> CommandResult<()> {\n-        let cwd = env::current_dir().unwrap();\n+        let cwd = os::getcwd().unwrap();\n         let src;\n         let tgt;\n "}, {"sha": "b9fc011e8b9a584edf198247e2eb1d0de9f67399", "filename": "src/rustbook/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028/src%2Frustbook%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028/src%2Frustbook%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fmain.rs?ref=9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "patch": "@@ -13,6 +13,7 @@\n #![feature(core)]\n #![feature(old_io)]\n #![feature(env)]\n+#![feature(os)]\n #![feature(old_path)]\n #![feature(rustdoc)]\n "}, {"sha": "727a385a8f02811e19eb7a43d87b6500cd369e63", "filename": "src/rustbook/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028/src%2Frustbook%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028/src%2Frustbook%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Ftest.rs?ref=9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "patch": "@@ -17,7 +17,7 @@ use error::Error;\n use term::Term;\n use book;\n use std::old_io::{Command, File};\n-use std::env;\n+use std::os;\n \n struct Test;\n \n@@ -35,7 +35,7 @@ impl Subcommand for Test {\n     }\n     fn usage(&self) {}\n     fn execute(&mut self, term: &mut Term) -> CommandResult<()> {\n-        let cwd = env::current_dir().unwrap();\n+        let cwd = os::getcwd().unwrap();\n         let src = cwd.clone();\n \n         let summary = File::open(&src.join(\"SUMMARY.md\"));"}]}