{"sha": "4ba144d5dd095390e10bd0000ae80c208fb2d74c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYTE0NGQ1ZGQwOTUzOTBlMTBiZDAwMDBhZTgwYzIwOGZiMmQ3NGM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T14:06:42Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:41Z"}, "message": "Update associated_item_def_ids", "tree": {"sha": "ef03bd757b114791dd5687a009dee382a433c92d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef03bd757b114791dd5687a009dee382a433c92d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ba144d5dd095390e10bd0000ae80c208fb2d74c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ba144d5dd095390e10bd0000ae80c208fb2d74c", "html_url": "https://github.com/rust-lang/rust/commit/4ba144d5dd095390e10bd0000ae80c208fb2d74c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ba144d5dd095390e10bd0000ae80c208fb2d74c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27cc0db7a248308fc2634ac68d7608a20b4a1c09", "url": "https://api.github.com/repos/rust-lang/rust/commits/27cc0db7a248308fc2634ac68d7608a20b4a1c09", "html_url": "https://github.com/rust-lang/rust/commit/27cc0db7a248308fc2634ac68d7608a20b4a1c09"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "07b5df38d7f6d484797043c965ec92695aa06cf9", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=4ba144d5dd095390e10bd0000ae80c208fb2d74c", "patch": "@@ -262,7 +262,7 @@ rustc_queries! {\n \n     Other {\n         /// Maps from an impl/trait `DefId to a list of the `DefId`s of its items.\n-        query associated_item_def_ids(_: DefId) -> Lrc<Vec<DefId>> {}\n+        query associated_item_def_ids(_: DefId) -> &'tcx [DefId] {}\n \n         /// Maps from a trait item to the trait item \"descriptor\".\n         query associated_item(_: DefId) -> ty::AssociatedItem {}"}, {"sha": "8e64fa3ac0104294bb06c908b2f0d9248b0bccf3", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=4ba144d5dd095390e10bd0000ae80c208fb2d74c", "patch": "@@ -3106,7 +3106,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n pub struct AssociatedItemsIterator<'a, 'gcx: 'tcx, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'gcx, 'tcx>,\n-    def_ids: Lrc<Vec<DefId>>,\n+    def_ids: &'gcx [DefId],\n     next_index: usize,\n }\n \n@@ -3183,26 +3183,27 @@ fn adt_sized_constraint<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n fn associated_item_def_ids<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                      def_id: DefId)\n-                                     -> Lrc<Vec<DefId>> {\n+                                     -> &'tcx [DefId] {\n     let id = tcx.hir().as_local_hir_id(def_id).unwrap();\n     let item = tcx.hir().expect_item_by_hir_id(id);\n-    let vec: Vec<_> = match item.node {\n+    match item.node {\n         hir::ItemKind::Trait(.., ref trait_item_refs) => {\n-            trait_item_refs.iter()\n-                           .map(|trait_item_ref| trait_item_ref.id)\n-                           .map(|id| tcx.hir().local_def_id_from_hir_id(id.hir_id))\n-                           .collect()\n+            tcx.arena.alloc_from_iter(\n+                trait_item_refs.iter()\n+                               .map(|trait_item_ref| trait_item_ref.id)\n+                               .map(|id| tcx.hir().local_def_id_from_hir_id(id.hir_id))\n+            )\n         }\n         hir::ItemKind::Impl(.., ref impl_item_refs) => {\n-            impl_item_refs.iter()\n-                          .map(|impl_item_ref| impl_item_ref.id)\n-                          .map(|id| tcx.hir().local_def_id_from_hir_id(id.hir_id))\n-                          .collect()\n+            tcx.arena.alloc_from_iter(\n+                impl_item_refs.iter()\n+                              .map(|impl_item_ref| impl_item_ref.id)\n+                              .map(|id| tcx.hir().local_def_id_from_hir_id(id.hir_id))\n+            )\n         }\n-        hir::ItemKind::TraitAlias(..) => vec![],\n+        hir::ItemKind::TraitAlias(..) => &[],\n         _ => span_bug!(item.span, \"associated_item_def_ids: not impl or trait\")\n-    };\n-    Lrc::new(vec)\n+    }\n }\n \n fn def_span<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Span {"}, {"sha": "76aba33b6a404ddcb5cc6243106fb353701a9bb4", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=4ba144d5dd095390e10bd0000ae80c208fb2d74c", "patch": "@@ -13,6 +13,7 @@ crate-type = [\"dylib\"]\n flate2 = \"1.0\"\n log = \"0.4\"\n memmap = \"0.6\"\n+smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }\n rustc = { path = \"../librustc\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }"}, {"sha": "533a1c1c3009e89911a825a366a070d2e9b666e5", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ba144d5dd095390e10bd0000ae80c208fb2d74c/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=4ba144d5dd095390e10bd0000ae80c208fb2d74c", "patch": "@@ -21,6 +21,7 @@ use rustc::hir::map::definitions::DefPathTable;\n use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::svh::Svh;\n \n+use smallvec::SmallVec;\n use std::any::Any;\n use rustc_data_structures::sync::Lrc;\n use std::sync::Arc;\n@@ -108,10 +109,10 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     }\n     variances_of => { tcx.arena.alloc_from_iter(cdata.get_item_variances(def_id.index)) }\n     associated_item_def_ids => {\n-        let mut result = vec![];\n+        let mut result = SmallVec::<[_; 8]>::new();\n         cdata.each_child_of_item(def_id.index,\n           |child| result.push(child.res.def_id()), tcx.sess);\n-        Lrc::new(result)\n+        tcx.arena.alloc_slice(&result)\n     }\n     associated_item => { cdata.get_associated_item(def_id.index) }\n     impl_trait_ref => { cdata.get_impl_trait(def_id.index, tcx) }"}]}