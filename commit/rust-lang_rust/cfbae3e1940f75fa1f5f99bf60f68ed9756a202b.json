{"sha": "cfbae3e1940f75fa1f5f99bf60f68ed9756a202b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYmFlM2UxOTQwZjc1ZmExZjVmOTliZjYwZjY4ZWQ5NzU2YTIwMmI=", "commit": {"author": {"name": "Tobias Bieniek", "email": "tobias.bieniek@gmail.com", "date": "2018-11-13T12:19:24Z"}, "committer": {"name": "Tobias Bieniek", "email": "tobias.bieniek@gmail.com", "date": "2018-11-14T14:01:27Z"}, "message": "core/tests/num: Simplify `test_int_from_str_overflow()` test code\n\nThis commit changes the test code to compare against easier-to-read, static values instead of relying on the result of `wrapping_add()` which may or may not result in the value that we expect.", "tree": {"sha": "2a94ef41c8258e935d0a5d5b7758578ec53fbd1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a94ef41c8258e935d0a5d5b7758578ec53fbd1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b", "html_url": "https://github.com/rust-lang/rust/commit/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b/comments", "author": {"login": "Turbo87", "id": 141300, "node_id": "MDQ6VXNlcjE0MTMwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/141300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Turbo87", "html_url": "https://github.com/Turbo87", "followers_url": "https://api.github.com/users/Turbo87/followers", "following_url": "https://api.github.com/users/Turbo87/following{/other_user}", "gists_url": "https://api.github.com/users/Turbo87/gists{/gist_id}", "starred_url": "https://api.github.com/users/Turbo87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Turbo87/subscriptions", "organizations_url": "https://api.github.com/users/Turbo87/orgs", "repos_url": "https://api.github.com/users/Turbo87/repos", "events_url": "https://api.github.com/users/Turbo87/events{/privacy}", "received_events_url": "https://api.github.com/users/Turbo87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Turbo87", "id": 141300, "node_id": "MDQ6VXNlcjE0MTMwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/141300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Turbo87", "html_url": "https://github.com/Turbo87", "followers_url": "https://api.github.com/users/Turbo87/followers", "following_url": "https://api.github.com/users/Turbo87/following{/other_user}", "gists_url": "https://api.github.com/users/Turbo87/gists{/gist_id}", "starred_url": "https://api.github.com/users/Turbo87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Turbo87/subscriptions", "organizations_url": "https://api.github.com/users/Turbo87/orgs", "repos_url": "https://api.github.com/users/Turbo87/repos", "events_url": "https://api.github.com/users/Turbo87/events{/privacy}", "received_events_url": "https://api.github.com/users/Turbo87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "126a0e2aadcd2c4cbe0b67f9c192047d6f6ec9e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/126a0e2aadcd2c4cbe0b67f9c192047d6f6ec9e6", "html_url": "https://github.com/rust-lang/rust/commit/126a0e2aadcd2c4cbe0b67f9c192047d6f6ec9e6"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "0928f7560e175cd818c3d7353247f0d2c89f0be8", "filename": "src/libcore/tests/num/mod.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs?ref=cfbae3e1940f75fa1f5f99bf60f68ed9756a202b", "patch": "@@ -82,36 +82,28 @@ fn from_str_issue7588() {\n \n #[test]\n fn test_int_from_str_overflow() {\n-    let mut i8_val: i8 = 127;\n-    assert_eq!(\"127\".parse::<i8>().ok(), Some(i8_val));\n+    assert_eq!(\"127\".parse::<i8>().ok(), Some(127i8));\n     assert_eq!(\"128\".parse::<i8>().ok(), None);\n \n-    i8_val = i8_val.wrapping_add(1);\n-    assert_eq!(\"-128\".parse::<i8>().ok(), Some(i8_val));\n+    assert_eq!(\"-128\".parse::<i8>().ok(), Some(-128i8));\n     assert_eq!(\"-129\".parse::<i8>().ok(), None);\n \n-    let mut i16_val: i16 = 32_767;\n-    assert_eq!(\"32767\".parse::<i16>().ok(), Some(i16_val));\n+    assert_eq!(\"32767\".parse::<i16>().ok(), Some(32_767i16));\n     assert_eq!(\"32768\".parse::<i16>().ok(), None);\n \n-    i16_val = i16_val.wrapping_add(1);\n-    assert_eq!(\"-32768\".parse::<i16>().ok(), Some(i16_val));\n+    assert_eq!(\"-32768\".parse::<i16>().ok(), Some(-32_768i16));\n     assert_eq!(\"-32769\".parse::<i16>().ok(), None);\n \n-    let mut i32_val: i32 = 2_147_483_647;\n-    assert_eq!(\"2147483647\".parse::<i32>().ok(), Some(i32_val));\n+    assert_eq!(\"2147483647\".parse::<i32>().ok(), Some(2_147_483_647i32));\n     assert_eq!(\"2147483648\".parse::<i32>().ok(), None);\n \n-    i32_val = i32_val.wrapping_add(1);\n-    assert_eq!(\"-2147483648\".parse::<i32>().ok(), Some(i32_val));\n+    assert_eq!(\"-2147483648\".parse::<i32>().ok(), Some(-2_147_483_648i32));\n     assert_eq!(\"-2147483649\".parse::<i32>().ok(), None);\n \n-    let mut i64_val: i64 = 9_223_372_036_854_775_807;\n-    assert_eq!(\"9223372036854775807\".parse::<i64>().ok(), Some(i64_val));\n+    assert_eq!(\"9223372036854775807\".parse::<i64>().ok(), Some(9_223_372_036_854_775_807i64));\n     assert_eq!(\"9223372036854775808\".parse::<i64>().ok(), None);\n \n-    i64_val = i64_val.wrapping_add(1);\n-    assert_eq!(\"-9223372036854775808\".parse::<i64>().ok(), Some(i64_val));\n+    assert_eq!(\"-9223372036854775808\".parse::<i64>().ok(), Some(-9_223_372_036_854_775_808i64));\n     assert_eq!(\"-9223372036854775809\".parse::<i64>().ok(), None);\n }\n "}]}